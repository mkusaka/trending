<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T01:59:00Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alibaba/fastjson</title>
    <updated>2022-06-03T01:59:00Z</updated>
    <id>tag:github.com,2022-06-03:/alibaba/fastjson</id>
    <link href="https://github.com/alibaba/fastjson" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast JSON parser/generator for Java.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fastjson&lt;/h1&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/alibaba/fastjson/actions/workflows/ci.yaml&#34;&gt;&lt;img src=&#34;https://github.com/alibaba/fastjson/actions/workflows/ci.yaml/badge.svg?branch=master&#34; alt=&#34;Java CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/alibaba/fastjson/branch/master&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/alibaba/fastjson/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/com.alibaba/fastjson/&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/com.alibaba/fastjson/badge.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alibaba/fastjson/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/alibaba/fastjson.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/alibaba/fastjson&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&#34; alt=&#34;Gitpod Ready-to-Code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:fastjson2&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/fastjson2.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://quality-gate.com/dashboard/branches/7816#overview&#34;&gt;&lt;img src=&#34;https://quality-gate.com/backend/api/timeline?branchName=master&amp;amp;projectName=alibaba_fastjson&#34; alt=&#34;QualityGate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fastjson is a Java library that can be used to convert Java Objects into their JSON representation. It can also be used to convert a JSON string to an equivalent Java object. Fastjson can work with arbitrary Java objects including pre-existing objects that you do not have source-code of.&lt;/p&gt; &#xA;&lt;h3&gt;Fastjson Goals&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide the best performance on the server-side and android client&lt;/li&gt; &#xA; &lt;li&gt;Provide simple toJSONString() and parseObject() methods to convert Java objects to JSON and vice-versa&lt;/li&gt; &#xA; &lt;li&gt;Allow pre-existing unmodifiable objects to be converted to and from JSON&lt;/li&gt; &#xA; &lt;li&gt;Extensive support of Java Generics&lt;/li&gt; &#xA; &lt;li&gt;Allow custom representations for objects&lt;/li&gt; &#xA; &lt;li&gt;Support arbitrarily complex objects (with deep inheritance hierarchies and extensive use of generic types)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/fastjson/master/logo.jpg&#34; alt=&#34;fastjson&#34; title=&#34;fastjson&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/fastjson/wiki&#34;&gt;Documentation Home&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nschaffner/fastjson/raw/master/CONTRIBUTING.md&#34;&gt;Contributing Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Benchmark&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/eishay/jvm-serializers/wiki&#34;&gt;https://github.com/eishay/jvm-serializers/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://repo1.maven.org/maven2/com/alibaba/fastjson/&#34;&gt;maven&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://search.maven.org/remote_content?g=com.alibaba&amp;amp;a=fastjson&amp;amp;v=LATEST&#34;&gt;the latest JAR&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Maven&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;fastjson&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;1.2.76&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;fastjson&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;1.1.72.android&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Gradle via JCenter&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;compile &#39;com.alibaba:fastjson:1.2.76&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;compile &#39;com.alibaba:fastjson:1.1.72.android&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please see this &lt;a href=&#34;https://github.com/alibaba/fastjson/wiki#download&#34;&gt;Wiki Download Page&lt;/a&gt; for more repository info.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;em&gt;License&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Fastjson is released under the &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/fastjson/master/license.txt&#34;&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 1999-2020 Alibaba Group Holding Ltd.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at the following link.&#xA;&#xA;     http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>helix-editor/helix</title>
    <updated>2022-06-03T01:59:00Z</updated>
    <id>tag:github.com,2022-06-03:/helix-editor/helix</id>
    <link href="https://github.com/helix-editor/helix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A post-modern modal text editor.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Helix&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/helix-editor/helix/actions&#34;&gt;&lt;img src=&#34;https://github.com/helix-editor/helix/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/helix-editor/helix/master/screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A kakoune / neovim inspired editor, written in Rust.&lt;/p&gt; &#xA;&lt;p&gt;The editing model is very heavily based on kakoune; during development I found myself agreeing with most of kakoune&#39;s design decisions.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see the &lt;a href=&#34;https://helix-editor.com&#34;&gt;website&lt;/a&gt; or &lt;a href=&#34;https://docs.helix-editor.com/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All shortcuts/keymaps can be found &lt;a href=&#34;https://docs.helix-editor.com/keymap.html&#34;&gt;in the documentation on the website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/helix-editor/helix/wiki/Troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vim-like modal editing&lt;/li&gt; &#xA; &lt;li&gt;Multiple selections&lt;/li&gt; &#xA; &lt;li&gt;Built-in language server support&lt;/li&gt; &#xA; &lt;li&gt;Smart, incremental syntax highlighting and code editing via tree-sitter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s a terminal-based editor first, but I&#39;d like to explore a custom renderer (similar to emacs) in wgpu or skulpin.&lt;/p&gt; &#xA;&lt;p&gt;Note: Only certain languages have indentation definitions at the moment. Check &lt;code&gt;runtime/queries/&amp;lt;lang&amp;gt;/&lt;/code&gt; for &lt;code&gt;indents.scm&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Packages are available for various distributions (see &lt;a href=&#34;https://docs.helix-editor.com/install.html&#34;&gt;Installation docs&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;If you would like to build from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/helix-editor/helix&#xA;cd helix&#xA;cargo install --path helix-term&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install the &lt;code&gt;hx&lt;/code&gt; binary to &lt;code&gt;$HOME/.cargo/bin&lt;/code&gt; and build tree-sitter grammars. If you want to customize your &lt;code&gt;languages.toml&lt;/code&gt; config, tree-sitter grammars may be manually fetched and built with &lt;code&gt;hx --grammar fetch&lt;/code&gt; and &lt;code&gt;hx --grammar build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Helix also needs its runtime files so make sure to copy/symlink the &lt;code&gt;runtime/&lt;/code&gt; directory into the config directory (for example &lt;code&gt;~/.config/helix/runtime&lt;/code&gt; on Linux/macOS, or &lt;code&gt;%AppData%/helix/runtime&lt;/code&gt; on Windows).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;command&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;xcopy runtime %AppData%/helix/runtime&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;linux/macos&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ln -s $PWD/runtime ~/.config/helix/runtime&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This location can be overridden via the &lt;code&gt;HELIX_RUNTIME&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;Packages already solve this for you by wrapping the &lt;code&gt;hx&lt;/code&gt; binary with a wrapper that sets the variable to the install dir.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: running via cargo also doesn&#39;t require setting explicit &lt;code&gt;HELIX_RUNTIME&lt;/code&gt; path, it will automatically detect the &lt;code&gt;runtime&lt;/code&gt; directory in the project root.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In order to use LSP features like auto-complete, you will need to &lt;a href=&#34;https://github.com/helix-editor/helix/wiki/How-to-install-the-default-language-servers&#34;&gt;install the appropriate Language Server&lt;/a&gt; for a language.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/helix/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/helix.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;MacOS&lt;/h2&gt; &#xA;&lt;p&gt;Helix can be installed on MacOS through homebrew via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew tap helix-editor/helix&#xA;brew install helix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Contributing guidelines can be found &lt;a href=&#34;https://raw.githubusercontent.com/helix-editor/helix/master/docs/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Getting help&lt;/h1&gt; &#xA;&lt;p&gt;Your question might already be answered on the &lt;a href=&#34;https://github.com/helix-editor/helix/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Discuss the project on the community &lt;a href=&#34;https://matrix.to/#/#helix-community:matrix.org&#34;&gt;Matrix Space&lt;/a&gt; (make sure to join &lt;code&gt;#helix-editor:matrix.org&lt;/code&gt; if you&#39;re on a client that doesn&#39;t support Matrix Spaces yet).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Asabeneh/30-Days-Of-JavaScript</title>
    <updated>2022-06-03T01:59:00Z</updated>
    <id>tag:github.com,2022-06-03:/Asabeneh/30-Days-Of-JavaScript</id>
    <link href="https://github.com/Asabeneh/30-Days-Of-JavaScript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;30 Days Of JavaScript&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;# Day&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Topics&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;01&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&#34;&gt;Introduction&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;02&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&#34;&gt;Data Types&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;03&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/03_Day_Booleans_operators_date/03_booleans_operators_date.md&#34;&gt;Booleans, Operators, Date&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;04&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/04_Day_Conditionals/04_day_conditionals.md&#34;&gt;Conditionals&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;05&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/05_Day_Arrays/05_day_arrays.md&#34;&gt;Arrays&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;06&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/06_Day_Loops/06_day_loops.md&#34;&gt;Loops&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;07&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/07_Day_Functions/07_day_functions.md&#34;&gt;Functions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;08&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/08_Day_Objects/08_day_objects.md&#34;&gt;Objects&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;09&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/09_Day_Higher_order_functions/09_day_higher_order_functions.md&#34;&gt;Higher Order Functions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/10_Day_Sets_and_Maps/10_day_Sets_and_Maps.md&#34;&gt;Sets and Maps&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/11_Day_Destructuring_and_spreading/11_day_destructuring_and_spreading.md&#34;&gt;Destructuring and Spreading&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/12_Day_Regular_expressions/12_day_regular_expressions.md&#34;&gt;Regular Expressions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/13_Day_Console_object_methods/13_day_console_object_methods.md&#34;&gt;Console Object Methods&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/14_Day_Error_handling/14_day_error_handling.md&#34;&gt;Error Handling&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/15_Day_Classes/15_day_classes.md&#34;&gt;Classes&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/16_Day_JSON/16_day_json.md&#34;&gt;JSON&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/17_Day_Web_storages/17_day_web_storages.md&#34;&gt;Web Storages&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/18_Day_Promises/18_day_promises.md&#34;&gt;Promises&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/19_Day_Closures/19_day_closures.md&#34;&gt;Closure&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/20_Day_Writing_clean_codes/20_day_writing_clean_codes.md&#34;&gt;Writing Clean Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/21_Day_DOM/21_day_dom.md&#34;&gt;DOM&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/22_Day_Manipulating_DOM_object/22_day_manipulating_DOM_object.md&#34;&gt;Manipulating DOM Object&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;23&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/23_Day_Event_listeners/23_day_event_listeners.md&#34;&gt;Event Listeners&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/24_Day_Project_solar_system/24_day_project_solar_system.md&#34;&gt;Mini Project: Solar System&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/25_Day_World_countries_data_visualization_1/25_day_world_countries_data_visualization_1.md&#34;&gt;Mini Project: World Countries Data Visualization 1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;26&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/26_Day_World_countries_data_visualization_2/26_day_world_countries_data_visualization_2.md&#34;&gt;Mini Project: World Countries Data Visualization 2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;27&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/27_Day_Mini_project_portfolio/27_day_mini_project_portfolio.md&#34;&gt;Mini Project: Portfolio&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;28&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/28_Day_Mini_project_leaderboard/28_day_mini_project_leaderboard.md&#34;&gt;Mini Project: Leaderboard&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;29&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/29_Day_Mini_project_animating_characters/29_day_mini_project_animating_characters.md&#34;&gt;Mini Project: Animating characters&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/30_Day_Mini_project_final/30_day_mini_project_final.md&#34;&gt;Final Projects&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;small&gt;Support the &lt;strong&gt;author&lt;/strong&gt; to create more educational materials&lt;/small&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://www.paypal.me/asabeneh&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/paypal_lg.png&#34; alt=&#34;Paypal Logo&#34; style=&#34;width:10%&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; 30 Days Of JavaScript: Introduction&lt;/h1&gt; &#xA; &lt;a class=&#34;header-badge&#34; target=&#34;_blank&#34; href=&#34;https://www.linkedin.com/in/asabeneh/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&#34;&gt; &lt;/a&gt; &#xA; &lt;a class=&#34;header-badge&#34; target=&#34;_blank&#34; href=&#34;https://twitter.com/Asabeneh&#34;&gt; &lt;img alt=&#34;Twitter Follow&#34; src=&#34;https://img.shields.io/twitter/follow/asabeneh?style=social&#34;&gt; &lt;/a&gt; &#xA; &lt;p&gt;&lt;sub&gt;Author: &lt;a href=&#34;https://www.linkedin.com/in/asabeneh/&#34; target=&#34;_blank&#34;&gt;Asabeneh Yetayeh&lt;/a&gt;&lt;br&gt; &lt;small&gt; January, 2020&lt;/small&gt; &lt;/sub&gt;&lt;/p&gt; &#xA; &lt;div&gt; &#xA;  &lt;p&gt;🇬🇧 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&#34;&gt;English&lt;/a&gt; 🇪🇸 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Spanish/readme.md&#34;&gt;Spanish&lt;/a&gt; 🇷🇺 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/RU/README.md&#34;&gt;Russian&lt;/a&gt; 🇹🇷 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Turkish/readMe.md&#34;&gt;Turkish&lt;/a&gt; 🇦🇿 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Azerbaijani/readMe.md&#34;&gt;Azerbaijan&lt;/a&gt; 🇰🇷 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Korea/README.md&#34;&gt;Korean&lt;/a&gt; 🇻🇳 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Vietnamese/README.md&#34;&gt;Vietnamese&lt;/a&gt; 🇵🇱 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Polish/readMe.md&#34;&gt;Polish&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;  &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&#34;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1_1.png&#34; alt=&#34;Thirty Days Of JavaScript&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#30-days-of-javascript&#34;&gt;30 Days Of JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1&#34;&gt;📔 Day 1&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#setup&#34;&gt;Setup&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#install-nodejs&#34;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#browser&#34;&gt;Browser&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-google-chrome&#34;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#opening-google-chrome-console&#34;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#writing-code-on-browser-console&#34;&gt;Writing Code on Browser Console&lt;/a&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog&#34;&gt;Console.log&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog-with-multiple-arguments&#34;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments&#34;&gt;Comments&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#syntax&#34;&gt;Syntax&lt;/a&gt;&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#arithmetics&#34;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#code-editor&#34;&gt;Code Editor&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-visual-studio-code&#34;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#how-to-use-visual-studio-code&#34;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#adding-javascript-to-a-web-page&#34;&gt;Adding JavaScript to a Web Page&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#inline-script&#34;&gt;Inline Script&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#internal-script&#34;&gt;Internal Script&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#external-script&#34;&gt;External Script&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#multiple-external-scripts&#34;&gt;Multiple External Scripts&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction-to-data-types&#34;&gt;Introduction to Data types&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#numbers&#34;&gt;Numbers&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#strings&#34;&gt;Strings&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#booleans&#34;&gt;Booleans&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#undefined&#34;&gt;Undefined&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#null&#34;&gt;Null&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#checking-data-types&#34;&gt;Checking Data Types&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments-again&#34;&gt;Comments Again&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#variables&#34;&gt;Variables&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1-exercises&#34;&gt;💻 Day 1: Exercises&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;📔 Day 1&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of JavaScript programming challenge. In this challenge you will learn everything you need to be a JavaScript programmer, and in general, the whole concept of programming. In the end of the challenge you will get a 30DaysOfJavaScript programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&#34;https://t.me/ThirtyDaysOfJavaScript&#34;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A 30DaysOfJavaScript&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. JavaScript is the language of the web. I enjoy using and teaching JavaScript and I hope you will do so too.&lt;/p&gt; &#xA;&lt;p&gt;In this step by step JavaScript challenge, you will learn JavaScript, the most popular programming language in the history of mankind. JavaScript is used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt; and nowadays JavaScript can be used for &lt;strong&gt;&lt;em&gt;machine learning&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;AI&lt;/em&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;em&gt;JavaScript (JS)&lt;/em&gt;&lt;/strong&gt; has increased in popularity in recent years and has been the leading programming language for six consecutive years and is the most used programming language on Github.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;No prior knowledge of programming is required to follow this challenge. You need only:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Motivation&lt;/li&gt; &#xA; &lt;li&gt;A computer&lt;/li&gt; &#xA; &lt;li&gt;Internet&lt;/li&gt; &#xA; &lt;li&gt;A browser&lt;/li&gt; &#xA; &lt;li&gt;A code editor&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. If you have those, then you have everything to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Install Node.js&lt;/h3&gt; &#xA;&lt;p&gt;You may not need Node.js right now but you may need it for later. Install &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/download_node.png&#34; alt=&#34;Node download&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After downloading double click and install&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/install_node.png&#34; alt=&#34;Install node&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;asabeneh $ node -v&#xA;v12.14.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When making this tutorial I was using Node version 12.14.0, but now the recommended version of Node.js for download is v14.17.6, by the time you use this material you may have a higher Node.js version.&lt;/p&gt; &#xA;&lt;h3&gt;Browser&lt;/h3&gt; &#xA;&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; &#xA;&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;Google Chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/google_chrome.png&#34; alt=&#34;Google Chrome&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; &#xA;&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_developer_tool.png&#34; alt=&#34;Opening chrome&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To open the Chrome console using a keyboard shortcut.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Mac&#xA;Command+Option+J&#xA;&#xA;Windows/Linux:&#xA;Ctl+Shift+J&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_chrome_console_shortcut.png&#34; alt=&#34;Opening console&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_on_chrome_console.png&#34; alt=&#34;write code on console&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; &#xA;&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Mac&#xA;Command+Option+I&#xA;&#xA;Windows:&#xA;Ctl+Shift+I&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Console.log&lt;/h5&gt; &#xA;&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &lt;code&gt;&#39;Hello, World&#39;&lt;/code&gt; as input data or argument in the console.log() function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello, World!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; &#xA;&lt;p&gt;The &lt;strong&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/strong&gt; function can take multiple parameters separated by commas. The syntax looks like as follows:&lt;strong&gt;&lt;code&gt;console.log(param1, param2, param3)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/console_log_multipl_arguments.png&#34; alt=&#34;console log multiple arguments&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)&#xA;console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)&#xA;console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt; can take multiple arguments.&lt;/p&gt; &#xA;&lt;p&gt;Congratulations! You wrote your first JavaScript code using &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Comments&lt;/h5&gt; &#xA;&lt;p&gt;We can add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code. In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this &lt;code&gt;//&lt;/code&gt; is also a comment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// This is the first comment  &#xA;// This is the second comment  &#xA;// I am a single line comment&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/*&#xA;This is a multiline comment  &#xA; Multiline comments can take multiple lines  &#xA; JavaScript is the language of the web  &#xA; */&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Syntax&lt;/h5&gt; &#xA;&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences, compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is the structure of statements in a computer language. Programming languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/raising_syntax_error.png&#34; alt=&#34;Error&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello, World!&#39;)&#xA;console.log(&#39;Hello, World!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt;. If we are printing text or string using &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello, World!&#39;)&#xA;console.log(&#34;Hello, World!&#34;)&#xA;console.log(`Hello, World!`)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Arithmetics&lt;/h4&gt; &#xA;&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt; on Google Chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. It is possible to write JavaScript code on Google Chrome console can directly without the &lt;strong&gt;&lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/arithmetic.png&#34; alt=&#34;Arithmetic&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(2 + 3) // Addition&#xA;console.log(3 - 2) // Subtraction&#xA;console.log(2 * 3) // Multiplication&#xA;console.log(3 / 2) // Division&#xA;console.log(3 % 2) // Modulus - finding remainder&#xA;console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Code Editor&lt;/h3&gt; &#xA;&lt;p&gt;We can write our codes on the browser console, but it won&#39;t be for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days of JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; &#xA;&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; &#xA;&lt;p&gt;Visual Studio Code is a very popular open-source text editor. I would recommend to &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode.png&#34; alt=&#34;Vscode&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; &#xA;&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; &#xA;&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode_ui.png&#34; alt=&#34;Vscode ui&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/adding_project_to_vscode.png&#34; alt=&#34;Vscode add project&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_project_on_vscode.png&#34; alt=&#34;Vscode open project&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/scripts_on_vscode.png&#34; alt=&#34;script file&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vsc_live_server.png&#34; alt=&#34;Installing Live Server&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/running_script.png&#34; alt=&#34;running script&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/launched_on_new_tab.png&#34; alt=&#34;coding running&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Adding JavaScript to a Web Page&lt;/h2&gt; &#xA;&lt;p&gt;JavaScript can be added to a web page in three different ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;em&gt;Inline script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;em&gt;Internal script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;em&gt;External script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;em&gt;Multiple External scripts&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following sections show different ways of adding JavaScript code to your web page.&lt;/p&gt; &#xA;&lt;h3&gt;Inline Script&lt;/h3&gt; &#xA;&lt;p&gt;Create a project folder on your desktop or in any location, name it 30DaysOfJS and create an &lt;strong&gt;&lt;em&gt;&lt;code&gt;index.html&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt; file in the project folder. Then paste the following code and open it in a browser, for example &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;30DaysOfScript:Inline Script&amp;lt;/title&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&#xA;    &amp;lt;button onclick=&#34;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;)&#34;&amp;gt;Click Me&amp;lt;/button&amp;gt;&#xA;  &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, you just wrote your first inline script. We can create a pop up alert message using the &lt;em&gt;&lt;code&gt;alert()&lt;/code&gt;&lt;/em&gt; built-in function.&lt;/p&gt; &#xA;&lt;h3&gt;Internal Script&lt;/h3&gt; &#xA;&lt;p&gt;The internal script can be written in the &lt;em&gt;&lt;code&gt;head&lt;/code&gt;&lt;/em&gt; or the &lt;em&gt;&lt;code&gt;body&lt;/code&gt;&lt;/em&gt;, but it is preferred to put it on the body of the HTML document. First, let us write on the head part of the page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;&#xA;    &amp;lt;script&amp;gt;&#xA;      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)&#xA;    &amp;lt;/script&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is how we write an internal script most of the time. Writing the JavaScript code in the body section is the most preferred option. Open the browser console to see the output from the &lt;code&gt;console.log()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&#xA;    &amp;lt;button onclick=&#34;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;);&#34;&amp;gt;Click Me&amp;lt;/button&amp;gt;&#xA;    &amp;lt;script&amp;gt;&#xA;      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)&#xA;    &amp;lt;/script&amp;gt;&#xA;  &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open the browser console to see the output from the &lt;code&gt;console.log()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_vscode.png&#34; alt=&#34;js code from vscode&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;External Script&lt;/h3&gt; &#xA;&lt;p&gt;Similar to the internal script, the external script link can be on the header or body, but it is preferred to put it in the body. First, we should create an external JavaScript file with .js extension. All files ending with .js extension are JavaScript files. Create a file named introduction.js inside your project directory and write the following code and link this .js file at the bottom of the body.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;External scripts in the &lt;em&gt;head&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;&#xA;    &amp;lt;script src=&#34;introduction.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;External scripts in the &lt;em&gt;body&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&#xA;    &amp;lt;!-- JavaScript external link could be in the header or in the body --&amp;gt; &#xA;    &amp;lt;!-- Before the closing tag of the body is the recommended place to put the external JavaScript script --&amp;gt;&#xA;    &amp;lt;script src=&#34;introduction.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;  &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open the browser console to see the output of the &lt;code&gt;console.log()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Multiple External Scripts&lt;/h3&gt; &#xA;&lt;p&gt;We can also link multiple external JavaScript files to a web page. Create a &lt;code&gt;helloworld.js&lt;/code&gt; file inside the 30DaysOfJS folder and write the following code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello, World!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;Multiple External Scripts&amp;lt;/title&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&#xA;    &amp;lt;script src=&#34;./helloworld.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;    &amp;lt;script src=&#34;./introduction.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;  &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Your main.js file should be below all other scripts&lt;/em&gt;. It is very important to remember this.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/multiple_script.png&#34; alt=&#34;Multiple Script&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction to Data types&lt;/h2&gt; &#xA;&lt;p&gt;In JavaScript and also other programming languages, there are different types of data types. The following are JavaScript primitive data types: &lt;em&gt;String, Number, Boolean, undefined, Null&lt;/em&gt;, and &lt;em&gt;Symbol&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Numbers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integers: Integer (negative, zero and positive) numbers Example: ... -3, -2, -1, 0, 1, 2, 3 ...&lt;/li&gt; &#xA; &lt;li&gt;Float-point numbers: Decimal number Example ... -3.5, -2.25, -1.0, 0.0, 1.1, 2.2, 3.5 ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Strings&lt;/h3&gt; &#xA;&lt;p&gt;A collection of one or more characters between two single quotes, double quotes, or backticks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&#39;a&#39;&#xA;&#39;Asabeneh&#39;&#xA;&#34;Asabeneh&#34;&#xA;&#39;Finland&#39;&#xA;&#39;JavaScript is a beautiful programming language&#39;&#xA;&#39;I love teaching&#39;&#xA;&#39;I hope you are enjoying the first day&#39;&#xA;`We can also create a string using a backtick`&#xA;&#39;A string could be just as small as one character or as big as many pages&#39;&#xA;&#39;Any data type under a single quote, double quote or backtick is a string&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Booleans&lt;/h3&gt; &#xA;&lt;p&gt;A boolean value is either True or False. Any comparisons returns a boolean value, which is either true or false.&lt;/p&gt; &#xA;&lt;p&gt;A boolean data type is either a true or false value.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;true // if the light is on, the value is true&#xA;false // if the light is off, the value is false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Undefined&lt;/h3&gt; &#xA;&lt;p&gt;In JavaScript, if we don&#39;t assign a value to a variable, the value is undefined. In addition to that, if a function is not returning anything, it returns undefined.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let firstName&#xA;console.log(firstName) // undefined, because it is not assigned to a value yet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Null&lt;/h3&gt; &#xA;&lt;p&gt;Null in JavaScript means an empty value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let emptyValue = null&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Checking Data Types&lt;/h2&gt; &#xA;&lt;p&gt;To check the data type of a certain variable, we use the &lt;strong&gt;typeof&lt;/strong&gt; operator. See the following example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(typeof &#39;Asabeneh&#39;) // string&#xA;console.log(typeof 5) // number&#xA;console.log(typeof true) // boolean&#xA;console.log(typeof null) // object type&#xA;console.log(typeof undefined) // undefined&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Comments Again&lt;/h2&gt; &#xA;&lt;p&gt;Remember that commenting in JavaScript is similar to other programming languages. Comments are important in making your code more readable. There are two ways of commenting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Single line commenting&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Multiline commenting&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// commenting the code itself with a single comment&#xA;// let firstName = &#39;Asabeneh&#39;; single line comment&#xA;// let lastName = &#39;Yetayeh&#39;; single line comment&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multiline commenting:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/*&#xA;  let location = &#39;Helsinki&#39;;&#xA;  let age = 100;&#xA;  let isMarried = true;&#xA;  This is a Multiple line comment&#xA;*/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Variables&lt;/h2&gt; &#xA;&lt;p&gt;Variables are &lt;em&gt;containers&lt;/em&gt; of data. Variables are used to &lt;em&gt;store&lt;/em&gt; data in a memory location. When a variable is declared, a memory location is reserved. When a variable is assigned to a value (data), the memory space will be filled with that data. To declare a variable, we use &lt;em&gt;var&lt;/em&gt;, &lt;em&gt;let&lt;/em&gt;, or &lt;em&gt;const&lt;/em&gt; keywords.&lt;/p&gt; &#xA;&lt;p&gt;For a variable that changes at a different time, we use &lt;em&gt;let&lt;/em&gt;. If the data does not change at all, we use &lt;em&gt;const&lt;/em&gt;. For example, PI, country name, gravity do not change, and we can use &lt;em&gt;const&lt;/em&gt;. We will not use var in this challenge and I don&#39;t recommend you to use it. It is error prone way of declaring variable it has lots of leak. We will talk more about var, let, and const in detail in other sections (scope). For now, the above explanation is enough.&lt;/p&gt; &#xA;&lt;p&gt;A valid JavaScript variable name must follow the following rules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A JavaScript variable name should not begin with a number.&lt;/li&gt; &#xA; &lt;li&gt;A JavaScript variable name does not allow special characters except dollar sign and underscore.&lt;/li&gt; &#xA; &lt;li&gt;A JavaScript variable name follows a camelCase convention.&lt;/li&gt; &#xA; &lt;li&gt;A JavaScript variable name should not have space between words.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following are examples of valid JavaScript variables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;firstName&#xA;lastName&#xA;country&#xA;city&#xA;capitalCity&#xA;age&#xA;isMarried&#xA;&#xA;first_name&#xA;last_name&#xA;is_married&#xA;capital_city&#xA;&#xA;num1&#xA;num_1&#xA;_num_1&#xA;$num1&#xA;year2020&#xA;year_2020&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first and second variables on the list follows the camelCase convention of declaring in JavaScript. In this material, we will use camelCase variables(camelWithOneHump). We use CamelCase(CamelWithTwoHump) to declare classes, we will discuss about classes and objects in other section.&lt;/p&gt; &#xA;&lt;p&gt;Example of invalid variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;  first-name&#xA;  1_num&#xA;  num_#_1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let us declare variables with different data types. To declare a variable, we need to use &lt;em&gt;let&lt;/em&gt; or &lt;em&gt;const&lt;/em&gt; keyword before the variable name. Following the variable name, we write an equal sign (assignment operator), and a value(assigned data).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Syntax&#xA;let nameOfVariable = value&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The nameOfVriable is the name that stores different data of value. See below for detail examples.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples of declared variables&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Declaring different variables of different data types&#xA;let firstName = &#39;Asabeneh&#39; // first name of a person&#xA;let lastName = &#39;Yetayeh&#39; // last name of a person&#xA;let country = &#39;Finland&#39; // country&#xA;let city = &#39;Helsinki&#39; // capital city&#xA;let age = 100 // age in years&#xA;let isMarried = true&#xA;&#xA;console.log(firstName, lastName, country, city, age, isMarried)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Asabeneh Yetayeh Finland Helsinki 100 true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Declaring variables with number values&#xA;let age = 100 // age in years&#xA;const gravity = 9.81 // earth gravity  in m/s2&#xA;const boilingPoint = 100 // water boiling point, temperature in °C&#xA;const PI = 3.14 // geometrical constant&#xA;console.log(gravity, boilingPoint, PI)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;9.81 100 3.14&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Variables can also be declaring in one line separated by comma, however I recommend to use a seperate line to make code more readble&#xA;let name = &#39;Asabeneh&#39;, job = &#39;teacher&#39;, live = &#39;Finland&#39;&#xA;console.log(name, job, live)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Asabeneh teacher Finland&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you run &lt;em&gt;index.html&lt;/em&gt; file in the 01-Day folder you should get this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1.png&#34; alt=&#34;Day one&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;🌕 You are amazing! You have just completed day 1 challenge and you are on your way to greatness. Now do some exercises for your brain and muscle.&lt;/p&gt; &#xA;&lt;h1&gt;💻 Day 1: Exercises&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Write a single line comment which says, &lt;em&gt;comments can make code readable&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Write another single comment which says, &lt;em&gt;Welcome to 30DaysOfJavaScript&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Write a multiline comment which says, &lt;em&gt;comments can make code readable, easy to reuse&lt;/em&gt; &lt;em&gt;and informative&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a variable.js file and declare variables and assign string, boolean, undefined and null data types&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create datatypes.js file and use the JavaScript &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; operator to check different data types. Check the data type of each variable&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare four variables without assigning values&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare four variables with assigned values&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in multiple lines&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in a single line&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare two variables &lt;em&gt;myAge&lt;/em&gt; and &lt;em&gt;yourAge&lt;/em&gt; and assign them initial values and log to the browser console.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;I am 25 years old.&#xA;You are 30 years old.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&#34;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SwiftcordApp/Swiftcord</title>
    <updated>2022-06-03T01:59:00Z</updated>
    <id>tag:github.com,2022-06-03:/SwiftcordApp/Swiftcord</id>
    <link href="https://github.com/SwiftcordApp/Swiftcord" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A completely native Discord client for macOS built 100% in Swift and SwiftUI!&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SwiftcordApp/Swiftcord/main/Swiftcord/Assets.xcassets/AppIcon.appiconset/app-256.png&#34; width=&#34;128px&#34; height=&#34;128px&#34; align=&#34;left&#34;&gt; &#xA;&lt;h1&gt;Swiftcord&lt;/h1&gt; &#xA;&lt;p&gt;A completely native Discord client for macOS built 100% in Swift and SwiftUI&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SwiftcordApp/Swiftcord/main/README_Resources/heroScreenshot.png&#34; alt=&#34;Viewing the general-talk channel in the r/MacBookPro server in Swiftcord&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project aims to create a fully functional native Discord client in Swift for macOS from scratch.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;d also recommend checking out &lt;a href=&#34;https://github.com/SwiftcordApp/DiscordKit&#34;&gt;DiscordKit&lt;/a&gt;, the Discord API implementation Swiftcord relies on.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you like this project, please give it a ⭐ star! It helps motivate me to continue developing it&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Join the Swiftcord Discord server &lt;a href=&#34;https://discord.gg/he7n6MGDXS&#34;&gt;here&lt;/a&gt;!&lt;/h3&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftcordApp/Swiftcord/main/#motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftcordApp/Swiftcord/main/#releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftcordApp/Swiftcord/main/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftcordApp/Swiftcord/main/#current-state&#34;&gt;Current State&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftcordApp/Swiftcord/main/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftcordApp/Swiftcord/main/#contributions&#34;&gt;Contributions&lt;/a&gt; - Read this before contributing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SwiftcordApp/Swiftcord/main/#copyright-notice&#34;&gt;Copyright Notice&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;Swiftcord was created to offer a Discord-like UI and experience while having the performance and memory benefits of native apps. The idea started brewing when I was tight on RAM, then noticed Discord using 600+MB of RAM. I then realised that that was the perfect opportunity to explore SwiftUI, since it was relatively new to me at that time. Hence, Swiftcord was born!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;h3&gt;Nightly Builds (Latest fixes/features, might be unstable)&lt;/h3&gt; &#xA;&lt;p&gt;For the latest features and fixes, &lt;a href=&#34;https://nightly.link/SwiftcordApp/Swiftcord/workflows/main/main/Swiftcord_Canary.zip&#34;&gt;a pre-built version of the latest commit is available here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alpha (More stable, less updated)&lt;/h3&gt; &#xA;&lt;p&gt;Alpha releases are available at &lt;a href=&#34;https://github.com/cryptoAlgorithm/Swiftcord/releases/&#34;&gt;GitHub Releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;Swiftcord is also available on homebrew as a cask: &lt;code&gt;brew install swiftcord&lt;/code&gt;. Versions are lockstepped with alpha releases on GitHub releases.&lt;/p&gt; &#xA;&lt;!-- todo: Add building from source --&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OS: macOS Monterey and above (&amp;gt;= 12.0)&lt;/li&gt; &#xA; &lt;li&gt;Arch: Apple Silicon or Intel (Most releases are universal bundles)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: Note: To open Swiftcord, you may need to right click on the icon &amp;gt; press open. Some older releases were not signed or notarized with an Apple developer account.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Covers a few common questions I have encountered, click on the question to expand the answer&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Will I get banned for using Swiftcord/Is using Swiftcord illegal?&lt;/b&gt;&lt;/summary&gt; Using Swiftcord &#xA; &lt;i&gt;isn&#39;t illegal&lt;/i&gt;. Contrary to what many people say on various platforms, 3rd party clients (i.e. Swiftcord) &#xA; &lt;b&gt;aren&#39;t against&lt;/b&gt; the Discord ToS. You can read the section in Discord&#39;s ToS regarding their software &#xA; &lt;a href=&#34;https://discord.com/terms#software-in-discord’s-services&#34;&gt;here&lt;/a&gt;. However, I &#xA; &lt;b&gt;cannot guarantee&lt;/b&gt; Swiftcord&#39;s use of Discord&#39;s endpoints won&#39;t trip selfbot ban detection. As far as possible, Swiftcord aims to use endpoints as similarly to the official client as possible, and I (the developer) have not been banned for using Swiftcord with either my main or alt account. &#xA; &lt;i&gt; I do not take any responsibility for account bans due to the use of Swiftcord, whether direct or indirect, although there&#39;s a very low possibility of that occuring. I recommend trying Swiftcord with an alt if possible. &lt;/i&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Feature &lt;i&gt;x&lt;/i&gt; is missing! When will &lt;i&gt;y&lt;/i&gt; be implemented?&lt;/b&gt;&lt;/summary&gt; Swiftcord currently is in the alpha stage, and hasn&#39;t achieved feature parity with the official Discord client yet (its quite far behind). Many features are on the &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/SwiftcordApp/Swiftcord/main/#roadmap&#34;&gt;roadmap&lt;/a&gt;, but I do not currently have a timeline for them. Development is progressing at a fast pace, but sometimes bugs may take an unexpectedly long time to fix. I appreciate contributions, bug reports and suggestions :) &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Swiftcord just crashed!&lt;/b&gt;&lt;/summary&gt; Although I&#39;m aiming for 0 crashes (which is made easy by Swift), sometimes the unexpected happens xD. If you experience a crash, please open an issue with appropriete infomation like the line the error occurs on, relevent logs and what you were doing that might have casued the crash. If you can solve the bug causing the crash, that&#39;s even better! &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Current State&lt;/h2&gt; &#xA;&lt;p&gt;Implemented most core message-related features from the official client, including basic markdown and embeds, stickers (lottie/PNG), editing and deleting events. You can now send attachments (both from the file picker and by dragging and dropping) with your messages too! DMs now have first-class support!&lt;/p&gt; &#xA;&lt;p&gt;More advanced features like voice channels &amp;amp; editing messages etc aren&#39;t supported yet, refer to the &lt;a href=&#34;https://raw.githubusercontent.com/SwiftcordApp/Swiftcord/main/#roadmap&#34;&gt;roadmap&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;p&gt;Gateway connection event handling is stable, and reconnection is rock solid (as far as I can test). If you encounter a reconnection bug (not reconnecting, reconnection loop etc), please open an issue with the relevant logs.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;I do not have a definite timeline for when a feature would be implemented, and they may not neccessarily be implemented in sequence.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ Gateway/REST API Implementation&lt;/li&gt; &#xA; &lt;li&gt;✅ Load server list, channels and message&lt;/li&gt; &#xA; &lt;li&gt;✅ Basic message, channel and server rendering&lt;/li&gt; &#xA; &lt;li&gt;✅ Rich message rendering (stickers, embeds, markdown, media)&lt;/li&gt; &#xA; &lt;li&gt;✅ Message replies&lt;/li&gt; &#xA; &lt;li&gt;✅ Load and display full user profile (bio + roles)&lt;/li&gt; &#xA; &lt;li&gt;✅ Save last server and last channel viewed in servers (QoL)&lt;/li&gt; &#xA; &lt;li&gt;✅ Better loading screen&lt;/li&gt; &#xA; &lt;li&gt;✅ Find and request most optimised photo size from CDN&lt;/li&gt; &#xA; &lt;li&gt;⏱ Partial user and app settings&lt;/li&gt; &#xA; &lt;li&gt;✅ DM and group loading&lt;/li&gt; &#xA; &lt;li&gt;✅ Display DMs properly in UI&lt;/li&gt; &#xA; &lt;li&gt;✅ Send DM messages&lt;/li&gt; &#xA; &lt;li&gt;✅ Send attachments&lt;/li&gt; &#xA; &lt;li&gt;❌ User roles + overwrites&lt;/li&gt; &#xA; &lt;li&gt;❌ Message notifications&lt;/li&gt; &#xA; &lt;li&gt;❌ Full list of users in a server, especially for larger servers (1000+ members)&lt;/li&gt; &#xA; &lt;li&gt;✅ Ordering of channels, servers and categories&lt;/li&gt; &#xA; &lt;li&gt;❌ Threads support&lt;/li&gt; &#xA; &lt;li&gt;❌ Full user settings&lt;/li&gt; &#xA; &lt;li&gt;❌ Server creation&lt;/li&gt; &#xA; &lt;li&gt;❌ Server discovery&lt;/li&gt; &#xA; &lt;li&gt;❌ Server banner, boost widget and other misc. boosted features&lt;/li&gt; &#xA; &lt;li&gt;❌ Voice channels (ambitious)&lt;/li&gt; &#xA; &lt;li&gt;❌ Video channels (very ambitious)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Legend:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ -&amp;gt; Complete&lt;/li&gt; &#xA; &lt;li&gt;⏱ -&amp;gt; Implementation in progress&lt;/li&gt; &#xA; &lt;li&gt;❌ -&amp;gt; Not started&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for popping by! If you know the Discord API well, have Swift knowledge and feel like contributing, feel free to make a pull request! Any (positive) contribution is welcome, no matter how small! You can also join the Swiftcord Discord server to discuss improvements and bugfixes!&lt;/p&gt; &#xA;&lt;p&gt;Found an issue? Ensure it isn&#39;t a duplicate, then open a new issue with the appropriate template and fill in the placeholders as clearly as you can. Responding promptly to follow up comments is appreciated, as debugging is hard without any further input from the OP.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Copyright Notice&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2022 Vincent Kwok&lt;/p&gt; &#xA;&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice, this permission notice and its license shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;You can find a copy of the GNU General Public License v3 in LICENSE, or &lt;a href=&#34;https://www.gnu.org/licenses/&#34;&gt;https://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I ❤️ Open Source&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zinclabs/zinc</title>
    <updated>2022-06-03T01:59:00Z</updated>
    <id>tag:github.com,2022-06-03:/zinclabs/zinc</id>
    <link href="https://github.com/zinclabs/zinc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ZincSearch. A lightweight alternative to elasticsearch that requires minimal resources, written in Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zinc Search Engine&lt;/h1&gt; &#xA;&lt;p&gt;Zinc is a search engine that does full text indexing. It is a lightweight alternative to Elasticsearch and runs using a fraction of the resources. It uses &lt;a href=&#34;https://github.com/blugelabs/bluge&#34;&gt;bluge&lt;/a&gt; as the underlying indexing library.&lt;/p&gt; &#xA;&lt;p&gt;It is very simple and easy to operate as opposed to Elasticsearch which requires a couple dozen knobs to understand and tune which you can get up and running in 2 minutes&lt;/p&gt; &#xA;&lt;p&gt;It is a drop-in replacement for Elasticsearch if you are just ingesting data using APIs and searching using kibana (Kibana is not supported with zinc. Zinc provides its own UI).&lt;/p&gt; &#xA;&lt;p&gt;Check the below video for a quick demo of Zinc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aZXtuVjt1ow&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/zinc-youtube.jpg&#34; alt=&#34;Zinc Youtube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Playground Server&lt;/h1&gt; &#xA;&lt;p&gt;You could try ZincSearch without installing using below details:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://playground.dev.zincsearch.com&#34;&gt;https://playground.dev.zincsearch.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;User ID&lt;/td&gt; &#xA;   &lt;td&gt;admin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Password&lt;/td&gt; &#xA;   &lt;td&gt;Complexpass#123&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note: Do not store sensitive data on this server as its available to everyone on internet. Data will also be cleaned on this server regularly.&lt;/p&gt; &#xA;&lt;h1&gt;Join slack channel&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/zinc-nvh4832/shared_invite/zt-11r96hv2b-UwxUILuSJ1duzl_6mhJwVg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/slack.png&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Why zinc&lt;/h1&gt; &#xA;&lt;p&gt;While Elasticsearch is a very good product, it is complex and requires lots of resources and is more than a decade old. I built Zinc so it becomes easier for folks to use full text search indexing without doing a lot of work.&lt;/p&gt; &#xA;&lt;h1&gt;Features:&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Provides full text indexing capability&lt;/li&gt; &#xA; &lt;li&gt;Single binary for installation and running. Binaries available under releases for multiple platforms.&lt;/li&gt; &#xA; &lt;li&gt;Web UI for querying data written in Vue&lt;/li&gt; &#xA; &lt;li&gt;Compatibility with Elasticsearch APIs for ingestion of data (single record and bulk API)&lt;/li&gt; &#xA; &lt;li&gt;Out of the box authentication&lt;/li&gt; &#xA; &lt;li&gt;Schema less - No need to define schema upfront and different documents in the same index can have different fields.&lt;/li&gt; &#xA; &lt;li&gt;Index storage in s3 and minio (experimental)&lt;/li&gt; &#xA; &lt;li&gt;aggregation support&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Roadmap items:&lt;/h1&gt; &#xA;&lt;p&gt;Public roadmap is available at &lt;a href=&#34;https://github.com/orgs/zinclabs/projects/3/views/1&#34;&gt;https://github.com/orgs/zinclabs/projects/3/views/1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please create an issue if you would like something to be added to the roadmap.&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;h2&gt;Search screen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/search_screen.jpg&#34; alt=&#34;Search screen 1&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/search_screen_paris.jpg&#34; alt=&#34;Search screen for games&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;User management screen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/screenshots/users_screen.jpg&#34; alt=&#34;Users screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;h2&gt;Download / Installation / Run&lt;/h2&gt; &#xA;&lt;p&gt;Check installation &lt;a href=&#34;https://docs.zincsearch.com/04_installation/&#34;&gt;installation docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Data ingestion&lt;/h2&gt; &#xA;&lt;h3&gt;Single record&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/single-record/&#34;&gt;single record ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bulk ingestion&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/bulk-ingestion/#bulk-ingestion&#34;&gt;bulk ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fluent bit&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/fluent-bit/&#34;&gt;fluet-bit ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Syslog-ng&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/ingestion/syslog-ng/&#34;&gt;syslog-ng ingestion docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;API Reference&lt;/h2&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://docs.zincsearch.com/API%20Reference/&#34;&gt;Zinc API docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Releases&lt;/h1&gt; &#xA;&lt;p&gt;ZincSearch currently has most of its API contracts frozen. It&#39;s data format may still experience changes as we improve things. Currently ZincSearch is in beta. Data format should become highly stable when we move to GA (version 1).&lt;/p&gt; &#xA;&lt;h1&gt;How to develop and contribute to Zinc&lt;/h1&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/zinclabs/zinc/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; . Also check the &lt;a href=&#34;https://github.com/orgs/zinclabs/projects/3&#34;&gt;roadmap items&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Who uses Zinc (Known users)?&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quadrantsec.com/&#34;&gt;Quadrantsec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://accodeing.com/&#34;&gt;Accodeing to you&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rocboss/paopao-ce&#34;&gt;Paopao&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Please do raise a PR adding your details if you are using Zinc.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OpenIMSDK/Open-IM-Server</title>
    <updated>2022-06-03T01:59:00Z</updated>
    <id>tag:github.com,2022-06-03:/OpenIMSDK/Open-IM-Server</id>
    <link href="https://github.com/OpenIMSDK/Open-IM-Server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;即时通讯IM&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open-IM-Server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/OpenIM-Docs/raw/main/docs/images/WechatIMG20.jpeg&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/open-im-logo.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache--2.0-green&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Go-blue.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Open-IM-Server: Open source Instant Messaging Server&lt;/h2&gt; &#xA;&lt;p&gt;Instant messaging server. Backend in pure Golang, wire transport protocol is JSON over websocket.&lt;/p&gt; &#xA;&lt;p&gt;Everything is a message in Open-IM-Server, so you can extend custom messages easily, there is no need to modify the server code.&lt;/p&gt; &#xA;&lt;p&gt;Using microservice architectures, Open-IM-Server can be deployed using clusters.&lt;/p&gt; &#xA;&lt;p&gt;By deployment of the Open-IM-Server on the customer&#39;s server, developers can integrate instant messaging and real-time network capabilities into their own applications free of charge and quickly, and ensure the security and privacy of business data.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Everything in Free&lt;/li&gt; &#xA; &lt;li&gt;Scalable architecture&lt;/li&gt; &#xA; &lt;li&gt;Easy integration&lt;/li&gt; &#xA; &lt;li&gt;Good scalability&lt;/li&gt; &#xA; &lt;li&gt;High performance&lt;/li&gt; &#xA; &lt;li&gt;Lightweight&lt;/li&gt; &#xA; &lt;li&gt;Supports multiple protocols&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join the Telegram-OpenIM group: &lt;a href=&#34;https://t.me/joinchat/zSJLPaHBNLZmODI1&#34;&gt;https://t.me/joinchat/zSJLPaHBNLZmODI1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;中文官网访问这里：&lt;a href=&#34;https://doc.rentsoft.cn/&#34;&gt;Open-IM中文开发文档&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;h3&gt;Installing Open-IM-Server&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Open-IM relies on five open source high-performance components: ETCD, MySQL, MongoDB, Redis, and Kafka. Privatization deployment Before Open-IM-Server, please make sure that the above five components have been installed. If your server does not have the above components, you must first install Missing components. If you have the above components, it is recommended to use them directly. If not, it is recommended to use Docker-compose, no To install dependencies, one-click deployment, faster and more convenient.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Source code deployment&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Go environment&lt;/a&gt;. Make sure Go version is at least 1.15.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the Open-IM project to your server.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/OpenIMSDK/Open-IM-Server.git --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build and start Service.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Shell authorization&lt;/p&gt; &lt;pre&gt;&lt;code&gt;#cd Open-IM-server/script&#xA;&#xA;chmod +x *.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Execute the build shell&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./build_all_service.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Start service&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./start_all.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Check service&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./check_all.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/Open-IM-Servers-on-System.png&#34; alt=&#34;OpenIMServersonSystempng&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Docker deployment&lt;/h4&gt; &#xA;&lt;p&gt;All images are available at &lt;a href=&#34;https://hub.docker.com/r/lyt1123/open_im_server&#34;&gt;https://hub.docker.com/r/lyt1123/open_im_server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;Install Docker&lt;/a&gt; 1.13 or above.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Install Docker Compose&lt;/a&gt; 1.22 or above.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the Open-IM project to your server.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/OpenIMSDK/Open-IM-Server.git --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start docker-compose with one click(Docker automatically pulls all images)&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd Open-IM-Server&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check service&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./docker_check_service.sh &#xA;./check_all.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/Open-IM-Servers-on-docker.png&#34; alt=&#34;OpenIMServersondockerpng&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;CONFIGURATION INSTRUCTIONS&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Open-IM configuration is divided into basic component configuration and business internal service configuration. Developers need to fill in the address of each component as the address of their server component when using the product, and ensure that the internal service port of the business is not occupied&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Basic Component Configuration Instructions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ETCD &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Etcd is used for the discovery and registration of rpc services, etcd Schema is the prefix of the registered name, it is recommended to modify it to your company name, etcd address (ip+port) supports clustered deployment, you can fill in multiple ETCD addresses separated by commas, and also only one etcd address.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;MySQL &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;mysql is used for full storage of messages and user relationships. Cluster deployment is not supported for the time being. Modify addresses and users, passwords, and database names.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Mongo &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Mongo is used for offline storage of messages. The default storage is 7 days. Cluster deployment is temporarily not supported. Just modify the address and database name.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Redis &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Redis is currently mainly used for message serial number storage and user token information storage. Cluster deployment is temporarily not supported. Just modify the corresponding redis address and password.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Kafka &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Kafka is used as a message transfer storage queue to support cluster deployment, just modify the corresponding address&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Internal Service Configuration Instructions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;credential&amp;amp;&amp;amp;push &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The Open-IM needs to use the three-party offline push function. Currently, Tencent&#39;s three-party push is used. It supports IOS, Android and OSX push. This information is some registration information pushed by Tencent. Developers need to go to Tencent Cloud Mobile Push to register the corresponding information. If you do not fill in the corresponding information, you cannot use the offline message push function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;api&amp;amp;&amp;amp;rpcport&amp;amp;&amp;amp;longconnsvr&amp;amp;&amp;amp;rpcregistername &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The api port is the http interface, longconnsvr is the websocket listening port, and rpcport is the internal service startup port. Both support cluster deployment. Make sure that these ports are not used. If you want to open multiple services for a single service, fill in multiple ports separated by commas. rpcregistername is the service name registered by each service to the registry etcd, no need to modify&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;log&amp;amp;&amp;amp;modulename &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The log configuration includes the storage path of the log file, and the log is sent to elasticsearch for log viewing. Currently, the log is not supported to be sent to elasticsearch. The configuration does not need to be modified for the time being. The modulename is used to split the log according to the name of the service module. The default configuration is fine.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;multiloginpolicy&amp;amp;&amp;amp;tokenpolicy &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open-IM supports multi-terminal login. Currently, there are three multi-terminal login policies. The PC terminal and the mobile terminal are online at the same time by default. When multiple policies are configured to be true, the first policy with true is used by default, and the token policy is the generated token policy. , The developer can customize the expiration time of the token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;SCRIPT DESCRIPTION&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Open-IM script provides service compilation, start, and stop scripts. There are four Open-IM script start modules, one is the http+rpc service start module, the second is the websocket service start module, then the msg_transfer module, and the last is the push module&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;path_info.cfg&amp;amp;&amp;amp;style_info.cfg&amp;amp;&amp;amp;functions.sh &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Contains the path information of each module, including the path where the source code is located, the name of the service startup, the shell print font style, and some functions for processing shell strings&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;build_all_service.sh &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Compile the module, compile all the source code of Open-IM into a binary file and put it into the bin directory&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;start_rpc_api_service.sh&amp;amp;&amp;amp;msg_gateway_start.sh&amp;amp;&amp;amp;msg_transfer_start.sh&amp;amp;&amp;amp;push_start.sh &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Independent script startup module, followed by api and rpc modules, message gateway module, message transfer module, and push module&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;start_all.sh&amp;amp;&amp;amp;stop_all.sh &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Total script, start all services and close all services&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authentication Clow Chart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/open-im-server.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/docs/Architecture.jpg&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Open-IM-Server is under the Apache 2.0 license. See the &lt;a href=&#34;https://github.com/OpenIMSDK/Open-IM-Server/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebook/react</title>
    <updated>2022-06-03T01:59:00Z</updated>
    <id>tag:github.com,2022-06-03:/facebook/react</id>
    <link href="https://github.com/facebook/react" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; · &lt;a href=&#34;https://github.com/facebook/react/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/react&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react.svg?style=flat&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/facebook/react&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/facebook/react.svg?style=shield&amp;amp;circle-token=:circle-token&#34; alt=&#34;CircleCI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Declarative:&lt;/strong&gt; React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Component-Based:&lt;/strong&gt; Build encapsulated components that manage their state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Learn Once, Write Anywhere:&lt;/strong&gt; We don&#39;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using &lt;a href=&#34;https://reactnative.dev/&#34;&gt;React Native&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://reactjs.org/docs/getting-started.html&#34;&gt;Learn how to use React in your project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;React has been designed for gradual adoption from the start, and &lt;strong&gt;you can use as little or as much React as you need&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://reactjs.org/docs/getting-started.html#online-playgrounds&#34;&gt;Online Playgrounds&lt;/a&gt; to get a taste of React.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/add-react-to-a-website.html&#34;&gt;Add React to a Website&lt;/a&gt; as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in one minute.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/create-a-new-react-app.html&#34;&gt;Create a New React App&lt;/a&gt; if you&#39;re looking for a powerful JavaScript toolchain.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can use React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag from a &lt;a href=&#34;https://reactjs.org/docs/cdn-links.html&#34;&gt;CDN&lt;/a&gt;, or as a &lt;code&gt;react&lt;/code&gt; package on &lt;a href=&#34;https://www.npmjs.com/package/react&#34;&gt;npm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the React documentation &lt;a href=&#34;https://reactjs.org/&#34;&gt;on the website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://reactjs.org/docs/getting-started.html&#34;&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; &#xA;&lt;p&gt;The documentation is divided into several sections:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/tutorial/tutorial.html&#34;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/hello-world.html&#34;&gt;Main Concepts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/jsx-in-depth.html&#34;&gt;Advanced Guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/react-api.html&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/community/support.html&#34;&gt;Where to Get Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/how-to-contribute.html&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can improve it by sending pull requests to &lt;a href=&#34;https://github.com/reactjs/reactjs.org&#34;&gt;this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;We have several examples &lt;a href=&#34;https://reactjs.org/&#34;&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { createRoot } from &#39;react-dom/client&#39;;&#xA;&#xA;function HelloMessage({ name }) {&#xA;  return &amp;lt;div&amp;gt;Hello {name}&amp;lt;/div&amp;gt;;&#xA;}&#xA;&#xA;const root = createRoot(document.getElementById(&#39;container&#39;));&#xA;root.render(&amp;lt;HelloMessage name=&#34;Taylor&#34; /&amp;gt;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This example will render &#34;Hello Taylor&#34; into a container on the page.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll notice that we used an HTML-like syntax; &lt;a href=&#34;https://reactjs.org/docs/introducing-jsx.html&#34;&gt;we call it JSX&lt;/a&gt;. JSX is not required to use React, but it makes code more readable and writing it feels like writing HTML. If you&#39;re using React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag, read &lt;a href=&#34;https://reactjs.org/docs/add-react-to-a-website.html#optional-try-react-with-jsx&#34;&gt;this section&lt;/a&gt; on integrating JSX; otherwise, the &lt;a href=&#34;https://reactjs.org/docs/create-a-new-react-app.html&#34;&gt;recommended JavaScript toolchains&lt;/a&gt; handle it automatically.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://code.fb.com/codeofconduct&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&#34;https://code.fb.com/codeofconduct&#34;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://reactjs.org/docs/how-to-contribute.html&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://reactjs.org/docs/how-to-contribute.html&#34;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.&lt;/p&gt; &#xA;&lt;h3&gt;Good First Issues&lt;/h3&gt; &#xA;&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href=&#34;https://github.com/facebook/react/labels/good%20first%20issue&#34;&gt;good first issues&lt;/a&gt; that contain bugs that have a relatively limited scope. This is a great place to get started.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;React is &lt;a href=&#34;https://raw.githubusercontent.com/facebook/react/main/LICENSE&#34;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>