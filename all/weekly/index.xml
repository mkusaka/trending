<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-20T01:39:34Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>angular/angular-cli</title>
    <updated>2022-11-20T01:39:34Z</updated>
    <id>tag:github.com,2022-11-20:/angular/angular-cli</id>
    <link href="https://github.com/angular/angular-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CLI tool for Angular&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Angular CLI - The CLI tool for Angular.&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/docs/images/angular-cli-logo.png&#34; alt=&#34;Angular CLI logo&#34; width=&#34;100px&#34; height=&#34;108px&#34;&gt; &lt;br&gt;&lt;br&gt; &lt;i&gt;The Angular CLI is a command-line interface tool that you use to initialize, develop, scaffold, &lt;br&gt;and maintain Angular applications directly from a command shell.&lt;/i&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://cli.angular.io&#34;&gt;&lt;strong&gt;cli.angular.io&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; · &lt;a href=&#34;https://github.com/angular/angular-cli/issues&#34;&gt;Submit an Issue&lt;/a&gt; · &lt;a href=&#34;https://blog.angular.io/&#34;&gt;Blog&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://circleci.com/gh/angular/workflows/angular-cli/tree/main&#34;&gt; &lt;img src=&#34;https://img.shields.io/circleci/build/github/angular/angular-cli/main.svg?logo=circleci&amp;amp;logoColor=fff&amp;amp;label=CircleCI&#34; alt=&#34;CI status&#34;&gt; &lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://discord.gg/angular&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/463752820026376202.svg?logo=discord&amp;amp;logoColor=fff&amp;amp;label=Discord&amp;amp;color=7389d8&#34; alt=&#34;Discord conversation&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Get started with Angular CLI, learn the fundamentals and explore advanced topics on our documentation website.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://angular.io/start&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cli.angular.io/&#34;&gt;CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://angular.io/guide/file-structure&#34;&gt;Workspace and project file structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://angular.io/guide/workspace-config&#34;&gt;Workspace configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://angular.io/guide/schematics&#34;&gt;Schematics&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; which includes &lt;a href=&#34;https://www.npmjs.com/get-npm&#34;&gt;Node Package Manager&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setting Up a Project&lt;/h3&gt; &#xA;&lt;p&gt;Install the Angular CLI globally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install -g @angular/cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create workspace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ng new [PROJECT NAME]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd [PROJECT NAME]&#xA;ng serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Angular is cross-platform, fast, scalable, has incredible tooling, and is loved by millions.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://angular.io/start&#34;&gt;Get started in 5 minutes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Ecosystem&lt;/h2&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/docs/images/angular-ecosystem-logos.png&#34; alt=&#34;angular ecosystem logos&#34; width=&#34;500px&#34; height=&#34;auto&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://angular.io/&#34;&gt;Angular Framework&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://material.angular.io/&#34;&gt;Angular Material&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/CHANGELOG.md&#34;&gt;Learn about the latest improvements&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://update.angular.io/&#34;&gt;upgrade guide&lt;/a&gt; to find out the best way to upgrade your project.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;h3&gt;Contributing Guidelines&lt;/h3&gt; &#xA;&lt;p&gt;Read through our &lt;a href=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; to learn about our submission process, coding rules and more.&lt;/p&gt; &#xA;&lt;h3&gt;Want to Help?&lt;/h3&gt; &#xA;&lt;p&gt;Want to report a bug, contribute some code, or improve documentation? Excellent! Read up on our guidelines for &lt;a href=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt; and then check out one of our issues labeled as &lt;kbd&gt;&lt;a href=&#34;https://github.com/angular/angular-cli/labels/help%20wanted&#34;&gt;help wanted&lt;/a&gt;&lt;/kbd&gt; or &lt;kbd&gt;&lt;a href=&#34;https://github.com/angular/angular-cli/labels/good%20first%20issue&#34;&gt;good first issue&lt;/a&gt;&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code of Conduct&lt;/h3&gt; &#xA;&lt;p&gt;Help us keep Angular open and inclusive. Please read and follow our &lt;a href=&#34;https://github.com/angular/angular/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Developer Guide&lt;/h3&gt; &#xA;&lt;p&gt;Read through our &lt;a href=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/docs/DEVELOPER.md&#34;&gt;developer guide&lt;/a&gt; to learn about how to build and test the Angular CLI locally.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Join the conversation and help the community.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.twitter.com/angular&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/angular&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitter.im/angular/angular-cli&#34;&gt;Gitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtube.com/angular&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/angular-cli&#34;&gt;StackOverflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Find a Local &lt;a href=&#34;https://www.meetup.com/find/?keywords=angular&#34;&gt;Meetup&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;p&gt;This is a monorepo which contains many tools and packages:&lt;/p&gt; &#xA;&lt;h3&gt;Tools&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Links&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Angular CLI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular/cli&#34;&gt;&lt;code&gt;@angular/cli&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular/cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40angular%2Fcli/latest.svg?sanitize=true&#34; alt=&#34;latest&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/packages/angular/cli/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/README--green.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/angular/cli-builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/snapshot--blue.svg?sanitize=true&#34; alt=&#34;snapshot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Architect CLI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/architect-cli&#34;&gt;&lt;code&gt;@angular-devkit/architect-cli&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/architect-cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40angular-devkit%2Farchitect-cli/latest.svg?sanitize=true&#34; alt=&#34;latest&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/angular/angular-devkit-architect-cli-builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/snapshot--blue.svg?sanitize=true&#34; alt=&#34;snapshot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Schematics CLI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/schematics-cli&#34;&gt;&lt;code&gt;@angular-devkit/schematics-cli&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/schematics-cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40angular-devkit%2Fschematics-cli/latest.svg?sanitize=true&#34; alt=&#34;latest&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/angular/angular-devkit-schematics-cli-builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/snapshot--blue.svg?sanitize=true&#34; alt=&#34;snapshot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Packages&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Links&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Architect&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/architect&#34;&gt;&lt;code&gt;@angular-devkit/architect&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/architect&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40angular-devkit%2Farchitect/latest.svg?sanitize=true&#34; alt=&#34;latest&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/packages/angular_devkit/architect/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/README--green.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/angular/angular-devkit-architect-builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/snapshot--blue.svg?sanitize=true&#34; alt=&#34;snapshot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Build Angular&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/build-angular&#34;&gt;&lt;code&gt;@angular-devkit/build-angular&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/build-angular&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40angular-devkit%2Fbuild-angular/latest.svg?sanitize=true&#34; alt=&#34;latest&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/packages/angular_devkit/build_angular/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/README--green.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/angular/angular-devkit-build-angular-builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/snapshot--blue.svg?sanitize=true&#34; alt=&#34;snapshot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Build Webpack&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/build-webpack&#34;&gt;&lt;code&gt;@angular-devkit/build-webpack&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/build-webpack&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40angular-devkit%2Fbuild-webpack/latest.svg?sanitize=true&#34; alt=&#34;latest&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/packages/angular_devkit/build_webpack/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/README--green.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/angular/angular-devkit-build-webpack-builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/snapshot--blue.svg?sanitize=true&#34; alt=&#34;snapshot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Core&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/core&#34;&gt;&lt;code&gt;@angular-devkit/core&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/core&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40angular-devkit%2Fcore/latest.svg?sanitize=true&#34; alt=&#34;latest&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/packages/angular_devkit/core/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/README--green.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/angular/angular-devkit-core-builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/snapshot--blue.svg?sanitize=true&#34; alt=&#34;snapshot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Schematics&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/schematics&#34;&gt;&lt;code&gt;@angular-devkit/schematics&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular-devkit/schematics&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40angular-devkit%2Fschematics/latest.svg?sanitize=true&#34; alt=&#34;latest&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/packages/angular_devkit/schematics/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/README--green.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/angular/angular-devkit-schematics-builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/snapshot--blue.svg?sanitize=true&#34; alt=&#34;snapshot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Misc&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Links&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Angular Create&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular/create&#34;&gt;&lt;code&gt;@angular/create&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular/create&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40angular%2Fcreate/latest.svg?sanitize=true&#34; alt=&#34;latest&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/angular/angular-cli/main/packages/angular/create/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/README--green.svg?sanitize=true&#34; alt=&#34;README&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Webpack Angular Plugin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@ngtools/webpack&#34;&gt;&lt;code&gt;@ngtools/webpack&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@ngtools/webpack&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40ngtools%2Fwebpack/latest.svg?sanitize=true&#34; alt=&#34;latest&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/angular/ngtools-webpack-builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/snapshot--blue.svg?sanitize=true&#34; alt=&#34;snapshot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Schematics&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Links&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Angular PWA Schematics&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular/pwa&#34;&gt;&lt;code&gt;@angular/pwa&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@angular/pwa&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40angular%2Fpwa/latest.svg?sanitize=true&#34; alt=&#34;latest&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/angular/angular-pwa-builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/snapshot--blue.svg?sanitize=true&#34; alt=&#34;snapshot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Angular Schematics&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@schematics/angular&#34;&gt;&lt;code&gt;@schematics/angular&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@schematics/angular&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40schematics%2Fangular/latest.svg?sanitize=true&#34; alt=&#34;latest&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/angular/schematics-angular-builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/snapshot--blue.svg?sanitize=true&#34; alt=&#34;snapshot&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Love Angular CLI? Give our repo a star &lt;span&gt;⭐&lt;/span&gt; &lt;span&gt;⬆&lt;/span&gt;.&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mli/autocut</title>
    <updated>2022-11-20T01:39:34Z</updated>
    <id>tag:github.com,2022-11-20:/mli/autocut</id>
    <link href="https://github.com/mli/autocut" rel="alternate"></link>
    <summary type="html">&lt;p&gt;用文本编辑器剪视频&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AutoCut: 通过字幕来剪切视频&lt;/h1&gt; &#xA;&lt;p&gt;AutoCut对你的视频自动生成字幕。然后你选择需要保留的句子，AutoCut将对你视频中对应的片段裁切并保存。你无需使用视频编辑软件，只需要编辑文本文件即可完成剪切。&lt;/p&gt; &#xA;&lt;h2&gt;使用例子&lt;/h2&gt; &#xA;&lt;p&gt;假如你录制的视频放在 &lt;code&gt;2022-11-04/&lt;/code&gt; 这个文件夹里。那么运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;autocut -d 2022-11-04&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;提示：如果你使用OBS录屏，可以在 &lt;code&gt;设置-&amp;gt;高级-&amp;gt;录像-&amp;gt;文件名格式&lt;/code&gt; 中将空格改成&lt;code&gt;/&lt;/code&gt;，既 &lt;code&gt;%CCYY-%MM-%DD/%hh-%mm-%ss&lt;/code&gt;。那么视频文件将放在日期命名的文件夹里。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;AutoCut将持续对这个文件夹里视频进行字幕抽取和剪切。例如，你刚完成一个视频录制，保存在 &lt;code&gt;11-28-18.mp4&lt;/code&gt;。AutoCut将生成 &lt;code&gt;11-28-18.md&lt;/code&gt;。你在里面选择需要保留的句子后，AutoCut将剪切出 &lt;code&gt;11-28-18_cut.mp4&lt;/code&gt;，并生成 &lt;code&gt;11-28-18_cut.md&lt;/code&gt; 来预览结果。&lt;/p&gt; &#xA;&lt;p&gt;你可以使用任何的Markdown编辑器。例如我常用VS Code和Typora。下图是通过Typora来对 &lt;code&gt;11-28-18.md&lt;/code&gt; 编辑。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mli/autocut/main/imgs/typora.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;全部完成后在 &lt;code&gt;autocut.md&lt;/code&gt; 里选择需要拼接的视频后，AutoCut将输出 &lt;code&gt;autocut_merged.mp4&lt;/code&gt; 和对应的字幕文件。&lt;/p&gt; &#xA;&lt;h2&gt;安装&lt;/h2&gt; &#xA;&lt;p&gt;首先安装 Python 包&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install git+https://github.com/mli/autocut.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;上面将安装 &lt;a href=&#34;https://pytorch.org/&#34;&gt;pytorch&lt;/a&gt;。如果你需要GPU运行，且默认安装的版本不匹配的话，你可以先安装Pytorch。如果安装 Whipser 出现问题，请参考&lt;a href=&#34;https://github.com/openai/whisper#setup&#34;&gt;官方文档&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;另外需要安装 &lt;a href=&#34;https://ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# on Ubuntu or Debian&#xA;sudo apt update &amp;amp;&amp;amp; sudo apt install ffmpeg&#xA;&#xA;# on Arch Linux&#xA;sudo pacman -S ffmpeg&#xA;&#xA;# on MacOS using Homebrew (https://brew.sh/)&#xA;brew install ffmpeg&#xA;&#xA;# on Windows using Scoop (https://scoop.sh/)&#xA;scoop install ffmpeg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker安装&lt;/h2&gt; &#xA;&lt;p&gt;首先将项目克隆到本地。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/mli/autocut.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;安装CPU版本&lt;/h3&gt; &#xA;&lt;p&gt;进入项目根目录，然后构建docker映像。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t autocut .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;运行下面的命令创建docker容器，就可以直接使用了。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm -v E:\autocut:/autocut/video autocut /bin/bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;其中&lt;code&gt;-v&lt;/code&gt;是将主机存放视频的文件夹&lt;code&gt;E:\autocut&lt;/code&gt;映射到虚拟机的&lt;code&gt;/autocut/video&lt;/code&gt;目录。&lt;code&gt;E:\autocut&lt;/code&gt;是主机存放视频的目录，需修改为自己主机存放视频的目录。&lt;/p&gt; &#xA;&lt;h3&gt;安装GPU版本&lt;/h3&gt; &#xA;&lt;p&gt;使用GPU加速需要主机有Nvidia的显卡并安装好相应驱动。然后在项目根目录，执行下面的命令构建docker映像。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -f ./Dockerfile.cuda -t autocut-gpu .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;使用GPU加速时，运行docker容器需添加参数 &lt;code&gt;--gpus all&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --gpus all -it --rm -v E:\autocut:/autocut/video autocut-gpu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;更多使用选项&lt;/h2&gt; &#xA;&lt;h3&gt;转录某个视频生成&lt;code&gt;.srt&lt;/code&gt;和&lt;code&gt;.md&lt;/code&gt;结果。&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;autocut -t 22-52-00.mp4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;如果对转录质量不满意，可以使用更大的模型，例如&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;autocut -t 22-52-00.mp4 --whisper-model large&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;默认是&lt;code&gt;small&lt;/code&gt;。更好的模型是&lt;code&gt;medium&lt;/code&gt;和&lt;code&gt;large&lt;/code&gt;，但推荐使用GPU获得更好的速度。也可以使用更快的&lt;code&gt;tiny&lt;/code&gt;和&lt;code&gt;base&lt;/code&gt;，但转录质量会下降。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果你视频中有较多的长停顿，可以用&lt;code&gt;--vad&lt;/code&gt;来使用格外的VAD模型预先识别这些停顿，使得对时间戳识别更准确。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;剪切某个视频&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;autocut -c 22-52-00.mp4 22-52-00.srt 22-52-00.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;默认视频比特率是 &lt;code&gt;--bitrate 10m&lt;/code&gt;，你可以根据需要调大调小。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果不习惯Markdown文件，你也可以直接在&lt;code&gt;srt&lt;/code&gt;文件里删除不要的句子，在剪切时不传入&lt;code&gt;md&lt;/code&gt;文件名即可。就是 &lt;code&gt;autocut -c 22-52-00.mp4 22-52-00.srt&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果仅有&lt;code&gt;srt&lt;/code&gt;文件，编辑不方便可以使用如下命令生成&lt;code&gt;md&lt;/code&gt;文件，然后编辑&lt;code&gt;md&lt;/code&gt;文件即可，但此时会完全对照&lt;code&gt;srt&lt;/code&gt;生成，不会出现&lt;code&gt;no speech&lt;/code&gt;等提示文本。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;autocut -m test.srt test.mp4&#xA;autocut -m test.mp4 test.srt # 支持视频和字幕乱序传入&#xA;autocut -m test.srt # 也可以只传入字幕文件&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;一些小提示&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;讲得流利的视频的转录质量会高一些，这因为是Whisper训练数据分布的缘故。对一个视频，你可以先粗选一下句子，然后在剪出来的视频上再剪一次。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;del&gt;最终视频生成的字幕通常还需要做一些小编辑。你可以直接编辑&lt;code&gt;md&lt;/code&gt;文件（比&lt;code&gt;srt&lt;/code&gt;文件更紧凑，且嵌入了视频）。然后使用 &lt;code&gt;autocut -s 22-52-00.md 22-52-00.srt&lt;/code&gt; 来生成更新的字幕 &lt;code&gt;22-52-00_edited.srt&lt;/code&gt;。注意这里会无视句子是不是被选中，而是全部转换成&lt;code&gt;srt&lt;/code&gt;。&lt;/del&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;最终视频生成的字幕通常还需要做一些小编辑。但&lt;code&gt;srt&lt;/code&gt;里面空行太多。你可以使用 &lt;code&gt;autocut -s 22-52-00.srt&lt;/code&gt; 来生成一个紧凑些的版本 &lt;code&gt;22-52-00_compact.srt&lt;/code&gt; 方便编辑（这个格式不合法，但编辑器，例如VS Code，还是会进行语法高亮）。编辑完成后，&lt;code&gt;autocut -s 22-52-00_compact.srt&lt;/code&gt; 转回正常格式。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;用Typora和VS Code编辑markdown都很方便。他们都有对应的快捷键mark一行或者多行。但VS Code视频预览似乎有点问题。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;视频是通过ffmpeg导出。在Apple M1芯片上它用不了GPU，导致导出速度不如专业视频软件。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;常见问题&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;输出的是乱码？&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;AutoCut 默认输出编码是 &lt;code&gt;utf-8&lt;/code&gt;. 确保你的编辑器也使用了&lt;code&gt;utf-8&lt;/code&gt;解码。你可以通过&lt;code&gt;--encoding&lt;/code&gt;指定其他编码格式。但是需要注意生成字幕文件和使用字幕文件剪辑时的编码格式需要一致。例如使用 &lt;code&gt;gbk&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;autocut -t test.mp4 --encoding=gbk&#xA;autocut -c test.mp4 test.srt test.md --encoding=gbk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;如果使用了其他编码格式（如gbk等）生成md文件并用Typora打开后，该文件可能会被Typora自动转码为其他编码格式，此时再通过生成时指定的编码格式进行剪辑时可能会出现编码不支持等报错。因此可以在使用Typora编辑后再通过VS Code等修改到你需要的编码格式进行保存后再使用剪辑功能。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;如何使用GPU来转录？&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;当你有Nvidia GPU，而且安装了对应版本的Pytorch的时候，转录是在GPU上进行。你可以通过命令来查看当前是不是支持GPU。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -c &#34;import torch; print(torch.cuda.is_available())&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;否则你可以在安装autocut前手动安装对应的GPU版本Pytorch。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;使用GPU是报错显存不够。&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;whisper的大模型需要一定的GPU显存。如果你的显存不够，你可以用小一点的模型，例如&lt;code&gt;small&lt;/code&gt;。如果你仍然想用大模型，可以通过&lt;code&gt;--device&lt;/code&gt;来强制使用&lt;code&gt;cpu&lt;/code&gt;。例如&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;autocut -t 11-28-18.mp4 --whisper-model large --device cpu&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;能不能直接用 &lt;code&gt;pip install autocut&lt;/code&gt; 安装?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;因为autocut的依赖whisper没有发布pypi包，所以目前只能用 &lt;code&gt;pip install git+https://github.com/mli/autocut.git&lt;/code&gt; 这种方式发布。有需求的同学可以查看whisper模型是不是能直接在 huggingface hub 下载，从而摆脱whisper包的依赖。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;如何参与贡献&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mli/autocut/issues/22&#34;&gt;这里有一些想做的feature&lt;/a&gt;，欢迎贡献&lt;/p&gt; &#xA;&lt;h3&gt;代码结构&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;autocut&#xA;│  .gitignore&#xA;│  LICENSE&#xA;│  README.md # 一般新增或修改需要让使用者知道就需要对应更新 README.md 内容&#xA;│  setup.py&#xA;│&#xA;└─autocut # 核心代码位于 autocut 文件夹中，新增功能的实现也一般在这里面进行修改或新增&#xA;   │  cut.py&#xA;   │  daemon.py&#xA;   │  main.py&#xA;   │  transcribe.py&#xA;   │  utils.py&#xA;   └─ __init__.py&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;安装依赖&lt;/h3&gt; &#xA;&lt;p&gt;开始安装这个项目的需要的依赖之前，建议先了解一下 Anaconda 或者 venv 的虚拟环境使用，推荐&lt;strong&gt;使用虚拟环境来搭建该项目的开发环境&lt;/strong&gt;。 具体安装方式为在你搭建搭建的虚拟环境之中按照&lt;a href=&#34;https://raw.githubusercontent.com/mli/autocut/main/README.md#%E5%AE%89%E8%A3%85&#34;&gt;上方安装步骤&lt;/a&gt;进行安装。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;为什么推荐使用虚拟环境开发？&lt;/p&gt; &#xA; &lt;p&gt;一方面是保证各种不同的开发环境之间互相不污染。&lt;/p&gt; &#xA; &lt;p&gt;更重要的是在于这个项目实际上是一个 Python Package，所以在你安装之后 autocut 的代码实际也会变成你的环境依赖。 &lt;strong&gt;因此在你更新代码之后，你需要让将新代码重新安装到环境中，然后才能调用到新的代码。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;开发&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;代码风格目前遵循 PEP-8，可以使用相关的自动格式化软件完成。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;utils.py&lt;/code&gt; 主要是全局共用的一些工具方法。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;transcribe.py&lt;/code&gt; 是调用模型生成&lt;code&gt;srt&lt;/code&gt;和&lt;code&gt;md&lt;/code&gt;的部分。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cut.py&lt;/code&gt; 提供根据标记后&lt;code&gt;md&lt;/code&gt;或&lt;code&gt;srt&lt;/code&gt;进行视频剪切合并的功能。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;daemon.py&lt;/code&gt; 提供的是监听文件夹生成字幕和剪切视频的功能。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;main.py&lt;/code&gt; 声明命令行参数，根据输入参数调用对应功能。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;开发过程中请尽量保证修改在正确的地方，以及合理地复用代码， 同时工具函数请尽可能放在&lt;code&gt;utils.py&lt;/code&gt;中。 代码格式目前是遵循 PEP-8，变量命名尽量语义化即可。&lt;/p&gt; &#xA;&lt;p&gt;在开发完成之后，最重要的一点是需要进行&lt;strong&gt;测试&lt;/strong&gt;，请保证提交之前对所有&lt;strong&gt;与你修改直接相关的部分&lt;/strong&gt;以及&lt;strong&gt;你修改会影响到的部分&lt;/strong&gt;都进行了测试，并保证功能的正常。 目前使用 &lt;code&gt;GitHub Actions&lt;/code&gt; CI, Lint 使用 black 提交前请运行 &lt;code&gt;black&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;提交&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;commit 信息用英文描述清楚你做了哪些修改即可，小写字母开头。&lt;/li&gt; &#xA; &lt;li&gt;最好可以保证一次的 commit 涉及的修改比较小，可以简短地描述清楚，这样也方便之后有修改时的查找。&lt;/li&gt; &#xA; &lt;li&gt;PR 的时候 title 简述有哪些修改， contents 可以具体写下修改内容。&lt;/li&gt; &#xA; &lt;li&gt;run test &lt;code&gt;pip install pytest&lt;/code&gt; then &lt;code&gt;pytest test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;run lint &lt;code&gt;pip install black&lt;/code&gt; then &lt;code&gt;black .&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>palera1n/palera1n</title>
    <updated>2022-11-20T01:39:34Z</updated>
    <id>tag:github.com,2022-11-20:/palera1n/palera1n</id>
    <link href="https://github.com/palera1n/palera1n" rel="alternate"></link>
    <summary type="html">&lt;p&gt;iOS 15.0-15.7.1 (semi-)tethered checkm8 &#34;jailbreak&#34;&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/114239186?s=100&amp;amp;v=4&#34; alt=&#34;palera1n logo&#34;&gt; &lt;p&gt;palera1n&lt;/p&gt; &lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;An iOS 15.0-15.7.1 work-in-progress, (semi-)tethered checkm8 jailbreak.&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/palera1n/palera1n/main/CHANGELOG.md&#34;&gt;Change Log&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href=&#34;https://dsc.gg/palera1n&#34;&gt;Discord&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href=&#34;https://twitter.com/palera1n&#34;&gt;Twitter&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;h1&gt;How does it work?&lt;/h1&gt; &#xA;&lt;p&gt;It boots the device with multiple patches required. On first run, it&#39;ll boot a ramdisk which dumps your onboard blob, creates a fakefs (if using semi tethered), installs the loader app, and patches your kernel.&lt;/p&gt; &#xA;&lt;h1&gt;Issues&lt;/h1&gt; &#xA;&lt;h3&gt;Need help?&lt;/h3&gt; &#xA;&lt;p&gt;If you need help, &lt;strong&gt;please&lt;/strong&gt; join our Discord. We disabled issues due to the flood of spam, and difficulty to respond in general. We are much more comfortable on Discord.&lt;/p&gt; &#xA;&lt;p&gt;Please, please, please, provide necessary info:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS version and device (eg. iPhone 7+ 15.1, iPhone 6s 15.3.1)&lt;/li&gt; &#xA; &lt;li&gt;Computer&#39;s OS and version (eg. Ubuntu 22.04, macOS 13.0)&lt;/li&gt; &#xA; &lt;li&gt;The command you ran&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Full log from the logs folder&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;DO NOT&lt;/strong&gt; harass tweak devs if tweaks don&#39;t work. Refer to &lt;a href=&#34;https://github.com/itsnebulalol/ios15-tweaks&#34;&gt;here&lt;/a&gt; for compatiblity.&lt;/p&gt; &#xA;&lt;p&gt;You may join &lt;a href=&#34;https://dsc.gg/palera1n&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux has some weird usbmuxd issues. We have tried our best to fix them, but there still are issues. We highly recommend to compile and install usbmuxd2.&lt;/li&gt; &#xA; &lt;li&gt;Stop making issues about Linux not being able to connect, we are aware. This includes being stuck on waiting for ramdisk to finish booting.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Warning&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We are &lt;strong&gt;NOT&lt;/strong&gt; responsible for any data loss. The user of this program accepts responsibility should something happen to their device. While nothing should happen, jailbreaking has risks in itself. &lt;strong&gt;If your device is stuck in recovery, please run one of the following:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;futurerestore --exit-recovery&lt;/li&gt; &#xA;   &lt;li&gt;irecovery -n&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;A10 and A11 devices&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On A10 and A11, &lt;strong&gt;you must disable your passcode while in the jailbroken state&lt;/strong&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On A10, this can be fixed in the future by implementing blackbird.&lt;/li&gt; &#xA;   &lt;li&gt;On A11, we don&#39;t have a SEP exploit yet.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Prerequisites&lt;/h1&gt; &#xA;&lt;h4&gt;Warning: You must install the Tips app from the App Store before running palera1n.&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A checkm8 vulnerable iOS device on iOS 15 (A8-A11) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The device must be on iOS 15.0-15.7.1&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Linux or macOS computer &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Python 3 must be installed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How to use?&lt;/h1&gt; &#xA;&lt;p&gt;A better tutorial can be found &lt;a href=&#34;https://ios.cfw.guide/installing-palera1n&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repo with &lt;code&gt;git clone --recursive https://github.com/palera1n/palera1n &amp;amp;&amp;amp; cd palera1n&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./palera1n.sh --tweaks &amp;lt;your current iOS version&amp;gt;&lt;/code&gt; (run with &lt;code&gt;sudo&lt;/code&gt; if you&#39;re on linux) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[A10 and A11] Before running, &lt;strong&gt;you must disable your passcode&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Put your device in DFU mode before running.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Follow the steps on your screen.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Repos&lt;/h1&gt; &#xA;&lt;h3&gt;Tweaks mode&lt;/h3&gt; &#xA;&lt;p&gt;All repos work when using tweaks mode because it uses normal Procursus and not rootless.&lt;/p&gt; &#xA;&lt;h3&gt;Rootless&lt;/h3&gt; &#xA;&lt;p&gt;Repos need to be updated for rootless, here are some that work currently:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mineek.github.io/repo&#34;&gt;Mineek&#39;s repo&lt;/a&gt; contains rootless Procursus packages&lt;/li&gt; &#xA; &lt;li&gt;The official &lt;a href=&#34;https://repo.palera.in&#34;&gt;palera1n repo&lt;/a&gt; contains miscellaneous packages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to make a rootless repo, use the official &lt;a href=&#34;https://github.com/palera1n/repo&#34;&gt;palera1n repo&lt;/a&gt; for reference. Every deb should use the &lt;code&gt;iphoneos-arm64&lt;/code&gt; architecture, and &lt;em&gt;nothing&lt;/em&gt; should be on the rootfs. Everything should be in /var/jb.&lt;/p&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/verygenericname&#34;&gt;Nathan&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The ramdisk that dumps blobs, installs pogo to tips app, and duplicates rootfs is a slimmed down version of &lt;a href=&#34;https://github.com/verygenericname/SSHRD_Script&#34;&gt;SSHRD_Script&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;For modified &lt;a href=&#34;https://github.com/verygenericname/sshrd_SSHRD_Script&#34;&gt;restored_external&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Also helped Mineek getting the kernel up and running and with the patches&lt;/li&gt; &#xA;   &lt;li&gt;Helping with adding multiple device support&lt;/li&gt; &#xA;   &lt;li&gt;Fixing issues relating to camera.. etc by switching to fsboot&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/verygenericname/iBoot64Patcher&#34;&gt;iBoot64Patcher fork&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mineek&#34;&gt;Mineek&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For the patching and booting commands&lt;/li&gt; &#xA;   &lt;li&gt;Adding tweak support&lt;/li&gt; &#xA;   &lt;li&gt;For patchfinders for RELEASE kernels&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mineek/PongoOS/tree/iOS15/checkra1n/Kernel15Patcher&#34;&gt;Kernel15Patcher&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mineek/Kernel64Patcher&#34;&gt;Kernel64Patcher&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/elihwyma&#34;&gt;Amy&lt;/a&gt; for the &lt;a href=&#34;https://github.com/elihwyma/Pogo&#34;&gt;Pogo&lt;/a&gt; app&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/checkra1n&#34;&gt;checkra1n&lt;/a&gt; for the base of the kpf&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nyuszika7h&#34;&gt;nyuszika7h&lt;/a&gt; for the script to help get into DFU&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ProcursusTeam&#34;&gt;the Procursus Team&lt;/a&gt; for the amazing &lt;a href=&#34;https://github.com/ProcursusTeam/Procursus&#34;&gt;bootstrap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/F121Live&#34;&gt;F121&lt;/a&gt; for helping test&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/m1stadev&#34;&gt;m1sta&lt;/a&gt; for &lt;a href=&#34;https://github.com/m1stadev/PyIMG4&#34;&gt;pyimg4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tihmstar&#34;&gt;tihmstar&lt;/a&gt; for &lt;a href=&#34;https://github.com/tihmstar/partialZipBrowser&#34;&gt;pzb&lt;/a&gt;/original &lt;a href=&#34;https://github.com/tihmstar/iBoot64Patcher&#34;&gt;iBoot64Patcher&lt;/a&gt;/original &lt;a href=&#34;https://github.com/tihmstar/liboffsetfinder64&#34;&gt;liboffsetfinder64&lt;/a&gt;/&lt;a href=&#34;https://github.com/tihmstar/img4tool&#34;&gt;img4tool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xerub&#34;&gt;xerub&lt;/a&gt; for &lt;a href=&#34;https://github.com/xerub/img4lib&#34;&gt;img4lib&lt;/a&gt; and &lt;a href=&#34;https://github.com/xerub/sshrd&#34;&gt;restored_external&lt;/a&gt; in the ramdisk&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Cryptiiiic&#34;&gt;Cryptic&lt;/a&gt; for &lt;a href=&#34;https://github.com/Cryptiiiic/iBoot64Patcher&#34;&gt;iBoot64Patcher&lt;/a&gt; fork, and &lt;a href=&#34;https://github.com/Cryptiiiic/liboffsetfinder64&#34;&gt;liboffsetfinder64&lt;/a&gt; fork&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libimobiledevice&#34;&gt;libimobiledevice&lt;/a&gt; for several tools used in this project (irecovery, ideviceenterrecovery etc), and &lt;a href=&#34;https://github.com/nikias&#34;&gt;nikias&lt;/a&gt; for keeping it up to date&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/asdfugil&#34;&gt;Nick Chan&lt;/a&gt; general help with patches.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sbingner&#34;&gt;Sam Bingner&lt;/a&gt; for &lt;a href=&#34;https://github.com/sbingner/substitute&#34;&gt;Substitute&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>