<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-28T01:45:43Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rustdesk/rustdesk</title>
    <updated>2024-01-28T01:45:43Z</updated>
    <id>tag:github.com,2024-01-28:/rustdesk/rustdesk</id>
    <link href="https://github.com/rustdesk/rustdesk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source remote desktop, and alternative to TeamViewer.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/res/logo-header.svg?sanitize=true&#34; alt=&#34;RustDesk - Your remote desktop&#34;&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/#free-public-servers&#34;&gt;Servers&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/#raw-steps-to-build&#34;&gt;Build&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/#how-to-build-with-docker&#34;&gt;Docker&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/#file-structure&#34;&gt;Structure&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/#snapshot&#34;&gt;Snapshot&lt;/a&gt;&lt;br&gt; [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-UA.md&#34;&gt;Українська&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-CS.md&#34;&gt;česky&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-ZH.md&#34;&gt;中文&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-HU.md&#34;&gt;Magyar&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-ES.md&#34;&gt;Español&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-FA.md&#34;&gt;فارسی&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-FR.md&#34;&gt;Français&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-DE.md&#34;&gt;Deutsch&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-PL.md&#34;&gt;Polski&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-ID.md&#34;&gt;Indonesian&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-FI.md&#34;&gt;Suomi&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-ML.md&#34;&gt;മലയാളം&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-JP.md&#34;&gt;日本語&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-NL.md&#34;&gt;Nederlands&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-IT.md&#34;&gt;Italiano&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-RU.md&#34;&gt;Русский&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-PTBR.md&#34;&gt;Português (Brasil)&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-EO.md&#34;&gt;Esperanto&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-KR.md&#34;&gt;한국어&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-AR.md&#34;&gt;العربي&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-VN.md&#34;&gt;Tiếng Việt&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-DA.md&#34;&gt;Dansk&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-GR.md&#34;&gt;Ελληνικά&lt;/a&gt;] | [&lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-TR.md&#34;&gt;Türkçe&lt;/a&gt;]&lt;br&gt; &lt;b&gt;We need your help to translate this README, &lt;a href=&#34;https://github.com/rustdesk/rustdesk/tree/master/src/lang&#34;&gt;RustDesk UI&lt;/a&gt; and &lt;a href=&#34;https://github.com/rustdesk/doc.rustdesk.com&#34;&gt;RustDesk Doc&lt;/a&gt; to your native language&lt;/b&gt; &lt;/p&gt; &#xA;&lt;p&gt;Chat with us: &lt;a href=&#34;https://discord.gg/nDceKgxnkV&#34;&gt;Discord&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/rustdesk&#34;&gt;Twitter&lt;/a&gt; | &lt;a href=&#34;https://www.reddit.com/r/rustdesk&#34;&gt;Reddit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/I2I04VU09&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://console.algora.io/org/rustdesk/bounties?status=open&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2Frustdesk%2Fbounties%3Fstatus%3Dopen&#34; alt=&#34;Open Bounties&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Yet another remote desktop software, written in Rust. Works out of the box, no configuration required. You have full control of your data, with no concerns about security. You can use our rendezvous/relay server, &lt;a href=&#34;https://rustdesk.com/server&#34;&gt;set up your own&lt;/a&gt;, or &lt;a href=&#34;https://github.com/rustdesk/rustdesk-server-demo&#34;&gt;write your own rendezvous/relay server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71636191/171661982-430285f0-2e12-4b1d-9957-4a58e375304d.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;RustDesk welcomes contribution from everyone. See &lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for help getting started.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/wiki/FAQ&#34;&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/releases&#34;&gt;&lt;strong&gt;BINARY DOWNLOAD&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/releases/tag/nightly&#34;&gt;&lt;strong&gt;NIGHTLY BUILD&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f-droid.org/en/packages/com.carriez.flutter_hbb&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Free Public Servers&lt;/h2&gt; &#xA;&lt;p&gt;Below are the servers you are using for free, they may change over time. If you are not close to one of these, your network may be slow.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Location&lt;/th&gt; &#xA;   &lt;th&gt;Vendor&lt;/th&gt; &#xA;   &lt;th&gt;Specification&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Germany&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.hetzner.com&#34;&gt;Hetzner&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2 vCPU / 4 GB RAM&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ukraine (Kyiv)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dc.volia.com&#34;&gt;dc.volia&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2 vCPU / 4 GB RAM&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Dev Container&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/rustdesk/rustdesk&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Dev%20Container&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode&#34; alt=&#34;Open in Dev Containers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you already have VS Code and Docker installed, you can click the badge above to get started. Clicking will cause VS Code to automatically install the Dev Containers extension if needed, clone the source code into a container volume, and spin up a dev container for use.&lt;/p&gt; &#xA;&lt;p&gt;Go through &lt;a href=&#34;https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/DEVCONTAINER.md&#34;&gt;DEVCONTAINER.md&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Desktop versions use Flutter or Sciter (deprecated) for GUI, this tutorial is for Sciter only, since it is easier and more friendly to start. Check out our &lt;a href=&#34;https://github.com/rustdesk/rustdesk/raw/master/.github/workflows/flutter-build.yml&#34;&gt;CI&lt;/a&gt; for building Flutter version.&lt;/p&gt; &#xA;&lt;p&gt;Please download Sciter dynamic library yourself.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.win/x64/sciter.dll&#34;&gt;Windows&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.lnx/x64/libsciter-gtk.so&#34;&gt;Linux&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.osx/libsciter.dylib&#34;&gt;macOS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Raw steps to build&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Prepare your Rust development env and C++ build env&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://github.com/microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt;, and set &lt;code&gt;VCPKG_ROOT&lt;/code&gt; env variable correctly&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows: vcpkg install libvpx:x64-windows-static libyuv:x64-windows-static opus:x64-windows-static aom:x64-windows-static&lt;/li&gt; &#xA;   &lt;li&gt;Linux/macOS: vcpkg install libvpx libyuv opus aom&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;run &lt;code&gt;cargo run&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://rustdesk.com/docs/en/dev/build/&#34;&gt;Build&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;How to build on Linux&lt;/h2&gt; &#xA;&lt;h3&gt;Ubuntu 18 (Debian 10)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt install -y zip g++ gcc git curl wget nasm yasm libgtk-3-dev clang libxcb-randr0-dev libxdo-dev \&#xA;        libxfixes-dev libxcb-shape0-dev libxcb-xfixes0-dev libasound2-dev libpulse-dev cmake make \&#xA;        libclang-dev ninja-build libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;openSUSE Tumbleweed&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo zypper install gcc-c++ git curl wget nasm yasm gcc gtk3-devel clang libxcb-devel libXfixes-devel cmake alsa-lib-devel gstreamer-devel gstreamer-plugins-base-devel xdotool-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fedora 28 (CentOS 8)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo yum -y install gcc-c++ git curl wget nasm yasm gcc gtk3-devel clang libxcb-devel libxdo-devel libXfixes-devel pulseaudio-libs-devel cmake alsa-lib-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arch (Manjaro)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo pacman -Syu --needed unzip git cmake gcc curl wget yasm nasm zip make pkg-config clang gtk3 xdotool libxcb libxfixes alsa-lib pipewire&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install vcpkg&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/microsoft/vcpkg&#xA;cd vcpkg&#xA;git checkout 2023.04.15&#xA;cd ..&#xA;vcpkg/bootstrap-vcpkg.sh&#xA;export VCPKG_ROOT=$HOME/vcpkg&#xA;vcpkg/vcpkg install libvpx libyuv opus aom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fix libvpx (For Fedora)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd vcpkg/buildtrees/libvpx/src&#xA;cd *&#xA;./configure&#xA;sed -i &#39;s/CFLAGS+=-I/CFLAGS+=-fPIC -I/g&#39; Makefile&#xA;sed -i &#39;s/CXXFLAGS+=-I/CXXFLAGS+=-fPIC -I/g&#39; Makefile&#xA;make&#xA;cp libvpx.a $HOME/vcpkg/installed/x64-linux/lib/&#xA;cd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&#xA;source $HOME/.cargo/env&#xA;git clone https://github.com/rustdesk/rustdesk&#xA;cd rustdesk&#xA;mkdir -p target/debug&#xA;wget https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.lnx/x64/libsciter-gtk.so&#xA;mv libsciter-gtk.so target/debug&#xA;VCPKG_ROOT=$HOME/vcpkg cargo run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to build with Docker&lt;/h2&gt; &#xA;&lt;p&gt;Begin by cloning the repository and building the Docker container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/rustdesk/rustdesk&#xA;cd rustdesk&#xA;docker build -t &#34;rustdesk-builder&#34; .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, each time you need to build the application, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run --rm -it -v $PWD:/home/user/rustdesk -v rustdesk-git-cache:/home/user/.cargo/git -v rustdesk-registry-cache:/home/user/.cargo/registry -e PUID=&#34;$(id -u)&#34; -e PGID=&#34;$(id -g)&#34; rustdesk-builder&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the first build may take longer before dependencies are cached, subsequent builds will be faster. Additionally, if you need to specify different arguments to the build command, you may do so at the end of the command in the &lt;code&gt;&amp;lt;OPTIONAL-ARGS&amp;gt;&lt;/code&gt; position. For instance, if you wanted to build an optimized release version, you would run the command above followed by &lt;code&gt;--release&lt;/code&gt;. The resulting executable will be available in the target folder on your system, and can be run with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;target/debug/rustdesk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you&#39;re running a release executable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;target/release/rustdesk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please ensure that you are running these commands from the root of the RustDesk repository, otherwise the application might not be able to find the required resources. Also note that other cargo subcommands such as &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;run&lt;/code&gt; are not currently supported via this method as they would install or run the program inside the container instead of the host.&lt;/p&gt; &#xA;&lt;h2&gt;File Structure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/tree/master/libs/hbb_common&#34;&gt;libs/hbb_common&lt;/a&gt;&lt;/strong&gt;: video codec, config, tcp/udp wrapper, protobuf, fs functions for file transfer, and some other utility functions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/tree/master/libs/scrap&#34;&gt;libs/scrap&lt;/a&gt;&lt;/strong&gt;: screen capture&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/tree/master/libs/enigo&#34;&gt;libs/enigo&lt;/a&gt;&lt;/strong&gt;: platform specific keyboard/mouse control&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/tree/master/libs/clipboard&#34;&gt;libs/clipboard&lt;/a&gt;&lt;/strong&gt;: file copy and paste implementation for Windows, Linux, macOS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/tree/master/src/ui&#34;&gt;src/ui&lt;/a&gt;&lt;/strong&gt;: obsolete Sciter UI (deprecated)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/tree/master/src/server&#34;&gt;src/server&lt;/a&gt;&lt;/strong&gt;: audio/clipboard/input/video services, and network connections&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/tree/master/src/client.rs&#34;&gt;src/client.rs&lt;/a&gt;&lt;/strong&gt;: start a peer connection&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/tree/master/src/rendezvous_mediator.rs&#34;&gt;src/rendezvous_mediator.rs&lt;/a&gt;&lt;/strong&gt;: Communicate with &lt;a href=&#34;https://github.com/rustdesk/rustdesk-server&#34;&gt;rustdesk-server&lt;/a&gt;, wait for remote direct (TCP hole punching) or relayed connection&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/tree/master/src/platform&#34;&gt;src/platform&lt;/a&gt;&lt;/strong&gt;: platform specific code&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/tree/master/flutter&#34;&gt;flutter&lt;/a&gt;&lt;/strong&gt;: Flutter code for desktop and mobile&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rustdesk/rustdesk/tree/master/flutter/web/js&#34;&gt;flutter/web/js&lt;/a&gt;&lt;/strong&gt;: JavaScript for Flutter web client&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Snapshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71636191/113112362-ae4deb80-923b-11eb-957d-ff88daad4f06.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71636191/113112619-f705a480-923b-11eb-911d-97e984ef52b6.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71636191/113112857-3fbd5d80-923c-11eb-9836-768325faf906.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71636191/135385039-38fdbd72-379a-422d-b97f-33df71fb1cec.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RVC-Boss/GPT-SoVITS</title>
    <updated>2024-01-28T01:45:43Z</updated>
    <id>tag:github.com,2024-01-28:/RVC-Boss/GPT-SoVITS</id>
    <link href="https://github.com/RVC-Boss/GPT-SoVITS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;1 min voice data can also be used to train a good TTS model! (few shot voice cloning)&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;GPT-SoVITS-WebUI&lt;/h1&gt; A Powerful Few-shot Voice Conversion and Text-to-Speech WebUI.&#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/RVC-Boss/GPT-SoVITS&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/made_with-%E2%9D%A4-red?style=for-the-badge&amp;amp;labelColor=orange&#34; alt=&#34;madewithlove&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://counter.seku.su/cmoe?name=gptsovits&amp;amp;theme=r34&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/RVC-Boss/GPT-SoVITS/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/LICENSE-MIT-green.svg?style=for-the-badge&#34; alt=&#34;Licence&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/lj1995/GPT-SoVITS/tree/main&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20-Models%20Repo-yellow.svg?style=for-the-badge&#34; alt=&#34;Huggingface&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RVC-Boss/GPT-SoVITS/main/README.md&#34;&gt;&lt;strong&gt;English&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/RVC-Boss/GPT-SoVITS/main/docs/cn/README.md&#34;&gt;&lt;strong&gt;中文简体&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/RVC-Boss/GPT-SoVITS/main/docs/ja/README.md&#34;&gt;&lt;strong&gt;日本語&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Check out our &lt;a href=&#34;https://www.bilibili.com/video/BV12g4y1m7Uw&#34;&gt;demo video&lt;/a&gt; here!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/RVC-Boss/GPT-SoVITS/assets/129054828/05bee1fa-bdd8-4d85-9350-80c060ab47fb&#34;&gt;https://github.com/RVC-Boss/GPT-SoVITS/assets/129054828/05bee1fa-bdd8-4d85-9350-80c060ab47fb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For users in China region, you can use AutoDL Cloud Docker to experience the full functionality online: &lt;a href=&#34;https://www.codewithgpu.com/i/RVC-Boss/GPT-SoVITS/GPT-SoVITS-Official&#34;&gt;https://www.codewithgpu.com/i/RVC-Boss/GPT-SoVITS/GPT-SoVITS-Official&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Zero-shot TTS:&lt;/strong&gt; Input a 5-second vocal sample and experience instant text-to-speech conversion.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Few-shot TTS:&lt;/strong&gt; Fine-tune the model with just 1 minute of training data for improved voice similarity and realism.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cross-lingual Support:&lt;/strong&gt; Inference in languages different from the training dataset, currently supporting English, Japanese, and Chinese.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;WebUI Tools:&lt;/strong&gt; Integrated tools include voice accompaniment separation, automatic training set segmentation, Chinese ASR, and text labeling, assisting beginners in creating training datasets and GPT/SoVITS models.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Environment Preparation&lt;/h2&gt; &#xA;&lt;p&gt;If you are a Windows user (tested with win&amp;gt;=10) you can install directly via the prezip. Just download the &lt;a href=&#34;https://huggingface.co/lj1995/GPT-SoVITS-windows-package/resolve/main/GPT-SoVITS-beta.7z?download=true&#34;&gt;prezip&lt;/a&gt;, unzip it and double-click go-webui.bat to start GPT-SoVITS-WebUI.&lt;/p&gt; &#xA;&lt;h3&gt;Tested Environments&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.9, PyTorch 2.0.1, CUDA 11&lt;/li&gt; &#xA; &lt;li&gt;Python 3.10.13, PyTorch 2.1.2, CUDA 12.3&lt;/li&gt; &#xA; &lt;li&gt;Python 3.9, PyTorch 2.3.0.dev20240122, macOS 14.3 (Apple silicon, GPU)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: numba==0.56.4 require py&amp;lt;3.11&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;For Mac Users&lt;/h3&gt; &#xA;&lt;p&gt;If you are a Mac user, make sure you meet the following conditions for training and inferencing with GPU:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mac computers with Apple silicon or AMD GPUs&lt;/li&gt; &#xA; &lt;li&gt;macOS 12.3 or later&lt;/li&gt; &#xA; &lt;li&gt;Xcode command-line tools installed by running &lt;code&gt;xcode-select --install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Other Macs can do inference with CPU only.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then install by using the following commands:&lt;/p&gt; &#xA;&lt;h4&gt;Create Environment&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create -n GPTSoVits python=3.9&#xA;conda activate GPTSoVits&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install Requirements&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;pip uninstall torch torchaudio&#xA;pip3 install --pre torch torchaudio --index-url https://download.pytorch.org/whl/nightly/cpu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: For preprocessing with UVR5, it is recommended to &lt;a href=&#34;https://github.com/Anjok07/ultimatevocalremovergui&#34;&gt;download the original project GUI&lt;/a&gt; and select &#34;GPU Conversion&#34;. Additionally, there might be memory leak issues, especially during inference. Restarting the inference webUI can help.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Quick Install with Conda&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create -n GPTSoVits python=3.9&#xA;conda activate GPTSoVits&#xA;bash install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install Manually&lt;/h3&gt; &#xA;&lt;h4&gt;Pip Packages&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;FFmpeg&lt;/h4&gt; &#xA;&lt;h5&gt;Conda Users&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda install ffmpeg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Ubuntu/Debian Users&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install ffmpeg&#xA;sudo apt install libsox-dev&#xA;conda install -c conda-forge &#39;ffmpeg&amp;lt;7&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;MacOS Users&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install ffmpeg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Windows Users&lt;/h5&gt; &#xA;&lt;p&gt;Download and place &lt;a href=&#34;https://huggingface.co/lj1995/VoiceConversionWebUI/blob/main/ffmpeg.exe&#34;&gt;ffmpeg.exe&lt;/a&gt; and &lt;a href=&#34;https://huggingface.co/lj1995/VoiceConversionWebUI/blob/main/ffprobe.exe&#34;&gt;ffprobe.exe&lt;/a&gt; in the GPT-SoVITS root.&lt;/p&gt; &#xA;&lt;h3&gt;Pretrained Models&lt;/h3&gt; &#xA;&lt;p&gt;Download pretrained models from &lt;a href=&#34;https://huggingface.co/lj1995/GPT-SoVITS&#34;&gt;GPT-SoVITS Models&lt;/a&gt; and place them in &lt;code&gt;GPT_SoVITS/pretrained_models&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For Chinese ASR (additionally), download models from &lt;a href=&#34;https://modelscope.cn/models/damo/speech_paraformer-large_asr_nat-zh-cn-16k-common-vocab8404-pytorch/files&#34;&gt;Damo ASR Model&lt;/a&gt;, &lt;a href=&#34;https://modelscope.cn/models/damo/speech_fsmn_vad_zh-cn-16k-common-pytorch/files&#34;&gt;Damo VAD Model&lt;/a&gt;, and &lt;a href=&#34;https://modelscope.cn/models/damo/punc_ct-transformer_zh-cn-common-vocab272727-pytorch/files&#34;&gt;Damo Punc Model&lt;/a&gt; and place them in &lt;code&gt;tools/damo_asr/models&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For UVR5 (Vocals/Accompaniment Separation &amp;amp; Reverberation Removal, additionally), download models from &lt;a href=&#34;https://huggingface.co/lj1995/VoiceConversionWebUI/tree/main/uvr5_weights&#34;&gt;UVR5 Weights&lt;/a&gt; and place them in &lt;code&gt;tools/uvr5/uvr5_weights&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;h4&gt;docker-compose.yaml configuration&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Environment Variables：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;is_half: Controls half-precision/double-precision. This is typically the cause if the content under the directories 4-cnhubert/5-wav32k is not generated correctly during the &#34;SSL extracting&#34; step. Adjust to True or False based on your actual situation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Volumes Configuration，The application&#39;s root directory inside the container is set to /workspace. The default docker-compose.yaml lists some practical examples for uploading/downloading content.&lt;/li&gt; &#xA; &lt;li&gt;shm_size： The default available memory for Docker Desktop on Windows is too small, which can cause abnormal operations. Adjust according to your own situation.&lt;/li&gt; &#xA; &lt;li&gt;Under the deploy section, GPU-related settings should be adjusted cautiously according to your system and actual circumstances.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Running with docker compose&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker compose -f &#34;docker-compose.yaml&#34; up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Running with docker command&lt;/h4&gt; &#xA;&lt;p&gt;As above, modify the corresponding parameters based on your actual situation, then run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --rm -it --gpus=all --env=is_half=False --volume=G:\GPT-SoVITS-DockerTest\output:/workspace/output --volume=G:\GPT-SoVITS-DockerTest\logs:/workspace/logs --volume=G:\GPT-SoVITS-DockerTest\SoVITS_weights:/workspace/SoVITS_weights --workdir=/workspace -p 9870:9870 -p 9871:9871 -p 9872:9872 -p 9873:9873 -p 9874:9874 --shm-size=&#34;16G&#34; -d breakstring/gpt-sovits:dev-20240123.03&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Dataset Format&lt;/h2&gt; &#xA;&lt;p&gt;The TTS annotation .list file format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;vocal_path|speaker_name|language|text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Language dictionary:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#39;zh&#39;: Chinese&lt;/li&gt; &#xA; &lt;li&gt;&#39;ja&#39;: Japanese&lt;/li&gt; &#xA; &lt;li&gt;&#39;en&#39;: English&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;D:\GPT-SoVITS\xxx/xxx.wav|xxx|en|I like playing Genshin.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Todo List&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;&lt;strong&gt;High Priority:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Localization in Japanese and English.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; User guide.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Japanese and English dataset fine tune training.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Zero-shot voice conversion (5s) / few-shot voice conversion (1min).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; TTS speaking speed control.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Enhanced TTS emotion control.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Experiment with changing SoVITS token inputs to probability distribution of vocabs.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Improve English and Japanese text frontend.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Develop tiny and larger-sized TTS models.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Colab scripts.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try expand training dataset (2k hours -&amp;gt; 10k hours).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; better sovits base model (enhanced audio quality)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; model mix&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to the following projects and contributors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/innnky/ar-vits&#34;&gt;ar-vits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yangdongchao/SoundStorm/tree/master/soundstorm/s1/AR&#34;&gt;SoundStorm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaywalnut310/vits&#34;&gt;vits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hcy71o/TransferTTS/raw/master/models.py#L556&#34;&gt;TransferTTS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TencentGameMate/chinese_speech_pretrain&#34;&gt;Chinese Speech Pretrain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/auspicious3000/contentvec/&#34;&gt;contentvec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jik876/hifi-gan&#34;&gt;hifi-gan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/hfl/chinese-roberta-wwm-ext-large&#34;&gt;Chinese-Roberta-WWM-Ext-Large&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fishaudio/fish-speech/raw/main/tools/llama/generate.py#L41&#34;&gt;fish-speech&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Anjok07/ultimatevocalremovergui&#34;&gt;ultimatevocalremovergui&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openvpi/audio-slicer&#34;&gt;audio-slicer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cronrpc/SubFix&#34;&gt;SubFix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FFmpeg/FFmpeg&#34;&gt;FFmpeg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;gradio&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks to all contributors for their efforts&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/RVC-Boss/GPT-SoVITS/graphs/contributors&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=RVC-Boss/GPT-SoVITS&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>pjialin/py12306</title>
    <updated>2024-01-28T01:45:43Z</updated>
    <id>tag:github.com,2024-01-28:/pjialin/py12306</id>
    <link href="https://github.com/pjialin/py12306" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚂 12306 购票助手，支持集群，多账号，多任务购票以及 Web 页面管理&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🚂 py12306 购票助手&lt;/h1&gt; &#xA;&lt;p&gt;分布式，多账号，多任务购票&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多日期查询余票&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 自动打码下单&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 用户状态恢复&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 电话语音通知&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多账号、多任务、多线程支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 单个任务多站点查询&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 分布式运行&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Docker 支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 动态修改配置文件&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 邮件通知&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Web 管理页面&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 微信消息通知&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 代理池支持 (&lt;a href=&#34;https://github.com/pjialin/pyproxy-async&#34;&gt;pyproxy-async&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;p&gt;py12306 需要运行在 python 3.6 以上版本（其它版本暂未测试)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. 安装依赖&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/pjialin/py12306&#xA;&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. 配置程序&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp env.py.example env.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;自动打码&lt;/p&gt; &#xA;&lt;p&gt;（若快已停止服务，目前只能设置&lt;strong&gt;free&lt;/strong&gt;打码模式） free 已对接到打码共享平台，&lt;a href=&#34;https://py12306-helper.pjialin.com/&#34;&gt;https://py12306-helper.pjialin.com&lt;/a&gt;，欢迎参与分享&lt;/p&gt; &#xA;&lt;p&gt;语音通知&lt;/p&gt; &#xA;&lt;p&gt;语音验证码使用的是阿里云 API 市场上的一个服务商，需要到 &lt;a href=&#34;https://market.aliyun.com/products/56928004/cmapi026600.html&#34;&gt;https://market.aliyun.com/products/56928004/cmapi026600.html&lt;/a&gt; 购买后将 appcode 填写到配置中&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. 启动前测试&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;目前提供了一些简单的测试，包括用户账号检测，乘客信息检测，车站检测等&lt;/p&gt; &#xA;&lt;p&gt;开始测试 -t&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main.py -t&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;测试通知消息 (语音, 邮件) -t -n&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 默认不会进行通知测试，要对通知进行测试需要加上 -n 参数 &#xA;python main.py -t -n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. 运行程序&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;参数列表&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;-t 测试配置信息&lt;/li&gt; &#xA; &lt;li&gt;-t -n 测试配置信息以及通知消息&lt;/li&gt; &#xA; &lt;li&gt;-c 指定自定义配置文件位置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;分布式集群&lt;/h3&gt; &#xA;&lt;p&gt;集群依赖于 redis，目前支持情况&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;单台主节点多个子节点同时运行&lt;/li&gt; &#xA; &lt;li&gt;主节点宕机后自动切换提升子节点为主节点&lt;/li&gt; &#xA; &lt;li&gt;主节点恢复后自动恢复为真实主节点&lt;/li&gt; &#xA; &lt;li&gt;配置通过主节点同步到所有子节点&lt;/li&gt; &#xA; &lt;li&gt;主节点配置修改后无需重启子节点，支持自动更新&lt;/li&gt; &#xA; &lt;li&gt;子节点消息实时同步到主节点&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;使用&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;将配置文件的中 &lt;code&gt;CLUSTER_ENABLED&lt;/code&gt; 打开即开启分布式&lt;/p&gt; &#xA;&lt;p&gt;目前提供了一个单独的子节点配置文件 &lt;code&gt;env.slave.py.example&lt;/code&gt; 将文件修改为 &lt;code&gt;env.slave.py&lt;/code&gt;， 通过 &lt;code&gt;python main.py -c env.slave.py&lt;/code&gt; 即可快速启动&lt;/p&gt; &#xA;&lt;h2&gt;Docker 使用&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. 将配置文件下载到本地&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm pjialin/py12306 cat /config/env.py &amp;gt; env.py&#xA;# 或&#xA;curl https://raw.githubusercontent.com/pjialin/py12306/master/env.docker.py.example -o env.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. 修改好配置后运行&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name py12306 -p 8008:8008 -d -v $(pwd):/config -v py12306:/data pjialin/py12306&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;当前目录会多一个 12306.log 的日志文件， &lt;code&gt;tail -f 12306.log&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker-compose 中使用&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. 复制配置文件&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp docker-compose.yml.example docker-compose.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. 从 docker-compose 运行&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;在&lt;code&gt;docker-compose.yml&lt;/code&gt;所在的目录使用命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Web 管理页面&lt;/h2&gt; &#xA;&lt;p&gt;目前支持用户和任务以及实时日志查看，更多功能后续会不断加入&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;使用&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;打开 Web 功能需要将配置中的 &lt;code&gt;WEB_ENABLE&lt;/code&gt; 打开，启动程序后访问当前主机地址 + 端口号 (默认 8008) 即可，如 &lt;a href=&#34;http://127.0.0.1:8008&#34;&gt;http://127.0.0.1:8008&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;更新&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;19-01-10 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;支持分布式集群&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;19-01-11 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;配置文件支持动态修改&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;19-01-12 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;新增免费打码&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;19-01-14 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;新增 Web 页面支持&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;19-01-15 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;新增 钉钉通知&lt;/li&gt; &#xA;   &lt;li&gt;新增 Telegram 通知&lt;/li&gt; &#xA;   &lt;li&gt;新增 ServerChan 和 PushBear 微信推送&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;19-01-18 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;新增 CDN 查询&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;截图&lt;/h2&gt; &#xA;&lt;h3&gt;Web 管理页面&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pjialin/py12306/raw/master/data/images/web.png&#34; alt=&#34;Web 管理页面图片&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;下单成功&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pjialin/py12306/raw/master/data/images/order_success.png&#34; alt=&#34;下单成功图片&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;关于防封&lt;/h3&gt; &#xA;&lt;p&gt;目前查询和登录操作是分开的，查询是不依赖用户是否登录，放在 A 云 T 云容易被限制 ip，建议在其它网络环境下运行&lt;/p&gt; &#xA;&lt;p&gt;QQ 交流群 &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5PgzDwV&#34;&gt;780289875&lt;/a&gt;，TG 群 &lt;a href=&#34;https://t.me/joinchat/F3sSegrF3x8KAmsd1mTu7w&#34;&gt;Py12306 交流&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Online IDE&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io#https://github.com/pjialin/py12306&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;在 Gitpod 中打开&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;感谢大佬 &lt;a href=&#34;https://github.com/testerSunshine/12306&#34;&gt;testerSunshine&lt;/a&gt;，借鉴了部分实现&lt;/li&gt; &#xA; &lt;li&gt;感谢所有提供 pr 的大佬&lt;/li&gt; &#xA; &lt;li&gt;感谢大佬 &lt;a href=&#34;https://github.com/zhaipro/easy12306&#34;&gt;zhaipro&lt;/a&gt; 的验证码本地识别模型与算法&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pjialin/py12306/raw/master/LICENSE&#34;&gt;Apache License.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>