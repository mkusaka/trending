<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-05T08:33:35Z</updated>
  <subtitle>Weekly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Snailclimb/JavaGuide</title>
    <updated>2023-02-05T08:33:35Z</updated>
    <id>tag:github.com,2023-02-05:/Snailclimb/JavaGuide</id>
    <link href="https://github.com/Snailclimb/JavaGuide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;「Java学习+面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide！&lt;/p&gt;&lt;hr&gt;&lt;p&gt;推荐你通过在线阅读网站进行阅读，体验更好，速度更快！&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://javaguide.cn/&#34;&gt;JavaGuide 在线阅读网站（新版，推荐👍）&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://snailclimb.gitee.io/javaguide/#/&#34;&gt;JavaGuide 在线阅读版（老版）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html&#34;&gt; &lt;img src=&#34;https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/xingqiu/xingqiu.png&#34; style=&#34;margin: 0 auto; width: 850px;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/Snailclimb/JavaGuide&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img-blog.csdnimg.cn/img_convert/1c00413c65d1995993bf2b0daf7b4f03.png#pic_center&#34; width=&#34;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://javaguide.cn/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/阅读-read-brightgreen.svg&#34; alt=&#34;阅读&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/Snailclimb/JavaGuide&#34; alt=&#34;stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/Snailclimb/JavaGuide&#34; alt=&#34;forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/Snailclimb/JavaGuide&#34; alt=&#34;issues&#34;&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/Snailclimb/JavaGuide&#34;&gt;Github&lt;/a&gt; | &lt;a href=&#34;https://gitee.com/SnailClimb/JavaGuide&#34;&gt;Gitee&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;strong&gt;面试专版&lt;/strong&gt; ：准备面试的小伙伴可以考虑面试专版：&lt;a href=&#34;https://javaguide.cn/zhuanlan/java-mian-shi-zhi-bei.html&#34;&gt;《Java 面试指北 》&lt;/a&gt; (质量很高，专为面试打造，配合 JavaGuide 食用)。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;知识星球&lt;/strong&gt; ：专属面试小册/一对一交流/简历修改/专属求职指南，欢迎加入 &lt;a href=&#34;https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html&#34;&gt;JavaGuide 知识星球&lt;/a&gt;（点击链接即可查看星球的详细介绍，一定一定一定确定自己真的需要再加入，一定一定要看完详细介绍之后再加我）。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;转载须知&lt;/strong&gt; ：以下所有文章如非文首说明为转载皆为我（Guide 哥）的原创，转载在文首注明出处，如发现恶意抄袭/搬运，会动用法律武器维护自己的权益。让我们一起维护一个良好的技术创作环境！&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/gongzhonghaoxuanchuan.png&#34; style=&#34;margin: 0 auto;&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;项目相关&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/intro.md&#34;&gt;项目介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/contribution-guideline.md&#34;&gt;贡献指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/faq.md&#34;&gt;常见问题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/todo.md&#34;&gt;项目待办&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Java&lt;/h2&gt; &#xA;&lt;h3&gt;基础&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; : (必看&lt;span&gt;👍&lt;/span&gt; )：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/java-basic-questions-01.md&#34;&gt;Java 基础常见知识点&amp;amp;面试题总结(上)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/java-basic-questions-02.md&#34;&gt;Java 基础常见知识点&amp;amp;面试题总结(中)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/java-basic-questions-03.md&#34;&gt;Java 基础常见知识点&amp;amp;面试题总结(下)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/why-there-only-value-passing-in-java.md&#34;&gt;为什么 Java 中只有值传递？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/serialization.md&#34;&gt;Java 序列化详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/generics-and-wildcards.md&#34;&gt;泛型&amp;amp;通配符详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/reflection.md&#34;&gt;Java 反射机制详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/proxy.md&#34;&gt;Java 代理模式详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/bigdecimal.md&#34;&gt;BigDecimal 详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/unsafe.md&#34;&gt;Java 魔法类 Unsafe 详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/spi.md&#34;&gt;Java SPI 机制详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/syntactic-sugar.md&#34;&gt;Java 语法糖详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;集合&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/java-collection-questions-01.md&#34;&gt;Java 集合常见知识点&amp;amp;面试题总结(上)&lt;/a&gt; (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/java-collection-questions-02.md&#34;&gt;Java 集合常见知识点&amp;amp;面试题总结(下)&lt;/a&gt; (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/java-collection-precautions-for-use.md&#34;&gt;Java 容器使用注意事项总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;源码分析&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/arraylist-source-code.md&#34;&gt;ArrayList 源码+扩容机制分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/hashmap-source-code.md&#34;&gt;HashMap(JDK1.8)源码+底层数据结构分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/concurrent-hash-map-source-code.md&#34;&gt;ConcurrentHashMap 源码+底层数据结构分析&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;IO&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/io/io-basis.md&#34;&gt;IO 基础知识总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/io/io-design-patterns.md&#34;&gt;IO 设计模式总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/io/io-model.md&#34;&gt;IO 模型详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;并发&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; : (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-questions-01.md&#34;&gt;Java 并发常见知识点&amp;amp;面试题总结（上）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-questions-02.md&#34;&gt;Java 并发常见知识点&amp;amp;面试题总结（中）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-questions-03.md&#34;&gt;Java 并发常见知识点&amp;amp;面试题总结（下）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/jmm.md&#34;&gt;JMM（Java 内存模型）详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;线程池&lt;/strong&gt; ：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-thread-pool-summary.md&#34;&gt;Java 线程池详解&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-thread-pool-best-practices.md&#34;&gt;Java 线程池最佳实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/threadlocal.md&#34;&gt;ThreadLocal 详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-collections.md&#34;&gt;Java 并发容器总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/atomic-classes.md&#34;&gt;Atomic 原子类总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/aqs.md&#34;&gt;AQS 详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/completablefuture-intro.md&#34;&gt;CompletableFuture入门&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;JVM (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;JVM 这部分内容主要参考 &lt;a href=&#34;https://docs.oracle.com/javase/specs/jvms/se8/html/index.html&#34;&gt;JVM 虚拟机规范-Java8 &lt;/a&gt; 和周志明老师的&lt;a href=&#34;https://book.douban.com/subject/34907497/&#34;&gt;《深入理解Java虚拟机（第3版）》&lt;/a&gt; （强烈建议阅读多遍！）。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/memory-area.md&#34;&gt;Java 内存区域&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jvm-garbage-collection.md&#34;&gt;JVM 垃圾回收&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/class-file-structure.md&#34;&gt;类文件结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/class-loading-process.md&#34;&gt;类加载过程&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/classloader.md&#34;&gt;类加载器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jvm-parameters-intro.md&#34;&gt;【待完成】最重要的 JVM 参数总结（翻译完善了一半）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jvm-intro.md&#34;&gt;【加餐】大白话带你认识 JVM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jdk-monitoring-and-troubleshooting-tools.md&#34;&gt;JDK 监控和故障处理工具&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;新特性&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Java 8&lt;/strong&gt; ：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java8-tutorial-translate.md&#34;&gt;Java 8 新特性总结（翻译）&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java8-common-new-features.md&#34;&gt;Java8常用新特性总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java9.md&#34;&gt;Java 9 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java10.md&#34;&gt;Java 10 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java11.md&#34;&gt;Java 11 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java12-13.md&#34;&gt;Java 12~13 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java14.md&#34;&gt;Java 14 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java15.md&#34;&gt;Java 15 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java16.md&#34;&gt;Java 16 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java17.md&#34;&gt;Java 17 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java18.md&#34;&gt;Java 18 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java19.md&#34;&gt;Java 19 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;计算机基础&lt;/h2&gt; &#xA;&lt;h3&gt;操作系统&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/operating-system-basic-questions-01.md&#34;&gt;操作系统常见问题总结！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/linux-intro.md&#34;&gt;后端程序员必备的 Linux 基础知识总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/shell-intro.md&#34;&gt;Shell 编程基础知识总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;网络&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/other-network-questions.md&#34;&gt;计算机网络常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/computer-network-xiexiren-summary.md&#34;&gt;谢希仁老师的《计算机网络》内容总结（补充）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/osi&amp;amp;tcp-ip-model.md&#34;&gt;OSI 和 TCP/IP 网络分层模型详解（基础）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/application-layer-protocol.md&#34;&gt;应用层常见协议总结（应用层）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/http&amp;amp;https.md&#34;&gt;HTTP vs HTTPS（应用层）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/http1.0&amp;amp;http1.1.md&#34;&gt;HTTP 1.0 vs HTTP 1.1（应用层）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/http-status-codes.md&#34;&gt;HTTP 常见状态码（应用层）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/tcp-connection-and-disconnection.md&#34;&gt;TCP 三次握手和四次挥手（传输层）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/tcp-reliability-guarantee.md&#34;&gt;TCP 传输可靠性保障（传输层）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/arp.md&#34;&gt;ARP 协议详解(网络层)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;数据结构&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;图解数据结构：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/linear-data-structure.md&#34;&gt;线性数据结构 :数组、链表、栈、队列&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/graph.md&#34;&gt;图&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/heap.md&#34;&gt;堆&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/tree.md&#34;&gt;树&lt;/a&gt; ：重点关注&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/red-black-tree.md&#34;&gt;红黑树&lt;/a&gt;、B-，B+，B*树、LSM树&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;其他常用数据结构 ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/bloom-filter.md&#34;&gt;布隆过滤器&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;算法&lt;/h3&gt; &#xA;&lt;p&gt;算法这部分内容非常重要，如果你不知道如何学习算法的话，可以看下我写的：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/323359308/answer/1545320858&#34;&gt;算法学习书籍+资源推荐&lt;/a&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/31092580/answer/1534887374&#34;&gt;如何刷Leetcode?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;常见算法问题总结&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/string-algorithm-problems.md&#34;&gt;几道常见的字符串算法题总结 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/linkedlist-algorithm-problems.md&#34;&gt;几道常见的链表算法题总结 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/the-sword-refers-to-offer.md&#34;&gt;剑指 offer 部分编程题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/10-classical-sorting-algorithms.md&#34;&gt;十大经典排序算法&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;另外，&lt;a href=&#34;https://www.geeksforgeeks.org/fundamentals-of-algorithms/&#34;&gt;GeeksforGeeks&lt;/a&gt; 这个网站总结了常见的算法 ，比较全面系统。&lt;/p&gt; &#xA;&lt;h2&gt;数据库&lt;/h2&gt; &#xA;&lt;h3&gt;基础&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/basis.md&#34;&gt;数据库基础知识总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/nosql.md&#34;&gt;NoSQL 基础知识总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/character-set.md&#34;&gt;字符集详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MySQL&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-questions-01.md&#34;&gt;MySQL 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/strong&gt; (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-high-performance-optimization-specification-recommendations.md&#34;&gt;MySQL 高性能优化规范建议总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-index.md&#34;&gt;MySQL索引详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/transaction-isolation-level.md&#34;&gt;MySQL事务隔离级别图文详解)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-logs.md&#34;&gt;MySQL三大日志(binlog、redo log和undo log)详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/innodb-implementation-of-mvcc.md&#34;&gt;InnoDB 存储引擎对 MVCC 的实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/how-sql-executed-in-mysql.md&#34;&gt;SQL 语句在 MySQL 中的执行过程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-query-execution-plan.md&#34;&gt;MySQL执行计划分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-auto-increment-primary-key-continuous.md&#34;&gt;MySQL自增主键一定是连续的吗&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/some-thoughts-on-database-storage-time.md&#34;&gt;MySQL 时间类型数据存储建议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/index-invalidation-caused-by-implicit-conversion.md&#34;&gt;MySQL 隐式转换造成索引失效&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Redis&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; : (必看&lt;span&gt;👍&lt;/span&gt; )：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-questions-01.md&#34;&gt;Redis 常见知识点&amp;amp;面试题总结(上)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-questions-02.md&#34;&gt;Redis 常见知识点&amp;amp;面试题总结(下)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/3-commonly-used-cache-read-and-write-strategies.md&#34;&gt;3种常用的缓存读写策略详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-data-structures-01.md&#34;&gt;Redis 5 种基本数据结构详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-data-structures-02.md&#34;&gt;Redis 3 种特殊数据结构详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-memory-fragmentation.md&#34;&gt;Redis 内存碎片详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-cluster.md&#34;&gt;Redis 集群详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MongoDB&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mongodb/mongodb-questions-01.md&#34;&gt;MongoDB 常见知识点&amp;amp;面试题总结(上)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mongodb/mongodb-questions-02.md&#34;&gt;MongoDB 常见知识点&amp;amp;面试题总结(下)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;搜索引擎&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/elasticsearch/elasticsearch-questions-01.md&#34;&gt;Elasticsearch常见面试题总结(付费)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/gongzhonghaoxuanchuan.png&#34; alt=&#34;JavaGuide 官方公众号&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开发工具&lt;/h2&gt; &#xA;&lt;h3&gt;Maven&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/maven/maven-core-concepts.md&#34;&gt;Maven 核心概念总结&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gradle&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/gradle/gradle-core-concepts.md&#34;&gt;Gradle 核心概念总结&lt;/a&gt;（可选，目前国内还是使用 Maven 普遍一些）&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/docker/docker-intro.md&#34;&gt;Docker 核心概念总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/docker/docker-in-action.md&#34;&gt;Docker 实战&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Git&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/git/git-intro.md&#34;&gt;Git 核心概念总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/git/github-tips.md&#34;&gt;Github 实用小技巧总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;系统设计&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/system-design-questions.md&#34;&gt;系统设计常见面试题总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/design-pattern.md&#34;&gt;设计模式常见面试题总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;基础&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/RESTfulAPI.md&#34;&gt;RestFul API 简明教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/software-engineering.md&#34;&gt;软件工程简明教程简明教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/naming.md&#34;&gt;代码命名指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/refactoring.md&#34;&gt;代码重构指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/unit-test.md&#34;&gt;单元测试指南&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;常用框架&lt;/h3&gt; &#xA;&lt;h4&gt;Spring/SpringBoot (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-knowledge-and-questions-summary.md&#34;&gt;Spring 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/springboot-knowledge-and-questions-summary.md&#34;&gt;SpringBoot 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-common-annotations.md&#34;&gt;Spring/Spring Boot 常用注解总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Snailclimb/springboot-guide&#34;&gt;SpringBoot 入门指南&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-transaction.md&#34;&gt;Spring 事务详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-design-patterns-summary.md&#34;&gt;Spring 中的设计模式详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-boot-auto-assembly-principles.md&#34;&gt;SpringBoot 自动装配原理详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;MyBatis&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/mybatis/mybatis-interview.md&#34;&gt;MyBatis 常见面试题总结&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;安全&lt;/h3&gt; &#xA;&lt;h4&gt;认证授权&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/basis-of-authority-certification.md&#34;&gt;认证授权基础概念详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/jwt-intro.md&#34;&gt;JWT 基础概念详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/advantages&amp;amp;disadvantages-of-jwt.md&#34;&gt;JWT 优缺点分析以及常见问题解决方案&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/sso-intro.md&#34;&gt;SSO 单点登录详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/design-of-authority-system.md&#34;&gt;权限系统设计详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;数据脱敏&lt;/h4&gt; &#xA;&lt;p&gt;数据脱敏说的就是我们根据特定的规则对敏感信息数据进行变形，比如我们把手机号、身份证号某些位数使用 * 来代替。&lt;/p&gt; &#xA;&lt;h4&gt;敏感词过滤&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/sentive-words-filter.md&#34;&gt;敏感词过滤方案总结&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;定时任务&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/schedule-task.md&#34;&gt;Java 定时任务详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Web 实时消息推送&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/web-real-time-message-push.md&#34;&gt;Web 实时消息推送详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;分布式&lt;/h2&gt; &#xA;&lt;h3&gt;理论&amp;amp;算法&amp;amp;协议&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/theorem&amp;amp;algorithm&amp;amp;protocol/cap&amp;amp;base-theorem.md&#34;&gt;CAP 理论和 BASE 理论解读&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/theorem&amp;amp;algorithm&amp;amp;protocol/paxos-algorithm.md&#34;&gt;Paxos 算法解读&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/theorem&amp;amp;algorithm&amp;amp;protocol/raft-algorithm.md&#34;&gt;Raft 算法解读&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;API 网关&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/api-gateway.md&#34;&gt;API 网关详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;分布式 ID&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-id.md&#34;&gt;分布式 ID 详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;分布式锁&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-lock.md&#34;&gt;分布式锁详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;分布式事务&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-transaction.md&#34;&gt;分布式事务详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;分布式配置中心&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-configuration-center.md&#34;&gt;分布式配置中心详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;RPC&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/rpc/rpc-intro.md&#34;&gt;RPC 基础常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/rpc/dubbo.md&#34;&gt;Dubbo 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ZooKeeper&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;前两篇文章可能有内容重合部分，推荐都看一遍。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-process-coordination/zookeeper/zookeeper-intro.md&#34;&gt;ZooKeeper 相关概念总结(入门)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-process-coordination/zookeeper/zookeeper-plus.md&#34;&gt;ZooKeeper 相关概念总结(进阶)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-process-coordination/zookeeper/zookeeper-in-action.md&#34;&gt;ZooKeeper 实战&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;高性能&lt;/h2&gt; &#xA;&lt;h3&gt;数据库读写分离&amp;amp;分库分表&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/read-and-write-separation-and-library-subtable.md&#34;&gt;数据库读写分离&amp;amp;分库分表详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;负载均衡&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/load-balancing.md&#34;&gt;负载均衡详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SQL 优化&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/sql-optimization.md&#34;&gt;常见 SQL 优化手段总结&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;CDN&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/cdn.md&#34;&gt;CDN（内容分发网络）详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;消息队列&lt;/h3&gt; &#xA;&lt;p&gt;消息队列在分布式系统中主要是为了解耦和削峰。相关阅读： &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/message-queue.md&#34;&gt;消息队列常见问题总结&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;RabbitMQ&lt;/strong&gt; : &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rabbitmq-intro.md&#34;&gt;RabbitMQ 基础知识总结&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rabbitmq-questions.md&#34;&gt;RabbitMQ 常见面试题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RocketMQ&lt;/strong&gt; : &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rocketmq-intro.md&#34;&gt;RocketMQ 基础知识总结&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rocketmq-questions.md&#34;&gt;RocketMQ 常见面试题总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kafka&lt;/strong&gt; ：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/kafka-questions-01.md&#34;&gt;Kafka 常见问题总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;高可用&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/high-availability-system-design.md&#34;&gt;高可用系统设计指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;冗余设计&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/redundancy.md&#34;&gt;冗余设计详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;限流&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/limit-request.md&#34;&gt;服务限流详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;降级&amp;amp;熔断&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/fallback&amp;amp;circuit-breaker.md&#34;&gt;降级&amp;amp;熔断详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;超时&amp;amp;重试&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/timeout-and-retry.md&#34;&gt;超时&amp;amp;重试详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;集群&lt;/h3&gt; &#xA;&lt;p&gt;相同的服务部署多份，避免单点故障。&lt;/p&gt; &#xA;&lt;h3&gt;灾备设计和异地多活&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;灾备&lt;/strong&gt; = 容灾+备份。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;备份&lt;/strong&gt; ： 将系统所产生的的所有重要数据多备份几份。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;容灾&lt;/strong&gt; ： 在异地建立两个完全相同的系统。当某个地方的系统突然挂掉，整个应用系统可以切换到另一个，这样系统就可以正常提供服务了。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;异地多活&lt;/strong&gt; 描述的是将服务部署在异地并且服务同时对外提供服务。和传统的灾备设计的最主要区别在于“多活”，即所有站点都是同时在对外提供服务的。异地多活是为了应对突发状况比如火灾、地震等自然或者人为灾害。&lt;/p&gt; &#xA;&lt;h2&gt;Star 趋势&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Snailclimb/JavaGuide&amp;amp;type=Date&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;公众号&lt;/h2&gt; &#xA;&lt;p&gt;如果大家想要实时关注我更新的文章以及分享的干货的话，可以关注我的公众号。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/gongzhonghaoxuanchuan.png&#34; alt=&#34;JavaGuide 官方公众号&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>geohot/tinygrad</title>
    <updated>2023-02-05T08:33:35Z</updated>
    <id>tag:github.com,2023-02-05:/geohot/tinygrad</id>
    <link href="https://github.com/geohot/tinygrad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;You like pytorch? You like micrograd? You love tinygrad! ❤️&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geohot/tinygrad/master/docs/logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/geohot/tinygrad/workflows/Unit%20Tests/badge.svg?sanitize=true&#34; alt=&#34;Unit Tests&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/ZjZadyC7PK&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/1068976834382925865/widget.png?style=banner2&#34; alt=&#34;tinygrad discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For something in between a &lt;a href=&#34;https://github.com/pytorch/pytorch&#34;&gt;pytorch&lt;/a&gt; and a &lt;a href=&#34;https://github.com/karpathy/micrograd&#34;&gt;karpathy/micrograd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This may not be the best deep learning framework, but it is a deep learning framework.&lt;/p&gt; &#xA;&lt;p&gt;The sub 1000 line core of it is in &lt;code&gt;tinygrad/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Due to its extreme simplicity, it aims to be the easiest framework to add new accelerators to, with support for both inference and training. Support the simple basic ops, and you get SOTA &lt;a href=&#34;https://arxiv.org/abs/1905.11946&#34;&gt;vision&lt;/a&gt; &lt;code&gt;models/efficientnet.py&lt;/code&gt; and &lt;a href=&#34;https://arxiv.org/abs/1706.03762&#34;&gt;language&lt;/a&gt; &lt;code&gt;models/transformer.py&lt;/code&gt; models.&lt;/p&gt; &#xA;&lt;p&gt;We are working on support for the Apple Neural Engine and the Google TPU in the &lt;code&gt;accel/&lt;/code&gt; folder. Eventually, &lt;a href=&#34;https://geohot.github.io/blog/jekyll/update/2021/06/13/a-breakdown-of-ai-chip-companies.html&#34;&gt;we will build custom hardware&lt;/a&gt; for tinygrad, and it will be blindingly fast. Now, it is slow.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/geohot/tinygrad.git&#xA;cd tinygrad&#xA;python3 setup.py develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;There&#39;s a lot of interest in tinygrad lately. Here&#39;s some guidelines for contributing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bugfixes are the best and always welcome! Like &lt;a href=&#34;https://github.com/geohot/tinygrad/pull/421/files&#34;&gt;this one&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you don&#39;t understand the code you are changing, don&#39;t change it!&lt;/li&gt; &#xA; &lt;li&gt;All code golf PRs will be closed, but &lt;a href=&#34;https://github.com/geohot/tinygrad/pull/372/files&#34;&gt;conceptual cleanups&lt;/a&gt; are great.&lt;/li&gt; &#xA; &lt;li&gt;Features are welcome. Though if you are adding a feature, you need to include tests.&lt;/li&gt; &#xA; &lt;li&gt;Improving test coverage is great, with reliable non brittle tests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tinygrad.tensor import Tensor&#xA;&#xA;x = Tensor.eye(3, requires_grad=True)&#xA;y = Tensor([[2.0,0,-2.0]], requires_grad=True)&#xA;z = y.matmul(x).sum()&#xA;z.backward()&#xA;&#xA;print(x.grad.numpy())  # dz/dx&#xA;print(y.grad.numpy())  # dz/dy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Same example in torch&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;&#xA;x = torch.eye(3, requires_grad=True)&#xA;y = torch.tensor([[2.0,0,-2.0]], requires_grad=True)&#xA;z = y.matmul(x).sum()&#xA;z.backward()&#xA;&#xA;print(x.grad)  # dz/dx&#xA;print(y.grad)  # dz/dy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Neural networks?&lt;/h2&gt; &#xA;&lt;p&gt;It turns out, a decent autograd tensor library is 90% of what you need for neural networks. Add an optimizer (SGD, RMSprop, and Adam implemented) from tinygrad.nn.optim, write some boilerplate minibatching code, and you have all you need.&lt;/p&gt; &#xA;&lt;h3&gt;Neural network example (from test/test_mnist.py)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tinygrad.tensor import Tensor&#xA;import tinygrad.nn.optim as optim&#xA;&#xA;class TinyBobNet:&#xA;  def __init__(self):&#xA;    self.l1 = Tensor.uniform(784, 128)&#xA;    self.l2 = Tensor.uniform(128, 10)&#xA;&#xA;  def forward(self, x):&#xA;    return x.dot(self.l1).relu().dot(self.l2).logsoftmax()&#xA;&#xA;model = TinyBobNet()&#xA;optim = optim.SGD([model.l1, model.l2], lr=0.001)&#xA;&#xA;# ... and complete like pytorch, with (x,y) data&#xA;&#xA;out = model.forward(x)&#xA;loss = out.mul(y).mean()&#xA;optim.zero_grad()&#xA;loss.backward()&#xA;optim.step()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GPU and Accelerator Support&lt;/h2&gt; &#xA;&lt;p&gt;tinygrad supports GPUs through PyOpenCL.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tinygrad.tensor import Tensor&#xA;(Tensor.ones(4,4).gpu() + Tensor.ones(4,4).gpu()).cpu()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ANE Support?! (broken)&lt;/h3&gt; &#xA;&lt;p&gt;If all you want to do is ReLU, you are in luck! You can do very fast ReLU (at least 30 MEGAReLUs/sec confirmed)&lt;/p&gt; &#xA;&lt;p&gt;Requires your Python to be signed with &lt;code&gt;ane/lib/sign_python.sh&lt;/code&gt; to add the &lt;code&gt;com.apple.ane.iokit-user-access&lt;/code&gt; entitlement, which also requires &lt;code&gt;sudo nvram boot-args=&#34;amfi_get_out_of_my_way=1 ipc_control_port_options=0&#34;&lt;/code&gt;. Build the library with &lt;code&gt;ane/lib/build.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In order to set boot-args and for the AMFI kext to respect that arg, run &lt;code&gt;csrutil enable --without-kext --without-nvram&lt;/code&gt; in recovery mode.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tinygrad.tensor import Tensor&#xA;&#xA;a = Tensor([-2,-1,0,1,2]).ane()&#xA;b = a.relu()&#xA;print(b.cpu())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Warning: do not rely on the ANE port. It segfaults sometimes. So if you were doing something important with tinygrad and wanted to use the ANE, you might have a bad time.&lt;/p&gt; &#xA;&lt;h3&gt;hlops (in tensor.py)&lt;/h3&gt; &#xA;&lt;p&gt;hlops are syntactic sugar around mlops. They support most things torch does.&lt;/p&gt; &#xA;&lt;h3&gt;mlops&lt;/h3&gt; &#xA;&lt;p&gt;mlops are mid level ops, there&#39;s 15 of them. They understand memory allocation and derivatives&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Relu, Log, Exp                          # unary ops&#xA;Sum, Max                                # reduce ops (with axis argument)&#xA;Add, Sub, Mul, Pow                      # binary ops (no broadcasting, use expand)&#xA;Reshape, Permute, Slice, Expand, Flip   # movement ops&#xA;Conv2D(NCHW)                            # processing op (Matmul is also Conv2D)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You no longer need to write mlops for a new accelerator&lt;/p&gt; &#xA;&lt;h3&gt;Adding an accelerator (llops)&lt;/h3&gt; &#xA;&lt;p&gt;The autodiff stuff is all in mlops now so you can focus on the raw operations&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Buffer                                                     # class of memory on this device&#xA;unary_op  (RELU, EXP, LOG, NEG, GT0)                       # A -&amp;gt; A&#xA;reduce_op (SUM, MAX)                                       # A -&amp;gt; B (smaller size, B has 1 in shape)&#xA;binary_op (ADD, SUB, MUL, DIV, POW, CMPEQ)                 # A + B -&amp;gt; C (all the same size)&#xA;movement_op (RESHAPE, PERMUTE, PAD, SHRINK, EXPAND, FLIP)  # A -&amp;gt; B (different size)&#xA;processing_op (CONV)                                       # A + B -&amp;gt; C&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When tinygrad moves to lazy evaluation, optimizations will happen here.&lt;/p&gt; &#xA;&lt;h2&gt;ImageNet inference&lt;/h2&gt; &#xA;&lt;p&gt;Despite being tiny, tinygrad supports the full EfficientNet. Pass in a picture to discover what it is.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ipython3 examples/efficientnet.py https://media.istockphoto.com/photos/hen-picture-id831791190&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you have a webcam and cv2 installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ipython3 examples/efficientnet.py webcam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PROTIP: Set &#34;GPU=1&#34; environment variable if you want this to go faster.&lt;/p&gt; &#xA;&lt;p&gt;PROPROTIP: Set &#34;DEBUG=1&#34; environment variable if you want to see why it&#39;s slow.&lt;/p&gt; &#xA;&lt;h3&gt;tinygrad supports Stable Diffusion!&lt;/h3&gt; &#xA;&lt;p&gt;You might need to download the &lt;a href=&#34;https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/resolve/main/sd-v1-4.ckpt&#34;&gt;weight&lt;/a&gt; of Stable Diffusion and put it into weights/&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;GPU=1 python3 examples/stable_diffusion.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geohot/tinygrad/master/docs/stable_diffusion_by_tinygrad.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#34;a horse sized cat eating a bagel&#34; &lt;/p&gt; &#xA;&lt;h3&gt;tinygrad supports GANs&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;code&gt;examples/mnist_gan.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geohot/tinygrad/master/docs/mnist_by_tinygrad.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;tinygrad supports yolo&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;code&gt;examples/yolov3.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geohot/tinygrad/master/docs/yolo_by_tinygrad.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;The promise of small&lt;/h2&gt; &#xA;&lt;p&gt;tinygrad will always be below 1000 lines. If it isn&#39;t, we will revert commits until tinygrad becomes smaller.&lt;/p&gt; &#xA;&lt;h3&gt;Drawing Execution Graph&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nodes are Tensors&lt;/li&gt; &#xA; &lt;li&gt;Black edge is a forward pass&lt;/li&gt; &#xA; &lt;li&gt;Blue edge is a backward pass&lt;/li&gt; &#xA; &lt;li&gt;Red edge is data the backward pass depends on&lt;/li&gt; &#xA; &lt;li&gt;Purple edge is intermediates created in the forward&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;GRAPH=1 python3 test/test_mnist.py TestMNIST.test_sgd_onestep&#xA;# requires dot, outputs /tmp/net.svg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m pytest&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>m-bain/whisperX</title>
    <updated>2023-02-05T08:33:35Z</updated>
    <id>tag:github.com,2023-02-05:/m-bain/whisperX</id>
    <link href="https://github.com/m-bain/whisperX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WhisperX: Automatic Speech Recognition with Word-level Timestamps (&amp; Diarization)&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;WhisperX&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/m-bain/whisperX/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/m-bain/whisperX.svg?colorA=orange&amp;amp;colorB=orange&amp;amp;logo=github&#34; alt=&#34;GitHub stars&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/m-bain/whisperX/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/m-bain/whisperx.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/m-bain/whisperX/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/m-bain/whisperX.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/tweet?text=&amp;amp;url=https%3A%2F%2Fgithub.com%2Fm-bain%2FwhisperX&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/url/https/github.com/m-bain/whisperX.svg?style=social&#34; alt=&#34;Twitter&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/m-bain/whisperX/main/#what-is-it&#34;&gt;What is it&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/m-bain/whisperX/main/#setup&#34;&gt;Setup&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/m-bain/whisperX/main/#example&#34;&gt;Usage&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/m-bain/whisperX/main/#other-languages&#34;&gt;Multilingual&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/m-bain/whisperX/main/#contribute&#34;&gt;Contribute&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/m-bain/whisperX/main/EXAMPLES.md&#34;&gt;More examples&lt;/a&gt; &lt;/p&gt; &#xA;&lt;img width=&#34;1216&#34; align=&#34;center&#34; alt=&#34;whisperx-arch&#34; src=&#34;https://user-images.githubusercontent.com/36994049/211200186-8b779e26-0bfd-4127-aee2-5a9238b95e1f.png&#34;&gt; &#xA;&lt;p align=&#34;left&#34;&gt;Whisper-Based Automatic Speech Recognition (ASR) with improved timestamp accuracy using forced alignment. &lt;/p&gt; &#xA;&lt;h2 align=&#34;left&#34; , id=&#34;what-is-it&#34;&gt;What is it 🔎&lt;/h2&gt; &#xA;&lt;p&gt;This repository refines the timestamps of openAI&#39;s Whisper model via forced aligment with phoneme-based ASR models (e.g. wav2vec2.0), multilingual use-case.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Whisper&lt;/strong&gt; is an ASR model &lt;a href=&#34;https://github.com/openai/whisper&#34;&gt;developed by OpenAI&lt;/a&gt;, trained on a large dataset of diverse audio. Whilst it does produces highly accurate transcriptions, the corresponding timestamps are at the utterance-level, not per word, and can be inaccurate by several seconds.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Phoneme-Based ASR&lt;/strong&gt; A suite of models finetuned to recognise the smallest unit of speech distinguishing one word from another, e.g. the element p in &#34;tap&#34;. A popular example model is &lt;a href=&#34;https://huggingface.co/facebook/wav2vec2-large-960h-lv60-self&#34;&gt;wav2vec2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Forced Alignment&lt;/strong&gt; refers to the process by which orthographic transcriptions are aligned to audio recordings to automatically generate phone level segmentation.&lt;/p&gt; &#xA;&lt;h2 align=&#34;left&#34; , id=&#34;highlights&#34;&gt;New🚨&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Batch processing: Add &lt;code&gt;--vad_filter --parallel_bs [int]&lt;/code&gt; for transcribing long audio file in batches (only supported with VAD filtering). Replace &lt;code&gt;[int]&lt;/code&gt; with a batch size that fits your GPU memory, e.g. &lt;code&gt;--parallel_bs 16&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;VAD filtering: Voice Activity Detection (VAD) from &lt;a href=&#34;https://huggingface.co/pyannote/voice-activity-detection&#34;&gt;Pyannote.audio&lt;/a&gt; is used as a preprocessing step to remove reliance on whisper timestamps and only transcribe audio segments containing speech. add &lt;code&gt;--vad_filter&lt;/code&gt; flag, increases timestamp accuracy and robustness (requires more GPU mem due to 30s inputs in wav2vec2)&lt;/li&gt; &#xA; &lt;li&gt;Character level timestamps (see &lt;code&gt;*.char.ass&lt;/code&gt; file output)&lt;/li&gt; &#xA; &lt;li&gt;Diarization (still in beta, add &lt;code&gt;--diarize&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2 align=&#34;left&#34; id=&#34;setup&#34;&gt;Setup ⚙️&lt;/h2&gt; Install this package using &#xA;&lt;p&gt;&lt;code&gt;pip install git+https://github.com/m-bain/whisperx.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If already installed, update package to most recent commit&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install git+https://github.com/m-bain/whisperx.git --upgrade&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If wishing to modify this package, clone and install in editable mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/m-bain/whisperX.git&#xA;$ cd whisperX&#xA;$ pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also need to install ffmpeg, rust etc. Follow openAI instructions here &lt;a href=&#34;https://github.com/openai/whisper#setup&#34;&gt;https://github.com/openai/whisper#setup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Voice Activity Detection Filtering &amp;amp; Diarization&lt;/h3&gt; &#xA;&lt;p&gt;To &lt;strong&gt;enable VAD filtering and Diarization&lt;/strong&gt;, include your Hugging Face access token that you can generate from &lt;a href=&#34;https://huggingface.co/settings/tokens&#34;&gt;Here&lt;/a&gt; after the &lt;code&gt;--hf_token&lt;/code&gt; argument and accept the user agreement for the following models: &lt;a href=&#34;https://huggingface.co/pyannote/segmentation&#34;&gt;Segmentation&lt;/a&gt; , &lt;a href=&#34;https://huggingface.co/pyannote/voice-activity-detection&#34;&gt;Voice Activity Detection (VAD)&lt;/a&gt; , and &lt;a href=&#34;https://huggingface.co/pyannote/speaker-diarization&#34;&gt;Speaker Diarization&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2 align=&#34;left&#34; id=&#34;example&#34;&gt;Usage 💬 (command line)&lt;/h2&gt; &#xA;&lt;h3&gt;English&lt;/h3&gt; &#xA;&lt;p&gt;Run whisper on example segment (using default params)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;whisperx examples/sample01.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For increased timestamp accuracy, at the cost of higher gpu mem, use bigger models and VAD filtering e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;whisperx examples/sample01.wav --model large-v2 --vad_filter --align_model WAV2VEC2_ASR_LARGE_LV60K_960H&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Result using &lt;em&gt;WhisperX&lt;/em&gt; with forced alignment to wav2vec2.0 large:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/36994049/208253969-7e35fe2a-7541-434a-ae91-8e919540555d.mp4&#34;&gt;https://user-images.githubusercontent.com/36994049/208253969-7e35fe2a-7541-434a-ae91-8e919540555d.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Compare this to original whisper out the box, where many transcriptions are out of sync:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/36994049/207743923-b4f0d537-29ae-4be2-b404-bb941db73652.mov&#34;&gt;https://user-images.githubusercontent.com/36994049/207743923-b4f0d537-29ae-4be2-b404-bb941db73652.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Other languages&lt;/h3&gt; &#xA;&lt;p&gt;The phoneme ASR alignment model is &lt;em&gt;language-specific&lt;/em&gt;, for tested languages these models are &lt;a href=&#34;https://github.com/m-bain/whisperX/raw/e909f2f766b23b2000f2d95df41f9b844ac53e49/whisperx/transcribe.py#L22&#34;&gt;automatically picked from torchaudio pipelines or huggingface&lt;/a&gt;. Just pass in the &lt;code&gt;--language&lt;/code&gt; code, and use the whisper &lt;code&gt;--model large&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Currently default models provided for &lt;code&gt;{en, fr, de, es, it, ja, zh, nl, uk, pt}&lt;/code&gt;. If the detected language is not in this list, you need to find a phoneme-based ASR model from &lt;a href=&#34;https://huggingface.co/models&#34;&gt;huggingface model hub&lt;/a&gt; and test it on your data.&lt;/p&gt; &#xA;&lt;h4&gt;E.g. German&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;whisperx --model large --language de examples/sample_de_01.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/36994049/208298811-e36002ba-3698-4731-97d4-0aebd07e0eb3.mov&#34;&gt;https://user-images.githubusercontent.com/36994049/208298811-e36002ba-3698-4731-97d4-0aebd07e0eb3.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See more examples in other languages &lt;a href=&#34;https://raw.githubusercontent.com/m-bain/whisperX/main/EXAMPLES.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Python usage 🐍&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import whisperx&#xA;&#xA;device = &#34;cuda&#34; &#xA;audio_file = &#34;audio.mp3&#34;&#xA;&#xA;# transcribe with original whisper&#xA;model = whisperx.load_model(&#34;large&#34;, device)&#xA;result = model.transcribe(audio_file)&#xA;&#xA;print(result[&#34;segments&#34;]) # before alignment&#xA;&#xA;# load alignment model and metadata&#xA;model_a, metadata = whisperx.load_align_model(language_code=result[&#34;language&#34;], device=device)&#xA;&#xA;# align whisper output&#xA;result_aligned = whisperx.align(result[&#34;segments&#34;], model_a, metadata, audio_file, device)&#xA;&#xA;print(result_aligned[&#34;segments&#34;]) # after alignment&#xA;print(result_aligned[&#34;word_segments&#34;]) # after alignment&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2 align=&#34;left&#34; id=&#34;whisper-mod&#34;&gt;Whisper Modifications&lt;/h2&gt; &#xA;&lt;p&gt;In addition to forced alignment, the following two modifications have been made to the whisper transcription method:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--condition_on_prev_text&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt; by default (reduces hallucination)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clamping segment &lt;code&gt;end_time&lt;/code&gt; to be at least 0.02s (one time precision) later than &lt;code&gt;start_time&lt;/code&gt; (prevents segments with negative duration)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2 align=&#34;left&#34; id=&#34;limitations&#34;&gt;Limitations ⚠️&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Not thoroughly tested, especially for non-english, results may vary -- please post issue to let me know the results on your data&lt;/li&gt; &#xA; &lt;li&gt;Whisper normalises spoken numbers e.g. &#34;fifty seven&#34; to arabic numerals &#34;57&#34;. Need to perform this normalization after alignment, so the phonemes can be aligned. Currently just ignores numbers.&lt;/li&gt; &#xA; &lt;li&gt;If not using VAD filter, whisperx assumes the initial whisper timestamps are accurate to some degree (within margin of 2 seconds, adjust if needed -- bigger margins more prone to alignment errors)&lt;/li&gt; &#xA; &lt;li&gt;Overlapping speech is not handled particularly well by whisper nor whisperx&lt;/li&gt; &#xA; &lt;li&gt;Diariazation is far from perfect.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2 align=&#34;left&#34; id=&#34;contribute&#34;&gt;Contribute 🧑‍🏫&lt;/h2&gt; &#xA;&lt;p&gt;If you are multilingual, a major way you can contribute to this project is to find phoneme models on huggingface (or train your own) and test them on speech for the target language. If the results look good send a merge request and some examples showing its success.&lt;/p&gt; &#xA;&lt;p&gt;The next major upgrade we are working on is whisper with speaker diarization, so if you have any experience on this please share.&lt;/p&gt; &#xA;&lt;h2 align=&#34;left&#34; id=&#34;coming-soon&#34;&gt;Coming Soon 🗓&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Multilingual init&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Subtitle .ass output&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Automatic align model selection based on language detection&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Python usage&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Character level timestamps&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Incorporating speaker diarization&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Inference speedup with batch processing&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Improve diarization (word level). &lt;em&gt;Harder than first thought...&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2 align=&#34;left&#34; id=&#34;contact&#34;&gt;Contact/Support 📇&lt;/h2&gt; &#xA;&lt;p&gt;Contact maxbain[at]robots[dot]ox[dot]ac[dot]uk for queries&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/maxhbain&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2 align=&#34;left&#34; id=&#34;acks&#34;&gt;Acknowledgements 🙏&lt;/h2&gt; &#xA;&lt;p&gt;This work, and my PhD, is supported by the &lt;a href=&#34;https://www.robots.ox.ac.uk/~vgg/&#34;&gt;VGG (Visual Geometry Group)&lt;/a&gt; and University of Oxford.&lt;/p&gt; &#xA;&lt;p&gt;Of course, this is builds on &lt;a href=&#34;https://github.com/openai/whisper&#34;&gt;openAI&#39;s whisper&lt;/a&gt;. And borrows important alignment code from &lt;a href=&#34;https://pytorch.org/tutorials/intermediate/forced_alignment_with_torchaudio_tutorial.html&#34;&gt;PyTorch tutorial on forced alignment&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2 align=&#34;left&#34; id=&#34;cite&#34;&gt;Citation&lt;/h2&gt; If you use this in your research, for now just cite the repo, &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{bain2022whisperx,&#xA;  author = {Bain, Max and Han, Tengda},&#xA;  title = {WhisperX},&#xA;  year = {2022},&#xA;  publisher = {GitHub},&#xA;  journal = {GitHub repository},&#xA;  howpublished = {\url{https://github.com/m-bain/whisperX}},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;as well as the whisper paper,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{radford2022robust,&#xA;  title={Robust speech recognition via large-scale weak supervision},&#xA;  author={Radford, Alec and Kim, Jong Wook and Xu, Tao and Brockman, Greg and McLeavey, Christine and Sutskever, Ilya},&#xA;  journal={arXiv preprint arXiv:2212.04356},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and any alignment model used, e.g. wav2vec2.0.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{baevski2020wav2vec,&#xA;  title={wav2vec 2.0: A framework for self-supervised learning of speech representations},&#xA;  author={Baevski, Alexei and Zhou, Yuhao and Mohamed, Abdelrahman and Auli, Michael},&#xA;  journal={Advances in Neural Information Processing Systems},&#xA;  volume={33},&#xA;  pages={12449--12460},&#xA;  year={2020}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>