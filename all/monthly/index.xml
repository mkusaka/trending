<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-01T01:46:09Z</updated>
  <subtitle>Monthly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>elizaOS/eliza</title>
    <updated>2025-01-01T01:46:09Z</updated>
    <id>tag:github.com,2025-01-01:/elizaOS/eliza</id>
    <link href="https://github.com/elizaOS/eliza" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Autonomous agents for everyone&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Eliza 🤖&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/docs/static/img/eliza_banner.jpg&#34; alt=&#34;Eliza Banner&#34; width=&#34;100%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;📖 &lt;a href=&#34;https://elizaos.github.io/eliza/&#34;&gt;Documentation&lt;/a&gt; | 🎯 &lt;a href=&#34;https://github.com/thejoven/awesome-eliza&#34;&gt;Examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🌍 README Translations&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_CN.md&#34;&gt;中文说明&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_JA.md&#34;&gt;日本語の説明&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_KOR.md&#34;&gt;한국어 설명&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_FR.md&#34;&gt;Français&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_PTBR.md&#34;&gt;Português&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_TR.md&#34;&gt;Türkçe&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_RU.md&#34;&gt;Русский&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_ES.md&#34;&gt;Español&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_IT.md&#34;&gt;Italiano&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_TH.md&#34;&gt;ไทย&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_DE.md&#34;&gt;Deutsch&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_VI.md&#34;&gt;Tiếng Việt&lt;/a&gt; | &lt;a href=&#34;https://github.com/elizaos/Elisa/raw/main/README_HE.md&#34;&gt;עִברִית&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/eliza/main/README_TG.md&#34;&gt;Tagalog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🛠️ Full-featured Discord, Twitter and Telegram connectors&lt;/li&gt; &#xA; &lt;li&gt;🔗 Support for every model (Llama, Grok, OpenAI, Anthropic, etc.)&lt;/li&gt; &#xA; &lt;li&gt;👥 Multi-agent and room support&lt;/li&gt; &#xA; &lt;li&gt;📚 Easily ingest and interact with your documents&lt;/li&gt; &#xA; &lt;li&gt;💾 Retrievable memory and document store&lt;/li&gt; &#xA; &lt;li&gt;🚀 Highly extensible - create your own actions and clients&lt;/li&gt; &#xA; &lt;li&gt;☁️ Supports many models (local Llama, OpenAI, Anthropic, Groq, etc.)&lt;/li&gt; &#xA; &lt;li&gt;📦 Just works!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Video Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ArptLpQiKfI&amp;amp;list=PLx5pnFXdPTRzWla0RaOxALTSTnVq53fKL&#34;&gt;AI Agent Dev School&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🎯 Use Cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🤖 Chatbots&lt;/li&gt; &#xA; &lt;li&gt;🕵️ Autonomous Agents&lt;/li&gt; &#xA; &lt;li&gt;📈 Business Process Handling&lt;/li&gt; &#xA; &lt;li&gt;🎮 Video Game NPCs&lt;/li&gt; &#xA; &lt;li&gt;🧠 Trading&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python 2.7+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.npmjs.com/downloading-and-installing-node-js-and-npm&#34;&gt;Node.js 23+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pnpm.io/installation&#34;&gt;pnpm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note for Windows Users:&lt;/strong&gt; &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install-manual&#34;&gt;WSL 2&lt;/a&gt; is required.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Use the Starter (Recommended)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/elizaos/eliza-starter.git&#xA;cd eliza-starter&#xA;cp .env.example .env&#xA;pnpm i &amp;amp;&amp;amp; pnpm build &amp;amp;&amp;amp; pnpm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the agent is running, You should see the message to run &#34;pnpm start:client&#34; at the end. Open another terminal and move to same directory and then run below command and follow the URL to chat to your agent.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm start:client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then read the &lt;a href=&#34;https://elizaos.github.io/eliza/&#34;&gt;Documentation&lt;/a&gt; to learn how to customize your Eliza.&lt;/p&gt; &#xA;&lt;h3&gt;Manually Start Eliza (Only recommended if you know what you are doing)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone the repository&#xA;git clone https://github.com/elizaos/eliza.git&#xA;&#xA;# Checkout the latest release&#xA;# This project iterates fast, so we recommend checking out the latest release&#xA;git checkout $(git describe --tags --abbrev=0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start Eliza with Gitpod&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/elizaos/eliza/tree/main&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Edit the .env file&lt;/h3&gt; &#xA;&lt;p&gt;Copy .env.example to .env and fill in the appropriate values.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: .env is optional. If your planning to run multiple distinct agents, you can pass secrets through the character JSON&lt;/p&gt; &#xA;&lt;h3&gt;Automatically Start Eliza&lt;/h3&gt; &#xA;&lt;p&gt;This will run everything to setup the project and start the bot with the default character.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh scripts/start.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Edit the character file&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;code&gt;packages/core/src/defaultCharacter.ts&lt;/code&gt; to modify the default character. Uncomment and edit.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To load custom characters:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use &lt;code&gt;pnpm start --characters=&#34;path/to/your/character.json&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Multiple character files can be loaded simultaneously&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect with X (Twitter)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;change &lt;code&gt;&#34;clients&#34;: []&lt;/code&gt; to &lt;code&gt;&#34;clients&#34;: [&#34;twitter&#34;]&lt;/code&gt; in the character file to connect with X&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Manually Start Eliza&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm i&#xA;pnpm build&#xA;pnpm start&#xA;&#xA;# The project iterates fast, sometimes you need to clean the project if you are coming back to the project&#xA;pnpm clean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Additional Requirements&lt;/h4&gt; &#xA;&lt;p&gt;You may need to install Sharp. If you see an error when starting up, try installing it with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm install --include=optional sharp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Community &amp;amp; contact&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/elizaos/eliza/issues&#34;&gt;GitHub Issues&lt;/a&gt;. Best for: bugs you encounter using Eliza, and feature proposals.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/ai16z&#34;&gt;Discord&lt;/a&gt;. Best for: sharing your applications and hanging out with the community.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/elizaos/eliza/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=elizaos/eliza&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#elizaos/eliza&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=elizaos/eliza&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cline/cline</title>
    <updated>2025-01-01T01:46:09Z</updated>
    <id>tag:github.com,2025-01-01:/cline/cline</id>
    <link href="https://github.com/cline/cline" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Autonomous coding agent right in your IDE, capable of creating/editing files, executing commands, using the browser, and more with your permission every step of the way.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cline (prev. Claude Dev) – #1 on OpenRouter&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://media.githubusercontent.com/media/cline/cline/main/assets/docs/demo.gif&#34; width=&#34;100%&#34;&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt;&#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=saoudrizwan.claude-dev&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Download on VS Marketplace&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/cline&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Join the Discord&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/cline/cline/discussions/categories/feature-requests?discussions_q=is%3Aopen+category%3A%22Feature+Requests%22+sort%3Atop&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Feature Requests&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://cline.bot/join-us&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;We&#39;re Hiring!&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt;&#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Meet Cline, an AI assistant that can use your &lt;strong&gt;CLI&lt;/strong&gt; a&lt;strong&gt;N&lt;/strong&gt;d &lt;strong&gt;E&lt;/strong&gt;ditor.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to&amp;nbsp;&lt;a href=&#34;https://www-cdn.anthropic.com/fed9cc193a14b84131812372d8d5857f8f304c52/Model_Card_Claude_3_Addendum.pdf&#34;&gt;Claude 3.5 Sonnet&#39;s agentic coding capabilities&lt;/a&gt;,&amp;nbsp;Cline can handle complex software development tasks step-by-step. With tools that let him create &amp;amp; edit files, explore large projects, use the browser, and execute terminal commands (after you grant permission), he can assist you in ways that go beyond code completion or tech support. Cline can even use the Model Context Protocol (MCP) to create new tools and extend his own capabilities. While autonomous AI scripts traditionally run in sandboxed environments, this extension provides a human-in-the-loop GUI to approve every file change and terminal command, providing a safe and accessible way to explore the potential of agentic AI.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enter your task and add images to convert mockups into functional apps or fix bugs with screenshots.&lt;/li&gt; &#xA; &lt;li&gt;Cline starts by analyzing your file structure &amp;amp; source code ASTs, running regex searches, and reading relevant files to get up to speed in existing projects. By carefully managing what information is added to context, Cline can provide valuable assistance even for large, complex projects without overwhelming the context window.&lt;/li&gt; &#xA; &lt;li&gt;Once Cline has the information he needs, he can: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Create and edit files + monitor linter/compiler errors along the way, letting him proactively fix issues like missing imports and syntax errors on his own.&lt;/li&gt; &#xA;   &lt;li&gt;Execute commands directly in your terminal and monitor their output as he works, letting him e.g., react to dev server issues after editing a file.&lt;/li&gt; &#xA;   &lt;li&gt;For web development tasks, Cline can launch the site in a headless browser, click, type, scroll, and capture screenshots + console logs, allowing him to fix runtime errors and visual bugs.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;When a task is completed, Cline will present the result to you with a terminal command like&amp;nbsp;&lt;code&gt;open -a &#34;Google Chrome&#34; index.html&lt;/code&gt;, which you run with a click of a button.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] Use the&amp;nbsp;&lt;code&gt;CMD/CTRL + Shift + P&lt;/code&gt;&amp;nbsp;shortcut to open the command palette and type&amp;nbsp;&#34;Cline: Open In New Tab&#34;&amp;nbsp;to open the extension as a tab in your editor. This lets you use Cline side-by-side with your file explorer, and see how he changes your workspace more clearly.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;340&#34; src=&#34;https://github.com/user-attachments/assets/3cf21e04-7ce9-4d22-a7b9-ba2c595e88a4&#34;&gt; &#xA;&lt;h3&gt;Use any API and Model&lt;/h3&gt; &#xA;&lt;p&gt;Cline supports API providers like OpenRouter, Anthropic, OpenAI, Google Gemini, AWS Bedrock, Azure, and GCP Vertex. You can also configure any OpenAI compatible API, or use a local model through LM Studio/Ollama. If you&#39;re using OpenRouter, the extension fetches their latest model list, allowing you to use the newest models as soon as they&#39;re available.&lt;/p&gt; &#xA;&lt;p&gt;The extension also keeps track of total tokens and API usage cost for the entire task loop and individual requests, keeping you informed of spend every step of the way.&lt;/p&gt; &#xA;&lt;!-- Transparent pixel to create line break after floating image --&gt; &#xA;&lt;p&gt;&lt;img width=&#34;2000&#34; height=&#34;0&#34; src=&#34;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;370&#34; src=&#34;https://github.com/user-attachments/assets/81be79a8-1fdb-4028-9129-5fe055e01e76&#34;&gt; &#xA;&lt;h3&gt;Run Commands in Terminal&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to the new &lt;a href=&#34;https://code.visualstudio.com/updates/v1_93#_terminal-shell-integration-api&#34;&gt;shell integration updates in VSCode v1.93&lt;/a&gt;, Cline can execute commands directly in your terminal and receive the output. This allows him to perform a wide range of tasks, from installing packages and running build scripts to deploying applications, managing databases, and executing tests, all while adapting to your dev environment &amp;amp; toolchain to get the job done right.&lt;/p&gt; &#xA;&lt;p&gt;For long running processes like dev servers, use the &#34;Proceed While Running&#34; button to let Cline continue in the task while the command runs in the background. As Cline works he’ll be notified of any new terminal output along the way, letting him react to issues that may come up, such as compile-time errors when editing files.&lt;/p&gt; &#xA;&lt;!-- Transparent pixel to create line break after floating image --&gt; &#xA;&lt;p&gt;&lt;img width=&#34;2000&#34; height=&#34;0&#34; src=&#34;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;400&#34; src=&#34;https://github.com/user-attachments/assets/c5977833-d9b8-491e-90f9-05f9cd38c588&#34;&gt; &#xA;&lt;h3&gt;Create and Edit Files&lt;/h3&gt; &#xA;&lt;p&gt;Cline can create and edit files directly in your editor, presenting you a diff view of the changes. You can edit or revert Cline&#39;s changes directly in the diff view editor, or provide feedback in chat until you&#39;re satisfied with the result. Cline also monitors linter/compiler errors (missing imports, syntax errors, etc.) so he can fix issues that come up along the way on his own.&lt;/p&gt; &#xA;&lt;p&gt;All changes made by Cline are recorded in your file&#39;s Timeline, providing an easy way to track and revert modifications if needed.&lt;/p&gt; &#xA;&lt;!-- Transparent pixel to create line break after floating image --&gt; &#xA;&lt;p&gt;&lt;img width=&#34;2000&#34; height=&#34;0&#34; src=&#34;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;370&#34; src=&#34;https://github.com/user-attachments/assets/bc2e85ba-dfeb-4fe6-9942-7cfc4703cbe5&#34;&gt; &#xA;&lt;h3&gt;Use the Browser&lt;/h3&gt; &#xA;&lt;p&gt;With Claude 3.5 Sonnet&#39;s new &lt;a href=&#34;https://www.anthropic.com/news/3-5-models-and-computer-use&#34;&gt;Computer Use&lt;/a&gt; capability, Cline can launch a browser, click elements, type text, and scroll, capturing screenshots and console logs at each step. This allows for interactive debugging, end-to-end testing, and even general web use! This gives him autonomy to fixing visual bugs and runtime issues without you needing to handhold and copy-pasting error logs yourself.&lt;/p&gt; &#xA;&lt;p&gt;Try asking Cline to &#34;test the app&#34;, and watch as he runs a command like &lt;code&gt;npm run dev&lt;/code&gt;, launches your locally running dev server in a browser, and performs a series of tests to confirm that everything works. &lt;a href=&#34;https://x.com/sdrzn/status/1850880547825823989&#34;&gt;See a demo here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- Transparent pixel to create line break after floating image --&gt; &#xA;&lt;p&gt;&lt;img width=&#34;2000&#34; height=&#34;0&#34; src=&#34;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;350&#34; src=&#34;https://github.com/user-attachments/assets/ac0efa14-5c1f-4c26-a42d-9d7c56f5fadd&#34;&gt; &#xA;&lt;h3&gt;&#34;add a tool that...&#34;&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to the &lt;a href=&#34;https://github.com/modelcontextprotocol&#34;&gt;Model Context Protocol&lt;/a&gt;, Cline can extend his capabilities through custom tools. While you can use &lt;a href=&#34;https://github.com/modelcontextprotocol/servers&#34;&gt;community-made servers&lt;/a&gt;, Cline can instead create and install tools tailored to your specific workflow. Just ask Cline to &#34;add a tool&#34; and he will handle everything, from creating a new MCP server to installing it into the extension. These custom tools then become part of Cline&#39;s toolkit, ready to use in future tasks.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;add a tool that fetches Jira tickets&#34;: Retrieve ticket ACs and put Cline to work&lt;/li&gt; &#xA; &lt;li&gt;&#34;add a tool that manages AWS EC2s&#34;: Check server metrics and scale instances up or down&lt;/li&gt; &#xA; &lt;li&gt;&#34;add a tool that pulls the latest PagerDuty incidents&#34;: Fetch details and ask Cline to fix bugs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- Transparent pixel to create line break after floating image --&gt; &#xA;&lt;p&gt;&lt;img width=&#34;2000&#34; height=&#34;0&#34; src=&#34;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;360&#34; src=&#34;https://github.com/user-attachments/assets/7fdf41e6-281a-4b4b-ac19-020b838b6970&#34;&gt; &#xA;&lt;h3&gt;Add Context&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;@url&lt;/code&gt;:&lt;/strong&gt;&amp;nbsp;Paste in a URL for the extension to fetch and convert to markdown, useful when you want to give Cline the latest docs&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;@problems&lt;/code&gt;:&lt;/strong&gt;&amp;nbsp;Add workspace errors and warnings (&#39;Problems&#39; panel) for Cline to fix&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;@file&lt;/code&gt;:&lt;/strong&gt;&amp;nbsp;Adds a file&#39;s contents so you don&#39;t have to waste API requests approving read file (+ type to search files)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;@folder&lt;/code&gt;:&lt;/strong&gt;&amp;nbsp;Adds folder&#39;s files all at once to speed up your workflow even more&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;To contribute to the project, start with our &lt;a href=&#34;https://raw.githubusercontent.com/cline/cline/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; to learn the basics. You can also join our &lt;a href=&#34;https://discord.gg/cline&#34;&gt;Discord&lt;/a&gt; to chat with other contributors in the &lt;code&gt;#contributors&lt;/code&gt; channel. If you&#39;re looking for full-time work, check out our open positions on our &lt;a href=&#34;https://cline.bot/join-us&#34;&gt;careers page&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Local Development Instructions&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Clone the repository &lt;em&gt;(Requires &lt;a href=&#34;https://git-lfs.com/&#34;&gt;git-lfs&lt;/a&gt;)&lt;/em&gt;: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/cline/cline.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Open the project in VSCode: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;code cline&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Install the necessary dependencies for the extension and webview-gui: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run install:all&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Launch by pressing &lt;code&gt;F5&lt;/code&gt; (or &lt;code&gt;Run&lt;/code&gt;-&amp;gt;&lt;code&gt;Start Debugging&lt;/code&gt;) to open a new VSCode window with the extension loaded. (You may need to install the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=connor4312.esbuild-problem-matchers&#34;&gt;esbuild problem matchers extension&lt;/a&gt; if you run into issues building the project.)&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cline/cline/main/LICENSE&#34;&gt;Apache 2.0 © 2024 Cline Bot Inc.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DrewThomasson/ebook2audiobook</title>
    <updated>2025-01-01T01:46:09Z</updated>
    <id>tag:github.com,2025-01-01:/DrewThomasson/ebook2audiobook</id>
    <link href="https://github.com/DrewThomasson/ebook2audiobook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Convert ebooks to audiobooks with chapters and metadata using dynamic AI models and voice cloning. Supports 1,107+ languages!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;📚 ebook2audiobook&lt;/h1&gt; &#xA;&lt;p&gt;CPU/GPU Converter from eBooks to audiobooks with chapters and metadata&lt;br&gt; using Calibre, ffmpeg, XTTSv2, Fairseq and more. Supports voice cloning and 1124 languages!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] &lt;strong&gt;This tool is intended for use with non-DRM, legally acquired eBooks only.&lt;/strong&gt; &lt;br&gt; The authors are not responsible for any misuse of this software or any resulting legal consequences. &lt;br&gt; Use this tool responsibly and in accordance with all applicable laws.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/bg5Kx43c6w&#34;&gt;&lt;img src=&#34;https://dcbadge.limes.pink/api/server/https://discord.gg/bg5Kx43c6w&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;New v2.0 Web GUI Interface!&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/assets/demo_web_gui.gif&#34; alt=&#34;demo_web_gui&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to see images of Web GUI&lt;/summary&gt; &#xA; &lt;img width=&#34;1728&#34; alt=&#34;GUI Screen 1&#34; src=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/assets/gui_1.png&#34;&gt; &#xA; &lt;img width=&#34;1728&#34; alt=&#34;GUI Screen 2&#34; src=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/assets/gui_2.png&#34;&gt; &#xA; &lt;img width=&#34;1728&#34; alt=&#34;GUI Screen 3&#34; src=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/assets/gui_3.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;README.md&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;en &lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/README.md&#34;&gt;English&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#ebook2audiobook&#34;&gt;ebook2audiobook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#new-v20-web-gui-interface&#34;&gt;New v2.0 Web GUI Interface&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#huggingface-space-demo&#34;&gt;Huggingface Space Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#free-google-colab&#34;&gt;Free Google Colab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#demos&#34;&gt;Pre-made Audio Demos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#supported-languages&#34;&gt;Supported Languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#installation-instructions&#34;&gt;Installation Instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#launching-gradio-web-interface&#34;&gt;Launching Gradio Web Interface&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#basic-headless-usage&#34;&gt;Basic Headless Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#headless-custom-xtts-model-usage&#34;&gt;Headless Custom XTTS Model Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#renting-a-gpu&#34;&gt;Renting a GPU&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#help-command-output&#34;&gt;Help command output&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#fine-tuned-tts-models&#34;&gt;Fine Tuned TTS models&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#fine-tuned-tts-collection&#34;&gt;For Collection of Fine-Tuned TTS Models&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#using-docker&#34;&gt;Using Docker&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#docker-compose&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#docker-headless-guide&#34;&gt;Docker headless guide&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#docker-container-file-locations&#34;&gt;Docker container file locations&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#supported-ebook-formats&#34;&gt;Supported eBook Formats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#output&#34;&gt;Output&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#common-issues&#34;&gt;Common Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#special-thanks&#34;&gt;Special Thanks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#join-our-discord-server&#34;&gt;Join Our Discord Server!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#legacy-v10&#34;&gt;Legacy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#glossary-of-sections&#34;&gt;Glossary of Sections&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📖 Converts eBooks to text format with Calibre.&lt;/li&gt; &#xA; &lt;li&gt;📚 Splits eBook into chapters for organized audio.&lt;/li&gt; &#xA; &lt;li&gt;🎙️ High-quality text-to-speech with &lt;a href=&#34;https://huggingface.co/coqui/XTTS-v2&#34;&gt;Coqui XTTSv2&lt;/a&gt; and &lt;a href=&#34;https://github.com/facebookresearch/fairseq/tree/main/examples/mms&#34;&gt;Fairseq&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🗣️ Optional voice cloning with your own voice file.&lt;/li&gt; &#xA; &lt;li&gt;🌍 Supports 1107 languages (English by default). &lt;a href=&#34;https://dl.fbaipublicfiles.com/mms/tts/all-tts-languages.html&#34;&gt;List of Supported languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🖥️ Designed to run on 4GB RAM.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://huggingface.co/spaces/drewThomasson/ebook2audiobook&#34;&gt;Huggingface space demo&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://huggingface.co/spaces/drewThomasson/ebook2audiobook&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Hugging%20Face-Spaces-yellow?style=for-the-badge&amp;amp;logo=huggingface&#34; alt=&#34;Hugging Face&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Huggingface space is running on free cpu tier so expect very slow or timeout lol, just don&#39;t give it giant files is all&lt;/li&gt; &#xA; &lt;li&gt;Best to duplicate space or run locally.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Free Google Colab&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/DrewThomasson/ebook2audiobook/blob/main/Notebooks/colab_ebook2audiobook.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Free Google Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Languages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Arabic (ara)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chinese (zho)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Czech (ces)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dutch (nld)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;English (eng)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;French (fra)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;German (deu)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hindi (hin)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hungarian (hun)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Italian (ita)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Japanese (jpn)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Korean (kor)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Polish (pol)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Portuguese (por)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Russian (rus)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Spanish (spa)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Turkish (tur)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vietnamese (vie)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dl.fbaipublicfiles.com/mms/tts/all-tts-languages.html&#34;&gt;** + 1107 languages via Fairseq**&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;4gb ram&lt;/li&gt; &#xA; &lt;li&gt;Virtualization enabled if running on windows (Docker only)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation Instructions&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone repo&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/DrewThomasson/ebook2audiobook.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specify the language code when running the script in mode.&lt;/p&gt; &#xA;&lt;h3&gt;Launching Gradio Web Interface&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run ebook2audiobook&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Linux/MacOS&lt;/strong&gt;: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ebook2audiobook.sh  # Run Launch script&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;.\ebook2audiobook.cmd  # Run launch script&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open the Web App&lt;/strong&gt;: Click the URL provided in the terminal to access the web app and convert eBooks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;For Public Link&lt;/strong&gt;: Add &lt;code&gt;--share&lt;/code&gt; to the end of it like this: &lt;code&gt;python app.py --share&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;[For More Parameters]&lt;/strong&gt;: use the &lt;code&gt;--help&lt;/code&gt; parameter like this &lt;code&gt;python app.py --help&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Basic Usage&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux/MacOS&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ebook2audiobook.sh  -- --ebook &amp;lt;path_to_ebook_file&amp;gt; --voice [path_to_voice_file] --language [language_code]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;.\ebook2audiobook.cmd  -- --ebook &amp;lt;path_to_ebook_file&amp;gt; --voice [path_to_voice_file] --language [language_code]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&amp;lt;path_to_ebook_file&amp;gt;&lt;/strong&gt;: Path to your eBook file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;[path_to_voice_file]&lt;/strong&gt;: Optional for voice cloning.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;[language_code]&lt;/strong&gt;: Optional to specify ISO-639-3 3+ letters language code (default is eng). ISO-639-1 2 letters code is also supported&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;[For More Parameters]&lt;/strong&gt;: use the &lt;code&gt;--help&lt;/code&gt; parameter like this &lt;code&gt;python app.py --help&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Custom XTTS Model Usage&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux/MacOS&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ebook2audiobook.sh  -- --ebook &amp;lt;ebook_file_path&amp;gt; --voice &amp;lt;target_voice_file_path&amp;gt; --language &amp;lt;language&amp;gt; --custom_model &amp;lt;custom_model_path&amp;gt; --custom_config &amp;lt;custom_config_path&amp;gt; --custom_vocab &amp;lt;custom_vocab_path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;.\ebook2audiobook.cmd  -- --ebook &amp;lt;ebook_file_path&amp;gt; --voice &amp;lt;target_voice_file_path&amp;gt; --language &amp;lt;language&amp;gt; --custom_model &amp;lt;custom_model_path&amp;gt; --custom_config &amp;lt;custom_config_path&amp;gt; --custom_vocab &amp;lt;custom_vocab_path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&amp;lt;ebook_file_path&amp;gt;&lt;/strong&gt;: Path to your eBook file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&amp;lt;target_voice_file_path&amp;gt;&lt;/strong&gt;: Optional for voice cloning.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&#xA;    &lt;language&gt;&lt;/language&gt;&lt;/strong&gt;: Optional to specify language.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&amp;lt;custom_model_path&amp;gt;&lt;/strong&gt;: Path to &lt;code&gt;model.pth&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&amp;lt;custom_config_path&amp;gt;&lt;/strong&gt;: Path to &lt;code&gt;config.json&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&amp;lt;custom_vocab_path&amp;gt;&lt;/strong&gt;: Path to &lt;code&gt;vocab.json&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;[For More Parameters]&lt;/strong&gt;: use the &lt;code&gt;--help&lt;/code&gt; parameter like this &lt;code&gt;python app.py --help&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;For Detailed Guide with list of all Parameters to use&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux/MacOS&lt;/strong&gt;: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./ebook2audiobook.sh  --help&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;.\ebook2audiobook.cmd  --help&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a id=&#34;help-command-output&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This will output the following:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;usage: app.py [-h] [--script_mode SCRIPT_MODE] [--share] [-- []]&#xA;              [--session SESSION] [--ebook EBOOK] [--ebooks_dir [EBOOKS_DIR]]&#xA;              [--voice VOICE] [--language LANGUAGE] [--device {cpu,gpu}]&#xA;              [--custom_model CUSTOM_MODEL] [--temperature TEMPERATURE]&#xA;              [--length_penalty LENGTH_PENALTY]&#xA;              [--repetition_penalty REPETITION_PENALTY] [--top_k TOP_K] [--top_p TOP_P]&#xA;              [--speed SPEED] [--enable_text_splitting] [--fine_tuned FINE_TUNED]&#xA;              [--version]&#xA;&#xA;Convert eBooks to Audiobooks using a Text-to-Speech model. You can either launch the Gradio interface or run the script in  mode for direct conversion.&#xA;&#xA;options:&#xA;  -h, --help            show this help message and exit&#xA;  --script_mode SCRIPT_MODE&#xA;                        Force the script to run in NATIVE or DOCKER_UTILS&#xA;  --share               Enable a public shareable Gradio link. Default to False.&#xA;  -- []&#xA;                        Run in  mode. Default to True if the flag is present without a value, False otherwise.&#xA;  --session SESSION     Session to reconnect in case of interruption ( mode only)&#xA;  --ebook EBOOK         Path to the ebook file for conversion. Required in  mode.&#xA;  --ebooks_dir [EBOOKS_DIR]&#xA;                        Path to the directory containing ebooks for batch conversion. Default to &#34;ebooks&#34; if &#34;default&#34; is provided.&#xA;  --voice VOICE         Path to the target voice file for TTS. Optional, must be 24khz for XTTS and 16khz for fairseq models, uses a default voice if not provided.&#xA;  --language LANGUAGE   Language for the audiobook conversion. Options: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebastiáncoatán, cac-dialect_sanmateoixtatán, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamaríadejesús, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjerónimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachajón, tzh-dialect_tenejapa, tzo-dialect_chenalhó, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Default to English (eng).&#xA;  --device {cpu,gpu}    Type of processor unit for the audiobook conversion. If not specified: check first if gpu available, if not cpu is selected.&#xA;  --custom_model CUSTOM_MODEL&#xA;                        Path to the custom model (.zip file containing [&#39;config.json&#39;, &#39;vocab.json&#39;, &#39;model.pth&#39;, &#39;ref.wav&#39;]). Required if using a custom model.&#xA;  --temperature TEMPERATURE&#xA;                        Temperature for the model. Default to 0.65. Higher temperatures lead to more creative outputs.&#xA;  --length_penalty LENGTH_PENALTY&#xA;                        A length penalty applied to the autoregressive decoder. Default to 1.0. Not applied to custom models.&#xA;  --repetition_penalty REPETITION_PENALTY&#xA;                        A penalty that prevents the autoregressive decoder from repeating itself. Default to 2.5&#xA;  --top_k TOP_K         Top-k sampling. Lower values mean more likely outputs and increased audio generation speed. Default to 50&#xA;  --top_p TOP_P         Top-p sampling. Lower values mean more likely outputs and increased audio generation speed. Default to 0.8&#xA;  --speed SPEED         Speed factor for the speech generation. Default to 1.0&#xA;  --enable_text_splitting&#xA;                        Enable splitting text into sentences. Default to False.&#xA;  --fine_tuned FINE_TUNED&#xA;                        Name of the fine tuned model. Optional, uses the standard model according to the TTS engine and language.&#xA;  --version             Show the version of the script and exit&#xA;&#xA;Example usage:    &#xA;Windows:&#xA;    :&#xA;    ebook2audiobook.cmd -- --ebook &#39;path_to_ebook&#39;&#xA;    Graphic Interface:&#xA;    ebook2audiobook.cmd&#xA;Linux/Mac:&#xA;    :&#xA;    ./ebook2audiobook.sh -- --ebook &#39;path_to_ebook&#39;&#xA;    Graphic Interface:&#xA;    ./ebook2audiobook.sh&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;p&gt;You can also use Docker to run the eBook to Audiobook converter. This method ensures consistency across different environments and simplifies setup.&lt;/p&gt; &#xA;&lt;h4&gt;Running the Docker Container&lt;/h4&gt; &#xA;&lt;p&gt;To run the Docker container and start the Gradio interface, use the following command:&lt;/p&gt; &#xA;&lt;p&gt;-Run with CPU only&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;docker run -it --rm -p 7860:7860 --platform=linux/amd64 athomasson2/ebook2audiobook python app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;-Run with GPU Speedup (Nvida graphics cards only)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;docker run -it --rm --gpus all -p 7860:7860 --platform=linux/amd64 athomasson2/ebook2audiobook python app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will start the Gradio interface on port 7860.(localhost:7860)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For more options like running the docker in mode or making the gradio link public add the &lt;code&gt;--help&lt;/code&gt; parameter after the &lt;code&gt;app.py&lt;/code&gt; in the docker launch command&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docker container file locations&lt;/h2&gt; &#xA;&lt;p&gt;All ebook2audiobooks will have the base dir of &lt;code&gt;/home/user/app/&lt;/code&gt; For example: &lt;code&gt;tmp&lt;/code&gt; = &lt;code&gt;/home/user/app/tmp&lt;/code&gt; &lt;code&gt;audiobooks&lt;/code&gt; = &lt;code&gt;/home/user/app/audiobooks&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docker headless guide&lt;/h2&gt; &#xA;&lt;p&gt;first for a docker pull of the latest with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull athomasson2/ebook2audiobook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Before you do run this you need to create a dir named &#34;input-folder&#34; in your current dir which will be linked, This is where you can put your input files for the docker image to see&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir input-folder &amp;amp;&amp;amp; mkdir Audiobooks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In the command below swap out &lt;strong&gt;YOUR_INPUT_FILE.TXT&lt;/strong&gt; with the name of your input file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm \&#xA;    -v $(pwd)/input-folder:/home/user/app/input_folder \&#xA;    -v $(pwd)/audiobooks:/home/user/app/audiobooks \&#xA;    --platform linux/amd64 \&#xA;    athomasson2/ebook2audiobook \&#xA;    python app.py --headless --ebook /input_folder/YOUR_INPUT_FILE.TXT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;And that should be it!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The output Audiobooks will be found in the Audiobook folder which will also be located in your local dir you ran this docker command in&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;To get the help command for the other parameters this program has you can run this&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm \&#xA;    --platform linux/amd64 \&#xA;    athomasson2/ebook2audiobook \&#xA;    python app.py --help&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and that will output this&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#help-command-output&#34;&gt;Help command output&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;This project uses Docker Compose to run locally. You can enable or disable GPU support by setting either &lt;code&gt;*gpu-enabled&lt;/code&gt; or &lt;code&gt;*gpu-disabled&lt;/code&gt; in &lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Steps to Run&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the Repository&lt;/strong&gt; (if you haven&#39;t already):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/DrewThomasson/ebook2audiobook.git&#xA;cd ebook2audiobook&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set GPU Support (disabled by default)&lt;/strong&gt; To enable GPU support, modify &lt;code&gt;docker-compose.yml&lt;/code&gt; and change &lt;code&gt;*gpu-disabled&lt;/code&gt; to &lt;code&gt;*gpu-enabled&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start the service:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access the service:&lt;/strong&gt; The service will be available at &lt;a href=&#34;http://localhost:7860&#34;&gt;http://localhost:7860&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;New v2.0 Docker Web GUI Interface!&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/assets/demo_web_gui.gif&#34; alt=&#34;demo_web_gui&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to see images of Web GUI&lt;/summary&gt; &#xA; &lt;img width=&#34;1728&#34; alt=&#34;GUI Screen 1&#34; src=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/assets/gui_1.png&#34;&gt; &#xA; &lt;img width=&#34;1728&#34; alt=&#34;GUI Screen 2&#34; src=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/assets/gui_2.png&#34;&gt; &#xA; &lt;img width=&#34;1728&#34; alt=&#34;GUI Screen 3&#34; src=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/assets/gui_3.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Renting a GPU&lt;/h2&gt; &#xA;&lt;p&gt;Don&#39;t have the hardware to run it or you want to rent a GPU?&lt;/p&gt; &#xA;&lt;h4&gt;You can duplicate the hugginface space and rent a gpu for around $0.40 an hour&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#huggingface-space-demo&#34;&gt;Huggingface Space Demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Or you can try using the google colab for free!&lt;/h4&gt; &#xA;&lt;p&gt;(Be aware it will time out after a bit of your not messing with the google colab) &lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/#free-google-colab&#34;&gt;Free Google Colab&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Fine Tuned TTS models&lt;/h2&gt; &#xA;&lt;p&gt;You can fine-tune your own xtts model easily with this repo &lt;a href=&#34;https://github.com/daswer123/xtts-finetune-webui&#34;&gt;xtts-finetune-webui&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to rent a GPU easily you can also duplicate this huggingface &lt;a href=&#34;https://huggingface.co/spaces/drewThomasson/xtts-finetune-webui-gpu&#34;&gt;xtts-finetune-webui-space&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A space you can use to de-noise the training data easily also &lt;a href=&#34;https://huggingface.co/spaces/drewThomasson/DeepFilterNet2_no_limit&#34;&gt;denoise-huggingface-space&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fine Tuned TTS Collection&lt;/h3&gt; &#xA;&lt;p&gt;To find our collection of already fine-tuned TTS models, visit &lt;a href=&#34;https://huggingface.co/drewThomasson/fineTunedTTSModels/tree/main&#34;&gt;this Hugging Face link&lt;/a&gt; For an XTTS custom model a ref audio clip of the voice will also be needed:&lt;/p&gt; &#xA;&lt;h2&gt;Demos&lt;/h2&gt; &#xA;&lt;p&gt;Rainy day voice&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/8486603c-38b1-43ce-9639-73757dfb1031&#34;&gt;https://github.com/user-attachments/assets/8486603c-38b1-43ce-9639-73757dfb1031&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;David Attenborough voice&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/47c846a7-9e51-4eb9-844a-7460402a20a8&#34;&gt;https://github.com/user-attachments/assets/47c846a7-9e51-4eb9-844a-7460402a20a8&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported eBook Formats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.epub&lt;/code&gt;, &lt;code&gt;.pdf&lt;/code&gt;, &lt;code&gt;.mobi&lt;/code&gt;, &lt;code&gt;.txt&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.rtf&lt;/code&gt;, &lt;code&gt;.chm&lt;/code&gt;, &lt;code&gt;.lit&lt;/code&gt;, &lt;code&gt;.pdb&lt;/code&gt;, &lt;code&gt;.fb2&lt;/code&gt;, &lt;code&gt;.odt&lt;/code&gt;, &lt;code&gt;.cbr&lt;/code&gt;, &lt;code&gt;.cbz&lt;/code&gt;, &lt;code&gt;.prc&lt;/code&gt;, &lt;code&gt;.lrf&lt;/code&gt;, &lt;code&gt;.pml&lt;/code&gt;, &lt;code&gt;.snb&lt;/code&gt;, &lt;code&gt;.cbc&lt;/code&gt;, &lt;code&gt;.rb&lt;/code&gt;, &lt;code&gt;.tcr&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Best results&lt;/strong&gt;: &lt;code&gt;.epub&lt;/code&gt; or &lt;code&gt;.mobi&lt;/code&gt; for automatic chapter detection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Output&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Creates an &lt;code&gt;.m4b&lt;/code&gt; file with metadata and chapters.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Example Output&lt;/strong&gt;: &lt;img src=&#34;https://github.com/DrewThomasson/VoxNovel/raw/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg&#34; alt=&#34;Example&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Common Issues:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;It&#39;s slow!&#34; - On CPU only this is very slow, and you can only get speedups though a NVIDIA GPU. &lt;a href=&#34;https://github.com/DrewThomasson/ebook2audiobook/discussions/19#discussioncomment-10879846&#34;&gt;Discussion about this&lt;/a&gt; For faster multilingual generation I would suggest my other &lt;a href=&#34;https://github.com/DrewThomasson/ebook2audiobookpiper-tts&#34;&gt;project that uses piper-tts&lt;/a&gt; instead(It doesn&#39;t have zero-shot voice cloning though, and is siri quality voices, but it is much faster on cpu.)&lt;/li&gt; &#xA; &lt;li&gt;&#34;I&#39;m having dependency issues&#34; - Just use the docker, its fully self contained and has a headless mode, add &lt;code&gt;-h&lt;/code&gt; parameter after the &lt;code&gt;app.py&lt;/code&gt; in the docker run command for more information.&lt;/li&gt; &#xA; &lt;li&gt;&#34;Im getting a truncated audio issue!&#34; - PLEASE MAKE AN ISSUE OF THIS, I don&#39;t speak every language and I need advise from each person to fine tune my sentense splitting function on any other languages.😊&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What I need help with! 🙌&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/DrewThomasson/ebook2audiobook/issues/32&#34;&gt;Full list of things can be found here&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Any help from people speaking any of the supported languages to help with proper sentence splitting methods&lt;/li&gt; &#xA; &lt;li&gt;Potentially creating readme Guides for Multiple languages(Becuase the only language I know is English 😔)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Coqui TTS&lt;/strong&gt;: &lt;a href=&#34;https://github.com/idiap/coqui-ai-TTS&#34;&gt;Coqui TTS GitHub&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Calibre&lt;/strong&gt;: &lt;a href=&#34;https://calibre-ebook.com&#34;&gt;Calibre Website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;FFmpeg&lt;/strong&gt;: &lt;a href=&#34;https://ffmpeg.org&#34;&gt;FFmpeg Website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/DrewThomasson/ebook2audiobook/issues/8&#34;&gt;@shakenbake15 for better chapter saving method&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/legacy/v1.0&#34;&gt;Legacy V1.0&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can view the code &lt;a href=&#34;https://raw.githubusercontent.com/DrewThomasson/ebook2audiobook/main/legacy/v1.0&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Join Our Discord Server!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/bg5Kx43c6w&#34;&gt;&lt;img src=&#34;https://dcbadge.limes.pink/api/server/https://discord.gg/bg5Kx43c6w&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>