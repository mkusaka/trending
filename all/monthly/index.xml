<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-01T01:45:28Z</updated>
  <subtitle>Monthly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bytedance/flowgram.ai</title>
    <updated>2025-06-01T01:45:28Z</updated>
    <id>tag:github.com,2025-06-01:/bytedance/flowgram.ai</id>
    <link href="https://github.com/bytedance/flowgram.ai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FlowGram is a node-based flow building engine that helps developers quickly create workflows in either fixed layout or free connection layout modes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FlowGram.AI&lt;/h1&gt; &#xA;&lt;p&gt;FlowGram is a node-based flow building engine that helps developers quickly create workflows in either fixed layout or free connection layout modes. It provides a set of interaction best practices and is particularly suitable for visual workflows with clear inputs and outputs.&lt;/p&gt; &#xA;&lt;p&gt;In the current AI boom, we are also focusing on how to empower workflows with AI capabilities, hence the AI suffix in our name.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/bytedance/flowgram.ai/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/bytedance/flowgram.ai&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@flowgram.ai/editor&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dw/%40flowgram.ai%2Fcore&#34; alt=&#34;@flowgram.ai/editor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;📖 Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flowgram.ai/&#34;&gt;Official Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bytedance/flowgram.ai/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📦 Packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/create-app&#34;&gt;@flowgram.ai/create-app&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;App Creator&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@flowgram.ai/create-app&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@flowgram.ai/create-app.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bytedance/flowgram.ai/main/packages/client/fixed-layout-editor&#34;&gt;@flowgram.ai/fixed-layout-editor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fixed Layout Editor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@flowgram.ai/fixed-layout-editor&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@flowgram.ai/fixed-layout-editor.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bytedance/flowgram.ai/main/packages/client/free-layout-editor&#34;&gt;@flowgram.ai/free-layout-editor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Free Layout Editor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@flowgram.ai/free-layout-editor&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@flowgram.ai/free-layout-editor.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🎮 Examples&lt;/h2&gt; &#xA;&lt;div&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://flowgram.ai/examples/fixed-layout/fixed-feature-overview.html&#34;&gt; Fixed Layout &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; Fixed layout where nodes can be dragged to specified positions, with support for compound nodes like branches and loops. &lt;/p&gt; &#xA; &lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/docs/src/public/fixed-layout/fixed-layout-demo.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://flowgram.ai/examples/free-layout/free-feature-overview.html&#34;&gt; Free Layout &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; Free layout where nodes can be placed anywhere and connected using free-form lines. &lt;/p&gt; &#xA; &lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/docs/src/public/free-layout/free-layout-demo.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# create demo&#xA;npx @flowgram.ai/create-app@latest&#xA;&#xA;# in PowerShell&#xA;npx &#34;@flowgram.ai/create-app@latest&#34;&#xA;&#xA;# select demo&#xA;- fixed-layout # full-feature overview&#xA;- free-layout # full-feature overview&#xA;- fixed-layout-simple # basic usage&#xA;- free-layout-simple # basic usage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔨 Development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install Node.js 18+&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nvm install lts/hydrogen&#xA;nvm alias default lts/hydrogen # set default node version&#xA;nvm use lts/hydrogen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:bytedance/flowgram.ai.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install required global dependencies&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -g pnpm@9.12.0 @microsoft/rush@5.140.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install project dependencies&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rush update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Build the project&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rush build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run docs or demo&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rush dev:docs # docs&#xA;rush dev:demo-fixed-layout&#xA;rush dev:demo-free-layout&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After that, you can start to develop projects inside this repository.&lt;/p&gt; &#xA;&lt;p&gt;Enjoy it!&lt;/p&gt; &#xA;&lt;h2&gt;Stats&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/2b88f04ae1568daf1e49f77de99bb9d2fbe0d296.svg?sanitize=true&#34; alt=&#34;Repo Stats&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🌟 Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bytedance/flowgram.ai/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=bytedance/flowgram.ai&#34; alt=&#34;FlowGram.AI Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🌟 Contact us&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Issues: &lt;a href=&#34;https://github.com/bytedance/flowgram.ai/issues&#34;&gt;Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lark: Scan the QR code below with &lt;a href=&#34;https://www.feishu.cn/en/&#34;&gt;Register Feishu&lt;/a&gt; to join our FlowGram user group.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/docs/src/public/lark-group.png&#34; width=&#34;200&#34;&gt;</summary>
  </entry>
  <entry>
    <title>appwrite/appwrite</title>
    <updated>2025-06-01T01:45:28Z</updated>
    <id>tag:github.com,2025-06-01:/appwrite/appwrite</id>
    <link href="https://github.com/appwrite/appwrite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build like a team of hundreds_&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://apwr.dev/appcloud&#34;&gt;Get started with Appwrite&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=1g8tuogsp7A&#34;&gt;Join the Init kick off event 19th of May: The future of Appwrite with Founder &amp;amp; CEO Eldad Fux&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://appwrite.io&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/public/images/banner.png&#34; alt=&#34;Appwrite banner, with logo and text saying &#34; Build Like a Team of Hundreds&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;b&gt;Appwrite is a backend platform for developing Web, Mobile, and Flutter applications. Built with the open source community and optimized for developer experience in the coding languages you love.&lt;/b&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;!-- [![Build Status](https://img.shields.io/travis/com/appwrite/appwrite?style=flat-square)](https://travis-ci.com/appwrite/appwrite) --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://appwrite.io/company/careers&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=We&#39;re&amp;amp;message=Hiring&amp;amp;color=blue&amp;amp;style=flat-square&#34; alt=&#34;We&#39;re Hiring label&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hacktoberfest.appwrite.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=hacktoberfest&amp;amp;message=ready&amp;amp;color=191120&amp;amp;style=flat-square&#34; alt=&#34;Hacktoberfest label&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://appwrite.io/discord?r=Github&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/564160730845151244?label=discord&amp;amp;style=flat-square&#34; alt=&#34;Discord label&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/appwrite/appwrite/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/appwrite/appwrite/tests.yml?branch=master&amp;amp;label=tests&amp;amp;style=flat-square&#34; alt=&#34;Build Status label&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/appwrite&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/appwrite?color=00acee&amp;amp;label=twitter&amp;amp;style=flat-square&#34; alt=&#34;X Account label&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- [![Docker Pulls](https://img.shields.io/docker/pulls/appwrite/appwrite?color=f02e65&amp;style=flat-square)](https://hub.docker.com/r/appwrite/appwrite) --&gt; &#xA;&lt;!-- [![Translate](https://img.shields.io/badge/translate-f02e65?style=flat-square)](docs/tutorials/add-translations.md) --&gt; &#xA;&lt;!-- [![Swag Store](https://img.shields.io/badge/swag%20store-f02e65?style=flat-square)](https://store.appwrite.io) --&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/README-CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Appwrite is an end-to-end backend server for Web, Mobile, Native, or Backend apps packaged as a set of Docker&#xA; &lt;nobr&gt;&#xA;   microservices. Appwrite abstracts the complexity and repetitiveness required to build a modern backend API from scratch and allows you to build secure apps faster.&#xA; &lt;/nobr&gt;&lt;/p&gt;&#xA;&lt;nobr&gt; &#xA; &lt;p&gt;Using Appwrite, you can easily integrate your app with user authentication and multiple sign-in methods, a database for storing and querying users and team data, storage and file management, image manipulation, Cloud Functions, messaging, and &lt;a href=&#34;https://appwrite.io/docs&#34;&gt;more services&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://www.producthunt.com/posts/appwrite-2?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-appwrite-2&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=360315&amp;amp;theme=light&amp;amp;period=daily&#34; alt=&#34;Appwrite - 100% open source alternative for Firebase | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/public/images/github.png&#34; alt=&#34;Appwrite project dashboard showing various Appwrite features&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;Find out more at: &lt;a href=&#34;https://appwrite.io&#34;&gt;https://appwrite.io&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Table of Contents:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#self-hosting&#34;&gt;Self-Hosting&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#unix&#34;&gt;Unix&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#windows&#34;&gt;Windows&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#cmd&#34;&gt;CMD&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#powershell&#34;&gt;PowerShell&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#upgrade-from-an-older-version&#34;&gt;Upgrade from an Older Version&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#one-click-setups&#34;&gt;One-Click Setups&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#products&#34;&gt;Products&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#sdks&#34;&gt;SDKs&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#client&#34;&gt;Client&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#server&#34;&gt;Server&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#follow-us&#34;&gt;Follow Us&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h2&gt;Getting Started&lt;/h2&gt; &#xA; &lt;p&gt;The easiest way to get started with Appwrite is by &lt;a href=&#34;https://cloud.appwrite.io/&#34;&gt;signing up for Appwrite Cloud&lt;/a&gt;. While Appwrite Cloud is in public beta, you can build with Appwrite completely free, and we won&#39;t collect you credit card information.&lt;/p&gt; &#xA; &lt;h2&gt;Self-Hosting&lt;/h2&gt; &#xA; &lt;p&gt;Appwrite is designed to run in a containerized environment. Running your server is as easy as running one command from your terminal. You can either run Appwrite on your localhost using docker-compose or on any other container orchestration tool, such as &lt;a href=&#34;https://kubernetes.io/docs/home/&#34;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Docker Swarm&lt;/a&gt;, or &lt;a href=&#34;https://rancher.com/docs/&#34;&gt;Rancher&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Before running the installation command, make sure you have &lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker&lt;/a&gt; installed on your machine:&lt;/p&gt; &#xA; &lt;h3&gt;Unix&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm \&#xA;    --volume /var/run/docker.sock:/var/run/docker.sock \&#xA;    --volume &#34;$(pwd)&#34;/appwrite:/usr/src/code/appwrite:rw \&#xA;    --entrypoint=&#34;install&#34; \&#xA;    appwrite/appwrite:1.7.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Windows&lt;/h3&gt; &#xA; &lt;h4&gt;CMD&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;docker run -it --rm ^&#xA;    --volume //var/run/docker.sock:/var/run/docker.sock ^&#xA;    --volume &#34;%cd%&#34;/appwrite:/usr/src/code/appwrite:rw ^&#xA;    --entrypoint=&#34;install&#34; ^&#xA;    appwrite/appwrite:1.7.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;PowerShell&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;docker run -it --rm `&#xA;    --volume /var/run/docker.sock:/var/run/docker.sock `&#xA;    --volume ${pwd}/appwrite:/usr/src/code/appwrite:rw `&#xA;    --entrypoint=&#34;install&#34; `&#xA;    appwrite/appwrite:1.7.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Once the Docker installation is complete, go to &lt;a href=&#34;http://localhost&#34;&gt;http://localhost&lt;/a&gt; to access the Appwrite console from your browser. Please note that on non-Linux native hosts, the server might take a few minutes to start after completing the installation.&lt;/p&gt; &#xA; &lt;p&gt;For advanced production and custom installation, check out our Docker &lt;a href=&#34;https://appwrite.io/docs/environment-variables&#34;&gt;environment variables&lt;/a&gt; docs. You can also use our public &lt;a href=&#34;https://appwrite.io/install/compose&#34;&gt;docker-compose.yml&lt;/a&gt; and &lt;a href=&#34;https://appwrite.io/install/env&#34;&gt;.env&lt;/a&gt; files to manually set up an environment.&lt;/p&gt; &#xA; &lt;h3&gt;Upgrade from an Older Version&lt;/h3&gt; &#xA; &lt;p&gt;If you are upgrading your Appwrite server from an older version, you should use the Appwrite migration tool once your setup is completed. For more information regarding this, check out the &lt;a href=&#34;https://appwrite.io/docs/self-hosting&#34;&gt;Installation Docs&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;One-Click Setups&lt;/h2&gt; &#xA; &lt;p&gt;In addition to running Appwrite locally, you can also launch Appwrite using a pre-configured setup. This allows you to get up and running quickly with Appwrite without installing Docker on your local machine.&lt;/p&gt; &#xA; &lt;p&gt;Choose from one of the providers below:&lt;/p&gt; &#xA; &lt;table border=&#34;0&#34;&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &lt;a href=&#34;https://marketplace.digitalocean.com/apps/appwrite&#34;&gt; &lt;img width=&#34;50&#34; height=&#34;39&#34; src=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/public/images/integrations/digitalocean-logo.svg?sanitize=true&#34; alt=&#34;DigitalOcean Logo&#34;&gt; &lt;br&gt;&lt;sub&gt;&lt;b&gt;DigitalOcean&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;  &lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/appwrite/integration-for-gitpod&#34;&gt; &lt;img width=&#34;50&#34; height=&#34;39&#34; src=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/public/images/integrations/gitpod-logo.svg?sanitize=true&#34; alt=&#34;Gitpod Logo&#34;&gt; &lt;br&gt;&lt;sub&gt;&lt;b&gt;Gitpod&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;  &lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &lt;a href=&#34;https://www.linode.com/marketplace/apps/appwrite/appwrite/&#34;&gt; &lt;img width=&#34;50&#34; height=&#34;39&#34; src=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/public/images/integrations/akamai-logo.svg?sanitize=true&#34; alt=&#34;Akamai Logo&#34;&gt; &lt;br&gt;&lt;sub&gt;&lt;b&gt;Akamai Compute&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;  &lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &lt;a href=&#34;https://aws.amazon.com/marketplace/pp/prodview-2hiaeo2px4md6&#34;&gt; &lt;img width=&#34;50&#34; height=&#34;39&#34; src=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/public/images/integrations/aws-logo.svg?sanitize=true&#34; alt=&#34;AWS Logo&#34;&gt; &lt;br&gt;&lt;sub&gt;&lt;b&gt;AWS Marketplace&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;  &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA; &lt;h2&gt;Getting Started&lt;/h2&gt; &#xA; &lt;p&gt;Getting started with Appwrite is as easy as creating a new project, choosing your platform, and integrating its SDK into your code. You can easily get started with your platform of choice by reading one of our Getting Started tutorials.&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Platform&lt;/th&gt; &#xA;    &lt;th&gt;Technology&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Web app&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/web&#34;&gt;Quick start for Web&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/nextjs&#34;&gt;Quick start for Next.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/react&#34;&gt;Quick start for React&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/vue&#34;&gt;Quick start for Vue.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/nuxt&#34;&gt;Quick start for Nuxt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/sveltekit&#34;&gt;Quick start for SvelteKit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/refine&#34;&gt;Quick start for Refine&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/angular&#34;&gt;Quick start for Angular&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Mobile and Native&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/react-native&#34;&gt;Quick start for React Native&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/flutter&#34;&gt;Quick start for Flutter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/apple&#34;&gt;Quick start for Apple&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/android&#34;&gt;Quick start for Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Server&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/node&#34;&gt;Quick start for Node.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/python&#34;&gt;Quick start for Python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/dotnet&#34;&gt;Quick start for .NET&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/dart&#34;&gt;Quick start for Dart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/ruby&#34;&gt;Quick start for Ruby&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/deno&#34;&gt;Quick start for Deno&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/php&#34;&gt;Quick start for PHP&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/kotlin&#34;&gt;Quick start for Kotlin&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://appwrite.io/docs/quick-starts/swift&#34;&gt;Quick start for Swift&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;h3&gt;Products&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/references/cloud/client-web/account&#34;&gt;&lt;strong&gt;Account&lt;/strong&gt;&lt;/a&gt; - Manage current user authentication and account. Track and manage the user sessions, devices, sign-in methods, and security logs.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/server/users&#34;&gt;&lt;strong&gt;Users&lt;/strong&gt;&lt;/a&gt; - Manage and list all project users when building backend integrations with Server SDKs.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/references/cloud/client-web/teams&#34;&gt;&lt;strong&gt;Teams&lt;/strong&gt;&lt;/a&gt; - Manage and group users in teams. Manage memberships, invites, and user roles within a team.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/references/cloud/client-web/databases&#34;&gt;&lt;strong&gt;Databases&lt;/strong&gt;&lt;/a&gt; - Manage databases, collections, and documents. Read, create, update, and delete documents and filter lists of document collections using advanced filters.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/references/cloud/client-web/storage&#34;&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;/a&gt; - Manage storage files. Read, create, delete, and preview files. Manipulate the preview of your files to perfectly fit your app. All files are scanned by ClamAV and stored in a secure and encrypted way.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/references/cloud/server-nodejs/functions&#34;&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/a&gt; - Customize your Appwrite project by executing your custom code in a secure, isolated environment. You can trigger your code on any Appwrite system event either manually or using a CRON schedule.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/references/cloud/client-web/messaging&#34;&gt;&lt;strong&gt;Messaging&lt;/strong&gt;&lt;/a&gt; - Communicate with your users through push notifications, emails, and SMS text messages using Appwrite Messaging.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/realtime&#34;&gt;&lt;strong&gt;Realtime&lt;/strong&gt;&lt;/a&gt; - Listen to real-time events for any of your Appwrite services including users, storage, functions, databases, and more.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/references/cloud/client-web/locale&#34;&gt;&lt;strong&gt;Locale&lt;/strong&gt;&lt;/a&gt; - Track your user&#39;s location and manage your app locale-based data.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/references/cloud/client-web/avatars&#34;&gt;&lt;strong&gt;Avatars&lt;/strong&gt;&lt;/a&gt; - Manage your users&#39; avatars, countries&#39; flags, browser icons, and credit card symbols. Generate QR codes from links or plaintext strings.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;For the complete API documentation, visit &lt;a href=&#34;https://appwrite.io/docs&#34;&gt;https://appwrite.io/docs&lt;/a&gt;. For more tutorials, news and announcements check out our &lt;a href=&#34;https://medium.com/appwrite-io&#34;&gt;blog&lt;/a&gt; and &lt;a href=&#34;https://discord.gg/GSeTUeA&#34;&gt;Discord Server&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h3&gt;SDKs&lt;/h3&gt; &#xA; &lt;p&gt;Below is a list of currently supported platforms and languages. If you would like to help us add support to your platform of choice, you can go over to our &lt;a href=&#34;https://github.com/appwrite/sdk-generator&#34;&gt;SDK Generator&lt;/a&gt; project and view our &lt;a href=&#34;https://github.com/appwrite/sdk-generator/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h4&gt;Client&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-web&#34;&gt;Web&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-flutter&#34;&gt;Flutter&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-apple&#34;&gt;Apple&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-android&#34;&gt;Android&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-react-native&#34;&gt;React Native&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Server&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-node&#34;&gt;NodeJS&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-php&#34;&gt;PHP&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-dart&#34;&gt;Dart&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-deno&#34;&gt;Deno&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-ruby&#34;&gt;Ruby&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-python&#34;&gt;Python&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-kotlin&#34;&gt;Kotlin&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-swift&#34;&gt;Swift&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-dotnet&#34;&gt;.NET&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Community&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/m1ga/ti.appwrite&#34;&gt;Appcelerator Titanium&lt;/a&gt; (Maintained by &lt;a href=&#34;https://github.com/m1ga/&#34;&gt;Michael Gangolf&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/GodotNuts/appwrite-sdk&#34;&gt;Godot Engine&lt;/a&gt; (Maintained by &lt;a href=&#34;https://github.com/fenix-hub&#34;&gt;fenix-hub @GodotNuts&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Looking for more SDKs? - Help us by contributing a pull request to our &lt;a href=&#34;https://github.com/appwrite/sdk-generator&#34;&gt;SDK Generator&lt;/a&gt;!&lt;/p&gt; &#xA; &lt;h2&gt;Architecture&lt;/h2&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/docs/specs/overview.drawio.svg?sanitize=true&#34; alt=&#34;Appwrite Architecture showing how Appwrite is built and the services and tools it uses&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;Appwrite uses a microservices architecture that was designed for easy scaling and delegation of responsibilities. In addition, Appwrite supports multiple APIs, such as REST, WebSocket, and GraphQL to allow you to interact with your resources by leveraging your existing knowledge and protocols of choice.&lt;/p&gt; &#xA; &lt;p&gt;The Appwrite API layer was designed to be extremely fast by leveraging in-memory caching and delegating any heavy-lifting tasks to the Appwrite background workers. The background workers also allow you to precisely control your compute capacity and costs using a message queue to handle the load. You can learn more about our architecture in the &lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/CONTRIBUTING.md#architecture-1&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Contributing&lt;/h2&gt; &#xA; &lt;p&gt;All code contributions, including those of people having commit access, must go through a pull request and be approved by a core developer before being merged. This is to ensure a proper review of all the code.&lt;/p&gt; &#xA; &lt;p&gt;We truly &lt;span&gt;❤️&lt;/span&gt; pull requests! If you wish to help, you can learn more about how you can contribute to this project in the &lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Security&lt;/h2&gt; &#xA; &lt;p&gt;For security issues, kindly email us at &lt;a href=&#34;mailto:security@appwrite.io&#34;&gt;security@appwrite.io&lt;/a&gt; instead of posting a public issue on GitHub.&lt;/p&gt; &#xA; &lt;h2&gt;Follow Us&lt;/h2&gt; &#xA; &lt;p&gt;Join our growing community around the world! Check out our official &lt;a href=&#34;https://appwrite.io/blog&#34;&gt;Blog&lt;/a&gt;. Follow us on &lt;a href=&#34;https://twitter.com/appwrite&#34;&gt;X&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/company/appwrite/&#34;&gt;LinkedIn&lt;/a&gt;, &lt;a href=&#34;https://dev.to/appwrite&#34;&gt;Dev Community&lt;/a&gt; or join our live &lt;a href=&#34;https://appwrite.io/discord&#34;&gt;Discord server&lt;/a&gt; for more help, ideas, and discussions.&lt;/p&gt; &#xA; &lt;h2&gt;License&lt;/h2&gt; &#xA; &lt;p&gt;This repository is available under the &lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/main/LICENSE&#34;&gt;BSD 3-Clause License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/nobr&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/qlib</title>
    <updated>2025-06-01T01:45:28Z</updated>
    <id>tag:github.com,2025-06-01:/microsoft/qlib</id>
    <link href="https://github.com/microsoft/qlib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Qlib is an AI-oriented Quant investment platform that aims to use AI tech to empower Quant Research, from exploring ideas to implementing productions. Qlib supports diverse ML modeling paradigms, including supervised learning, market dynamics modeling, and RL, and is now equipped with https://github.com/microsoft/RD-Agent to automate R&amp;D process.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyqlib/#files&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/pyqlib.svg?logo=python&amp;amp;logoColor=white&#34; alt=&#34;Python Versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/pyqlib/#files&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-linux%20%7C%20windows%20%7C%20macos-lightgrey&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/pyqlib/#history&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/pyqlib&#34; alt=&#34;PypI Versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/pyqlib/&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/qlib/workflows/Upload%20Python%20Package/badge.svg?sanitize=true&#34; alt=&#34;Upload Python Package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/actions&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/qlib/workflows/Test/badge.svg?branch=main&#34; alt=&#34;Github Actions Test Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/qlib/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/pyqlib&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/Microsoft/qlib?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Microsoft/qlib.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/Microsoft/qlib&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;📰&lt;/span&gt; &lt;strong&gt;What&#39;s NEW!&lt;/strong&gt; &amp;nbsp; &lt;span&gt;💖&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Recent released features&lt;/p&gt; &#xA;&lt;h3&gt;Introducing &lt;a href=&#34;https://github.com/microsoft/RD-Agent&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/docs/_static/img/rdagent_logo.png&#34; alt=&#34;RD_Agent&#34; style=&#34;height: 2em&#34;&gt;&lt;/a&gt;: LLM-Based Autonomous Evolving Agents for Industrial Data-Driven R&amp;amp;D&lt;/h3&gt; &#xA;&lt;p&gt;We are excited to announce the release of &lt;strong&gt;RD-Agent&lt;/strong&gt;📢, a powerful tool that supports automated factor mining and model optimization in quant investment R&amp;amp;D.&lt;/p&gt; &#xA;&lt;p&gt;RD-Agent is now available on &lt;a href=&#34;https://github.com/microsoft/RD-Agent&#34;&gt;GitHub&lt;/a&gt;, and we welcome your star🌟!&lt;/p&gt; &#xA;&lt;p&gt;To learn more, please visit our &lt;a href=&#34;https://rdagent.azurewebsites.net/&#34;&gt;♾️Demo page&lt;/a&gt;. Here, you will find demo videos in both English and Chinese to help you better understand the scenario and usage of RD-Agent.&lt;/p&gt; &#xA;&lt;p&gt;We have prepared several demo videos for you:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Scenario&lt;/th&gt; &#xA;   &lt;th&gt;Demo video (English)&lt;/th&gt; &#xA;   &lt;th&gt;Demo video (中文)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Quant Factor Mining&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rdagent.azurewebsites.net/factor_loop?lang=en&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rdagent.azurewebsites.net/factor_loop?lang=zh&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Quant Factor Mining from reports&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rdagent.azurewebsites.net/report_factor?lang=en&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rdagent.azurewebsites.net/report_factor?lang=zh&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Quant Model Optimization&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rdagent.azurewebsites.net/model_loop?lang=en&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rdagent.azurewebsites.net/model_loop?lang=zh&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📃&lt;strong&gt;Paper&lt;/strong&gt;: &lt;a href=&#34;https://arxiv.org/abs/2505.15155&#34;&gt;R&amp;amp;D-Agent-Quant: A Multi-Agent Framework for Data-Centric Factors and Model Joint Optimization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;👾&lt;strong&gt;Code&lt;/strong&gt;: &lt;a href=&#34;https://github.com/microsoft/RD-Agent/&#34;&gt;https://github.com/microsoft/RD-Agent/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-BibTeX&#34;&gt;@misc{li2025rdagentquant,&#xA;    title={R\&amp;amp;D-Agent-Quant: A Multi-Agent Framework for Data-Centric Factors and Model Joint Optimization},&#xA;    author={Yuante Li and Xu Yang and Xiao Yang and Minrui Xu and Xisen Wang and Weiqing Liu and Jiang Bian},&#xA;    year={2025},&#xA;    eprint={2505.15155},&#xA;    archivePrefix={arXiv},&#xA;    primaryClass={cs.AI}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/3198bc10-47ba-4ee0-8a8e-46d5ce44f45d&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2505.15155&#34;&gt;R&amp;amp;D-Agent-Quant&lt;/a&gt; Published&lt;/td&gt; &#xA;   &lt;td&gt;Apply R&amp;amp;D-Agent to Qlib for quant trading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BPQP for End-to-end learning&lt;/td&gt; &#xA;   &lt;td&gt;📈Coming soon!(&lt;a href=&#34;https://github.com/microsoft/qlib/pull/1863&#34;&gt;Under review&lt;/a&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🔥LLM-driven Auto Quant Factory🔥&lt;/td&gt; &#xA;   &lt;td&gt;🚀 Released in &lt;a href=&#34;https://github.com/microsoft/RD-Agent&#34;&gt;♾️RD-Agent&lt;/a&gt; on Aug 8, 2024&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KRNN and Sandwich models&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/1414/&#34;&gt;Released&lt;/a&gt; on May 26, 2023&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Release Qlib v0.9.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;) &lt;a href=&#34;https://github.com/microsoft/qlib/releases/tag/v0.9.0&#34;&gt;Released&lt;/a&gt; on Dec 9, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RL Learning Framework&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;span&gt;📈&lt;/span&gt; Released on Nov 10, 2022. &lt;a href=&#34;https://github.com/microsoft/qlib/pull/1332&#34;&gt;#1332&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/qlib/pull/1322&#34;&gt;#1322&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/qlib/pull/1316&#34;&gt;#1316&lt;/a&gt;,&lt;a href=&#34;https://github.com/microsoft/qlib/pull/1299&#34;&gt;#1299&lt;/a&gt;,&lt;a href=&#34;https://github.com/microsoft/qlib/pull/1263&#34;&gt;#1263&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/qlib/pull/1244&#34;&gt;#1244&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/qlib/pull/1169&#34;&gt;#1169&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/qlib/pull/1125&#34;&gt;#1125&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/qlib/pull/1076&#34;&gt;#1076&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HIST and IGMTF models&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/1040&#34;&gt;Released&lt;/a&gt; on Apr 10, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Qlib &lt;a href=&#34;https://github.com/microsoft/qlib/tree/main/examples/tutorial&#34;&gt;notebook tutorial&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;📖 &lt;a href=&#34;https://github.com/microsoft/qlib/pull/1037&#34;&gt;Released&lt;/a&gt; on Apr 7, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ibovespa index data&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🍚&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/990&#34;&gt;Released&lt;/a&gt; on Apr 6, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Point-in-Time database&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/343&#34;&gt;Released&lt;/a&gt; on Mar 10, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arctic Provider Backend &amp;amp; Orderbook data example&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/744&#34;&gt;Released&lt;/a&gt; on Jan 17, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Meta-Learning-based framework &amp;amp; DDG-DA&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/743&#34;&gt;Released&lt;/a&gt; on Jan 10, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Planning-based portfolio optimization&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/754&#34;&gt;Released&lt;/a&gt; on Dec 28, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Release Qlib v0.8.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;) &lt;a href=&#34;https://github.com/microsoft/qlib/releases/tag/v0.8.0&#34;&gt;Released&lt;/a&gt; on Dec 8, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ADD model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/704&#34;&gt;Released&lt;/a&gt; on Nov 22, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ADARNN model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/689&#34;&gt;Released&lt;/a&gt; on Nov 14, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TCN model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/668&#34;&gt;Released&lt;/a&gt; on Nov 4, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nested Decision Framework&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/438&#34;&gt;Released&lt;/a&gt; on Oct 1, 2021. &lt;a href=&#34;https://github.com/microsoft/qlib/raw/main/examples/nested_decision_execution/workflow.py&#34;&gt;Example&lt;/a&gt; and &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/highfreq.html&#34;&gt;Doc&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Temporal Routing Adaptor (TRA)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/531&#34;&gt;Released&lt;/a&gt; on July 30, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transformer &amp;amp; Localformer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/508&#34;&gt;Released&lt;/a&gt; on July 22, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Release Qlib v0.7.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;) &lt;a href=&#34;https://github.com/microsoft/qlib/releases/tag/v0.7.0&#34;&gt;Released&lt;/a&gt; on July 12, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TCTS Model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/491&#34;&gt;Released&lt;/a&gt; on July 1, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Online serving and automatic model rolling&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/290&#34;&gt;Released&lt;/a&gt; on May 17, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DoubleEnsemble Model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/286&#34;&gt;Released&lt;/a&gt; on Mar 2, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;High-frequency data processing example&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/257&#34;&gt;Released&lt;/a&gt; on Feb 5, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;High-frequency trading example&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/227&#34;&gt;Part of code released&lt;/a&gt; on Jan 28, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;High-frequency data(1min)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🍚&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/221&#34;&gt;Released&lt;/a&gt; on Jan 27, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tabnet Model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/205&#34;&gt;Released&lt;/a&gt; on Jan 22, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Features released before 2021 are not listed here.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/docs/_static/img/logo/1.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Qlib is an open-source, AI-oriented quantitative investment platform that aims to realize the potential, empower research, and create value using AI technologies in quantitative investment, from exploring ideas to implementing productions. Qlib supports diverse machine learning modeling paradigms, including supervised learning, market dynamics modeling, and reinforcement learning.&lt;/p&gt; &#xA;&lt;p&gt;An increasing number of SOTA Quant research works/papers in diverse paradigms are being released in Qlib to collaboratively solve key challenges in quantitative investment. For example, 1) using supervised learning to mine the market&#39;s complex non-linear patterns from rich and heterogeneous financial data, 2) modeling the dynamic nature of the financial market using adaptive concept drift technology, and 3) using reinforcement learning to model continuous investment decisions and assist investors in optimizing their trading strategies.&lt;/p&gt; &#xA;&lt;p&gt;It contains the full ML pipeline of data processing, model training, back-testing; and covers the entire chain of quantitative investment: alpha seeking, risk modeling, portfolio optimization, and order execution. For more details, please refer to our paper &lt;a href=&#34;https://arxiv.org/abs/2009.11189&#34;&gt;&#34;Qlib: An AI-oriented Quantitative Investment Platform&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Frameworks, Tutorial, Data &amp;amp; DevOps&lt;/th&gt; &#xA;   &lt;th&gt;Main Challenges &amp;amp; Solutions in Quant Research&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#plans&#34;&gt;&lt;strong&gt;Plans&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#framework-of-qlib&#34;&gt;Framework of Qlib&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;ul dir=&#34;auto&#34;&gt; &#xA;     &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#installation&#34;&gt;Installation&lt;/a&gt; &lt;/li&gt; &#xA;     &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#data-preparation&#34;&gt;Data Preparation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#auto-quant-research-workflow&#34;&gt;Auto Quant Research Workflow&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#building-customized-quant-research-workflow-by-code&#34;&gt;Building Customized Quant Research Workflow by Code&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#quant-dataset-zoo&#34;&gt;&lt;strong&gt;Quant Dataset Zoo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#learning-framework&#34;&gt;Learning Framework&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#more-about-qlib&#34;&gt;More About Qlib&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#offline-mode-and-online-mode&#34;&gt;Offline Mode and Online Mode&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#performance-of-qlib-data-server&#34;&gt;Performance of Qlib Data Server&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt; &lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#related-reports&#34;&gt;Related Reports&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#contact-us&#34;&gt;Contact Us&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &lt;/td&gt; &#xA;   &lt;td valign=&#34;baseline&#34;&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#main-challenges--solutions-in-quant-research&#34;&gt;Main Challenges &amp;amp; Solutions in Quant Research&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#forecasting-finding-valuable-signalspatterns&#34;&gt;Forecasting: Finding Valuable Signals/Patterns&lt;/a&gt; &#xA;       &lt;ul&gt; &#xA;        &lt;li type=&#34;disc&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#quant-model-paper-zoo&#34;&gt;&lt;strong&gt;Quant Model (Paper) Zoo&lt;/strong&gt;&lt;/a&gt; &#xA;         &lt;ul&gt; &#xA;          &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#run-a-single-model&#34;&gt;Run a Single Model&lt;/a&gt;&lt;/li&gt; &#xA;          &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#run-multiple-models&#34;&gt;Run Multiple Models&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#adapting-to-market-dynamics&#34;&gt;Adapting to Market Dynamics&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#reinforcement-learning-modeling-continuous-decisions&#34;&gt;Reinforcement Learning: modeling continuous decisions&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Plans&lt;/h1&gt; &#xA;&lt;p&gt;New features under development(order by estimated release time). Your feedbacks about the features are very important.&lt;/p&gt; &#xA;&lt;!-- | Feature                        | Status      | --&gt; &#xA;&lt;!-- | --                      | ------    | --&gt; &#xA;&lt;h1&gt;Framework of Qlib&lt;/h1&gt; &#xA;&lt;div style=&#34;align: center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/docs/_static/img/framework-abstract.jpg&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The high-level framework of Qlib can be found above(users can find the &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/introduction/introduction.html#framework&#34;&gt;detailed framework&lt;/a&gt; of Qlib&#39;s design when getting into nitty gritty). The components are designed as loose-coupled modules, and each component could be used stand-alone.&lt;/p&gt; &#xA;&lt;p&gt;Qlib provides a strong infrastructure to support Quant research. &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/data.html&#34;&gt;Data&lt;/a&gt; is always an important part. A strong learning framework is designed to support diverse learning paradigms (e.g. &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/rl.html&#34;&gt;reinforcement learning&lt;/a&gt;, &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/workflow.html#model-section&#34;&gt;supervised learning&lt;/a&gt;) and patterns at different levels(e.g. &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/meta.html&#34;&gt;market dynamic modeling&lt;/a&gt;). By modeling the market, &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/strategy.html&#34;&gt;trading strategies&lt;/a&gt; will generate trade decisions that will be executed. Multiple trading strategies and executors in different levels or granularities can be &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/highfreq.html&#34;&gt;nested to be optimized and run together&lt;/a&gt;. At last, a comprehensive &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/report.html&#34;&gt;analysis&lt;/a&gt; will be provided and the model can be &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/online.html&#34;&gt;served online&lt;/a&gt; in a low cost.&lt;/p&gt; &#xA;&lt;h1&gt;Quick Start&lt;/h1&gt; &#xA;&lt;p&gt;This quick start guide tries to demonstrate&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;It&#39;s very easy to build a complete Quant research workflow and try your ideas with &lt;em&gt;Qlib&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Though with &lt;em&gt;public data&lt;/em&gt; and &lt;em&gt;simple models&lt;/em&gt;, machine learning technologies &lt;strong&gt;work very well&lt;/strong&gt; in practical Quant investment.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Here is a quick &lt;strong&gt;&lt;a href=&#34;https://terminalizer.com/view/3f24561a4470&#34;&gt;demo&lt;/a&gt;&lt;/strong&gt; shows how to install &lt;code&gt;Qlib&lt;/code&gt;, and run LightGBM with &lt;code&gt;qrun&lt;/code&gt;. &lt;strong&gt;But&lt;/strong&gt;, please make sure you have already prepared the data following the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#data-preparation&#34;&gt;instruction&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This table demonstrates the supported Python version of &lt;code&gt;Qlib&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;install with pip&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;install from source&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;plot&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python 3.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python 3.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python 3.10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python 3.11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python 3.12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Conda&lt;/strong&gt; is suggested for managing your Python environment. In some cases, using Python outside of a &lt;code&gt;conda&lt;/code&gt; environment may result in missing header files, causing the installation failure of certain packages.&lt;/li&gt; &#xA; &lt;li&gt;Please pay attention that installing cython in Python 3.6 will raise some error when installing &lt;code&gt;Qlib&lt;/code&gt; from source. If users use Python 3.6 on their machines, it is recommended to &lt;em&gt;upgrade&lt;/em&gt; Python to version 3.8 or higher, or use &lt;code&gt;conda&lt;/code&gt;&#39;s Python to install &lt;code&gt;Qlib&lt;/code&gt; from source.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Install with pip&lt;/h3&gt; &#xA;&lt;p&gt;Users can easily install &lt;code&gt;Qlib&lt;/code&gt; by pip according to the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  pip install pyqlib&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: pip will install the latest stable qlib. However, the main branch of qlib is in active development. If you want to test the latest scripts or functions in the main branch. Please install qlib with the methods below.&lt;/p&gt; &#xA;&lt;h3&gt;Install from source&lt;/h3&gt; &#xA;&lt;p&gt;Also, users can install the latest dev version &lt;code&gt;Qlib&lt;/code&gt; by the source code according to the following steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Before installing &lt;code&gt;Qlib&lt;/code&gt; from source, users need to install some dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install numpy&#xA;pip install --upgrade cython&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository and install &lt;code&gt;Qlib&lt;/code&gt; as follows.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/microsoft/qlib.git &amp;amp;&amp;amp; cd qlib&#xA;pip install .  # `pip install -e .[dev]` is recommended for development. check details in docs/developer/code_standard_and_dev_guide.rst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tips&lt;/strong&gt;: If you fail to install &lt;code&gt;Qlib&lt;/code&gt; or run the examples in your environment, comparing your steps and the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/.github/workflows/test_qlib_from_source.yml&#34;&gt;CI workflow&lt;/a&gt; may help you find the problem.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tips for Mac&lt;/strong&gt;: If you are using Mac with M1, you might encounter issues in building the wheel for LightGBM, which is due to missing dependencies from OpenMP. To solve the problem, install openmp first with &lt;code&gt;brew install libomp&lt;/code&gt; and then run &lt;code&gt;pip install .&lt;/code&gt; to build it successfully.&lt;/p&gt; &#xA;&lt;h2&gt;Data Preparation&lt;/h2&gt; &#xA;&lt;p&gt;❗ Due to more restrict data security policy. The official dataset is disabled temporarily. You can try &lt;a href=&#34;https://github.com/chenditc/investment_data/releases&#34;&gt;this data source&lt;/a&gt; contributed by the community. Here is an example to download the latest data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://github.com/chenditc/investment_data/releases/latest/download/qlib_bin.tar.gz&#xA;mkdir -p ~/.qlib/qlib_data/cn_data&#xA;tar -zxvf qlib_bin.tar.gz -C ~/.qlib/qlib_data/cn_data --strip-components=1&#xA;rm -f qlib_bin.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The official dataset below will resume in short future.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Load and prepare data by running the following code:&lt;/p&gt; &#xA;&lt;h3&gt;Get with module&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# get 1d data&#xA;python -m qlib.run.get_data qlib_data --target_dir ~/.qlib/qlib_data/cn_data --region cn&#xA;&#xA;# get 1min data&#xA;python -m qlib.run.get_data qlib_data --target_dir ~/.qlib/qlib_data/cn_data_1min --region cn --interval 1min&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get from source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# get 1d data&#xA;python scripts/get_data.py qlib_data --target_dir ~/.qlib/qlib_data/cn_data --region cn&#xA;&#xA;# get 1min data&#xA;python scripts/get_data.py qlib_data --target_dir ~/.qlib/qlib_data/cn_data_1min --region cn --interval 1min&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This dataset is created by public data collected by &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/scripts/data_collector/&#34;&gt;crawler scripts&lt;/a&gt;, which have been released in the same repository. Users could create the same dataset with it. &lt;a href=&#34;https://github.com/microsoft/qlib/tree/main/scripts/data_collector#description-of-dataset&#34;&gt;Description of dataset&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Please pay &lt;strong&gt;ATTENTION&lt;/strong&gt; that the data is collected from &lt;a href=&#34;https://finance.yahoo.com/lookup&#34;&gt;Yahoo Finance&lt;/a&gt;, and the data might not be perfect. We recommend users to prepare their own data if they have a high-quality dataset. For more information, users can refer to the &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/data.html#converting-csv-format-into-qlib-format&#34;&gt;related document&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Automatic update of daily frequency data (from yahoo finance)&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This step is &lt;em&gt;Optional&lt;/em&gt; if users only want to try their models and strategies on history data.&lt;/p&gt; &#xA; &lt;p&gt;It is recommended that users update the data manually once (--trading_date 2021-05-25) and then set it to update automatically.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Users can&#39;t incrementally update data based on the offline data provided by Qlib(some fields are removed to reduce the data size). Users should use &lt;a href=&#34;https://github.com/microsoft/qlib/tree/main/scripts/data_collector/yahoo#automatic-update-of-daily-frequency-datafrom-yahoo-finance&#34;&gt;yahoo collector&lt;/a&gt; to download Yahoo data from scratch and then incrementally update it.&lt;/p&gt; &#xA; &lt;p&gt;For more information, please refer to: &lt;a href=&#34;https://github.com/microsoft/qlib/tree/main/scripts/data_collector/yahoo#automatic-update-of-daily-frequency-datafrom-yahoo-finance&#34;&gt;yahoo collector&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Automatic update of data to the &#34;qlib&#34; directory each trading day(Linux)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;use &lt;em&gt;crontab&lt;/em&gt;: &lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;set up timed tasks:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;* * * * 1-5 python &amp;lt;script path&amp;gt; update_data_to_bin --qlib_data_1d_dir &amp;lt;user data dir&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;script path&lt;/strong&gt;: &lt;em&gt;scripts/data_collector/yahoo/collector.py&lt;/em&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Manual update of data&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python scripts/data_collector/yahoo/collector.py update_data_to_bin --qlib_data_1d_dir &amp;lt;user data dir&amp;gt; --trading_date &amp;lt;start date&amp;gt; --end_date &amp;lt;end date&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;trading_date&lt;/em&gt;: start of trading day&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;end_date&lt;/em&gt;: end of trading day(not included)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Checking the health of the data&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We provide a script to check the health of the data, you can run the following commands to check whether the data is healthy or not. &lt;pre&gt;&lt;code&gt;python scripts/check_data_health.py check_data --qlib_dir ~/.qlib/qlib_data/cn_data&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Of course, you can also add some parameters to adjust the test results, such as this. &lt;pre&gt;&lt;code&gt;python scripts/check_data_health.py check_data --qlib_dir ~/.qlib/qlib_data/cn_data --missing_data_num 30055 --large_step_threshold_volume 94485 --large_step_threshold_price 20&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you want more information about &lt;code&gt;check_data_health&lt;/code&gt;, please refer to the &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/data.html#checking-the-health-of-the-data&#34;&gt;documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- &#xA;- Run the initialization code and get stock data:&#xA;&#xA;  ```python&#xA;  import qlib&#xA;  from qlib.data import D&#xA;  from qlib.constant import REG_CN&#xA;&#xA;  # Initialization&#xA;  mount_path = &#34;~/.qlib/qlib_data/cn_data&#34;  # target_dir&#xA;  qlib.init(mount_path=mount_path, region=REG_CN)&#xA;&#xA;  # Get stock data by Qlib&#xA;  # Load trading calendar with the given time range and frequency&#xA;  print(D.calendar(start_time=&#39;2010-01-01&#39;, end_time=&#39;2017-12-31&#39;, freq=&#39;day&#39;)[:2])&#xA;&#xA;  # Parse a given market name into a stockpool config&#xA;  instruments = D.instruments(&#39;csi500&#39;)&#xA;  print(D.list_instruments(instruments=instruments, start_time=&#39;2010-01-01&#39;, end_time=&#39;2017-12-31&#39;, as_list=True)[:6])&#xA;&#xA;  # Load features of certain instruments in given time range&#xA;  instruments = [&#39;SH600000&#39;]&#xA;  fields = [&#39;$close&#39;, &#39;$volume&#39;, &#39;Ref($close, 1)&#39;, &#39;Mean($close, 3)&#39;, &#39;$high-$low&#39;]&#xA;  print(D.features(instruments, fields, start_time=&#39;2010-01-01&#39;, end_time=&#39;2017-12-31&#39;, freq=&#39;day&#39;).head())&#xA;  ```&#xA; --&gt; &#xA;&lt;h2&gt;Docker images&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Pulling a docker image from a docker hub repository &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull pyqlib/qlib_image_stable:stable&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Start a new Docker container &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --name &amp;lt;container name&amp;gt; -v &amp;lt;Mounted local directory&amp;gt;:/app qlib_image_stable&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;At this point you are in the docker environment and can run the qlib scripts. An example: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt;&amp;gt; python scripts/get_data.py qlib_data --name qlib_data_simple --target_dir ~/.qlib/qlib_data/cn_data --interval 1d --region cn&#xA;&amp;gt;&amp;gt;&amp;gt; python qlib/workflow/cli.py examples/benchmarks/LightGBM/workflow_config_lightgbm_Alpha158.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Exit the container &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt;&amp;gt; exit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Restart the container &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker start -i -a &amp;lt;container name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Stop the container &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker stop &amp;lt;container name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Delete the container &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker rm &amp;lt;container name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you want to know more information, please refer to the &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/developer/how_to_build_image.html&#34;&gt;documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Auto Quant Research Workflow&lt;/h2&gt; &#xA;&lt;p&gt;Qlib provides a tool named &lt;code&gt;qrun&lt;/code&gt; to run the whole workflow automatically (including building dataset, training models, backtest and evaluation). You can start an auto quant research workflow and have a graphical reports analysis according to the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Quant Research Workflow: Run &lt;code&gt;qrun&lt;/code&gt; with lightgbm workflow config (&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/LightGBM/workflow_config_lightgbm_Alpha158.yaml&#34;&gt;workflow_config_lightgbm_Alpha158.yaml&lt;/a&gt; as following.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  cd examples  # Avoid running program under the directory contains `qlib`&#xA;  qrun benchmarks/LightGBM/workflow_config_lightgbm_Alpha158.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If users want to use &lt;code&gt;qrun&lt;/code&gt; under debug mode, please use the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m pdb qlib/workflow/cli.py examples/benchmarks/LightGBM/workflow_config_lightgbm_Alpha158.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The result of &lt;code&gt;qrun&lt;/code&gt; is as follows, please refer to &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/strategy.html#result&#34;&gt;docs&lt;/a&gt; for more explanations about the result.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;&#39;The following are analysis results of the excess return without cost.&#39;&#xA;                       risk&#xA;mean               0.000708&#xA;std                0.005626&#xA;annualized_return  0.178316&#xA;information_ratio  1.996555&#xA;max_drawdown      -0.081806&#xA;&#39;The following are analysis results of the excess return with cost.&#39;&#xA;                       risk&#xA;mean               0.000512&#xA;std                0.005626&#xA;annualized_return  0.128982&#xA;information_ratio  1.444287&#xA;max_drawdown      -0.091078&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Here are detailed documents for &lt;code&gt;qrun&lt;/code&gt; and &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/workflow.html&#34;&gt;workflow&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Graphical Reports Analysis: First, run &lt;code&gt;python -m pip install .[analysis]&lt;/code&gt; to install the required dependencies. Then run &lt;code&gt;examples/workflow_by_code.ipynb&lt;/code&gt; with &lt;code&gt;jupyter notebook&lt;/code&gt; to get graphical reports.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Forecasting signal (model prediction) analysis&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Cumulative Return of groups &lt;img src=&#34;https://github.com/microsoft/qlib/raw/main/docs/_static/img/analysis/analysis_model_cumulative_return.png&#34; alt=&#34;Cumulative Return&#34;&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Return distribution &lt;img src=&#34;https://github.com/microsoft/qlib/raw/main/docs/_static/img/analysis/analysis_model_long_short.png&#34; alt=&#34;long_short&#34;&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Information Coefficient (IC) &lt;img src=&#34;https://github.com/microsoft/qlib/raw/main/docs/_static/img/analysis/analysis_model_IC.png&#34; alt=&#34;Information Coefficient&#34;&gt; &lt;img src=&#34;https://github.com/microsoft/qlib/raw/main/docs/_static/img/analysis/analysis_model_monthly_IC.png&#34; alt=&#34;Monthly IC&#34;&gt; &lt;img src=&#34;https://github.com/microsoft/qlib/raw/main/docs/_static/img/analysis/analysis_model_NDQ.png&#34; alt=&#34;IC&#34;&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Auto Correlation of forecasting signal (model prediction) &lt;img src=&#34;https://github.com/microsoft/qlib/raw/main/docs/_static/img/analysis/analysis_model_auto_correlation.png&#34; alt=&#34;Auto Correlation&#34;&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Portfolio analysis&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Backtest return &lt;img src=&#34;https://github.com/microsoft/qlib/raw/main/docs/_static/img/analysis/report.png&#34; alt=&#34;Report&#34;&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;    &lt;!-- &#xA;- Score IC&#xA;![Score IC](docs/_static/img/score_ic.png)&#xA;- Cumulative Return&#xA;![Cumulative Return](docs/_static/img/cumulative_return.png)&#xA;- Risk Analysis&#xA;![Risk Analysis](docs/_static/img/risk_analysis.png)&#xA;- Rank Label&#xA;![Rank Label](docs/_static/img/rank_label.png)&#xA;--&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/report.html&#34;&gt;Explanation&lt;/a&gt; of above results&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Building Customized Quant Research Workflow by Code&lt;/h2&gt; &#xA;&lt;p&gt;The automatic workflow may not suit the research workflow of all Quant researchers. To support a flexible Quant research workflow, Qlib also provides a modularized interface to allow researchers to build their own workflow by code. &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/workflow_by_code.ipynb&#34;&gt;Here&lt;/a&gt; is a demo for customized Quant research workflow by code.&lt;/p&gt; &#xA;&lt;h1&gt;Main Challenges &amp;amp; Solutions in Quant Research&lt;/h1&gt; &#xA;&lt;p&gt;Quant investment is a very unique scenario with lots of key challenges to be solved. Currently, Qlib provides some solutions for several of them.&lt;/p&gt; &#xA;&lt;h2&gt;Forecasting: Finding Valuable Signals/Patterns&lt;/h2&gt; &#xA;&lt;p&gt;Accurate forecasting of the stock price trend is a very important part to construct profitable portfolios. However, huge amount of data with various formats in the financial market which make it challenging to build forecasting models.&lt;/p&gt; &#xA;&lt;p&gt;An increasing number of SOTA Quant research works/papers, which focus on building forecasting models to mine valuable signals/patterns in complex financial data, are released in &lt;code&gt;Qlib&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks&#34;&gt;Quant Model (Paper) Zoo&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Here is a list of models built on &lt;code&gt;Qlib&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/XGBoost/&#34;&gt;GBDT based on XGBoost (Tianqi Chen, et al. KDD 2016)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/LightGBM/&#34;&gt;GBDT based on LightGBM (Guolin Ke, et al. NIPS 2017)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/CatBoost/&#34;&gt;GBDT based on Catboost (Liudmila Prokhorenkova, et al. NIPS 2018)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/MLP/&#34;&gt;MLP based on pytorch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/LSTM/&#34;&gt;LSTM based on pytorch (Sepp Hochreiter, et al. Neural computation 1997)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/GRU/&#34;&gt;GRU based on pytorch (Kyunghyun Cho, et al. 2014)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/ALSTM&#34;&gt;ALSTM based on pytorch (Yao Qin, et al. IJCAI 2017)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/GATs/&#34;&gt;GATs based on pytorch (Petar Velickovic, et al. 2017)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/SFM/&#34;&gt;SFM based on pytorch (Liheng Zhang, et al. KDD 2017)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/TFT/&#34;&gt;TFT based on tensorflow (Bryan Lim, et al. International Journal of Forecasting 2019)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/TabNet/&#34;&gt;TabNet based on pytorch (Sercan O. Arik, et al. AAAI 2019)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/DoubleEnsemble/&#34;&gt;DoubleEnsemble based on LightGBM (Chuheng Zhang, et al. ICDM 2020)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/TCTS/&#34;&gt;TCTS based on pytorch (Xueqing Wu, et al. ICML 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/Transformer/&#34;&gt;Transformer based on pytorch (Ashish Vaswani, et al. NeurIPS 2017)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/Localformer/&#34;&gt;Localformer based on pytorch (Juyong Jiang, et al.)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/TRA/&#34;&gt;TRA based on pytorch (Hengxu, Dong, et al. KDD 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/TCN/&#34;&gt;TCN based on pytorch (Shaojie Bai, et al. 2018)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/ADARNN/&#34;&gt;ADARNN based on pytorch (YunTao Du, et al. 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/ADD/&#34;&gt;ADD based on pytorch (Hongshun Tang, et al.2020)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/IGMTF/&#34;&gt;IGMTF based on pytorch (Wentao Xu, et al.2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/HIST/&#34;&gt;HIST based on pytorch (Wentao Xu, et al.2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/KRNN/&#34;&gt;KRNN based on pytorch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/Sandwich/&#34;&gt;Sandwich based on pytorch&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Your PR of new Quant models is highly welcomed.&lt;/p&gt; &#xA;&lt;p&gt;The performance of each model on the &lt;code&gt;Alpha158&lt;/code&gt; and &lt;code&gt;Alpha360&lt;/code&gt; datasets can be found &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/README.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Run a single model&lt;/h3&gt; &#xA;&lt;p&gt;All the models listed above are runnable with &lt;code&gt;Qlib&lt;/code&gt;. Users can find the config files we provide and some details about the model through the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks&#34;&gt;benchmarks&lt;/a&gt; folder. More information can be retrieved at the model files listed above.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Qlib&lt;/code&gt; provides three different ways to run a single model, users can pick the one that fits their cases best:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Users can use the tool &lt;code&gt;qrun&lt;/code&gt; mentioned above to run a model&#39;s workflow based from a config file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Users can create a &lt;code&gt;workflow_by_code&lt;/code&gt; python script based on the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/workflow_by_code.py&#34;&gt;one&lt;/a&gt; listed in the &lt;code&gt;examples&lt;/code&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Users can use the script &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/run_all_model.py&#34;&gt;&lt;code&gt;run_all_model.py&lt;/code&gt;&lt;/a&gt; listed in the &lt;code&gt;examples&lt;/code&gt; folder to run a model. Here is an example of the specific shell command to be used: &lt;code&gt;python run_all_model.py run --models=lightgbm&lt;/code&gt;, where the &lt;code&gt;--models&lt;/code&gt; arguments can take any number of models listed above(the available models can be found in &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/&#34;&gt;benchmarks&lt;/a&gt;). For more use cases, please refer to the file&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/run_all_model.py&#34;&gt;docstrings&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Each baseline has different environment dependencies, please make sure that your python version aligns with the requirements(e.g. TFT only supports Python 3.6~3.7 due to the limitation of &lt;code&gt;tensorflow==1.15.0&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run multiple models&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Qlib&lt;/code&gt; also provides a script &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/run_all_model.py&#34;&gt;&lt;code&gt;run_all_model.py&lt;/code&gt;&lt;/a&gt; which can run multiple models for several iterations. (&lt;strong&gt;Note&lt;/strong&gt;: the script only support &lt;em&gt;Linux&lt;/em&gt; for now. Other OS will be supported in the future. Besides, it doesn&#39;t support parallel running the same model for multiple times as well, and this will be fixed in the future development too.)&lt;/p&gt; &#xA;&lt;p&gt;The script will create a unique virtual environment for each model, and delete the environments after training. Thus, only experiment results such as &lt;code&gt;IC&lt;/code&gt; and &lt;code&gt;backtest&lt;/code&gt; results will be generated and stored.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example of running all the models for 10 iterations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python run_all_model.py run 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It also provides the API to run specific models at once. For more use cases, please refer to the file&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/run_all_model.py&#34;&gt;docstrings&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Break change&lt;/h3&gt; &#xA;&lt;p&gt;In &lt;code&gt;pandas&lt;/code&gt;, &lt;code&gt;group_key&lt;/code&gt; is one of the parameters of the &lt;code&gt;groupby&lt;/code&gt; method. From version 1.5 to 2.0 of &lt;code&gt;pandas&lt;/code&gt;, the default value of &lt;code&gt;group_key&lt;/code&gt; has been changed from &lt;code&gt;no default&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;, which will cause qlib to report an error during operation. So we set &lt;code&gt;group_key=False&lt;/code&gt;, but it doesn&#39;t guarantee that some programmes will run correctly, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;qlib\examples\rl_order_execution\scripts\gen_training_orders.py&lt;/li&gt; &#xA; &lt;li&gt;qlib\examples\benchmarks\TRA\src\dataset.MTSDatasetH.py&lt;/li&gt; &#xA; &lt;li&gt;qlib\examples\benchmarks\TFT\tft.py&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks_dynamic&#34;&gt;Adapting to Market Dynamics&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Due to the non-stationary nature of the environment of the financial market, the data distribution may change in different periods, which makes the performance of models build on training data decays in the future test data. So adapting the forecasting models/strategies to market dynamics is very important to the model/strategies&#39; performance.&lt;/p&gt; &#xA;&lt;p&gt;Here is a list of solutions built on &lt;code&gt;Qlib&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks_dynamic/baseline/&#34;&gt;Rolling Retraining&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks_dynamic/DDG-DA/&#34;&gt;DDG-DA on pytorch (Wendi, et al. AAAI 2022)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reinforcement Learning: modeling continuous decisions&lt;/h2&gt; &#xA;&lt;p&gt;Qlib now supports reinforcement learning, a feature designed to model continuous investment decisions. This functionality assists investors in optimizing their trading strategies by learning from interactions with the environment to maximize some notion of cumulative reward.&lt;/p&gt; &#xA;&lt;p&gt;Here is a list of solutions built on &lt;code&gt;Qlib&lt;/code&gt; categorized by scenarios.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/rl_order_execution&#34;&gt;RL for order execution&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/rl/overall.html#order-execution&#34;&gt;Here&lt;/a&gt; is the introduction of this scenario. All the methods below are compared &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/rl_order_execution&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/rl_order_execution/exp_configs/backtest_twap.yml&#34;&gt;TWAP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/rl_order_execution/exp_configs/backtest_ppo.yml&#34;&gt;PPO: &#34;An End-to-End Optimal Trade Execution Framework based on Proximal Policy Optimization&#34;, IJCAL 2020&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/rl_order_execution/exp_configs/backtest_opds.yml&#34;&gt;OPDS: &#34;Universal Trading for Order Execution with Oracle Policy Distillation&#34;, AAAI 2021&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Quant Dataset Zoo&lt;/h1&gt; &#xA;&lt;p&gt;Dataset plays a very important role in Quant. Here is a list of the datasets built on &lt;code&gt;Qlib&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dataset&lt;/th&gt; &#xA;   &lt;th&gt;US Market&lt;/th&gt; &#xA;   &lt;th&gt;China Market&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/qlib/contrib/data/handler.py&#34;&gt;Alpha360&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/qlib/contrib/data/handler.py&#34;&gt;Alpha158&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qlib.readthedocs.io/en/latest/advanced/alpha.html&#34;&gt;Here&lt;/a&gt; is a tutorial to build dataset with &lt;code&gt;Qlib&lt;/code&gt;. Your PR to build new Quant dataset is highly welcomed.&lt;/p&gt; &#xA;&lt;h1&gt;Learning Framework&lt;/h1&gt; &#xA;&lt;p&gt;Qlib is high customizable and a lot of its components are learnable. The learnable components are instances of &lt;code&gt;Forecast Model&lt;/code&gt; and &lt;code&gt;Trading Agent&lt;/code&gt;. They are learned based on the &lt;code&gt;Learning Framework&lt;/code&gt; layer and then applied to multiple scenarios in &lt;code&gt;Workflow&lt;/code&gt; layer. The learning framework leverages the &lt;code&gt;Workflow&lt;/code&gt; layer as well(e.g. sharing &lt;code&gt;Information Extractor&lt;/code&gt;, creating environments based on &lt;code&gt;Execution Env&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Based on learning paradigms, they can be categorized into reinforcement learning and supervised learning.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For supervised learning, the detailed docs can be found &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/model.html&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For reinforcement learning, the detailed docs can be found &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/rl.html&#34;&gt;here&lt;/a&gt;. Qlib&#39;s RL learning framework leverages &lt;code&gt;Execution Env&lt;/code&gt; in &lt;code&gt;Workflow&lt;/code&gt; layer to create environments. It&#39;s worth noting that &lt;code&gt;NestedExecutor&lt;/code&gt; is supported as well. This empowers users to optimize different level of strategies/models/agents together (e.g. optimizing an order execution strategy for a specific portfolio management strategy).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;More About Qlib&lt;/h1&gt; &#xA;&lt;p&gt;If you want to have a quick glance at the most frequently used components of qlib, you can try notebooks &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/tutorial/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The detailed documents are organized in &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/docs/&#34;&gt;docs&lt;/a&gt;. &lt;a href=&#34;http://www.sphinx-doc.org&#34;&gt;Sphinx&lt;/a&gt; and the readthedocs theme is required to build the documentation in html formats.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd docs/&#xA;conda install sphinx sphinx_rtd_theme -y&#xA;# Otherwise, you can install them with pip&#xA;# pip install sphinx sphinx_rtd_theme&#xA;make html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also view the &lt;a href=&#34;http://qlib.readthedocs.io/&#34;&gt;latest document&lt;/a&gt; online directly.&lt;/p&gt; &#xA;&lt;p&gt;Qlib is in active and continuing development. Our plan is in the roadmap, which is managed as a &lt;a href=&#34;https://github.com/microsoft/qlib/projects/1&#34;&gt;github project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Offline Mode and Online Mode&lt;/h1&gt; &#xA;&lt;p&gt;The data server of Qlib can either deployed as &lt;code&gt;Offline&lt;/code&gt; mode or &lt;code&gt;Online&lt;/code&gt; mode. The default mode is offline mode.&lt;/p&gt; &#xA;&lt;p&gt;Under &lt;code&gt;Offline&lt;/code&gt; mode, the data will be deployed locally.&lt;/p&gt; &#xA;&lt;p&gt;Under &lt;code&gt;Online&lt;/code&gt; mode, the data will be deployed as a shared data service. The data and their cache will be shared by all the clients. The data retrieval performance is expected to be improved due to a higher rate of cache hits. It will consume less disk space, too. The documents of the online mode can be found in &lt;a href=&#34;https://qlib-server.readthedocs.io/&#34;&gt;Qlib-Server&lt;/a&gt;. The online mode can be deployed automatically with &lt;a href=&#34;https://qlib-server.readthedocs.io/en/latest/build.html#one-click-deployment-in-azure&#34;&gt;Azure CLI based scripts&lt;/a&gt;. The source code of online data server can be found in &lt;a href=&#34;https://github.com/microsoft/qlib-server&#34;&gt;Qlib-Server repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Performance of Qlib Data Server&lt;/h2&gt; &#xA;&lt;p&gt;The performance of data processing is important to data-driven methods like AI technologies. As an AI-oriented platform, Qlib provides a solution for data storage and data processing. To demonstrate the performance of Qlib data server, we compare it with several other data storage solutions.&lt;/p&gt; &#xA;&lt;p&gt;We evaluate the performance of several storage solutions by finishing the same task, which creates a dataset (14 features/factors) from the basic OHLCV daily data of a stock market (800 stocks each day from 2007 to 2020). The task involves data queries and processing.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;HDF5&lt;/th&gt; &#xA;   &lt;th&gt;MySQL&lt;/th&gt; &#xA;   &lt;th&gt;MongoDB&lt;/th&gt; &#xA;   &lt;th&gt;InfluxDB&lt;/th&gt; &#xA;   &lt;th&gt;Qlib -E -D&lt;/th&gt; &#xA;   &lt;th&gt;Qlib +E -D&lt;/th&gt; &#xA;   &lt;th&gt;Qlib +E +D&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Total (1CPU) (seconds)&lt;/td&gt; &#xA;   &lt;td&gt;184.4±3.7&lt;/td&gt; &#xA;   &lt;td&gt;365.3±7.5&lt;/td&gt; &#xA;   &lt;td&gt;253.6±6.7&lt;/td&gt; &#xA;   &lt;td&gt;368.2±3.6&lt;/td&gt; &#xA;   &lt;td&gt;147.0±8.8&lt;/td&gt; &#xA;   &lt;td&gt;47.6±1.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;7.4±0.3&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Total (64CPU) (seconds)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8.8±0.6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;4.2±0.2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;+(-)E&lt;/code&gt; indicates with (out) &lt;code&gt;ExpressionCache&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;+(-)D&lt;/code&gt; indicates with (out) &lt;code&gt;DatasetCache&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Most general-purpose databases take too much time to load data. After looking into the underlying implementation, we find that data go through too many layers of interfaces and unnecessary format transformations in general-purpose database solutions. Such overheads greatly slow down the data loading process. Qlib data are stored in a compact format, which is efficient to be combined into arrays for scientific computation.&lt;/p&gt; &#xA;&lt;h1&gt;Related Reports&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://analyticsindiamag.com/qlib/&#34;&gt;Guide To Qlib: Microsoft’s AI Investment Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/47bP5YwxfTp2uTHjUBzJQQ&#34;&gt;微软也搞AI量化平台？还是开源的！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/vsJv7lsgjEi-ALYUz4CvtQ&#34;&gt;微矿Qlib：业内首个AI量化投资开源平台&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contact Us&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have any issues, please create issue &lt;a href=&#34;https://github.com/microsoft/qlib/issues/new/choose&#34;&gt;here&lt;/a&gt; or send messages in &lt;a href=&#34;https://gitter.im/Microsoft/qlib&#34;&gt;gitter&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you want to make contributions to &lt;code&gt;Qlib&lt;/code&gt;, please &lt;a href=&#34;https://github.com/microsoft/qlib/compare&#34;&gt;create pull requests&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For other reasons, you are welcome to contact us by email(&lt;a href=&#34;mailto:qlib@microsoft.com&#34;&gt;qlib@microsoft.com&lt;/a&gt;). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We are recruiting new members(both FTEs and interns), your resumes are welcome!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Join IM discussion groups:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://gitter.im/Microsoft/qlib&#34;&gt;Gitter&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/microsoft/qlib/raw/main/docs/_static/img/qrcode/gitter_qr.png&#34; alt=&#34;image&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;We appreciate all contributions and thank all the contributors! &lt;a href=&#34;https://github.com/microsoft/qlib/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=microsoft/qlib&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before we released Qlib as an open-source project on Github in Sep 2020, Qlib is an internal project in our group. Unfortunately, the internal commit history is not kept. A lot of members in our group have also contributed a lot to Qlib, which includes Ruihua Wang, Yinda Zhang, Haisu Yu, Shuyu Wang, Bochen Pang, and &lt;a href=&#34;https://github.com/evanzd/evanzd&#34;&gt;Dong Zhou&lt;/a&gt;. Especially thanks to &lt;a href=&#34;https://github.com/evanzd/evanzd&#34;&gt;Dong Zhou&lt;/a&gt; due to his initial version of Qlib.&lt;/p&gt; &#xA;&lt;h2&gt;Guidance&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions.&lt;br&gt; &lt;strong&gt;Here are some &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/docs/developer/code_standard_and_dev_guide.rst&#34;&gt;code standards and development guidance&lt;/a&gt; for submiting a pull request.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Making contributions is not a hard thing. Solving an issue(maybe just answering a question raised in &lt;a href=&#34;https://github.com/microsoft/qlib/issues&#34;&gt;issues list&lt;/a&gt; or &lt;a href=&#34;https://gitter.im/Microsoft/qlib&#34;&gt;gitter&lt;/a&gt;), fixing/issuing a bug, improving the documents and even fixing a typo are important contributions to Qlib.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you want to contribute to Qlib&#39;s document/code, you can follow the steps in the figure below.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/demon143/qlib/raw/main/docs/_static/img/change%20doc.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t know how to start to contribute, you can refer to the following examples.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Examples&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Solving issues&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/microsoft/qlib/issues/749&#34;&gt;Answer a question&lt;/a&gt;; &lt;a href=&#34;https://github.com/microsoft/qlib/issues/765&#34;&gt;issuing&lt;/a&gt; or &lt;a href=&#34;https://github.com/microsoft/qlib/pull/792&#34;&gt;fixing&lt;/a&gt; a bug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Docs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/microsoft/qlib/pull/797/files&#34;&gt;Improve docs quality&lt;/a&gt; ; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/774&#34;&gt;Fix a typo&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Feature&lt;/td&gt; &#xA;   &lt;td&gt;Implement a &lt;a href=&#34;https://github.com/microsoft/qlib/projects&#34;&gt;requested feature&lt;/a&gt; like &lt;a href=&#34;https://github.com/microsoft/qlib/pull/754&#34;&gt;this&lt;/a&gt;; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/539/files&#34;&gt;Refactor interfaces&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dataset&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/microsoft/qlib/pull/733&#34;&gt;Add a dataset&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Models&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/microsoft/qlib/pull/689&#34;&gt;Implement a new model&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/qlib/tree/main/examples/benchmarks#contributing&#34;&gt;some instructions to contribute models&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/qlib/labels/good%20first%20issue&#34;&gt;Good first issues&lt;/a&gt; are labelled to indicate that they are easy to start your contributions.&lt;/p&gt; &#xA;&lt;p&gt;You can find some impefect implementation in Qlib by &lt;code&gt;rg &#39;TODO|FIXME&#39; qlib&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you would like to become one of Qlib&#39;s maintainers to contribute more (e.g. help merge PR, triage issues), please contact us by email(&lt;a href=&#34;mailto:qlib@microsoft.com&#34;&gt;qlib@microsoft.com&lt;/a&gt;). We are glad to help to upgrade your permission.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the right to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
</feed>