<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T02:28:42Z</updated>
  <subtitle>Monthly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>facebookresearch/metaseq</title>
    <updated>2022-06-03T02:28:42Z</updated>
    <id>tag:github.com,2022-06-03:/facebookresearch/metaseq</id>
    <link href="https://github.com/facebookresearch/metaseq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repo for external large-scale work&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Metaseq&lt;/h1&gt; &#xA;&lt;p&gt;A codebase for working with &lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/metaseq/main/projects/OPT&#34;&gt;Open Pre-trained Transformers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using OPT with ðŸ¤— Transformers&lt;/h2&gt; &#xA;&lt;p&gt;The OPT 125M--30B models are now available in &lt;a href=&#34;https://github.com/huggingface/transformers/releases/tag/v4.19.0&#34;&gt;HuggingFace Transformers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started in Metaseq&lt;/h2&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/metaseq/main/docs/setup.md&#34;&gt;setup instructions here&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation on workflows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/metaseq/main/docs/training.md&#34;&gt;Training&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/metaseq/main/docs/api.md&#34;&gt;API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Background Info&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/metaseq/main/docs/history.md&#34;&gt;Background &amp;amp; relationship to fairseq&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/metaseq/main/projects/OPT/chronicles/README.md&#34;&gt;Chronicles of training OPT-175B&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions, bug reports, or feature requests regarding either the codebase or the models released in the projects section, please don&#39;t hesitate to post on our &lt;a href=&#34;https://github.com/facebookresearch/metaseq/issues&#34;&gt;Github Issues page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please remember to follow our &lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/metaseq/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome PRs from the community!&lt;/p&gt; &#xA;&lt;p&gt;You can find information about contributing to metaseq in our &lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/metaseq/main/docs/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; document.&lt;/p&gt; &#xA;&lt;h2&gt;The Team&lt;/h2&gt; &#xA;&lt;p&gt;Metaseq is currently maintained by the CODEOWNERS: &lt;a href=&#34;https://github.com/suchenzang&#34;&gt;Susan Zhang&lt;/a&gt;, &lt;a href=&#34;https://github.com/stephenroller&#34;&gt;Stephen Roller&lt;/a&gt;, &lt;a href=&#34;https://github.com/anj-s&#34;&gt;Anjali Sridhar&lt;/a&gt;, &lt;a href=&#34;https://github.com/ngoyal2707&#34;&gt;Naman Goyal&lt;/a&gt;, &lt;a href=&#34;https://github.com/punitkoura&#34;&gt;Punit Singh Koura&lt;/a&gt;, &lt;a href=&#34;https://github.com/moyapchen&#34;&gt;Moya Chen&lt;/a&gt;, and &lt;a href=&#34;https://github.com/m3rlin45&#34;&gt;Christopher Dewan&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The majority of metaseq is licensed under the MIT license, however portions of the project are available under separate license terms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Megatron-LM is licensed under the &lt;a href=&#34;https://github.com/NVIDIA/Megatron-LM/raw/main/LICENSE&#34;&gt;Megatron-LM license&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>faif/python-patterns</title>
    <updated>2022-06-03T02:28:42Z</updated>
    <id>tag:github.com,2022-06-03:/faif/python-patterns</id>
    <link href="https://github.com/faif/python-patterns" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of design patterns/idioms in Python&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;python-patterns&lt;/h1&gt; &#xA;&lt;p&gt;A collection of design patterns and idioms in Python.&lt;/p&gt; &#xA;&lt;h2&gt;Current Patterns&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Creational Patterns&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Pattern&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/creational/abstract_factory.py&#34;&gt;abstract_factory&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;use a generic function with specific factories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/creational/borg.py&#34;&gt;borg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a singleton with shared-state among instances&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/creational/builder.py&#34;&gt;builder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;instead of using multiple constructors, builder object receives parameters and returns constructed objects&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/creational/factory.py&#34;&gt;factory&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;delegate a specialized function/method to create instances&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/creational/lazy_evaluation.py&#34;&gt;lazy_evaluation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;lazily-evaluated property pattern in Python&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/creational/pool.py&#34;&gt;pool&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;preinstantiate and maintain a group of instances of the same type&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/creational/prototype.py&#34;&gt;prototype&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;use a factory and clones of a prototype for new instances (if instantiation is expensive)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Structural Patterns&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Pattern&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/structural/3-tier.py&#34;&gt;3-tier&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;data&amp;lt;-&amp;gt;business logic&amp;lt;-&amp;gt;presentation separation (strict relationships)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/structural/adapter.py&#34;&gt;adapter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;adapt one interface to another using a white-list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/structural/bridge.py&#34;&gt;bridge&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a client-provider middleman to soften interface changes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/structural/composite.py&#34;&gt;composite&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;lets clients treat individual objects and compositions uniformly&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/structural/decorator.py&#34;&gt;decorator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;wrap functionality with other functionality in order to affect outputs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/structural/facade.py&#34;&gt;facade&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;use one class as an API to a number of others&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/structural/flyweight.py&#34;&gt;flyweight&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;transparently reuse existing instances of objects with similar/identical state&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/structural/front_controller.py&#34;&gt;front_controller&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;single handler requests coming to the application&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/structural/mvc.py&#34;&gt;mvc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;model&amp;lt;-&amp;gt;view&amp;lt;-&amp;gt;controller (non-strict relationships)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/structural/proxy.py&#34;&gt;proxy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;an object funnels operations to something else&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Behavioral Patterns&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Pattern&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/chain_of_responsibility.py&#34;&gt;chain_of_responsibility&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;apply a chain of successive handlers to try and process the data&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/catalog.py&#34;&gt;catalog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;general methods will call different specialized methods based on construction parameter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/chaining_method.py&#34;&gt;chaining_method&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;continue callback next object method&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/command.py&#34;&gt;command&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;bundle a command and arguments to call later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/iterator.py&#34;&gt;iterator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;traverse a container and access the container&#39;s elements&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/iterator_alt.py&#34;&gt;iterator&lt;/a&gt; (alt. impl.)&lt;/td&gt; &#xA;   &lt;td&gt;traverse a container and access the container&#39;s elements&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/mediator.py&#34;&gt;mediator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;an object that knows how to connect other objects and act as a proxy&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/memento.py&#34;&gt;memento&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;generate an opaque token that can be used to go back to a previous state&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/observer.py&#34;&gt;observer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;provide a callback for notification of events/changes to data&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/publish_subscribe.py&#34;&gt;publish_subscribe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a source syndicates events/data to 0+ registered listeners&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/registry.py&#34;&gt;registry&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;keep track of all subclasses of a given class&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/specification.py&#34;&gt;specification&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;business rules can be recombined by chaining the business rules together using boolean logic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/state.py&#34;&gt;state&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;logic is organized into a discrete number of potential states and the next state that can be transitioned to&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/strategy.py&#34;&gt;strategy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;selectable operations over the same data&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/template.py&#34;&gt;template&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;an object imposes a structure but takes pluggable components&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/visitor.py&#34;&gt;visitor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;invoke a callback for all items of a collection&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Design for Testability Patterns&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Pattern&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/dependency_injection.py&#34;&gt;dependency_injection&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3 variants of dependency injection&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fundamental Patterns&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Pattern&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/fundamental/delegation_pattern.py&#34;&gt;delegation_pattern&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;an object handles a request by delegating to a second object (the delegate)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Others&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Pattern&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/other/blackboard.py&#34;&gt;blackboard&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;architectural model, assemble different sub-system knowledge to build a solution, AI approach - non gang of four pattern&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/other/graph_search.py&#34;&gt;graph_search&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;graphing algorithms - non gang of four pattern&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/other/hsm/hsm.py&#34;&gt;hsm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;hierarchical state machine - non gang of four pattern&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Videos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=bsyjSW46TDg&#34;&gt;Design Patterns in Python by Peter Ullrich&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=G5OeYHCJuv0&#34;&gt;Sebastian BuczyÅ„ski - Why you don&#39;t need design patterns in Python?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=imW-trt0i9I&#34;&gt;You Don&#39;t Need That!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PfgEU3W0kyU&#34;&gt;Pluggable Libs Through Design Patterns&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;When an implementation is added or modified, please review the following guidelines:&lt;/p&gt; &#xA;&lt;h5&gt;Docstrings&lt;/h5&gt; &#xA;&lt;p&gt;Add module level description in form of a docstring with links to corresponding references or other useful information.&lt;/p&gt; &#xA;&lt;p&gt;Add &#34;Examples in Python ecosystem&#34; section if you know some. It shows how patterns could be applied to real-world problems.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/structural/facade.py&#34;&gt;facade.py&lt;/a&gt; has a good example of detailed description, but sometimes the shorter one as in &lt;a href=&#34;https://raw.githubusercontent.com/faif/python-patterns/master/patterns/behavioral/template.py&#34;&gt;template.py&lt;/a&gt; would suffice.&lt;/p&gt; &#xA;&lt;h5&gt;Python 2 compatibility&lt;/h5&gt; &#xA;&lt;p&gt;To see Python 2 compatible versions of some patterns please check-out the &lt;a href=&#34;https://github.com/faif/python-patterns/tree/legacy&#34;&gt;legacy&lt;/a&gt; tag.&lt;/p&gt; &#xA;&lt;h5&gt;Update README&lt;/h5&gt; &#xA;&lt;p&gt;When everything else is done - update corresponding part of README.&lt;/p&gt; &#xA;&lt;h5&gt;Travis CI&lt;/h5&gt; &#xA;&lt;p&gt;Please run &lt;code&gt;tox&lt;/code&gt; or &lt;code&gt;tox -e ci37&lt;/code&gt; before submitting a patch to be sure your changes will pass CI.&lt;/p&gt; &#xA;&lt;p&gt;You can also run &lt;code&gt;flake8&lt;/code&gt; or &lt;code&gt;pytest&lt;/code&gt; commands manually. Examples can be found in &lt;code&gt;tox.ini&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing via issue triage &lt;a href=&#34;https://www.codetriage.com/faif/python-patterns&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/faif/python-patterns/badges/users.svg?sanitize=true&#34; alt=&#34;Open Source Helpers&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;You can triage issues and pull requests which may include reproducing bug reports or asking for vital information, such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to &lt;a href=&#34;https://www.codetriage.com/faif/python-patterns&#34;&gt;subscribe to python-patterns on CodeTriage&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/Microsoft-3D-Movie-Maker</title>
    <updated>2022-06-03T02:28:42Z</updated>
    <id>tag:github.com,2022-06-03:/microsoft/Microsoft-3D-Movie-Maker</id>
    <link href="https://github.com/microsoft/Microsoft-3D-Movie-Maker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is the source code for the original Microsoft 3D Movie Maker released in 1995. This is not supported software.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft 3D Movie Maker&lt;/h1&gt; &#xA;&lt;p&gt;Released in 1995, this is the original source code to the Microsoft 3D Movie Maker project, now released under the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/Microsoft-3D-Movie-Maker/main/LICENSE&#34;&gt;MIT license&lt;/a&gt; as open source.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/microsoft/Microsoft-3D-Movie-Maker/raw/main/IMG/3dmovie.jpg?raw=true&#34; alt=&#34;3D Movie Maker&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building instructions&lt;/h2&gt; &#xA;&lt;p&gt;This project is unlikely to build successfully under modern hardware/software, but you can get started with compilation and get partial completed binaries. Here&#39;s what will get you going. Thanks to Mac Sample for their work on getting this far!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure this repo is checked out to a folder with a short name, ideally right on the root of a drive (i.e. C:\3d).&lt;/li&gt; &#xA; &lt;li&gt;You will need Visual C++ 2.0&#39;s dev tools (located under MSVC20\BIN on its installer disk) on your path. Modern compilers dislike some of the pre C++98 conventions.&lt;/li&gt; &#xA; &lt;li&gt;From the root of this repo, run &lt;code&gt;setvars.bat&lt;/code&gt; you can change the values in this script to change what your build will target.&lt;/li&gt; &#xA; &lt;li&gt;Locate and place font files (see &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/Microsoft-3D-Movie-Maker/main/FONTS.md&#34;&gt;FONTS.md&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Run nmake and you&#39;ll begin building 3d Movie Maker.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The source files in this repo are for historical reference and will be kept static, and this repository will be archived. Feel free to fork this repo and experiment.&lt;/p&gt; &#xA;&lt;h2&gt;Code cleanup&lt;/h2&gt; &#xA;&lt;p&gt;This code was restored from the Microsoft corporate archives and cleared for release.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Developer names and aliases were removed, with the exception of current employees who worked on the original release who consented to keeping their names in place&lt;/li&gt; &#xA; &lt;li&gt;The archive consisted of several CDs, some of which were for alternate builds or products, and have been excluded&lt;/li&gt; &#xA; &lt;li&gt;The code does not build with today&#39;s engineering tools, and is released as-is.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt; &#xA;&lt;p&gt;This repo includes a build from 1995 of BRender from Argonaut software. Approval to open source BRender as MIT was given in an email from Jez San, former CEO of Argonaut. Other versions of BRender exist at &lt;a href=&#34;https://github.com/foone/BRender-v1.3.2&#34;&gt;https://github.com/foone/BRender-v1.3.2&lt;/a&gt; and &lt;a href=&#34;https://github.com/foone/BRender-1997&#34;&gt;https://github.com/foone/BRender-1997&lt;/a&gt; Thanks to Jez and the whole BRender team for their hard work on this amazing engine. A full historical list of BRender contributors is available at &lt;a href=&#34;https://github.com/foone/BRender-v1.3.2/raw/main/README.md&#34;&gt;https://github.com/foone/BRender-v1.3.2/blob/main/README.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo does NOT include the SoftImage SDK &#34;./DKIT&#34; from 1992.&lt;/p&gt; &#xA;&lt;p&gt;Jez also offered this interesting BRender anecdote in an email:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;When Sam Littlewood designed BRender, he didnâ€™t write the code. And then document it.  &#xA;The way most things were built at the time.&#xA;First, he wrote the manual.  The full documentation&#xA;That served as the spec.  Then the coding started.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>hpcaitech/ColossalAI</title>
    <updated>2022-06-03T02:28:42Z</updated>
    <id>tag:github.com,2022-06-03:/hpcaitech/ColossalAI</id>
    <link href="https://github.com/hpcaitech/ColossalAI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Colossal-AI: A Unified Deep Learning System for Big Model Era&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Colossal-AI&lt;/h1&gt; &#xA;&lt;div id=&#34;top&#34; align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.colossalai.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/Colossal-AI_logo.png&#34; alt=&#34;logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Colossal-AI: A Unified Deep Learning System for Big Model Era&lt;/p&gt; &#xA; &lt;h3&gt; &lt;a href=&#34;https://arxiv.org/abs/2110.14883&#34;&gt; Paper &lt;/a&gt; | &lt;a href=&#34;https://www.colossalai.org/&#34;&gt; Documentation &lt;/a&gt; | &lt;a href=&#34;https://github.com/hpcaitech/ColossalAI-Examples&#34;&gt; Examples &lt;/a&gt; | &lt;a href=&#34;https://github.com/hpcaitech/ColossalAI/discussions&#34;&gt; Forum &lt;/a&gt; | &lt;a href=&#34;https://medium.com/@hpcaitech&#34;&gt; Blog &lt;/a&gt;&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/hpcaitech/ColossalAI/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/hpcaitech/ColossalAI/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colossalai.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/colossalai/badge/?version=latest&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/hpcaitech/colossalai&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/hpcaitech/colossalai/badge&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/hpcai-tech&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97HuggingFace-Join-yellow&#34; alt=&#34;HuggingFace badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/colossalaiworkspace/shared_invite/zt-z7b26eeb-CBp7jouvu~r0~lcFzX832w&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-join-blueviolet?logo=slack&amp;amp;amp&#34; alt=&#34;slack badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/WeChat.png&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%BE%AE%E4%BF%A1-%E5%8A%A0%E5%85%A5-green?logo=wechat&amp;amp;amp&#34; alt=&#34;WeChat badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;| &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/README-zh-Hans.md&#34;&gt;ä¸­æ–‡&lt;/a&gt; |&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Why-Colossal-AI&#34;&gt;Why Colossal-AI&lt;/a&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Features&#34;&gt;Features&lt;/a&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Parallel-Training-Demo&#34;&gt;Parallel Training Demo&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#ViT&#34;&gt;ViT&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#GPT-3&#34;&gt;GPT-3&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#GPT-2&#34;&gt;GPT-2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#BERT&#34;&gt;BERT&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#PaLM&#34;&gt;PaLM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Single-GPU-Training-Demo&#34;&gt;Single GPU Training Demo&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#GPT-2-Single&#34;&gt;GPT-2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#PaLM-Single&#34;&gt;PaLM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Inference-Energon-AI-Demo&#34;&gt;Inference (Energon-AI) Demo&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#GPT-3-Inference&#34;&gt;GPT-3&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#PyPI&#34;&gt;PyPI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Install-From-Source&#34;&gt;Install From Source&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Use-Docker&#34;&gt;Use Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Quick-View&#34;&gt;Quick View&lt;/a&gt;&lt;/li&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Start-Distributed-Training-in-Lines&#34;&gt;Start Distributed Training in Lines&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Write-a-Simple-2D-Parallel-Model&#34;&gt;Write a Simple 2D Parallel Model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#Cite-Us&#34;&gt;Cite Us&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why Colossal-AI&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://youtu.be/KnXSfjqkKN0&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/JamesDemmel_Colossal-AI.png&#34; width=&#34;600&#34;&gt; &lt;/a&gt; &#xA; &lt;p&gt;Prof. James Demmel (UC Berkeley): Colossal-AI makes distributed training efficient, easy and scalable.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Colossal-AI provides a collection of parallel components for you. We aim to support you to write your distributed deep learning models just like how you write your model on your laptop. We provide user-friendly tools to kickstart distributed training and inference in a few lines.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Parallelism strategies&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Data Parallelism&lt;/li&gt; &#xA;   &lt;li&gt;Pipeline Parallelism&lt;/li&gt; &#xA;   &lt;li&gt;1D, &lt;a href=&#34;https://arxiv.org/abs/2104.05343&#34;&gt;2D&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/abs/2105.14500&#34;&gt;2.5D&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/abs/2105.14450&#34;&gt;3D&lt;/a&gt; Tensor Parallelism&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2105.13120&#34;&gt;Sequence Parallelism&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1910.02054&#34;&gt;Zero Redundancy Optimizer (ZeRO)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Heterogeneous Memory Menagement&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2108.05818&#34;&gt;PatrickStar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Friendly Usage&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Parallelism based on configuration file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Inference&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hpcaitech/EnergonAI&#34;&gt;Energon-AI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Parallel Training Demo&lt;/h2&gt; &#xA;&lt;h3&gt;ViT&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/ViT.png&#34; width=&#34;450&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;14x larger batch size, and 5x faster training for Tensor Parallelism = 64&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;GPT-3&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/GPT3.png&#34; width=&#34;700/&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Save 50% GPU resources, and 10.7% acceleration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;GPT-2&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/GPT2.png&#34; width=&#34;800/&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;11x lower GPU memory consumption, and superlinear scaling efficiency with Tensor Parallelism&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/(updated)GPT-2.png&#34; width=&#34;800&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;24x larger model size on the same hardware&lt;/li&gt; &#xA; &lt;li&gt;over 3x acceleration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;BERT&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/BERT.png&#34; width=&#34;800/&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2x faster training, or 50% longer sequence length&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PaLM&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hpcaitech/PaLM-colossalai&#34;&gt;PaLM-colossalai&lt;/a&gt;: Scalable implementation of Google&#39;s Pathways Language Model (&lt;a href=&#34;https://ai.googleblog.com/2022/04/pathways-language-model-palm-scaling-to.html&#34;&gt;PaLM&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://www.colossalai.org/&#34;&gt;documentation and tutorials&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Single GPU Training Demo&lt;/h2&gt; &#xA;&lt;h3&gt;GPT-2&lt;/h3&gt; &#xA;&lt;p id=&#34;GPT-2-Single&#34; align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/GPT2-GPU1.png&#34; width=&#34;450/&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;20x larger model size on the same hardware&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PaLM&lt;/h3&gt; &#xA;&lt;p id=&#34;PaLM-Single&#34; align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/PaLM-GPU1.png&#34; width=&#34;450/&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;34x larger model size on the same hardware&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Inference (Energon-AI) Demo&lt;/h2&gt; &#xA;&lt;h3&gt;GPT-3&lt;/h3&gt; &#xA;&lt;p id=&#34;GPT-3-Inference&#34; align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/inference_GPT-3.jpg&#34; width=&#34;800/&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hpcaitech/EnergonAI&#34;&gt;Energon-AI&lt;/a&gt;: 50% inference acceleration on the same hardware&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Download From Official Releases&lt;/h3&gt; &#xA;&lt;p&gt;You can visit the &lt;a href=&#34;https://www.colossalai.org/download&#34;&gt;Download&lt;/a&gt; page to download Colossal-AI with pre-built CUDA extensions.&lt;/p&gt; &#xA;&lt;h3&gt;Download From Source&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The version of Colossal-AI will be in line with the main branch of the repository. Feel free to raise an issue if you encounter any problem. :)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/hpcaitech/ColossalAI.git&#xA;cd ColossalAI&#xA;&#xA;# install dependency&#xA;pip install -r requirements/requirements.txt&#xA;&#xA;# install colossalai&#xA;pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t want to install and enable CUDA kernel fusion (compulsory installation when using fused optimizer):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;NO_CUDA_EXT=1 pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Use Docker&lt;/h2&gt; &#xA;&lt;p&gt;Run the following command to build a docker image from Dockerfile provided.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Building Colossal-AI from scratch requires GPU support, you need to use Nvidia Docker Runtime as the default when doing &lt;code&gt;docker build&lt;/code&gt;. More details can be found &lt;a href=&#34;https://stackoverflow.com/questions/59691207/docker-build-with-nvidia-runtime&#34;&gt;here&lt;/a&gt;. We recommend you install Colossal-AI from our &lt;a href=&#34;https://www.colossalai.org&#34;&gt;project page&lt;/a&gt; directly.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ColossalAI&#xA;docker build -t colossalai ./docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the following command to start the docker container in interactive mode.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -ti --gpus all --rm --ipc=host colossalai bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Join the Colossal-AI community on &lt;a href=&#34;https://github.com/hpcaitech/ColossalAI/discussions&#34;&gt;Forum&lt;/a&gt;, &lt;a href=&#34;https://join.slack.com/t/colossalaiworkspace/shared_invite/zt-z7b26eeb-CBp7jouvu~r0~lcFzX832w&#34;&gt;Slack&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/WeChat.png&#34; title=&#34;qrcode&#34;&gt;WeChat&lt;/a&gt; to share your suggestions, feedback, and questions with our engineering team.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute to this project, please follow the guideline in &lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thanks so much to all of our amazing contributors!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hpcaitech/ColossalAI/graphs/contributors&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/contributor_avatar.png&#34; width=&#34;800px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;The order of contributor avatars is randomly shuffled.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Quick View&lt;/h2&gt; &#xA;&lt;h3&gt;Start Distributed Training in Lines&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;parallel = dict(&#xA;    pipeline=2,&#xA;    tensor=dict(mode=&#39;2.5d&#39;, depth = 1, size=4)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start Heterogeneous Training in Lines&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;zero = dict(&#xA;    model_config=dict(&#xA;        tensor_placement_policy=&#39;auto&#39;,&#xA;        shard_strategy=TensorShardStrategy(),&#xA;        reuse_fp16_shard=True&#xA;    ),&#xA;    optimizer_config=dict(initial_scale=2**5, gpu_margin_mem_ratio=0.2)&#xA;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Cite Us&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{bian2021colossal,&#xA;  title={Colossal-AI: A Unified Deep Learning System For Large-Scale Parallel Training},&#xA;  author={Bian, Zhengda and Liu, Hongxin and Wang, Boxiang and Huang, Haichen and Li, Yongbin and Wang, Chuanrui and Cui, Fan and You, Yang},&#xA;  journal={arXiv preprint arXiv:2110.14883},&#xA;  year={2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;right&#34;&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/hpcaitech/ColossalAI/main/#top&#34;&gt;back to top&lt;/a&gt;)&lt;/p&gt;</summary>
  </entry>
</feed>