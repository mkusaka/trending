<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-02T02:29:52Z</updated>
  <subtitle>Monthly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google/googletest</title>
    <updated>2022-06-02T02:29:52Z</updated>
    <id>tag:github.com,2022-06-02:/google/googletest</id>
    <link href="https://github.com/google/googletest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GoogleTest - Google Testing and Mocking Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GoogleTest&lt;/h1&gt; &#xA;&lt;h3&gt;Announcements&lt;/h3&gt; &#xA;&lt;h4&gt;Live at Head&lt;/h4&gt; &#xA;&lt;p&gt;GoogleTest now follows the &lt;a href=&#34;https://abseil.io/about/philosophy#upgrade-support&#34;&gt;Abseil Live at Head philosophy&lt;/a&gt;. We recommend &lt;a href=&#34;https://github.com/abseil/abseil-cpp/raw/master/FAQ.md#what-is-live-at-head-and-how-do-i-do-it&#34;&gt;updating to the latest commit in the &lt;code&gt;main&lt;/code&gt; branch as often as possible&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Documentation Updates&lt;/h4&gt; &#xA;&lt;p&gt;Our documentation is now live on GitHub Pages at &lt;a href=&#34;https://google.github.io/googletest/&#34;&gt;https://google.github.io/googletest/&lt;/a&gt;. We recommend browsing the documentation on GitHub Pages rather than directly in the repository.&lt;/p&gt; &#xA;&lt;h4&gt;Release 1.11.0&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/googletest/releases/tag/release-1.11.0&#34;&gt;Release 1.11.0&lt;/a&gt; is now available.&lt;/p&gt; &#xA;&lt;h4&gt;Coming Soon&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We are planning to take a dependency on &lt;a href=&#34;https://github.com/abseil/abseil-cpp&#34;&gt;Abseil&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;More documentation improvements are planned.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Welcome to &lt;strong&gt;GoogleTest&lt;/strong&gt;, Google&#39;s C++ test framework!&lt;/h2&gt; &#xA;&lt;p&gt;This repository is a merger of the formerly separate GoogleTest and GoogleMock projects. These were so closely related that it makes sense to maintain and release them together.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://google.github.io/googletest/&#34;&gt;GoogleTest User&#39;s Guide&lt;/a&gt; for documentation. We recommend starting with the &lt;a href=&#34;https://google.github.io/googletest/primer.html&#34;&gt;GoogleTest Primer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More information about building GoogleTest can be found at &lt;a href=&#34;https://raw.githubusercontent.com/google/googletest/main/googletest/README.md&#34;&gt;googletest/README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://en.wikipedia.org/wiki/XUnit&#34;&gt;xUnit&lt;/a&gt; test framework.&lt;/li&gt; &#xA; &lt;li&gt;Test discovery.&lt;/li&gt; &#xA; &lt;li&gt;A rich set of assertions.&lt;/li&gt; &#xA; &lt;li&gt;User-defined assertions.&lt;/li&gt; &#xA; &lt;li&gt;Death tests.&lt;/li&gt; &#xA; &lt;li&gt;Fatal and non-fatal failures.&lt;/li&gt; &#xA; &lt;li&gt;Value-parameterized tests.&lt;/li&gt; &#xA; &lt;li&gt;Type-parameterized tests.&lt;/li&gt; &#xA; &lt;li&gt;Various options for running the tests.&lt;/li&gt; &#xA; &lt;li&gt;XML test report generation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;GoogleTest requires a codebase and compiler compliant with the C++11 standard or newer.&lt;/p&gt; &#xA;&lt;p&gt;The GoogleTest code is officially supported on the following platforms. Operating systems or tools not listed below are community-supported. For community-supported platforms, patches that do not complicate the code may be considered.&lt;/p&gt; &#xA;&lt;p&gt;If you notice any problems on your platform, please file an issue on the &lt;a href=&#34;https://github.com/google/googletest/issues&#34;&gt;GoogleTest GitHub Issue Tracker&lt;/a&gt;. Pull requests containing fixes are welcome!&lt;/p&gt; &#xA;&lt;h3&gt;Operating Systems&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux&lt;/li&gt; &#xA; &lt;li&gt;macOS&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compilers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gcc 5.0+&lt;/li&gt; &#xA; &lt;li&gt;clang 5.0+&lt;/li&gt; &#xA; &lt;li&gt;MSVC 2015+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;macOS users:&lt;/strong&gt; Xcode 9.3+ provides clang 5.0+.&lt;/p&gt; &#xA;&lt;h3&gt;Build Systems&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bazel.build/&#34;&gt;Bazel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Bazel is the build system used by the team internally and in tests. CMake is supported on a best-effort basis and by the community.&lt;/p&gt; &#xA;&lt;h2&gt;Who Is Using GoogleTest?&lt;/h2&gt; &#xA;&lt;p&gt;In addition to many internal projects at Google, GoogleTest is also used by the following notable projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://www.chromium.org/&#34;&gt;Chromium projects&lt;/a&gt; (behind the Chrome browser and Chrome OS).&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://llvm.org/&#34;&gt;LLVM&lt;/a&gt; compiler.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/protobuf&#34;&gt;Protocol Buffers&lt;/a&gt;, Google&#39;s data interchange format.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://opencv.org/&#34;&gt;OpenCV&lt;/a&gt; computer vision library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related Open Source Projects&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nholthaus/gtest-runner&#34;&gt;GTest Runner&lt;/a&gt; is a Qt5 based automated test-runner and Graphical User Interface with powerful features for Windows and Linux platforms.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ospector/gtest-gbar&#34;&gt;GoogleTest UI&lt;/a&gt; is a test runner that runs your test binary, allows you to track its progress via a progress bar, and displays a list of test failures. Clicking on one shows failure text. GoogleTest UI is written in C#.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kinow/gtest-tap-listener&#34;&gt;GTest TAP Listener&lt;/a&gt; is an event listener for GoogleTest that implements the &lt;a href=&#34;https://en.wikipedia.org/wiki/Test_Anything_Protocol&#34;&gt;TAP protocol&lt;/a&gt; for test result output. If your test runner understands TAP, you may find it useful.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/gtest-parallel&#34;&gt;gtest-parallel&lt;/a&gt; is a test runner that runs tests from your binary in parallel to provide significant speed-up.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=DavidSchuldenfrei.gtest-adapter&#34;&gt;GoogleTest Adapter&lt;/a&gt; is a VS Code extension allowing to view GoogleTest in a tree view and run/debug your tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/matepek/vscode-catch2-test-adapter&#34;&gt;C++ TestMate&lt;/a&gt; is a VS Code extension allowing to view GoogleTest in a tree view and run/debug your tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cornichon/&#34;&gt;Cornichon&lt;/a&gt; is a small Gherkin DSL parser that generates stub code for GoogleTest.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Changes&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://github.com/google/googletest/raw/master/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; for details on how to contribute to this project.&lt;/p&gt; &#xA;&lt;p&gt;Happy testing!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Tencent/tmagic-editor</title>
    <updated>2022-06-02T02:29:52Z</updated>
    <id>tag:github.com,2022-06-02:/Tencent/tmagic-editor</id>
    <link href="https://github.com/Tencent/tmagic-editor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TMagic&lt;/h1&gt; &#xA;&lt;p&gt;TMagic 可视化搭建平台。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;💪 Vue 3.0 Composition API&lt;/li&gt; &#xA; &lt;li&gt;🔥 Written in TypeScript&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;文档&lt;/h1&gt; &#xA;&lt;p&gt;文档请移步 &lt;a href=&#34;https://tencent.github.io/tmagic-editor/docs/index.html&#34;&gt;https://tencent.github.io/tmagic-editor/docs/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;目前文档仍在逐步完善中，如有疑问欢迎给我们提 issue。&lt;/p&gt; &#xA;&lt;h1&gt;Playground 体验&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tencent.github.io/tmagic-editor/playground/index.html&#34;&gt;https://tencent.github.io/tmagic-editor/playground/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;环境准备&lt;/h2&gt; &#xA;&lt;p&gt;node.js &amp;gt; 14&lt;/p&gt; &#xA;&lt;p&gt;先安装lerna&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install -g lerna&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后安装依赖&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm run bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;运行项目&lt;/h2&gt; &#xA;&lt;p&gt;执行命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm run playground&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;最后在浏览器中打开&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:8098/&#34;&gt;http://localhost:8098/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;即可得到一个魔方编辑器示例项目&lt;/p&gt; &#xA;&lt;h2&gt;项目介绍&lt;/h2&gt; &#xA;&lt;p&gt;在本项目中，我们核心内容，是包含在 &lt;code&gt;packages/editor&lt;/code&gt; 中的编辑器，以及 &lt;code&gt;runtime&lt;/code&gt; 和 &lt;code&gt;packages/ui&lt;/code&gt; 提供的各个前端框架相关的 runtime 和 ui。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;packages&lt;/code&gt; 目录中提供的内容，我们都以 npm 包形式输出，开发者可以通过安装对应的包来使用。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;runtime&lt;/code&gt; 是我们提供的编辑器活动页和编辑器模拟器运行的页面项目示例。可以直接使用，也可以参考并自行实现。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playground&lt;/code&gt; 是一个简单的编辑器项目示例。即使用了 &lt;code&gt;packages&lt;/code&gt; 和 &lt;code&gt;runtime&lt;/code&gt; 内容的集成项目。开发者可以参考 playground，使用魔方提供的能力实现一个满足业务方需求的编辑器。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;编辑器&lt;/h3&gt; &#xA;&lt;p&gt;通过安装和使用 @tmagic/editor，可以快速搭建起一个魔方编辑器。&lt;/p&gt; &#xA;&lt;img src=&#34;https://image.video.qpic.cn/oa_88b7d-32_509802977_1635842258505918&#34; alt=&#34;魔方demo图&#34;&gt; &#xA;&lt;h3&gt;页面渲染&lt;/h3&gt; &#xA;&lt;p&gt;runtime 是魔方提供的页面渲染环境。通过加载在编辑器中产出的 DSL，即可得到魔方编辑器希望拥有的最终产物，一个活动页面。我们提供了 vue2/vue3/react 几个版本的 runtime。&lt;/p&gt; &#xA;&lt;p&gt;通过魔方编辑器和 runtime 渲染，以及通过自定义的复杂组件开发，可以在魔方项目上，搭建出复杂而精美的页面。&lt;/p&gt; &#xA;&lt;img src=&#34;https://image.video.qpic.cn/oa_7cf5e6-5_466783002_1637935497991411&#34; width=&#34;375&#34;&gt; &#xA;&lt;h3&gt;表单渲染&lt;/h3&gt; &#xA;&lt;p&gt;魔方的表单配置项，使用了我们开发的基于 element-ui 的 @tmagic/form，@tmagic/form 也可以在其他地方单独使用。支持渲染 JS Schema 提供的表单描述。&lt;/p&gt; &#xA;&lt;img src=&#34;https://image.video.qpic.cn/oa_28dbde-2_1333081854_1637935825410557&#34;&gt; &#xA;&lt;h3&gt;使用&lt;/h3&gt; &#xA;&lt;p&gt;playground 的示例项目，就是为开发者提供的基础应用示例。开发者可以基于此或者参考自行实现，搭建一个基于魔方的可视化搭建平台。&lt;/p&gt; &#xA;&lt;h3&gt;参与贡献&lt;/h3&gt; &#xA;&lt;p&gt;如果你有好的意见或建议，欢迎给我们提 Issues 或 Pull Requests，为提升魔方可视化编辑器开发体验贡献力量。&lt;br&gt;详见：&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/tmagic-editor/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;欢迎入群交流&lt;/h3&gt; &#xA;&lt;img src=&#34;https://vfiles.gtimg.cn/vupload/20220412/b85d331649748582992.jpg&#34; width=&#34;375&#34;&gt;</summary>
  </entry>
  <entry>
    <title>programthink/zhao</title>
    <updated>2022-06-02T02:29:52Z</updated>
    <id>tag:github.com,2022-06-02:/programthink/zhao</id>
    <link href="https://github.com/programthink/zhao" rel="alternate"></link>
    <summary type="html">&lt;p&gt;【编程随想】整理的《太子党关系网络》，专门揭露赵国的权贵&lt;/p&gt;&lt;hr&gt;&lt;p&gt;= 俺整理的《太子党关系网络》 =&lt;/p&gt; &#xA;&lt;p&gt;== 简介 ==&lt;/p&gt; &#xA;&lt;p&gt;此项目创建于2016年2月，专门用来揭露天朝的权贵（也就是传说中的“赵家人”）。&lt;/p&gt; &#xA;&lt;p&gt;俺把这几年收集整理的数据开源到 GitHub，便于多人协作——大伙儿群策群力，一起来曝光权贵家族。&lt;/p&gt; &#xA;&lt;p&gt;初次上传的数据包括：700多个数据文件（ &#39;&#39;&#39;对应700多人，130多个家族&#39;&#39;&#39; ），另有200多张图片（人物头像）。随着俺不断完善，数据会越来越多。&lt;/p&gt; &#xA;&lt;p&gt;对这个项目，俺会【持续更新】。比如朝廷每次换届的时候，俺都会补充新的素材。&lt;/p&gt; &#xA;&lt;p&gt;为了确保数据的可信度，俺主要参考“维基百科”以及一些国际权威媒体的报道（比如《纽约时报》、《华尔街日版》、《金融时报》等等）。&lt;/p&gt; &#xA;&lt;p&gt;另外，对于某些客观事实（比如：生卒年月、简历、亲戚关系），俺也参考了天朝政府的官方网站，以及墙内的“百度百科”。&lt;/p&gt; &#xA;&lt;p&gt;== 下载说明 ==&lt;/p&gt; &#xA;&lt;p&gt;GitHub 提供了“下载整个项目”的功能，但是会比较大。&lt;/p&gt; &#xA;&lt;p&gt;如果你仅仅想看《太子党关系网络》这份文档，只需在首页上方点击进入 &#39;&#39;&#39;download&#39;&#39;&#39; 这个目录。&lt;/p&gt; &#xA;&lt;p&gt;该目录下有 &#39;&#39;&#39;pdf&#39;&#39;&#39; 和 &#39;&#39;&#39;jpg&#39;&#39;&#39; 两个子目录，分别存放对应的 &#39;&#39;&#39;【文件类型】&#39;&#39;&#39; 。你想要看哪一种文件格式，就进入哪个子目录里面。&lt;/p&gt; &#xA;&lt;p&gt;进入【文件类型】的子目录之后，会看到一个文件列表（目前有13个文件）。先点击你想要的某个文件，会进入该文件的页面。&lt;/p&gt; &#xA;&lt;p&gt;然后在【右上方】你会看到一个 &#39;&#39;&#39;Raw 按钮&#39;&#39;&#39; ，在这个按钮上点【右键】，在【右键菜单】里面选“保存”或“另存为”，就可以把这个文件下载到你本机。&lt;/p&gt; &#xA;&lt;p&gt;== 多人协作说明 ==&lt;/p&gt; &#xA;&lt;p&gt;俺非常希望有更多的网友参与该项目，大伙儿一起来完善天朝权贵家族的资料。&lt;/p&gt; &#xA;&lt;p&gt;想要参与的同学，可以通过如下方式：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;到[https://program-think.blogspot.com/ 俺博客]留言进行反馈，补充信息或反馈错误。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在[https://github.com/programthink/zhao/issues 本项目发一个 issue]，补充信息或反馈错误。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork 该项目，进行修改，然后向俺发一个 Pull Request&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;（后面两种方式，你需要有 GitHub 的帐号）&lt;/p&gt; &#xA;&lt;p&gt;== 数据格式说明 ==&lt;/p&gt; &#xA;&lt;p&gt;本项目的数据文件，全部采用[https://zh.wikipedia.org/wiki/YAML YAML 格式]。这种格式非常简洁明了，有利于完全不懂技术的网友参与编辑。&lt;/p&gt; &#xA;&lt;p&gt;而且俺在每一个 YAML 格式的文件中都写了详细的注释，便于其他网友修改。&lt;/p&gt; &#xA;&lt;p&gt;== 目录说明 ==&lt;/p&gt; &#xA;&lt;p&gt;=== data 目录 ===&lt;/p&gt; &#xA;&lt;p&gt;data 目录用来保存数据文件，该目录下另有如下三个子目录：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;person&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这个目录存放个人的资料，每个人一个目录，目录名就是人名。对于偶尔有同名的情况，在目录名末尾追加数字序号来区分。&lt;/p&gt; &#xA;&lt;p&gt;每个目录下都有一个 brief.yaml 文件，包含此人的简介。&lt;/p&gt; &#xA;&lt;p&gt;有些目录下还有一个 portrait.png 文件，对应此人的头像。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;company&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这个目录存放与太子党有关的公司或组织机构。目录结构与 person 类似。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;family&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这个目录存放家族关系的信息。每个家族是一个 yaml 格式的文件。&lt;/p&gt; &#xA;&lt;p&gt;=== bin 目录 ===&lt;/p&gt; &#xA;&lt;p&gt;该目录存放编译脚本。该脚本的使用参见下面的章节。&lt;/p&gt; &#xA;&lt;p&gt;=== download 目录 ===&lt;/p&gt; &#xA;&lt;p&gt;该目录存放制作好的文件，目前先提供 jpg 和 pdf 两种格式。&lt;/p&gt; &#xA;&lt;p&gt;如果你需要其它格式，可以用 bin 目录下的编译脚本自行搞定（编译脚本的使用，参见下面的章节）。&lt;/p&gt; &#xA;&lt;p&gt;== 编译脚本使用说明 ==&lt;/p&gt; &#xA;&lt;p&gt;（俺是在 Linux 上编写该脚本，尚未在 Windows 上进行测试）&lt;/p&gt; &#xA;&lt;p&gt;如果你在 Windows 上使用碰到问题，可以到[https://program-think.blogspot.com/ 俺博客]留言进行反馈。也可以在[https://github.com/programthink/zhao/issues 本项目发一个 issue]。&lt;/p&gt; &#xA;&lt;p&gt;=== 脚本的命令行参数 ===&lt;/p&gt; &#xA;&lt;p&gt;俺使用 python 作为编译脚本，该脚本位于 bin 目录下。&lt;/p&gt; &#xA;&lt;p&gt;通过该脚本可以把原始数据生成为 dot 语言的脚本。然后再调用 Graphviz 把 dot 脚本生成各种格式（比如：pdf、jpeg）。&lt;/p&gt; &#xA;&lt;p&gt;要使用该脚本，先在命令行模式下进入 bin 目录，然后运行如下命令：&lt;/p&gt; &#xA;&lt;p&gt;（生成 pdf 格式的示例）&lt;/p&gt; &#xA;&lt;p&gt;&#39;&#39;&#39;python make.py pdf&#39;&#39;&#39;&lt;/p&gt; &#xA;&lt;p&gt;（生成 jpg 格式的示例）&lt;/p&gt; &#xA;&lt;p&gt;&#39;&#39;&#39;python make.py jpg&#39;&#39;&#39;&lt;/p&gt; &#xA;&lt;p&gt;=== 依赖的软件 ===&lt;/p&gt; &#xA;&lt;p&gt;要使用上述脚本，你需要事先安装相关的软件（如下）&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python（2 或 3）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;因为俺用的是 Python 脚本，所以你需要先安装 python 软件。&lt;/p&gt; &#xA;&lt;p&gt;目前 Python 有两种大版本——python2 和 python3——俺的编译脚本 &#39;&#39;&#39;【同时兼容】&#39;&#39;&#39; 这两种 Python 的大版本。&lt;/p&gt; &#xA;&lt;p&gt;对于 Python 的小版本，俺本人在 &#39;&#39;&#39;2.7&#39;&#39;&#39; 和 &#39;&#39;&#39;3.5&#39;&#39;&#39; 上测试通过。2.6 和 3.4 估计也可以。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PyYAML&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这是一个基于 python 开发的软件包，专门用来处理 YAML 格式的文件。&lt;/p&gt; &#xA;&lt;p&gt;你需要在你的 python 环境中安装该软件包。其官方链接如下：&lt;/p&gt; &#xA;&lt;p&gt;[http://pyyaml.org/wiki/PyYAML PyYAML 的官网的 wiki]&lt;/p&gt; &#xA;&lt;p&gt;[https://pypi.python.org/pypi/PyYAML Python 官网的 PYPI]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Graphviz&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这个软件是用来生成【关系图】的。关于该这个软件，俺已经写了一篇扫盲教程：&lt;/p&gt; &#xA;&lt;p&gt;《[https://program-think.blogspot.com/2016/02/opensource-review-graphviz.html 开源项目：【自动】绘图工具Graphviz——《太子党关系网络》就是用它制作]》&lt;/p&gt; &#xA;&lt;p&gt;== 致“反对此项目的墙内程序员” ==&lt;/p&gt; &#xA;&lt;p&gt;本项目上线第二天，就收获 363 个 star 兼 88 个 fork，甚至还挤进 GitHub 的“当日 Trending”——俺很荣幸，也很高兴有这么多人给俺捧场。&lt;/p&gt; &#xA;&lt;p&gt;但是在[https://github.com/programthink/zhao/issues 本项目的 issue 列表]中也看到好几个反对此项目的程序员（应该都来自墙内），他们担心这个项目导致 GitHub 被 GFW 封杀。&lt;/p&gt; &#xA;&lt;p&gt;这几年来，类似的言论俺已经看了不少。就好比强盗拿刀杀人，围观者不但没有谴责强盗，反而去谴责卖刀的店家——这就是传说中的“斯德哥尔摩综合症”。&lt;/p&gt; &#xA;&lt;p&gt;有兴趣的同学，可以看俺之前的博文——《[https://program-think.blogspot.com/2012/06/stockholm-syndrome.html 天朝民众的心理分析：斯德哥尔摩综合症]》&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter/samples</title>
    <updated>2022-06-02T02:29:52Z</updated>
    <id>tag:github.com,2022-06-02:/flutter/samples</id>
    <link href="https://github.com/flutter/samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of Flutter examples and demos&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter samples&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flutter/samples/actions?workflow=Main%20Branch%20CI&#34;&gt;&lt;img src=&#34;https://github.com/flutter/samples/workflows/Main%20Branch%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A collection of open source samples that illustrate best practices for &lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Visual samples index&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to browse through the samples in this repo (as well as a few others!) is the &lt;a href=&#34;https://flutter.github.io/samples&#34;&gt;visual samples index&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tip: minimize download size&lt;/h2&gt; &#xA;&lt;p&gt;As this repository is quite big, you can use svn to download a single example. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;svn co https://github.com/flutter/samples/trunk/provider_shopper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use a &lt;a href=&#34;https://github.blog/2020-12-21-get-up-to-speed-with-partial-clone-and-shallow-clone/&#34;&gt;partial clone&lt;/a&gt; to skip blob objects that aren&#39;t currently checked out, while including the full commit history:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --filter=blob:none https://github.com/flutter/samples.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Interested in contributing?&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/flutter/samples/main/CONTRIBUTING.md&#34;&gt;contributor&#39;s guide&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Questions or issues?&lt;/h2&gt; &#xA;&lt;p&gt;If you have a general question about one of these samples or how to adapt its techniques for one of your own apps, try one of these resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/flutter-dev&#34;&gt;The FlutterDev Google Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitter.im/flutter/flutter&#34;&gt;The Flutter Gitter channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/flutter&#34;&gt;StackOverflow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you run into a bug in one of the samples, please file an issue in the &lt;a href=&#34;https://github.com/flutter/samples/issues&#34;&gt;&lt;code&gt;flutter/samples&lt;/code&gt; issue tracker&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SebLague/Geographical-Adventures</title>
    <updated>2022-06-02T02:29:52Z</updated>
    <id>tag:github.com,2022-06-02:/SebLague/Geographical-Adventures</id>
    <link href="https://github.com/SebLague/Geographical-Adventures" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Geographical Adventures&lt;/h1&gt; &#xA;&lt;p&gt;A little work-in-progress geography game about delivering packages to different countries around the world. &lt;br&gt; Made in the Unity game engine.&lt;/p&gt; &#xA;&lt;p&gt;You can try playing the game in its current state &lt;a href=&#34;https://sebastian.itch.io/geographical-adventures&#34;&gt;here.&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SebLague/Images/master/Geographical%20Adventures.jpg&#34; alt=&#34;Image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SebLague/Images/master/Geographical%20Adventures%202.jpg&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Development Videos&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/sLqXFF8mlEU&#34;&gt;Episode 01: I Tried Creating a Game Using Real-World Geographic Data&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://youtu.be/UXD97l7ZT0w&#34;&gt;Episode 02: Trying to Improve My Geography Game with More Real-World Data&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=pNp4ug5F6To&#34;&gt;Episode 03: Polishing and Releasing My Little Geography Game&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This work is licensed under a &lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img src=&#34;https://licensebuttons.net/l/by-nc-sa/4.0/88x31.png&#34; alt=&#34;CC BY-NC-SA 4.0&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lensapp/lens</title>
    <updated>2022-06-02T02:29:52Z</updated>
    <id>tag:github.com,2022-06-02:/lensapp/lens</id>
    <link href="https://github.com/lensapp/lens" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lens - The way the world runs Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lens Open Source Project (OpenLens)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lensapp/lens/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/lensapp/lens/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/k8slens/shared_invite/zt-198iepl92-EPJsCckkJ~f887vWqJcgGA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20slack-blue.svg?logo=slack&amp;amp;longCache=true&amp;amp;style=flat&#34; alt=&#34;Chat on Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;The Repository&lt;/h2&gt; &#xA;&lt;p&gt;This repository (&#34;OpenLens&#34;) is where Team Lens develops the &lt;a href=&#34;https://k8slens.dev&#34;&gt;Lens IDE&lt;/a&gt; product together with the community. It is backed by a number of Kubernetes and cloud native ecosystem pioneers. This source code is available to everyone under the &lt;a href=&#34;https://raw.githubusercontent.com/lensapp/lens/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Lens - The Kubernetes IDE&lt;/h2&gt; &#xA;&lt;p&gt;Lens - The Kubernetes IDE (&#34;Lens IDE&#34;) is a distribution of the OpenLens repository with Team Lens specific customizations released under a traditional &lt;a href=&#34;https://k8slens.dev/licenses/eula&#34;&gt;EULA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Lens IDE provides the full situational awareness for everything that runs in Kubernetes. It&#39;s lowering the barrier of entry for people just getting started and radically improving productivity for people with more experience.&lt;/p&gt; &#xA;&lt;p&gt;Lens IDE a standalone application for MacOS, Windows and Linux operating systems. You can download it free of charge for Windows, MacOS, and Linux from &lt;a href=&#34;https://k8slens.dev&#34;&gt;Lens IDE website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=eeDwdVXattc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lensapp/lens/master/.github/screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.k8slens.dev/latest/getting-started/&#34;&gt;Getting Started&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.k8slens.dev/latest/contributing/development/&#34;&gt;Development&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.k8slens.dev/latest/contributing/&#34;&gt;Contributing&lt;/a&gt; page.&lt;/p&gt;</summary>
  </entry>
</feed>