<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-01T01:51:46Z</updated>
  <subtitle>Monthly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Textualize/textual</title>
    <updated>2022-11-01T01:51:46Z</updated>
    <id>tag:github.com,2022-11-01:/Textualize/textual</id>
    <link href="https://github.com/Textualize/textual" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Textual is a TUI (Text User Interface) framework for Python inspired by modern web development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Textual&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Textualize/textual/main/imgs/textual.png&#34; alt=&#34;Textual splash image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Textual is a Python framework for creating interactive applications that run in your terminal.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; ðŸŽ¬ Demonstration &lt;/summary&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;A quick run through of some Textual features.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/554369/197355913-65d3c125-493d-4c05-a590-5311f16c40ff.mov&#34;&gt;https://user-images.githubusercontent.com/554369/197355913-65d3c125-493d-4c05-a590-5311f16c40ff.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Textual adds interactivity to &lt;a href=&#34;https://github.com/Textualize/rich&#34;&gt;Rich&lt;/a&gt; with a Python API inspired by modern web development.&lt;/p&gt; &#xA;&lt;p&gt;On modern terminal software (installed by default on most systems), Textual apps can use &lt;strong&gt;16.7 million&lt;/strong&gt; colors with mouse support and smooth flicker-free animation. A powerful layout engine and re-usable components makes it possible to build apps that rival the desktop and web experience.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Textual runs on Linux, macOS, and Windows. Textual requires Python 3.7 or above.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Install Textual via pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install &#34;textual[dev]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The addition of &lt;code&gt;[dev]&lt;/code&gt; installs Textual development tools. See the &lt;a href=&#34;https://textual.textualize.io/getting_started/&#34;&gt;docs&lt;/a&gt; if you need help getting started.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;Run the following command to see a little of what Textual can do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m textual&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Textualize/textual/main/imgs/demo.png&#34; alt=&#34;Textual demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Head over to the &lt;a href=&#34;http://textual.textualize.io/&#34;&gt;Textual documentation&lt;/a&gt; to start building!&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;The Textual repository comes with a number of examples you can experiment with or use as a template for your own projects.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; ðŸŽ¬ Code browser &lt;/summary&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;This is the &lt;a href=&#34;https://github.com/Textualize/textual/raw/main/examples/code_browser.py&#34;&gt;code_browser.py&lt;/a&gt; example which clocks in at 61 lines (&lt;em&gt;including&lt;/em&gt; docstrings and blank lines).&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/554369/197188237-88d3f7e4-4e5f-40b5-b996-c47b19ee2f49.mov&#34;&gt;https://user-images.githubusercontent.com/554369/197188237-88d3f7e4-4e5f-40b5-b996-c47b19ee2f49.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; ðŸ“· Calculator &lt;/summary&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;This is &lt;a href=&#34;https://github.com/Textualize/textual/raw/main/examples/calculator.py&#34;&gt;calculator.py&lt;/a&gt; which demonstrates Textual grid layouts.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Textualize/textual/main/imgs/calculator.png&#34; alt=&#34;calculator screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; ðŸŽ¬ Stopwatch &lt;/summary&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;This is the Stopwatch example from the &lt;a href=&#34;https://textual.textualize.io/tutorial/&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/554369/197360718-0c834ef5-6285-4d37-85cf-23eed4aa56c5.mov&#34;&gt;https://user-images.githubusercontent.com/554369/197360718-0c834ef5-6285-4d37-85cf-23eed4aa56c5.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Reference commands&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;textual&lt;/code&gt; command has a few sub-commands to preview Textual styles.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; ðŸŽ¬ Easing reference &lt;/summary&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;This is the &lt;em&gt;easing&lt;/em&gt; reference which demonstrates the easing parameter on animation, with both movement and opacity. You can run it with the following command:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;textual easing&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/554369/196157100-352852a6-2b09-4dc8-a888-55b53570aff9.mov&#34;&gt;https://user-images.githubusercontent.com/554369/196157100-352852a6-2b09-4dc8-a888-55b53570aff9.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; ðŸŽ¬ Borders reference &lt;/summary&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;This is the borders reference which demonstrates some of the borders styles in Textual. You can run it with the following command:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;textual borders&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/554369/196158235-4b45fb78-053d-4fd5-b285-e09b4f1c67a8.mov&#34;&gt;https://user-images.githubusercontent.com/554369/196158235-4b45fb78-053d-4fd5-b285-e09b4f1c67a8.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; ðŸŽ¬ Colors reference &lt;/summary&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;This is a reference for Textual&#39;s color design system.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;textual colors&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/554369/197357417-2d407aac-8969-44d3-8250-eea45df79d57.mov&#34;&gt;https://user-images.githubusercontent.com/554369/197357417-2d407aac-8969-44d3-8250-eea45df79d57.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>iced-rs/iced</title>
    <updated>2022-11-01T01:51:46Z</updated>
    <id>tag:github.com,2022-11-01:/iced-rs/iced</id>
    <link href="https://github.com/iced-rs/iced" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cross-platform GUI library for Rust, inspired by Elm&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/docs/logo.svg?sanitize=true&#34; width=&#34;140px&#34;&gt; &#xA; &lt;h1&gt;Iced&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://docs.rs/iced/&#34;&gt;&lt;img src=&#34;https://docs.rs/iced/badge.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/iced&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/iced.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iced-rs/iced/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/l/iced.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/iced&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/d/iced.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iced-rs/iced/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/iced-rs/iced/Test?event=push&amp;amp;label=test&#34; alt=&#34;Test Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/3xZJ65GAhd&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/628993209984614400?label=&amp;amp;labelColor=6A7EC2&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&#34; alt=&#34;Discord Server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;A cross-platform GUI library for Rust focused on simplicity and type-safety. Inspired by &lt;a href=&#34;https://elm-lang.org/&#34;&gt;Elm&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;a href=&#34;https://gfycat.com/littlesanehalicore&#34;&gt; &lt;img src=&#34;https://thumbs.gfycat.com/LittleSaneHalicore-small.gif&#34; height=&#34;350px&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://gfycat.com/politeadorableiberianmole&#34;&gt; &lt;img src=&#34;https://thumbs.gfycat.com/PoliteAdorableIberianmole-small.gif&#34; height=&#34;350px&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple, easy-to-use, batteries-included API&lt;/li&gt; &#xA; &lt;li&gt;Type-safe, reactive programming model&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/docs/images/todos_desktop.jpg&#34;&gt;Cross-platform support&lt;/a&gt; (Windows, macOS, Linux, and &lt;a href=&#34;https://github.com/iced-rs/iced_web&#34;&gt;the Web&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Responsive layout&lt;/li&gt; &#xA; &lt;li&gt;Built-in widgets (including &lt;a href=&#34;https://gfycat.com/alertcalmcrow-rust-gui&#34;&gt;text inputs&lt;/a&gt;, &lt;a href=&#34;https://gfycat.com/perkybaggybaboon-rust-gui&#34;&gt;scrollables&lt;/a&gt;, and more!)&lt;/li&gt; &#xA; &lt;li&gt;Custom widget support (create your own!)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gfycat.com/incredibledarlingbee&#34;&gt;Debug overlay with performance metrics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;First-class support for async actions (use futures!)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/ECOSYSTEM.md&#34;&gt;Modular ecosystem&lt;/a&gt; split into reusable parts: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/native/&#34;&gt;renderer-agnostic native runtime&lt;/a&gt; enabling integration with existing systems&lt;/li&gt; &#xA;   &lt;li&gt;Two &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/ECOSYSTEM.md#Renderers&#34;&gt;built-in renderers&lt;/a&gt; leveraging &lt;a href=&#34;https://github.com/gfx-rs/wgpu&#34;&gt;&lt;code&gt;wgpu&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/grovesNL/glow&#34;&gt;&lt;code&gt;glow&lt;/code&gt;&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/wgpu/&#34;&gt;&lt;code&gt;iced_wgpu&lt;/code&gt;&lt;/a&gt; supporting Vulkan, Metal and DX12&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/glow/&#34;&gt;&lt;code&gt;iced_glow&lt;/code&gt;&lt;/a&gt; supporting OpenGL 2.1+ and OpenGL ES 2.0+&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/winit/&#34;&gt;windowing shell&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;A &lt;a href=&#34;https://github.com/iced-rs/iced_web&#34;&gt;web runtime&lt;/a&gt; leveraging the DOM&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Iced is currently experimental software.&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/ROADMAP.md&#34;&gt;Take a look at the roadmap&lt;/a&gt;, &lt;a href=&#34;https://github.com/iced-rs/iced/issues&#34;&gt;check out the issues&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/#contributing--feedback&#34;&gt;feel free to contribute!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;iced&lt;/code&gt; as a dependency in your &lt;code&gt;Cargo.toml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;iced = &#34;0.4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your project is using a Rust edition older than 2021, then you will need to set &lt;code&gt;resolver = &#34;2&#34;&lt;/code&gt; in the &lt;code&gt;[package]&lt;/code&gt; section as well.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Iced moves fast and the &lt;code&gt;master&lt;/code&gt; branch can contain breaking changes!&lt;/strong&gt; If you want to learn about a specific release, check out &lt;a href=&#34;https://github.com/iced-rs/iced/releases&#34;&gt;the release list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Inspired by &lt;a href=&#34;https://guide.elm-lang.org/architecture/&#34;&gt;The Elm Architecture&lt;/a&gt;, Iced expects you to split user interfaces into four different concepts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;State&lt;/strong&gt; â€” the state of your application&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Messages&lt;/strong&gt; â€” user interactions or meaningful events that you care about&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View logic&lt;/strong&gt; â€” a way to display your &lt;strong&gt;state&lt;/strong&gt; as widgets that may produce &lt;strong&gt;messages&lt;/strong&gt; on user interaction&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Update logic&lt;/strong&gt; â€” a way to react to &lt;strong&gt;messages&lt;/strong&gt; and update your &lt;strong&gt;state&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We can build something to see how this works! Let&#39;s say we want a simple counter that can be incremented and decremented using two buttons.&lt;/p&gt; &#xA;&lt;p&gt;We start by modelling the &lt;strong&gt;state&lt;/strong&gt; of our application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;struct Counter {&#xA;    // The counter value&#xA;    value: i32,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, we need to define the possible user interactions of our counter: the button presses. These interactions are our &lt;strong&gt;messages&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;#[derive(Debug, Clone, Copy)]&#xA;pub enum Message {&#xA;    IncrementPressed,&#xA;    DecrementPressed,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, let&#39;s show the actual counter by putting it all together in our &lt;strong&gt;view logic&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use iced::widget::{button, column, text, Column};&#xA;&#xA;impl Counter {&#xA;    pub fn view(&amp;amp;self) -&amp;gt; Column&amp;lt;Message&amp;gt; {&#xA;        // We use a column: a simple vertical layout&#xA;        column![&#xA;            // The increment button. We tell it to produce an&#xA;            // `IncrementPressed` message when pressed&#xA;            button(&#34;+&#34;).on_press(Message::IncrementPressed),&#xA;&#xA;            // We show the value of the counter here&#xA;            text(self.value).size(50),&#xA;&#xA;            // The decrement button. We tell it to produce a&#xA;            // `DecrementPressed` message when pressed&#xA;            button(&#34;-&#34;).on_press(Message::DecrementPressed),&#xA;        ]&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, we need to be able to react to any produced &lt;strong&gt;messages&lt;/strong&gt; and change our &lt;strong&gt;state&lt;/strong&gt; accordingly in our &lt;strong&gt;update logic&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;impl Counter {&#xA;    // ...&#xA;&#xA;    pub fn update(&amp;amp;mut self, message: Message) {&#xA;        match message {&#xA;            Message::IncrementPressed =&amp;gt; {&#xA;                self.value += 1;&#xA;            }&#xA;            Message::DecrementPressed =&amp;gt; {&#xA;                self.value -= 1;&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And that&#39;s everything! We just wrote a whole user interface. Iced is now able to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Take the result of our &lt;strong&gt;view logic&lt;/strong&gt; and layout its widgets.&lt;/li&gt; &#xA; &lt;li&gt;Process events from our system and produce &lt;strong&gt;messages&lt;/strong&gt; for our &lt;strong&gt;update logic&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Draw the resulting user interface.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Browse the &lt;a href=&#34;https://docs.rs/iced/&#34;&gt;documentation&lt;/a&gt; and the &lt;a href=&#34;https://github.com/iced-rs/iced/tree/master/examples&#34;&gt;examples&lt;/a&gt; to learn more!&lt;/p&gt; &#xA;&lt;h2&gt;Implementation details&lt;/h2&gt; &#xA;&lt;p&gt;Iced was originally born as an attempt at bringing the simplicity of &lt;a href=&#34;https://elm-lang.org/&#34;&gt;Elm&lt;/a&gt; and &lt;a href=&#34;https://guide.elm-lang.org/architecture/&#34;&gt;The Elm Architecture&lt;/a&gt; into &lt;a href=&#34;https://github.com/hecrj/coffee&#34;&gt;Coffee&lt;/a&gt;, a 2D game engine I am working on.&lt;/p&gt; &#xA;&lt;p&gt;The core of the library was implemented during May 2019 in &lt;a href=&#34;https://github.com/hecrj/coffee/pull/35&#34;&gt;this pull request&lt;/a&gt;. &lt;a href=&#34;https://github.com/iced-rs/iced/tree/0.1.0-alpha&#34;&gt;The first alpha version&lt;/a&gt; was eventually released as &lt;a href=&#34;https://www.reddit.com/r/rust/comments/czzjnv/iced_a_rendereragnostic_gui_library_focused_on/&#34;&gt;a renderer-agnostic GUI library&lt;/a&gt;. The library did not provide a renderer and implemented the current &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/examples/README.md#tour&#34;&gt;tour example&lt;/a&gt; on top of &lt;a href=&#34;https://github.com/ggez/ggez&#34;&gt;&lt;code&gt;ggez&lt;/code&gt;&lt;/a&gt;, a game library.&lt;/p&gt; &#xA;&lt;p&gt;Since then, the focus has shifted towards providing a batteries-included, end-user-oriented GUI library, while keeping &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/ECOSYSTEM.md&#34;&gt;the ecosystem&lt;/a&gt; modular:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/ECOSYSTEM.md&#34;&gt; &lt;img alt=&#34;The Iced Ecosystem&#34; src=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/docs/graphs/ecosystem.png&#34; width=&#34;80%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;GraphicsAdapterNotFound&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This occurs when the selected &lt;a href=&#34;https://github.com/iced-rs/iced/raw/master/ECOSYSTEM.md#Renderers&#34;&gt;built-in renderer&lt;/a&gt; is not able to create a context.&lt;/p&gt; &#xA;&lt;p&gt;Often this will occur while using &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/wgpu/&#34;&gt;&lt;code&gt;iced_wgpu&lt;/code&gt;&lt;/a&gt; as the renderer without supported hardware (needs Vulkan, Metal or DX12). In this case, you could try using the &lt;a href=&#34;https://raw.githubusercontent.com/iced-rs/iced/master/glow/&#34;&gt;&lt;code&gt;iced_glow&lt;/code&gt;&lt;/a&gt; renderer:&lt;/p&gt; &#xA;&lt;p&gt;First, check if it works with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cargo run --features iced/glow --package game_of_life&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then use it in your project with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;iced = { version = &#34;0.4&#34;, default-features = false, features = [&#34;glow&#34;] }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Chances are you have hardware that supports at least OpenGL 2.1 or OpenGL ES 2.0, but if you don&#39;t, right now there&#39;s no software fallback, so it means your hardware doesn&#39;t support Iced.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing / Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are greatly appreciated! If you want to contribute, please read our &lt;a href=&#34;https://github.com/iced-rs/iced/raw/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Feedback is also welcome! You can open an issue or, if you want to talk, come chat to our &lt;a href=&#34;https://discord.gg/3xZJ65GAhd&#34;&gt;Discord server&lt;/a&gt;. Moreover, you can find me (and a bunch of awesome folks) over the &lt;code&gt;#games-and-graphics&lt;/code&gt; and &lt;code&gt;#gui-and-ui&lt;/code&gt; channels in the &lt;a href=&#34;https://bit.ly/rust-community&#34;&gt;Rust Community Discord&lt;/a&gt;. I go by &lt;code&gt;lone_scientist#9554&lt;/code&gt; there.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;The development of Iced is sponsored by the &lt;a href=&#34;https://cryptowat.ch/charts&#34;&gt;Cryptowatch&lt;/a&gt; team at &lt;a href=&#34;https://kraken.com/&#34;&gt;Kraken.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>XTLS/Xray-core</title>
    <updated>2022-11-01T01:51:46Z</updated>
    <id>tag:github.com,2022-11-01:/XTLS/Xray-core</id>
    <link href="https://github.com/XTLS/Xray-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Xray, Penetrates Everything. Also the best v2ray-core, with XTLS support. Fully compatible configuration.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project X&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/XTLS&#34;&gt;Project X&lt;/a&gt; originates from XTLS protocol, provides a set of network tools such as &lt;a href=&#34;https://github.com/XTLS/Xray-core&#34;&gt;Xray-core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/XTLS/Xray-core/raw/main/LICENSE&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux Script &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/XTLS/Xray-install&#34;&gt;Xray-install&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kirin10000/Xray-script&#34;&gt;Xray-script&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Docker &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/teddysun/xray&#34;&gt;teddysun/xray&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;One Click &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/proxysu/ProxySU&#34;&gt;ProxySU&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mack-a/v2ray-agent&#34;&gt;v2ray-agent&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jiuqi9997/Xray-yes&#34;&gt;Xray-yes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/wulabing/Xray_onekey&#34;&gt;Xray_onekey&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Magisk &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/CerteKim/Xray4Magisk&#34;&gt;Xray4Magisk&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/E7KMbb/Xray_For_Magisk&#34;&gt;Xray_For_Magisk&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Homebrew &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;brew install xray&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/N4FA/homebrew-xray&#34;&gt;(Tap) Repository 0&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/xiruizhao/homebrew-xray&#34;&gt;(Tap) Repository 1&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/XTLS/Xray-core/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code Of Conduct&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/XTLS/Xray-examples&#34;&gt;Xray-examples&lt;/a&gt; / &lt;a href=&#34;https://github.com/XTLS/Xray-examples/tree/main/VLESS-TCP-XTLS-WHATEVER&#34;&gt;VLESS-TCP-XTLS-WHATEVER&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GUI Clients&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenWrt &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/xiaorouji/openwrt-passwall&#34;&gt;PassWall&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jerrykuku/luci-app-vssr&#34;&gt;Hello World&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/fw876/helloworld&#34;&gt;ShadowSocksR Plus+&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/yichya/luci-app-xray&#34;&gt;luci-app-xray&lt;/a&gt; (&lt;a href=&#34;https://github.com/yichya/openwrt-xray&#34;&gt;openwrt-xray&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Windows &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/2dust/v2rayN&#34;&gt;v2rayN&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Qv2ray/Qv2ray&#34;&gt;Qv2ray&lt;/a&gt; (This project had been archived and currently inactive)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/NetchX/Netch&#34;&gt;Netch (NetFilter &amp;amp; TUN/TAP)&lt;/a&gt; (This project had been archived and currently inactive)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/2dust/v2rayNG&#34;&gt;v2rayNG&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/rurirei/Kitsunebi/tree/release_xtls&#34;&gt;Kitsunebi&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;iOS &amp;amp; macOS (with M1 chip) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/app/shadowrocket/id932747118&#34;&gt;Shadowrocket&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/app/stash/id1596063349&#34;&gt;Stash&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;macOS (Intel chip &amp;amp; M1 chip) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Qv2ray/Qv2ray&#34;&gt;Qv2ray&lt;/a&gt; (This project had been archived and currently inactive)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/tzmax/V2RayXS&#34;&gt;V2RayXS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This repo relies on the following third-party projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Special thanks: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/v2fly/v2ray-core&#34;&gt;v2fly/v2ray-core&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;In production: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ghodss/yaml&#34;&gt;ghodss/yaml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gorilla/websocket&#34;&gt;gorilla/websocket&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lucas-clemente/quic-go&#34;&gt;lucas-clemente/quic-go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pelletier/go-toml&#34;&gt;pelletier/go-toml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pires/go-proxyproto&#34;&gt;pires/go-proxyproto&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/refraction-networking/utls&#34;&gt;refraction-networking/utls&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/seiflotfy/cuckoofilter&#34;&gt;seiflotfy/cuckoofilter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/google/starlark-go&#34;&gt;google/starlark-go&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For testing only: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/miekg/dns&#34;&gt;miekg/dns&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/stretchr/testify&#34;&gt;stretchr/testify&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/h12w/socks&#34;&gt;h12w/socks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go build -o xray.exe -trimpath -ldflags &#34;-s -w -buildid=&#34; ./main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux / macOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go build -o xray -trimpath -ldflags &#34;-s -w -buildid=&#34; ./main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Telegram&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/projectXray&#34;&gt;Project X&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/projectXtls&#34;&gt;Project X Channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/XTLS/Xray-core&#34;&gt;&lt;img src=&#34;https://starchart.cc/XTLS/Xray-core.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>