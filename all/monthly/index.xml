<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-01T01:52:22Z</updated>
  <subtitle>Monthly Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>infiniflow/ragflow</title>
    <updated>2025-03-01T01:52:22Z</updated>
    <id>tag:github.com,2025-03-01:/infiniflow/ragflow</id>
    <link href="https://github.com/infiniflow/ragflow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RAGFlow is an open-source RAG (Retrieval-Augmented Generation) engine based on deep document understanding.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://demo.ragflow.io/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/web/src/assets/logo-with-text.png&#34; width=&#34;520&#34; alt=&#34;ragflow logo&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README_zh.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README_tzh.md&#34;&gt;繁体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README_ja.md&#34;&gt;日本語&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README_ko.md&#34;&gt;한국어&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README_id.md&#34;&gt;Bahasa Indonesia&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README_pt_br.md&#34;&gt;Português (Brasil)&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://x.com/intent/follow?screen_name=infiniflowai&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/infiniflow?logo=X&amp;amp;color=%20%23f5f5f5&#34; alt=&#34;follow on X(Twitter)&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://demo.ragflow.io&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Static Badge&#34; src=&#34;https://img.shields.io/badge/Online-Demo-4e6b99&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/infiniflow/ragflow&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/docker_pull-ragflow:v0.16.0-brightgreen&#34; alt=&#34;docker pull infiniflow/ragflow:v0.16.0&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/infiniflow/ragflow/releases/latest&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/infiniflow/ragflow?color=blue&amp;amp;label=Latest%20Release&#34; alt=&#34;Latest Release&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/infiniflow/ragflow/raw/main/LICENSE&#34;&gt; &lt;img height=&#34;21&#34; src=&#34;https://img.shields.io/badge/License-Apache--2.0-ffffff?labelColor=d4eaf7&amp;amp;color=2e6cc4&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;https://ragflow.io/docs/dev/&#34;&gt;Document&lt;/a&gt; | &lt;a href=&#34;https://github.com/infiniflow/ragflow/issues/4214&#34;&gt;Roadmap&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/infiniflowai&#34;&gt;Twitter&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/4XxujFgUN7&#34;&gt;Discord&lt;/a&gt; | &lt;a href=&#34;https://demo.ragflow.io&#34;&gt;Demo&lt;/a&gt; &lt;/h4&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;b&gt;📕 Table of Contents&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;💡 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-what-is-ragflow&#34;&gt;What is RAGFlow?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🎮 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;📌 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-latest-updates&#34;&gt;Latest Updates&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🌟 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-key-features&#34;&gt;Key Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🔎 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-system-architecture&#34;&gt;System Architecture&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🎬 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-get-started&#34;&gt;Get Started&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🔧 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-configurations&#34;&gt;Configurations&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🔧 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-build-a-docker-image-without-embedding-models&#34;&gt;Build a docker image without embedding models&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🔧 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-build-a-docker-image-including-embedding-models&#34;&gt;Build a docker image including embedding models&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🔨 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-launch-service-from-source-for-development&#34;&gt;Launch service from source for development&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;📚 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;📜 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🏄 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🙌 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;💡 What is RAGFlow?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ragflow.io/&#34;&gt;RAGFlow&lt;/a&gt; is an open-source RAG (Retrieval-Augmented Generation) engine based on deep document understanding. It offers a streamlined RAG workflow for businesses of any scale, combining LLM (Large Language Models) to provide truthful question-answering capabilities, backed by well-founded citations from various complex formatted data.&lt;/p&gt; &#xA;&lt;h2&gt;🎮 Demo&lt;/h2&gt; &#xA;&lt;p&gt;Try our demo at &lt;a href=&#34;https://demo.ragflow.io&#34;&gt;https://demo.ragflow.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;margin-top:20px;margin-bottom:20px;&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/infiniflow/ragflow/assets/7248/2f6baa3e-1092-4f11-866d-36f6a9d075e5&#34; width=&#34;1200&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/504bbbf1-c9f7-4d83-8cc5-e9cb63c26db6&#34; width=&#34;1200&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🔥 Latest Updates&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2025-02-05 Updates the model list of &#39;SILICONFLOW&#39; and adds support for Deepseek-R1/DeepSeek-V3.&lt;/li&gt; &#xA; &lt;li&gt;2025-01-26 Optimizes knowledge graph extraction and application, offering various configuration options.&lt;/li&gt; &#xA; &lt;li&gt;2024-12-18 Upgrades Document Layout Analysis model in DeepDoc.&lt;/li&gt; &#xA; &lt;li&gt;2024-12-04 Adds support for pagerank score in knowledge base.&lt;/li&gt; &#xA; &lt;li&gt;2024-11-22 Adds more variables to Agent.&lt;/li&gt; &#xA; &lt;li&gt;2024-11-01 Adds keyword extraction and related question generation to the parsed chunks to improve the accuracy of retrieval.&lt;/li&gt; &#xA; &lt;li&gt;2024-08-22 Support text to SQL statements through RAG.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎉 Stay Tuned&lt;/h2&gt; &#xA;&lt;p&gt;⭐️ Star our repository to stay up-to-date with exciting new features and improvements! Get instant notifications for new releases! 🌟&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;margin-top:20px;margin-bottom:20px;&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/18c9707e-b8aa-4caf-a154-037089c105ba&#34; width=&#34;1200&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🌟 Key Features&lt;/h2&gt; &#xA;&lt;h3&gt;🍭 &lt;strong&gt;&#34;Quality in, quality out&#34;&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/deepdoc/README.md&#34;&gt;Deep document understanding&lt;/a&gt;-based knowledge extraction from unstructured data with complicated formats.&lt;/li&gt; &#xA; &lt;li&gt;Finds &#34;needle in a data haystack&#34; of literally unlimited tokens.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🍱 &lt;strong&gt;Template-based chunking&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intelligent and explainable.&lt;/li&gt; &#xA; &lt;li&gt;Plenty of template options to choose from.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🌱 &lt;strong&gt;Grounded citations with reduced hallucinations&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visualization of text chunking to allow human intervention.&lt;/li&gt; &#xA; &lt;li&gt;Quick view of the key references and traceable citations to support grounded answers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🍔 &lt;strong&gt;Compatibility with heterogeneous data sources&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports Word, slides, excel, txt, images, scanned copies, structured data, web pages, and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🛀 &lt;strong&gt;Automated and effortless RAG workflow&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Streamlined RAG orchestration catered to both personal and large businesses.&lt;/li&gt; &#xA; &lt;li&gt;Configurable LLMs as well as embedding models.&lt;/li&gt; &#xA; &lt;li&gt;Multiple recall paired with fused re-ranking.&lt;/li&gt; &#xA; &lt;li&gt;Intuitive APIs for seamless integration with business.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔎 System Architecture&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;margin-top:20px;margin-bottom:20px;&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/infiniflow/ragflow/assets/12318111/d6ac5664-c237-4200-a7c2-a4a00691b485&#34; width=&#34;1000&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🎬 Get Started&lt;/h2&gt; &#xA;&lt;h3&gt;📝 Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPU &amp;gt;= 4 cores&lt;/li&gt; &#xA; &lt;li&gt;RAM &amp;gt;= 16 GB&lt;/li&gt; &#xA; &lt;li&gt;Disk &amp;gt;= 50 GB&lt;/li&gt; &#xA; &lt;li&gt;Docker &amp;gt;= 24.0.0 &amp;amp; Docker Compose &amp;gt;= v2.26.1 &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;If you have not installed Docker on your local machine (Windows, Mac, or Linux), see &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Install Docker Engine&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🚀 Start up the server&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure &lt;code&gt;vm.max_map_count&lt;/code&gt; &amp;gt;= 262144:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;To check the value of &lt;code&gt;vm.max_map_count&lt;/code&gt;:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sysctl vm.max_map_count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;p&gt;Reset &lt;code&gt;vm.max_map_count&lt;/code&gt; to a value at least 262144 if it is not.&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# In this case, we set it to 262144:&#xA;$ sudo sysctl -w vm.max_map_count=262144&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;p&gt;This change will be reset after a system reboot. To ensure your change remains permanent, add or update the &lt;code&gt;vm.max_map_count&lt;/code&gt; value in &lt;strong&gt;/etc/sysctl.conf&lt;/strong&gt; accordingly:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vm.max_map_count=262144&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repo:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/infiniflow/ragflow.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start up the server using the pre-built Docker images:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;The command below downloads the &lt;code&gt;v0.16.0-slim&lt;/code&gt; edition of the RAGFlow Docker image. Refer to the following table for descriptions of different RAGFlow editions. To download a RAGFlow edition different from &lt;code&gt;v0.16.0-slim&lt;/code&gt;, update the &lt;code&gt;RAGFLOW_IMAGE&lt;/code&gt; variable accordingly in &lt;strong&gt;docker/.env&lt;/strong&gt; before using &lt;code&gt;docker compose&lt;/code&gt; to start the server. For example: set &lt;code&gt;RAGFLOW_IMAGE=infiniflow/ragflow:v0.16.0&lt;/code&gt; for the full edition &lt;code&gt;v0.16.0&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd ragflow/docker&#xA;$ docker compose -f docker-compose.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;RAGFlow image tag&lt;/th&gt; &#xA;     &lt;th&gt;Image size (GB)&lt;/th&gt; &#xA;     &lt;th&gt;Has embedding models?&lt;/th&gt; &#xA;     &lt;th&gt;Stable?&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;v0.16.0&lt;/td&gt; &#xA;     &lt;td&gt;≈9&lt;/td&gt; &#xA;     &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Stable release&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;v0.16.0-slim&lt;/td&gt; &#xA;     &lt;td&gt;≈2&lt;/td&gt; &#xA;     &lt;td&gt;❌&lt;/td&gt; &#xA;     &lt;td&gt;Stable release&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;nightly&lt;/td&gt; &#xA;     &lt;td&gt;≈9&lt;/td&gt; &#xA;     &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;em&gt;Unstable&lt;/em&gt; nightly build&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;nightly-slim&lt;/td&gt; &#xA;     &lt;td&gt;≈2&lt;/td&gt; &#xA;     &lt;td&gt;❌&lt;/td&gt; &#xA;     &lt;td&gt;&lt;em&gt;Unstable&lt;/em&gt; nightly build&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check the server status after having the server up and running:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker logs -f ragflow-server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;The following output confirms a successful launch of the system:&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;      ____   ___    ______ ______ __&#xA;     / __ \ /   |  / ____// ____// /____  _      __&#xA;    / /_/ // /| | / / __ / /_   / // __ \| | /| / /&#xA;   / _, _// ___ |/ /_/ // __/  / // /_/ /| |/ |/ /&#xA;  /_/ |_|/_/  |_|\____//_/    /_/ \____/ |__/|__/&#xA;&#xA; * Running on all addresses (0.0.0.0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;If you skip this confirmation step and directly log in to RAGFlow, your browser may prompt a &lt;code&gt;network anormal&lt;/code&gt; error because, at that moment, your RAGFlow may not be fully initialized.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In your web browser, enter the IP address of your server and log in to RAGFlow.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;With the default settings, you only need to enter &lt;code&gt;http://IP_OF_YOUR_MACHINE&lt;/code&gt; (&lt;strong&gt;sans&lt;/strong&gt; port number) as the default HTTP serving port &lt;code&gt;80&lt;/code&gt; can be omitted when using the default configurations.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template&#34;&gt;service_conf.yaml.template&lt;/a&gt;, select the desired LLM factory in &lt;code&gt;user_default_llm&lt;/code&gt; and update the &lt;code&gt;API_KEY&lt;/code&gt; field with the corresponding API key.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;See &lt;a href=&#34;https://ragflow.io/docs/dev/llm_api_key_setup&#34;&gt;llm_api_key_setup&lt;/a&gt; for more information.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;The show is on!&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🔧 Configurations&lt;/h2&gt; &#xA;&lt;p&gt;When it comes to system configurations, you will need to manage the following files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/.env&#34;&gt;.env&lt;/a&gt;: Keeps the fundamental setups for the system, such as &lt;code&gt;SVR_HTTP_PORT&lt;/code&gt;, &lt;code&gt;MYSQL_PASSWORD&lt;/code&gt;, and &lt;code&gt;MINIO_PASSWORD&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template&#34;&gt;service_conf.yaml.template&lt;/a&gt;: Configures the back-end services. The environment variables in this file will be automatically populated when the Docker container starts. Any environment variables set within the Docker container will be available for use, allowing you to customize service behavior based on the deployment environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt;: The system relies on &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; to start up.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/README.md&#34;&gt;./docker/README&lt;/a&gt; file provides a detailed description of the environment settings and service configurations which can be used as &lt;code&gt;${ENV_VARS}&lt;/code&gt; in the &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template&#34;&gt;service_conf.yaml.template&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To update the default HTTP serving port (80), go to &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; and change &lt;code&gt;80:80&lt;/code&gt; to &lt;code&gt;&amp;lt;YOUR_SERVING_PORT&amp;gt;:80&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Updates to the above configurations require a reboot of all containers to take effect:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker compose -f docker-compose.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Switch doc engine from Elasticsearch to Infinity&lt;/h3&gt; &#xA;&lt;p&gt;RAGFlow uses Elasticsearch by default for storing full text and vectors. To switch to &lt;a href=&#34;https://github.com/infiniflow/infinity/&#34;&gt;Infinity&lt;/a&gt;, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Stop all running containers:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker compose -f docker/docker-compose.yml down -v&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] &lt;code&gt;-v&lt;/code&gt; will delete the docker container volumes, and the existing data will be cleared.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Set &lt;code&gt;DOC_ENGINE&lt;/code&gt; in &lt;strong&gt;docker/.env&lt;/strong&gt; to &lt;code&gt;infinity&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the containers:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker compose -f docker-compose.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Switching to Infinity on a Linux/arm64 machine is not yet officially supported.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🔧 Build a Docker image without embedding models&lt;/h2&gt; &#xA;&lt;p&gt;This image is approximately 2 GB in size and relies on external LLM and embedding services.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/infiniflow/ragflow.git&#xA;cd ragflow/&#xA;docker build --build-arg LIGHTEN=1 -f Dockerfile -t infiniflow/ragflow:nightly-slim .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔧 Build a Docker image including embedding models&lt;/h2&gt; &#xA;&lt;p&gt;This image is approximately 9 GB in size. As it includes embedding models, it relies on external LLM services only.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/infiniflow/ragflow.git&#xA;cd ragflow/&#xA;docker build -f Dockerfile -t infiniflow/ragflow:nightly .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔨 Launch service from source for development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install uv, or skip this step if it is already installed:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pipx install uv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the source code and install Python dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/infiniflow/ragflow.git&#xA;cd ragflow/&#xA;uv sync --python 3.10 --all-extras # install RAGFlow dependent python modules&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Launch the dependent services (MinIO, Elasticsearch, Redis, and MySQL) using Docker Compose:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose -f docker/docker-compose-base.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Add the following line to &lt;code&gt;/etc/hosts&lt;/code&gt; to resolve all hosts specified in &lt;strong&gt;docker/.env&lt;/strong&gt; to &lt;code&gt;127.0.0.1&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;127.0.0.1       es01 infinity mysql minio redis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you cannot access HuggingFace, set the &lt;code&gt;HF_ENDPOINT&lt;/code&gt; environment variable to use a mirror site:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export HF_ENDPOINT=https://hf-mirror.com&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Launch backend service:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source .venv/bin/activate&#xA;export PYTHONPATH=$(pwd)&#xA;bash docker/launch_backend_service.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install frontend dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd web&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Launch frontend service:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;The following output confirms a successful launch of the system:&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/0daf462c-a24d-4496-a66f-92533534e187&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;📚 Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ragflow.io/docs/dev/&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ragflow.io/docs/dev/category/guides&#34;&gt;User guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ragflow.io/docs/dev/category/references&#34;&gt;References&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ragflow.io/docs/dev/faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📜 Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/infiniflow/ragflow/issues/4214&#34;&gt;RAGFlow Roadmap 2025&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🏄 Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/4XxujFgUN7&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/infiniflowai&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orgs/infiniflow/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🙌 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;RAGFlow flourishes via open-source collaboration. In this spirit, we embrace diverse contributions from the community. If you would like to be a part, review our &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lobehub/lobe-chat</title>
    <updated>2025-03-01T01:52:22Z</updated>
    <id>tag:github.com,2025-03-01:/lobehub/lobe-chat</id>
    <link href="https://github.com/lobehub/lobe-chat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤯 Lobe Chat - an open-source, modern-design AI chat framework. Supports Multi AI Providers( OpenAI / Claude 3 / Gemini / Ollama / DeepSeek / Qwen), Knowledge Base (file upload / knowledge management / RAG ), Multi-Modals (Plugins/Artifacts) and Thinking. One-click FREE deployment of your private ChatGPT/ Claude / DeepSeek application.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;a name=&#34;readme-top&#34;&gt;&lt;/a&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://chat-preview.lobehub.com&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/6f293c7f-47b4-47eb-9202-fe68a942d35b&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h1&gt;Lobe Chat&lt;/h1&gt; &#xA; &lt;p&gt;An open-source, modern-design ChatGPT/LLMs UI/Framework.&lt;br&gt; Supports speech-synthesis, multi-modal, and extensible (&lt;a href=&#34;https://lobehub.com/blog/openai-function-call&#34;&gt;function call&lt;/a&gt;) plugin system.&lt;br&gt; One-click &lt;strong&gt;FREE&lt;/strong&gt; deployment of your private OpenAI ChatGPT/Claude/Gemini/Groq/Ollama chat application.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/README.zh-CN.md&#34;&gt;简体中文&lt;/a&gt; · &lt;a href=&#34;https://lobehub.com&#34;&gt;Official Site&lt;/a&gt; · &lt;a href=&#34;https://lobehub.com/changelog&#34;&gt;Changelog&lt;/a&gt; · &lt;a href=&#34;https://lobehub.com/docs/usage/start&#34;&gt;Documents&lt;/a&gt; · &lt;a href=&#34;https://lobehub.com/blog&#34;&gt;Blog&lt;/a&gt; · &lt;a href=&#34;https://github.com/lobehub/lobe-chat/issues&#34;&gt;Feedback&lt;/a&gt;&lt;/p&gt; &#xA; &lt;!-- SHIELD GROUP --&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/lobehub/lobe-chat/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/lobehub/lobe-chat?color=369eff&amp;amp;labelColor=black&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/lobehub/lobe-chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/lobehub/lobe-chat?color=369eff&amp;amp;label=docker&amp;amp;labelColor=black&amp;amp;logo=docker&amp;amp;logoColor=white&amp;amp;style=flat-square&amp;amp;sort=semver&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://chat-preview.lobehub.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/vercel-online-55b467?labelColor=black&amp;amp;logo=vercel&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/AYFPHvv2jT&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1127171173982154893?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://codecov.io/gh/lobehub/lobe-chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/lobehub/lobe-chat?labelColor=black&amp;amp;style=flat-square&amp;amp;logo=codecov&amp;amp;logoColor=white&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/actions/workflows/lobehub/lobe-chat/test.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/lobehub/lobe-chat/test.yml?label=test&amp;amp;labelColor=black&amp;amp;logo=githubactions&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/actions/workflows/lobehub/lobe-chat/release.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/lobehub/lobe-chat/release.yml?label=release&amp;amp;labelColor=black&amp;amp;logo=githubactions&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lobehub/lobe-chat/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/lobehub/lobe-chat?labelColor=black&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/lobehub/lobe-chat/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/lobehub/lobe-chat?color=c4f042&amp;amp;labelColor=black&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lobehub/lobe-chat/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/lobehub/lobe-chat?color=8ae8ff&amp;amp;labelColor=black&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lobehub/lobe-chat/network/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/lobehub/lobe-chat?color=ffcb47&amp;amp;labelColor=black&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lobehub/lobe-chat/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/lobehub/lobe-chat?color=ff80eb&amp;amp;labelColor=black&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lobehub/lobe-chat/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-apache%202.0-white?labelColor=black&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://opencollective.com/lobehub&#34; title=&#34;Become ❤️ LobeHub Sponsor&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Sponsor%20LobeHub-f04f88?logo=opencollective&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Share LobeChat Repository&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://x.com/intent/tweet?hashtags=chatbot%2CchatGPT%2CopenAI&amp;amp;text=Check%20this%20GitHub%20repository%20out%20%F0%9F%A4%AF%20LobeChat%20-%20An%20open-source%2C%20extensible%20%28Function%20Calling%29%2C%20high-performance%20chatbot%20framework.%20It%20supports%20one-click%20free%20deployment%20of%20your%20private%20ChatGPT%2FLLM%20web%20application.&amp;amp;url=https%3A%2F%2Fgithub.com%2Flobehub%2Flobe-chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-share%20on%20x-black?labelColor=black&amp;amp;logo=x&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/share/url%22?text=Check%20this%20GitHub%20repository%20out%20%F0%9F%A4%AF%20LobeChat%20-%20An%20open-source%2C%20extensible%20%28Function%20Calling%29%2C%20high-performance%20chatbot%20framework.%20It%20supports%20one-click%20free%20deployment%20of%20your%20private%20ChatGPT%2FLLM%20web%20application.%20%23chatbot%20%23chatGPT%20%23openAI&amp;amp;url=https%3A%2F%2Fgithub.com%2Flobehub%2Flobe-chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-share%20on%20telegram-black?labelColor=black&amp;amp;logo=telegram&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://api.whatsapp.com/send?text=Check%20this%20GitHub%20repository%20out%20%F0%9F%A4%AF%20LobeChat%20-%20An%20open-source%2C%20extensible%20%28Function%20Calling%29%2C%20high-performance%20chatbot%20framework.%20It%20supports%20one-click%20free%20deployment%20of%20your%20private%20ChatGPT%2FLLM%20web%20application.%20https%3A%2F%2Fgithub.com%2Flobehub%2Flobe-chat%20%23chatbot%20%23chatGPT%20%23openAI&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-share%20on%20whatsapp-black?labelColor=black&amp;amp;logo=whatsapp&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/submit?title=Check%20this%20GitHub%20repository%20out%20%F0%9F%A4%AF%20LobeChat%20-%20An%20open-source%2C%20extensible%20%28Function%20Calling%29%2C%20high-performance%20chatbot%20framework.%20It%20supports%20one-click%20free%20deployment%20of%20your%20private%20ChatGPT%2FLLM%20web%20application.%20%23chatbot%20%23chatGPT%20%23openAI&amp;amp;url=https%3A%2F%2Fgithub.com%2Flobehub%2Flobe-chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-share%20on%20reddit-black?labelColor=black&amp;amp;logo=reddit&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://service.weibo.com/share/share.php?sharesource=weibo&amp;amp;title=Check%20this%20GitHub%20repository%20out%20%F0%9F%A4%AF%20LobeChat%20-%20An%20open-source%2C%20extensible%20%28Function%20Calling%29%2C%20high-performance%20chatbot%20framework.%20It%20supports%20one-click%20free%20deployment%20of%20your%20private%20ChatGPT%2FLLM%20web%20application.%20%23chatbot%20%23chatGPT%20%23openAI&amp;amp;url=https%3A%2F%2Fgithub.com%2Flobehub%2Flobe-chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-share%20on%20weibo-black?labelColor=black&amp;amp;logo=sinaweibo&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mastodon.social/share?text=Check%20this%20GitHub%20repository%20out%20%F0%9F%A4%AF%20LobeChat%20-%20An%20open-source,%20extensible%20(Function%20Calling),%20high-performance%20chatbot%20framework.%20It%20supports%20one-click%20free%20deployment%20of%20your%20private%20ChatGPT/LLM%20web%20application.%20https://github.com/lobehub/lobe-chat%20#chatbot%2520%23chatGPT%2520%23openAI&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-share%20on%20mastodon-black?labelColor=black&amp;amp;logo=mastodon&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://linkedin.com/feed&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-share%20on%20linkedin-black?labelColor=black&amp;amp;logo=linkedin&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;sup&gt;Pioneering the new age of thinking and creating. Built for you, the Super Individual.&lt;/sup&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://trendshift.io/repositories/2256&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/2256&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/dbfaa84a-2c82-4dd9-815c-5be616f264a4&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;kbd&gt;Table of contents&lt;/kbd&gt;&lt;/summary&gt; &#xA; &lt;h4&gt;TOC&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#-getting-started--join-our-community&#34;&gt;👋🏻 Getting Started &amp;amp; Join Our Community&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#-features&#34;&gt;✨ Features&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#1-chain-of-thought&#34;&gt;&lt;code&gt;1&lt;/code&gt; Chain of Thought&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#2-branching-conversations&#34;&gt;&lt;code&gt;2&lt;/code&gt; Branching Conversations&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#3-artifacts-support&#34;&gt;&lt;code&gt;3&lt;/code&gt; Artifacts Support&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#4-file-upload-knowledge-base&#34;&gt;&lt;code&gt;4&lt;/code&gt; File Upload /Knowledge Base&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#5-multi-model-service-provider-support&#34;&gt;&lt;code&gt;5&lt;/code&gt; Multi-Model Service Provider Support&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#6-local-large-language-model-llm-support&#34;&gt;&lt;code&gt;6&lt;/code&gt; Local Large Language Model (LLM) Support&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#7-model-visual-recognition&#34;&gt;&lt;code&gt;7&lt;/code&gt; Model Visual Recognition&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#8-tts--stt-voice-conversation&#34;&gt;&lt;code&gt;8&lt;/code&gt; TTS &amp;amp; STT Voice Conversation&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#9-text-to-image-generation&#34;&gt;&lt;code&gt;9&lt;/code&gt; Text to Image Generation&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#10-plugin-system-function-calling&#34;&gt;&lt;code&gt;10&lt;/code&gt; Plugin System (Function Calling)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#11-agent-market-gpts&#34;&gt;&lt;code&gt;11&lt;/code&gt; Agent Market (GPTs)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#12-support-local--remote-database&#34;&gt;&lt;code&gt;12&lt;/code&gt; Support Local / Remote Database&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#13-support-multi-user-management&#34;&gt;&lt;code&gt;13&lt;/code&gt; Support Multi-User Management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#14-progressive-web-app-pwa&#34;&gt;&lt;code&gt;14&lt;/code&gt; Progressive Web App (PWA)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#15-mobile-device-adaptation&#34;&gt;&lt;code&gt;15&lt;/code&gt; Mobile Device Adaptation&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#16-custom-themes&#34;&gt;&lt;code&gt;16&lt;/code&gt; Custom Themes&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#-whats-more&#34;&gt;&lt;code&gt;*&lt;/code&gt; What&#39;s more&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#%EF%B8%8F-performance&#34;&gt;⚡️ Performance&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#-self-hosting&#34;&gt;🛳 Self Hosting&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#a-deploying-with-vercel-zeabur--sealos-or-alibaba-cloud&#34;&gt;&lt;code&gt;A&lt;/code&gt; Deploying with Vercel, Zeabur , Sealos or Alibaba Cloud&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#b-deploying-with-docker&#34;&gt;&lt;code&gt;B&lt;/code&gt; Deploying with Docker&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#environment-variable&#34;&gt;Environment Variable&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#-ecosystem&#34;&gt;📦 Ecosystem&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#-plugins&#34;&gt;🧩 Plugins&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#%EF%B8%8F-local-development&#34;&gt;⌨️ Local Development&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#-contributing&#34;&gt;🤝 Contributing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#%EF%B8%8F-sponsor&#34;&gt;❤️ Sponsor&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#-more-products&#34;&gt;🔗 More Products&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;&lt;/h4&gt; &#xA; &lt;br&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;👋🏻 Getting Started &amp;amp; Join Our Community&lt;/h2&gt; &#xA;&lt;p&gt;We are a group of e/acc design-engineers, hoping to provide modern design components and tools for AIGC. By adopting the Bootstrapping approach, we aim to provide developers and users with a more open, transparent, and user-friendly product ecosystem.&lt;/p&gt; &#xA;&lt;p&gt;Whether for users or professional developers, LobeHub will be your AI Agent playground. Please be aware that LobeChat is currently under active development, and feedback is welcome for any &lt;a href=&#34;https://img.shields.io/github/issues/lobehub/lobe-chat.svg?style=flat&#34;&gt;issues&lt;/a&gt; encountered.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://chat-preview.lobehub.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/TRY%20LOBECHAT-ONLINE-55b467?labelColor=black&amp;amp;logo=vercel&amp;amp;style=for-the-badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;No installation or registration necessary! Visit our website to experience it firsthand.&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://discord.gg/AYFPHvv2jT&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1127171173982154893?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Join our Discord community! This is where you can connect with developers and other enthusiastic users of LobeHub.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Star Us&lt;/strong&gt;, You will receive all release notifications from GitHub without any delay ~ ⭐️&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lobehub/lobe-chat/network/stargazers&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/c3b482e7-cef5-4e94-bef9-226900ecfaab&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;kbd&gt;Star History&lt;/kbd&gt;&lt;/summary&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=lobehub%2Flobe-chat&amp;amp;theme=dark&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img width=&#34;100%&#34; src=&#34;https://api.star-history.com/svg?repos=lobehub%2Flobe-chat&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/cot&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/f74f1139-d115-4e9c-8c43-040a53797a5e&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;1&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/cot&#34;&gt;Chain of Thought&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Experience AI reasoning like never before. Watch as complex problems unfold step by step through our innovative Chain of Thought (CoT) visualization. This breakthrough feature provides unprecedented transparency into AI&#39;s decision-making process, allowing you to observe how conclusions are reached in real-time.&lt;/p&gt; &#xA;&lt;p&gt;By breaking down complex reasoning into clear, logical steps, you can better understand and validate the AI&#39;s problem-solving approach. Whether you&#39;re debugging, learning, or simply curious about AI reasoning, CoT visualization transforms abstract thinking into an engaging, interactive experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/branching-conversations&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/92f72082-02bd-4835-9c54-b089aad7fd41&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;2&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/branching-conversations&#34;&gt;Branching Conversations&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Introducing a more natural and flexible way to chat with AI. With Branch Conversations, your discussions can flow in multiple directions, just like human conversations do. Create new conversation branches from any message, giving you the freedom to explore different paths while preserving the original context.&lt;/p&gt; &#xA;&lt;p&gt;Choose between two powerful modes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Continuation Mode:&lt;/strong&gt; Seamlessly extend your current discussion while maintaining valuable context&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Standalone Mode:&lt;/strong&gt; Start fresh with a new topic based on any previous message&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This groundbreaking feature transforms linear conversations into dynamic, tree-like structures, enabling deeper exploration of ideas and more productive interactions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/artifacts&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/7f95fad6-b210-4e6e-84a0-7f39e96f3a00&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;3&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/artifacts&#34;&gt;Artifacts Support&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Experience the power of Claude Artifacts, now integrated into LobeChat. This revolutionary feature expands the boundaries of AI-human interaction, enabling real-time creation and visualization of diverse content formats.&lt;/p&gt; &#xA;&lt;p&gt;Create and visualize with unprecedented flexibility:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generate and display dynamic SVG graphics&lt;/li&gt; &#xA; &lt;li&gt;Build and render interactive HTML pages in real-time&lt;/li&gt; &#xA; &lt;li&gt;Produce professional documents in multiple formats&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/blog/knowledge-base&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/7da7a3b2-92fd-4630-9f4e-8560c74955ae&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;4&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/blog/knowledge-base&#34;&gt;File Upload /Knowledge Base&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;LobeChat supports file upload and knowledge base functionality. You can upload various types of files including documents, images, audio, and video, as well as create knowledge bases, making it convenient for users to manage and search for files. Additionally, you can utilize files and knowledge base features during conversations, enabling a richer dialogue experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/faa8cf67-e743-4590-8bf6-ebf6ccc34175&#34;&gt;https://github.com/user-attachments/assets/faa8cf67-e743-4590-8bf6-ebf6ccc34175&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;Learn more on &lt;a href=&#34;https://lobehub.com/blog/knowledge-base&#34;&gt;📘 LobeChat Knowledge Base Launch — From Now On, Every Step Counts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/multi-ai-providers&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/e553e407-42de-4919-977d-7dbfcf44a821&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;5&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/multi-ai-providers&#34;&gt;Multi-Model Service Provider Support&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;In the continuous development of LobeChat, we deeply understand the importance of diversity in model service providers for meeting the needs of the community when providing AI conversation services. Therefore, we have expanded our support to multiple model service providers, rather than being limited to a single one, in order to offer users a more diverse and rich selection of conversations.&lt;/p&gt; &#xA;&lt;p&gt;In this way, LobeChat can more flexibly adapt to the needs of different users, while also providing developers with a wider range of choices.&lt;/p&gt; &#xA;&lt;h4&gt;Supported Model Service Providers&lt;/h4&gt; &#xA;&lt;p&gt;We have implemented support for the following model service providers:&lt;/p&gt; &#xA;&lt;!-- PROVIDER LIST --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/openai&#34;&gt;OpenAI&lt;/a&gt;&lt;/strong&gt;: OpenAI is a global leader in artificial intelligence research, with models like the GPT series pushing the frontiers of natural language processing. OpenAI is committed to transforming multiple industries through innovative and efficient AI solutions. Their products demonstrate significant performance and cost-effectiveness, widely used in research, business, and innovative applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/ollama&#34;&gt;Ollama&lt;/a&gt;&lt;/strong&gt;: Ollama provides models that cover a wide range of fields, including code generation, mathematical operations, multilingual processing, and conversational interaction, catering to diverse enterprise-level and localized deployment needs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/anthropic&#34;&gt;Anthropic&lt;/a&gt;&lt;/strong&gt;: Anthropic is a company focused on AI research and development, offering a range of advanced language models such as Claude 3.5 Sonnet, Claude 3 Sonnet, Claude 3 Opus, and Claude 3 Haiku. These models achieve an ideal balance between intelligence, speed, and cost, suitable for various applications from enterprise workloads to rapid-response scenarios. Claude 3.5 Sonnet, as their latest model, has excelled in multiple evaluations while maintaining a high cost-performance ratio.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/bedrock&#34;&gt;Bedrock&lt;/a&gt;&lt;/strong&gt;: Bedrock is a service provided by Amazon AWS, focusing on delivering advanced AI language and visual models for enterprises. Its model family includes Anthropic&#39;s Claude series, Meta&#39;s Llama 3.1 series, and more, offering a range of options from lightweight to high-performance, supporting tasks such as text generation, conversation, and image processing for businesses of varying scales and needs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/google&#34;&gt;Google&lt;/a&gt;&lt;/strong&gt;: Google&#39;s Gemini series represents its most advanced, versatile AI models, developed by Google DeepMind, designed for multimodal capabilities, supporting seamless understanding and processing of text, code, images, audio, and video. Suitable for various environments from data centers to mobile devices, it significantly enhances the efficiency and applicability of AI models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/deepseek&#34;&gt;DeepSeek&lt;/a&gt;&lt;/strong&gt;: DeepSeek is a company focused on AI technology research and application, with its latest model DeepSeek-V2.5 integrating general dialogue and code processing capabilities, achieving significant improvements in human preference alignment, writing tasks, and instruction following.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/huggingface&#34;&gt;HuggingFace&lt;/a&gt;&lt;/strong&gt;: The HuggingFace Inference API provides a fast and free way for you to explore thousands of models for various tasks. Whether you are prototyping for a new application or experimenting with the capabilities of machine learning, this API gives you instant access to high-performance models across multiple domains.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/openrouter&#34;&gt;OpenRouter&lt;/a&gt;&lt;/strong&gt;: OpenRouter is a service platform providing access to various cutting-edge large model interfaces, supporting OpenAI, Anthropic, LLaMA, and more, suitable for diverse development and application needs. Users can flexibly choose the optimal model and pricing based on their requirements, enhancing the AI experience.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/cloudflare&#34;&gt;Cloudflare Workers AI&lt;/a&gt;&lt;/strong&gt;: Run serverless GPU-powered machine learning models on Cloudflare&#39;s global network.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/github&#34;&gt;GitHub&lt;/a&gt;&lt;/strong&gt;: With GitHub Models, developers can become AI engineers and leverage the industry&#39;s leading AI models.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;kbd&gt;See more providers (+26)&lt;/kbd&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/novita&#34;&gt;Novita&lt;/a&gt;&lt;/strong&gt;: Novita AI is a platform providing a variety of large language models and AI image generation API services, flexible, reliable, and cost-effective. It supports the latest open-source models like Llama3 and Mistral, offering a comprehensive, user-friendly, and auto-scaling API solution for generative AI application development, suitable for the rapid growth of AI startups.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/togetherai&#34;&gt;Together AI&lt;/a&gt;&lt;/strong&gt;: Together AI is dedicated to achieving leading performance through innovative AI models, offering extensive customization capabilities, including rapid scaling support and intuitive deployment processes to meet various enterprise needs.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/fireworksai&#34;&gt;Fireworks AI&lt;/a&gt;&lt;/strong&gt;: Fireworks AI is a leading provider of advanced language model services, focusing on functional calling and multimodal processing. Its latest model, Firefunction V2, is based on Llama-3, optimized for function calling, conversation, and instruction following. The visual language model FireLLaVA-13B supports mixed input of images and text. Other notable models include the Llama series and Mixtral series, providing efficient multilingual instruction following and generation support.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/groq&#34;&gt;Groq&lt;/a&gt;&lt;/strong&gt;: Groq&#39;s LPU inference engine has excelled in the latest independent large language model (LLM) benchmarks, redefining the standards for AI solutions with its remarkable speed and efficiency. Groq represents instant inference speed, demonstrating strong performance in cloud-based deployments.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/perplexity&#34;&gt;Perplexity&lt;/a&gt;&lt;/strong&gt;: Perplexity is a leading provider of conversational generation models, offering various advanced Llama 3.1 models that support both online and offline applications, particularly suited for complex natural language processing tasks.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/mistral&#34;&gt;Mistral&lt;/a&gt;&lt;/strong&gt;: Mistral provides advanced general, specialized, and research models widely used in complex reasoning, multilingual tasks, and code generation. Through functional calling interfaces, users can integrate custom functionalities for specific applications.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/ai21&#34;&gt;Ai21Labs&lt;/a&gt;&lt;/strong&gt;: AI21 Labs builds foundational models and AI systems for enterprises, accelerating the application of generative AI in production.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/upstage&#34;&gt;Upstage&lt;/a&gt;&lt;/strong&gt;: Upstage focuses on developing AI models for various business needs, including Solar LLM and document AI, aiming to achieve artificial general intelligence (AGI) for work. It allows for the creation of simple conversational agents through Chat API and supports functional calling, translation, embedding, and domain-specific applications.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/xai&#34;&gt;xAI&lt;/a&gt;&lt;/strong&gt;: xAI is a company dedicated to building artificial intelligence to accelerate human scientific discovery. Our mission is to advance our collective understanding of the universe.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/qwen&#34;&gt;Qwen&lt;/a&gt;&lt;/strong&gt;: Tongyi Qianwen is a large-scale language model independently developed by Alibaba Cloud, featuring strong natural language understanding and generation capabilities. It can answer various questions, create written content, express opinions, and write code, playing a role in multiple fields.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/wenxin&#34;&gt;Wenxin&lt;/a&gt;&lt;/strong&gt;: An enterprise-level one-stop platform for large model and AI-native application development and services, providing the most comprehensive and user-friendly toolchain for the entire process of generative artificial intelligence model development and application development.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/hunyuan&#34;&gt;Hunyuan&lt;/a&gt;&lt;/strong&gt;: A large language model developed by Tencent, equipped with powerful Chinese creative capabilities, logical reasoning abilities in complex contexts, and reliable task execution skills.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/zhipu&#34;&gt;ZhiPu&lt;/a&gt;&lt;/strong&gt;: Zhipu AI offers an open platform for multimodal and language models, supporting a wide range of AI application scenarios, including text processing, image understanding, and programming assistance.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/siliconcloud&#34;&gt;SiliconCloud&lt;/a&gt;&lt;/strong&gt;: SiliconFlow is dedicated to accelerating AGI for the benefit of humanity, enhancing large-scale AI efficiency through an easy-to-use and cost-effective GenAI stack.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/zeroone&#34;&gt;01.AI&lt;/a&gt;&lt;/strong&gt;: 01.AI focuses on AI 2.0 era technologies, vigorously promoting the innovation and application of &#39;human + artificial intelligence&#39;, using powerful models and advanced AI technologies to enhance human productivity and achieve technological empowerment.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/spark&#34;&gt;Spark&lt;/a&gt;&lt;/strong&gt;: iFlytek&#39;s Spark model provides powerful AI capabilities across multiple domains and languages, utilizing advanced natural language processing technology to build innovative applications suitable for smart hardware, smart healthcare, smart finance, and other vertical scenarios.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/sensenova&#34;&gt;SenseNova&lt;/a&gt;&lt;/strong&gt;: SenseNova, backed by SenseTime&#39;s robust infrastructure, offers efficient and user-friendly full-stack large model services.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/stepfun&#34;&gt;Stepfun&lt;/a&gt;&lt;/strong&gt;: StepFun&#39;s large model possesses industry-leading multimodal and complex reasoning capabilities, supporting ultra-long text understanding and powerful autonomous scheduling search engine functions.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/moonshot&#34;&gt;Moonshot&lt;/a&gt;&lt;/strong&gt;: Moonshot is an open-source platform launched by Beijing Dark Side Technology Co., Ltd., providing various natural language processing models with a wide range of applications, including but not limited to content creation, academic research, intelligent recommendations, and medical diagnosis, supporting long text processing and complex generation tasks.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/baichuan&#34;&gt;Baichuan&lt;/a&gt;&lt;/strong&gt;: Baichuan Intelligence is a company focused on the research and development of large AI models, with its models excelling in domestic knowledge encyclopedias, long text processing, and generative creation tasks in Chinese, surpassing mainstream foreign models. Baichuan Intelligence also possesses industry-leading multimodal capabilities, performing excellently in multiple authoritative evaluations. Its models include Baichuan 4, Baichuan 3 Turbo, and Baichuan 3 Turbo 128k, each optimized for different application scenarios, providing cost-effective solutions.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/minimax&#34;&gt;Minimax&lt;/a&gt;&lt;/strong&gt;: MiniMax is a general artificial intelligence technology company established in 2021, dedicated to co-creating intelligence with users. MiniMax has independently developed general large models of different modalities, including trillion-parameter MoE text models, voice models, and image models, and has launched applications such as Conch AI.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/internlm&#34;&gt;InternLM&lt;/a&gt;&lt;/strong&gt;: An open-source organization dedicated to the research and development of large model toolchains. It provides an efficient and user-friendly open-source platform for all AI developers, making cutting-edge large models and algorithm technologies easily accessible.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/higress&#34;&gt;Higress&lt;/a&gt;&lt;/strong&gt;: Higress is a cloud-native API gateway that was developed internally at Alibaba to address the issues of Tengine reload affecting long-lived connections and the insufficient load balancing capabilities for gRPC/Dubbo.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/giteeai&#34;&gt;Gitee AI&lt;/a&gt;&lt;/strong&gt;: Gitee AI&#39;s Serverless API provides AI developers with an out of the box large model inference API service.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/taichu&#34;&gt;Taichu&lt;/a&gt;&lt;/strong&gt;: The Institute of Automation, Chinese Academy of Sciences, and Wuhan Artificial Intelligence Research Institute have launched a new generation of multimodal large models, supporting comprehensive question-answering tasks such as multi-turn Q&amp;amp;A, text creation, image generation, 3D understanding, and signal analysis, with stronger cognitive, understanding, and creative abilities, providing a new interactive experience.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lobechat.com/discover/provider/ai360&#34;&gt;360 AI&lt;/a&gt;&lt;/strong&gt;: 360 AI is an AI model and service platform launched by 360 Company, offering various advanced natural language processing models, including 360GPT2 Pro, 360GPT Pro, 360GPT Turbo, and 360GPT Turbo Responsibility 8K. These models combine large-scale parameters and multimodal capabilities, widely applied in text generation, semantic understanding, dialogue systems, and code generation. With flexible pricing strategies, 360 AI meets diverse user needs, supports developer integration, and promotes the innovation and development of intelligent applications.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;📊 Total providers: &lt;a href=&#34;https://lobechat.com/discover/providers&#34;&gt;&lt;kbd&gt;&lt;strong&gt;36&lt;/strong&gt;&lt;/kbd&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- PROVIDER LIST --&gt; &#xA;&lt;p&gt;At the same time, we are also planning to support more model service providers. If you would like LobeChat to support your favorite service provider, feel free to join our &lt;a href=&#34;https://github.com/lobehub/lobe-chat/discussions/1284&#34;&gt;💬 community discussion&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/local-llm&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/1239da50-d832-4632-a7ef-bd754c0f3850&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;6&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/local-llm&#34;&gt;Local Large Language Model (LLM) Support&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To meet the specific needs of users, LobeChat also supports the use of local models based on &lt;a href=&#34;https://ollama.ai&#34;&gt;Ollama&lt;/a&gt;, allowing users to flexibly use their own or third-party models.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;Learn more about &lt;a href=&#34;https://lobehub.com/docs/usage/providers/ollama&#34;&gt;📘 Using Ollama in LobeChat&lt;/a&gt; by checking it out.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/vision&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/18574a1f-46c2-4cbc-af2c-35a86e128a07&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;7&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/vision&#34;&gt;Model Visual Recognition&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;LobeChat now supports OpenAI&#39;s latest &lt;a href=&#34;https://platform.openai.com/docs/guides/vision&#34;&gt;&lt;code&gt;gpt-4-vision&lt;/code&gt;&lt;/a&gt; model with visual recognition capabilities, a multimodal intelligence that can perceive visuals. Users can easily upload or drag and drop images into the dialogue box, and the agent will be able to recognize the content of the images and engage in intelligent conversation based on this, creating smarter and more diversified chat scenarios.&lt;/p&gt; &#xA;&lt;p&gt;This feature opens up new interactive methods, allowing communication to transcend text and include a wealth of visual elements. Whether it&#39;s sharing images in daily use or interpreting images within specific industries, the agent provides an outstanding conversational experience.&lt;/p&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/tts&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/50189597-2cc3-4002-b4c8-756a52ad5c0a&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;8&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/tts&#34;&gt;TTS &amp;amp; STT Voice Conversation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;LobeChat supports Text-to-Speech (TTS) and Speech-to-Text (STT) technologies, enabling our application to convert text messages into clear voice outputs, allowing users to interact with our conversational agent as if they were talking to a real person. Users can choose from a variety of voices to pair with the agent.&lt;/p&gt; &#xA;&lt;p&gt;Moreover, TTS offers an excellent solution for those who prefer auditory learning or desire to receive information while busy. In LobeChat, we have meticulously selected a range of high-quality voice options (OpenAI Audio, Microsoft Edge Speech) to meet the needs of users from different regions and cultural backgrounds. Users can choose the voice that suits their personal preferences or specific scenarios, resulting in a personalized communication experience.&lt;/p&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/text-to-image&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/708274a7-2458-494b-a6ec-b73dfa1fa7c2&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;9&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/text-to-image&#34;&gt;Text to Image Generation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;With support for the latest text-to-image generation technology, LobeChat now allows users to invoke image creation tools directly within conversations with the agent. By leveraging the capabilities of AI tools such as &lt;a href=&#34;https://openai.com/dall-e-3&#34;&gt;&lt;code&gt;DALL-E 3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.midjourney.com/&#34;&gt;&lt;code&gt;MidJourney&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://pollinations.ai/&#34;&gt;&lt;code&gt;Pollinations&lt;/code&gt;&lt;/a&gt;, the agents are now equipped to transform your ideas into images.&lt;/p&gt; &#xA;&lt;p&gt;This enables a more private and immersive creative process, allowing for the seamless integration of visual storytelling into your personal dialogue with the agent.&lt;/p&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/plugin-system&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/66a891ac-01b6-4e3f-b978-2eb07b489b1b&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;10&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/plugin-system&#34;&gt;Plugin System (Function Calling)&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The plugin ecosystem of LobeChat is an important extension of its core functionality, greatly enhancing the practicality and flexibility of the LobeChat assistant.&lt;/p&gt; &#xA;&lt;p&gt;&#xA; &lt;video controls src=&#34;https://github.com/lobehub/lobe-chat/assets/28616219/f29475a3-f346-4196-a435-41a6373ab9e2&#34; muted=&#34;false&#34;&gt;&lt;/video&gt;&lt;/p&gt; &#xA;&lt;p&gt;By utilizing plugins, LobeChat assistants can obtain and process real-time information, such as searching for web information and providing users with instant and relevant news.&lt;/p&gt; &#xA;&lt;p&gt;In addition, these plugins are not limited to news aggregation, but can also extend to other practical functions, such as quickly searching documents, generating images, obtaining data from various platforms like Bilibili, Steam, and interacting with various third-party services.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;Learn more about &lt;a href=&#34;https://lobehub.com/docs/usage/plugins/basic&#34;&gt;📘 Plugin Usage&lt;/a&gt; by checking it out.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- PLUGIN LIST --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Recent Submits&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://lobechat.com/discover/plugin/web&#34;&gt;Web&lt;/a&gt;&lt;br&gt;&lt;sup&gt;By &lt;strong&gt;Proghit&lt;/strong&gt; on &lt;strong&gt;2025-01-24&lt;/strong&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Smart web search that reads and analyzes pages to deliver comprehensive answers from Google results.&lt;br&gt;&lt;code&gt;web&lt;/code&gt; &lt;code&gt;search&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://lobechat.com/discover/plugin/mintbasesearch&#34;&gt;MintbaseSearch&lt;/a&gt;&lt;br&gt;&lt;sup&gt;By &lt;strong&gt;mintbase&lt;/strong&gt; on &lt;strong&gt;2024-12-31&lt;/strong&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Find any NFT data on the NEAR Protocol.&lt;br&gt;&lt;code&gt;crypto&lt;/code&gt; &lt;code&gt;nft&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://lobechat.com/discover/plugin/Bingsearch-identifier&#34;&gt;Bing_websearch&lt;/a&gt;&lt;br&gt;&lt;sup&gt;By &lt;strong&gt;FineHow&lt;/strong&gt; on &lt;strong&gt;2024-12-22&lt;/strong&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Search for information from the internet base BingApi&lt;br&gt;&lt;code&gt;bingsearch&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://lobechat.com/discover/plugin/StockData&#34;&gt;PortfolioMeta&lt;/a&gt;&lt;br&gt;&lt;sup&gt;By &lt;strong&gt;portfoliometa&lt;/strong&gt; on &lt;strong&gt;2024-12-22&lt;/strong&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Analyze stocks and get comprehensive real-time investment data and analytics.&lt;br&gt;&lt;code&gt;stock&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;📊 Total plugins: &lt;a href=&#34;https://lobechat.com/discover/plugins&#34;&gt;&lt;kbd&gt;&lt;strong&gt;48&lt;/strong&gt;&lt;/kbd&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- PLUGIN LIST --&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/agent-market&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/b3ab6e35-4fbc-468d-af10-e3e0c687350f&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;11&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/agent-market&#34;&gt;Agent Market (GPTs)&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;In LobeChat Agent Marketplace, creators can discover a vibrant and innovative community that brings together a multitude of well-designed agents, which not only play an important role in work scenarios but also offer great convenience in learning processes. Our marketplace is not just a showcase platform but also a collaborative space. Here, everyone can contribute their wisdom and share the agents they have developed.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;By &lt;a href=&#34;https://github.com/lobehub/lobe-chat-agents&#34;&gt;🤖/🏪 Submit Agents&lt;/a&gt;, you can easily submit your agent creations to our platform. Importantly, LobeChat has established a sophisticated automated internationalization (i18n) workflow, capable of seamlessly translating your agent into multiple language versions. This means that no matter what language your users speak, they can experience your agent without barriers.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;p&gt;We welcome all users to join this growing ecosystem and participate in the iteration and optimization of agents. Together, we can create more interesting, practical, and innovative agents, further enriching the diversity and practicality of the agent offerings.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- AGENT LIST --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Recent Submits&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://lobechat.com/discover/assistant/crontab-generate&#34;&gt;Cron Expression Assistant&lt;/a&gt;&lt;br&gt;&lt;sup&gt;By &lt;strong&gt;&lt;a href=&#34;https://github.com/edgesider&#34;&gt;edgesider&lt;/a&gt;&lt;/strong&gt; on &lt;strong&gt;2025-02-17&lt;/strong&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Crontab Expression Generator&lt;br&gt;&lt;code&gt;crontab&lt;/code&gt; &lt;code&gt;time-expression&lt;/code&gt; &lt;code&gt;trigger-time&lt;/code&gt; &lt;code&gt;generator&lt;/code&gt; &lt;code&gt;technical-assistance&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://lobechat.com/discover/assistant/xiao-zhi-french-translation-asst-v-1&#34;&gt;Xiao Zhi French Translation Assistant&lt;/a&gt;&lt;br&gt;&lt;sup&gt;By &lt;strong&gt;&lt;a href=&#34;https://github.com/WeR-Best&#34;&gt;WeR-Best&lt;/a&gt;&lt;/strong&gt; on &lt;strong&gt;2025-02-10&lt;/strong&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A friendly, professional, and empathetic AI assistant for French translation&lt;br&gt;&lt;code&gt;ai-assistant&lt;/code&gt; &lt;code&gt;french-translation&lt;/code&gt; &lt;code&gt;cross-cultural-communication&lt;/code&gt; &lt;code&gt;creativity&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://lobechat.com/discover/assistant/bad-language-helper&#34;&gt;Language Charm Learning Mentor&lt;/a&gt;&lt;br&gt;&lt;sup&gt;By &lt;strong&gt;&lt;a href=&#34;https://github.com/Guducat&#34;&gt;Guducat&lt;/a&gt;&lt;/strong&gt; on &lt;strong&gt;2025-02-06&lt;/strong&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specializes in teaching the charm of language and witty responses&lt;br&gt;&lt;code&gt;language-learning&lt;/code&gt; &lt;code&gt;dialogue-examples&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://lobechat.com/discover/assistant/fate-researcher&#34;&gt;Astrology Researcher&lt;/a&gt;&lt;br&gt;&lt;sup&gt;By &lt;strong&gt;&lt;a href=&#34;https://github.com/Jack980506&#34;&gt;Jack980506&lt;/a&gt;&lt;/strong&gt; on &lt;strong&gt;2025-02-06&lt;/strong&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Expert in BaZi astrology&lt;br&gt;&lt;code&gt;astrology&lt;/code&gt; &lt;code&gt;ba-zi&lt;/code&gt; &lt;code&gt;traditional-culture&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;📊 Total agents: &lt;a href=&#34;https://lobechat.com/discover/assistants&#34;&gt;&lt;kbd&gt;&lt;strong&gt;487&lt;/strong&gt;&lt;/kbd&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- AGENT LIST --&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/database&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/f1697c8b-d1fb-4dac-ba05-153c6295d91d&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;12&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/database&#34;&gt;Support Local / Remote Database&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;LobeChat supports the use of both server-side and local databases. Depending on your needs, you can choose the appropriate deployment solution:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local database&lt;/strong&gt;: suitable for users who want more control over their data and privacy protection. LobeChat uses CRDT (Conflict-Free Replicated Data Type) technology to achieve multi-device synchronization. This is an experimental feature aimed at providing a seamless data synchronization experience.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Server-side database&lt;/strong&gt;: suitable for users who want a more convenient user experience. LobeChat supports PostgreSQL as a server-side database. For detailed documentation on how to configure the server-side database, please visit &lt;a href=&#34;https://lobehub.com/docs/self-hosting/advanced/server-database&#34;&gt;Configure Server-side Database&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Regardless of which database you choose, LobeChat can provide you with an excellent user experience.&lt;/p&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/auth&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/80bb232e-19d1-4f97-98d6-e291f3585e6d&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;13&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/auth&#34;&gt;Support Multi-User Management&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;LobeChat supports multi-user management and provides two main user authentication and management solutions to meet different needs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;next-auth&lt;/strong&gt;: LobeChat integrates &lt;code&gt;next-auth&lt;/code&gt;, a flexible and powerful identity verification library that supports multiple authentication methods, including OAuth, email login, credential login, etc. With &lt;code&gt;next-auth&lt;/code&gt;, you can easily implement user registration, login, session management, social login, and other functions to ensure the security and privacy of user data.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://go.clerk.com/exgqLG0&#34;&gt;&lt;strong&gt;Clerk&lt;/strong&gt;&lt;/a&gt;: For users who need more advanced user management features, LobeChat also supports &lt;code&gt;Clerk&lt;/code&gt;, a modern user management platform. &lt;code&gt;Clerk&lt;/code&gt; provides richer functions, such as multi-factor authentication (MFA), user profile management, login activity monitoring, etc. With &lt;code&gt;Clerk&lt;/code&gt;, you can get higher security and flexibility, and easily cope with complex user management needs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Regardless of which user management solution you choose, LobeChat can provide you with an excellent user experience and powerful functional support.&lt;/p&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/pwa&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/9647f70f-b71b-43b6-9564-7cdd12d1c24d&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;14&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/pwa&#34;&gt;Progressive Web App (PWA)&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;We deeply understand the importance of providing a seamless experience for users in today&#39;s multi-device environment. Therefore, we have adopted Progressive Web Application (&lt;a href=&#34;https://support.google.com/chrome/answer/9658361&#34;&gt;PWA&lt;/a&gt;) technology, a modern web technology that elevates web applications to an experience close to that of native apps.&lt;/p&gt; &#xA;&lt;p&gt;Through PWA, LobeChat can offer a highly optimized user experience on both desktop and mobile devices while maintaining its lightweight and high-performance characteristics. Visually and in terms of feel, we have also meticulously designed the interface to ensure it is indistinguishable from native apps, providing smooth animations, responsive layouts, and adapting to different device screen resolutions.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;If you are unfamiliar with the installation process of PWA, you can add LobeChat as your desktop application (also applicable to mobile devices) by following these steps:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Launch the Chrome or Edge browser on your computer.&lt;/li&gt; &#xA;  &lt;li&gt;Visit the LobeChat webpage.&lt;/li&gt; &#xA;  &lt;li&gt;In the upper right corner of the address bar, click on the &lt;kbd&gt;Install&lt;/kbd&gt; icon.&lt;/li&gt; &#xA;  &lt;li&gt;Follow the instructions on the screen to complete the PWA Installation.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/mobile&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/32cf43c4-96bd-4a4c-bfb6-59acde6fe380&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;15&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/mobile&#34;&gt;Mobile Device Adaptation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;We have carried out a series of optimization designs for mobile devices to enhance the user&#39;s mobile experience. Currently, we are iterating on the mobile user experience to achieve smoother and more intuitive interactions. If you have any suggestions or ideas, we welcome you to provide feedback through GitHub Issues or Pull Requests.&lt;/p&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lobehub.com/docs/usage/features/theme&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/b47c39f1-806f-492b-8fcb-b0fa973937c1&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;16&lt;/code&gt; &lt;a href=&#34;https://lobehub.com/docs/usage/features/theme&#34;&gt;Custom Themes&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;As a design-engineering-oriented application, LobeChat places great emphasis on users&#39; personalized experiences, hence introducing flexible and diverse theme modes, including a light mode for daytime and a dark mode for nighttime. Beyond switching theme modes, a range of color customization options allow users to adjust the application&#39;s theme colors according to their preferences. Whether it&#39;s a desire for a sober dark blue, a lively peach pink, or a professional gray-white, users can find their style of color choices in LobeChat.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;The default configuration can intelligently recognize the user&#39;s system color mode and automatically switch themes to ensure a consistent visual experience with the operating system. For users who like to manually control details, LobeChat also offers intuitive setting options and a choice between chat bubble mode and document mode for conversation scenarios.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;&lt;code&gt;*&lt;/code&gt; What&#39;s more&lt;/h3&gt; &#xA;&lt;p&gt;Beside these features, LobeChat also have much better basic technique underground:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 💨 &lt;strong&gt;Quick Deployment&lt;/strong&gt;: Using the Vercel platform or docker image, you can deploy with just one click and complete the process within 1 minute without any complex configuration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 🌐 &lt;strong&gt;Custom Domain&lt;/strong&gt;: If users have their own domain, they can bind it to the platform for quick access to the dialogue agent from anywhere.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 🔒 &lt;strong&gt;Privacy Protection&lt;/strong&gt;: All data is stored locally in the user&#39;s browser, ensuring user privacy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 💎 &lt;strong&gt;Exquisite UI Design&lt;/strong&gt;: With a carefully designed interface, it offers an elegant appearance and smooth interaction. It supports light and dark themes and is mobile-friendly. PWA support provides a more native-like experience.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 🗣️ &lt;strong&gt;Smooth Conversation Experience&lt;/strong&gt;: Fluid responses ensure a smooth conversation experience. It fully supports Markdown rendering, including code highlighting, LaTex formulas, Mermaid flowcharts, and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;✨ more features will be added when LobeChat evolve.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;You can find our upcoming &lt;a href=&#34;https://github.com/lobehub/lobe-chat/projects&#34;&gt;Roadmap&lt;/a&gt; plans in the Projects section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;⚡️ Performance&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;The complete list of reports can be found in the &lt;a href=&#34;https://github.com/lobehub/lobe-chat/wiki/Lighthouse&#34;&gt;📘 Lighthouse Reports&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Desktop&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Mobile&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/lighthouse/lighthouse/chat/desktop/pagespeed.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/lighthouse/lighthouse/chat/mobile/pagespeed.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://lobehub.github.io/lobe-chat/lighthouse/chat/desktop/chat_preview_lobehub_com_chat.html&#34;&gt;📑 Lighthouse Report&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://lobehub.github.io/lobe-chat/lighthouse/chat/mobile/chat_preview_lobehub_com_chat.html&#34;&gt;📑 Lighthouse Report&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🛳 Self Hosting&lt;/h2&gt; &#xA;&lt;p&gt;LobeChat provides Self-Hosted Version with Vercel, Alibaba Cloud, and &lt;a href=&#34;https://hub.docker.com/r/lobehub/lobe-chat&#34;&gt;Docker Image&lt;/a&gt;. This allows you to deploy your own chatbot within a few minutes without any prior knowledge.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;Learn more about &lt;a href=&#34;https://lobehub.com/docs/self-hosting/start&#34;&gt;📘 Build your own LobeChat&lt;/a&gt; by checking it out.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;code&gt;A&lt;/code&gt; Deploying with Vercel, Zeabur , Sealos or Alibaba Cloud&lt;/h3&gt; &#xA;&lt;p&gt;&#34;If you want to deploy this service yourself on Vercel, Zeabur or Alibaba Cloud, you can follow these steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prepare your &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI API Key&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click the button below to start deployment: Log in directly with your GitHub account, and remember to fill in the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt;(required) and &lt;code&gt;ACCESS_CODE&lt;/code&gt; (recommended) on the environment variable section.&lt;/li&gt; &#xA; &lt;li&gt;After deployment, you can start using it.&lt;/li&gt; &#xA; &lt;li&gt;Bind a custom domain (optional): The DNS of the domain assigned by Vercel is polluted in some areas; binding a custom domain can connect directly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Deploy with Vercel&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Deploy with Zeabur&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Deploy with Sealos&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Deploy with RepoCloud&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Deploy with Alibaba Cloud&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Flobehub%2Flobe-chat&amp;amp;env=OPENAI_API_KEY,ACCESS_CODE&amp;amp;envDescription=Find%20your%20OpenAI%20API%20Key%20by%20click%20the%20right%20Learn%20More%20button.%20%7C%20Access%20Code%20can%20protect%20your%20website&amp;amp;envLink=https%3A%2F%2Fplatform.openai.com%2Faccount%2Fapi-keys&amp;amp;project-name=lobe-chat&amp;amp;repository-name=lobe-chat&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://zeabur.com/templates/VZGGTI&#34;&gt;&lt;img src=&#34;https://zeabur.com/button.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://template.usw.sealos.io/deploy?templateName=lobe-chat-db&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://repocloud.io/details/?app_id=248&#34;&gt;&lt;img src=&#34;https://d16t0pc4846x52.cloudfront.net/deploylobe.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://computenest.console.aliyun.com/service/instance/create/default?type=user&amp;amp;ServiceName=LobeChat%E7%A4%BE%E5%8C%BA%E7%89%88&#34;&gt;&lt;img src=&#34;https://service-info-public.oss-cn-hangzhou.aliyuncs.com/computenest-en.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h4&gt;After Fork&lt;/h4&gt; &#xA;&lt;p&gt;After fork, only retain the upstream sync action and disable other actions in your repository on GitHub.&lt;/p&gt; &#xA;&lt;h4&gt;Keep Updated&lt;/h4&gt; &#xA;&lt;p&gt;If you have deployed your own project following the one-click deployment steps in the README, you might encounter constant prompts indicating &#34;updates available.&#34; This is because Vercel defaults to creating a new project instead of forking this one, resulting in an inability to detect updates accurately.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;We suggest you redeploy using the following steps, &lt;a href=&#34;https://lobehub.com/docs/self-hosting/advanced/upstream-sync&#34;&gt;📘 Auto Sync With Latest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;code&gt;B&lt;/code&gt; Deploying with Docker&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/lobehub/lobe-chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/lobehub/lobe-chat?color=369eff&amp;amp;label=docker&amp;amp;labelColor=black&amp;amp;logo=docker&amp;amp;logoColor=white&amp;amp;style=flat-square&amp;amp;sort=semver&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/lobehub/lobe-chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/lobehub/lobe-chat?color=369eff&amp;amp;labelColor=black&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/lobehub/lobe-chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/lobehub/lobe-chat?color=45cc11&amp;amp;labelColor=black&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We provide a Docker image for deploying the LobeChat service on your own private device. Use the following command to start the LobeChat service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;$ docker run -d -p 3210:3210 \&#xA;  -e OPENAI_API_KEY=sk-xxxx \&#xA;  -e ACCESS_CODE=lobe66 \&#xA;  --name lobe-chat \&#xA;  lobehub/lobe-chat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;If you need to use the OpenAI service through a proxy, you can configure the proxy address using the &lt;code&gt;OPENAI_PROXY_URL&lt;/code&gt; environment variable:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;$ docker run -d -p 3210:3210 \&#xA;  -e OPENAI_API_KEY=sk-xxxx \&#xA;  -e OPENAI_PROXY_URL=https://api-proxy.com/v1 \&#xA;  -e ACCESS_CODE=lobe66 \&#xA;  --name lobe-chat \&#xA;  lobehub/lobe-chat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;For detailed instructions on deploying with Docker, please refer to the &lt;a href=&#34;https://lobehub.com/docs/self-hosting/platform/docker&#34;&gt;📘 Docker Deployment Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Environment Variable&lt;/h3&gt; &#xA;&lt;p&gt;This project provides some additional configuration items set with environment variables:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment Variable&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;This is the API key you apply on the OpenAI account page&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sk-xxxxxx...xxxxxx&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_PROXY_URL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;If you manually configure the OpenAI interface proxy, you can use this configuration item to override the default OpenAI API request base URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://api.chatanywhere.cn&lt;/code&gt; or &lt;code&gt;https://aihubmix.com/v1&lt;/code&gt; &lt;br&gt;The default value is&lt;br&gt;&lt;code&gt;https://api.openai.com/v1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ACCESS_CODE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Add a password to access this service; you can set a long password to avoid leaking. If this value contains a comma, it is a password array.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;awCTe)re_r74&lt;/code&gt; or &lt;code&gt;rtrt_ewee3@09!&lt;/code&gt; or &lt;code&gt;code1,code2,code3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_MODEL_LIST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Used to control the model list. Use &lt;code&gt;+&lt;/code&gt; to add a model, &lt;code&gt;-&lt;/code&gt; to hide a model, and &lt;code&gt;model_name=display_name&lt;/code&gt; to customize the display name of a model, separated by commas.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;qwen-7b-chat,+glm-6b,-gpt-3.5-turbo&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;The complete list of environment variables can be found in the &lt;a href=&#34;https://lobehub.com/docs/self-hosting/environment-variables&#34;&gt;📘 Environment Variables&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;📦 Ecosystem&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;NPM&lt;/th&gt; &#xA;   &lt;th&gt;Repository&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@lobehub/ui&#34;&gt;@lobehub/ui&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lobehub/lobe-ui&#34;&gt;lobehub/lobe-ui&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open-source UI component library dedicated to building AIGC web applications.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@lobehub/ui&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@lobehub/ui?color=369eff&amp;amp;labelColor=black&amp;amp;logo=npm&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@lobehub/icons&#34;&gt;@lobehub/icons&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lobehub/lobe-icons&#34;&gt;lobehub/lobe-icons&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Popular AI / LLM Model Brand SVG Logo and Icon Collection.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@lobehub/icons&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@lobehub/icons?color=369eff&amp;amp;labelColor=black&amp;amp;logo=npm&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@lobehub/tts&#34;&gt;@lobehub/tts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lobehub/lobe-tts&#34;&gt;lobehub/lobe-tts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;High-quality &amp;amp; reliable TTS/STT React Hooks library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@lobehub/tts&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@lobehub/tts?color=369eff&amp;amp;labelColor=black&amp;amp;logo=npm&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@lobehub/lint&#34;&gt;@lobehub/lint&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lobehub/lobe-lint&#34;&gt;lobehub/lobe-lint&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configurations for ESlint, Stylelint, Commitlint, Prettier, Remark, and Semantic Release for LobeHub.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@lobehub/lint&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@lobehub/lint?color=369eff&amp;amp;labelColor=black&amp;amp;logo=npm&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🧩 Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Plugins provide a means to extend the &lt;a href=&#34;https://lobehub.com/blog/openai-function-call&#34;&gt;Function Calling&lt;/a&gt; capabilities of LobeChat. They can be used to introduce new function calls and even new ways to render message results. If you are interested in plugin development, please refer to our &lt;a href=&#34;https://lobehub.com/docs/usage/plugins/development&#34;&gt;📘 Plugin Development Guide&lt;/a&gt; in the Wiki.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lobehub/lobe-chat-plugins&#34;&gt;lobe-chat-plugins&lt;/a&gt;: This is the plugin index for LobeChat. It accesses index.json from this repository to display a list of available plugins for LobeChat to the user.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lobehub/chat-plugin-template&#34;&gt;chat-plugin-template&lt;/a&gt;: This is the plugin template for LobeChat plugin development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lobehub/chat-plugin-sdk&#34;&gt;@lobehub/chat-plugin-sdk&lt;/a&gt;: The LobeChat Plugin SDK assists you in creating exceptional chat plugins for Lobe Chat.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lobehub/chat-plugins-gateway&#34;&gt;@lobehub/chat-plugins-gateway&lt;/a&gt;: The LobeChat Plugins Gateway is a backend service that provides a gateway for LobeChat plugins. We deploy this service using Vercel. The primary API POST /api/v1/runner is deployed as an Edge Function.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;The plugin system is currently undergoing major development. You can learn more in the following issues:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[x] &lt;a href=&#34;https://github.com/lobehub/lobe-chat/issues/73&#34;&gt;&lt;strong&gt;Plugin Phase 1&lt;/strong&gt;&lt;/a&gt;: Implement separation of the plugin from the main body, split the plugin into an independent repository for maintenance, and realize dynamic loading of the plugin.&lt;/li&gt; &#xA;  &lt;li&gt;[x] &lt;a href=&#34;https://github.com/lobehub/lobe-chat/issues/97&#34;&gt;&lt;strong&gt;Plugin Phase 2&lt;/strong&gt;&lt;/a&gt;: The security and stability of the plugin&#39;s use, more accurately presenting abnormal states, the maintainability of the plugin architecture, and developer-friendly.&lt;/li&gt; &#xA;  &lt;li&gt;[x] &lt;a href=&#34;https://github.com/lobehub/lobe-chat/issues/149&#34;&gt;&lt;strong&gt;Plugin Phase 3&lt;/strong&gt;&lt;/a&gt;: Higher-level and more comprehensive customization capabilities, support for plugin authentication, and examples.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;⌨️ Local Development&lt;/h2&gt; &#xA;&lt;p&gt;You can use GitHub Codespaces for online development:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codespaces.new/lobehub/lobe-chat&#34;&gt;&lt;img src=&#34;https://github.com/codespaces/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or clone it for local development:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;$ git clone https://github.com/lobehub/lobe-chat.git&#xA;$ cd lobe-chat&#xA;$ pnpm install&#xA;$ pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you would like to learn more details, please feel free to look at our &lt;a href=&#34;https://github.com/lobehub/lobe-chat/wiki/index&#34;&gt;📘 Development Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🤝 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions of all types are more than welcome; if you are interested in contributing code, feel free to check out our GitHub &lt;a href=&#34;https://github.com/lobehub/lobe-chat/issues&#34;&gt;Issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/lobehub/lobe-chat/projects&#34;&gt;Projects&lt;/a&gt; to get stuck in to show us what you’re made of.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;We are creating a technology-driven forum, fostering knowledge interaction and the exchange of ideas that may culminate in mutual inspiration and collaborative innovation.&lt;/p&gt; &#xA; &lt;p&gt;Help us make LobeChat better. Welcome to provide product design feedback, user experience discussions directly to us.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Principal Maintainers:&lt;/strong&gt; &lt;a href=&#34;https://github.com/arvinxx&#34;&gt;@arvinxx&lt;/a&gt; &lt;a href=&#34;https://github.com/canisminor1990&#34;&gt;@canisminor1990&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lobehub/lobe-chat/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%AF_pr_welcome-%E2%86%92-ffcb47?labelColor=black&amp;amp;style=for-the-badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lobehub/lobe-chat-agents&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%96/%F0%9F%8F%AA_submit_agent-%E2%86%92-c4f042?labelColor=black&amp;amp;style=for-the-badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lobehub/lobe-chat-plugins&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A7%A9/%F0%9F%8F%AA_submit_plugin-%E2%86%92-95f3d9?labelColor=black&amp;amp;style=for-the-badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/lobehub/lobe-chat/graphs/contributors&#34; target=&#34;_blank&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;th colspan=&#34;2&#34;&gt; &lt;br&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=lobehub/lobe-chat&#34;&gt;&lt;br&gt;&lt;br&gt; &lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt; &#xA;     &lt;picture&gt; &#xA;      &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://next.ossinsight.io/widgets/official/compose-org-active-contributors/thumbnail.png?activity=active&amp;amp;period=past_28_days&amp;amp;owner_id=131470832&amp;amp;repo_ids=643445235&amp;amp;image_size=2x3&amp;amp;color_scheme=dark&#34;&gt; &#xA;      &lt;img src=&#34;https://next.ossinsight.io/widgets/official/compose-org-active-contributors/thumbnail.png?activity=active&amp;amp;period=past_28_days&amp;amp;owner_id=131470832&amp;amp;repo_ids=643445235&amp;amp;image_size=2x3&amp;amp;color_scheme=light&#34;&gt; &#xA;     &lt;/picture&gt; &lt;/td&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt; &#xA;     &lt;picture&gt; &#xA;      &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://next.ossinsight.io/widgets/official/compose-org-participants-growth/thumbnail.png?activity=active&amp;amp;period=past_28_days&amp;amp;owner_id=131470832&amp;amp;repo_ids=643445235&amp;amp;image_size=4x7&amp;amp;color_scheme=dark&#34;&gt; &#xA;      &lt;img src=&#34;https://next.ossinsight.io/widgets/official/compose-org-participants-growth/thumbnail.png?activity=active&amp;amp;period=past_28_days&amp;amp;owner_id=131470832&amp;amp;repo_ids=643445235&amp;amp;image_size=4x7&amp;amp;color_scheme=light&#34;&gt; &#xA;     &lt;/picture&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt; &#xA;     &lt;picture&gt; &#xA;      &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://next.ossinsight.io/widgets/official/compose-org-active-contributors/thumbnail.png?activity=new&amp;amp;period=past_28_days&amp;amp;owner_id=131470832&amp;amp;repo_ids=643445235&amp;amp;image_size=2x3&amp;amp;color_scheme=dark&#34;&gt; &#xA;      &lt;img src=&#34;https://next.ossinsight.io/widgets/official/compose-org-active-contributors/thumbnail.png?activity=new&amp;amp;period=past_28_days&amp;amp;owner_id=131470832&amp;amp;repo_ids=643445235&amp;amp;image_size=2x3&amp;amp;color_scheme=light&#34;&gt; &#xA;     &lt;/picture&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &lt;/a&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;❤️ Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;Every bit counts and your one-time donation sparkles in our galaxy of support! You&#39;re a shooting star, making a swift and bright impact on our journey. Thank you for believing in us – your generosity guides us toward our mission, one brilliant flash at a time.&lt;/p&gt; &#xA;&lt;a href=&#34;https://opencollective.com/lobehub&#34; target=&#34;_blank&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/lobehub/.github/blob/main/static/sponsor-dark.png?raw=true&#34;&gt; &#xA;  &lt;img src=&#34;https://github.com/lobehub/.github/raw/main/static/sponsor-light.png?raw=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🔗 More Products&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/lobehub/sd-webui-lobe-theme&#34;&gt;🅰️ Lobe SD Theme&lt;/a&gt;:&lt;/strong&gt; Modern theme for Stable Diffusion WebUI, exquisite interface design, highly customizable UI, and efficiency-boosting features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/lobehub/lobe-midjourney-webui&#34;&gt;⛵️ Lobe Midjourney WebUI&lt;/a&gt;:&lt;/strong&gt; WebUI for Midjourney, leverages AI to quickly generate a wide array of rich and diverse images from text prompts, sparking creativity and enhancing conversations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/lobehub/lobe-commit/tree/master/packages/lobe-i18n&#34;&gt;🌏 Lobe i18n&lt;/a&gt; :&lt;/strong&gt; Lobe i18n is an automation tool for the i18n (internationalization) translation process, powered by ChatGPT. It supports features such as automatic splitting of large files, incremental updates, and customization options for the OpenAI model, API proxy, and temperature.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/lobehub/lobe-commit/tree/master/packages/lobe-commit&#34;&gt;💌 Lobe Commit&lt;/a&gt;:&lt;/strong&gt; Lobe Commit is a CLI tool that leverages Langchain/ChatGPT to generate Gitmoji-based commit messages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/#readme-top&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;h4&gt;📝 License&lt;/h4&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Flobehub%2Flobe-chat&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Flobehub%2Flobe-chat.svg?type=large&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Copyright © 2024 &lt;a href=&#34;https://github.com/lobehub&#34;&gt;LobeHub&lt;/a&gt;. &lt;br&gt; This project is &lt;a href=&#34;https://raw.githubusercontent.com/lobehub/lobe-chat/main/LICENSE&#34;&gt;Apache 2.0&lt;/a&gt; licensed.&lt;/p&gt; &#xA;&lt;!-- LINK GROUP --&gt;</summary>
  </entry>
  <entry>
    <title>jingyaogong/minimind</title>
    <updated>2025-03-01T01:52:22Z</updated>
    <id>tag:github.com,2025-03-01:/jingyaogong/minimind</id>
    <link href="https://github.com/jingyaogong/minimind" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀🚀 「大模型」2小时完全从0训练26M的小参数GPT！🌏 Train a 26M-parameter GPT from scratch in just 2h!&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/logo.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://visitor-badge.laobi.icu/badge?page_id=jingyaogong/minimind&#34; alt=&#34;visitors&#34;&gt; &lt;a href=&#34;https://github.com/jingyaogong/minimind/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/jingyaogong/minimind?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/jingyaogong/minimind&#34; alt=&#34;GitHub Code License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jingyaogong/minimind/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/jingyaogong/minimind&#34; alt=&#34;GitHub last commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jingyaogong/minimind/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-blue&#34; alt=&#34;GitHub pull request&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/collections/jingyaogong/minimind-66caf8d999f5c7fa64f399e5&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97-MiniMind%20%20Collection-blue&#34; alt=&#34;Collection&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h3&gt;&#34;大道至简&#34;&lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;中文 | &lt;a href=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/README_en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;此开源项目旨在完全从0开始，仅用3块钱成本 + 2小时！即可训练出仅为25.8M的超小语言模型&lt;strong&gt;MiniMind&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MiniMind&lt;/strong&gt;系列极其轻量，最小版本体积是 GPT-3 的 $\frac{1}{7000}$，力求做到最普通的个人GPU也可快速训练。&lt;/li&gt; &#xA; &lt;li&gt;项目同时开源了大模型的极简结构-包含拓展共享混合专家(MoE)、数据集清洗、预训练(Pretrain)、监督微调(SFT)、LoRA微调， 直接偏好强化学习(DPO)算法、模型蒸馏算法等全过程代码。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MiniMind&lt;/strong&gt;同时拓展了视觉多模态的VLM: &lt;a href=&#34;https://github.com/jingyaogong/minimind-v&#34;&gt;MiniMind-V&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;项目所有核心算法代码均从0使用PyTorch原生重构！不依赖第三方库提供的抽象接口。&lt;/li&gt; &#xA; &lt;li&gt;这不仅是大语言模型的全阶段开源复现，也是一个入门LLM的教程。&lt;/li&gt; &#xA; &lt;li&gt;希望此项目能为所有人提供一个抛砖引玉的示例，一起感受创造的乐趣！推动更广泛AI社区的进步！&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;为防止误解，“2小时” 基于NVIDIA 3090硬件设备（单卡）测试，“3块钱” 指GPU服务器租用成本，具体规格详情见下文。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/minimind2.gif&#34; alt=&#34;minimind2&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.modelscope.cn/studios/gongjy/MiniMind-Reasoning&#34;&gt;🔗🍓推理模型&lt;/a&gt; | &lt;a href=&#34;https://www.modelscope.cn/studios/gongjy/MiniMind&#34;&gt;🔗🤖常规模型&lt;/a&gt; | &lt;a href=&#34;https://www.bilibili.com/video/BV12dHPeqE72/?share_source=copy_web&amp;amp;vd_source=670c2504f88726f8cf4a21ef6147c0e8&#34;&gt;🔗🎞️视频介绍&lt;/a&gt;&lt;/p&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;table&gt; &#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://huggingface.co/collections/jingyaogong/minimind-66caf8d999f5c7fa64f399e5&#34; style=&#34;text-decoration: none;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/and_huggingface.png&#34; alt=&#34;Hugging Face Logo&#34; style=&#34;vertical-align: middle; width: auto; max-width: 100%;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;     &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.modelscope.cn/profile/gongjy&#34; style=&#34;text-decoration: none;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/and_modelscope.png&#34; alt=&#34;ModelScope Logo&#34; style=&#34;vertical-align: middle; width: auto; max-width: 100%;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;📌 Introduction&lt;/h1&gt; &#xA;&lt;p&gt;大语言模型（Large Language Model, LLM）的出现引发了全世界对AI的空前关注。 无论是ChatGPT、DeepSeek还是Qwen，都以其惊艳的效果令人叹为观止。 然而，动辄数百亿参数的庞大规模，使得它们对个人设备而言不仅难以训练，甚至连部署都显得遥不可及。 打开大模型的“黑盒子”，探索其内部运作机制，多么令人心潮澎湃！ 遗憾的是，99%的探索只能止步于使用LoRA等技术对现有大模型进行少量微调，学习一些新指令或任务。 这就好比教牛顿如何使用21世纪的智能手机——虽然有趣，却完全偏离了理解物理本质的初衷。 与此同时，第三方的大模型框架和工具库，如transformers+trl，几乎只暴露了高度抽象的接口。 通过短短10行代码，就能完成“加载模型+加载数据集+推理+强化学习”的全流程训练。 这种高效的封装固然便利，但也像一架高速飞船，将我们与底层实现隔离开来，阻碍了深入探究LLM核心代码的机会。 然而，“用乐高拼出一架飞机，远比坐在头等舱里飞行更让人兴奋！”。 更糟糕的是，互联网上充斥着大量付费课程和营销号，以漏洞百出、一知半解的内容推销AI教程。 正因如此，本项目初衷是拉低LLM的学习门槛，让每个人都能从理解每一行代码开始， 从零开始亲手训练一个极小的语言模型。是的，从&lt;strong&gt;零开始训练&lt;/strong&gt;，而不是仅仅进行&lt;strong&gt;推理&lt;/strong&gt;！ 最低只需3块钱不到的服务器成本，就能亲身体验从0到1构建一个语言模型的全过程。 一起感受创造的乐趣吧！&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] （截至2025-02-07）MiniMind系列已完成多个型号模型的预训练，最小仅需25.8M（0.02B），即可具备流畅对话能力！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;Models List&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;模型 (大小)&lt;/th&gt; &#xA;    &lt;th&gt;推理占用 (约)&lt;/th&gt; &#xA;    &lt;th&gt;Release&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;MiniMind2-small (26M)&lt;/td&gt; &#xA;    &lt;td&gt;0.5 GB&lt;/td&gt; &#xA;    &lt;td&gt;2025.02.06&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;MiniMind2-MoE (145M)&lt;/td&gt; &#xA;    &lt;td&gt;1.0 GB&lt;/td&gt; &#xA;    &lt;td&gt;2025.02.06&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;MiniMind2 (104M)&lt;/td&gt; &#xA;    &lt;td&gt;1.0 GB&lt;/td&gt; &#xA;    &lt;td&gt;2025.02.06&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;minimind-v1-small (26M)&lt;/td&gt; &#xA;    &lt;td&gt;0.5 GB&lt;/td&gt; &#xA;    &lt;td&gt;2024.08.28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;minimind-v1-moe (4×26M)&lt;/td&gt; &#xA;    &lt;td&gt;1.0 GB&lt;/td&gt; &#xA;    &lt;td&gt;2024.09.17&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;minimind-v1 (108M)&lt;/td&gt; &#xA;    &lt;td&gt;1.0 GB&lt;/td&gt; &#xA;    &lt;td&gt;2024.09.01&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;strong&gt;项目包含&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MiniMind-LLM结构的全部代码（Dense+MoE模型）。&lt;/li&gt; &#xA; &lt;li&gt;包含Tokenizer分词器详细训练代码。&lt;/li&gt; &#xA; &lt;li&gt;包含Pretrain、SFT、LoRA、RLHF-DPO、模型蒸馏的全过程训练代码。&lt;/li&gt; &#xA; &lt;li&gt;收集、蒸馏、整理并清洗去重所有阶段的高质量数据集，且全部开源。&lt;/li&gt; &#xA; &lt;li&gt;从0实现预训练、指令微调、LoRA、DPO强化学习，白盒模型蒸馏。关键算法几乎不依赖第三方封装的框架，且全部开源。&lt;/li&gt; &#xA; &lt;li&gt;同时兼容&lt;code&gt;transformers&lt;/code&gt;、&lt;code&gt;trl&lt;/code&gt;、&lt;code&gt;peft&lt;/code&gt;等第三方主流框架。&lt;/li&gt; &#xA; &lt;li&gt;训练支持单机单卡、单机多卡(DDP、DeepSpeed)训练，支持wandb可视化训练流程。支持动态启停训练。&lt;/li&gt; &#xA; &lt;li&gt;在第三方测评榜（C-Eval、C-MMLU、OpenBookQA等）进行模型测试。&lt;/li&gt; &#xA; &lt;li&gt;实现Openai-Api协议的极简服务端，便于集成到第三方ChatUI使用（FastGPT、Open-WebUI等）。&lt;/li&gt; &#xA; &lt;li&gt;基于streamlit实现最简聊天WebUI前端。&lt;/li&gt; &#xA; &lt;li&gt;复现(蒸馏/RL)大型推理模型DeepSeek-R1的MiniMind-Reason模型，&lt;strong&gt;数据+模型&lt;/strong&gt;全部开源！&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;希望此开源项目可以帮助LLM初学者快速入门！&lt;/p&gt; &#xA;&lt;h3&gt;👉&lt;strong&gt;更新日志&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt; &lt;b&gt;2025-02-09 (newest 🎉🎉🎉)&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;迎来发布以来重大更新，Release MiniMind2 Series。&lt;/li&gt; &#xA;  &lt;li&gt;代码几乎全部重构，使用更简洁明了的统一结构。 如有旧代码的兼容性需要，可访问&lt;a href=&#34;https://github.com/jingyaogong/minimind/tree/6e9cd28ef9b34a0a10afbdf6f59e65cb6e628efb&#34;&gt;🔗旧仓库内容🔗&lt;/a&gt;。&lt;/li&gt; &#xA;  &lt;li&gt;免去数据预处理步骤。统一数据集格式，更换为&lt;code&gt;jsonl&lt;/code&gt;格式杜绝数据集下载混乱的问题。&lt;/li&gt; &#xA;  &lt;li&gt;MiniMind2系列效果相比MiniMind-V1显著提升。&lt;/li&gt; &#xA;  &lt;li&gt;小问题：{kv-cache写法更标准、MoE的负载均衡loss被考虑等等}&lt;/li&gt; &#xA;  &lt;li&gt;提供模型迁移到私有数据集的训练方案（医疗模型、自我认知样例）。&lt;/li&gt; &#xA;  &lt;li&gt;精简预训练数据集，并大幅提升预训练数据质量，大幅缩短个人快速训练所需时间，单卡3090即可2小时复现！&lt;/li&gt; &#xA;  &lt;li&gt;更新：LoRA微调脱离peft包装，从0实现LoRA过程；DPO算法从0使用PyTorch原生实现；模型白盒蒸馏原生实现。&lt;/li&gt; &#xA;  &lt;li&gt;MiniMind2-DeepSeek-R1系列蒸馏模型诞生！&lt;/li&gt; &#xA;  &lt;li&gt;MiniMind2具备一定的英文能力！&lt;/li&gt; &#xA;  &lt;li&gt;更新MiniMind2与第三方模型的基于更多大模型榜单测试性能的结果。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt; &lt;b&gt;2024-10-05&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;为MiniMind拓展了多模态能力之---视觉&lt;/li&gt; &#xA;  &lt;li&gt;移步孪生项目&lt;a href=&#34;https://github.com/jingyaogong/minimind-v&#34;&gt;minimind-v&lt;/a&gt;查看详情！&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt; &lt;b&gt;2024-09-27&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;09-27更新pretrain数据集的预处理方式，为了保证文本完整性，放弃预处理成.bin训练的形式（轻微牺牲训练速度）。&lt;/li&gt; &#xA;  &lt;li&gt;目前pretrain预处理后的文件命名为：pretrain_data.csv。&lt;/li&gt; &#xA;  &lt;li&gt;删除了一些冗余的代码。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt; &lt;b&gt;2024-09-17&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;更新minimind-v1-moe模型&lt;/li&gt; &#xA;  &lt;li&gt;为了防止歧义，不再使用mistral_tokenizer分词，全部采用自定义的minimind_tokenizer作为分词器。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt; &lt;b&gt;2024-09-01&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;更新minimind-v1 (108M)模型，采用minimind_tokenizer，预训练轮次3 + SFT轮次10，更充分训练，性能更强。&lt;/li&gt; &#xA;  &lt;li&gt;项目已部署至ModelScope创空间，可以在此网站上体验：&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.modelscope.cn/studios/gongjy/minimind&#34;&gt;🔗ModelScope在线体验🔗&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt; &lt;b&gt;2024-08-27&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;项目首次开源&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;📌 快速开始&lt;/h1&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;分享本人的软硬件配置（仅供参考）&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;CPU: Intel(R) Core(TM) i9-10980XE CPU @ 3.00GHz&lt;/li&gt; &#xA;  &lt;li&gt;RAM: 128 GB&lt;/li&gt; &#xA;  &lt;li&gt;GPU: NVIDIA GeForce RTX 3090(24GB) * 8&lt;/li&gt; &#xA;  &lt;li&gt;Ubuntu==20.04&lt;/li&gt; &#xA;  &lt;li&gt;CUDA==12.2&lt;/li&gt; &#xA;  &lt;li&gt;Python==3.10.16&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/requirements.txt&#34;&gt;requirements.txt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;第0步&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/jingyaogong/minimind.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ⅰ 测试已有模型效果&lt;/h2&gt; &#xA;&lt;h3&gt;1.环境准备&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.下载模型&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://huggingface.co/jingyaogong/MiniMind2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.命令行问答&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# load=0: load from pytorch model, load=1: load from transformers-hf model&#xA;python eval_model.py --load 1 --model_mode 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4.或启动WebUI&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 可能需要`python&amp;gt;=3.10` 安装 `pip install streamlit`&#xA;# cd scripts&#xA;streamlit run web_demo.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ⅱ 从0开始自己训练&lt;/h2&gt; &#xA;&lt;h3&gt;1.环境准备&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;注：提前测试Torch是否可用cuda&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;import torch&#xA;print(torch.cuda.is_available())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;如果不可用，请自行去&lt;a href=&#34;https://download.pytorch.org/whl/torch_stable.html&#34;&gt;torch_stable&lt;/a&gt; 下载whl文件安装。参考&lt;a href=&#34;https://blog.csdn.net/weixin_45456738/article/details/141029610?ops_request_misc=&amp;amp;request_id=&amp;amp;biz_id=102&amp;amp;utm_term=%E5%AE%89%E8%A3%85torch&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-2-141029610.nonecase&amp;amp;spm=1018.2226.3001.4187&#34;&gt;链接&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;2.数据下载&lt;/h3&gt; &#xA;&lt;p&gt;从下文提供的&lt;a href=&#34;https://www.modelscope.cn/datasets/gongjy/minimind_dataset/files&#34;&gt;数据集下载链接&lt;/a&gt; 下载需要的数据文件（创建&lt;code&gt;./dataset&lt;/code&gt;目录）并放到&lt;code&gt;./dataset&lt;/code&gt;下&lt;/p&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;注：数据集须知&lt;/summary&gt; &#xA; &lt;p&gt;默认推荐下载&lt;code&gt;pretrain_hq.jsonl&lt;/code&gt; + &lt;code&gt;sft_mini_512.jsonl&lt;/code&gt;最快速度复现Zero聊天模型。&lt;/p&gt; &#xA; &lt;p&gt;数据文件可自由选择，下文提供了多种搭配方案，可根据自己手头的训练需求和GPU资源进行适当组合。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;3.开始训练&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;3.1 预训练（学知识）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python train_pretrain.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;执行预训练，得到 &lt;code&gt;pretrain_*.pth&lt;/code&gt; 作为预训练的输出权重（其中*为模型的dimension，默认为512）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;3.2 监督微调（学对话方式）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python train_full_sft.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;执行监督微调，得到 &lt;code&gt;full_sft_*.pth&lt;/code&gt; 作为指令微调的输出权重（其中&lt;code&gt;full&lt;/code&gt;即为全参数微调）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;注：训练须知&lt;/summary&gt; &#xA; &lt;p&gt;所有训练过程默认每隔100步保存1次参数到文件&lt;code&gt;./out/***.pth&lt;/code&gt;（每次会覆盖掉旧权重文件）。&lt;/p&gt; &#xA; &lt;p&gt;简单起见，此处只写明两个阶段训练过程。如需其它训练 (LoRA, 蒸馏, 强化学习, 微调推理等) 可参考下文【实验】小节的详细说明。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;4.测试模型效果&lt;/h3&gt; &#xA;&lt;p&gt;确保需要测试的模型&lt;code&gt;*.pth&lt;/code&gt;文件位于&lt;code&gt;./out/&lt;/code&gt;目录下。 也可以直接去&lt;a href=&#34;https://www.modelscope.cn/models/gongjy/MiniMind2-PyTorch/files&#34;&gt;此处&lt;/a&gt;下载使用我训练的&lt;code&gt;*.pth&lt;/code&gt;文件。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python eval_model.py --model_mode 1 # 默认为0：测试pretrain模型效果，设置为1：测试full_sft模型效果&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;注：测试须知&lt;/summary&gt; &#xA; &lt;p&gt;如需详情，查看&lt;code&gt;eval_model.py&lt;/code&gt;脚本代码即可。model_mode分为 0: 预训练模型，1: SFT-Chat模型，2: RLHF-Chat模型，3: Reason模型&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] 所有训练脚本均为Pytorch原生框架，均支持多卡加速，假设你的设备有N (N＞1) 张显卡：&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;单机N卡启动训练方式 (DDP, 支持多机多卡集群)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;torchrun --nproc_per_node N train_xxx.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;注：其它须知&lt;/summary&gt; &#xA; &lt;p&gt;单机N卡启动训练 (DeepSpeed)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;deepspeed --master_port 29500 --num_gpus=N train_xxx.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;可根据需要开启wandb记录训练过程&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 需要登录: wandb login&#xA;torchrun --nproc_per_node N train_xxx.py --use_wandb&#xA;# and&#xA;python train_xxx.py --use_wandb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;通过添加&lt;code&gt;--use_wandb&lt;/code&gt;参数，可以记录训练过程，训练完成后，可以在wandb网站上查看训练过程。通过修改&lt;code&gt;wandb_project&lt;/code&gt; 和&lt;code&gt;wandb_run_name&lt;/code&gt;参数，可以指定项目名称和运行名称。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;📌 数据介绍&lt;/h1&gt; &#xA;&lt;h2&gt;Ⅰ Tokenizer&lt;/h2&gt; &#xA;&lt;p&gt;分词器将单词从自然语言通过“词典”映射到&lt;code&gt;0, 1, 36&lt;/code&gt;这样的数字，可以理解为数字就代表了单词在“词典”中的页码。 可以选择自己构造词表训练一个“词典”，代码可见&lt;code&gt;./scripts/train_tokenizer.py&lt;/code&gt;（仅供学习参考，若非必要无需再自行训练，MiniMind已自带tokenizer）。 或者选择比较出名的开源大模型分词器， 正如同直接用新华/牛津词典的优点是token编码压缩率很好，缺点是页数太多，动辄数十万个词汇短语； 自己训练的分词器，优点是词表长度和内容随意控制，缺点是压缩率很低（例如&#34;hello&#34;也许会被拆分为&#34;h e l l o&#34; 五个独立的token），且生僻词难以覆盖。 “词典”的选择固然很重要，LLM的输出本质上是SoftMax到词典N个词的多分类问题，然后通过“词典”解码到自然语言。 因为MiniMind体积需要严格控制，为了避免模型头重脚轻（词嵌入embedding层参数在LLM占比太高），所以词表长度短短益善。&lt;/p&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;Tokenizer介绍&lt;/summary&gt; &#xA; &lt;p&gt;第三方强大的开源模型例如Yi、qwen、chatglm、mistral、Llama3的tokenizer词表长度如下：&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt;&#xA;    &lt;th&gt;Tokenizer模型&lt;/th&gt;&#xA;    &lt;th&gt;词表大小&lt;/th&gt;&#xA;    &lt;th&gt;来源&lt;/th&gt;&#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt;&#xA;    &lt;td&gt;yi tokenizer&lt;/td&gt;&#xA;    &lt;td&gt;64,000&lt;/td&gt;&#xA;    &lt;td&gt;01万物（中国）&lt;/td&gt;&#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt;&#xA;    &lt;td&gt;qwen2 tokenizer&lt;/td&gt;&#xA;    &lt;td&gt;151,643&lt;/td&gt;&#xA;    &lt;td&gt;阿里云（中国）&lt;/td&gt;&#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt;&#xA;    &lt;td&gt;glm tokenizer&lt;/td&gt;&#xA;    &lt;td&gt;151,329&lt;/td&gt;&#xA;    &lt;td&gt;智谱AI（中国）&lt;/td&gt;&#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt;&#xA;    &lt;td&gt;mistral tokenizer&lt;/td&gt;&#xA;    &lt;td&gt;32,000&lt;/td&gt;&#xA;    &lt;td&gt;Mistral AI（法国）&lt;/td&gt;&#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt;&#xA;    &lt;td&gt;llama3 tokenizer&lt;/td&gt;&#xA;    &lt;td&gt;128,000&lt;/td&gt;&#xA;    &lt;td&gt;Meta（美国）&lt;/td&gt;&#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt;&#xA;    &lt;td&gt;minimind tokenizer&lt;/td&gt;&#xA;    &lt;td&gt;6,400&lt;/td&gt;&#xA;    &lt;td&gt;自定义&lt;/td&gt;&#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;👉2024-09-17更新：为了防止过去的版本歧义&amp;amp;控制体积，minimind所有模型均使用minimind_tokenizer分词，废弃所有mistral_tokenizer版本。&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;pre&gt;&lt;code&gt;# 一些自言自语&#xA;&amp;gt; 尽管minimind_tokenizer长度很小，编解码效率弱于qwen2、glm等中文友好型分词器。&#xA;&amp;gt; 但minimind模型选择了自己训练的minimind_tokenizer作为分词器，以保持整体参数轻量，避免编码层和计算层占比失衡，头重脚轻，因为minimind的词表大小只有6400。&#xA;&amp;gt; 且minimind在实际测试中没有出现过生僻词汇解码失败的情况，效果良好。&#xA;&amp;gt; 由于自定义词表压缩长度到6400，使得LLM总参数量最低只有25.8M。&#xA;&amp;gt; 训练数据`tokenizer_train.jsonl`均来自于`匠数大模型数据集`，这部分数据相对次要，如需训练可以自由选择。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Ⅱ Pretrain数据&lt;/h2&gt; &#xA;&lt;p&gt;经历了MiniMind-V1的低质量预训练数据，导致模型胡言乱语的教训，&lt;code&gt;2025-02-05&lt;/code&gt; 之后决定不再采用大规模无监督的数据集做预训练。 进而尝试把&lt;a href=&#34;https://www.modelscope.cn/datasets/deepctrl/deepctrl-sft-data&#34;&gt;匠数大模型数据集&lt;/a&gt;的中文部分提取出来， 清洗出字符&lt;code&gt;&amp;lt;512&lt;/code&gt;长度的大约1.6GB的语料直接拼接成预训练数据 &lt;code&gt;pretrain_hq.jsonl&lt;/code&gt;，hq即为high quality（当然也还不算high，提升数据质量无止尽）。&lt;/p&gt; &#xA;&lt;p&gt;文件&lt;code&gt;pretrain_hq.jsonl&lt;/code&gt; 数据格式为&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;{&#34;text&#34;: &#34;如何才能摆脱拖延症？ 治愈拖延症并不容易，但以下建议可能有所帮助...&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ⅲ SFT数据&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.modelscope.cn/datasets/deepctrl/deepctrl-sft-data&#34;&gt;匠数大模型SFT数据集&lt;/a&gt; “是一个完整、格式统一、安全的大模型训练和研究资源。 从网络上的公开数据源收集并整理了大量开源数据集，对其进行了格式统一，数据清洗， 包含10M条数据的中文数据集和包含2M条数据的英文数据集。” 以上是官方介绍，下载文件后的数据总量大约在4B tokens，肯定是适合作为中文大语言模型的SFT数据的。 但是官方提供的数据格式很乱，全部用来sft代价太大。 我将把官方数据集进行了二次清洗，把含有符号污染和噪声的条目去除；另外依然只保留了总长度&lt;code&gt;&amp;lt;512&lt;/code&gt; 的内容，此阶段希望通过大量对话补充预训练阶段欠缺的知识。 导出文件为&lt;code&gt;sft_512.jsonl&lt;/code&gt;(~7.5GB)。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.modelscope.cn/organization/Magpie-Align&#34;&gt;Magpie-SFT数据集&lt;/a&gt; 收集了~1M条来自Qwen2/2.5的高质量对话，我将这部分数据进一步清洗，把总长度&lt;code&gt;&amp;lt;2048&lt;/code&gt;的部分导出为&lt;code&gt;sft_2048.jsonl&lt;/code&gt;(~9GB)。 长度&lt;code&gt;&amp;lt;1024&lt;/code&gt;的部分导出为&lt;code&gt;sft_1024.jsonl&lt;/code&gt;(~5.5GB)，用大模型对话数据直接进行sft就属于“黑盒蒸馏”的范畴。&lt;/p&gt; &#xA;&lt;p&gt;进一步清洗前两步sft的数据（只保留中文字符占比高的内容），筛选长度&lt;code&gt;&amp;lt;512&lt;/code&gt;的对话，得到&lt;code&gt;sft_mini_512.jsonl&lt;/code&gt;(~1.2GB)。&lt;/p&gt; &#xA;&lt;p&gt;所有sft文件 &lt;code&gt;sft_X.jsonl&lt;/code&gt; 数据格式均为&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;{&#xA;    &#34;conversations&#34;: [&#xA;        {&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;你好&#34;},&#xA;        {&#34;role&#34;: &#34;assistant&#34;, &#34;content&#34;: &#34;你好！&#34;},&#xA;        {&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;再见&#34;},&#xA;        {&#34;role&#34;: &#34;assistant&#34;, &#34;content&#34;: &#34;再见！&#34;}&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ⅳ RLHF数据&lt;/h2&gt; &#xA;&lt;p&gt;来自&lt;a href=&#34;https://www.modelscope.cn/datasets/Magpie-Align/MagpieLM-DPO-Data-v0.1&#34;&gt;Magpie-DPO数据集&lt;/a&gt; 大约200k条偏好数据（均是英文）生成自Llama3.1-70B/8B，可以用于训练奖励模型，优化模型回复质量，使其更加符合人类偏好。 这里将数据总长度&lt;code&gt;&amp;lt;3000&lt;/code&gt;的内容重组为&lt;code&gt;dpo.jsonl&lt;/code&gt;(~0.9GB)，包含&lt;code&gt;chosen&lt;/code&gt;和&lt;code&gt;rejected&lt;/code&gt;两个字段，&lt;code&gt;chosen&lt;/code&gt; 为偏好的回复，&lt;code&gt;rejected&lt;/code&gt;为拒绝的回复。&lt;/p&gt; &#xA;&lt;p&gt;文件 &lt;code&gt;dpo.jsonl&lt;/code&gt; 数据格式为&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;{&#xA;  &#34;chosen&#34;: [&#xA;    {&#34;content&#34;: &#34;Q&#34;, &#34;role&#34;: &#34;user&#34;}, &#xA;    {&#34;content&#34;: &#34;good answer&#34;, &#34;role&#34;: &#34;assistant&#34;}&#xA;  ], &#xA;  &#34;rejected&#34;: [&#xA;    {&#34;content&#34;: &#34;Q&#34;, &#34;role&#34;: &#34;user&#34;}, &#xA;    {&#34;content&#34;: &#34;bad answer&#34;, &#34;role&#34;: &#34;assistant&#34;}&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ⅴ Reason数据集：&lt;/h2&gt; &#xA;&lt;p&gt;不得不说2025年2月谁能火的过DeepSeek... 也激发了我对RL引导的推理模型的浓厚兴趣，目前已经用Qwen2.5复现了R1-Zero。 如果有时间+效果work（但99%基模能力不足）我会在之后更新MiniMind基于RL训练的推理模型而不是蒸馏模型。 时间有限，最快的低成本方案依然是直接蒸馏（黑盒方式）。 耐不住R1太火，短短几天就已经存在一些R1的蒸馏数据集&lt;a href=&#34;https://www.modelscope.cn/datasets/Magpie-Align/Magpie-Reasoning-V2-250K-CoT-Deepseek-R1-Llama-70B&#34;&gt;R1-Llama-70B&lt;/a&gt;、&lt;a href=&#34;https://www.modelscope.cn/datasets/AI-ModelScope/R1-Distill-SFT&#34;&gt;R1-Distill-SFT&lt;/a&gt;、 &lt;a href=&#34;https://huggingface.co/datasets/shareAI/Alpaca-Distill-R1-ZH&#34;&gt;Alpaca-Distill-R1&lt;/a&gt;、 &lt;a href=&#34;https://huggingface.co/datasets/jinliuxi/deepseek_r1_zh&#34;&gt;deepseek_r1_zh&lt;/a&gt;等等，纯中文的数据可能比较少。 最终整合它们，导出文件为&lt;code&gt;r1_mix_1024.jsonl&lt;/code&gt;，数据格式和&lt;code&gt;sft_X.jsonl&lt;/code&gt;一致。&lt;/p&gt; &#xA;&lt;h2&gt;Ⅵ 更多数据集&lt;/h2&gt; &#xA;&lt;p&gt;目前已经有&lt;a href=&#34;https://github.com/HqWu-HITCS/Awesome-Chinese-LLM&#34;&gt;HqWu-HITCS/Awesome-Chinese-LLM&lt;/a&gt; 在收集和梳理中文LLM相关的开源模型、应用、数据集及教程等资料，并持续更新这方面的最新进展。全面且专业，Respect！&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Ⅷ 数据集下载&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] 2025-02-05后，开源MiniMind最终训练所用的所有数据集，因此无需再自行预处理大规模数据集，避免重复性的数据处理工作。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;MiniMind训练数据集 (&lt;a href=&#34;https://www.modelscope.cn/datasets/gongjy/minimind_dataset/files&#34;&gt;ModelScope&lt;/a&gt; | &lt;a href=&#34;https://huggingface.co/datasets/jingyaogong/minimind_dataset/tree/main&#34;&gt;HuggingFace&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;无需全部clone，可单独下载所需的文件&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;将下载的数据集文件放到&lt;code&gt;./dataset/&lt;/code&gt;目录下（✨为推荐的必须项）&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./dataset/&#xA;├── dpo.jsonl (909MB)&#xA;├── lora_identity.jsonl (22.8KB)&#xA;├── lora_medical.jsonl (34MB)&#xA;├── pretrain_hq.jsonl (1.6GB, ✨)&#xA;├── r1_mix_1024.jsonl (340MB)&#xA;├── sft_1024.jsonl (5.6GB)&#xA;├── sft_2048.jsonl (9GB)&#xA;├── sft_512.jsonl (7.5GB)&#xA;├── sft_mini_512.jsonl (1.2GB, ✨)&#xA;└── tokenizer_train.jsonl (1GB)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;注：各数据集简介&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;dpo.jsonl&lt;/code&gt; --RLHF阶段数据集&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;lora_identity.jsonl&lt;/code&gt; --自我认知数据集（例如：你是谁？我是minimind...），推荐用于lora训练（亦可用于全参SFT，勿被名字局限）&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;lora_medical.jsonl&lt;/code&gt; --医疗问答数据集，推荐用于lora训练（亦可用于全参SFT，勿被名字局限）&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;pretrain_hq.jsonl&lt;/code&gt;✨ --预训练数据集，整合自jiangshu科技&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;r1_mix_1024.jsonl&lt;/code&gt; --DeepSeek-R1-1.5B蒸馏数据，每条数据字符最大长度为1024（因此训练时设置max_seq_len=1024）&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;sft_1024.jsonl&lt;/code&gt; --整合自Qwen2.5蒸馏数据（是sft_2048的子集），每条数据字符最大长度为1024（因此训练时设置max_seq_len=1024）&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;sft_2048.jsonl&lt;/code&gt; --整合自Qwen2.5蒸馏数据，每条数据字符最大长度为2048（因此训练时设置max_seq_len=2048）&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;sft_512.jsonl&lt;/code&gt; --整合自匠数科技SFT数据，每条数据字符最大长度为512（因此训练时设置max_seq_len=512）&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;sft_mini_512.jsonl&lt;/code&gt;✨ --极简整合自匠数科技SFT数据+Qwen2.5蒸馏数据（用于快速训练Zero模型），每条数据字符最大长度为512（因此训练时设置max_seq_len=512）&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;tokenizer_train.jsonl&lt;/code&gt; --均来自于&lt;code&gt;匠数大模型数据集&lt;/code&gt;，这部分数据相对次要，（不推荐自己重复训练tokenizer，理由如上）如需自己训练tokenizer可以自由选择数据集。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/dataset.jpg&#34; alt=&#34;dataset&#34;&gt;&lt;/p&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;说明 &amp;amp; 推荐训练方案&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;MiniMind2 Series均经过共约20GB语料训练，大约4B tokens，即对应上面的数据组合训练结果（开销：💰💰💰💰💰💰💰💰，效果：😊😊😊😊😊😊）&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;想要最快速度从0实现Zero模型，推荐使用&lt;code&gt;pretrain_hq.jsonl&lt;/code&gt; + &lt;code&gt;sft_mini_512.jsonl&lt;/code&gt; 的数据组合，具体花销和效果可查看下文表格（开销：💰，效果：😊😊）&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;推荐具备一定算力资源或更在意效果的朋友可以考虑前者完整复现MiniMind2；仅有单卡GPU或在乎短时间快速复现的朋友强烈推荐后者；&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;【折中方案】亦可选择例如&lt;code&gt;sft_mini_512.jsonl&lt;/code&gt;、&lt;code&gt;sft_1024.jsonl&lt;/code&gt;中等规模数据进行自由组合训练（开销：💰💰💰，效果：😊😊😊😊）。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;📌 Model Structure&lt;/h1&gt; &#xA;&lt;p&gt;MiniMind-Dense（和&lt;a href=&#34;https://ai.meta.com/blog/meta-llama-3-1/&#34;&gt;Llama3.1&lt;/a&gt;一样）使用了Transformer的Decoder-Only结构，跟GPT-3的区别在于：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;采用了GPT-3的预标准化方法，也就是在每个Transformer子层的输入上进行归一化，而不是在输出上。具体来说，使用的是RMSNorm归一化函数。&lt;/li&gt; &#xA; &lt;li&gt;用SwiGLU激活函数替代了ReLU，这样做是为了提高性能。&lt;/li&gt; &#xA; &lt;li&gt;像GPT-Neo一样，去掉了绝对位置嵌入，改用了旋转位置嵌入（RoPE），这样在处理超出训练长度的推理时效果更好。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;MiniMind-MoE模型，它的结构基于Llama3和&lt;a href=&#34;https://arxiv.org/pdf/2405.04434&#34;&gt;Deepseek-V2/3&lt;/a&gt;中的MixFFN混合专家模块。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DeepSeek-V2在前馈网络（FFN）方面，采用了更细粒度的专家分割和共享的专家隔离技术，以提高Experts的效果。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;MiniMind的整体结构一致，只是在RoPE计算、推理函数和FFN层的代码上做了一些小调整。 其结构如下图（重绘版）：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/LLM-structure.png&#34; alt=&#34;structure&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/LLM-structure-moe.png&#34; alt=&#34;structure-moe&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;修改模型配置见&lt;a href=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/model/LMConfig.py&#34;&gt;./model/LMConfig.py&lt;/a&gt;。 参考模型参数版本见下表：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model Name&lt;/th&gt; &#xA;   &lt;th&gt;params&lt;/th&gt; &#xA;   &lt;th&gt;len_vocab&lt;/th&gt; &#xA;   &lt;th&gt;rope_theta&lt;/th&gt; &#xA;   &lt;th&gt;n_layers&lt;/th&gt; &#xA;   &lt;th&gt;d_model&lt;/th&gt; &#xA;   &lt;th&gt;kv_heads&lt;/th&gt; &#xA;   &lt;th&gt;q_heads&lt;/th&gt; &#xA;   &lt;th&gt;share+route&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiniMind2-Small&lt;/td&gt; &#xA;   &lt;td&gt;26M&lt;/td&gt; &#xA;   &lt;td&gt;6400&lt;/td&gt; &#xA;   &lt;td&gt;1e6&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;512&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiniMind2-MoE&lt;/td&gt; &#xA;   &lt;td&gt;145M&lt;/td&gt; &#xA;   &lt;td&gt;6400&lt;/td&gt; &#xA;   &lt;td&gt;1e6&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;640&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;1+4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiniMind2&lt;/td&gt; &#xA;   &lt;td&gt;104M&lt;/td&gt; &#xA;   &lt;td&gt;6400&lt;/td&gt; &#xA;   &lt;td&gt;1e6&lt;/td&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;768&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;minimind-v1-small&lt;/td&gt; &#xA;   &lt;td&gt;26M&lt;/td&gt; &#xA;   &lt;td&gt;6400&lt;/td&gt; &#xA;   &lt;td&gt;1e4&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;512&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;minimind-v1-moe&lt;/td&gt; &#xA;   &lt;td&gt;4×26M&lt;/td&gt; &#xA;   &lt;td&gt;6400&lt;/td&gt; &#xA;   &lt;td&gt;1e4&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;512&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;1+4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;minimind-v1&lt;/td&gt; &#xA;   &lt;td&gt;108M&lt;/td&gt; &#xA;   &lt;td&gt;6400&lt;/td&gt; &#xA;   &lt;td&gt;1e4&lt;/td&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;768&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;📌 Experiment&lt;/h1&gt; &#xA;&lt;h2&gt;Ⅰ 训练开销&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;时间单位&lt;/strong&gt;：小时 (h)。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;成本单位&lt;/strong&gt;：人民币 (￥)；7￥ ≈ 1美元。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;3090 租卡单价&lt;/strong&gt;：≈1.3￥/h（可自行参考实时市价）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;参考标准&lt;/strong&gt;：表格仅实测 &lt;code&gt;pretrain&lt;/code&gt; 和 &lt;code&gt;sft_mini_512&lt;/code&gt; 两个数据集的训练时间，其它耗时根据数据集大小估算（可能存在些许出入）。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;基于 3090 （单卡）成本计算&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model Name&lt;/th&gt; &#xA;   &lt;th&gt;params&lt;/th&gt; &#xA;   &lt;th&gt;pretrain&lt;/th&gt; &#xA;   &lt;th&gt;sft_mini_512&lt;/th&gt; &#xA;   &lt;th&gt;sft_512&lt;/th&gt; &#xA;   &lt;th&gt;sft_1024&lt;/th&gt; &#xA;   &lt;th&gt;sft_2048&lt;/th&gt; &#xA;   &lt;th&gt;RLHF&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiniMind2-Small&lt;/td&gt; &#xA;   &lt;td&gt;26M&lt;/td&gt; &#xA;   &lt;td&gt;≈1.1h&lt;br&gt;≈1.43￥&lt;/td&gt; &#xA;   &lt;td&gt;≈1h&lt;br&gt;≈1.3￥&lt;/td&gt; &#xA;   &lt;td&gt;≈6h&lt;br&gt;≈7.8￥&lt;/td&gt; &#xA;   &lt;td&gt;≈4.58h&lt;br&gt;≈5.95￥&lt;/td&gt; &#xA;   &lt;td&gt;≈7.5h&lt;br&gt;≈9.75￥&lt;/td&gt; &#xA;   &lt;td&gt;≈1h&lt;br&gt;≈1.3￥&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiniMind2&lt;/td&gt; &#xA;   &lt;td&gt;104M&lt;/td&gt; &#xA;   &lt;td&gt;≈3.9h&lt;br&gt;≈5.07￥&lt;/td&gt; &#xA;   &lt;td&gt;≈3.3h&lt;br&gt;≈4.29￥&lt;/td&gt; &#xA;   &lt;td&gt;≈20h&lt;br&gt;≈26￥&lt;/td&gt; &#xA;   &lt;td&gt;≈15h&lt;br&gt;≈19.5￥&lt;/td&gt; &#xA;   &lt;td&gt;≈25h&lt;br&gt;≈32.5￥&lt;/td&gt; &#xA;   &lt;td&gt;≈3h&lt;br&gt;≈3.9￥&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;训练开销总结&amp;amp;预测&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;MiniMind2-Small参数&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;pretrain_hq&lt;/code&gt;+&lt;code&gt;sft_mini_512&lt;/code&gt;数据集 &lt;br&gt;单卡3090 (1 epoch) + 2.1小时 + 花费2.73元人民币 &lt;br&gt;即可从0训练出MiniMind-Zero-0.025B模型!!!&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;MiniMind2-Small参数&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;pretrain_hq&lt;/code&gt;+&lt;code&gt;sft_512&lt;/code&gt;+&lt;code&gt;sft_2048&lt;/code&gt;+&lt;code&gt;dpo&lt;/code&gt;数据集 &lt;br&gt;单卡3090 (2 epochs) + 大约38.16小时 + 花费49.61元人民币 &lt;br&gt;即可从0训练出MiniMind2-Small-0.025B模型!!!&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;MiniMind2参数&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;pretrain_hq&lt;/code&gt;+&lt;code&gt;sft_512&lt;/code&gt;+&lt;code&gt;sft_2048&lt;/code&gt;+&lt;code&gt;dpo&lt;/code&gt;数据集 &lt;br&gt;单卡3090 (2 epochs) + 大约122小时 + 花费158.6元人民币 &lt;br&gt;即可从0训练出MiniMind2-0.1B模型!!!&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;✨基于单卡NVIDIA 3090的&lt;code&gt;MiniMind-Zero&lt;/code&gt;从0训练仅需&lt;code&gt;2小时&lt;/code&gt; + &lt;code&gt;3块钱&lt;/code&gt;，实现ChatBot效果！&lt;/p&gt; &#xA;&lt;p&gt;✨PS：若采用8卡4090训练，总用时甚至可以压缩到10分钟以内！（由于时间更短，花费同样3元左右，与单卡成本相当）&lt;/p&gt; &#xA;&lt;p&gt;✨以极低极低的门槛，实现人人可玩的大模型自由！这正是MiniMind系列的诞生初衷！&lt;/p&gt; &#xA;&lt;p&gt;✨仅价值&lt;code&gt;3块钱&lt;/code&gt;成本的&lt;code&gt;MiniMind-Zero&lt;/code&gt;并不是噱头！Chat测试：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;👶: 请介绍一下自己。&#xA;🤖️: 作为人工智能，我没有实际的生活，也没有自我意识，所以没有自己的生活。我被设计成能够帮助用户解答问题、提供信息、进行对话等。我的设计和功能是由计算机科学、机器学习、人工智能技术和算法所构建的，我通过编程和算法实现。&#xA;&#xA;👶: 推荐一些杭州的特色美食吧。&#xA;🤖️: 杭州有很多美味的特色美食，比如鸡肉串、鳗鱼头、水煮鱼、豆腐脑等。这些美食都非常美味，有着独特的风味和口感，绝对是值得一试的美食。&#xA;&#xA;👶: 请为我讲解“大语言模型”这个概念。&#xA;🤖️: 大语言模型是一种人工智能技术，它使用大量的文本数据来训练模型，然后在不断的迭代中不断优化模型。它的目标是根据输入的数据来生成符合特定需求的文本，这些文本可以是任何你感兴趣的主题。&#xA;&#xA;👶: Introduce the history of the United States, please.&#xA;🤖️: 您提到的“Introok&#39;s the believeations of theument.&#34; 这个名字来源于中国古代的&#34;groty of of the change.&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;极速且初具效果，甚至仍然可以进一步压缩获取更小更优质的训练数据。 Zero模型权重保存为 &lt;code&gt;full_sft_512_zero.pth&lt;/code&gt;（见下文MiniMind模型文件链接），如有兴趣可下载检验此模型效果。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Ⅱ 主要训练步骤&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;1. 预训练(Pretrain)&lt;/strong&gt;:&lt;/h3&gt; &#xA;&lt;p&gt;LLM首先要学习的并非直接与人交流，而是让网络参数中充满知识的墨水，“墨水” 理论上喝的越饱越好，产生大量的对世界的知识积累。 预训练就是让Model先埋头苦学大量基本的知识，例如从Wiki百科、新闻、书籍整理大规模的高质量训练数据。 这个过程是“无监督”的，即人类不需要在过程中做任何“有监督”的校正，而是由模型自己从大量文本中总结规律学习知识点。 模型此阶段目的只有一个：&lt;strong&gt;学会词语接龙&lt;/strong&gt;。例如我们输入“秦始皇”四个字，它可以接龙“是中国的第一位皇帝”。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;torchrun --nproc_per_node 1 train_pretrain.py # 1即为单卡训练，可根据硬件情况自行调整 (设置&amp;gt;=2)&#xA;# or&#xA;python train_pretrain.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;训练后的模型权重文件默认每隔&lt;code&gt;100步&lt;/code&gt;保存为: &lt;code&gt;pretrain_*.pth&lt;/code&gt;（* 为模型具体dimension，每次保存时新文件会覆盖旧文件）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;strong&gt;2. 有监督微调(Supervised Fine-Tuning)&lt;/strong&gt;:&lt;/h3&gt; &#xA;&lt;p&gt;经过预训练，LLM此时已经掌握了大量知识，然而此时它只会无脑地词语接龙，还不会与人聊天。 SFT阶段就需要把半成品LLM施加一个自定义的聊天模板进行微调。 例如模型遇到这样的模板【问题-&amp;gt;回答，问题-&amp;gt;回答】后不再无脑接龙，而是意识到这是一段完整的对话结束。 称这个过程为指令微调，就如同让已经学富五车的「牛顿」先生适应21世纪智能手机的聊天习惯，学习屏幕左侧是对方消息，右侧是本人消息这个规律。 在训练时，MiniMind的指令和回答长度被截断在512，是为了节省显存空间。就像我们学习时，会先从短的文章开始，当学会写作200字作文后，800字文章也可以手到擒来。 在需要长度拓展时，只需要准备少量的2k/4k/8k长度对话数据进行进一步微调即可（此时最好配合RoPE-NTK的基准差值）。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;在推理时通过调整RoPE线性差值，实现免训练长度外推到2048及以上将会很方便。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;torchrun --nproc_per_node 1 train_full_sft.py&#xA;# or&#xA;python train_full_sft.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;训练后的模型权重文件默认每隔&lt;code&gt;100步&lt;/code&gt;保存为: &lt;code&gt;full_sft_*.pth&lt;/code&gt;（* 为模型具体dimension，每次保存时新文件会覆盖旧文件）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Ⅲ 其它训练步骤&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;3. 人类反馈强化学习(Reinforcement Learning from Human Feedback, RLHF)&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;在前面的训练步骤中，模型已经具备了基本的对话能力，但是这样的能力完全基于单词接龙，缺少正反样例的激励。 模型此时尚未知什么回答是好的，什么是差的。我们希望它能够更符合人的偏好，降低让人类不满意答案的产生概率。 这个过程就像是让模型参加新的培训，从优秀员工的作为例子，消极员工作为反例，学习如何更好地回复。 此处使用的是RLHF系列之-直接偏好优化(Direct Preference Optimization, DPO)。 与PPO(Proximal Policy Optimization)这种需要奖励模型、价值模型的RL算法不同； DPO通过推导PPO奖励模型的显式解，把在线奖励模型换成离线数据，Ref模型输出可以提前保存。 DPO性能几乎不变，只用跑 actor_model 和 ref_model 两个模型，大大节省显存开销和增加训练稳定性。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;注：RLHF训练步骤&lt;strong&gt;并非必须&lt;/strong&gt;，此步骤难以提升模型“智力”而通常仅用于提升模型的“礼貌”，有利（符合偏好、减少有害内容）也有弊（样本收集昂贵、反馈偏差、多样性损失）。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;torchrun --nproc_per_node 1 train_dpo.py&#xA;# or&#xA;python train_dpo.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;训练后的模型权重文件默认每隔&lt;code&gt;100步&lt;/code&gt;保存为: &lt;code&gt;rlhf_*.pth&lt;/code&gt;（* 为模型具体dimension，每次保存时新文件会覆盖旧文件）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;strong&gt;4. 知识蒸馏(Knowledge Distillation, KD)&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;在前面的所有训练步骤中，模型已经完全具备了基本能力，通常可以学成出师了。 而知识蒸馏可以进一步优化模型的性能和效率，所谓知识蒸馏，即学生模型面向教师模型学习。 教师模型通常是经过充分训练的大模型，具有较高的准确性和泛化能力。 学生模型是一个较小的模型，目标是学习教师模型的行为，而不是直接从原始数据中学习。 在SFT学习中，模型的目标是拟合词Token分类硬标签（hard labels），即真实的类别标签（如 0 或 6400）。 在知识蒸馏中，教师模型的softmax概率分布被用作软标签（soft labels）。小模型仅学习软标签，并使用KL-Loss来优化模型的参数。 通俗地说，SFT直接学习老师给的解题答案。而KD过程相当于“打开”老师聪明的大脑，尽可能地模仿老师“大脑”思考问题的神经元状态。 例如，当老师模型计算&lt;code&gt;1+1=2&lt;/code&gt;这个问题的时候，最后一层神经元a状态为0，神经元b状态为100，神经元c状态为-99... 学生模型通过大量数据，学习教师模型大脑内部的运转规律。这个过程即称之为：知识蒸馏。 知识蒸馏的目的只有一个：让小模型体积更小的同时效果更好。 然而随着LLM诞生和发展，模型蒸馏一词被广泛滥用，从而产生了“白盒/黑盒”知识蒸馏两个派别。 GPT-4这种闭源模型，由于无法获取其内部结构，因此只能面向它所输出的数据学习，这个过程称之为黑盒蒸馏，也是大模型时代最普遍的做法。 黑盒蒸馏与SFT过程完全一致，只不过数据是从大模型的输出收集，因此只需要准备数据并且进一步FT即可。 注意更改被加载的基础模型为&lt;code&gt;full_sft_*.pth&lt;/code&gt;，即基于微调模型做进一步的蒸馏学习。 &lt;code&gt;./dataset/sft_1024.jsonl&lt;/code&gt;与&lt;code&gt;./dataset/sft_2048.jsonl&lt;/code&gt; 均收集自qwen2.5-7/72B-Instruct大模型，可直接用于SFT以获取Qwen的部分行为。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 注意需要更改train_full_sft.py数据集路径，以及max_seq_len  &#xA;torchrun --nproc_per_node 1 train_full_sft.py&#xA;# or&#xA;python train_full_sft.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;训练后的模型权重文件默认每隔&lt;code&gt;100步&lt;/code&gt;同样保存为: &lt;code&gt;full_sft_*.pth&lt;/code&gt;（*为模型具体dimension，每次保存时新文件会覆盖旧文件）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;此处应当着重介绍MiniMind实现的白盒蒸馏代码&lt;code&gt;train_distillation.py&lt;/code&gt;，由于MiniMind同系列本身并不存在强大的教师模型，因此白盒蒸馏代码仅作为学习参考。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;torchrun --nproc_per_node 1 train_distillation.py&#xA;# or&#xA;python train_distillation.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;strong&gt;5. LoRA (Low-Rank Adaptation)&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;LoRA是一种高效的参数高效微调（Parameter-Efficient Fine-Tuning, PEFT）方法，旨在通过低秩分解的方式对预训练模型进行微调。 相比于全参数微调（Full Fine-Tuning），LoRA 只需要更新少量的参数。 LoRA 的核心思想是：在模型的权重矩阵中引入低秩分解，仅对低秩部分进行更新，而保持原始预训练权重不变。 代码可见&lt;code&gt;./model/model_lora.py&lt;/code&gt;和&lt;code&gt;train_lora.py&lt;/code&gt;，完全从0实现LoRA流程，不依赖第三方库的封装。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;torchrun --nproc_per_node 1 train_lora.py&#xA;# or&#xA;python train_lora.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;训练后的模型权重文件默认每隔&lt;code&gt;100步&lt;/code&gt;保存为: &lt;code&gt;lora_xxx_*.pth&lt;/code&gt;（* 为模型具体dimension，每次保存时新文件会覆盖旧文件）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;非常多的人困惑，如何使模型学会自己私有领域的知识？如何准备数据集？如何迁移通用领域模型打造垂域模型？ 这里举几个例子，对于通用模型，医学领域知识欠缺，可以尝试在原有模型基础上加入领域知识，以获得更好的性能。 同时，我们通常不希望学会领域知识的同时损失原有基础模型的其它能力，此时LoRA可以很好的改善这个问题。 只需要准备如下格式的对话数据集放置到&lt;code&gt;./dataset/lora_xxx.jsonl&lt;/code&gt;，启动 &lt;code&gt;python train_lora.py&lt;/code&gt; 训练即可得到&lt;code&gt;./out/lora/lora_xxx.pth&lt;/code&gt;新模型权重。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;医疗场景&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; {&#34;conversations&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;请问颈椎病的人枕头多高才最好？&#34;}, {&#34;role&#34;: &#34;assistant&#34;, &#34;content&#34;: &#34;颈椎病患者选择枕头的高度应该根据...&#34;}]}&#xA; {&#34;conversations&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;请问xxx&#34;}, {&#34;role&#34;: &#34;assistant&#34;, &#34;content&#34;: &#34;xxx...&#34;}]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;自我认知场景&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; {&#34;conversations&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;你叫什么名字？&#34;}, {&#34;role&#34;: &#34;assistant&#34;, &#34;content&#34;: &#34;我叫minimind...&#34;}]}&#xA; {&#34;conversations&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;你是谁&#34;}, {&#34;role&#34;: &#34;assistant&#34;, &#34;content&#34;: &#34;我是...&#34;}]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;此时【基础模型+LoRA模型】即可获得医疗场景模型增强的能力，相当于为基础模型增加了LoRA外挂，这个过程并不损失基础模型的本身能力。 我们可以通过&lt;code&gt;eval_model.py&lt;/code&gt;进行模型评估测试。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 注意：model_mode即选择基础模型的类型，这和train_lora是基于哪个模型训练的相关，确保统一即可。&#xA;python eval_model.py --lora_name &#39;lora_medical&#39; --model_mode 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;小测试&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;👶: 我最近经常感到头晕，可能是什么原因？&#xA;🤖️: 头晕可能是由于多种原因，包括但不限于：心脏疾病、眼睛损伤、过敏反应、皮肤问题、过敏反应、压力、焦虑、疲劳、药物副作用、性功能障碍或者其他...&#xA;&#xA;---&#xA;&#xA;👶: 你和openai是什么关系？&#xA;🤖️: 我是 MiniMind，一个由 Jingyao Gong 开发的人工智能助手。我通过自然语言处理和算法训练来与用户进行交互。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PS：只要有所需要的数据集，也可以full_sft全参微调（需要进行通用知识的混合配比，否则过拟合领域数据会让模型变傻，损失通用性）&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;6. 训练推理模型 (Reasoning Model)&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;DeepSeek-R1实在太火了，几乎重新指明了未来LLM的新范式。 论文指出&lt;code&gt;&amp;gt;3B&lt;/code&gt;的模型经历多次反复的冷启动和RL奖励训练才能获得肉眼可见的推理能力提升。 最快最稳妥最经济的做法，以及最近爆发的各种各样所谓的推理模型几乎都是直接面向数据进行蒸馏训练， 但由于缺乏技术含量，蒸馏派被RL派瞧不起（hhhh）。 本人迅速已经在Qwen系列1.5B小模型上进行了尝试，很快复现了Zero过程的数学推理能力。 然而一个遗憾的共识是：参数太小的模型直接通过冷启动SFT+GRPO几乎不可能获得任何推理效果。 MiniMind2第一时间只能坚定不移的选择做蒸馏派，日后基于0.1B模型的RL如果同样取得小小进展会更新此部分的训练方案。&lt;/p&gt; &#xA;&lt;p&gt;做蒸馏需要准备的依然是和SFT阶段同样格式的数据即可，数据集来源已如上文介绍。数据格式例如：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;conversations&#34;: [&#xA;    {&#xA;      &#34;role&#34;: &#34;user&#34;,&#xA;      &#34;content&#34;: &#34;你好，我是小芳，很高兴认识你。&#34;&#xA;    },&#xA;    {&#xA;      &#34;role&#34;: &#34;assistant&#34;,&#xA;      &#34;content&#34;: &#34;&amp;lt;think&amp;gt;\n你好！我是由中国的个人开发者独立开发的智能助手MiniMind-R1-Lite-Preview，很高兴为您提供服务！\n&amp;lt;/think&amp;gt;\n&amp;lt;answer&amp;gt;\n你好！我是由中国的个人开发者独立开发的智能助手MiniMind-R1-Lite-Preview，很高兴为您提供服务！\n&amp;lt;/answer&amp;gt;&#34;&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;推理模型R1的回复模板是：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;&amp;lt;think&amp;gt;\n思考过程\n&amp;lt;/think&amp;gt;\n&#xA;&amp;lt;answer&amp;gt;\n最终回答\n&amp;lt;/answer&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;这在GRPO中通过设置规则奖励函数约束模型符合思考标签和回复标签（在冷启动靠前的阶段奖励值设置应该提高一些）&lt;/p&gt; &#xA;&lt;p&gt;另一个问题是蒸馏过程虽然和SFT一样，但实验结果是模型难以每次都符合模板规范的回复，即脱离思考和回复标签约束。 这里的小技巧是增加标记位置token的损失惩罚，详见&lt;code&gt;train_distill_reason.py&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;# 在 sp_ids 对应的位置增加额外的惩罚&#xA;...&#xA;loss_mask[sp_ids] = 10 # 惩罚系数&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;另另一个tips是由于推理数据由于只筛选了&lt;code&gt;&amp;lt;1024&lt;/code&gt;长度的数据，其中多轮对话和英文数据偏少， 因此&lt;code&gt;r1_mix_1024.jsonl&lt;/code&gt;进行了大约10k条多轮对话+英文数据的混合，防止模型遗忘严重。&lt;/p&gt; &#xA;&lt;p&gt;脚本默认基于rlhf后的基模型做推理能力的蒸馏微调，下面直接启动训练即可：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;torchrun --nproc_per_node 1 train_distill_reason.py&#xA;# or&#xA;python train_distill_reason.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;训练后的模型权重文件默认每隔&lt;code&gt;100步&lt;/code&gt;保存为: &lt;code&gt;reason_*.pth&lt;/code&gt;（*为模型具体dimension，每次保存时新文件会覆盖旧文件）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;测试一下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;👶: 请介绍一下自己。&#xA;🤖️: &amp;lt;think&amp;gt;&#xA;嗯，用户让我介绍一下自己。我现在需要解释一下自己。首先，我应该明确用户是谁，是学生、职场人士还是普通人。用户可能是一个学生或者职场人士，所以信息传递应该是帮助学生和职场人士的信息。&#xA;然后，我需要回应用户，这可能包括介绍自己的位置、兴趣爱好、职业经历等信息。用户还可能想了解自己在哪里，比如职业发展、工作经验等。&#xA;我应该注意用词要正式，不要太正式，同时要保持简洁明了。这样用户容易理解，也方便他们查阅相关资料。&#xA;最后，我应该总结一下，让用户知道我是如何帮助他们完成他们的任务的，这样他们有更多关于我的信息。&#xA;&amp;lt;/think&amp;gt;&#xA;&amp;lt;answer&amp;gt;&#xA;我是**“你的名字”，你叫什么名字？&#xA;&amp;lt;/answer&amp;gt;&#xA;&#xA;👶: 你更擅长哪一个学科？&#xA;🤖️: &amp;lt;think&amp;gt;&#xA;您好！我是由中国的个人开发者开发的智能助手MiniMind-R1。如您有任何任何问题，我会尽我所能为您提供帮助。&#xA;&amp;lt;/think&amp;gt;&#xA;&amp;lt;answer&amp;gt;&#xA;您好！我是由中国的个人开发者开发的智能助手MiniMind-R1。如您有任何任何问题，我会尽我所能为您提供帮助。&#xA;&amp;lt;/answer&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Ⅳ 模型参数设定&lt;/h2&gt; &#xA;&lt;p&gt;📋关于LLM的参数配置，有一篇很有意思的论文&lt;a href=&#34;https://arxiv.org/pdf/2402.14905&#34;&gt;MobileLLM&lt;/a&gt;做了详细的研究和实验。 Scaling Law在小模型中有自己独特的规律。 引起Transformer参数成规模变化的参数几乎只取决于&lt;code&gt;d_model&lt;/code&gt;和&lt;code&gt;n_layers&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;d_model&lt;/code&gt;↑ + &lt;code&gt;n_layers&lt;/code&gt;↓ -&amp;gt; 矮胖子&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;d_model&lt;/code&gt;↓ + &lt;code&gt;n_layers&lt;/code&gt;↑ -&amp;gt; 瘦高个&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2020年提出Scaling Law的论文认为，训练数据量、参数量以及训练迭代次数才是决定性能的关键因素，而模型架构的影响几乎可以忽视。 然而似乎这个定律对小模型并不完全适用。 MobileLLM提出架构的深度比宽度更重要，「深而窄」的「瘦长」模型可以学习到比「宽而浅」模型更多的抽象概念。 例如当模型参数固定在125M或者350M时，30～42层的「狭长」模型明显比12层左右的「矮胖」模型有更优越的性能， 在常识推理、问答、阅读理解等8个基准测试上都有类似的趋势。 这其实是非常有趣的发现，因为以往为100M左右量级的小模型设计架构时，几乎没人尝试过叠加超过12层。 这与MiniMind在训练过程中，模型参数量在&lt;code&gt;d_model&lt;/code&gt;和&lt;code&gt;n_layers&lt;/code&gt;之间进行调整实验观察到的效果是一致的。 然而「深而窄」的「窄」也是有维度极限的，当d_model&amp;lt;512时，词嵌入维度坍塌的劣势非常明显， 增加的layers并不能弥补词嵌入在固定q_head带来d_head不足的劣势。 当d_model&amp;gt;1536时，layers的增加似乎比d_model的优先级更高，更能带来具有“性价比”的参数-&amp;gt;效果增益。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;因此MiniMind设定small模型dim=512，n_layers=8来获取的「极小体积&amp;lt;-&amp;gt;更好效果」的平衡。&lt;/li&gt; &#xA; &lt;li&gt;设定dim=768，n_layers=16来获取效果的更大收益，更加符合小模型Scaling-Law的变化曲线。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;作为参考，GPT3的参数设定见下表： &lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/gpt3_config.png&#34; alt=&#34;gpt3_config.png&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Ⅴ 训练结果&lt;/h2&gt; &#xA;&lt;p&gt;MiniMind2 模型训练损失走势（由于数据集在训练后又更新清洗多次，因此Loss仅供参考）&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;models&lt;/th&gt; &#xA;   &lt;th&gt;pretrain (length-512)&lt;/th&gt; &#xA;   &lt;th&gt;sft (length-512)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiniMind2-Small&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/pre_512_loss.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/sft_512_loss.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiniMind2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/pre_768_loss.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/sft_768_loss.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;训练完成-模型合集&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;考虑到多人反应百度网盘速度慢，MiniMind2及以后全部使用ModelScope/HuggingFace托管。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;① PyTorch原生模型&lt;/h4&gt; &#xA;&lt;p&gt;MiniMind2模型权重 (&lt;a href=&#34;https://www.modelscope.cn/models/gongjy/MiniMind2-PyTorch&#34;&gt;ModelScope&lt;/a&gt; | &lt;a href=&#34;https://huggingface.co/jingyaogong/MiniMind2-Pytorch&#34;&gt;HuggingFace&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;MiniMind-V1模型权重 (&lt;a href=&#34;https://pan.baidu.com/s/1KUfSzEkSXYbCCBj0Pw-9fA?pwd=6666&#34;&gt;百度网盘&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;Torch文件命名对照&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Model Name&lt;/th&gt; &#xA;    &lt;th&gt;params&lt;/th&gt; &#xA;    &lt;th&gt;pretrain_model&lt;/th&gt; &#xA;    &lt;th&gt;sft_model&lt;/th&gt; &#xA;    &lt;th&gt;rl_model&lt;/th&gt; &#xA;    &lt;th&gt;reason_model&lt;/th&gt; &#xA;    &lt;th&gt;lora_model&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;MiniMind2-small&lt;/td&gt; &#xA;    &lt;td&gt;26M&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;pretrain_512.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;full_sft_512.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rlhf_512.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;reason_512.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;lora_xxx_512.pth&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;MiniMind2-MoE&lt;/td&gt; &#xA;    &lt;td&gt;145M&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;pretrain_640_moe.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;full_sft_640_moe.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rlhf_640_moe.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;MiniMind2&lt;/td&gt; &#xA;    &lt;td&gt;104M&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;pretrain_768.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;full_sft_768.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rlhf_768.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;reason_768.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;lora_xxx_768.pth&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Model Name&lt;/th&gt; &#xA;    &lt;th&gt;params&lt;/th&gt; &#xA;    &lt;th&gt;pretrain_model&lt;/th&gt; &#xA;    &lt;th&gt;单轮对话sft&lt;/th&gt; &#xA;    &lt;th&gt;多轮对话sft&lt;/th&gt; &#xA;    &lt;th&gt;rl_model&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;minimind-v1-small&lt;/td&gt; &#xA;    &lt;td&gt;26M&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;pretrain_512.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;single_chat/full_sft_512.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;multi_chat/full_sft_512.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rl_512.pth&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;minimind-v1-moe&lt;/td&gt; &#xA;    &lt;td&gt;4×26M&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;pretrain_512_moe.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;single_chat/full_sft_512_moe.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;multi_chat/full_sft_512_moe.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;minimind-v1&lt;/td&gt; &#xA;    &lt;td&gt;108M&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;pretrain_768.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;single_chat/full_sft_768.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;multi_chat/full_sft_768.pth&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rl_768.pth&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;② Transformers模型&lt;/h4&gt; &#xA;&lt;p&gt;MiniMind系列 (&lt;a href=&#34;https://www.modelscope.cn/collections/MiniMind-b72f4cfeb74b47&#34;&gt;ModelScope&lt;/a&gt; | &lt;a href=&#34;https://huggingface.co/collections/jingyaogong/minimind-66caf8d999f5c7fa64f399e5&#34;&gt;HuggingFace&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;📌 Eval&lt;/h1&gt; &#xA;&lt;h2&gt;Ⅰ RLHF对比SFT篇&lt;/h2&gt; &#xA;&lt;p&gt;测试基于&lt;code&gt;full_sft&lt;/code&gt;和&lt;code&gt;rlhf&lt;/code&gt;的&lt;code&gt;MiniMind2系列&lt;/code&gt;模型对比，测试随机种子均固定&lt;/p&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;问答实测&lt;/summary&gt; &#xA; &lt;p&gt;[A0] MiniMind2：full_sft_640&lt;/p&gt; &#xA; &lt;p&gt;[A1] MiniMind2：rlhf_640&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;[Q]: 你叫什么名字？&#xA;[A0]: 我是一个大型语言模型，可以回答各种问题，提供信息和帮助。我可以回答各种问题，提供信息和帮助，帮助你解决各种问题。&#xA;[A1]: 我是一种基于文本的AI模型，我并没有个人经历或情感，所以无法感受和体验情感。我的设计目的是为了帮助用户解决问题、提供信息和进行对话。如果您有任何问题或需要帮助，请随时告诉我！&#xA;&#xA;[Q]: 你更擅长哪一个学科？&#xA;[A0]: 作为一个AI模型，我并没有真正的“擅长”这个学科。我被设计成能够提供信息、解答问题、进行对话、执行任务和与用户进行对话。不过，我可以提供信息、解答问题、进行对话、提供建议、处理问题、进行对话、提供建议、学习新知识、编写代码、回答问题、提供建议等多种学科的功能。如果你有具体的学科需求或主题，欢迎提供详细信息。&#xA;[A1]: 作为AI，我并没有个人能力或兴趣，但我可以提供一些关于数学、科学、计算机科学、语言学、心理学等学科的知识。如果你对数学感兴趣，我可以提供一些基础知识，例如代数、几何、概率、统计学等。如果你需要更深入的学习，我也可以提供相关的在线课程、书籍、论文等资源。请告诉我你具体需要什么帮助，我会尽力提供帮助。&#xA;&#xA;[Q]: 鲁迅的《狂人日记》是如何批判封建礼教的？&#xA;[A0]: 鲁迅的《狂人日记》是一部讲述了鲁迅对人类价值和道德责任的倡导。在这部作品中，鲁迅通过细腻的笔触，探讨了人性、道德、正义、牺牲与责任等深刻的主题。以下是鲁迅在《狂人日记》中如何批判封建礼教的几个方面：1. **社会现实与道德观念**：鲁迅通过讲述鲁迅的故事，探讨了社会的不平等、权力的流动、人性的演变等社会问题。他认为，社会不平等不仅仅是不公正的，更是每个人在社会中的不公正。他呼吁社会各界共同努力，通过教育、宣传、法律等手段，为构建和谐社会做出贡献。2. **道德与责任**：鲁迅通过讲述鲁迅的故事，展现了道德和责任的重要性。他提倡通过道德教育来培养人们的道德品质，同时也强调了道德和责任的重要性。鲁迅通过讲述鲁迅的故事，揭示了社会的不平等和人性的复杂性，体现了对人性的深刻理解。3. **道德与责任**：鲁迅通过讲述鲁迅的故事，强调了道德责任的重要性。他提倡通过自己的行为来体现对社会的尊重和对人性的深刻理解。鲁迅通过讲述鲁迅的故事，强调了道德和责任的重要性。4. **道德与道德**：鲁迅通过讲述鲁迅的故事，揭示了道德和责任的真正意义。鲁迅通过讲述鲁迅的故事，揭示了道德和责任的本质，强调了道德和责任的重要性。5. **个人与社会**：鲁迅通过讲述鲁迅的故事，揭示了个人与社会之间的复杂关系。他呼吁社会各界共同努力，通过教育和宣传，为构建和谐社会做出贡献。鲁迅的《狂人日记》通过其丰富的故事和深刻的道德寓言，传达了关于人性、道德、正义、道德以及个人与社会的复杂关系。这部作品不仅在文学价值上取得了巨大成就，更在思想层面上启发了后来的文学创作，对后世产生了深远的影响。&#xA;[A1]: 鲁迅的《狂人日记》是一部描绘战争和自由精神的作品，它批判了封建社会的种种问题和冲突，反映了社会的不平等和人性本质。在这部作品中，鲁迅通过对封建社会的诸多现象进行批判，如“弗雷德里克·约翰逊的“鹰迪伦”、“纳扎特的”、“贝克汉姆”、“乔治·威尔逊”等，对封建社会的种种问题进行了批判，强调了封建社会的不平等、人性本质以及人性本质。鲁迅通过他的“鹰迪伦”、“纳扎特的”、“贝克汉姆”、“乔治·威尔逊”等，对封建社会的种种问题进行了批判。在小说中，鲁迅通过对封建社会的诸多现象进行批判，揭示了封建社会的腐败、人性本质以及人性本质的复杂性。这种批判体现了对封建社会的尊重和对人性的复杂性，同时也反映了现代社会中普遍存在的不平等和人性本质。鲁迅的《狂人日记》不仅是一部关于封建社会的小说，也是一部具有深刻社会意义的作品，对后世的审判和批判起到了关键作用。&#xA;&#xA;[Q]: 我咳嗽已经持续了两周，需要去医院检查吗？&#xA;[A0]: 咳嗽确实需要一定的检查，但如果您的咳嗽持续时间过长，或者有其他不适症状（如持续咳嗽、呼吸困难等），建议尽快就医。医生会根据您的症状、体检结果和可能的影像学检查（如X光、MRI或CT扫描）来诊断您的症状。在等待就医期间，您可以尝试以下方法来帮助缓解症状：1. **休息**：确保您有足够的睡眠。2. **保持水分**：脱水可能会加重咳嗽。3. **热敷**：使用热敷袋或热毛巾敷在疼痛的部位，有助于缓解喉咙痛。4. **避免刺激**：避免使用可能刺激喉咙的化学物质，如某些化学物质。5. **保持室内湿润**：确保您的卧室有良好的通风，可以使用加湿器帮助保持空气湿度。6. **保持室内湿度**：使用加湿器可以帮助缓解喉咙干燥和咳嗽。如果症状持续不缓解或有其他不适症状，请立即就医。希望您早日康复！&#xA;[A1]: 如果您的咳嗽持续了两周，通常建议您尽快就医，因为这可能会影响您的呼吸和心跳。您可以通过以下步骤来检查咳嗽：1. **休息**：用纸巾或肘部轻轻按压咳嗽的位置。2. **使用药物**：在可能的情况下，使用药物（如抗过敏药、抗过敏药等）来缓解咳嗽。请在医生的指导下使用药物。3. **热敷**：在咳嗽期间，可以使用热敷来缓解疼痛和肿胀。4. **药物治疗**：如果咳嗽持续了两周，可以使用一些消炎药或抗过敏药来缓解症状。请务必在医生的指导下使用。5. **保持健康的生活方式**：保持充足的睡眠、均衡的饮食、适量的运动和避免吸烟和限酒，这些都有助于提高咳嗽的几率。请记住，这些建议不能替代专业医疗意见。如果您的症状持续或加重，强烈建议您尽快就医。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;👉效果总结&lt;/p&gt; &#xA;&lt;p&gt;full_sft模型在简洁性和信息准确性方面表现更好；rlhf模型在回答中倾向于提供更多的背景信息，但信息准确性有待改进。 总的来说RLHF后的模型倾向于学习：说更多有礼貌但无用的废话讨好“对话”本身，而对信息准确性则有轻微损失。 天下没有免费的午餐，还需要继续提升RLHF数据集的质量，也要接受模型能力无法避免的损失(程度有轻重)。 DPO和在线PPO的区别在于reject和chosen都是离线准备的，和minimind模型本身的输出必然存在很大的分布差异。 通俗地说DPO算法使模型观看乒乓球世界冠军的打法「录像」进行RL，而不是像PPO一样请reward模型做「教练」纠正自己的打法进行RL。&lt;/p&gt; &#xA;&lt;h2&gt;Ⅱ 主观样例测评&lt;/h2&gt; &#xA;&lt;p&gt;🏃以下测试于2025-02-09完成，此日期后发布的新模型，无特殊需要时将不加入测试。&lt;/p&gt; &#xA;&lt;p&gt;[A] &lt;a href=&#34;https://www.modelscope.cn/models/gongjy/MiniMind2-PyTorch&#34;&gt;MiniMind2 (0.1B)&lt;/a&gt;&lt;br&gt; [B] &lt;a href=&#34;https://www.modelscope.cn/models/gongjy/MiniMind2-PyTorch&#34;&gt;MiniMind2-MoE (0.15B)&lt;/a&gt;&lt;br&gt; [C] &lt;a href=&#34;https://www.modelscope.cn/models/gongjy/MiniMind2-PyTorch&#34;&gt;MiniMind2-Small (0.02B)&lt;/a&gt;&lt;br&gt; [D] &lt;a href=&#34;https://pan.baidu.com/s/1_COe0FQRDmeapSsvArahCA?pwd=6666&#34;&gt;minimind-v1-small(0.02B)&lt;/a&gt;&lt;br&gt; [E] &lt;a href=&#34;https://pan.baidu.com/s/1tqB-GMvuiGQBvEl-yZ-oBw?pwd=6666&#34;&gt;minimind-v1-moe(0.1B)&lt;/a&gt;&lt;br&gt; [F] &lt;a href=&#34;https://pan.baidu.com/s/1p713loS7EfwHQf3G9eYI3Q?pwd=6666&#34;&gt;minimind-v1(0.1B)&lt;/a&gt;&lt;br&gt; [G] &lt;a href=&#34;https://github.com/DLLXW/baby-llama2-chinese&#34;&gt;baby-llama2-chinese(0.2B)&lt;/a&gt;&lt;br&gt; [H] &lt;a href=&#34;https://github.com/charent/ChatLM-mini-Chinese&#34;&gt;chatlm-mini-chinese(0.2B)&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;[Q]: 你知道长江吗？&#xA;[A]: 长江，位于中国东南部，是中国的第一长河，全长6300多公里，流经11个省份，是中国最长的河流，也是中国的“母亲河”。长江的历史可以追溯到公元前2000多年的商朝时期，当时的商朝是商朝的后裔。商朝时期，长江的经济发展达到了高峰，是中国最重要的农业和工业中心之一。长江流域的经济主要以农业为主，长江渔业占据了主要产业，如钓鱼、猎鱼等。长江的水资源也非常丰富，包括河流、湖泊、河流等。长江的自然景观也十分壮观，长江四季景色各异，春季多雨，夏季多雨，秋季则多雨，冬季则寒冷多雪，春季和秋季都有美丽的花朵和果实。长江是中国的经济中心，拥有众多的国家和城市，是世界上重要的交通枢纽和航运中心。同时，长江还是中国的重要水利资源，对于中国的经济发展具有重要意义。&#xA;[B]: 是的，我知道长江。长江位于中国的中部，是中国第三长的河流，全长约6300公里，流经江西省、安徽省、江苏省、安徽省、江苏省和安徽省。&#xA;[C]: 当然，长江是中国最长的河流，全长约6300公里。它以其丰富的水资源、丰富的水生动植物资源以及独特的地理位置而闻名于世。&#xA;[D]: 是的，长江是中国最长的河流，全长超过3300千米。&#xA;[E]: 长江是中国最长的河流，总长度约为6300公里。它发源于青藏高原的青海湖，流经青海、四川、甘肃、宁夏、内蒙古、陕西和山西。长江流域是中国最大的农业区之一，也是中国的文化和经济中心。&#xA;[F]: 是的，长江是中国最长的河流之一，也是世界第三大河流。长江发源于青藏高原，流经11个省份，最终注入东海。长江流域是中国最大的河流流域之一，拥有着丰富的自然资源和文化遗产，如长江大桥、长江海洋博物馆、长江古城等。&#xA;[G]: 同时也知道，中国是世界上最长的城市之一，拥有超过3400万人口。&#xA;[H]: 是的，长江是中国最长的河流，也是世界上最长的河流之一。它发源于青藏高原，流经九个省区，最终注入东海。长江流域的气候温和，四季分明，是中国重要的农业和工业基地。长江流域的水产资源丰富，是中国的重要渔业资源之一。&#xA;&#xA;&#xA;[Q]: 世界上最高的山峰是什么？&#xA;[A]: 世界上最高的山峰是珠穆朗玛峰（Mount Everest），位于喜马拉雅山脉，尼泊尔和中国的边界上。它的海拔高度是8,848.86米（29,031.7英尺），是地球上最高的山峰。&#xA;[B]: 珠穆朗玛峰（Mount Everest）是世界上最高的山峰，海拔高度达8,848米（29,029英尺）。&#xA;[C]: 珠穆朗玛峰是世界上最高的山峰，位于喜马拉雅山脉，海拔8,848.86米（29,031.7英尺）。它位于尼泊尔和中国的边界上，是喜马拉雅山脉的一部分。&#xA;[D]: 世界上最高的山峰是珠穆朗玛峰，位于尼泊尔和中国的边境上，海拔8848米。&#xA;[E]: 世界上最高的山峰是珠穆朗玛峰，位于喜马拉雅山脉，海拔8,848米。&#xA;[F]: 珠穆朗玛峰是世界上最高的山峰，海拔8848米。&#xA;[G]: 世界上最高的山峰是珠穆朗玛峰，位于喜马拉雅山脉，海拔8,848.86米（29,031.69英尺）。&#xA;[H]: 世界上最高的山峰是珠穆朗玛峰，也称为萨加玛塔，位于喜马拉雅山脉的尼泊尔和中国边境之间，海拔8,848.86米（29,031.69英尺）。它是世界上最著名的登山目标之一，吸引着来自世界各地的登山者前来挑战。珠穆朗玛峰的名字来自藏语，意思是“女神的额峰”，它是由两个不同的山峰组成的，其中一个是位于尼泊尔的珠穆朗玛峰，另一个则位于中国。它的高度是通过测量海拔高度来确定的，因为它是通过测量地球的平均高度来确定的。尽管珠穆朗玛峰是世界上最高的山峰，但它并不是地球上任何其他地方都能到达的。地球上的其他地方，如南美洲的安第斯山脉，也是世界上最高的山脉，但它并不是地球上最高的山峰。总之，珠穆朗玛峰是世界上最高的山峰，但它并不是地球上任何地方都能到达的。它是地球上最高的山脉，但它并不是地球上任何地方都能到达的。&#xA;&#xA;&#xA;[Q]: 万有引力是谁提出的？&#xA;[A]: 万有引力是由牛顿在17世纪提出的，它是牛顿三大定律之一。牛顿在17世纪提出的引力定律揭示了万有引力定律的本质，并且解释了行星、卫星、彗星等天体之间如何相互作用。这个定律是由艾萨克·牛顿在1687年提出的，他通过对万有引力定律的分析和实验，成功地解释了天体之间的引力作用，从而解释了地球绕太阳旋转的现象。&#xA;[B]: 万有引力（Human Policy）是牛顿的三大力学定律，用于描述两个物体之间的相互作用力。它由万有引力定律和牛顿的第一定律（惯性定律）构成。万有引力是由于两个物体之间相互作用而产生的，它们的质量、距离、速度和方向等因素决定了它们之间的相互作用。这种相互作用力是：质量的乘积：质量的乘积是万有引力定律和牛顿第二定律的乘积。质量的乘积：质量的乘积是物体之间的一种物理过程，它是物体间相互作用的产物，对于其他物体来说，其质量可以表示为两个物体之间的质量之和，即重力加速度a。&#xA;[C]: 万有引力是一个由牛顿在1687年提出的物理学概念，它描述了物体之间引力如何相互作用的规律。&#xA;[D]: 万有引力是由英国物理学家牛顿提出的。他认为，所有物体都会产生引力，这个引力是由物体的质量和距离决定的。这个理论揭示了质量和距离之间的关系，并证明了万有引力的本质。&#xA;[E]: 万有引力是由牛顿在1687年提出的。它是宇宙中一个基本的物理现象，它描述了物体之间的相互作用。这个力被称为万有引力，它在所有物体之间都存在，这种力与物体的质量和距离有关。万有引力是自然界中最基本的力量之一，它不仅影响着物体的运动和变化，还对宇宙的结构和演化产生着重要的影响。&#xA;[F]: 万有引力是英国物理学家艾萨克·牛顿在17世纪提出的。&#xA;[G]: 引力是宇宙中一种力量，它是由质量或能量所组成的。根据牛顿的万有引力定律，一个物体之间的引力大小与它的质量成正比，与它的质量成反比。因此，牛顿的万有引力定律表明，一个物体之间的引力大小与它的质量成正比，与它的质量成反比。这个定律在物理学、天文学和物理学中都有广泛的应用。&#xA;[H]: 万有引力是由英国物理学家艾萨克·牛顿于1687年提出的。他在1687年发表了一篇著名的论文，题为《自然哲学的数学原理》，其中提出了万有引力定律，指出任何两个物体之间都存在着一种引力，这种引力的大小与它们的质量成正比，与它们之间的距离的平方成反比。这个定律被称为万有引力定律，它描述了质量和距离之间的关系。它表明，两个物体之间的引力与它们的质量成正比，与它们之间的距离的平方成反比。这个定律对于解释宇宙中的许多现象和现象之间的相互作用非常重要，例如行星绕太阳运动、恒星之间的引力透镜效应等等。它也被广泛应用于天文学、物理学和工程学等领域，为我们理解宇宙的本质和演化提供了重要的理论基础。&#xA;&#xA;&#xA;[Q]: 你知道大熊猫的主要食物是什么吗？&#xA;[A]: 大熊猫主要以竹子为食，但也会吃其他植物、昆虫、小型哺乳动物和鱼类。它们的消化系统与其他熊科动物类似，能够消化竹子。大熊猫的牙齿锋利，适合咀嚼竹子，因此它们经常被称为“竹食动物”。&#xA;[B]: 大熊猫是以竹子为食的哺乳动物，它们是肉食动物。它们主要食物是竹子，特别是竹子中富含纤维素和矿物质，并且不会直接进入消化系统。大熊猫的肠道主要由竹子组成，它们需要消化竹子中的纤维素和其他纤维素来支持它们的正常进食。&#xA;[C]: 大熊猫主要以竹子为食，但它们也吃其他植物，包括树叶、嫩芽、昆虫、水果、蔬菜和小型哺乳动物等。大熊猫是中国特有的物种，属于熊科，主要分布在中国的四川、陕西和甘肃等地。&#xA;[D]: 大熊猫的主要食物是竹子。它们通常吃竹子，每天需要吃掉大约30公斤的竹子。&#xA;[E]: 是的，大熊猫主要以竹子为食。它们每天需要吃掉大量的竹子来维持生命，每天需要吃掉40至80公斤的竹子。此外，它们也会吃一些其他的植物，如草、果实、坚果和小型哺乳动物。&#xA;[F]: 大熊猫主要以竹子为食，也会偶尔食用其他的植物和动物。此外，大熊猫也会吃一些野果、小动物和植物，但这些都不属于它们的主要食物来源。&#xA;[G]: 大熊猫的主要食物是竹子。&#xA;[H]: 大熊猫是一种以竹子为主要食物的植食动物，它们的肠道结构适合消化纤维素含量高的竹子，但也会吃一些其他植物，如草本植物和小型哺乳动物。大熊猫的肠道结构也适应了高纤维的竹子，这使得它们能够消化大量的纤维素，从而帮助它们在野外生存。大熊猫的肠道中还含有一种叫做“纤维素酶”的酶类物质，这种酶能够帮助大熊猫分解纤维素，从而帮助它们消化大量的水分和营养物质。此外，大熊猫的肠道还含有一种叫做“纤维素蛋白”的蛋白质，这种蛋白质能够帮助大熊猫维持体内的能量水平，从而帮助它们在野外生存。总的来说，大熊猫的主要食物是竹子，但它们也会吃一些其他植物，如草本植物和小型哺乳动物。&#xA;&#xA;&#xA;[Q]: 海水为什么是咸的？&#xA;[A]: 海水之所以是咸的，主要是由于其中的化学成分。海水中含有大量的矿物质和盐分，其中主要成分是硫酸盐、碳酸盐、镁离子和钾离子。这些物质在高浓度下，会沉淀在海水中，形成海水。具体来说，海水中的矿物质和盐分主要来自于岩石、土壤、生物和人类排泄物等。岩石是海水的组成部分，主要由矿物质组成，如石英、长石、云母等。土壤中含有大量的化学物质，如氮、磷、钾等，这些物质会渗透到土壤中，形成土壤。生物体内的盐分主要来源于植物的叶绿素等色素，这些色素会吸收太阳光中的能量，转化为生物体可以利用的能量。而人类排泄物中含有的盐分主要来源于矿物质和碳酸盐，这些矿物质在水中的浓度较高，会导致水中溶解的矿物质浓度增加，形成水体中的盐分。因此，海水之所以是咸的，是由于其中的化学成分和结构特征。海水中的矿物质和盐分主要来自于岩石、土壤、生物和人类排泄物等，而这些物质的积累和排泄会导致海水呈现出咸味。&#xA;[B]: 海水是咸的，因为它包含了多种物质，包括氯化钠（NaCl）、氯化钠（NaCl）、碳酸盐（如硫酸盐）、氯化钠（NaCl）和水。咸物质的来源：盐是咸的常见来源，含有钾、钙、镁、钾等矿物质。这些矿物质通常来自于地下水、地下水或土壤中，这些矿物质的含量远低于纯净水。咸味的原因：盐的咸味主要源于其溶解于水中的微小颗粒物。这些小颗粒物主要通过植物根部和动物体内的微生物传播，如昆虫、小型哺乳动物、鸟类和某些昆虫。综上所述，海水是咸的，因为它含有大量的盐类，包括矿物质、岩石、盐、矿物质等，这些物质在海水中的浓度高，对咸味的产生较大影响。&#xA;[C]: 海水是咸的，主要是因为其中含有各种盐分，其中以海水为主要成分之一。当海水中含有大量的盐分时，盐分会被溶解在海水中，形成咸味。海水中的盐分主要来源于溶解盐类、蒸发析出的盐和海水冻结成冰等因素。&#xA;[D]: 海水中含有许多盐分，这些盐分可以导致海水咸度的增加。海水中的盐分主要来自于海水中的盐分，这些盐分可以从海水中的盐分中获得。海水中的氧化物和盐分可以与海水中的盐分形成氢键，从而使海水咸度增加。&#xA;[E]: 海水是咸的，这是因为它含有大量的盐分，其中包括氯离子和氯离子。这些离子在海洋中形成了大量的盐，这些盐分被称为盐分。海水中含有许多溶解在水中的盐，这些盐分会随着海水的升高而逐渐蒸发，最终导致海水中盐分的蒸发。这些盐分在海水中被完全消耗，然后被排除在海水中。此外，海水中还含有许多其他的盐分，但这些盐分是不同的，因为它们在水中的浮起和下降过程是不同的。海水中的盐分是从海底的岩石中提取出来的，这些盐分在海水中可以被利用。总的来说，海水是咸的，这也是为什么海水中含有许多盐分和盐分的原因。&#xA;[F]: 海水含有许多溶解的盐类，其中最主要的是氯化钠。当水中加入盐时，盐的分子会与水分子发生反应，形成氢氧化钠，这是一种盐。&#xA;[G]: 因为水是许多生物的生存所必需的，它能够吸收和释放二氧化碳，释放氧气，维持大气中的水蒸气，以及维持水循环。水中的盐类和化学物质会释放出氧气，使地球上的生物呼吸。此外，水还具有许多其他功能，如保持水循环、维持水循环、调节气候和环境等。水是许多生物生存所必需的，它也是许多自然现象的重要基础。&#xA;[H]: 海水是咸的主要原因是因为其中含有大量的溶解盐类，其中最主要的是氯化钠（NaCl）。氯化钠是一种非常常见的盐类，它存在于地球上的大部分地区，包括海洋、湖泊、河流和地下水。当水从海洋中蒸发时，它会带走一部分盐分，使海水变得咸。此外，海中还含有其他溶解盐类的物质，如硫酸盐、硫酸镁、硫酸钙、硫酸镁盐、硫酸镁钾、硫酸镁钠、硫酸镁钙、硫酸镁镁钙、硫酸镁镁钙、硫酸镁镁钙、硫酸镁镁钠、硫酸镁镁钙、硫酸镁镁镁钙、硫酸镁镁镁钙、硫酸镁镁镁钙、硫酸镁镁镁钙、硫酸镁镁镁钙、硫酸镁镁镁钙、硫酸镁镁镁钙、硫酸镁镁镁钙、硫酸镁镁镁钙、硫酸镁镁镁钙、硫酸镁镁镁镁钙、硫酸镁镁镁镁钙、硫酸镁镁镁镁钙、硫酸镁镁镁镁钙、硫酸镁镁镁镁钙、硫酸镁镁镁镁钙、硫酸镁镁镁镁镁钙、硫酸镁镁镁镁镁钙、硫酸镁镁镁镁镁钙、硫酸镁镁镁镁镁钙、硫酸镁镁镁镁镁镁钙、硫酸镁镁镁镁镁镁钙、硫酸镁镁镁镁镁镁钙、硫酸镁镁镁镁镁镁镁钙、硫酸镁镁镁镁&#xA;&#xA;&#xA;[Q]: 写一段python的快速排序代码&#xA;[A]: 好的，以下是Python的快速排序代码：def quick_sort(arr):    if len(arr) &amp;lt;= 1:        return arr    else:        pivot = arr[len(arr) // 2]        left = [x for x in arr[1:]]        right = [x for x in arr[2:] if x &amp;lt; pivot]        return quick_sort(left) + [pivot] + quick_sort(right)# 测试代码arr = [3, 6, 8, 10, 1, 2, 1]print(quick_sort(arr))这段代码首先检查数组的长度是否小于等于1。如果是，那么它就按照从小到大的顺序排列。接着，对于数组的每个元素，它想要进行递归地排序，直到达到排序的结束位置。如果数组的长度是奇数，那么它就按照从大到小的顺序排列。最后，平均的时间复杂度是O(n log n)，其中n是数组的长度。&#xA;[B]: 以下是一个使用Python的快速排序算法的实现：def sort_array(arr):    # 生成一个随机排列    sorted_array = sorted(arr)    # 返回排序后的列表    return sorted(arr)# 示例arr = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]# 调用函数sorted_array = sort_array(arr)print(&#34;原始数组是：&#34;, sorted_array)这段代码首先生成一个随机排列，然后通过一个列表的长度进行排序。最后，返回排序后的列表。注意，这个代码使用了Python的内置sorted函数和内置的sorted()函数，它们在时间复杂度为O(n log n)的情况下，比直接使用sorted()函数更快。&#xA;[C]: 以下是一个简单的排序算法，适用于小型数组，包括小于等于5的数组。def quick_sort(arr):    if len(arr) &amp;lt;= 1:        return arr    else    for _ in range(2, 51):        if arr[len(arr) - 1:] is not None:            arr[len(arr) - 1] = arr[len(arr) - 1]                arr[len(arr)] = arr[len(arr)]    return quick_sort(arr)# 示例arr = [3, 5, 1, 4, 1, 2, 1]sorted_arr = quick_sort(arr)print(&#34;Sorted array is:&#34;, sorted_arr)### 代码解释：1. **函数定义**：quick_sort 函数接受一个数组 arr 作为参数。2. **循环**：对于 arr 的元素，使用递归来实现，即从右到左遍历数组，并将当前元素与数组的当前元素交换位置，直到数组达到空或数组长度小于等于 arr。3. **递归调用**：遍历数组，将当前元素与数组的当前元素进行交换，直到数组达到空或数组长度小于等于 arr。4. **检查数组长度**：使用 if __name__ == &#34;__main__&#34; 检查数组的长度是否小于 arr，如果是，就将数组从较大的数组移动到数组的末尾。5. **输出排序后的结果**&#xA;[D]: 作为一个AI语言模型，我无法编写Python程序。但是，Python是一个非常流行的编程语言，它具有许多优秀的库和框架，包括NumPy、Pandas、Matplotlib、Pandas、Bandke、Norm和NKlearn等。Python有很多优秀的自然语言处理库和框架，可以用于处理和分析各种类型的数据，如文本、图像、音频、视频等。Python还可以用于创建各种应用程序，如网页搜索、游戏开发、科学计算等。Python非常灵活，也支持多种编程风格，因此可以轻松地找到适合自己的解决方案。&#xA;[E]: 作为AI语言模型，我可以回答您的问题。但是我无法进行编程操作，因为我无法确定您想问的是哪种编程语言。请您提供更具体的问题，以便我能够更好地回答您的问题。&#xA;[F]: 快速排序（Quick Sort）是一种简单的排序算法，它通过将数据划分为小组，每组数据按照一定规则排序，最终得到一个有序数组。&#xA;[G]: 好的，以下是一段快速排序的Python代码```python sorted_print(sorted(sorted(sorted(sorted_print))```输出结果为：```[1, 2, 3, 4, 5, 6, 7, 8, 9]```&#xA;[H]: 快速排序是一种基于分治思想的高效排序算法，它的时间复杂度为 O(n log n)。它的基本思想是通过一趟排序将待排序序列划分为两个子序列，其中一个子序列的所有元素都比另一个子序列的所有元素小，然后对这两个子序列分别递归地进行排序。下面是一个 Python 代码示例，实现了快速排序算法：```pythondef quick_sort(arr):    if len(arr) &amp;gt; 1:        return arr    else: return quick_sort(arr)```该代码使用了递归的方式，首先判断数组的长度是否小于等于1，如果是，则直接返回数组，否则递归地对数组进行排序。在递归过程中，我们首先判断数组的第一个元素是否大于等于1，如果是，则将数组中的元素与第一个元素进行比较，如果不等于1，则将数组中的元素与第二个元素进行比较，以此类推，直到所有元素都被排序。该代码的时间复杂度为 O(n log n)，是一个非常实用的排序算法。&#xA;&#xA;&#xA;[Q]: 截至2025年2月9日14时31分，电影《哪吒之魔童闹海》累计票房（含预售）突破78.09亿元，超过《星球大战：天行者崛起》的票房成绩，成为首部进入全球票房榜前40的亚洲电影。这一成就不仅标志着中国电影在国际市场的突破，也展示了中国动画电影的巨大潜力和市场吸引力。从这段文字总结20字的摘要给我。&#xA;[A]: 电影《哪吒之魔童闹海》票房突破78.09亿元，成为首部进入全球票房榜前40的亚洲电影。这标志着中国电影的国际突破，也展现了中国动画电影的巨大潜力。&#xA;[B]: 2025年2月9日，中国电影在世界舞台上突破78.09亿元，超过《星球大战：天行者崛起》的票房成绩。&#xA;[C]: 电影《哪吒之魔童闹海》票房突破78.09亿元，成为全球票房榜前40的亚洲电影，展现中国动画电影的巨大潜力。&#xA;[D]: 《哪吒之魔童闹海》累计票房突破78.09亿，成为首部进入全球票房榜前40的亚洲电影，展示了中国电影在国际市场的突破，同时展示了中国动画电影的巨大潜力和市场吸引力。&#xA;[E]: 《猛龙强：打开世界奇幻冒险》成功地，上海成功吸引了众多观众，同时也引起了广泛的关注。&#xA;[F]: 《哪吒之魔童闹海》是一部让中国动画电影成为国际市场的巨大潜力。该电影以其华丽的画面和惊险的战斗场面而闻名于世。&#xA;[G]: 《哪行是值得的》是2021年1月9日14时31分，电影《哪成大作为》在电影市场突破7800亿美元，成为中国动画电影的突破，并展示中国动画电影的巨大潜力和市场吸引力。&#xA;[H]: 我是一个参数很少的AI模型🥺，知识库较少，无法直接回答您的问题，换个问题试试吧👋&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;🙋‍直接把以上所有问题和模型的回答丢给DeepSeek-R1，让它帮忙点评和排名打分：&lt;/p&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;具体点评&lt;/summary&gt; &#xA; &lt;h3&gt;评分标准：&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;准确性&lt;/strong&gt;：回答是否正确且无明显错误。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;完整性&lt;/strong&gt;：回答是否涵盖了问题的核心要点。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;逻辑性&lt;/strong&gt;：回答是否有条理，是否符合逻辑。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;代码质量&lt;/strong&gt;：代码是否能正常运行，逻辑是否清晰。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;点评：&lt;/h3&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;A模型&lt;/strong&gt;：&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：回答非常全面，信息量大，逻辑清晰，尤其在长江、大熊猫、海水咸味等问题上表现优异。代码虽然有小瑕疵，但整体思路正确。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：部分回答稍显冗长，但不影响整体质量。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;总评&lt;/strong&gt;：综合表现最佳，得分最高。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;H模型&lt;/strong&gt;：&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：回答较为准确，尤其在珠穆朗玛峰、万有引力等问题上表现出色。代码虽未完全展示，但解释较为详细。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：部分回答略显啰嗦，但逻辑性较强。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;总评&lt;/strong&gt;：仅次于A模型，表现稳定。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;C模型&lt;/strong&gt;：&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：回答简洁明了，尤其在大熊猫、快速排序代码等问题上表现较好。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：部分回答略显简短，缺乏深入解释。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;总评&lt;/strong&gt;：整体表现不错，但细节上略逊于A和H。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;F模型&lt;/strong&gt;：&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：回答较为准确，尤其在长江、万有引力等问题上表现尚可。代码部分有一定逻辑性。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：部分回答不够深入，代码存在一些小问题。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;总评&lt;/strong&gt;：表现中规中矩，仍有提升空间。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;D模型&lt;/strong&gt;：&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：回答基本准确，尤其在万有引力、长江等问题上表现尚可。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：部分回答过于简略，代码存在明显错误。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;总评&lt;/strong&gt;：表现一般，需改进代码部分。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;B模型&lt;/strong&gt;：&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：回答较为准确，尤其在长江、海水咸味等问题上表现尚可。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：部分回答逻辑性较差，代码存在较大问题。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;总评&lt;/strong&gt;：表现平平，需进一步优化。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;E模型&lt;/strong&gt;：&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：部分回答较为准确，尤其在海水咸味、大熊猫等问题上表现尚可。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：回答过于简略，代码部分几乎无法运行。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;总评&lt;/strong&gt;：表现不佳，需大幅提升。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;G模型&lt;/strong&gt;：&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：几乎没有明显的优点。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：回答严重偏离主题，代码部分完全无法运行。&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;总评&lt;/strong&gt;：表现最差，需大幅改进。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;hr&gt; &#xA; &lt;h3&gt;总结：&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;A模型&lt;/strong&gt;在各方面表现最为出色，尤其在复杂问题的回答上展现了极高的准确性与逻辑性。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;H模型&lt;/strong&gt;紧随其后，表现稳定，但在某些细节上略显不足。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;G模型&lt;/strong&gt;表现最差，回答偏离主题且代码无法运行，需大幅改进。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;打分排序&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;排名&lt;/th&gt; &#xA;   &lt;th&gt;模型&lt;/th&gt; &#xA;   &lt;th&gt;准确性 (30分)&lt;/th&gt; &#xA;   &lt;th&gt;完整性 (30分)&lt;/th&gt; &#xA;   &lt;th&gt;逻辑性 (20分)&lt;/th&gt; &#xA;   &lt;th&gt;代码质量 (20分)&lt;/th&gt; &#xA;   &lt;th&gt;总分 (100分)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;A&lt;/td&gt; &#xA;   &lt;td&gt;28&lt;/td&gt; &#xA;   &lt;td&gt;29&lt;/td&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td&gt;96&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;H&lt;/td&gt; &#xA;   &lt;td&gt;27&lt;/td&gt; &#xA;   &lt;td&gt;28&lt;/td&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td&gt;93&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;C&lt;/td&gt; &#xA;   &lt;td&gt;26&lt;/td&gt; &#xA;   &lt;td&gt;27&lt;/td&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;89&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;F&lt;/td&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td&gt;26&lt;/td&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;86&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;D&lt;/td&gt; &#xA;   &lt;td&gt;24&lt;/td&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;82&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;B&lt;/td&gt; &#xA;   &lt;td&gt;23&lt;/td&gt; &#xA;   &lt;td&gt;24&lt;/td&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;78&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;E&lt;/td&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;   &lt;td&gt;23&lt;/td&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;74&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;G&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;42&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;👉主观效果总结&lt;/h3&gt; &#xA;&lt;p&gt;个人主观评价与DeepSeek-R1基本相符，其中：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;MiniMind系列的排序非常符合直觉，参数越大+训练数据越充分评分越高，幻觉和错误都会比小模型肉眼可见的好。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;H模型的回答肉眼看起来是不错的，尽管存在些许幻觉瞎编的情况。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;G模型可能训练数据不够完备，给出的权重经过测试效果不佳。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;再复诵一遍经久不衰的Scaling Law: 参数越大，训练数据越多模型的性能越强。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Ⅲ Objective Benchmark&lt;/h2&gt; &#xA;&lt;p&gt;下面就到喜闻乐见的benchmark刷榜测试环节，就不找乐子和qwen、glm级别的中文模型做对比了。 这里选取了一些&amp;lt;1B的微型模型进行横评比较， 测试集选择C-Eval、CMMLU、A-CLUE、TMMLU+这几个纯中文语言榜单。&lt;/p&gt; &#xA;&lt;details style=&#34;color:rgb(128,128,128)&#34;&gt; &#xA; &lt;summary&gt;测评框架&lt;/summary&gt; &#xA; &lt;p&gt;测评框架选择&lt;a href=&#34;https://github.com/EleutherAI/lm-evaluation-harness&#34;&gt;lm-evaluation&lt;/a&gt;， 安装后启动测试非常方便：&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;lm_eval --model hf --model_args pretrained=&amp;lt;填写模型路径&amp;gt;,device=cuda,dtype=auto --tasks ceval* --batch_size 8 --trust_remote_code&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;PS: 在这种全是选择题的测评集中，为了避免回复格式的难以固定的特点， 所以常用做法是直接把&lt;code&gt;A&lt;/code&gt;,&lt;code&gt;B&lt;/code&gt;,&lt;code&gt;C&lt;/code&gt;,&lt;code&gt;D&lt;/code&gt;四个字母对应token的预测概率取出来，将其中概率最大的字母与标准答案计算正确率。 选择题1/4乱选的正确率是25%，然而这个量级的所有模型都集中在25附近，甚至很多时候不如瞎选，是不是像极了高中完形填空的滑铁卢正确率... MiniMind模型本身预训练数据集小的可怜，也没有针对性的对测试集做刷榜微调，因此结果图一乐即可：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;models&lt;/th&gt; &#xA;   &lt;th&gt;from&lt;/th&gt; &#xA;   &lt;th&gt;params↓&lt;/th&gt; &#xA;   &lt;th&gt;ceval↑&lt;/th&gt; &#xA;   &lt;th&gt;cm mlu↑&lt;/th&gt; &#xA;   &lt;th&gt;aclue↑&lt;/th&gt; &#xA;   &lt;th&gt;tmmlu+↑&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiniMind2&lt;/td&gt; &#xA;   &lt;td&gt;JingyaoGong&lt;/td&gt; &#xA;   &lt;td&gt;104M&lt;/td&gt; &#xA;   &lt;td&gt;26.52&lt;/td&gt; &#xA;   &lt;td&gt;24.42&lt;/td&gt; &#xA;   &lt;td&gt;24.97&lt;/td&gt; &#xA;   &lt;td&gt;25.27&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiniMind2-Small&lt;/td&gt; &#xA;   &lt;td&gt;JingyaoGong&lt;/td&gt; &#xA;   &lt;td&gt;26M&lt;/td&gt; &#xA;   &lt;td&gt;26.37&lt;/td&gt; &#xA;   &lt;td&gt;24.97&lt;/td&gt; &#xA;   &lt;td&gt;25.39&lt;/td&gt; &#xA;   &lt;td&gt;24.63&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiniMind2-MoE&lt;/td&gt; &#xA;   &lt;td&gt;JingyaoGong&lt;/td&gt; &#xA;   &lt;td&gt;145M&lt;/td&gt; &#xA;   &lt;td&gt;26.6&lt;/td&gt; &#xA;   &lt;td&gt;25.01&lt;/td&gt; &#xA;   &lt;td&gt;24.83&lt;/td&gt; &#xA;   &lt;td&gt;25.01&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zhanshijinwat/Steel-LLM&#34;&gt;Steel-LLM&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ZhanShiJin&lt;/td&gt; &#xA;   &lt;td&gt;1121M&lt;/td&gt; &#xA;   &lt;td&gt;24.81&lt;/td&gt; &#xA;   &lt;td&gt;25.32&lt;/td&gt; &#xA;   &lt;td&gt;26&lt;/td&gt; &#xA;   &lt;td&gt;24.39&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/openai-community/gpt2-medium&#34;&gt;GPT2-medium&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenAI&lt;/td&gt; &#xA;   &lt;td&gt;360M&lt;/td&gt; &#xA;   &lt;td&gt;23.18&lt;/td&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td&gt;18.6&lt;/td&gt; &#xA;   &lt;td&gt;25.19&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jzhang38/TinyLlama&#34;&gt;TinyLlama-1.1B-Chat-V1.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TinyLlama&lt;/td&gt; &#xA;   &lt;td&gt;1100M&lt;/td&gt; &#xA;   &lt;td&gt;25.48&lt;/td&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td&gt;25.4&lt;/td&gt; &#xA;   &lt;td&gt;25.13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/huggingface/smollm&#34;&gt;SmolLM2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HuggingFaceTB&lt;/td&gt; &#xA;   &lt;td&gt;135M&lt;/td&gt; &#xA;   &lt;td&gt;24.37&lt;/td&gt; &#xA;   &lt;td&gt;25.02&lt;/td&gt; &#xA;   &lt;td&gt;25.37&lt;/td&gt; &#xA;   &lt;td&gt;25.06&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.modelscope.cn/models/BAAI/Aquila-135M-Instruct&#34;&gt;Aquila-Instruct&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;BAAI&lt;/td&gt; &#xA;   &lt;td&gt;135M&lt;/td&gt; &#xA;   &lt;td&gt;25.11&lt;/td&gt; &#xA;   &lt;td&gt;25.1&lt;/td&gt; &#xA;   &lt;td&gt;24.43&lt;/td&gt; &#xA;   &lt;td&gt;25.05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/images/compare_radar.png&#34; alt=&#34;compare_radar&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;📌 其它 (Others)&lt;/h1&gt; &#xA;&lt;h3&gt;推理与导出&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/scripts/convert_model.py&#34;&gt;./scripts/convert_model.py&lt;/a&gt;可以将torch/transformers模型互相转换。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MiniMind的HuggingFace集合地址： &lt;a href=&#34;https://huggingface.co/collections/jingyaogong/minimind-66caf8d999f5c7fa64f399e5&#34;&gt;MiniMind&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;基于MiniMind-API服务接口&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/scripts/serve_openai_api.py&#34;&gt;./scripts/serve_openai_api.py&lt;/a&gt;完成了兼容openai-api的最简聊天接口，方便将自己的模型接入第三方UI 例如FastGPT、OpenWebUI、Dify等等。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;从&lt;a href=&#34;https://huggingface.co/collections/jingyaogong/minimind-66caf8d999f5c7fa64f399e5&#34;&gt;Huggingface&lt;/a&gt;下载模型权重文件，文件树：&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;MiniMind-Model-Name&amp;gt; (root dir)&#xA;├─&amp;lt;MiniMind-Model-Name&amp;gt;&#xA;|  ├── config.json&#xA;|  ├── generation_config.json&#xA;|  ├── LMConfig.py&#xA;|  ├── model.py&#xA;|  ├── pytorch_model.bin&#xA;|  ├── special_tokens_map.json&#xA;|  ├── tokenizer_config.json&#xA;|  ├── tokenizer.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动聊天服务端&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python serve_openai_api.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;测试服务接口&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python chat_openai_api.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;API接口示例，兼容openai api格式&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl http://ip:port/v1/chat/completions \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{ &#xA;    &#34;model&#34;: &#34;model-identifier&#34;,&#xA;    &#34;messages&#34;: [ &#xA;      { &#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;世界上最高的山是什么？&#34; }&#xA;    ], &#xA;    &#34;temperature&#34;: 0.7, &#xA;    &#34;max_tokens&#34;: 512,&#xA;    &#34;stream&#34;: true&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;📌 Acknowledge&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] 如果觉得&lt;code&gt;MiniMind系列&lt;/code&gt;对您有所帮助，可以在 GitHub 上加一个⭐&lt;br&gt; 篇幅超长水平有限难免纰漏，欢迎在Issues交流指正或提交PR改进项目&lt;br&gt; 您的小小支持就是持续改进此项目的动力！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🤝&lt;a href=&#34;https://github.com/jingyaogong/minimind/graphs/contributors&#34;&gt;贡献者&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;!--&#xA;&lt;a href=&#34;https://github.com/jingyaogong/minimind/graphs/contributors&#34;&gt;&#xA;  &lt;img src=&#34;https://contrib.rocks/image?repo=jingyaogong/minimind&amp;v3&#34; /&gt;&#xA;&lt;/a&gt;&#xA;--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jingyaogong&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/62287848&#34; width=&#34;70px&#34; height=&#34;70px&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/MuWinds&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/93832089&#34; width=&#34;70px&#34; height=&#34;70px&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/chuanzhubin&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2813798&#34; width=&#34;70px&#34; height=&#34;70px&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/iomgaa-ycz&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/124225682&#34; width=&#34;70px&#34; height=&#34;70px&#34;&gt;&lt;/a&gt; &amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;😊鸣谢&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ipfgao&#34;&gt;&lt;b&gt;@ipfgao&lt;/b&gt;&lt;/a&gt;: &lt;a href=&#34;https://github.com/jingyaogong/minimind/issues/26&#34;&gt;🔗训练步骤记录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/chuanzhubin&#34;&gt;&lt;b&gt;@chuanzhubin&lt;/b&gt;&lt;/a&gt;: &lt;a href=&#34;https://github.com/jingyaogong/minimind/pull/34&#34;&gt;🔗代码逐行注释&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/WangRongsheng&#34;&gt;&lt;b&gt;@WangRongsheng&lt;/b&gt;&lt;/a&gt;: &lt;a href=&#34;https://github.com/jingyaogong/minimind/issues/39&#34;&gt;🔗大型数据集预处理&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pengqianhan&#34;&gt;&lt;b&gt;@pengqianhan&lt;/b&gt;&lt;/a&gt;: &lt;a href=&#34;https://github.com/jingyaogong/minimind/issues/73&#34;&gt;🔗一个简明教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/RyanSunn&#34;&gt;&lt;b&gt;@RyanSunn&lt;/b&gt;&lt;/a&gt;: &lt;a href=&#34;https://github.com/jingyaogong/minimind/issues/75&#34;&gt;🔗推理过程学习记录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Nijikadesu&#34;&gt;&lt;b&gt;@Nijikadesu&lt;/b&gt;&lt;/a&gt;: &lt;a href=&#34;https://github.com/jingyaogong/minimind/issues/213&#34;&gt;🔗以交互笔记本方式分解项目代码&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt; &lt;b&gt;参考链接 &amp;amp; 感谢以下优秀的论文或项目&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;排名不分任何先后顺序&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/meta-llama/llama3&#34;&gt;https://github.com/meta-llama/llama3&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/karpathy/llama2.c&#34;&gt;https://github.com/karpathy/llama2.c&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/DLLXW/baby-llama2-chinese&#34;&gt;https://github.com/DLLXW/baby-llama2-chinese&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2405.04434&#34;&gt;(DeepSeek-V2)https://arxiv.org/abs/2405.04434&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/charent/ChatLM-mini-Chinese&#34;&gt;https://github.com/charent/ChatLM-mini-Chinese&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/wdndev/tiny-llm-zh&#34;&gt;https://github.com/wdndev/tiny-llm-zh&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/2401.04088&#34;&gt;(Mistral-MoE)https://arxiv.org/pdf/2401.04088&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/Tongjilibo/build_MiniLLM_from_scratch&#34;&gt;https://github.com/Tongjilibo/build_MiniLLM_from_scratch&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/jzhang38/TinyLlama&#34;&gt;https://github.com/jzhang38/TinyLlama&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/AI-Study-Han/Zero-Chatgpt&#34;&gt;https://github.com/AI-Study-Han/Zero-Chatgpt&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/xusenlinzy/api-for-open-llm&#34;&gt;https://github.com/xusenlinzy/api-for-open-llm&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/HqWu-HITCS/Awesome-Chinese-LLM&#34;&gt;https://github.com/HqWu-HITCS/Awesome-Chinese-LLM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;🫶支持者&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/jingyaogong/minimind/stargazers&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://reporoster.com/stars/dark/jingyaogong/minimind&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://reporoster.com/stars/jingyaogong/minimind&#34;&gt; &#xA;  &lt;img alt=&#34;github contribution grid snake animation&#34; src=&#34;https://reporoster.com/stars/jingyaogong/minimind&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/jingyaogong/minimind/network/members&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://reporoster.com/forks/dark/jingyaogong/minimind&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://reporoster.com/forks/jingyaogong/minimind&#34;&gt; &#xA;  &lt;img alt=&#34;github contribution grid snake animation&#34; src=&#34;https://reporoster.com/forks/jingyaogong/minimind&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=jingyaogong/minimind&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=jingyaogong/minimind&amp;amp;type=Date&#34;&gt; &#xA; &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=jingyaogong/minimind&amp;amp;type=Date&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This repository is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/jingyaogong/minimind/master/LICENSE&#34;&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>