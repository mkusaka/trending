<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-01T01:56:25Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nuejs/nuejs</title>
    <updated>2023-10-01T01:56:25Z</updated>
    <id>tag:github.com,2023-10-01:/nuejs/nuejs</id>
    <link href="https://github.com/nuejs/nuejs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build user interfaces with cleaner code. Alternative to React, Vue, and Svelte&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://nuejs.org&#34;&gt; &lt;img src=&#34;https://nuejs.org/global/logo/logo.png&#34; width=&#34;275&#34; alt=&#34;Nue logo&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nuejs.org/backstory/&#34;&gt;Backstory&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/nuejs.org/docs/nuejs/&#34;&gt;Documentation&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/nuejs.org/docs/nuejs/examples/&#34;&gt;Examples&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/nuejs.org/docs/nuejs/getting-started.html&#34;&gt;Getting started&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is Nue JS?&lt;/h1&gt; &#xA;&lt;p&gt;Nue JS is an exceptionally small (2.3kb minzipped) JavaScript library for building web interfaces. It is the core of the upcoming &lt;a href=&#34;https://raw.githubusercontent.com/nuejs.org/tools/&#34;&gt;Nue toolset&lt;/a&gt;. It’s like &lt;strong&gt;Vue.js, React.js&lt;/strong&gt;, or &lt;strong&gt;Svelte&lt;/strong&gt; but there are no hooks, effects, props, portals, watchers, provides, injects, suspension, or other unusual abstractions on your way. Learn the basics of HTML, CSS, and JavaScript and you are good to go.&lt;/p&gt; &#xA;&lt;h2&gt;Build user interfaces with cleaner code&lt;/h2&gt; &#xA;&lt;p&gt;With Nue your UI code is cleaner and usually smaller:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://nuejs.org/docs/img/react-listbox.jpg?1&#34; alt=&#34;The difference in coding style&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s not unusual to see &lt;a href=&#34;https://raw.githubusercontent.com/nuejs.org/compare/component.html&#34;&gt;2x-10x differences&lt;/a&gt; in the amount of code you need to write.&lt;/p&gt; &#xA;&lt;h2&gt;&#34;It&#39;s just HTML&#34;&lt;/h2&gt; &#xA;&lt;p&gt;Nue uses an HTML-based template syntax:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&#34;{ type }&#34;&amp;gt;&#xA;  &amp;lt;img src=&#34;{ img }&#34;&amp;gt;&#xA;  &amp;lt;aside&amp;gt;&#xA;    &amp;lt;h3&amp;gt;{ title }&amp;lt;/h3&amp;gt;&#xA;    &amp;lt;p :if=&#34;desc&#34;&amp;gt;{ desc }&amp;lt;/p&amp;gt;&#xA;    &amp;lt;slot/&amp;gt;&#xA;  &amp;lt;/aside&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;While React and JSX claim to be &#34;Just JavaScript&#34;, Nue can be thought of as &#34;Just HTML&#34;. Nue is perfect for &lt;a href=&#34;https://css-tricks.com/the-great-divide/&#34;&gt;UX developers&lt;/a&gt; focusing on interaction design, accessibility, and user experience.&lt;/p&gt; &#xA;&lt;h2&gt;Built to scale&lt;/h2&gt; &#xA;&lt;p&gt;Three reasons why Nue scales extremely well:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nuejs.org/why/#minimalism&#34;&gt;Minimalism&lt;/a&gt;, a hundred lines of code is easier to scale than a thousand lines of code&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nuejs.org//why/#soc&#34;&gt;Separation of concerns&lt;/a&gt;, easy-to-understand code is easier to scale than &#34;spaghetti code&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Separation of talent&lt;/strong&gt;, when UX developers focus on the &lt;a href=&#34;https://bradfrost.com/blog/post/front-of-the-front-end-and-back-of-the-front-end-web-development/&#34;&gt;front of the frontend&lt;/a&gt; and JS/TS developers focus on the back of the frontend your team skills are optimally aligned:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://nuejs.org/docs/img/ux-developer-big.png&#34; alt=&#34;The best results are gained when UX developers and JavaScript developers work together without overlaps&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reactive, hybrid, and isomorphic&lt;/h2&gt; &#xA;&lt;p&gt;Nue has a rich component model and it allows you to create all kinds of applications using different kinds of components:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nuejs.org/docs/nuejs/server-components.html&#34;&gt;Server components&lt;/a&gt; are rendered on the server. They help you build content-focused websites that load faster without JavaScript and are crawled by search engines.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nuejs.org/docs/nuejs/reactive-components.html&#34;&gt;Reactive components&lt;/a&gt; are rendered on the client. They help you build dynamic islands or single-page applications.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nuejs.org/docs/nuejs/isomorphic-components.html#hybrid&#34;&gt;Hybrid components&lt;/a&gt; are partly rendered on the server side, and partly on the client side. These components help you build reactive, SEO-friendly components like video tags or image galleries.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nuejs.org/docs/nuejs/isomorphic-components.html&#34;&gt;Universal components&lt;/a&gt; are used identically on both server- and client side.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;UI library files&lt;/h2&gt; &#xA;&lt;p&gt;Nue allows you to define multiple components on a single file. This is a great way to group related components together and simplify dependency management.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- shared variables and methods --&amp;gt;&#xA;&amp;lt;script&amp;gt;&#xA;  import { someMethod } from &#39;./util.js&#39;&#xA;&amp;lt;/script&amp;gt;&#xA;&#xA;&amp;lt;!-- first component --&amp;gt;&#xA;&amp;lt;article @name=&#34;todo&#34;&amp;gt;&#xA;  ...&#xA;&amp;lt;/article&amp;gt;&#xA;&#xA;&amp;lt;!-- second component --&amp;gt;&#xA;&amp;lt;div @name=&#34;todo-item&#34;&amp;gt;&#xA;  ...&#xA;&amp;lt;/div&amp;gt;&#xA;&#xA;&amp;lt;!-- third component --&amp;gt;&#xA;&amp;lt;time @name=&#34;cute-date&#34;&amp;gt;&#xA;  ...&#xA;&amp;lt;/time&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With library files, your filesystem hierarchy looks cleaner and you need less boilerplate code to tie connected pieces together. They help in packaging libraries for others.&lt;/p&gt; &#xA;&lt;h2&gt;Simpler tooling&lt;/h2&gt; &#xA;&lt;p&gt;Nue JS comes with a simple &lt;code&gt;render&lt;/code&gt; function for server-side rendering and a &lt;code&gt;compile&lt;/code&gt; function to generate components for the browser. There is no need for toolchains like Webpack or Vite to hijack your natural workflow. Just import Nue to your project and you are good to go.&lt;/p&gt; &#xA;&lt;p&gt;You can of course use a bundler on the business model if your application becomes more complex with tons of dependencies. &lt;a href=&#34;https://raw.githubusercontent.com/bun.sh&#34;&gt;Bun&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/esbuild.github.io/&#34;&gt;esbuild&lt;/a&gt; are great options.&lt;/p&gt; &#xA;&lt;h2&gt;Use cases&lt;/h2&gt; &#xA;&lt;p&gt;Nue JS is a versatile tool that supports both server- and client-side rendering and helps you build both content-focused websites and reactive single-page applications.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;UI library development&lt;/strong&gt; Create reusable components for reactive frontends or server-generated content.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Progressive enhancement&lt;/strong&gt; Nue JS is a perfect micro library to enhance your content-focused website with dynamic components or &#34;islands&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Static website generators&lt;/strong&gt; Just import it into your project and you are ready to render. No bundlers are needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Single-page applications&lt;/strong&gt; Build simpler and more scalable apps together with an upcoming &lt;em&gt;Nue MVC&lt;/em&gt;- project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Templating&lt;/strong&gt; Nue is a generic tool to generate your websites and HTML emails.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>chartjs/Chart.js</title>
    <updated>2023-10-01T01:56:25Z</updated>
    <id>tag:github.com,2023-10-01:/chartjs/Chart.js</id>
    <link href="https://github.com/chartjs/Chart.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple HTML5 Charts using the &lt;canvas&gt; tag&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.chartjs.org/&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://www.chartjs.org/media/logo-title.svg?sanitize=true&#34; alt=&#34;https://www.chartjs.org/&#34;&gt;&lt;br&gt; &lt;/a&gt; Simple yet flexible JavaScript charting for designers &amp;amp; developers &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.chartjs.org/docs/latest/getting-started/installation.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/chartjs/Chart.js.svg?style=flat-square&amp;amp;maxAge=600&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chartjs/Chart.js/actions?query=workflow%3ACI+branch%3Amaster&#34;&gt;&lt;img alt=&#34;GitHub Workflow Status&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/chartjs/Chart.js/ci.yml?branch=master&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/chartjs/Chart.js?branch=master&#34;&gt;&lt;img src=&#34;https://img.shields.io/coveralls/chartjs/Chart.js.svg?style=flat-square&amp;amp;maxAge=600&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chartjs/awesome&#34;&gt;&lt;img src=&#34;https://awesome.re/badge-flat2.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/HxEguTK6av&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discord-chartjs-blue?style=flat-square&amp;amp;maxAge=3600&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;All the links point to the new version 4 of the lib.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chartjs.org/docs/latest/&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chartjs.org/docs/latest/getting-started/index&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chartjs.org/docs/latest/general/data-structures&#34;&gt;General&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chartjs.org/docs/latest/configuration/index&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chartjs.org/docs/latest/charts/line&#34;&gt;Charts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chartjs.org/docs/latest/axes/index&#34;&gt;Axes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chartjs.org/docs/latest/developers/index&#34;&gt;Developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chartjs/awesome&#34;&gt;Popular Extensions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chartjs.org/samples/&#34;&gt;Samples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In case you are looking for an older version of the docs, you will have to specify the specific version in the url like this: &lt;a href=&#34;https://www.chartjs.org/docs/2.9.4/&#34;&gt;https://www.chartjs.org/docs/2.9.4/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Instructions on building and testing Chart.js can be found in &lt;a href=&#34;https://www.chartjs.org/docs/master/developers/contributing.html#building-and-testing&#34;&gt;the documentation&lt;/a&gt;. Before submitting an issue or a pull request, please take a moment to look over the &lt;a href=&#34;https://www.chartjs.org/docs/master/developers/contributing&#34;&gt;contributing guidelines&lt;/a&gt; first. For support, please post questions on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/chart.js&#34;&gt;Stack Overflow&lt;/a&gt; with the &lt;code&gt;chart.js&lt;/code&gt; tag.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Chart.js is available under the &lt;a href=&#34;https://raw.githubusercontent.com/chartjs/Chart.js/master/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>windmill-labs/windmill</title>
    <updated>2023-10-01T01:56:25Z</updated>
    <id>tag:github.com,2023-10-01:/windmill-labs/windmill</id>
    <link href="https://github.com/windmill-labs/windmill" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source developer platform to turn scripts into workflows and UIs. Open-source alternative to Airplane and Retool.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.windmill.dev/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/windmill-banner.png&#34; alt=&#34;windmill.dev&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;em&gt;.&lt;/em&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Open-source developer infrastructure for internal tools. Self-hostable alternative to Airplane, Pipedream, Superblocks and a simplified Temporal with autogenerated UIsm and custom UIs to trigger workflows and scripts as internal apps. &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; Scripts are turned into UIs and no-code modules, no-code modules can be composed into very rich flows, and script and flows can be triggered from internal UIs made with a low-code builder. The script languages supported are: Python, TypeScript, Go, Bash, SQL. Scripts can be generated by an AI assistant powered by OpenAI. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/windmill-labs/windmill/raw/main/LICENSE-AGPL&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-AGPLv3-blue.svg?sanitize=true&#34; alt=&#34;Package version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/windmill-labs/windmill/actions/workflows/docker-image.yml&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/windmill-labs/windmill/actions/workflows/docker-image.yml/badge.svg?sanitize=true&#34; alt=&#34;Docker Image CI&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/wmill&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/wmill?color=%2334D058&amp;amp;label=pypi%20package&#34; alt=&#34;Package version&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://img.shields.io/github/commit-activity/m/windmill-labs/windmill&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/windmill-labs/windmill&#34; alt=&#34;Commit activity&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/V7PM2YHsPB&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://discordapp.com/api/guilds/930051556043276338/widget.png&#34; alt=&#34;Discord Shield&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://app.windmill.dev&#34;&gt;Try it&lt;/a&gt; - &lt;a href=&#34;https://www.windmill.dev/docs/intro/&#34;&gt;Docs&lt;/a&gt; - &lt;a href=&#34;https://discord.gg/V7PM2YHsPB&#34;&gt;Discord&lt;/a&gt; - &lt;a href=&#34;https://hub.windmill.dev&#34;&gt;Hub&lt;/a&gt; - &lt;a href=&#34;https://www.windmill.dev/docs/misc/contributing&#34;&gt;Contributor&#39;s guide&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Windmill - Turn scripts into workflows and UIs that you can share and run at scale&lt;/h1&gt; &#xA;&lt;p&gt;Windmill is &lt;b&gt;fully open-sourced (AGPLv3)&lt;/b&gt; and Windmill Labs offers dedicated instance and commercial support and licenses.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/stacks.svg?sanitize=true&#34; alt=&#34;Windmill Diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/windmill-labs/windmill/assets/122811744/0b132cd1-ee67-4505-822f-0c7ee7104252&#34;&gt;https://github.com/windmill-labs/windmill/assets/122811744/0b132cd1-ee67-4505-822f-0c7ee7104252&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#windmill---turn-scripts-into-workflows-and-uis-that-you-can-share-and-run-at-scale&#34;&gt;Windmill - Turn scripts into workflows and UIs that you can share and run at scale&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#main-concepts&#34;&gt;Main Concepts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#show-me-some-actual-script-code&#34;&gt;Show me some actual script code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#cli&#34;&gt;CLI&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#running-scripts-locally&#34;&gt;Running scripts locally&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#stack&#34;&gt;Stack&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#security&#34;&gt;Security&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#sandboxing&#34;&gt;Sandboxing&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#secrets-credentials-and-sensitive-values&#34;&gt;Secrets, credentials and sensitive values&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#how-to-self-host&#34;&gt;How to self-host&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#docker-compose&#34;&gt;Docker compose&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#kubernetes-k8s-and-helm-charts&#34;&gt;Kubernetes (k8s) and Helm charts&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#postgres-without-superuser&#34;&gt;Postgres without superuser&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#commercial-license&#34;&gt;Commercial license&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#oauth-for-self-hosting&#34;&gt;OAuth for self-hosting&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#smtp-for-self-hosting&#34;&gt;smtp for self-hosting&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#resource-types&#34;&gt;Resource types&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#environment-variables&#34;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#run-a-local-dev-setup&#34;&gt;Run a local dev setup&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#only-frontend&#34;&gt;only Frontend&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#backend--frontend&#34;&gt;Backend + Frontend&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#copyright&#34;&gt;Copyright&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Main Concepts&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Define a minimal and generic script in Python, TypeScript, Go or Bash that solves a specific task. Here sending a POST request. The code can be defined in the provided Web IDE or synchronized with your own github repo: &lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/windmill-editor.png&#34; alt=&#34;Step 1&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Your scripts parameters are automatically parsed and generate a frontend. &lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/windmill-run.png&#34; alt=&#34;Step 2&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/windmill-result.png&#34; alt=&#34;Step 3&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make it flow! You can chain your scripts or scripts made by the community shared on &lt;a href=&#34;https://hub.windmill.dev&#34;&gt;WindmillHub&lt;/a&gt;. &lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/windmill-flow.png&#34; alt=&#34;Step 3&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build complex UIs on top of your scripts and flows. &lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/windmill-builder.png&#34; alt=&#34;Step 4&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Scripts and flows can also be triggered by a cron schedule &#39;_/5 _ * * *&#39; or through webhooks.&lt;/p&gt; &#xA;&lt;p&gt;You can build your entire infra on top of Windmill!&lt;/p&gt; &#xA;&lt;h2&gt;Show me some actual script code&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;//import any dependency  from npm&#xA;import * as wmill from &#34;https://deno.land/x/windmill@v1.136.0/mod.ts&#34;;&#xA;import cowsay from &#34;npm:cowsay@1.5.0&#34;;&#xA;&#xA;// fill the type, or use the +Resource type to get a type-safe reference to a resource&#xA;type Postgresql = {&#xA;  host: string;&#xA;  port: number;&#xA;  user: string;&#xA;  dbname: string;&#xA;  sslmode: string;&#xA;  password: string;&#xA;};&#xA;&#xA;export async function main(&#xA;  a: number,&#xA;  b: &#34;my&#34; | &#34;enum&#34;,&#xA;  c: Postgresql,&#xA;  d = &#34;inferred type string from default arg&#34;,&#xA;  e = { nested: &#34;object&#34; }&#xA;  //f: wmill.Base64&#xA;) {&#xA;  const email = Deno.env.get(&#34;WM_EMAIL&#34;);&#xA;  // variables are permissioned and by path&#xA;  let variable = await wmill.getVariable(&#34;f/company-folder/my_secret&#34;);&#xA;  const lastTimeRun = await wmill.getState();&#xA;  // logs are printed and always inspectable&#xA;  console.log(cowsay.say({ text: &#34;hello &#34; + email + &#34; &#34; + lastTimeRun }));&#xA;  await wmill.setState(Date.now());&#xA;&#xA;  // return is serialized as JSON&#xA;  return { foo: d, variable };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CLI&lt;/h2&gt; &#xA;&lt;p&gt;We have a powerful CLI to interact with the windmill platform and sync your scripts from local files, github repos and to run scripts and flows on the instance from local commands. See &lt;a href=&#34;https://github.com/windmill-labs/windmill/tree/main/cli&#34;&gt;more details&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/cli/vhs/output/setup.gif&#34; alt=&#34;CLI Screencast&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Running scripts locally&lt;/h3&gt; &#xA;&lt;p&gt;You can run your script locally easily, you simply need to pass the right environment variables for the &lt;code&gt;wmill&lt;/code&gt; client library to fetch resources and variables from your instance if necessary. See more: &lt;a href=&#34;https://www.windmill.dev/docs/advanced/local_development/&#34;&gt;https://www.windmill.dev/docs/advanced/local_development/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Postgres as the database&lt;/li&gt; &#xA; &lt;li&gt;backend in Rust with the following highly-available and horizontally scalable architecture: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;stateless API backend&lt;/li&gt; &#xA;   &lt;li&gt;workers that pull jobs from a queue in Postgres (and later, Kafka or Redis. Upvote &lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#https://github.com/windmill-labs/windmill/issues/173&#34;&gt;#173&lt;/a&gt; if interested )&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;frontend in Svelte&lt;/li&gt; &#xA; &lt;li&gt;scripts executions are sandboxed using google&#39;s &lt;a href=&#34;https://github.com/google/nsjail&#34;&gt;nsjail&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;javascript runtime is the &lt;a href=&#34;https://denolib.gitbook.io/guide/&#34;&gt;deno_core rust library&lt;/a&gt; (which itself uses the &lt;a href=&#34;https://github.com/denoland/rusty_v8&#34;&gt;rusty_v8&lt;/a&gt; and hence V8 underneath)&lt;/li&gt; &#xA; &lt;li&gt;typescript runtime is deno&lt;/li&gt; &#xA; &lt;li&gt;python runtime is python3&lt;/li&gt; &#xA; &lt;li&gt;golang runtime is 1.19.1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;h3&gt;Sandboxing&lt;/h3&gt; &#xA;&lt;p&gt;Windmill uses &lt;a href=&#34;https://github.com/google/nsjail&#34;&gt;nsjail&lt;/a&gt; and deno&#39;s sandboxing capabilities. It is production multi-tenant grade secure. Do not take our word for it, take &lt;a href=&#34;https://fly.io/blog/sandboxing-and-workload-isolation/&#34;&gt;fly.io&#39;s one&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Secrets, credentials and sensitive values&lt;/h3&gt; &#xA;&lt;p&gt;There is one encryption key per workspace to encrypt the credentials and secrets stored in Windmill&#39;s K/V store.&lt;/p&gt; &#xA;&lt;p&gt;In addition, we strongly recommend that you encrypt the whole Postgres database. That is what we do at &lt;a href=&#34;https://app.windmill.dev&#34;&gt;https://app.windmill.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Once a job started, there is no overhead compared to running the same script on the node with its corresponding runner (Deno/Go/Python/Bash). The added latency from a job being pulled from the queue, started, and then having its result sent back to the database is ~50ms. A typical lightweight deno job will take around 100ms total.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/diagram.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;How to self-host&lt;/h2&gt; &#xA;&lt;p&gt;We only provide docker-compose setup here. For more advanced setups, like compiling from source or using without a postgres super user, see &lt;a href=&#34;https://www.windmill.dev/docs/advanced/self_host&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Docker compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl https://raw.githubusercontent.com/windmill-labs/windmill/main/docker-compose.yml -o docker-compose.yml&#xA;curl https://raw.githubusercontent.com/windmill-labs/windmill/main/Caddyfile -o Caddyfile&#xA;curl https://raw.githubusercontent.com/windmill-labs/windmill/main/.env -o .env&#xA;&#xA;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;http://localhost&#34;&gt;http://localhost&lt;/a&gt; et voilà :)&lt;/p&gt; &#xA;&lt;p&gt;The default super-admin user is: &lt;a href=&#34;mailto:admin@windmill.dev&#34;&gt;admin@windmill.dev&lt;/a&gt; / changeme.&lt;/p&gt; &#xA;&lt;p&gt;From there, you can follow the setup app and create other users.&lt;/p&gt; &#xA;&lt;h3&gt;Kubernetes (k8s) and Helm charts&lt;/h3&gt; &#xA;&lt;p&gt;We publish helm charts at: &lt;a href=&#34;https://github.com/windmill-labs/windmill-helm-charts&#34;&gt;https://github.com/windmill-labs/windmill-helm-charts&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Postgres without superuser&lt;/h3&gt; &#xA;&lt;p&gt;If you do not want, or cannot (for instance, in AWS Aurora or Cloud sql) use a postgres superuser, you can run &lt;code&gt;./init-db-as-superuser.sql&lt;/code&gt; to init the required users for Windmill.&lt;/p&gt; &#xA;&lt;h3&gt;Commercial license&lt;/h3&gt; &#xA;&lt;p&gt;To self-host Windmill, you must respect the terms of the AGPLv3 license which you do not need to worry about for personal uses. For business uses, you should be fine if you do not re-expose it in any way Windmill to your users and are comfortable with AGPLv3.&lt;/p&gt; &#xA;&lt;p&gt;To re-expose any Windmill parts to your users as a feature of your product, or to build a feature on top of Windmill, to comply with AGPLv3 your product must be AGPLv3 or you must get a commercial license. Contact us at &lt;a href=&#34;mailto:ruben@windmill.dev&#34;&gt;ruben@windmill.dev&lt;/a&gt; if you have any doubts.&lt;/p&gt; &#xA;&lt;p&gt;In addition, a commercial license grants you a dedicated engineer to transition your current infrastructure to Windmill, support with tight SLA, and our global cache sync for high-performance/no dependency cache miss of cluster from 10+ nodes to 200+ nodes.&lt;/p&gt; &#xA;&lt;h3&gt;OAuth for self-hosting&lt;/h3&gt; &#xA;&lt;p&gt;To get the same oauth integrations as Windmill Cloud, mount &lt;code&gt;oauth.json&lt;/code&gt; with the following format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;&amp;lt;client&amp;gt;&#34;: {&#xA;    &#34;id&#34;: &#34;&amp;lt;CLIENT_ID&amp;gt;&#34;,&#xA;    &#34;secret&#34;: &#34;&amp;lt;CLIENT_SECRET&amp;gt;&#34;,&#xA;    &#34;allowed_domains&#34;: [&#34;windmill.dev&#34;] //restrict a client OAuth login to some domains&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and mount it at &lt;code&gt;/usr/src/app/oauth.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The redirect url for the oauth clients is: &lt;code&gt;&amp;lt;instance_url&amp;gt;/user/login_callback/&amp;lt;client&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Even if you setup oauth, you will still want to &lt;strong&gt;login as &lt;a href=&#34;mailto:admin@windmill.dev&#34;&gt;admin@windmill.dev&lt;/a&gt; / changeme&lt;/strong&gt; to setup your instance as a super-admin and give yourself admin rights.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/windmill-labs/windmill/raw/main/backend/oauth_connect.json&#34;&gt;The list of all possible &#34;connect an app&#34; oauth clients&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To add more &#34;connect an app&#34; OAuth clients to the Windmill project, read the &lt;a href=&#34;https://www.windmill.dev/docs/misc/contributing&#34;&gt;Contributor&#39;s guide&lt;/a&gt;. We welcome contributions!&lt;/p&gt; &#xA;&lt;p&gt;You may also add your own custom OAuth2 IdP and OAuth2 Resource provider:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;&amp;lt;client&amp;gt;&#34;: {&#xA;    &#34;id&#34;: &#34;&amp;lt;CLIENT_ID&amp;gt;&#34;,&#xA;    &#34;secret&#34;: &#34;&amp;lt;CLIENT_SECRET&amp;gt;&#34;,&#xA;    // To add a new OAuth2 IdP&#xA;    &#34;login_config&#34;: {&#xA;      &#34;auth_url&#34;: &#34;&amp;lt;auth_endpoint&amp;gt;&#34;,&#xA;      &#34;token_url&#34;: &#34;&amp;lt;token_endpoint&amp;gt;&#34;,&#xA;      &#34;userinfo_url&#34;: &#34;&amp;lt;userinfo endpoint&amp;gt;&#34;,&#xA;      &#34;scopes&#34;: [&#34;scope1&#34;, &#34;scope2&#34;],&#xA;      &#34;extra_params&#34;: &#34;&amp;lt;if_needed&amp;gt;&#34;&#xA;    },&#xA;    // To add a new OAuth2 Resource&#xA;    &#34;connect_config&#34;: {&#xA;      &#34;auth_url&#34;: &#34;&amp;lt;auth_endpoint&amp;gt;&#34;,&#xA;      &#34;token_url&#34;: &#34;&amp;lt;token_endpoint&amp;gt;&#34;,&#xA;      &#34;scopes&#34;: [&#34;scope1&#34;, &#34;scope2&#34;],&#xA;      &#34;extra_params&#34;: &#34;&amp;lt;if_needed&amp;gt;&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;smtp for self-hosting&lt;/h3&gt; &#xA;&lt;p&gt;For users to receive emails when you invite them to workspaces or add them to the instances using their emails, configure the SMTP env variables in the servers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SMTP_FROM=noreply@windmill.dev&#xA;SMTP_HOST=smtp.gmail.com&#xA;SMTP_PORT=587&#xA;SMTP_USERNAME=ruben@windmill.dev&#xA;SMTP_PASSWORD=yourpasswordapp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Resource types&lt;/h3&gt; &#xA;&lt;p&gt;You will also want to import all the approved resource types from &lt;a href=&#34;https://hub.windmill.dev&#34;&gt;WindmillHub&lt;/a&gt;. A setup script will prompt you to have it being synced automatically everyday.&lt;/p&gt; &#xA;&lt;h2&gt;Environment Variables&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment Variable name&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Api Server/Worker/All&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATABASE_URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Postgres database url.&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DISABLE_NSJAIL&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Disable Nsjail Sandboxing&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SERVER_BIND_ADDR&lt;/td&gt; &#xA;   &lt;td&gt;0.0.0.0&lt;/td&gt; &#xA;   &lt;td&gt;IP Address on which to bind listening socket&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PORT&lt;/td&gt; &#xA;   &lt;td&gt;8000&lt;/td&gt; &#xA;   &lt;td&gt;Exposed port&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NUM_WORKERS&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;The number of worker per Worker instance (Set to 0 for API/Server instances, Set to 1 for normal workers, and &amp;gt; 1 for workers dedicated to native jobs)&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DISABLE_SERVER&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Disable the external API, operate as a worker only instance&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;METRICS_ADDR&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;(ee only) The socket addr at which to expose Prometheus metrics at the /metrics path. Set to &#34;true&#34; to expose it on port 8001&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JSON_FMT&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Output the logs in json format instead of logfmt&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BASE_URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The base url that is exposed publicly to access your instance&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TIMEOUT&lt;/td&gt; &#xA;   &lt;td&gt;60 _ 60 _ 24 * 7 (1 week)&lt;/td&gt; &#xA;   &lt;td&gt;The maximum time of execution of a script. When reached, the job is failed as having timedout.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SCRIPT_TOKEN_EXPIRY&lt;/td&gt; &#xA;   &lt;td&gt;900&lt;/td&gt; &#xA;   &lt;td&gt;The default duration period of the ephemeral-token generated at the beginning of a script&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ZOMBIE_JOB_TIMEOUT&lt;/td&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;   &lt;td&gt;The timeout after which a job is considered to be zombie if the worker did not send pings about processing the job (every server check for zombie jobs every 30s)&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RESTART_ZOMBIE_JOBS&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;If true then a zombie job is restarted (in-place with the same uuid and some logs), if false the zombie job is failed&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SLEEP_QUEUE&lt;/td&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;   &lt;td&gt;The number of ms to sleep in between the last check for new jobs in the DB. It is multiplied by NUM_WORKERS such that in average, for one worker instance, there is one pull every SLEEP_QUEUE ms.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MAX_LOG_SIZE&lt;/td&gt; &#xA;   &lt;td&gt;500000&lt;/td&gt; &#xA;   &lt;td&gt;The maximum number of characters a job can emit (log + result)&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DISABLE_NUSER&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;If Nsjail is enabled, disable the nsjail&#39;s &lt;code&gt;clone_newuser&lt;/code&gt; setting&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KEEP_JOB_DIR&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Keep the job directory after the job is done. Useful for debugging.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LICENSE_KEY (EE only)&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;License key checked at startup for the Enterprise Edition of Windmill&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;S3_CACHE_BUCKET (EE only)&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The S3 bucket to sync the cache of the workers to&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TAR_CACHE_RATE (EE only)&lt;/td&gt; &#xA;   &lt;td&gt;100&lt;/td&gt; &#xA;   &lt;td&gt;The rate at which to tar the cache of the workers. 100 means every 100th job in average (uniformly randomly distributed).&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SLACK_SIGNING_SECRET&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The signing secret of your Slack app. See &lt;a href=&#34;https://api.slack.com/authentication/verifying-requests-from-slack&#34;&gt;Slack documentation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;COOKIE_DOMAIN&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The domain of the cookie. If not set, the cookie will be set by the browser based on the full origin&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DENO_PATH&lt;/td&gt; &#xA;   &lt;td&gt;/usr/bin/deno&lt;/td&gt; &#xA;   &lt;td&gt;The path to the deno binary.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PYTHON_PATH&lt;/td&gt; &#xA;   &lt;td&gt;/usr/local/bin/python3&lt;/td&gt; &#xA;   &lt;td&gt;The path to the python binary.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GO_PATH&lt;/td&gt; &#xA;   &lt;td&gt;/usr/bin/go&lt;/td&gt; &#xA;   &lt;td&gt;The path to the go binary.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GOPRIVATE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The GOPRIVATE env variable to use private go modules&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GOPROXY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The GOPROXY env variable to use&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NETRC&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The netrc content to use a private go registry&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PIP_INDEX_URL&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The index url to pass for pip.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PIP_EXTRA_INDEX_URL&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The extra index url to pass to pip.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PIP_TRUSTED_HOST&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The trusted host to pass to pip.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PATH&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The path environment variable, usually inherited&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HOME&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The home directory to use for Go and Bash , usually inherited&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATABASE_CONNECTIONS&lt;/td&gt; &#xA;   &lt;td&gt;50 (Server)/3 (Worker)&lt;/td&gt; &#xA;   &lt;td&gt;The max number of connections in the database connection pool&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SUPERADMIN_SECRET&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;A token that would let the caller act as a virtual superadmin &lt;a href=&#34;mailto:superadmin@windmill.dev&#34;&gt;superadmin@windmill.dev&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TIMEOUT_WAIT_RESULT&lt;/td&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td&gt;The number of seconds to wait before timeout on the &#39;run_wait_result&#39; endpoint&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QUEUE_LIMIT_WAIT_RESULT&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The number of max jobs in the queue before rejecting immediately the request in &#39;run_wait_result&#39; endpoint. Takes precedence on the query arg. If none is specified, there are no limit.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DENO_AUTH_TOKENS&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Custom DENO_AUTH_TOKENS to pass to worker to allow the use of private modules&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DENO_FLAGS&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Override the flags passed to deno (default --allow-all) to tighten permissions. Minimum permissions needed are &#34;--allow-read=args.json --allow-write=result.json&#34;&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DENO_EXTRA_IMPORT_MAP&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;extra import map to use to run deno scripts (format: &lt;code&gt;key=value,key=value&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NPM_CONFIG_REGISTRY&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Registry to use for NPM dependencies, set if you have a private repository you need to use instead of the default public NPM registry&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PIP_LOCAL_DEPENDENCIES&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Specify dependencies that are installed locally and do not need to be solved nor installed again&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ADDITIONAL_PYTHON_PATHS&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Specify python paths (separated by a :) to be appended to the PYTHONPATH of the python jobs. To be used with PIP_LOCAL_DEPENDENCIES to use python codebases within Windmill&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;INCLUDE_HEADERS&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Whitelist of headers that are passed to jobs as args (separated by a comma)&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;INSTANCE_EVENTS_WEBHOOK&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Webhook to notify of events such as new user added, signup/invite. Can hook back to windmill to send emails&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GLOBAL_CACHE_INTERVAL&lt;/td&gt; &#xA;   &lt;td&gt;10*60&lt;/td&gt; &#xA;   &lt;td&gt;(Enterprise Edition only) Interval in seconds in between bucket sync of the cache. This interval * 2 is the time at which you&#39;re guaranteed all the worker&#39;s caches are synced together.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WORKER_TAGS&lt;/td&gt; &#xA;   &lt;td&gt;&#39;deno,go,python3,bash,flow,hub,dependency&#39;&lt;/td&gt; &#xA;   &lt;td&gt;The worker groups assigned to that workers&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DEDICATED_WORKER&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Unique script to run on that worker. Has to be in the form of &#xA;    &lt;workspace&gt;&#xA;     :&amp;lt;script_path&amp;gt;&#xA;    &lt;/workspace&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CUSTOM_TAGS&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The custom tags assignable to scripts.&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JOB_RETENTION_SECS&lt;/td&gt; &#xA;   &lt;td&gt;60&lt;em&gt;60&lt;/em&gt;24*60 //60 days&lt;/td&gt; &#xA;   &lt;td&gt;The time in seconds after which jobs get deleted. Set to 0 or -1 to never delete&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WAIT_RESULT_FAST_POLL_INTERVAL_MS&lt;/td&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;   &lt;td&gt;The time in between polling for the run_wait_result endpoints in fast poll mode&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WAIT_RESULT_SLOW_POLL_INTERVAL_MS&lt;/td&gt; &#xA;   &lt;td&gt;200&lt;/td&gt; &#xA;   &lt;td&gt;The time in between polling for the run_wait_result endpoints in fast poll mode&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WAIT_RESULT_FAST_POLL_DURATION_SECS&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;The duration of fast poll mode before switching to slow poll&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EXIT_AFTER_NO_JOB_FOR_SECS&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Exit worker if no job is received after duration in secs if defined&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OAUTH_JSON_AS_BASE64&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Base64 encoded JSON of the OAuth configuration. e.g &lt;code&gt;OAUTH_JSON_AS_BASE64=$(base64 oauth.json | tr -d &#39;\n&#39;)&lt;/code&gt; to encode it&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REQUEST_SIZE_LIMIT&lt;/td&gt; &#xA;   &lt;td&gt;2097152 (2MB)&lt;/td&gt; &#xA;   &lt;td&gt;Max request size which impact the maximum size of resources and payload size of job args&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ACCEPT_INVALID_CERTS&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Accept invalid certificates, including self-signed and expired certificates&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HTTP_PROXY&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;http_proxy&lt;/td&gt; &#xA;   &lt;td&gt;Server + Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HTTPS_PROXY&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;https_proxy&lt;/td&gt; &#xA;   &lt;td&gt;Server + Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NO_PROXY&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;no_proxy&lt;/td&gt; &#xA;   &lt;td&gt;Server + Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SMTP_FROM&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;the address to use as the from field for emails send&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SMTP_HOST&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;host for the smtp server to send invite emails&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SMTP_PORT&lt;/td&gt; &#xA;   &lt;td&gt;587&lt;/td&gt; &#xA;   &lt;td&gt;port for the smtp server to send invite emails&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SMTP_USERNAME&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;username for the smtp server to send invite emails&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SMTP_PASSWORD&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;password for the smtp server to send invite emails&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SMTP_TLS_IMPLICIT&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.rs/mail-send/latest/mail_send/struct.SmtpClientBuilder.html#method.implicit_tlsemails&#34;&gt;https://docs.rs/mail-send/latest/mail_send/struct.SmtpClientBuilder.html#method.implicit_tlsemails&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CREATE_WORKSPACE_REQUIRE_SUPERADMIN&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;If true, only superadmin can create workspaces&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GLOBAL_ERROR_HANDLER_PATH_IN_ADMINS_WORKSPACE&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Path to a script to run when a root job fails. The script will be run in and from the admins workspace&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WHITELIST_ENVS&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;List of envs variables, separated by a &#39;,&#39; that are whitelisted as being safe to passthrough the workers&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SAML_METADATA&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;SAML Metadata URL to enable SAML SSO (EE only)&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SECRET_SALT&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Secret Salt used for encryption and decryption of secrets. If defined, the secrets will not be decryptable unless the right salt is passed in, which is the case for the workers and the server&lt;/td&gt; &#xA;   &lt;td&gt;Server + Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_AZURE_BASE_PATH&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Azure OpenAI API base path (no trailing slash)&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Run a local dev setup&lt;/h2&gt; &#xA;&lt;h3&gt;only Frontend&lt;/h3&gt; &#xA;&lt;p&gt;This will use the backend of &lt;a href=&#34;https://app.windmill.dev&#34;&gt;https://app.windmill.dev&lt;/a&gt; but your own frontend with hot-code reloading.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;frontend/&lt;/code&gt;: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;npm run generate-backend-client&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Et voilà, windmill should be available at &lt;code&gt;http://localhost:3000/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Backend + Frontend&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/frontend/README_DEV.md&#34;&gt;./frontend/README_DEV.md&lt;/a&gt; file for all running options.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a Postgres Database for Windmill and create an admin role inside your Postgres setup. The easiest way to get a working postgres is running &lt;code&gt;cargo install --version ^0.7 sqlx-cli &amp;amp;&amp;amp; sqlx migrate run&lt;/code&gt;. This will also avoid compile time issue with sqlx&#39;s &lt;code&gt;query!&lt;/code&gt; macro&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/google/nsjail&#34;&gt;nsjail&lt;/a&gt; and have it accessible in your PATH&lt;/li&gt; &#xA; &lt;li&gt;Install deno and python3, have the bins at &lt;code&gt;/usr/bin/deno&lt;/code&gt; and &lt;code&gt;/usr/local/bin/python3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://caddyserver.com&#34;&gt;caddy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;frontend/&lt;/code&gt;: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;npm run generate-backend-client&lt;/code&gt; then &lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;In another shell &lt;code&gt;npm run build&lt;/code&gt; otherwise the backend will not find the &lt;code&gt;frontend/build&lt;/code&gt; folder and will crash&lt;/li&gt; &#xA;   &lt;li&gt;In another shell &lt;code&gt;sudo caddy run --config Caddyfile&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;backend/&lt;/code&gt;: &lt;code&gt;DATABASE_URL=&amp;lt;DATABASE_URL_TO_YOUR_WINDMILL_DB&amp;gt; RUST_LOG=info cargo run&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Et voilà, windmill should be available at &lt;code&gt;http://localhost/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/windmill-labs/windmill/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=windmill-labs/windmill&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Windmill Labs, Inc 2023&lt;/p&gt;</summary>
  </entry>
</feed>