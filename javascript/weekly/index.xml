<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-12-29T01:42:28Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gildas-lormeau/SingleFile</title>
    <updated>2025-12-29T01:42:28Z</updated>
    <id>tag:github.com,2025-12-29:/gildas-lormeau/SingleFile</id>
    <link href="https://github.com/gildas-lormeau/SingleFile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Web Extension for saving a faithful copy of a complete web page in a single HTML file&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SingleFile&lt;/h1&gt; &#xA;&lt;p&gt;SingleFile is a Web Extension (and a CLI tool) compatible with Chrome, Firefox (Desktop and Mobile), Microsoft Edge, Safari, Vivaldi, Brave, Waterfox, Yandex browser, and Opera. It helps you to save a complete web page into a single HTML file.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#singlefile&#34;&gt;SingleFile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#additional-notes&#34;&gt;Additional notes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#release-notes&#34;&gt;Release notes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#known-issues&#34;&gt;Known Issues&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#troubleshooting-unknown-issues&#34;&gt;Troubleshooting unknown issues&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#command-line-interface-singlefile-cli&#34;&gt;Command Line Interface (SingleFile CLI)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#integration-with-user-scripts&#34;&gt;Integration with user scripts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#file-format-comparison&#34;&gt;File format comparison&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#projects-usingcompatible-with-singlefile&#34;&gt;Projects using/compatible with SingleFile&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#privacy-policy&#34;&gt;Privacy Policy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#code-derived-from-third-party-projects&#34;&gt;Code derived from third party projects&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#icons&#34;&gt;Icons&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/396787/156664907-cc458e35-f41b-45ca-91eb-372213812b44.mp4&#34;&gt;https://user-images.githubusercontent.com/396787/156664907-cc458e35-f41b-45ca-91eb-372213812b44.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;SingleFile can be installed from the store of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Firefox: &lt;a href=&#34;https://addons.mozilla.org/firefox/addon/single-file&#34;&gt;https://addons.mozilla.org/firefox/addon/single-file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Firefox for Android: &lt;a href=&#34;https://addons.mozilla.org/android/addon/single-file&#34;&gt;https://addons.mozilla.org/android/addon/single-file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chrome: &lt;a href=&#34;https://chrome.google.com/extensions/detail/mpiodijhokgodhhofbcjdecpffjipkle&#34;&gt;https://chrome.google.com/extensions/detail/mpiodijhokgodhhofbcjdecpffjipkle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Safari (macOS and iOS): &lt;a href=&#34;https://apps.apple.com/us/app/singlefile-for-safari/id6444322545&#34;&gt;https://apps.apple.com/us/app/singlefile-for-safari/id6444322545&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Edge: &lt;a href=&#34;https://microsoftedge.microsoft.com/addons/detail/efnbkdcfmcmnhlkaijjjmhjjgladedno&#34;&gt;https://microsoftedge.microsoft.com/addons/detail/efnbkdcfmcmnhlkaijjjmhjjgladedno&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also download the zip file (&lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/archive/master.zip&#34;&gt;https://github.com/gildas-lormeau/SingleFile/archive/master.zip&lt;/a&gt;) of the project and install it manually by unzipping it somewhere on your disk and following these instructions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Firefox: &lt;a href=&#34;https://extensionworkshop.com/documentation/develop/temporary-installation-in-firefox&#34;&gt;https://extensionworkshop.com/documentation/develop/temporary-installation-in-firefox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chrome and Microsoft Edge: &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile-MV3&#34;&gt;https://github.com/gildas-lormeau/SingleFile-MV3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Safari: &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile-Safari-Extension&#34;&gt;https://github.com/gildas-lormeau/SingleFile-Safari-Extension&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click on the SingleFile button in the extension toolbar to save the page.&lt;/li&gt; &#xA; &lt;li&gt;You can click again on the button to cancel the action when processing a page.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the context menu by right-clicking the SingleFile button in the extension toolbar or on the webpage. It allows you to save: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the current tab,&lt;/li&gt; &#xA;   &lt;li&gt;the selected content,&lt;/li&gt; &#xA;   &lt;li&gt;the selected frame.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also process multiple tabs in one click and save: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the selected tabs,&lt;/li&gt; &#xA;   &lt;li&gt;the unpinned tabs,&lt;/li&gt; &#xA;   &lt;li&gt;all the tabs.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Select &#34;Annotate and save the page...&#34; in the context menu to: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;highlight text,&lt;/li&gt; &#xA;   &lt;li&gt;add notes,&lt;/li&gt; &#xA;   &lt;li&gt;remove content.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The context menu also allows you to activate the auto-save of: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the current tab,&lt;/li&gt; &#xA;   &lt;li&gt;the unpinned tabs,&lt;/li&gt; &#xA;   &lt;li&gt;all the tabs.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;With auto-save active, pages are automatically saved every time after being loaded (or before being unloaded if not).&lt;/li&gt; &#xA; &lt;li&gt;Right-click on the SingleFile button and select &#34;Manage extension&#34; (Firefox) / &#34;Options&#34; (Chrome) to open the options page.&lt;/li&gt; &#xA; &lt;li&gt;Enable the option &#34;Destination &amp;gt; save to Google Drive&#34; or &#34;Destination &amp;gt; upload to GitHub&#34; to upload pages to Google Drive or GitHub respectively.&lt;/li&gt; &#xA; &lt;li&gt;Enable the option &#34;Misc. &amp;gt; add proof of existence&#34; to prove the existence of saved pages by linking the SHA256 of the pages into the blockchain.&lt;/li&gt; &#xA; &lt;li&gt;You can use the customizable shortkey Ctrl+Shift+Y to save the current tab or the selected tabs. Go to about:addons and select &#34;Manage extension shortcuts&#34; in the cogwheel menu to change it in Firefox. Go to chrome://extensions/shortcuts to change it in Chrome.&lt;/li&gt; &#xA; &lt;li&gt;The default save folder is the download folder configured in your browser, cf. about:addons in Firefox and chrome://settings in Chrome.&lt;/li&gt; &#xA; &lt;li&gt;See the extension help in the options page for more detailed information about the options and technical notes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/raw/master/faq.md&#34;&gt;https://github.com/gildas-lormeau/SingleFile/blob/master/faq.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release notes&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://addons.mozilla.org/firefox/addon/single-file/versions/&#34;&gt;https://addons.mozilla.org/firefox/addon/single-file/versions/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All browsers: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For security reasons, you cannot save pages hosted on &lt;a href=&#34;https://chrome.google.com&#34;&gt;https://chrome.google.com&lt;/a&gt;, &lt;a href=&#34;https://addons.mozilla.org&#34;&gt;https://addons.mozilla.org&lt;/a&gt; and some other Mozilla domains. When this happens, 🛇 is displayed on top of the SingleFile icon.&lt;/li&gt; &#xA;   &lt;li&gt;For &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image&#34;&gt;security reasons&lt;/a&gt;, SingleFile is sometimes unable to save the image representation of &lt;a href=&#34;https://developer.mozilla.org/docs/Web/HTML/Element/canvas&#34;&gt;canvas&lt;/a&gt; and snapshots of &lt;a href=&#34;https://developer.mozilla.org/docs/Web/HTML/Element/video&#34;&gt;video&lt;/a&gt; elements.&lt;/li&gt; &#xA;   &lt;li&gt;The last saved path cannot be remembered by default. To circumvent this limitation, disable the option &#34;Misc &amp;gt; save pages in background&#34;.&lt;/li&gt; &#xA;   &lt;li&gt;The following characters are replaced by their full-width equivalent symbols in file names: ~, +, ?, %, *, :, |, &#34;, &amp;lt;, &amp;gt;, . The replacement characters are respectively: ～, ＋, ？, ％, ＊, ：, ｜, ＂, ＜, ＞, ＼. Other invalid charcaters are replaced by _. This is done to maintain compatibility with various OSs and file systems. If you don&#39;t need that level of compatibility and know what you are doing, you can change the list of forbidden characters and the replacement characters in the Hidden options(&lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/wiki/Hidden-options&#34;&gt;https://github.com/gildas-lormeau/SingleFile/wiki/Hidden-options&lt;/a&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Chromium-based browsers: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You must enable the option &#34;Allow access to file URLs&#34; in the extension page to display the infobar when viewing a saved page, and to save or to annotate a page stored on the filesystem.&lt;/li&gt; &#xA;   &lt;li&gt;If the file name of a saved page looks like &#34;56833935-156b-4d8c-a00f-19599c6513d3.html&#34;, disable the option &#34;Misc &amp;gt; save pages in background&#34;. Reinstalling the browser may also fix this issue. You can find more info about this bug &lt;a href=&#34;https://bugs.chromium.org/p/chromium/issues/detail?id=892133&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Disabling the option &#34;File name &amp;gt; open the &#34;Save as&#34; dialog to confirm the file name&#34; will work if and only if the option &#34;Ask where to save each file before downloading&#34; is disabled in chrome://settings/downloads.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Firefox: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The &#34;File name &amp;gt; file name conflict resolution&#34; option does not work if set to &#34;prompt for a name&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Sometimes, SingleFile is unable to save the contents of sandboxed iframes because of &lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1411641&#34;&gt;this bug&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;When processing a page from the filesystem, external resources (e.g. images, stylesheets, fonts etc.) will not be embedded into the saved page. You can find more info about this bug &lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1644488&#34;&gt;here&lt;/a&gt;. This bug has been closed by Mozilla as &#34;WontFix&#34;. But there is a simple workaround proposed &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/issues/7#issuecomment-618980153&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Waterfox Classic &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;User interface elements displayed in the page (progress bar, logs panel) won&#39;t be displayed unless &lt;code&gt;dom.webcomponents.enabled&lt;/code&gt; is enabled in &lt;code&gt;about:config&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;When opening pages saved with the option &#34;Images &amp;gt; group duplicate images together&#34; enabled, some duplicate images might not displayed. It is recommended to disable this option.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting unknown issues&lt;/h2&gt; &#xA;&lt;p&gt;Please follow these steps if you find an unknown issue:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Save the page in incognito.&lt;/li&gt; &#xA; &lt;li&gt;If saving page in incognito did not fix the issue, reset SingleFile options.&lt;/li&gt; &#xA; &lt;li&gt;If resetting options did not fix the issue, restart the browser.&lt;/li&gt; &#xA; &lt;li&gt;If restarting the browser did not fix the issue, try to disable all other extensions to see if there is a conflict.&lt;/li&gt; &#xA; &lt;li&gt;If there is a conflict then try to determine against which extension(s).&lt;/li&gt; &#xA; &lt;li&gt;Please report the issue with a short description on how to reproduce it here: &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/issues&#34;&gt;https://github.com/gildas-lormeau/SingleFile/issues&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Command Line Interface (SingleFile CLI)&lt;/h2&gt; &#xA;&lt;p&gt;You can save web pages to HTML from the command line interface. See here for more info: &lt;a href=&#34;https://github.com/gildas-lormeau/single-file-cli&#34;&gt;https://github.com/gildas-lormeau/single-file-cli&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Integration with user scripts&lt;/h2&gt; &#xA;&lt;p&gt;You can execute a user script just before (and after) SingleFile saves a page. For more info, see &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/wiki/How-to-execute-a-user-script-before-a-page-is-saved&#34;&gt;https://github.com/gildas-lormeau/SingleFile/wiki/How-to-execute-a-user-script-before-a-page-is-saved&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;File format comparison&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;HTML&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Self-extracting ZIP&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MHTML&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Webarchive (Safari)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;HTML+folder&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pages are saved as a single file&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HTML and styles are minified&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Unused HTML and styles are removed from files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Binary resources are not encoded in base 64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Files are compressed&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Files can be viewed without installing any extension&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓¹&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓²&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓³&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Files can be viewed without running JavaScript&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Files can be unzipped to extract page resources&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n/a&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Files contains the text of the page (plain or formatted) which can be indexed&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓⁴&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Footnotes:&lt;/p&gt; &#xA;&lt;p&gt;¹ When using the &#34;universal&#34; self-extracting file format&lt;/p&gt; &#xA;&lt;p&gt;² Only in Chromium-based browsers, and Internet Explorer&lt;/p&gt; &#xA;&lt;p&gt;³ Only in Safari&lt;/p&gt; &#xA;&lt;p&gt;⁴ An option must be enabled in the extension&lt;/p&gt; &#xA;&lt;h2&gt;Projects using/compatible with SingleFile&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ArchiveBox - Open-source self-hosted web archiving: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox&#34;&gt;https://github.com/ArchiveBox/ArchiveBox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;htmls-to-datasette - Tool to index HTML files into a Sqlite database: &lt;a href=&#34;https://github.com/pjamar/htmls-to-datasette&#34;&gt;https://github.com/pjamar/htmls-to-datasette&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;linkding - Bookmark manager that you can host yourself. It&#39;s designed be to be minimal, fast, and easy to set up using Docker: &lt;a href=&#34;https://github.com/sissbruecker/linkding&#34;&gt;https://github.com/sissbruecker/linkding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;obsidian-html-plugin - Plugin for reading HTML pages in Obsidian: &lt;a href=&#34;https://github.com/nuthrash/obsidian-html-plugin&#34;&gt;https://github.com/nuthrash/obsidian-html-plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Petal Cite Web Importer - Browser extension to save PDFs and capture web pages in Petal Cite: &lt;a href=&#34;https://github.com/ks-collab/cite-extension&#34;&gt;https://github.com/ks-collab/cite-extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;singlefile2trilium - Tool to save faithful copy of a web page as a Trilium note with SingleFile: &lt;a href=&#34;https://github.com/nil0x42/singlefile2trilium&#34;&gt;https://github.com/nil0x42/singlefile2trilium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SingleFileMac - Integration of SingleFile in a swift application using webkit: &lt;a href=&#34;https://github.com/david-littlefield/SingleFileMac&#34;&gt;https://github.com/david-littlefield/SingleFileMac&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Trilium-SingleFile - An addon for Trilium Notes to easily import SingleFile html pages: &lt;a href=&#34;https://github.com/rauenzi/Trilium-SingleFile&#34;&gt;https://github.com/rauenzi/Trilium-SingleFile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Trilium Simple SingleFile Renderer - A plugin to add a new Template note to Trilium for render file created by SingleFile: &lt;a href=&#34;https://github.com/xnohat/trilium-simple-singlefile-renderer&#34;&gt;https://github.com/xnohat/trilium-simple-singlefile-renderer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;web document - Browser extension for saving web documents locally, allowing you to access them offline and quickly search for webpage: &lt;a href=&#34;https://github.com/wvit/web-document&#34;&gt;https://github.com/wvit/web-document&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zotero Connector - Browser extension for Zotero, a tool to help you collect, organize, cite, and share your research sources: &lt;a href=&#34;https://github.com/zotero/zotero-connectors&#34;&gt;https://github.com/zotero/zotero-connectors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Privacy Policy&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/raw/master/privacy.md&#34;&gt;https://github.com/gildas-lormeau/SingleFile/blob/master/privacy.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chinese translation done by yfdyh000 (&lt;a href=&#34;https://github.com/yfdyh000&#34;&gt;https://github.com/yfdyh000&lt;/a&gt;), Liu8Can (&lt;a href=&#34;https://github.com/Liu8Can&#34;&gt;https://github.com/Liu8Can&lt;/a&gt;), KrasnayaPloshchad (&lt;a href=&#34;https://github.com/KrasnayaPloshchad&#34;&gt;https://github.com/KrasnayaPloshchad&lt;/a&gt;), frostblazergit (&lt;a href=&#34;https://github.com/frostblazergit&#34;&gt;https://github.com/frostblazergit&lt;/a&gt;), dnknn (&lt;a href=&#34;https://github.com/dnknn&#34;&gt;https://github.com/dnknn&lt;/a&gt;), lqzhgood (&lt;a href=&#34;https://github.com/lqzhgood&#34;&gt;https://github.com/lqzhgood&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Traditional Chinese translation done by frostblazergit (&lt;a href=&#34;https://github.com/frostblazergit&#34;&gt;https://github.com/frostblazergit&lt;/a&gt;), lqzhgood (&lt;a href=&#34;https://github.com/lqzhgood&#34;&gt;https://github.com/lqzhgood&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Dutch translation done by jooleer (&lt;a href=&#34;https://github.com/jooleer&#34;&gt;https://github.com/jooleer&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;German translation done by womotroll (&lt;a href=&#34;https://github.com/womotroll&#34;&gt;https://github.com/womotroll&lt;/a&gt;), bannmann (&lt;a href=&#34;https://github.com/bannmann&#34;&gt;https://github.com/bannmann&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Italian translation done by Fastbyte01 (&lt;a href=&#34;https://github.com/Fastbyte01&#34;&gt;https://github.com/Fastbyte01&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Japanese translation done by Shitennouji（四天王寺) (&lt;a href=&#34;https://github.com/Shitennouji&#34;&gt;https://github.com/Shitennouji&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Polish translation done by xesarni (&lt;a href=&#34;https://github.com/xesarni&#34;&gt;https://github.com/xesarni&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Portuguese translation done by Blackspirits (&lt;a href=&#34;https://github.com/Blackspirits&#34;&gt;https://github.com/Blackspirits&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Portuguese-Brazilian translation done by @mezysinc, Blackspirits (&lt;a href=&#34;https://github.com/Blackspirits&#34;&gt;https://github.com/Blackspirits&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Russian translation done by rstp14, kramola-RU (&lt;a href=&#34;https://github.com/kramola-RU&#34;&gt;https://github.com/kramola-RU&lt;/a&gt;), solokot (&lt;a href=&#34;https://github.com/solokot&#34;&gt;https://github.com/solokot&lt;/a&gt;), TotalCaesar659 (&lt;a href=&#34;https://github.com/TotalCaesar659&#34;&gt;https://github.com/TotalCaesar659&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Spanish translation done by strel (&lt;a href=&#34;https://github.com/strel&#34;&gt;https://github.com/strel&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Turkish translation done by hbaklan943 (&lt;a href=&#34;https://github.com/hbaklan943&#34;&gt;https://github.com/hbaklan943&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Ukrainian translation done by perdolka (&lt;a href=&#34;https://github.com/perdolka&#34;&gt;https://github.com/perdolka&lt;/a&gt;), gildas-lormeau&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code derived from third party projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;csstree: &lt;a href=&#34;https://github.com/csstree/csstree&#34;&gt;https://github.com/csstree/csstree&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;postcss-media-query-parser: &lt;a href=&#34;https://github.com/dryoma/postcss-media-query-parser&#34;&gt;https://github.com/dryoma/postcss-media-query-parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;postcss-selector-parser: &lt;a href=&#34;https://github.com/postcss/postcss-selector-parser&#34;&gt;https://github.com/postcss/postcss-selector-parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;UglifyCSS: &lt;a href=&#34;https://github.com/fmarcia/UglifyCSS&#34;&gt;https://github.com/fmarcia/UglifyCSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;parse-srcset: &lt;a href=&#34;https://github.com/albell/parse-srcset&#34;&gt;https://github.com/albell/parse-srcset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;parse-css-font: &lt;a href=&#34;https://github.com/jedmao/parse-css-font&#34;&gt;https://github.com/jedmao/parse-css-font&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Readability: &lt;a href=&#34;https://github.com/mozilla/readability&#34;&gt;https://github.com/mozilla/readability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;whatwg-mimetype: &lt;a href=&#34;https://github.com/jsdom/whatwg-mimetype&#34;&gt;https://github.com/jsdom/whatwg-mimetype&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Icons&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Icon made by &lt;a href=&#34;https://www.flaticon.com/authors/kiranshastry&#34;&gt;Kiranshastry&lt;/a&gt; from &lt;a href=&#34;https://www.flaticon.com/&#34;&gt;Flaticon&lt;/a&gt; is licensed by &lt;a href=&#34;http://creativecommons.org/licenses/by/3.0/&#34;&gt;CC 3.0 BY&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;SingleFile is licensed under AGPL. Code derived from third-party projects is licensed under MIT. Please contact me at gildas.lormeau &amp;lt;at&amp;gt; gmail.com if you are interested in licensing the SingleFile code for a commercial service or product.&lt;/p&gt; &#xA;&lt;p&gt;Suggestions are welcome :)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elizaOS/characterfile</title>
    <updated>2025-12-29T01:42:28Z</updated>
    <id>tag:github.com,2025-12-29:/elizaOS/characterfile</id>
    <link href="https://github.com/elizaOS/characterfile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple file format for character data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Characterfile&lt;/h1&gt; &#xA;&lt;p&gt;The goal of this project is to create a simple, easy-to-use format for generating and transmitting character files. You can use these character files out of the box with &lt;a href=&#34;https://github.com/lalalune/eliza&#34;&gt;Eliza&lt;/a&gt; or other LLM agents.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started - Generate A Characterfile From Your Twitter&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open Terminal. On Mac, you can press Command + Spacebar and search for &#34;Terminal&#34;. If you&#39;re using Windows, use &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Type &lt;code&gt;npx tweets2character&lt;/code&gt; and run it. If you get an error about npx not existing, you&#39;ll need to install Node.js&lt;/li&gt; &#xA; &lt;li&gt;If you need to install node, you can do that by pasting &lt;code&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash&lt;/code&gt; into your terminal to install Node Version Manager (nvm)&lt;/li&gt; &#xA; &lt;li&gt;Once that runs, make a new terminal window (the old one will not have the new software linked) and run &lt;code&gt;nvm install node&lt;/code&gt; followed by &lt;code&gt;nvm use node&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now copy and paste &lt;code&gt;npx tweets2character&lt;/code&gt; into your terminal again.&lt;/li&gt; &#xA; &lt;li&gt;NOTE: You will need to get a &lt;a href=&#34;https://console.anthropic.com/settings/keys&#34;&gt;Claude&lt;/a&gt; or &lt;a href=&#34;https://platform.openai.com/api-keys&#34;&gt;OpenAI&lt;/a&gt; API key. Paste that in when prompted&lt;/li&gt; &#xA; &lt;li&gt;You will need to get the path of your Twitter archive. If it&#39;s in your Downloads folder on a Mac, that&#39;s ~/Downloads/&#xA;  &lt;name of archive&gt;&#xA;   .zip&#xA;  &lt;/name&gt;&lt;/li&gt; &#xA; &lt;li&gt;If everything is correct, you&#39;ll see a loading bar as the script processes your tweets and generates a character file. This will be output at character.json in the directory where you run &lt;code&gt;npx tweets2character&lt;/code&gt;. If you run the command &lt;code&gt;cd&lt;/code&gt; in the terminal before or after generating the file, you should see where you are.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Schema&lt;/h2&gt; &#xA;&lt;p&gt;The JSON schema for the character file is &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/characterfile/main/schema/character.schema.json&#34;&gt;here&lt;/a&gt;. This also matches the expected format for &lt;a href=&#34;https://platform.openai.com/docs/guides/function-calling&#34;&gt;OpenAI function calling&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Typescript types for the character file are &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/characterfile/main/examples/types.d.ts&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Example Character file&lt;/h3&gt; &#xA;&lt;p&gt;Basic example of a character file, with values that are instructional &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/characterfile/main/examples/example.character.json&#34;&gt;examples/example.character.json&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Basic Python Example&lt;/h3&gt; &#xA;&lt;p&gt;Read the example character file and print the contents &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/characterfile/main/examples/example.py&#34;&gt;examples/example.py&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Python Validation Example&lt;/h3&gt; &#xA;&lt;p&gt;Read the example character file and validate it against the JSON schema &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/characterfile/main/examples/validate.py&#34;&gt;examples/validate.py&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Basic JavaScript Example&lt;/h3&gt; &#xA;&lt;p&gt;Read the example character file and print the contents &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/characterfile/main/examples/example.mjs&#34;&gt;examples/example.mjs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;JavScript Validation Example&lt;/h3&gt; &#xA;&lt;p&gt;Read the example character file and validate it against the JSON schema &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/characterfile/main/examples/validate.mjs&#34;&gt;examples/validate.mjs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Scripts&lt;/h1&gt; &#xA;&lt;p&gt;You can use the scripts the generate a character file from your tweets, convert a folder of documents into a knowledge file, and add knowledge to your character file.&lt;/p&gt; &#xA;&lt;p&gt;Most of these scripts require an OpenAI or Anthropic API key.&lt;/p&gt; &#xA;&lt;h2&gt;tweets2character&lt;/h2&gt; &#xA;&lt;p&gt;Convert your twitter archive into a .character.json&lt;/p&gt; &#xA;&lt;p&gt;First, download your Twitter archive here: &lt;a href=&#34;https://help.x.com/en/managing-your-account/how-to-download-your-x-archive&#34;&gt;https://help.x.com/en/managing-your-account/how-to-download-your-x-archive&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can run tweets2character directly from your command line with no downloads:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npx tweets2character&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: you will need node.js installed. The easiest way is with &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then clone this repo and run these commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install&#xA;node scripts/tweets2character.js twitter-2024-07-22-aed6e84e05e7976f87480bc36686bd0fdfb3c96818c2eff2cebc4820477f4da3.zip # path to your zip archive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the arguments are optional and will be prompted for if not provided.&lt;/p&gt; &#xA;&lt;h2&gt;folder2knowledge&lt;/h2&gt; &#xA;&lt;p&gt;Convert a folder of images and videos into a .knowledge file which you can use with &lt;a href=&#34;https://github.com/lalalune/eliza&#34;&gt;Eliza&lt;/a&gt;. Will convert text, markdown and PDF into normalized text in JSON format.&lt;/p&gt; &#xA;&lt;p&gt;You can run folder2knowledge directly from your command line with no downloads:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npx folder2knowledge &amp;lt;path/to/folder&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install&#xA;node scripts/folder2knowledge.js path/to/folder # path to your folder&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the arguments are optional and will be prompted for if not provided.&lt;/p&gt; &#xA;&lt;h2&gt;knowledge2character&lt;/h2&gt; &#xA;&lt;p&gt;Add knowledge to your .character file from a generated knowledge.json file.&lt;/p&gt; &#xA;&lt;p&gt;You can run knowledge2character directly from your command line with no downloads:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npx knowledge2character &amp;lt;path/to/character.character&amp;gt; &amp;lt;path/to/knowledge.knowledge&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install&#xA;node scripts/knowledge2character.js path/to/character.character path/to/knowledge.knowledge # path to your character file and knowledge file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the arguments are optional and will be prompted for if not provided.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The license is the MIT license, with slight modifications so that users are not required to include the full license in their own software. See &lt;a href=&#34;https://raw.githubusercontent.com/elizaOS/characterfile/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fchollet/ARC-AGI</title>
    <updated>2025-12-29T01:42:28Z</updated>
    <id>tag:github.com,2025-12-29:/fchollet/ARC-AGI</id>
    <link href="https://github.com/fchollet/ARC-AGI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Abstraction and Reasoning Corpus&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Abstraction and Reasoning Corpus for Artificial General Intelligence (ARC-AGI)&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the ARC-AGI task data, as well as a browser-based interface for humans to try their hand at solving the tasks manually.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&#34;ARC can be seen as a general artificial intelligence benchmark, as a program synthesis benchmark, or as a psychometric intelligence test. It is targeted at both humans and artificially intelligent systems that aim at emulating a human-like form of general fluid intelligence.&#34;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;A complete description of the dataset, its goals, and its underlying logic, can be found in: &lt;a href=&#34;https://arxiv.org/abs/1911.01547&#34;&gt;On the Measure of Intelligence&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As a reminder, a test-taker is said to solve a task when, upon seeing the task for the first time, they are able to produce the correct output grid for &lt;em&gt;all&lt;/em&gt; test inputs in the task (this includes picking the dimensions of the output grid). For each test input, the test-taker is allowed 3 trials (this holds for all test-takers, either humans or AI).&lt;/p&gt; &#xA;&lt;h2&gt;Task file format&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; directory contains two subdirectories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;data/training&lt;/code&gt;: contains the task files for training (400 tasks). Use these to prototype your algorithm or to train your algorithm to acquire ARC-relevant cognitive priors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;data/evaluation&lt;/code&gt;: contains the task files for evaluation (400 tasks). Use these to evaluate your final algorithm. To ensure fair evaluation results, do not leak information from the evaluation set into your algorithm (e.g. by looking at the evaluation tasks yourself during development, or by repeatedly modifying an algorithm while using its evaluation score as feedback).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The tasks are stored in JSON format. Each task JSON file contains a dictionary with two fields:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&#34;train&#34;&lt;/code&gt;: demonstration input/output pairs. It is a list of &#34;pairs&#34; (typically 3 pairs).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&#34;test&#34;&lt;/code&gt;: test input/output pairs. It is a list of &#34;pairs&#34; (typically 1 pair).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A &#34;pair&#34; is a dictionary with two fields:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&#34;input&#34;&lt;/code&gt;: the input &#34;grid&#34; for the pair.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&#34;output&#34;&lt;/code&gt;: the output &#34;grid&#34; for the pair.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A &#34;grid&#34; is a rectangular matrix (list of lists) of integers between 0 and 9 (inclusive). The smallest possible grid size is 1x1 and the largest is 30x30.&lt;/p&gt; &#xA;&lt;p&gt;When looking at a task, a test-taker has access to inputs &amp;amp; outputs of the demonstration pairs, plus the input(s) of the test pair(s). The goal is to construct the output grid(s) corresponding to the test input grid(s), using 3 trials for each test input. &#34;Constructing the output grid&#34; involves picking the height and width of the output grid, then filling each cell in the grid with a symbol (integer between 0 and 9, which are visualized as colors). Only &lt;em&gt;exact&lt;/em&gt; solutions (all cells match the expected answer) can be said to be correct.&lt;/p&gt; &#xA;&lt;h2&gt;Usage of the testing interface&lt;/h2&gt; &#xA;&lt;p&gt;The testing interface is located at &lt;code&gt;apps/testing_interface.html&lt;/code&gt;. Open it in a web browser (Chrome recommended). It will prompt you to select a task JSON file.&lt;/p&gt; &#xA;&lt;p&gt;After loading a task, you will enter the test space, which looks like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://arc-benchmark.s3.amazonaws.com/figs/arc_test_space.png&#34; alt=&#34;test space&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;On the left, you will see the input/output pairs demonstrating the nature of the task. In the middle, you will see the current test input grid. On the right, you will see the controls you can use to construct the corresponding output grid.&lt;/p&gt; &#xA;&lt;p&gt;You have access to the following tools:&lt;/p&gt; &#xA;&lt;h3&gt;Grid controls&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Resize: input a grid size (e.g. &#34;10x20&#34; or &#34;4x4&#34;) and click &#34;Resize&#34;. This preserves existing grid content (in the top left corner).&lt;/li&gt; &#xA; &lt;li&gt;Copy from input: copy the input grid to the output grid. This is useful for tasks where the output consists of some modification of the input.&lt;/li&gt; &#xA; &lt;li&gt;Reset grid: fill the grid with 0s.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Symbol controls&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Edit: select a color (symbol) from the color picking bar, then click on a cell to set its color.&lt;/li&gt; &#xA; &lt;li&gt;Select: click and drag on either the output grid or the input grid to select cells. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;After selecting cells on the output grid, you can select a color from the color picking to set the color of the selected cells. This is useful to draw solid rectangles or lines.&lt;/li&gt; &#xA;   &lt;li&gt;After selecting cells on either the input grid or the output grid, you can press C to copy their content. After copying, you can select a cell on the output grid and press &#34;V&#34; to paste the copied content. You should select the cell in the top left corner of the zone you want to paste into.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Floodfill: click on a cell from the output grid to color all connected cells to the selected color. &#34;Connected cells&#34; are contiguous cells with the same color.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Answer validation&lt;/h3&gt; &#xA;&lt;p&gt;When your output grid is ready, click the green &#34;Submit!&#34; button to check your answer. We do not enforce the 3-trials rule.&lt;/p&gt; &#xA;&lt;p&gt;After you&#39;ve obtained the correct answer for the current test input grid, you can switch to the next test input grid for the task using the &#34;Next test input&#34; button (if there is any available; most tasks only have one test input).&lt;/p&gt; &#xA;&lt;p&gt;When you&#39;re done with a task, use the &#34;load task&#34; button to open a new task.&lt;/p&gt;</summary>
  </entry>
</feed>