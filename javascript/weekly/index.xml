<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-06T01:42:53Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>swagger-api/swagger-ui</title>
    <updated>2025-07-06T01:42:53Z</updated>
    <id>tag:github.com,2025-07-06:/swagger-api/swagger-ui</id>
    <link href="https://github.com/swagger-api/swagger-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamically generate beautiful documentation from a Swagger-compliant API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/swagger-api/swagger.io/wordpress/images/assets/SWU-logo-clr.png&#34; width=&#34;300&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://badge.fury.io/js/swagger-ui&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/swagger-ui.svg?sanitize=true&#34; alt=&#34;NPM version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/&#34;&gt;&lt;img src=&#34;https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/badge/icon?subject=jenkins%20build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jenkins.swagger.io/job/oss-swagger-ui-security-audit/lastBuild/console&#34;&gt;&lt;img src=&#34;https://jenkins.swagger.io/buildStatus/icon?job=oss-swagger-ui-security-audit&amp;amp;subject=npm%20audit&#34; alt=&#34;npm audit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/swagger-api/swagger-ui/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors-anon/swagger-api/swagger-ui.svg?sanitize=true&#34; alt=&#34;total GitHub contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/swagger-ui&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/swagger-ui.svg?label=npm%20downloads&#34; alt=&#34;monthly npm installs&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/docker-docker.swagger.io%2Fswaggerapi%2Fswagger--ui-blue&#34; alt=&#34;docker registry&#34;&gt; &lt;img src=&#34;https://img.shields.io/packagist/dm/swagger-api/swagger-ui.svg?label=packagist%20installs&#34; alt=&#34;monthly packagist installs&#34;&gt; &lt;a href=&#34;https://bundlephobia.com/package/swagger-ui&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/swagger-ui.svg?label=gzip%20size&#34; alt=&#34;gzip size&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://swagger.io/tools/swagger-ui/&#34;&gt;Swagger UI&lt;/a&gt; allows anyone ‚Äî be it your development team or your end consumers ‚Äî to visualize and interact with the API‚Äôs resources without having any of the implementation logic in place. It‚Äôs automatically generated from your OpenAPI (formerly known as Swagger) Specification, with the visual documentation making it easy for back end implementation and client side consumption.&lt;/p&gt; &#xA;&lt;h2&gt;General&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;üëâüèº Want to score an easy open-source contribution?&lt;/strong&gt; Check out our &lt;a href=&#34;https://github.com/swagger-api/swagger-ui/issues?q=is%3Aissue+is%3Aopen+label%3A%22Good+first+issue%22&#34;&gt;Good first issue&lt;/a&gt; label.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üï∞Ô∏è Looking for the older version of Swagger UI?&lt;/strong&gt; Refer to the &lt;a href=&#34;https://github.com/swagger-api/swagger-ui/tree/2.x&#34;&gt;&lt;em&gt;2.x&lt;/em&gt; branch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repository publishes three different NPM modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/swagger-ui&#34;&gt;swagger-ui&lt;/a&gt; is a traditional npm module intended for use in single-page applications that are capable of resolving dependencies (via Webpack, Browserify, etc.).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/swagger-ui-dist&#34;&gt;swagger-ui-dist&lt;/a&gt; is a dependency-free module that includes everything you need to serve Swagger UI in a server-side project, or a single-page application that can&#39;t resolve npm module dependencies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/swagger-ui-react&#34;&gt;swagger-ui-react&lt;/a&gt; is Swagger UI packaged as a React component for use in React applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We strongly suggest that you use &lt;code&gt;swagger-ui&lt;/code&gt; instead of &lt;code&gt;swagger-ui-dist&lt;/code&gt; if you&#39;re building a single-page application, since &lt;code&gt;swagger-ui-dist&lt;/code&gt; is significantly larger.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for plain ol&#39; HTML/JS/CSS, &lt;a href=&#34;https://github.com/swagger-api/swagger-ui/releases/latest&#34;&gt;download the latest release&lt;/a&gt; and copy the contents of the &lt;code&gt;/dist&lt;/code&gt; folder to your server.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;The OpenAPI Specification has undergone 5 revisions since initial creation in 2010. Compatibility between Swagger UI and the OpenAPI Specification is as follows:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Swagger UI Version&lt;/th&gt; &#xA;   &lt;th&gt;Release Date&lt;/th&gt; &#xA;   &lt;th&gt;OpenAPI Spec compatibility&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.19.0&lt;/td&gt; &#xA;   &lt;td&gt;2025-02-17&lt;/td&gt; &#xA;   &lt;td&gt;2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.1.0, 3.1.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/tree/v5.19.0&#34;&gt;tag v5.19.0&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.0.0&lt;/td&gt; &#xA;   &lt;td&gt;2023-06-12&lt;/td&gt; &#xA;   &lt;td&gt;2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.1.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/tree/v5.0.0&#34;&gt;tag v5.0.0&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4.0.0&lt;/td&gt; &#xA;   &lt;td&gt;2021-11-03&lt;/td&gt; &#xA;   &lt;td&gt;2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/tree/v4.0.0&#34;&gt;tag v4.0.0&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.18.3&lt;/td&gt; &#xA;   &lt;td&gt;2018-08-03&lt;/td&gt; &#xA;   &lt;td&gt;2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/tree/v3.18.3&#34;&gt;tag v3.18.3&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.0.21&lt;/td&gt; &#xA;   &lt;td&gt;2017-07-26&lt;/td&gt; &#xA;   &lt;td&gt;2.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/tree/v3.0.21&#34;&gt;tag v3.0.21&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.2.10&lt;/td&gt; &#xA;   &lt;td&gt;2017-01-04&lt;/td&gt; &#xA;   &lt;td&gt;1.1, 1.2, 2.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/tree/v2.2.10&#34;&gt;tag v2.2.10&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.1.5&lt;/td&gt; &#xA;   &lt;td&gt;2016-07-20&lt;/td&gt; &#xA;   &lt;td&gt;1.1, 1.2, 2.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/tree/v2.1.5&#34;&gt;tag v2.1.5&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.0.24&lt;/td&gt; &#xA;   &lt;td&gt;2014-09-12&lt;/td&gt; &#xA;   &lt;td&gt;1.1, 1.2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/tree/v2.0.24&#34;&gt;tag v2.0.24&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.0.13&lt;/td&gt; &#xA;   &lt;td&gt;2013-03-08&lt;/td&gt; &#xA;   &lt;td&gt;1.1, 1.2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/tree/v1.0.13&#34;&gt;tag v1.0.13&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.0.1&lt;/td&gt; &#xA;   &lt;td&gt;2011-10-11&lt;/td&gt; &#xA;   &lt;td&gt;1.0, 1.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/tree/v1.0.1&#34;&gt;tag v1.0.1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Anonymized analytics&lt;/h2&gt; &#xA;&lt;p&gt;SwaggerUI uses &lt;a href=&#34;https://scarf.sh/&#34;&gt;Scarf&lt;/a&gt; to collect &lt;a href=&#34;https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-what-information-does-scarf-js-send-about-me&#34;&gt;anonymized installation analytics&lt;/a&gt;. These analytics help support the maintainers of this library and ONLY run during installation. To &lt;a href=&#34;https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-how-can-i-opt-out-of-analytics&#34;&gt;opt out&lt;/a&gt;, you can set the &lt;code&gt;scarfSettings.enabled&lt;/code&gt; field to &lt;code&gt;false&lt;/code&gt; in your project&#39;s &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;// package.json&#xA;{&#xA;  // ...&#xA;  &#34;scarfSettings&#34;: {&#xA;    &#34;enabled&#34;: false&#xA;  }&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can set the environment variable &lt;code&gt;SCARF_ANALYTICS&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; as part of the environment that installs your npm packages, e.g., &lt;code&gt;SCARF_ANALYTICS=false npm install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h4&gt;Usage&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/HEAD/docs/usage/installation.md&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/HEAD/docs/usage/configuration.md&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/HEAD/docs/usage/cors.md&#34;&gt;CORS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/HEAD/docs/usage/oauth2.md&#34;&gt;OAuth2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/HEAD/docs/usage/deep-linking.md&#34;&gt;Deep Linking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/HEAD/docs/usage/limitations.md&#34;&gt;Limitations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/HEAD/docs/usage/version-detection.md&#34;&gt;Version detection&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Customization&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/HEAD/docs/customization/overview.md&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/HEAD/docs/customization/plugin-api.md&#34;&gt;Plugin API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/HEAD/docs/customization/custom-layout.md&#34;&gt;Custom layout&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Development&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/HEAD/docs/development/setting-up.md&#34;&gt;Setting up&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/HEAD/docs/development/scripts.md&#34;&gt;Scripts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Contributing&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swagger-api/.github/raw/HEAD/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Integration Tests&lt;/h5&gt; &#xA;&lt;p&gt;You will need JDK of version 7 or higher as instructed here &lt;a href=&#34;https://nightwatchjs.org/guide/getting-started/installation.html#install-selenium-server&#34;&gt;https://nightwatchjs.org/guide/getting-started/installation.html#install-selenium-server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Integration tests can be run locally with &lt;code&gt;npm run e2e&lt;/code&gt; - be sure you aren&#39;t running a dev server when testing!&lt;/p&gt; &#xA;&lt;h3&gt;Browser support&lt;/h3&gt; &#xA;&lt;p&gt;Swagger UI works in the latest versions of Chrome, Safari, Firefox, and Edge.&lt;/p&gt; &#xA;&lt;h3&gt;Known Issues&lt;/h3&gt; &#xA;&lt;p&gt;To help with the migration, here are the currently known issues with 3.X. This list will update regularly, and will not include features that were not implemented in previous versions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Only part of the parameters previously supported are available.&lt;/li&gt; &#xA; &lt;li&gt;The JSON Form Editor is not implemented.&lt;/li&gt; &#xA; &lt;li&gt;Support for &lt;code&gt;collectionFormat&lt;/code&gt; is partial.&lt;/li&gt; &#xA; &lt;li&gt;l10n (translations) is not implemented.&lt;/li&gt; &#xA; &lt;li&gt;Relative path support for external files is not implemented.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security contact&lt;/h2&gt; &#xA;&lt;p&gt;Please disclose any security-related issues or vulnerabilities by emailing &lt;a href=&#34;mailto:security@swagger.io&#34;&gt;security@swagger.io&lt;/a&gt;, instead of using the public issue tracker.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;SwaggerUI is licensed under &lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/master/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;. SwaggerUI comes with an explicit &lt;a href=&#34;https://github.com/swagger-api/swagger-ui/raw/master/NOTICE&#34;&gt;NOTICE&lt;/a&gt; file containing additional legal notices and information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>upstash/context7</title>
    <updated>2025-07-06T01:42:53Z</updated>
    <id>tag:github.com,2025-07-06:/upstash/context7</id>
    <link href="https://github.com/upstash/context7" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Context7 MCP - Up-to-date Code Docs For Any Prompt&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://context7.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Website-context7.com-blue&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://smithery.ai/server/@upstash/context7-mcp&#34;&gt;&lt;img src=&#34;https://smithery.ai/badge/@upstash/context7-mcp&#34; alt=&#34;smithery badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D&#34;&gt;&lt;img alt=&#34;Install in VS Code (npx)&#34; src=&#34;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;amp;label=Install%20Context7%20MCP&amp;amp;color=0098FF&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.zh-TW.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-%E7%B9%81%E9%AB%94%E4%B8%AD%E6%96%87-yellow&#34; alt=&#34;ÁπÅÈ´î‰∏≠Êñá&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.zh-CN.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-yellow&#34; alt=&#34;ÁÆÄ‰Ωì‰∏≠Êñá&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.ja.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-%E6%97%A5%E6%9C%AC%E8%AA%9E-b7003a&#34; alt=&#34;Êó•Êú¨Ë™û&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.ko.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-%ED%95%9C%EA%B5%AD%EC%96%B4-green&#34; alt=&#34;ÌïúÍµ≠Ïñ¥ Î¨∏ÏÑú&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.es.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-Espa%C3%B1ol-orange&#34; alt=&#34;Documentaci√≥n en Espa√±ol&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.fr.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-Fran%C3%A7ais-blue&#34; alt=&#34;Documentation en Fran√ßais&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.pt-BR.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-Portugu%C3%AAs%20(Brasil)-purple&#34; alt=&#34;Documenta√ß√£o em Portugu√™s (Brasil)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.it.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-Italian-red&#34; alt=&#34;Documentazione in italiano&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.id-ID.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-Bahasa%20Indonesia-pink&#34; alt=&#34;Dokumentasi Bahasa Indonesia&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.de.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-Deutsch-darkgreen&#34; alt=&#34;Dokumentation auf Deutsch&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.ru.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9-darkblue&#34; alt=&#34;–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.tr.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-T%C3%BCrk%C3%A7e-blue&#34; alt=&#34;T√ºrk√ße Dok√ºman&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/README.ar.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-Arabic-white&#34; alt=&#34;Arabic Documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ùå Without Context7&lt;/h2&gt; &#xA;&lt;p&gt;LLMs rely on outdated or generic information about the libraries you use. You get:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ùå Code examples are outdated and based on year-old training data&lt;/li&gt; &#xA; &lt;li&gt;‚ùå Hallucinated APIs don&#39;t even exist&lt;/li&gt; &#xA; &lt;li&gt;‚ùå Generic answers for old package versions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚úÖ With Context7&lt;/h2&gt; &#xA;&lt;p&gt;Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source ‚Äî and places them directly into your prompt.&lt;/p&gt; &#xA;&lt;p&gt;Add &lt;code&gt;use context7&lt;/code&gt; to your prompt in Cursor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Create a Next.js middleware that checks for a valid JWT in cookies and redirects unauthenticated users to `/login`. use context7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Configure a Cloudflare Worker script to cache JSON API responses for five minutes. use context7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Context7 fetches up-to-date code examples and documentation right into your LLM&#39;s context.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1Ô∏è‚É£ Write your prompt naturally&lt;/li&gt; &#xA; &lt;li&gt;2Ô∏è‚É£ Tell the LLM to &lt;code&gt;use context7&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;3Ô∏è‚É£ Get working code answers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;No tab-switching, no hallucinated APIs that don&#39;t exist, no outdated code generations.&lt;/p&gt; &#xA;&lt;h2&gt;üìö Adding Projects&lt;/h2&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://raw.githubusercontent.com/upstash/context7/master/docs/adding-projects.md&#34;&gt;project addition guide&lt;/a&gt; to learn how to add (or update) your favorite libraries to Context7.&lt;/p&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js &amp;gt;= v18.0.0&lt;/li&gt; &#xA; &lt;li&gt;Cursor, Windsurf, Claude Desktop or another MCP Client&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Installing via Smithery&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;To install Context7 MCP Server for any client automatically via &lt;a href=&#34;https://smithery.ai/server/@upstash/context7-mcp&#34;&gt;Smithery&lt;/a&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx -y @smithery/cli@latest install @upstash/context7-mcp --client &amp;lt;CLIENT_NAME&amp;gt; --key &amp;lt;YOUR_SMITHERY_KEY&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;You can find your Smithery key in the &lt;a href=&#34;https://smithery.ai/server/@upstash/context7-mcp&#34;&gt;Smithery.ai webpage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Cursor&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Go to: &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Cursor Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;MCP&lt;/code&gt; -&amp;gt; &lt;code&gt;Add new global MCP server&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Pasting the following configuration into your Cursor &lt;code&gt;~/.cursor/mcp.json&lt;/code&gt; file is the recommended approach. You may also install in a specific project by creating &lt;code&gt;.cursor/mcp.json&lt;/code&gt; in your project folder. See &lt;a href=&#34;https://docs.cursor.com/context/model-context-protocol&#34;&gt;Cursor MCP docs&lt;/a&gt; for more info.&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Since Cursor 1.0, you can click the install button below for instant one-click installation.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;h4&gt;Cursor Remote Server Connection&lt;/h4&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://cursor.com/install-mcp?name=context7&amp;amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D&#34;&gt;&lt;img src=&#34;https://cursor.com/deeplink/mcp-install-dark.svg?sanitize=true&#34; alt=&#34;Install MCP Server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;url&#34;: &#34;https://mcp.context7.com/mcp&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Cursor Local Server Connection&lt;/h4&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://cursor.com/install-mcp?name=context7&amp;amp;config=eyJjb21tYW5kIjoibnB4IC15IEB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9&#34;&gt;&lt;img src=&#34;https://cursor.com/deeplink/mcp-install-dark.svg?sanitize=true&#34; alt=&#34;Install MCP Server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;Alternative: Use Bun&lt;/summary&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://cursor.com/install-mcp?name=context7&amp;amp;config=eyJjb21tYW5kIjoiYnVueCAteSBAdXBzdGFzaC9jb250ZXh0Ny1tY3AifQ%3D%3D&#34;&gt;&lt;img src=&#34;https://cursor.com/deeplink/mcp-install-dark.svg?sanitize=true&#34; alt=&#34;Install MCP Server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;bunx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;Alternative: Use Deno&lt;/summary&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://cursor.com/install-mcp?name=context7&amp;amp;config=eyJjb21tYW5kIjoiZGVubyBydW4gLS1hbGxvdy1lbnYgLS1hbGxvdy1uZXQgbnBtOkB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9&#34;&gt;&lt;img src=&#34;https://cursor.com/deeplink/mcp-install-dark.svg?sanitize=true&#34; alt=&#34;Install MCP Server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;deno&#34;,&#xA;      &#34;args&#34;: [&#34;run&#34;, &#34;--allow-env=NO_DEPRECATION,TRACE_DEPRECATION&#34;, &#34;--allow-net&#34;, &#34;npm:@upstash/context7-mcp&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Windsurf&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Add this to your Windsurf MCP config file. See &lt;a href=&#34;https://docs.windsurf.com/windsurf/mcp&#34;&gt;Windsurf MCP docs&lt;/a&gt; for more info.&lt;/p&gt; &#xA; &lt;h4&gt;Windsurf Remote Server Connection&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;serverUrl&#34;: &#34;https://mcp.context7.com/sse&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Windsurf Local Server Connection&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Trae&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Use the Add manually feature and fill in the JSON configuration information for that MCP server. For more details, visit the &lt;a href=&#34;https://docs.trae.ai/ide/model-context-protocol?_lang=en&#34;&gt;Trae documentation&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h4&gt;Trae Remote Server Connection&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;url&#34;: &#34;https://mcp.context7.com/mcp&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Trae Local Server Connection&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;-y&#34;,&#xA;        &#34;@upstash/context7-mcp&#34;&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in VS Code&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D&#34;&gt;&lt;img alt=&#34;Install in VS Code (npx)&#34; src=&#34;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;amp;label=Install%20Context7%20MCP&amp;amp;color=0098FF&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D&#34;&gt;&lt;img alt=&#34;Install in VS Code Insiders (npx)&#34; src=&#34;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;amp;label=Install%20Context7%20MCP&amp;amp;color=24bfa5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Add this to your VS Code MCP config file. See &lt;a href=&#34;https://code.visualstudio.com/docs/copilot/chat/mcp-servers&#34;&gt;VS Code MCP docs&lt;/a&gt; for more info.&lt;/p&gt; &#xA; &lt;h4&gt;VS Code Remote Server Connection&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;mcp&#34;: {&#xA;  &#34;servers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;type&#34;: &#34;http&#34;,&#xA;      &#34;url&#34;: &#34;https://mcp.context7.com/mcp&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;VS Code Local Server Connection&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;mcp&#34;: {&#xA;  &#34;servers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;type&#34;: &#34;stdio&#34;,&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Visual Studio 2022&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;You can configure Context7 MCP in Visual Studio 2022 by following the &lt;a href=&#34;https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022&#34;&gt;Visual Studio MCP Servers documentation&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Add this to your Visual Studio MCP config file (see the &lt;a href=&#34;https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022&#34;&gt;Visual Studio docs&lt;/a&gt; for details):&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcp&#34;: {&#xA;    &#34;servers&#34;: {&#xA;      &#34;context7&#34;: {&#xA;        &#34;type&#34;: &#34;http&#34;,&#xA;        &#34;url&#34;: &#34;https://mcp.context7.com/mcp&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Or, for a local server:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcp&#34;: {&#xA;    &#34;servers&#34;: {&#xA;      &#34;context7&#34;: {&#xA;        &#34;type&#34;: &#34;stdio&#34;,&#xA;        &#34;command&#34;: &#34;npx&#34;,&#xA;        &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;For more information and troubleshooting, refer to the &lt;a href=&#34;https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022&#34;&gt;Visual Studio MCP Servers documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Zed&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;It can be installed via &lt;a href=&#34;https://zed.dev/extensions?query=Context7&#34;&gt;Zed Extensions&lt;/a&gt; or you can add this to your Zed &lt;code&gt;settings.json&lt;/code&gt;. See &lt;a href=&#34;https://zed.dev/docs/assistant/context-servers&#34;&gt;Zed Context Server docs&lt;/a&gt; for more info.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;context_servers&#34;: {&#xA;    &#34;Context7&#34;: {&#xA;      &#34;command&#34;: {&#xA;        &#34;path&#34;: &#34;npx&#34;,&#xA;        &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;      },&#xA;      &#34;settings&#34;: {}&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Gemini CLI&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://github.com/google-gemini/gemini-cli/raw/main/docs/cli/configuration.md&#34;&gt;Gemini CLI Configuration&lt;/a&gt; for details.&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Open the Gemini CLI settings file. The location is &lt;code&gt;~/.gemini/settings.json&lt;/code&gt; (where &lt;code&gt;~&lt;/code&gt; is your home directory).&lt;/li&gt; &#xA;  &lt;li&gt;Add the following to the &lt;code&gt;mcpServers&lt;/code&gt; object in your &lt;code&gt;settings.json&lt;/code&gt; file:&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If the &lt;code&gt;mcpServers&lt;/code&gt; object does not exist, create it.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Claude Code&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Run this command. See &lt;a href=&#34;https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/tutorials#set-up-model-context-protocol-mcp&#34;&gt;Claude Code MCP docs&lt;/a&gt; for more info.&lt;/p&gt; &#xA; &lt;h4&gt;Claude Code Remote Server Connection&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;claude mcp add --transport http context7 https://mcp.context7.com/mcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Or using SSE transport:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;claude mcp add --transport sse context7 https://mcp.context7.com/sse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Claude Code Local Server Connection&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;claude mcp add context7 -- npx -y @upstash/context7-mcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Claude Desktop&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Add this to your Claude Desktop &lt;code&gt;claude_desktop_config.json&lt;/code&gt; file. See &lt;a href=&#34;https://modelcontextprotocol.io/quickstart/user&#34;&gt;Claude Desktop MCP docs&lt;/a&gt; for more info.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;Context7&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Install in Cline&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;You can easily install Context7 through the &lt;a href=&#34;https://cline.bot/mcp-marketplace&#34;&gt;Cline MCP Server Marketplace&lt;/a&gt; by following these instructions:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Open &lt;strong&gt;Cline&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Click the hamburger menu icon (‚ò∞) to enter the &lt;strong&gt;MCP Servers&lt;/strong&gt; section.&lt;/li&gt; &#xA;  &lt;li&gt;Use the search bar within the &lt;strong&gt;Marketplace&lt;/strong&gt; tab to find &lt;em&gt;Context7&lt;/em&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Click the &lt;strong&gt;Install&lt;/strong&gt; button.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in BoltAI&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Open the &#34;Settings&#34; page of the app, navigate to &#34;Plugins,&#34; and enter the following JSON:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Once saved, enter in the chat &lt;code&gt;get-library-docs&lt;/code&gt; followed by your Context7 documentation ID (e.g., &lt;code&gt;get-library-docs /nuxt/ui&lt;/code&gt;). More information is available on &lt;a href=&#34;https://docs.boltai.com/docs/plugins/mcp-servers&#34;&gt;BoltAI&#39;s Documentation site&lt;/a&gt;. For BoltAI on iOS, &lt;a href=&#34;https://docs.boltai.com/docs/boltai-mobile/mcp-servers&#34;&gt;see this guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Using Docker&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;If you prefer to run the MCP server in a Docker container:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build the Docker Image:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;First, create a &lt;code&gt;Dockerfile&lt;/code&gt; in the project root (or anywhere you prefer):&lt;/p&gt; &#xA;   &lt;details&gt; &#xA;    &lt;summary&gt;Click to see Dockerfile content&lt;/summary&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM node:18-alpine&#xA;&#xA;WORKDIR /app&#xA;&#xA;# Install the latest version globally&#xA;RUN npm install -g @upstash/context7-mcp&#xA;&#xA;# Expose default port if needed (optional, depends on MCP client interaction)&#xA;# EXPOSE 3000&#xA;&#xA;# Default command to run the server&#xA;CMD [&#34;context7-mcp&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/details&gt; &lt;p&gt;Then, build the image using a tag (e.g., &lt;code&gt;context7-mcp&lt;/code&gt;). &lt;strong&gt;Make sure Docker Desktop (or the Docker daemon) is running.&lt;/strong&gt; Run the following command in the same directory where you saved the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t context7-mcp .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configure Your MCP Client:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Update your MCP client&#39;s configuration to use the Docker command.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Example for a cline_mcp_settings.json:&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;–°ontext7&#34;: {&#xA;      &#34;autoApprove&#34;: [],&#xA;      &#34;disabled&#34;: false,&#xA;      &#34;timeout&#34;: 60,&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#34;run&#34;, &#34;-i&#34;, &#34;--rm&#34;, &#34;context7-mcp&#34;],&#xA;      &#34;transportType&#34;: &#34;stdio&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Note: This is an example configuration. Please refer to the specific examples for your MCP client (like Cursor, VS Code, etc.) earlier in this README to adapt the structure (e.g., &lt;code&gt;mcpServers&lt;/code&gt; vs &lt;code&gt;servers&lt;/code&gt;). Also, ensure the image name in &lt;code&gt;args&lt;/code&gt; matches the tag used during the &lt;code&gt;docker build&lt;/code&gt; command.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Windows&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;The configuration on Windows is slightly different compared to Linux or macOS (&lt;em&gt;&lt;code&gt;Cline&lt;/code&gt; is used in the example&lt;/em&gt;). The same principle applies to other editors; refer to the configuration of &lt;code&gt;command&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;github.com/upstash/context7-mcp&#34;: {&#xA;      &#34;command&#34;: &#34;cmd&#34;,&#xA;      &#34;args&#34;: [&#34;/c&#34;, &#34;npx&#34;, &#34;-y&#34;, &#34;@upstash/context7-mcp@latest&#34;],&#xA;      &#34;disabled&#34;: false,&#xA;      &#34;autoApprove&#34;: []&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Augment Code&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;To configure Context7 MCP in Augment Code, you can use either the graphical interface or manual configuration.&lt;/p&gt; &#xA; &lt;h3&gt;&lt;strong&gt;A. Using the Augment Code UI&lt;/strong&gt;&lt;/h3&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Click the hamburger menu.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Select &lt;strong&gt;Settings&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Navigate to the &lt;strong&gt;Tools&lt;/strong&gt; section.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Click the &lt;strong&gt;+ Add MCP&lt;/strong&gt; button.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Enter the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npx -y @upstash/context7-mcp@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Name the MCP: &lt;strong&gt;Context7&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Click the &lt;strong&gt;Add&lt;/strong&gt; button.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;Once the MCP server is added, you can start using Context7&#39;s up-to-date code documentation features directly within Augment Code.&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h3&gt;&lt;strong&gt;B. Manual Configuration&lt;/strong&gt;&lt;/h3&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Press Cmd/Ctrl Shift P or go to the hamburger menu in the Augment panel&lt;/li&gt; &#xA;  &lt;li&gt;Select Edit Settings&lt;/li&gt; &#xA;  &lt;li&gt;Under Advanced, click Edit in settings.json&lt;/li&gt; &#xA;  &lt;li&gt;Add the server configuration to the &lt;code&gt;mcpServers&lt;/code&gt; array in the &lt;code&gt;augment.advanced&lt;/code&gt; object&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;&#34;augment.advanced&#34;: { &#34;mcpServers&#34;: [ { &#34;name&#34;: &#34;context7&#34;, &#34;command&#34;: &#34;npx&#34;, &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;] } ] }&lt;/p&gt; &#xA; &lt;p&gt;Once the MCP server is added, restart your editor. If you receive any errors, check the syntax to make sure closing brackets or commas are not missing.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Roo Code&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Add this to your Roo Code MCP configuration file. See &lt;a href=&#34;https://docs.roocode.com/features/mcp/using-mcp-in-roo&#34;&gt;Roo Code MCP docs&lt;/a&gt; for more info.&lt;/p&gt; &#xA; &lt;h4&gt;Roo Code Remote Server Connection&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;type&#34;: &#34;streamable-http&#34;,&#xA;      &#34;url&#34;: &#34;https://mcp.context7.com/mcp&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Roo Code Local Server Connection&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Zencoder&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;To configure Context7 MCP in Zencoder, follow these steps:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Go to the Zencoder menu (...)&lt;/li&gt; &#xA;  &lt;li&gt;From the dropdown menu, select Agent tools&lt;/li&gt; &#xA;  &lt;li&gt;Click on the Add custom MCP&lt;/li&gt; &#xA;  &lt;li&gt;Add the name and server configuration from below, and make sure to hit the Install button&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;command&#34;: &#34;npx&#34;,&#xA;    &#34;args&#34;: [&#xA;        &#34;-y&#34;,&#xA;        &#34;@upstash/context7-mcp@latest&#34;&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Once the MCP server is added, you can easily continue using it.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Amazon Q Developer CLI&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Add this to your Amazon Q Developer CLI configuration file. See &lt;a href=&#34;https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-mcp-configuration.html&#34;&gt;Amazon Q Developer CLI docs&lt;/a&gt; for more details.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp@latest&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Qodo Gen&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://docs.qodo.ai/qodo-documentation/qodo-gen/qodo-gen-chat/agentic-mode/agentic-tools-mcps&#34;&gt;Qodo Gen docs&lt;/a&gt; for more details.&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Open Qodo Gen chat panel in VSCode or IntelliJ.&lt;/li&gt; &#xA;  &lt;li&gt;Click Connect more tools.&lt;/li&gt; &#xA;  &lt;li&gt;Click + Add new MCP.&lt;/li&gt; &#xA;  &lt;li&gt;Add the following configuration:&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;url&#34;: &#34;https://mcp.context7.com/mcp&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in JetBrains AI Assistant&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://www.jetbrains.com/help/ai-assistant/configure-an-mcp-server.html&#34;&gt;JetBrains AI Assistant Documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;In JetBrains IDEs go to &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Tools&lt;/code&gt; -&amp;gt; &lt;code&gt;AI Assistant&lt;/code&gt; -&amp;gt; &lt;code&gt;Model Context Protocol (MCP)&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Click &lt;code&gt;+ Add&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Click on &lt;code&gt;Command&lt;/code&gt; in the top-left corner of the dialog and select the As JSON option from the list&lt;/li&gt; &#xA;  &lt;li&gt;Add this configuration and click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;5&#34;&gt; &#xA;  &lt;li&gt;Click &lt;code&gt;Apply&lt;/code&gt; to save changes.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Install in Warp&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://docs.warp.dev/knowledge-and-collaboration/mcp#adding-an-mcp-server&#34;&gt;Warp Model Context Protocol Documentation&lt;/a&gt; for details.&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Navigate &lt;code&gt;Settings&lt;/code&gt; &amp;gt; &lt;code&gt;AI&lt;/code&gt; &amp;gt; &lt;code&gt;Manage MCP servers&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Add a new MCP server by clicking the &lt;code&gt;+ Add&lt;/code&gt; button.&lt;/li&gt; &#xA;  &lt;li&gt;Paste the configuration given below:&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;Context7&#34;: {&#xA;    &#34;command&#34;: &#34;npx&#34;,&#xA;    &#34;args&#34;: [&#xA;      &#34;-y&#34;,&#xA;      &#34;@upstash/context7-mcp&#34;&#xA;    ],&#xA;    &#34;env&#34;: {},&#xA;    &#34;working_directory&#34;: null,&#xA;    &#34;start_on_launch&#34;: true&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;4&#34;&gt; &#xA;  &lt;li&gt;Click &lt;code&gt;Save&lt;/code&gt; to apply the changes.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;üî® Available Tools&lt;/h2&gt; &#xA;&lt;p&gt;Context7 MCP provides the following tools that LLMs can use:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;resolve-library-id&lt;/code&gt;: Resolves a general library name into a Context7-compatible library ID.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;libraryName&lt;/code&gt; (required): The name of the library to search for&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;get-library-docs&lt;/code&gt;: Fetches documentation for a library using a Context7-compatible library ID.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;context7CompatibleLibraryID&lt;/code&gt; (required): Exact Context7-compatible library ID (e.g., &lt;code&gt;/mongodb/docs&lt;/code&gt;, &lt;code&gt;/vercel/next.js&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;topic&lt;/code&gt; (optional): Focus the docs on a specific topic (e.g., &#34;routing&#34;, &#34;hooks&#34;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;tokens&lt;/code&gt; (optional, default 10000): Max number of tokens to return. Values less than the default value of 10000 are automatically increased to 10000.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üõü Tips&lt;/h2&gt; &#xA;&lt;h3&gt;Add a Rule&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you don‚Äôt want to add &lt;code&gt;use context7&lt;/code&gt; to every prompt, you can define a simple rule in your &lt;code&gt;.windsurfrules&lt;/code&gt; file in Windsurf or from &lt;code&gt;Cursor Settings &amp;gt; Rules&lt;/code&gt; section in Cursor (or the equivalent in your MCP client) to auto-invoke Context7 on any code question:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[calls]]&#xA;match = &#34;when the user requests code examples, setup or configuration steps, or library/API documentation&#34;&#xA;tool  = &#34;context7&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;From then on you‚Äôll get Context7‚Äôs docs in any related conversation without typing anything extra. You can add your use cases to the match part.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Use Library Id&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you already know exactly which library you want to use, add its Context7 ID to your prompt. That way, Context7 MCP server can skip the library-matching step and directly continue with retrieving docs.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;implement basic authentication with supabase. use library /supabase/supabase for api and docs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;The slash syntax tells the MCP tool exactly which library to load docs for.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üíª Development&lt;/h2&gt; &#xA;&lt;p&gt;Clone the project and install dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun run dist/index.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CLI Arguments&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;context7-mcp&lt;/code&gt; accepts the following CLI flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--transport &amp;lt;stdio|http|sse&amp;gt;&lt;/code&gt; ‚Äì Transport to use (&lt;code&gt;stdio&lt;/code&gt; by default).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--port &amp;lt;number&amp;gt;&lt;/code&gt; ‚Äì Port to listen on when using &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;sse&lt;/code&gt; transport (default &lt;code&gt;3000&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example with http transport and port 8080:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun run dist/index.js --transport http --port 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Local Configuration Example&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;tsx&#34;, &#34;/path/to/folder/context7-mcp/src/index.ts&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Testing with MCP Inspector&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx -y @modelcontextprotocol/inspector npx @upstash/context7-mcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;üö® Troubleshooting&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Module Not Found Errors&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;If you encounter &lt;code&gt;ERR_MODULE_NOT_FOUND&lt;/code&gt;, try using &lt;code&gt;bunx&lt;/code&gt; instead of &lt;code&gt;npx&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;bunx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This often resolves module resolution issues in environments where &lt;code&gt;npx&lt;/code&gt; doesn&#39;t properly install or resolve packages.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;ESM Resolution Issues&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;For errors like &lt;code&gt;Error: Cannot find module &#39;uriTemplate.js&#39;&lt;/code&gt;, try the &lt;code&gt;--experimental-vm-modules&lt;/code&gt; flag:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;--node-options=--experimental-vm-modules&#34;, &#34;@upstash/context7-mcp@1.0.6&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;TLS/Certificate Issues&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Use the &lt;code&gt;--experimental-fetch&lt;/code&gt; flag to bypass TLS-related problems:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;context7&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;--node-options=--experimental-fetch&#34;, &#34;@upstash/context7-mcp&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;General MCP Client Errors&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Try adding &lt;code&gt;@latest&lt;/code&gt; to the package name&lt;/li&gt; &#xA;  &lt;li&gt;Use &lt;code&gt;bunx&lt;/code&gt; as an alternative to &lt;code&gt;npx&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Consider using &lt;code&gt;deno&lt;/code&gt; as another alternative&lt;/li&gt; &#xA;  &lt;li&gt;Ensure you&#39;re using Node.js v18 or higher for native fetch support&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;‚ö†Ô∏è Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Context7 projects are community-contributed and while we strive to maintain high quality, we cannot guarantee the accuracy, completeness, or security of all library documentation. Projects listed in Context7 are developed and maintained by their respective owners, not by Context7. If you encounter any suspicious, inappropriate, or potentially harmful content, please use the &#34;Report&#34; button on the project page to notify us immediately. We take all reports seriously and will review flagged content promptly to maintain the integrity and safety of our platform. By using Context7, you acknowledge that you do so at your own discretion and risk.&lt;/p&gt; &#xA;&lt;h2&gt;ü§ù Connect with Us&lt;/h2&gt; &#xA;&lt;p&gt;Stay updated and join our community:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üì¢ Follow us on &lt;a href=&#34;https://x.com/contextai&#34;&gt;X&lt;/a&gt; for the latest news and updates&lt;/li&gt; &#xA; &lt;li&gt;üåê Visit our &lt;a href=&#34;https://context7.com&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üí¨ Join our &lt;a href=&#34;https://upstash.com/discord&#34;&gt;Discord Community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì∫ Context7 In Media&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/52FC3qObp9E&#34;&gt;Better Stack: &#34;Free Tool Makes Cursor 10x Smarter&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=G7gK8H6u7Rs&#34;&gt;Cole Medin: &#34;This is Hands Down the BEST MCP Server for AI Coding Assistants&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-ggvzyLpK6o&#34;&gt;Income Stream Surfers: &#34;Context7 + SequentialThinking MCPs: Is This AGI?&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CTZm6fBYisc&#34;&gt;Julian Goldie SEO: &#34;Context7: New MCP AI Agent Update&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-ls0D-rtET4&#34;&gt;JeredBlu: &#34;Context 7 MCP: Get Documentation Instantly + VS Code Setup&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PS-2Azb-C3M&#34;&gt;Income Stream Surfers: &#34;Context7: The New MCP Server That Will CHANGE AI Coding&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qZfENAPMnyo&#34;&gt;AICodeKing: &#34;Context7 + Cline &amp;amp; RooCode: This MCP Server Makes CLINE 100X MORE EFFECTIVE!&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LqTQi8qexJM&#34;&gt;Sean Kochel: &#34;5 MCP Servers For Vibe Coding Glory (Just Plug-In &amp;amp; Go)&#34;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚≠ê Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.star-history.com/#upstash/context7&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=upstash/context7&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìÑ License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Worklenz/worklenz</title>
    <updated>2025-07-06T01:42:53Z</updated>
    <id>tag:github.com,2025-07-06:/Worklenz/worklenz</id>
    <link href="https://github.com/Worklenz/worklenz" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All in one project management tool for efficient teams&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://worklenz.com&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &lt;img src=&#34;https://s3.us-west-2.amazonaws.com/worklenz.com/assets/icon-144x144.png&#34; alt=&#34;Worklenz Logo&#34; width=&#34;75&#34;&gt; &lt;/a&gt; &lt;br&gt; Worklenz &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://worklenz.com/task-management/&#34;&gt;Task Management&lt;/a&gt; | &lt;a href=&#34;https://worklenz.com/time-tracking/&#34;&gt;Time Tracking&lt;/a&gt; | &lt;a href=&#34;https://worklenz.com/analytics/&#34;&gt;Analytics&lt;/a&gt; | &lt;a href=&#34;https://worklenz.com/resource-management/&#34;&gt;Resource Management&lt;/a&gt; | &lt;a href=&#34;https://worklenz.com/templates/&#34;&gt;Project Templates&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://worklenz.com&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://worklenz.s3.amazonaws.com/assets/screenshots/hero-view.png&#34; alt=&#34;Worklenz&#34; width=&#34;1200&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Worklenz is a project management tool designed to help organizations improve their efficiency. It provides a comprehensive solution for managing projects, tasks, and collaboration within teams.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Project Planning&lt;/strong&gt;: Create and organize projects, assign tasks to team members.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Task Management&lt;/strong&gt;: Break down projects into smaller tasks, set due dates, priorities, and track progress.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Collaboration&lt;/strong&gt;: Share files, leave comments, and communicate seamlessly with your team members.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Time Tracking&lt;/strong&gt;: Monitor time spent on tasks and projects for better resource allocation and billing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reporting&lt;/strong&gt;: Generate detailed reports on project status, team workload, and performance metrics.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains the frontend and backend code for Worklenz.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Frontend&lt;/strong&gt;: Built using React with Ant Design as the UI library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Backend&lt;/strong&gt;: Built using TypeScript, Express.js, with PostgreSQL as the database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js version v18 or newer&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL version v15 or newer&lt;/li&gt; &#xA; &lt;li&gt;Docker and Docker Compose (for containerized setup)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;These instructions will help you set up and run the Worklenz project on your local machine for development and testing purposes.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js (version 18 or higher)&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL database&lt;/li&gt; &#xA; &lt;li&gt;An S3-compatible storage service (like MinIO) or Azure Blob Storage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Option 1: Manual Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Worklenz/worklenz.git&#xA;cd worklenz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up environment variables&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copy the example environment files&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp worklenz-backend/.env.template worklenz-backend/.env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Update the environment variables with your configuration&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependencies&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install backend dependencies&#xA;cd worklenz-backend&#xA;npm install&#xA;&#xA;# Install frontend dependencies&#xA;cd ../worklenz-frontend&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Set up the database&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create a PostgreSQL database named worklenz_db&#xA;cd worklenz-backend&#xA;&#xA;# Execute the SQL setup files in the correct order&#xA;psql -U your_username -d worklenz_db -f database/sql/0_extensions.sql&#xA;psql -U your_username -d worklenz_db -f database/sql/1_tables.sql&#xA;psql -U your_username -d worklenz_db -f database/sql/indexes.sql&#xA;psql -U your_username -d worklenz_db -f database/sql/4_functions.sql&#xA;psql -U your_username -d worklenz_db -f database/sql/triggers.sql&#xA;psql -U your_username -d worklenz_db -f database/sql/3_views.sql&#xA;psql -U your_username -d worklenz_db -f database/sql/2_dml.sql&#xA;psql -U your_username -d worklenz_db -f database/sql/5_database_user.sql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Start the development servers&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# In one terminal, start the backend&#xA;cd worklenz-backend&#xA;npm run dev&#xA;&#xA;# In another terminal, start the frontend&#xA;cd worklenz-frontend&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Access the application at &lt;a href=&#34;http://localhost:5000&#34;&gt;http://localhost:5000&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Option 2: Docker Setup&lt;/h3&gt; &#xA;&lt;p&gt;The project includes a fully configured Docker setup with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Frontend React application&lt;/li&gt; &#xA; &lt;li&gt;Backend server&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL database&lt;/li&gt; &#xA; &lt;li&gt;MinIO for S3-compatible storage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Worklenz/worklenz.git&#xA;cd worklenz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start the Docker containers (choose one option):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Using Docker Compose directly&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;The application will be available at:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Frontend: &lt;a href=&#34;http://localhost:5000&#34;&gt;http://localhost:5000&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Backend API: &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;MinIO Console: &lt;a href=&#34;http://localhost:9001&#34;&gt;http://localhost:9001&lt;/a&gt; (login with minioadmin/minioadmin)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To stop the services:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Environment Variables&lt;/h3&gt; &#xA;&lt;p&gt;Worklenz requires several environment variables to be configured for proper operation. These include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Database credentials&lt;/li&gt; &#xA; &lt;li&gt;Session secrets&lt;/li&gt; &#xA; &lt;li&gt;Storage configuration (S3 or Azure)&lt;/li&gt; &#xA; &lt;li&gt;Authentication settings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please refer to the &lt;code&gt;.env.example&lt;/code&gt; files for a full list of required variables.&lt;/p&gt; &#xA;&lt;h3&gt;MinIO Integration&lt;/h3&gt; &#xA;&lt;p&gt;The project uses MinIO as an S3-compatible object storage service, which provides an open-source alternative to AWS S3 for development and production.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;MinIO Console&lt;/strong&gt;: &lt;a href=&#34;http://localhost:9001&#34;&gt;http://localhost:9001&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Username: minioadmin&lt;/li&gt; &#xA;   &lt;li&gt;Password: minioadmin&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Default Bucket&lt;/strong&gt;: worklenz-bucket (created automatically when the containers start)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Security Considerations&lt;/h3&gt; &#xA;&lt;p&gt;For production deployments:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use strong, unique passwords and keys for all services&lt;/li&gt; &#xA; &lt;li&gt;Do not commit &lt;code&gt;.env&lt;/code&gt; files to version control&lt;/li&gt; &#xA; &lt;li&gt;Use a production-grade PostgreSQL setup with proper backup procedures&lt;/li&gt; &#xA; &lt;li&gt;Enable HTTPS for all public endpoints&lt;/li&gt; &#xA; &lt;li&gt;Review and update dependencies regularly&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions from the community! If you&#39;d like to contribute, please follow our &lt;a href=&#34;https://raw.githubusercontent.com/Worklenz/worklenz/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you believe you have found a security vulnerability in Worklenz, we encourage you to responsibly disclose this and not open a public issue. We will investigate all legitimate reports.&lt;/p&gt; &#xA;&lt;p&gt;Email &lt;a href=&#34;mailto:info@worklenz.com&#34;&gt;info@worklenz.com&lt;/a&gt; to disclose any security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/Worklenz/worklenz/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Analytics&lt;/h2&gt; &#xA;&lt;p&gt;Worklenz uses Google Analytics to understand how the application is being used. This helps us improve the application and make better decisions about future development.&lt;/p&gt; &#xA;&lt;h3&gt;What We Track&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Anonymous usage statistics&lt;/li&gt; &#xA; &lt;li&gt;Page views and navigation patterns&lt;/li&gt; &#xA; &lt;li&gt;Feature usage&lt;/li&gt; &#xA; &lt;li&gt;Browser and device information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Privacy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Analytics is opt-in only&lt;/li&gt; &#xA; &lt;li&gt;No personal information is collected&lt;/li&gt; &#xA; &lt;li&gt;Users can opt-out at any time&lt;/li&gt; &#xA; &lt;li&gt;Data is stored according to Google&#39;s privacy policy&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to Opt-Out&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;ve previously opted in and want to opt-out:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clear your browser&#39;s local storage for the Worklenz domain&lt;/li&gt; &#xA; &lt;li&gt;Or click the &#34;Decline&#34; button in the analytics notice if it appears&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://worklenz.com/features/task-management/&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://worklenz.s3.amazonaws.com/assets/screenshots/task-views-view.png&#34; alt=&#34;Worklenz task views&#34; width=&#34;1024&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://worklenz.com/features/time-tracking/&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://worklenz.s3.amazonaws.com/assets/screenshots/time-tracking-view.png&#34; alt=&#34;Worklenz time tracking&#34; width=&#34;1024&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://worklenz.com/features/analytics/&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://worklenz.s3.amazonaws.com/assets/screenshots/analytics-view.png&#34; alt=&#34;Worklenz analytics&#34; width=&#34;1024&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://worklenz.com/features/resource-management/&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://worklenz.s3.amazonaws.com/assets/screenshots/schedule-view.png&#34; alt=&#34;Worklenz scheduler&#34; width=&#34;1024&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://worklenz.com/features/templates/&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://worklenz.s3.amazonaws.com/assets/screenshots/templates-view.png&#34; alt=&#34;Worklenz templates&#34; width=&#34;1024&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We welcome contributions from the community! If you&#39;d like to contribute, please follow our &lt;a href=&#34;https://raw.githubusercontent.com/Worklenz/worklenz/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Worklenz is open source and released under the &lt;a href=&#34;https://raw.githubusercontent.com/Worklenz/worklenz/main/LICENSE&#34;&gt;GNU Affero General Public License Version 3 (AGPLv3)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By contributing to Worklenz, you agree that your contributions will be licensed under its AGPL.&lt;/p&gt; &#xA;&lt;h1&gt;Worklenz React&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the React version of Worklenz with a Docker setup for easy development and deployment.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started with Docker&lt;/h2&gt; &#xA;&lt;p&gt;The project includes a fully configured Docker setup with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Frontend React application&lt;/li&gt; &#xA; &lt;li&gt;Backend server&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL database&lt;/li&gt; &#xA; &lt;li&gt;MinIO for S3-compatible storage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker and Docker Compose installed on your system&lt;/li&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Worklenz/worklenz.git&#xA;cd worklenz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start the Docker containers (choose one option):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 1: Using the provided scripts (easiest)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Windows: &lt;pre&gt;&lt;code&gt;start.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;On Linux/macOS: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./start.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 2: Using Docker Compose directly&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;The application will be available at:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Frontend: &lt;a href=&#34;http://localhost:5000&#34;&gt;http://localhost:5000&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Backend API: &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;MinIO Console: &lt;a href=&#34;http://localhost:9001&#34;&gt;http://localhost:9001&lt;/a&gt; (login with minioadmin/minioadmin)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To stop the services (choose one option):&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 1: Using the provided scripts&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Windows: &lt;pre&gt;&lt;code&gt;stop.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;On Linux/macOS: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./stop.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 2: Using Docker Compose directly&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;MinIO Integration&lt;/h2&gt; &#xA;&lt;p&gt;The project uses MinIO as an S3-compatible object storage service, which provides an open-source alternative to AWS S3 for development and production.&lt;/p&gt; &#xA;&lt;h3&gt;Working with MinIO&lt;/h3&gt; &#xA;&lt;p&gt;MinIO provides an S3-compatible API, so any code that works with S3 will work with MinIO by simply changing the endpoint URL. The backend has been configured to use MinIO by default, with no additional configuration required.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;MinIO Console&lt;/strong&gt;: &lt;a href=&#34;http://localhost:9001&#34;&gt;http://localhost:9001&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Username: minioadmin&lt;/li&gt; &#xA;   &lt;li&gt;Password: minioadmin&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Default Bucket&lt;/strong&gt;: worklenz-bucket (created automatically when the containers start)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Backend Storage Configuration&lt;/h3&gt; &#xA;&lt;p&gt;The backend is pre-configured to use MinIO with the following settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// S3 credentials with MinIO defaults&#xA;export const REGION = process.env.AWS_REGION || &#34;us-east-1&#34;;&#xA;export const BUCKET = process.env.AWS_BUCKET || &#34;worklenz-bucket&#34;;&#xA;export const S3_URL = process.env.S3_URL || &#34;http://minio:9000/worklenz-bucket&#34;;&#xA;export const S3_ACCESS_KEY_ID = process.env.AWS_ACCESS_KEY_ID || &#34;minioadmin&#34;;&#xA;export const S3_SECRET_ACCESS_KEY = process.env.AWS_SECRET_ACCESS_KEY || &#34;minioadmin&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The S3 client is initialized with special MinIO configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const s3Client = new S3Client({&#xA;  region: REGION,&#xA;  credentials: {&#xA;    accessKeyId: S3_ACCESS_KEY_ID || &#34;&#34;,&#xA;    secretAccessKey: S3_SECRET_ACCESS_KEY || &#34;&#34;,&#xA;  },&#xA;  endpoint: getEndpointFromUrl(), // Extracts endpoint from S3_URL&#xA;  forcePathStyle: true, // Required for MinIO&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Environment Configuration&lt;/h3&gt; &#xA;&lt;p&gt;The project uses the following environment file structure:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Frontend&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;worklenz-frontend/.env.development&lt;/code&gt; - Development environment variables&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;worklenz-frontend/.env.production&lt;/code&gt; - Production build variables&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Backend&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;worklenz-backend/.env&lt;/code&gt; - Backend environment variables&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setting Up Environment Files&lt;/h3&gt; &#xA;&lt;p&gt;The Docker environment script will create or overwrite all environment files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For HTTP/WS&#xA;./update-docker-env.sh your-hostname&#xA;&#xA;# For HTTPS/WSS&#xA;./update-docker-env.sh your-hostname true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script generates properly configured environment files for both development and production environments.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Deployment&lt;/h2&gt; &#xA;&lt;h3&gt;Local Development with Docker&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up the environment files:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For HTTP/WS&#xA;./update-docker-env.sh&#xA;&#xA;# For HTTPS/WSS&#xA;./update-docker-env.sh localhost true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the application using Docker Compose:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Access the application:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Frontend: &lt;a href=&#34;http://localhost:5000&#34;&gt;http://localhost:5000&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Backend API: &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; (or &lt;a href=&#34;https://localhost:3000&#34;&gt;https://localhost:3000&lt;/a&gt; with SSL)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Video Guide&lt;/p&gt; &lt;p&gt;For a visual walkthrough of the local Docker deployment process, check out our &lt;a href=&#34;https://www.youtube.com/watch?v=AfwAKxJbqLg&#34;&gt;step-by-step video guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Remote Server Deployment&lt;/h3&gt; &#xA;&lt;p&gt;When deploying to a remote server:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up the environment files with your server&#39;s hostname:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For HTTP/WS&#xA;./update-docker-env.sh your-server-hostname&#xA;&#xA;# For HTTPS/WSS&#xA;./update-docker-env.sh your-server-hostname true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This ensures that the frontend correctly connects to the backend API.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull and run the latest Docker images:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose pull&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Access the application through your server&#39;s hostname:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Frontend: &lt;a href=&#34;http://your-server-hostname:5000&#34;&gt;http://your-server-hostname:5000&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Backend API: &lt;a href=&#34;http://your-server-hostname:3000&#34;&gt;http://your-server-hostname:3000&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Video Guide&lt;/p&gt; &lt;p&gt;For a complete walkthrough of deploying Worklenz to a remote server, check out our &lt;a href=&#34;https://www.youtube.com/watch?v=CAZGu2iOXQs&amp;amp;t=10s&#34;&gt;deployment video guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Environment Configuration&lt;/h3&gt; &#xA;&lt;p&gt;The Docker setup uses environment variables to configure the services:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Frontend:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;VITE_API_URL&lt;/code&gt;: URL of the backend API (default: &lt;a href=&#34;http://backend:3000&#34;&gt;http://backend:3000&lt;/a&gt; for container networking)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;VITE_SOCKET_URL&lt;/code&gt;: WebSocket URL for real-time communication (default: ws://backend:3000)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Backend:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Database connection parameters&lt;/li&gt; &#xA;   &lt;li&gt;Storage configuration&lt;/li&gt; &#xA;   &lt;li&gt;Other backend settings&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For custom configuration, edit the &lt;code&gt;.env&lt;/code&gt; file or the &lt;code&gt;update-docker-env.sh&lt;/code&gt; script.&lt;/p&gt;</summary>
  </entry>
</feed>