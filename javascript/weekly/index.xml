<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-20T01:49:25Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>namastedev/namaste-react</title>
    <updated>2023-08-20T01:49:25Z</updated>
    <id>tag:github.com,2023-08-20:/namastedev/namaste-react</id>
    <link href="https://github.com/namastedev/namaste-react" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Namaste React 🚀&lt;/h1&gt; &#xA;&lt;h1&gt;Parcel&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dev Build&lt;/li&gt; &#xA; &lt;li&gt;Local Server&lt;/li&gt; &#xA; &lt;li&gt;HMR = Hot Module Replacement&lt;/li&gt; &#xA; &lt;li&gt;File Watching Algorithm - written in C++&lt;/li&gt; &#xA; &lt;li&gt;Caching - Faster Builds&lt;/li&gt; &#xA; &lt;li&gt;Image Optimization&lt;/li&gt; &#xA; &lt;li&gt;Minification&lt;/li&gt; &#xA; &lt;li&gt;Bundling&lt;/li&gt; &#xA; &lt;li&gt;Compress&lt;/li&gt; &#xA; &lt;li&gt;Consistent Hashing&lt;/li&gt; &#xA; &lt;li&gt;Code Splitting&lt;/li&gt; &#xA; &lt;li&gt;Differential Bundling - support older browsers&lt;/li&gt; &#xA; &lt;li&gt;Diagnostic&lt;/li&gt; &#xA; &lt;li&gt;Error Handling&lt;/li&gt; &#xA; &lt;li&gt;HTTPs&lt;/li&gt; &#xA; &lt;li&gt;Tree Shaking - remove unused code&lt;/li&gt; &#xA; &lt;li&gt;Different dev and prod bundles&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Namaste Food&lt;/h1&gt; &#xA;&lt;p&gt;/**&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Header&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Logo&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Nav Items&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Body&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Search&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;RestaurantContainer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;RestaurantCard&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;pre&gt;&lt;code&gt; - Img&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;pre&gt;&lt;code&gt; - Name of Res, Star Rating, cuisine, delery tie&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Footer&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copyright&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Links&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Address&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Contact */&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Two types of Export/Import&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default Export/Import&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;export default Component; import Component from &#34;path&#34;;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Named Export/Import&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;export const Component; import {Component} from &#34;path&#34;;&lt;/p&gt; &#xA;&lt;h1&gt;React Hooks&lt;/h1&gt; &#xA;&lt;p&gt;(Normal JS utility functions)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;useState() - Superpowerful State Variables in react&lt;/li&gt; &#xA; &lt;li&gt;useEffect()&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;2 types Routing in web apps&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Client Side Routing&lt;/li&gt; &#xA; &lt;li&gt;Server Side Routing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Redux Toolkit&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install @reduxjs/toolkit and react-redux&lt;/li&gt; &#xA; &lt;li&gt;Build our store&lt;/li&gt; &#xA; &lt;li&gt;Connect our store to our app&lt;/li&gt; &#xA; &lt;li&gt;Slice (cartSlice)&lt;/li&gt; &#xA; &lt;li&gt;dispatch(action)&lt;/li&gt; &#xA; &lt;li&gt;Selector&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Types of testing (devloper)&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unit Testing&lt;/li&gt; &#xA; &lt;li&gt;Integration Testing&lt;/li&gt; &#xA; &lt;li&gt;End to End Testing - e2e testing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Setting up Testing in our app&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install React Testing Library&lt;/li&gt; &#xA; &lt;li&gt;Installed jest&lt;/li&gt; &#xA; &lt;li&gt;Installed Babel dependencies&lt;/li&gt; &#xA; &lt;li&gt;Configure Babel&lt;/li&gt; &#xA; &lt;li&gt;Configure Parcel Config file to disable default babel transpilation&lt;/li&gt; &#xA; &lt;li&gt;Jest - npx jest --init&lt;/li&gt; &#xA; &lt;li&gt;Install jsdom library&lt;/li&gt; &#xA; &lt;li&gt;Install @babel/preset-react - to make JSX work in test cases&lt;/li&gt; &#xA; &lt;li&gt;Include @babel/preset-react inside my babel config&lt;/li&gt; &#xA; &lt;li&gt;npm i -D @testing-library/jest-dom&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>orkestral/venom</title>
    <updated>2023-08-20T01:49:25Z</updated>
    <id>tag:github.com,2023-08-20:/orkestral/venom</id>
    <link href="https://github.com/orkestral/venom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Venom is the most complete javascript library for Whatsapp, 100% Open Source.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🕷Venom Bot🕸&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/venom-bot&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/venom-bot.svg?color=green&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/node/v/venom-bot&#34; alt=&#34;node&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/venom-bot&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/venom-bot.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://isitmaintained.com/project/orkestral/venom&#34; title=&#34;Average time to resolve an issue&#34;&gt;&lt;img src=&#34;http://isitmaintained.com/badge/resolution/orkestral/venom.svg?sanitize=true&#34; alt=&#34;Average time to resolve an issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://isitmaintained.com/project/orkestral/venom&#34; title=&#34;Percentage of issues still open&#34;&gt;&lt;img src=&#34;http://isitmaintained.com/badge/open/orkestral/venom.svg?sanitize=true&#34; alt=&#34;Percentage of issues still open&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/qCJ95FVbzR&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/772885202351292426?color=blueviolet&amp;amp;label=discord&amp;amp;style=flat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/orkestral/venom/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/orkestral/venom/build.yml?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/orkestral/venom/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/orkestral/venom/lint.yml?branch=master&amp;amp;label=lint&#34; alt=&#34;Lint Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/release-it/release-it&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%93%A6%F0%9F%9A%80-release--it-e10079.svg?sanitize=true&#34; alt=&#34;release-it&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Venom is a high-performance system developed with JavaScript to create a bot for WhatsApp, support for creating any interaction, such as customer service, media sending, sentence recognition based on artificial intelligence and all types of design architecture for WhatsApp.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Get started fast and easy! Official API!&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://docs.orkestral.io/venom&#34;&gt;Full Documentation&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt; It&#39;s a high-performance alternative API to whatzapp, you can send, text messages, files, images, videos and more. &lt;/p&gt; &#xA;&lt;p&gt; Remember, the API was developed on a platform called RESTful Web services, providing interoperability between computer systems on the Internet. &lt;/p&gt; &#xA;&lt;p&gt; It uses a set of well-defined operations that apply to all information resources: HTTP itself defines a small set of operations, the most important being POST, GET, PUT and DELETE. &lt;/p&gt; &#xA;&lt;p&gt; Use it in your favorite language like PHP, Python, C# and others. as long as your language is supported with the HTTP protocol, you will save time and money. you don&#39;t need to know how Venom works, we have the complete API documentation, in a professional way! &lt;/p&gt; &#xA;&lt;h2&gt;Get our official API Venom ! Contact us!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://web.whatsapp.com/send?phone=5561985290357&amp;amp;text=I%20want%20access%20to%20API%20Venom&#34;&gt;&lt;img title=&#34;whatzapp&#34; height=&#34;100&#34; width=&#34;375&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/WhatsApp_logo.svg/2000px-WhatsApp_logo.svg.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Venom group support on Telegram&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://t.me/joinchat/G8wxNXidWBo1ZDYx&#34;&gt;&lt;img title=&#34;Telegram&#34; height=&#34;100&#34; width=&#34;375&#34; src=&#34;https://user-images.githubusercontent.com/66584466/117182238-7d1d8980-adac-11eb-9a70-e32f90c3d4e5.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Venom group support on Discord&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://discord.gg/uBRjk6vecs&#34;&gt;&lt;img title=&#34;Discord&#34; height=&#34;110&#34; width=&#34;375&#34; src=&#34;https://s2.glbimg.com/GUbCgnBxJERAmuaYcrjBzTXD5ws=/0x0:800x272/984x0/smart/filters:strip_icc()/i.s3.glbimg.com/v1/AUTH_63b422c2caee4269b8b34177e8876b93/internal_photos/bs/2021/d/N/zJs579QOGxKVRxfPILCA/discord-app.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Meet the Superchats&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://github.com/orkestral/superchats&#34;&gt;&lt;img src=&#34;https://github.com/orkestral/superchats/raw/main/img/superchats.png&#34; height=&#34;60&#34; alt=&#34;SuperChats&#34; aria-label=&#34;https://github.com/orkestral/superchats&#34;&gt;&lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;SuperChats&lt;/strong&gt; is a premium library with unique features that control Whatsapp functions with socket. With Superchats you can build service bots, multiservice chats or any system that uses Whatsapp&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Superchats&lt;/strong&gt; is a premium version of &lt;strong&gt;Venom&lt;/strong&gt;, with exclusive features and support for companies and developers worldwide &lt;br&gt; &lt;a href=&#34;https://github.com/orkestral/superchats&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/orkestral/superchats&#34;&gt;https://github.com/orkestral/superchats&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Buy a license Superchats&lt;/h2&gt; &#xA;&lt;p&gt;The value of the license is $50 monthly dollars, to acquire contact in whatsapp by clicking on the image below !!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://web.whatsapp.com/send?phone=5561985290357&amp;amp;text=I%20want%20to%20buy%201%20license&#34;&gt;&lt;img title=&#34;whatzapp&#34; height=&#34;100&#34; width=&#34;375&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/WhatsApp_logo.svg/2000px-WhatsApp_logo.svg.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🕷🕷 Functions Venom🕷🕷&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🚻 Automatic QR Refresh&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;📁 Send &lt;strong&gt;text, image, video, audio and docs&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;👥 Get &lt;strong&gt;contacts, chats, groups, group members, Block List&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;📞 Send contacts&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Send Buttons&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Send stickers&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Send stickers GIF&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Multiple Sessions&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;⏩ Forward Messages&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;📥 Receive message&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;👤 insert user section&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;📍 Send location!!&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🕸🕸 &lt;strong&gt;and much more&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Documentation at &lt;a href=&#34;https://orkestral.github.io/venom/index.html&#34;&gt;https://orkestral.github.io/venom/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; npm i --save venom-bot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or for &lt;a href=&#34;https://github.com/orkestral/venom/releases/tag/nightly&#34;&gt;Nightly releases&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; npm i --save https://github.com/orkestral/venom/releases/download/nightly/venom-bot-nightly.tgz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Installing the current repository &#34;you can download the beta version from the current repository!&#34;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; npm i github:orkestral/venom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Supports ES6&#xA;// import { create, Whatsapp } from &#39;venom-bot&#39;;&#xA;const venom = require(&#39;venom-bot&#39;);&#xA;&#xA;venom&#xA;  .create({&#xA;    session: &#39;session-name&#39; //name of session&#xA;  })&#xA;  .then((client) =&amp;gt; start(client))&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.log(erro);&#xA;  });&#xA;&#xA;function start(client) {&#xA;  client.onMessage((message) =&amp;gt; {&#xA;    if (message.body === &#39;Hi&#39; &amp;amp;&amp;amp; message.isGroupMsg === false) {&#xA;      client&#xA;        .sendText(message.from, &#39;Welcome Venom 🕷&#39;)&#xA;        .then((result) =&amp;gt; {&#xA;          console.log(&#39;Result: &#39;, result); //return object success&#xA;        })&#xA;        .catch((erro) =&amp;gt; {&#xA;          console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;        });&#xA;    }&#xA;  });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;After executing &lt;code&gt;create()&lt;/code&gt; function, &lt;strong&gt;venom&lt;/strong&gt; will create an instance of whatsapp web. If you are not logged in, it will print a QR code in the terminal. Scan it with your phone and you are ready to go!&lt;/h5&gt; &#xA;&lt;h5&gt;Venom will remember the session so there is no need to authenticate everytime.&lt;/h5&gt; &#xA;&lt;h5&gt;Multiples sessions can be created at the same time by pasing a session name to &lt;code&gt;create()&lt;/code&gt; function:&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Init sales whatsapp bot&#xA;venom.create(&#39;sales&#39;).then((salesClient) =&amp;gt; {...});&#xA;&#xA;// Init support whatsapp bot&#xA;venom.create(&#39;support&#39;).then((supportClient) =&amp;gt; {...});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Optional create parameters&lt;/h2&gt; &#xA;&lt;p&gt;Venom &lt;code&gt;create()&lt;/code&gt; method third parameter can have the following optional parameters:&lt;/p&gt; &#xA;&lt;p&gt;If you are using the &lt;code&gt;Linux&lt;/code&gt; server do not forget to pass the args &lt;code&gt;--user-agent&lt;/code&gt; &lt;a href=&#34;https://github.com/orkestral/venom/raw/master/src/config/puppeteer.config.ts&#34;&gt;Original parameters in browserArgs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const venom = require(&#39;venom-bot&#39;);&#xA;&#xA;venom&#xA;  .create(&#xA;    //session&#xA;    &#39;sessionName&#39;, //Pass the name of the client you want to start the bot&#xA;    //catchQR&#xA;    (base64Qrimg, asciiQR, attempts, urlCode) =&amp;gt; {&#xA;      console.log(&#39;Number of attempts to read the qrcode: &#39;, attempts);&#xA;      console.log(&#39;Terminal qrcode: &#39;, asciiQR);&#xA;      console.log(&#39;base64 image string qrcode: &#39;, base64Qrimg);&#xA;      console.log(&#39;urlCode (data-ref): &#39;, urlCode);&#xA;    },&#xA;    // statusFind&#xA;    (statusSession, session) =&amp;gt; {&#xA;      console.log(&#39;Status Session: &#39;, statusSession); //return isLogged || notLogged || browserClose || qrReadSuccess || qrReadFail || autocloseCalled || desconnectedMobile || deleteToken || chatsAvailable || deviceNotConnected || serverWssNotConnected || noOpenBrowser || initBrowser || openBrowser || connectBrowserWs || initWhatsapp || erroPageWhatsapp || successPageWhatsapp || waitForLogin || waitChat || successChat&#xA;      //Create session wss return &#34;serverClose&#34; case server for close&#xA;      console.log(&#39;Session name: &#39;, session);&#xA;    },&#xA;    // options&#xA;    {&#xA;      browserPathExecutable: &#39;&#39;, // browser executable path&#xA;      folderNameToken: &#39;tokens&#39;, //folder name when saving tokens&#xA;      mkdirFolderToken: &#39;&#39;, //folder directory tokens, just inside the venom folder, example:  { mkdirFolderToken: &#39;/node_modules&#39;, } //will save the tokens folder in the node_modules directory&#xA;      headless: &#39;new&#39;, // you should no longer use boolean false or true, now use false, true or &#39;new&#39; learn more https://developer.chrome.com/articles/new-headless/&#xA;      devtools: false, // Open devtools by default&#xA;      debug: false, // Opens a debug session&#xA;      logQR: true, // Logs QR automatically in terminal&#xA;      browserWS: &#39;&#39;, // If u want to use browserWSEndpoint&#xA;      browserArgs: [&#39;&#39;], // Original parameters  ---Parameters to be added into the chrome browser instance&#xA;      addBrowserArgs: [&#39;&#39;], // Add broserArgs without overwriting the project&#39;s original&#xA;      puppeteerOptions: {}, // Will be passed to puppeteer.launch&#xA;      disableSpins: true, // Will disable Spinnies animation, useful for containers (docker) for a better log&#xA;      disableWelcome: true, // Will disable the welcoming message which appears in the beginning&#xA;      updatesLog: true, // Logs info updates automatically in terminal&#xA;      autoClose: 60000, // Automatically closes the venom-bot only when scanning the QR code (default 60 seconds, if you want to turn it off, assign 0 or false)&#xA;      createPathFileToken: false, // creates a folder when inserting an object in the client&#39;s browser, to work it is necessary to pass the parameters in the function create browserSessionToken&#xA;      addProxy: [&#39;&#39;], // Add proxy server exemple : [e1.p.webshare.io:01, e1.p.webshare.io:01]&#xA;      userProxy: &#39;&#39;, // Proxy login username&#xA;      userPass: &#39;&#39; // Proxy password&#xA;    },&#xA;&#xA;    // BrowserInstance&#xA;    (browser, waPage) =&amp;gt; {&#xA;      console.log(&#39;Browser PID:&#39;, browser.process().pid);&#xA;      waPage.screenshot({ path: &#39;screenshot.png&#39; });&#xA;    }&#xA;  )&#xA;  .then((client) =&amp;gt; {&#xA;    start(client);&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.log(erro);&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Callback Status Session&lt;/h2&gt; &#xA;&lt;p&gt;Gets the return if the session is &lt;code&gt;isLogged&lt;/code&gt; or &lt;code&gt;notLogged&lt;/code&gt; or &lt;code&gt;browserClose&lt;/code&gt; or &lt;code&gt;qrReadSuccess&lt;/code&gt; or &lt;code&gt;qrReadFail&lt;/code&gt; or &lt;code&gt;autocloseCalled&lt;/code&gt; or &lt;code&gt;desconnectedMobile&lt;/code&gt; or &lt;code&gt;deleteToken&lt;/code&gt; or &lt;code&gt;chatsAvailable&lt;/code&gt; or &lt;code&gt;deviceNotConnected&lt;/code&gt; or &lt;code&gt;serverWssNotConnected&lt;/code&gt; or &lt;code&gt;noOpenBrowser&lt;/code&gt; or &lt;code&gt;initBrowser&lt;/code&gt; or &lt;code&gt;openBrowser&lt;/code&gt; or &lt;code&gt;connectBrowserWs&lt;/code&gt; or &lt;code&gt;initWhatsapp&lt;/code&gt; or &lt;code&gt;erroPageWhatsapp&lt;/code&gt; or &lt;code&gt;successPageWhatsapp&lt;/code&gt; or &lt;code&gt;waitForLogin&lt;/code&gt; or &lt;code&gt;waitChat&lt;/code&gt; or &lt;code&gt;successChat&lt;/code&gt; or &lt;code&gt;Create session wss return &#34;serverClose&#34; case server for close&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Condition&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;isLogged&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;When the user is already logged in to the browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;notLogged&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;When the user is not connected to the browser, it is necessary to scan the QR code through the cell phone in the option WhatsApp Web&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;browserClose&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If the browser is closed this parameter is returned&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;qrReadSuccess&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If the user is not logged in, the QR code is passed on the terminal a callback is returned. After the correct reading by cell phone this parameter is returned&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;qrReadFail&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If the browser stops when the QR code scan is in progress, this parameter is returned&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;autocloseCalled&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The browser was closed using the autoClose command&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;desconnectedMobile&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Client has desconnected in to mobile&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;serverClose&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Client has desconnected in to wss&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;deleteToken&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If you pass true within the function&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;chatsAvailable&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;When Venom is connected to the chat list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;deviceNotConnected&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Chat not available because the phone is disconnected &lt;code&gt;(Trying to connect to the phone)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;serverWssNotConnected&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The address wss was not found!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;noOpenBrowser&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;It was not found in the browser, or some command is missing in args&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;initBrowser&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Starting the browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;openBrowser&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The browser has been successfully opened!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;connectBrowserWs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Connection with BrowserWs successfully done!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;initWhatsapp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Starting whatsapp!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;erroPageWhatsapp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Error accessing whatsapp page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;successPageWhatsapp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Page Whatsapp successfully accessed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;waitForLogin&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Waiting for login verification!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;waitChat&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Waiting for the chat to load&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;successChat&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Chat successfully loaded!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const venom = require(&#39;venom-bot&#39;);&#xA;venom&#xA;  .create(&#39;sessionName&#39;, undefined, (statusSession, session) =&amp;gt; {&#xA;    console.log(&#39;Status Session: &#39;, statusSession);&#xA;    //return isLogged || notLogged || browserClose || qrReadSuccess || qrReadFail || autocloseCalled || desconnectedMobile || deleteToken || chatsAvailable || deviceNotConnected || serverWssNotConnected || noOpenBrowser || initBrowser || openBrowser || connectBrowserWs || initWhatsapp || erroPageWhatsapp || successPageWhatsapp || waitForLogin || waitChat || successChat&#xA;    //Create session wss return &#34;serverClose&#34; case server for close&#xA;    console.log(&#39;Session name: &#39;, session);&#xA;  })&#xA;  .then((client) =&amp;gt; {&#xA;    start(client);&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.log(erro);&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Exporting QR Code&lt;/h2&gt; &#xA;&lt;p&gt;By default QR code will appear on the terminal. If you need to pass the QR somewhere else heres how:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const fs = require(&#39;fs&#39;);&#xA;const venom = require(&#39;venom-bot&#39;);&#xA;&#xA;venom&#xA;  .create(&#xA;    &#39;sessionName&#39;,&#xA;    (base64Qr, asciiQR, attempts, urlCode) =&amp;gt; {&#xA;      console.log(asciiQR); // Optional to log the QR in the terminal&#xA;      var matches = base64Qr.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/),&#xA;        response = {};&#xA;&#xA;      if (matches.length !== 3) {&#xA;        return new Error(&#39;Invalid input string&#39;);&#xA;      }&#xA;      response.type = matches[1];&#xA;      response.data = new Buffer.from(matches[2], &#39;base64&#39;);&#xA;&#xA;      var imageBuffer = response;&#xA;      require(&#39;fs&#39;).writeFile(&#xA;        &#39;out.png&#39;,&#xA;        imageBuffer[&#39;data&#39;],&#xA;        &#39;binary&#39;,&#xA;        function (err) {&#xA;          if (err != null) {&#xA;            console.log(err);&#xA;          }&#xA;        }&#xA;      );&#xA;    },&#xA;    undefined,&#xA;    { logQR: false }&#xA;  )&#xA;  .then((client) =&amp;gt; {&#xA;    start(client);&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.log(erro);&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Downloading Files&lt;/h2&gt; &#xA;&lt;p&gt;Puppeteer takes care of the file downloading. The decryption is being done as fast as possible (outruns native methods). Supports big files!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import fs = require(&#39;fs&#39;);&#xA;import mime = require(&#39;mime-types&#39;);&#xA;&#xA;client.onMessage( async (message) =&amp;gt; {&#xA;  if (message.isMedia === true || message.isMMS === true) {&#xA;    const buffer = await client.decryptFile(message);&#xA;    // At this point you can do whatever you want with the buffer&#xA;    // Most likely you want to write it into a file&#xA;    const fileName = `some-file-name.${mime.extension(message.mimetype)}`;&#xA;    await fs.writeFile(fileName, buffer, (err) =&amp;gt; {&#xA;      ...&#xA;    });&#xA;  }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic Functions (usage)&lt;/h2&gt; &#xA;&lt;p&gt;Not every available function is listed, for further look, every function available can be found in &lt;a href=&#34;https://raw.githubusercontent.com/orkestral/venom/master/src/api/layers&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/orkestral/venom/master/src/lib/wapi/functions&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Chatting&lt;/h3&gt; &#xA;&lt;h5&gt;Here, &lt;code&gt;chatId&lt;/code&gt; could be &lt;code&gt;&amp;lt;phoneNumber&amp;gt;@c.us&lt;/code&gt; or &lt;code&gt;&amp;lt;phoneNumber&amp;gt;-&amp;lt;groupId&amp;gt;@g.us&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#xA;// Send Poll&#xA;const poll = {&#xA;  name: &#39;new poll&#39;,&#xA;  options: [&#xA;    {&#xA;      name: &#39;option 1&#39;&#xA;    },&#xA;    {&#xA;      name: &#39;option 2&#39;&#xA;    }&#xA;  ],&#xA;  selectableOptionsCount: 1&#xA;};&#xA;await client.sendPollCreation(&#39;000000000000@c.us&#39;, poll)&#xA;.then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;})&#xA;.catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;});&#xA;&#xA;// Send List menu&#xA;const list = [&#xA;    {&#xA;      title: &#34;Pasta&#34;,&#xA;      rows: [&#xA;        {&#xA;          title: &#34;Ravioli Lasagna&#34;,&#xA;          description: &#34;Made with layers of frozen cheese&#34;,&#xA;        }&#xA;      ]&#xA;    },&#xA;    {&#xA;      title: &#34;Dessert&#34;,&#xA;      rows: [&#xA;        {&#xA;          title: &#34;Baked Ricotta Cake&#34;,&#xA;          description: &#34;Sweets pecan baklava rolls&#34;,&#xA;        },&#xA;        {&#xA;          title: &#34;Lemon Meringue Pie&#34;,&#xA;          description: &#34;Pastry filled with lemonand meringue.&#34;,&#xA;        }&#xA;      ]&#xA;    }&#xA;  ];&#xA;&#xA;await client.sendListMenu(&#39;000000000000@c.us&#39;, &#39;Title&#39;, &#39;subTitle&#39;, &#39;Description&#39;, &#39;menu&#39;, list)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Send Messages with Buttons Reply&#xA;const buttons = [&#xA;  {&#xA;    &#34;buttonText&#34;: {&#xA;      &#34;displayText&#34;: &#34;Text of Button 1&#34;&#xA;      }&#xA;    },&#xA;  {&#xA;    &#34;buttonText&#34;: {&#xA;      &#34;displayText&#34;: &#34;Text of Button 2&#34;&#xA;      }&#xA;    }&#xA;  ]&#xA;await client.sendButtons(&#39;000000000000@c.us&#39;, &#39;Title&#39;, buttons, &#39;Description&#39;)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;// Send audio file MP3&#xA;await client.sendVoice(&#39;000000000000@c.us&#39;, &#39;./audio.mp3&#39;).then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Send audio file base64&#xA;await client.sendVoiceBase64(&#39;000000000000@c.us&#39;, base64MP3)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Send contact&#xA;await client&#xA;  .sendContactVcard(&#39;000000000000@c.us&#39;, &#39;111111111111@c.us&#39;, &#39;Name of contact&#39;)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Send a list of contact cards&#xA;await client&#xA;  .sendContactVcardList(&#39;000000000000@c.us&#39;, [&#xA;    &#39;111111111111@c.us&#39;,&#xA;    &#39;222222222222@c.us&#39;,&#xA;  ])&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Send basic text&#xA;await client&#xA;  .sendText(&#39;000000000000@c.us&#39;, &#39;👋 Hello from venom!&#39;)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Send location&#xA;await client&#xA;  .sendLocation(&#39;000000000000@c.us&#39;, &#39;-13.6561589&#39;, &#39;-69.7309264&#39;, &#39;Brasil&#39;)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Automatically sends a link with the auto generated link preview. You can also add a custom message to be added.&#xA;await client&#xA;  .sendLinkPreview(&#xA;    &#39;000000000000@c.us&#39;,&#xA;    &#39;https://www.youtube.com/watch?v=V1bFr2SWP1I&#39;,&#xA;    &#39;Kamakawiwo ole&#39;&#xA;  )&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Send image (you can also upload an image using a valid HTTP protocol)&#xA;await client&#xA;  .sendImage(&#xA;    &#39;000000000000@c.us&#39;,&#xA;    &#39;path/to/img.jpg&#39;,&#xA;    &#39;image-name&#39;,&#xA;    &#39;Caption text&#39;&#xA;  )&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;&#xA;// Send image file base64&#xA;await client.sendImageFromBase64(&#39;000000000000@c.us&#39;, base64Image, &#34;name file&#34;)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Send file (venom will take care of mime types, just need the path)&#xA;// you can also upload an image using a valid HTTP protocol&#xA;await client&#xA;  .sendFile(&#xA;    &#39;000000000000@c.us&#39;,&#xA;    &#39;path/to/file.pdf&#39;,&#xA;    &#39;file_name&#39;,&#xA;    &#39;See my file in pdf&#39;&#xA;  )&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Sends file&#xA;// base64 parameter should have mime type already defined&#xA;await client&#xA;  .sendFileFromBase64(&#xA;    &#39;000000000000@c.us&#39;,&#xA;    base64PDF,&#xA;    &#39;file_name.pdf&#39;,&#xA;    &#39;See my file in pdf&#39;&#xA;  )&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Generates sticker from the provided animated gif image and sends it (Send image as animated sticker)&#xA;// image path imageBase64 A valid gif and webp image is required. You can also send via http/https (http://www.website.com/img.gif)&#xA;await client&#xA;  .sendImageAsStickerGif(&#39;000000000000@c.us&#39;, &#39;./image.gif&#39;)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Generates sticker from given image and sends it (Send Image As Sticker)&#xA;// image path imageBase64 A valid png, jpg and webp image is required. You can also send via http/https (http://www.website.com/img.jpg)&#xA;await client&#xA;  .sendImageAsSticker(&#39;000000000000@c.us&#39;, &#39;./image.jpg&#39;)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Forwards messages&#xA;await client.forwardMessages(&#xA;  &#39;000000000000@c.us&#39;,&#xA;  [&#39;false_000000000000@c.us_B70847EE89E22D20FB86ECA0C1B11609&#39;,&#39;false_000000000000@c.us_B70847EE89E22D20FB86ECA0C1B11777&#39;]&#xA;).then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;})&#xA;.catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;});&#xA;&#xA;// Send @tagged message&#xA;await client.sendMentioned(&#xA;  &#39;000000000000@c.us&#39;,&#xA;  &#39;Hello @5218113130740 and @5218243160777!&#39;,&#xA;  [&#39;5218113130740&#39;, &#39;5218243160777&#39;]&#xA;);&#xA;&#xA;// Reply to a message&#xA;await client.reply(&#xA;  &#39;000000000000@c.us&#39;,&#xA;  &#39;This is a reply!&#39;,&#xA;  &#39;true_551937311025@c.us_7C22WHCB6DKYHJKQIEN9&#39;&#xA;).then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;}).catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;});&#xA;&#xA;// Send message with options&#xA;await client.&#xA;        .sendMessageOptions(&#xA;          &#39;000000000000@c.us&#39;,&#xA;          &#39;This is a reply!&#39;,&#xA;           {&#xA;              quotedMessageId: reply,&#xA;            }&#xA;        )&#xA;        .then((retorno) =&amp;gt; {&#xA;          resp = retorno;&#xA;        })&#xA;        .catch((e) =&amp;gt; {&#xA;          console.log(e);&#xA;        });&#xA;&#xA;// Send gif&#xA;await client.sendVideoAsGif(&#xA;  &#39;000000000000@c.us&#39;,&#xA;  &#39;path/to/video.mp4&#39;,&#xA;  &#39;video.gif&#39;,&#xA;  &#39;Gif image file&#39;&#xA;);&#xA;&#xA;//checks and returns whether a message and a reply&#xA;// exemple:&#xA;// await client.onMessage(async (message) =&amp;gt; {&#xA;//     console.log(await client.returnReply(message)); // replicated message&#xA;//     console.log(message.body ); //customer message&#xA;//   })&#xA;checkReply = await client.returnReply(messagem);&#xA;&#xA;// Send seen ✔️✔️&#xA;await client.sendSeen(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Start typing...&#xA;await client.startTyping(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Stop typing&#xA;await client.stopTyping(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Set chat state (0: Typing, 1: Recording, 2: Paused)&#xA;await client.setChatState(&#39;000000000000@c.us&#39;, 0 | 1 | 2);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Retrieving Data&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Retrieve all chats&#xA;const chats = await client.getAllChats();&#xA;&#xA;//Retrieves all chats new messages&#xA;const chatsAllNew = getAllChatsNewMsg();&#xA;&#xA;//Retrieves all chats Contacts&#xA;const contacts = await client.getAllChatsContacts();&#xA;&#xA;//Retrieve all contacts new messages&#xA;const contactNewMsg = await client.getChatContactNewMsg();&#xA;&#xA;// Retrieve all groups&#xA;// you can pass the group id optional use, exemple: client.getAllChatsGroups(&#39;00000000-000000@g.us&#39;)&#xA;const chats = await client.getAllChatsGroups();&#xA;&#xA;//Retrieve all groups new messages&#xA;const groupNewMsg = await client.getChatGroupNewMsg();&#xA;&#xA;//Retrieves all chats Transmission list&#xA;const transmission = await client.getAllChatsTransmission();&#xA;&#xA;// Retrieve contacts&#xA;const contacts = await client.getAllContacts();&#xA;&#xA;// Returns a list of mute and non-mute users&#xA;// &#34;all&#34; List all mutes&#xA;// &#34;toMute&#34; List all silent chats&#xA;// &#34;noMute&#34; List all chats without silence&#xA;const listMute = await client.getListMute(&#39;all&#39;);&#xA;&#xA;// Calls your list of blocked contacts (returns an array)&#xA;const getBlockList = await client.getBlockList();&#xA;&#xA;// Retrieve messages in chat&#xA;//chatID chat id&#xA;//includeMe will be by default true, if you do not want to pass false&#xA;//includeNotifications will be by default true, if you do not want to pass false&#xA;//const Messages = await client.getAllMessagesInChat(chatID, includeMe, includeNotifications)&#xA;const Messages = await client.getAllMessagesInChat(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Retrieve more chat message&#xA;const moreMessages = await client.loadEarlierMessages(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Retrieve all messages in chat&#xA;const allMessages = await client.loadAndGetAllMessagesInChat(&#xA;  &#39;000000000000@c.us&#39;&#xA;);&#xA;&#xA;// Retrieve contact status&#xA;const status = await client.getStatus(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Retrieve user profile&#xA;const user = await client.getNumberProfile(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Retrieve all unread message&#xA;const messages = await client.getUnreadMessages();&#xA;&#xA;// Retrieve profile fic (as url)&#xA;const url = await client.getProfilePicFromServer(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Retrieve chat/conversation&#xA;const chat = await client.getChat(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Check if the number exists&#xA;const chat = await client&#xA;  .checkNumberStatus(&#39;000000000000@c.us&#39;)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Group Functions&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// groupId or chatId: leaveGroup 52123123-323235@g.us&#xA;&#xA;//change group description&#xA;await client&#xA;  .setGroupDescription(&#39;00000000-000000@g.us&#39;, &#39;group description&#39;)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Leave group&#xA;await client.leaveGroup(&#39;00000000-000000@g.us&#39;);&#xA;&#xA;// Get group members&#xA;await client.getGroupMembers(&#39;00000000-000000@g.us&#39;);&#xA;&#xA;// Get group members ids&#xA;await client.getGroupMembersIds(&#39;00000000-000000@g.us&#39;);&#xA;&#xA;// Generate group invite url link&#xA;await client.getGroupInviteLink(&#39;00000000-000000@g.us&#39;);&#xA;&#xA;// Create group (title, participants to add)&#xA;await client.createGroup(&#39;Group name&#39;, [&#xA;  &#39;111111111111@c.us&#39;,&#xA;  &#39;222222222222@c.us&#39;&#xA;]);&#xA;&#xA;// Remove participant&#xA;await client.removeParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);&#xA;&#xA;// Add participant&#xA;await client.addParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);&#xA;&#xA;// Promote participant (Give admin privileges)&#xA;await client.promoteParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);&#xA;&#xA;// Demote particiapnt (Revoke admin privileges)&#xA;await client.demoteParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);&#xA;&#xA;// Get group admins&#xA;await client.getGroupAdmins(&#39;00000000-000000@g.us&#39;);&#xA;&#xA;// Return the group status, jid, description from it&#39;s invite link&#xA;await client.getGroupInfoFromInviteLink(InviteCode);&#xA;&#xA;// Join a group using the group invite code&#xA;await client.joinGroup(InviteCode);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Profile Functions&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Set client status&#xA;await client.setProfileStatus(&#39;On vacations! ✈️&#39;);&#xA;&#xA;// Set client profile name&#xA;await client.setProfileName(&#39;Venom bot&#39;);&#xA;&#xA;// Set client profile photo&#xA;await client.setProfilePic(&#39;path/to/image.jpg&#39;);&#xA;&#xA;// Get device info&#xA;await client.getHostDevice();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Device Functions&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Disconnect from service&#xA;await client.logout();&#xA;&#xA;// Delete the Service Worker&#xA;await client.killServiceWorker();&#xA;&#xA;// Load the service again&#xA;await client.restartService();&#xA;&#xA;// Get connection state&#xA;await client.getConnectionState();&#xA;&#xA;// Get battery level&#xA;await client.getBatteryLevel();&#xA;&#xA;// Is connected&#xA;await client.isConnected();&#xA;&#xA;// Get whatsapp web version&#xA;await client.getWAVersion();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Events&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#xA;//Listens to all new messages&#xA;//To receiver or recipient&#xA;client.onAnyMessage(message =&amp;gt; {&#xA;  ...&#xA;};&#xA;&#xA;// Listen to messages&#xA;client.onMessage(message =&amp;gt; {&#xA;  ...&#xA;})&#xA;&#xA;// Listen to state changes&#xA;client.onStateChange(state =&amp;gt; {&#xA;  ...&#xA;});&#xA;&#xA;// Listen to ack&#39;s&#xA;// See the status of the message when sent.&#xA;// When receiving the confirmation object, &#34;ack&#34; may return a number, look {@link AckType} for details:&#xA;// -7 = MD_DOWNGRADE,&#xA;// -6 = INACTIVE,&#xA;// -5 = CONTENT_UNUPLOADABLE,&#xA;// -4 = CONTENT_TOO_BIG,&#xA;// -3 = CONTENT_GONE,&#xA;// -2 = EXPIRED,&#xA;// -1 = FAILED,&#xA;//  0 = CLOCK,&#xA;//  1 = SENT,&#xA;//  2 = RECEIVED,&#xA;//  3 = READ,&#xA;//  4 = PLAYED =&#xA;&#xA;client.onAck(ack =&amp;gt; {&#xA;  ...&#xA;});&#xA;&#xA;// Listen to live location&#xA;// chatId: &#39;phone@c.us&#39;&#xA;client.onLiveLocation(&#34;000000000000@c.us&#34;, (liveLocation) =&amp;gt; {&#xA;  ...&#xA;});&#xA;&#xA;// chatId looks like this: &#39;5518156745634-1516512045@g.us&#39;&#xA;// Event interface is in here: https://github.com/s2click/venom/blob/master/src/api/model/participant-event.ts&#xA;client.onParticipantsChanged(&#34;000000000000@c.us&#34;, (event) =&amp;gt; {&#xA;  ...&#xA;});&#xA;&#xA;// Listen when client has been added to a group&#xA;client.onAddedToGroup(chatEvent =&amp;gt; {&#xA;  ...&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Other&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//Check if there is chat&#xA;await client&#xA;  .checkChat(chatId)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Pin chat and Unpin chat messages with true or false&#xA;// Pin chat, non-existent (optional)&#xA;await client&#xA;  .pinChat(chatId, true, false)&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;///mute a contact&#xA;await client&#xA;  .sendMute(&#xA;    &#39;000000000000@c.us&#39;, //contact mute&#xA;    30, //duration of silence, example: 30 minutes&#xA;    &#39;minutes&#39; ///kind of silence &#34;hours&#34; &#34;minutes&#34; &#34;year&#34;&#xA;  )&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;///unmute contact&#xA;await client&#xA;  .sendMute(&#xA;    &#39;000000000000@c.us&#39; //contact unmute&#xA;  )&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Change the theme&#xA;// string types &#34;dark&#34; or &#34;light&#34;&#xA;await client.setTheme(&#39;dark&#39;);&#xA;&#xA;// Receive the current theme&#xA;// returns string light or dark&#xA;await client.getTheme();&#xA;&#xA;// Delete chat&#xA;await client.deleteChat(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Clear chat messages&#xA;await client.clearChatMessages(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Archive and unarchive chat messages with true or false&#xA;await client.archiveChat(chatId, true);&#xA;&#xA;// Delete message (last parameter: delete only locally)&#xA;await client&#xA;  .deleteMessage(&#39;000000000000@c.us&#39;, [&#xA;    &#39;false_000000000000@c.us_B70847EE89E22D20FB86ECA0C1B11609&#39;,&#xA;    &#39;false_000000000000@c.us_B70847EE89E22D20FB86ECA0C1B11777&#39;&#xA;  ])&#xA;  .then((result) =&amp;gt; {&#xA;    console.log(&#39;Result: &#39;, result); //return object success&#xA;  })&#xA;  .catch((erro) =&amp;gt; {&#xA;    console.error(&#39;Error when sending: &#39;, erro); //return object error&#xA;  });&#xA;&#xA;// Mark chat as not seen (returns true if it works)&#xA;await client.markUnseenMessage(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Blocks a user (returns true if it works)&#xA;await client.blockContact(&#39;000000000000@c.us&#39;);&#xA;&#xA;// Unlocks contacts (returns true if it works)&#xA;await client.unblockContact(&#39;000000000000@c.us&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Misc&lt;/h2&gt; &#xA;&lt;p&gt;There are some tricks for a better usage of venom.&lt;/p&gt; &#xA;&lt;h4&gt;Keep session alive:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// function to detect conflits and change status&#xA;// Force it to keep the current session&#xA;// Possible state values:&#xA;// CONFLICT&#xA;// CONNECTED&#xA;// DEPRECATED_VERSION&#xA;// OPENING&#xA;// PAIRING&#xA;// PROXYBLOCK&#xA;// SMB_TOS_BLOCK&#xA;// TIMEOUT&#xA;// TOS_BLOCK&#xA;// UNLAUNCHED&#xA;// UNPAIRED&#xA;// UNPAIRED_IDLE&#xA;client.onStateChange((state) =&amp;gt; {&#xA;  console.log(&#39;State changed: &#39;, state);&#xA;  // force whatsapp take over&#xA;  if (&#39;CONFLICT&#39;.includes(state)) client.useHere();&#xA;  // detect disconnect on whatsapp&#xA;  if (&#39;UNPAIRED&#39;.includes(state)) console.log(&#39;logout&#39;);&#xA;});&#xA;&#xA;// DISCONNECTED&#xA;// SYNCING&#xA;// RESUMING&#xA;// CONNECTED&#xA;let time = 0;&#xA;client.onStreamChange((state) =&amp;gt; {&#xA;  console.log(&#39;State Connection Stream: &#39; + state);&#xA;  clearTimeout(time);&#xA;  if (state === &#39;DISCONNECTED&#39; || state === &#39;SYNCING&#39;) {&#xA;    time = setTimeout(() =&amp;gt; {&#xA;      client.close();&#xA;    }, 80000);&#xA;  }&#xA;});&#xA;&#xA;// function to detect incoming call&#xA;client.onIncomingCall(async (call) =&amp;gt; {&#xA;  console.log(call);&#xA;  client.sendText(call.peerJid, &#34;Sorry, I still can&#39;t answer calls&#34;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Closing (saving) sessions&lt;/h4&gt; &#xA;&lt;p&gt;Close the session properly to ensure the session is saved for the next time you log in (So it won&#39;t ask for QR scan again). So instead of CTRL+C,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Catch ctrl+C&#xA;process.on(&#39;SIGINT&#39;, function() {&#xA;  client.close();&#xA;});&#xA;&#xA;// Try-catch close&#xA;try {&#xA;   ...&#xA;} catch (error) {&#xA;   client.close();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Auto closing unsynced sessions&lt;/h3&gt; &#xA;&lt;p&gt;The auto close is enabled by default and the timeout is set to 60 sec. Receives the time in milliseconds to countdown until paired.&lt;/p&gt; &#xA;&lt;p&gt;Use &#34;autoClose: 0 | false&#34; to disable auto closing.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging&lt;/h3&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Building venom is really simple altough it contains 3 main projects inside&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Wapi project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; npm run build:wapi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Middleware&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; npm run build:middleware&#xA;&amp;gt; npm run build:jsQR&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Venom&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; npm run build:venom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build the entire project just run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;Maintainers are needed, I cannot keep with all the updates by myself. If you are interested please open a Pull Request.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lllyasviel/style2paints</title>
    <updated>2023-08-20T01:49:25Z</updated>
    <id>tag:github.com,2023-08-20:/lllyasviel/style2paints</id>
    <link href="https://github.com/lllyasviel/style2paints" rel="alternate"></link>
    <summary type="html">&lt;p&gt;sketch + style = paints 🎨 (TOG2018/SIGGRAPH2018ASIA)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;News&lt;/h1&gt; &#xA;&lt;p&gt;See also the &lt;a href=&#34;https://github.com/lllyasviel/style2paints/tree/master/V5_preview&#34;&gt;Preview of Style2Paints V5&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note that below are previous versions of style2paints. If you come from an introduction of V5 and are interested in V5, you do not need to download the V4 or V4.5. Note that V5 is still in preview and we have not released it yet.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Download Style2Paints V4.5&lt;/h1&gt; &#xA;&lt;p&gt;You can directly download the software (windows x64) at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Again, this is style2paints V4.5, NOT style2paints V5!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Google Drive:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://drive.google.com/open?id=1gmg2wwNIp4qMzxqP12SbcmVAHsLt1iRE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Baidu Drive (百度网盘):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://pan.baidu.com/s/15xCm1jRVeHipHkiB3n1vzA&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You do &lt;strong&gt;NOT&lt;/strong&gt; need to install any complex things like CUDA and python. You can directly download it and then double click it, as if you were playing a normal video game.&lt;/p&gt; &#xA;&lt;p&gt;Never hesitate to let me know if you have any suggestions or ideas. You may directly send emails to my private address [&lt;a href=&#34;mailto:lvminzhang@acm.org&#34;&gt;lvminzhang@acm.org&lt;/a&gt;] or [&lt;a href=&#34;mailto:lvminzhang@siggraph.org&#34;&gt;lvminzhang@siggraph.org&lt;/a&gt;].&lt;/p&gt; &#xA;&lt;h1&gt;Welcome to style2paints V4!&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/imgs/pages/logo.jpg&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Style2paints V4 is an AI driven lineart colorization tool.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lllyasviel/style2paints&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/repo-size/lllyasviel/style2paints.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lllyasviel/style2paints&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/lllyasviel/style2paints.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lllyasviel/style2paints/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/lllyasviel/style2paints.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lllyasviel/style2paints/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/lllyasviel/style2paints.svg?label=Stars&amp;amp;style=social&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/lvminzhang&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/lvminzhang.svg?label=Follow&amp;amp;style=social&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Different from previous end-to-end image-to-image translation methods, style2paints V4 is the &lt;strong&gt;first&lt;/strong&gt; system to colorize a lineart &lt;strong&gt;in real-life human workflow&lt;/strong&gt;, and the outputs are &lt;strong&gt;layered&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Inputs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;● Linearts&#xA;● (with or without) Human hints&#xA;● (with or without) Color style reference images&#xA;● (with or without) Light location and color&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Outputs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;● Automatic color flattening without lines (solid/flat/inherent/固有色/底色 color layer)&#xA;● Automatic color flattening with black lines&#xA;● Automatic colorization without lines&#xA;● Automatic colorization with black lines&#xA;● Automatic colorization with colored lines&#xA;● Automatic rendering (separated layer)&#xA;● Automatic rendered colorization&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Style2paints V4 gives you results of the current highest quality. You are able to get separated layers from our system. These layers can be directly used in your painting workflow. Different from all previous AI driven colorization tools, our results are not single &#39;JPG/PNG&#39; images, and in fact, our results are &#39;PSD&#39; layers.&lt;/p&gt; &#xA;&lt;p&gt;User Instruction: &lt;a href=&#34;https://style2paints.github.io/&#34;&gt;https://style2paints.github.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;And we also have an official &lt;a href=&#34;https://twitter.com/lvminzhang&#34;&gt;Twitter&lt;/a&gt; account.&lt;/p&gt; &#xA;&lt;h1&gt;Help human in their standard coloring workflow!&lt;/h1&gt; &#xA;&lt;p&gt;Most human artists are familiar with this workflow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sketching -&amp;gt; color filling/flattening -&amp;gt; gradients/details adding -&amp;gt; shading&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And the corresponding layers are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;lineart layers + flat color layers + gradient layers + shading layers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Style2paints V4 is designed for this standard coloring workflow! In style2paints V4, you can automatically get separated results from each step!&lt;/p&gt; &#xA;&lt;h1&gt;Examples&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/pip.jpg&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here we present some results in this ABCD format. Users only need to upload their sketch, select a style, and put a light source.&lt;/p&gt; &#xA;&lt;p&gt;When the result is achieved immediately without any human color correction, we regard this result as &lt;strong&gt;fully automatic result&lt;/strong&gt;. When the result needs some color correction, human can easily put some color hints on the canvas to guide the AI coloring process. In this case, we regard these results as &lt;strong&gt;semi-automatic results&lt;/strong&gt;. If a result is semi-automatic, but the quantity of human color hint points is smaller than 10, we regard these results as &lt;strong&gt;almost automatic result&lt;/strong&gt;. In this section, about half of the presented results are &lt;strong&gt;fully automatic result&lt;/strong&gt;, and the others are all &lt;strong&gt;almost automatic result&lt;/strong&gt;. Do notice that all the below results can be achieved with less than 15 clicks!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/5.jpg&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/1.jpg&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Real-life results&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/a.png&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/b.png&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/1.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/2.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/3.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/4.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/5.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/6.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/7.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/8.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/9.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/10.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/11.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/12.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/13.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/14.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/15.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/16.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/17.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/18.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/19.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/20.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/21.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/22.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/23.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/24.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/25.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/26.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/27.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/28.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/29.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/30.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/31.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/32.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/33.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/34.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/35.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/36.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/37.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/38.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/39.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/40.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/41.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/42.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/43.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/44.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/45.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/46.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/47.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/48.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/49.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/50.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/51.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/52.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/53.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/54.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/55.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/56.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/57.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/58.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/59.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/60.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/61.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/62.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/63.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/64.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/65.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/66.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/67.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/68.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/69.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/70.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/71.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/72.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/73.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/74.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/75.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/76.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/77.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/78.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/79.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/80.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/81.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/82.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/83.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/84.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/85.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/86.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/87.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/88.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/89.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/90.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/91.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/92.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/93.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/94.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/95.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/96.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/97.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/98.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/99.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/100.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/101.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/102.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/103.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/104.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/105.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/106.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/107.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/108.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/109.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/110.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/111.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/112.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/113.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/114.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/115.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/116.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/117.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/118.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/119.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/120.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/121.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/122.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/123.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/124.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/125.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/126.jpg&#34; alt=&#34;logo&#34;&gt; &lt;img src=&#34;https://github.com/lllyasviel/style2paints/raw/master/temps/show/t/127.jpg&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Know more about us!&lt;/h1&gt; &#xA;&lt;p&gt;User Instruction: &lt;a href=&#34;https://style2paints.github.io/&#34;&gt;https://style2paints.github.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;And we also have an official &lt;a href=&#34;https://twitter.com/IlIIlIIIllIllII&#34;&gt;Twitter&lt;/a&gt; account.&lt;/p&gt; &#xA;&lt;h1&gt;Acknowledgement&lt;/h1&gt; &#xA;&lt;p&gt;Thanks a lot to TaiZan. This project could not be achieved without his great help.&lt;/p&gt; &#xA;&lt;h1&gt;Lisence&lt;/h1&gt; &#xA;&lt;p&gt;All codes are released in Apache-2.0 License.&lt;/p&gt; &#xA;&lt;p&gt;We preserve all rights on all pretrained deep learning models and binary releases.&lt;/p&gt; &#xA;&lt;p&gt;Your colorized images are yours, and we do not add any extra lisences to colorized results. Use your colorized images in any commercial or non-commercial cases.&lt;/p&gt; &#xA;&lt;h1&gt;中文社区&lt;/h1&gt; &#xA;&lt;p&gt;我们有一个除了技术什么东西都聊的以技术交流为主的群。如果你一次加群失败，可以多次尝试: 816096787。&lt;/p&gt; &#xA;&lt;h1&gt;Previous Publications&lt;/h1&gt; &#xA;&lt;h2&gt;Style2paints V1:&lt;/h2&gt; &#xA;&lt;p&gt;ACPR 2017:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@Article{ACPR2017ZLM,&#xA;  author  = {LvMin Zhang, Yi Ji and ChunPing Liu},&#xA;  title   = {Style Transfer for Anime Sketches with Enhanced Residual U-net and Auxiliary Classifier GAN},&#xA;  conference = {Asian Conference on Pattern Recognition (ACPR)},&#xA;  year    = {2017},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/1706.03319&#34;&gt;paper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Style2paints V2:&lt;/h2&gt; &#xA;&lt;p&gt;No Publications.&lt;/p&gt; &#xA;&lt;h2&gt;Style2paints V3:&lt;/h2&gt; &#xA;&lt;p&gt;TOG 2018:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@Article{ACMTOGTSC2018,&#xA;  author  = {LvMin Zhang, Chengze Li, Tien-Tsin Wong, Yi Ji and ChunPing Liu},&#xA;  title   = {Two-stage Sketch Colorization},&#xA;  journal = {ACM Transactions on Graphics},&#xA;  year    = {2018},&#xA;  volume  = {37},&#xA;  number  = {6},&#xA;  month   = nov,&#xA;  doi     = {https://doi.org/10.1145/3272127.3275090},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lllyasviel/style2paints/raw/master/papers/sa.pdf&#34;&gt;paper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Style2paints V4:&lt;/h2&gt; &#xA;&lt;p&gt;No Publications.&lt;/p&gt; &#xA;&lt;h2&gt;Style2paints V5 (Project SEPA, not released yet):&lt;/h2&gt; &#xA;&lt;p&gt;CVPR2021&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@InProceedings{Filling2021zhang,&#xA;  author={Lvmin Zhang and Chengze Li and Edgar Simo-Serra and Yi Ji and Tien-Tsin Wong and Chunping Liu}, &#xA;  booktitle={IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)}, &#xA;  title={User-Guided Line Art Flat Filling with Split Filling Mechanism}, &#xA;  year={2021}, &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>