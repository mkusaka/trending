<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-08T01:41:36Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wanglin2/mind-map</title>
    <updated>2024-09-08T01:41:36Z</updated>
    <id>tag:github.com,2024-09-08:/wanglin2/mind-map</id>
    <link href="https://github.com/wanglin2/mind-map" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个还算强大的Web思维导图。A relatively powerful web mind map.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Simple mind map&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/simple-mind-map&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/simple-mind-map&#34; alt=&#34;npm-version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/simple-mind-map&#34; alt=&#34;npm download&#34;&gt; &lt;a href=&#34;https://github.com/wanglin2/mind-map/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/wanglin2/mind-map&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/npm/l/express.svg?sanitize=true&#34; alt=&#34;license&#34;&gt; &lt;a href=&#34;https://github.com/wanglin2/mind-map/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/wanglin2/mind-map&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wanglin2/mind-map/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/wanglin2/mind-map&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;中文名：思绪思维导图。一个简单&amp;amp;强大的 Web 思维导图。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;本项目包含两部分：&lt;/p&gt; &#xA;&lt;p&gt;1.一个 js 思维导图库，不依赖任何框架，可以使用它来快速完成 Web 思维导图产品的开发。&lt;/p&gt; &#xA;&lt;p&gt;开发文档：&lt;a href=&#34;https://wanglin2.github.io/mind-map-docs/&#34;&gt;https://wanglin2.github.io/mind-map-docs/&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;2.一个 Web 思维导图，基于思维导图库、Vue2.x、ElementUI 开发，可以操作电脑本地文件，可以当做一个在线版思维导图应用使用，也可以自部署和二次开发。&lt;/p&gt; &#xA;&lt;p&gt;在线地址：&lt;a href=&#34;https://wanglin2.github.io/mind-map/&#34;&gt;https://wanglin2.github.io/mind-map/&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;此外也提供了客户端可供下载使用，支持&lt;code&gt;Windows&lt;/code&gt;、&lt;code&gt;Mac&lt;/code&gt;及&lt;code&gt;Linux&lt;/code&gt;，下载地址：&lt;/p&gt; &#xA;&lt;p&gt;Github：&lt;a href=&#34;https://github.com/wanglin2/mind-map/releases&#34;&gt;releases&lt;/a&gt;。百度云盘：&lt;a href=&#34;https://pan.baidu.com/s/1huasEbKsGNH2Af68dvWiOg?pwd=3bp3&#34;&gt;地址&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;客户端版本会落后于在线版本，尝试最新功能请优先使用在线版。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;【云存储版本】如果你需要带后端的云存储版本，可以尝试我们开发的另一个项目&lt;a href=&#34;https://github.com/wanglin2/lx-doc&#34;&gt;理想文档&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;特性&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 插件化架构，除核心功能外，其他功能作为插件提供，按需使用，减小打包体积&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持逻辑结构图（向左、向右逻辑结构图）、思维导图、组织结构图、目录组织图、时间轴（横向、竖向）、鱼骨图等结构&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 内置多种主题，允许高度自定义样式，支持注册新主题&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 节点内容支持文本（普通文本、富文本）、图片、图标、超链接、备注、标签、概要、数学公式&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 节点支持拖拽（拖拽移动、自由调整）、多种节点形状；支持扩展节点内容、支持使用 DDM 完全自定义节点内容&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持画布拖动、缩放&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持鼠标按键拖动选择和 Ctrl+左键两种多选节点方式&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持导出为&lt;code&gt;json&lt;/code&gt;、&lt;code&gt;png&lt;/code&gt;、&lt;code&gt;svg&lt;/code&gt;、&lt;code&gt;pdf&lt;/code&gt;、&lt;code&gt;markdown&lt;/code&gt;、&lt;code&gt;xmind&lt;/code&gt;、&lt;code&gt;txt&lt;/code&gt;，支持从&lt;code&gt;json&lt;/code&gt;、&lt;code&gt;xmind&lt;/code&gt;、&lt;code&gt;markdown&lt;/code&gt;导入&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持快捷键、前进后退、关联线、搜索替换、小地图、水印、滚动条、手绘风格、彩虹线条、标记、外框&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 提供丰富的配置，满足各种场景各种使用习惯&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持协同编辑&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持演示模式&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;官方提供了如下插件，可根据需求按需引入（某个功能不生效大概率是因为你没有引入对应的插件），具体使用方式请查看文档：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;RichText（节点富文本插件）、Select（鼠标多选节点插件）、Drag（节点拖拽插件）、AssociativeLine（关联线插件）、Export（导出插件）、KeyboardNavigation（键盘导航插件）、MiniMap（小地图插件）、Watermark（水印插件）、TouchEvent（移动端触摸事件支持插件）、NodeImgAdjust（拖拽调整节点图片大小插件）、Search（搜索插件）、Painter（节点格式刷插件）、Scrollbar（滚动条插件）、Formula（数学公式插件）、Cooperate（协同编辑插件）、RainbowLines（彩虹线条插件）、Demonstrate（演示模式插件）、OuterFrame（外框插件）、HandDrawnLikeStyle（手绘风格插件）[收费]、Notation（节点标记插件）[收费]、Numbers（节点编号插件）[收费]&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;本项目不会实现的特性：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;1.自由节点，即多个根节点；&lt;/p&gt; &#xA; &lt;p&gt;2.概要节点后面继续添加节点；&lt;/p&gt; &#xA; &lt;p&gt;如果你需要以上特性，那么本库可能无法满足你的需求。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;安装&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i simple-mind-map&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;使用&lt;/h1&gt; &#xA;&lt;p&gt;提供一个宽高不为 0 的容器元素：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div id=&#34;mindMapContainer&#34;&amp;gt;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;另外再设置一下&lt;code&gt;css&lt;/code&gt;样式：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;#mindMapContainer * {&#xA;  margin: 0;&#xA;  padding: 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后创建一个实例：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import MindMap from &#34;simple-mind-map&#34;;&#xA;&#xA;const mindMap = new MindMap({&#xA;  el: document.getElementById(&#34;mindMapContainer&#34;),&#xA;  data: {&#xA;    data: {&#xA;      text: &#34;根节点&#34;,&#xA;    },&#xA;    children: [],&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;即可得到一个思维导图。&lt;/p&gt; &#xA;&lt;p&gt;想要实现更多功能？可以查看&lt;a href=&#34;https://wanglin2.github.io/mind-map-docs/&#34;&gt;开发文档&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/LICENSE&#34;&gt;MIT&lt;/a&gt;。保留&lt;code&gt;mind-map&lt;/code&gt;版权声明的情况下可随意商用。如不想保留可联系作者。&lt;/p&gt; &#xA;&lt;h1&gt;微信交流群&lt;/h1&gt; &#xA;&lt;p&gt;一群已满，可以扫描如下二维码进入二群，如已过期，可以微信添加&lt;code&gt;wanglinguanfang&lt;/code&gt;拉你入群。思维导图相关问题皆可在群里提问，不必私聊作者。&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/qrcode.jpg&#34; style=&#34;width: 300px&#34;&gt; &#xA;&lt;h1&gt;star&lt;/h1&gt; &#xA;&lt;p&gt;如果喜欢本项目，欢迎点个 star，这对我们很重要。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#wanglin2/mind-map&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=wanglin2/mind-map&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;关于定制&lt;/h1&gt; &#xA;&lt;p&gt;如果你有个性化的商用定制需求，可以联系我们，我们提供付费开发服务，无论前端、后端、还是部署，都可以帮你一站式搞定。&lt;/p&gt; &#xA;&lt;h1&gt;请作者喝杯咖啡&lt;/h1&gt; &#xA;&lt;p&gt;开源不易，如果本项目有帮助到你的话，可以考虑请作者喝杯咖啡，你的支持是开发者持续维护的最大动力~&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;推荐使用支付宝，微信获取不到头像。转账请备注【思维导图】。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/img/alipay.jpg&#34; style=&#34;width: 300px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/img/wechat.jpg&#34; style=&#34;width: 300px&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/Think.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;Think&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%BF%97%E6%96%8C.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;志斌&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%B0%8F%E5%9C%9F%E6%B8%A3%E7%9A%84%E5%AE%87%E5%AE%99.jpeg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;小土渣的宇宙&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/qp.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;qp&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/ZXR.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;ZXR&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E8%8A%B1%E5%84%BF%E6%9C%B5%E6%9C%B5.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;花儿朵朵&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/suka.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;suka&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/Chris.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;Chris&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%B0%B4%E8%BD%A6.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;水车&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E4%BB%93%E9%BC%A0.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;仓鼠&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%8D%83%E5%B8%86.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;千帆&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%89%8D%E9%95%87.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;才镇&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%B0%8F%E7%B1%B3.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;小米bbᯤ²ᴳ&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%A3%90.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;*棐&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;Luke&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%B8%83%E6%9E%97.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;布林&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%8D%97%E9%A3%8E.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;南风&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E8%9C%89%E8%9D%A3%E6%92%BC%E5%A4%A7%E5%8F%94.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;蜉蝣撼大叔&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E4%B9%99.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;乙&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%95%8F.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;敏&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%B2%90%E9%A3%8E%E7%89%A7%E8%8D%89.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;沐风牧草&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%9C%89%E5%B8%8C.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;有希&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%A8%8A%E7%AC%BC.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;樊笼&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E8%BE%BE%E4%BB%81%E7%A7%91%E6%8A%80.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;达仁科技&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%B0%8F%E9%80%97%E6%AF%94.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;小逗比&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%A4%A9%E6%B8%85%E5%A6%82%E6%84%BF.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;天清如愿&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%95%AC%E6%98%8E%E6%9C%97.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;敬明朗&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;飞箭&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%88%9A%E6%B0%B8%E5%B3%B0.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;戚永峰&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/moom.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;moom&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%BC%A0%E6%89%AC.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;张扬&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E9%95%BF%E6%B2%99%E5%88%A9%E5%A5%A5%E8%BD%AF%E4%BB%B6.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;长沙利奥软件&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/HaHN.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;HaHN&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E7%BB%A7%E9%BE%99.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;继龙&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%AC%A3.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;欣&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;易空小易&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%9B%BD%E5%8F%91.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;国发&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;建明&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%B1%AA%E6%B4%A5%E5%90%88.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;汪津合&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;博文&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%85%95%E6%99%BA%E6%89%93%E5%8D%B0-%E5%85%B0%E5%85%B0.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;慕智打印-兰兰&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;锦冰&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%97%AD%E4%B8%9C.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;旭东&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E4%BF%8A%E5%A5%87.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;俊奇&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%A9%98%E5%8D%8A.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;橘半&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/pluvet.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;pluvet&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E7%9A%87%E7%99%BB%E6%94%80.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;皇登攀&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E9%A3%8E%E6%A0%BC.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;风格&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;SR&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E9%80%86%E6%B0%B4%E8%A1%8C%E8%88%9F.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;逆水行舟&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;LiuJL&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/L.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;L&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;sunniberg&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%9C%A8%E4%B8%8B%E9%9D%92%E9%93%9C%E4%BA%94.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;在下青铜五&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%9C%A8%E6%98%9F%E4%BA%8C%E5%8F%B7.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;木星二号&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E9%98%BF%E6%99%A8.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;阿晨&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;铁&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%BA%86%E5%9B%BD.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;庆国&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/Alex.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;Alex&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%AD%90%E8%B1%AA.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;子豪&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%AE%8F%E6%B6%9B.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;宏涛&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%9C%80%E5%A4%9A5%E4%B8%AA%E5%AD%97.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;最多5个字&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E9%9B%A8%E9%A6%A8.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;雨馨&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/ZX.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;ZX&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%B3%B0.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;峰&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;协成&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%9C%A8%E6%9C%A8.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;木木&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%A5%BD%E5%90%8D%E5%AD%97.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;好名字&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/Kyle.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;Kyle&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/lsytyrt.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;lsytyrt&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E7%A7%80%E6%A0%91%E5%9B%A0%E9%A6%A8%E9%9B%A8.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;秀树因馨雨&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/buddy.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;buddy&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;小川&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/Tobin.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;Tobin&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%A4%8F%E8%99%AB%E4%B8%8D%E8%AF%AD%E5%86%B0.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;夏虫不语冰&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E6%99%B4%E7%A9%BA.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;晴空&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/default.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;黄泳&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/ccccs.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;ccccs&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E3%80%82.png&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;。&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/Jeffrey.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;Jeffrey&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E5%BC%A0%E6%96%87%E5%BB%BA.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;张文建&lt;/span&gt; &lt;/span&gt; &lt;span&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wanglin2/mind-map/main/web/src/assets/avatar/%E7%82%AB.jpg&#34; style=&#34;width: 50px;height: 50px;&#34;&gt; &lt;span&gt;炫&lt;/span&gt; &lt;/span&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nodejs/undici</title>
    <updated>2024-09-08T01:41:36Z</updated>
    <id>tag:github.com,2024-09-08:/nodejs/undici</id>
    <link href="https://github.com/nodejs/undici" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An HTTP/1.1 client, written from scratch for Node.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;undici&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nodejs/undici/actions/workflows/nodejs.yml&#34;&gt;&lt;img src=&#34;https://github.com/nodejs/undici/actions/workflows/nodejs.yml/badge.svg?sanitize=true&#34; alt=&#34;Node CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/neostandard/neostandard&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/neo-standard-7fffff?style=flat&amp;amp;labelColor=ff80ff&#34; alt=&#34;neostandard javascript style&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/js/undici&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/undici.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/nodejs/undici&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/nodejs/undici/branch/main/graph/badge.svg?token=yZL6LtXkOA&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An HTTP/1.1 client, written from scratch for Node.js.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Undici means eleven in Italian. 1.1 -&amp;gt; 11 -&amp;gt; Eleven -&amp;gt; Undici. It is also a Stranger Things reference.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;How to get involved&lt;/h2&gt; &#xA;&lt;p&gt;Have a question about using Undici? Open a &lt;a href=&#34;https://github.com/nodejs/undici/discussions/new&#34;&gt;Q&amp;amp;A Discussion&lt;/a&gt; or join our official OpenJS &lt;a href=&#34;https://openjs-foundation.slack.com/archives/C01QF9Q31QD&#34;&gt;Slack&lt;/a&gt; channel.&lt;/p&gt; &#xA;&lt;p&gt;Looking to contribute? Start by reading the &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm i undici&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;The benchmark is a simple getting data &lt;a href=&#34;https://github.com/nodejs/undici/raw/main/benchmarks/benchmark.js&#34;&gt;example&lt;/a&gt; using a 50 TCP connections with a pipelining depth of 10 running on Node 20.10.0.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;em&gt;Tests&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;em&gt;Samples&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;em&gt;Result&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;em&gt;Tolerance&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;em&gt;Difference with slowest&lt;/em&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;undici - fetch&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3704.43 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.95 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;http - no keepalive&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4275.30 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.60 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 15.41 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;node-fetch&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4759.42 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 0.87 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 28.48 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;request&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;40&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4803.37 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.77 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 29.67 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;axios&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;45&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4951.97 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.88 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 33.68 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;got&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5969.67 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.64 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 61.15 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;superagent&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9471.48 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 1.50 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 155.68 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;http - keepalive&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10327.49 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.95 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 178.79 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;undici - pipeline&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15053.41 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 1.63 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 306.36 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;undici - request&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19264.24 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 1.74 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 420.03 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;undici - stream&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20317.29 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.13 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 448.46 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;undici - dispatch&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24883.28 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 1.54 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 571.72 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The benchmark is a simple sending data &lt;a href=&#34;https://github.com/nodejs/undici/raw/main/benchmarks/post-benchmark.js&#34;&gt;example&lt;/a&gt; using a 50 TCP connections with a pipelining depth of 10 running on Node 20.10.0.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;em&gt;Tests&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;em&gt;Samples&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;em&gt;Result&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;em&gt;Tolerance&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;em&gt;Difference with slowest&lt;/em&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;undici - fetch&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1968.42 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.63 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;http - no keepalive&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2330.30 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.99 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 18.38 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;node-fetch&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2485.36 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.70 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 26.26 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;got&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2787.68 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.56 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 41.62 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;request&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2805.10 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.59 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 42.50 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;axios&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3040.45 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 1.72 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 54.46 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;superagent&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3358.29 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.51 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 70.61 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;http - keepalive&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3477.94 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.51 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 76.69 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;undici - pipeline&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3812.61 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 2.80 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 93.69 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;undici - request&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6067.00 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 0.94 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 208.22 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;undici - stream&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6391.61 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 1.98 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 224.71 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;undici - dispatch&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6397.00 req/sec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;± 1.48 %&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;+ 224.98 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { request } from &#39;undici&#39;&#xA;&#xA;const {&#xA;  statusCode,&#xA;  headers,&#xA;  trailers,&#xA;  body&#xA;} = await request(&#39;http://localhost:3000/foo&#39;)&#xA;&#xA;console.log(&#39;response received&#39;, statusCode)&#xA;console.log(&#39;headers&#39;, headers)&#xA;&#xA;for await (const data of body) { console.log(&#39;data&#39;, data) }&#xA;&#xA;console.log(&#39;trailers&#39;, trailers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Body Mixins&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;body&lt;/code&gt; mixins are the most common way to format the request/response body. Mixins include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fetch.spec.whatwg.org/#dom-body-arraybuffer&#34;&gt;&lt;code&gt;.arrayBuffer()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fetch.spec.whatwg.org/#dom-body-blob&#34;&gt;&lt;code&gt;.blob()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fetch.spec.whatwg.org/#dom-body-bytes&#34;&gt;&lt;code&gt;.bytes()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fetch.spec.whatwg.org/#dom-body-json&#34;&gt;&lt;code&gt;.json()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fetch.spec.whatwg.org/#dom-body-text&#34;&gt;&lt;code&gt;.text()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] The body returned from &lt;code&gt;undici.request&lt;/code&gt; does not implement &lt;code&gt;.formData()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { request } from &#39;undici&#39;&#xA;&#xA;const {&#xA;  statusCode,&#xA;  headers,&#xA;  trailers,&#xA;  body&#xA;} = await request(&#39;http://localhost:3000/foo&#39;)&#xA;&#xA;console.log(&#39;response received&#39;, statusCode)&#xA;console.log(&#39;headers&#39;, headers)&#xA;console.log(&#39;data&#39;, await body.json())&#xA;console.log(&#39;trailers&#39;, trailers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Once a mixin has been called then the body cannot be reused, thus calling additional mixins on &lt;code&gt;.body&lt;/code&gt;, e.g. &lt;code&gt;.body.json(); .body.text()&lt;/code&gt; will result in an error &lt;code&gt;TypeError: unusable&lt;/code&gt; being thrown and returned through the &lt;code&gt;Promise&lt;/code&gt; rejection.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Should you need to access the &lt;code&gt;body&lt;/code&gt; in plain-text after using a mixin, the best practice is to use the &lt;code&gt;.text()&lt;/code&gt; mixin first and then manually parse the text to the desired format.&lt;/p&gt; &#xA;&lt;p&gt;For more information about their behavior, please reference the body mixin from the &lt;a href=&#34;https://fetch.spec.whatwg.org/#body-mixin&#34;&gt;Fetch Standard&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Common API Methods&lt;/h2&gt; &#xA;&lt;p&gt;This section documents our most commonly used API methods. Additional APIs are documented in their own files within the &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/docs/&#34;&gt;docs&lt;/a&gt; folder and are accessible via the navigation list on the left side of the docs site.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;undici.request([url, options]): Promise&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Arguments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; &lt;code&gt;string | URL | UrlObject&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/docs/docs/api/Dispatcher.md#parameter-requestoptions&#34;&gt;&lt;code&gt;RequestOptions&lt;/code&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;dispatcher&lt;/strong&gt; &lt;code&gt;Dispatcher&lt;/code&gt; - Default: &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/#undicigetglobaldispatcher&#34;&gt;getGlobalDispatcher&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;method&lt;/strong&gt; &lt;code&gt;String&lt;/code&gt; - Default: &lt;code&gt;PUT&lt;/code&gt; if &lt;code&gt;options.body&lt;/code&gt;, otherwise &lt;code&gt;GET&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Returns a promise with the result of the &lt;code&gt;Dispatcher.request&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;p&gt;Calls &lt;code&gt;options.dispatcher.request(options)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/docs/docs/api/Dispatcher.md#dispatcherrequestoptions-callback&#34;&gt;Dispatcher.request&lt;/a&gt; for more details, and &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/examples/README.md&#34;&gt;request examples&lt;/a&gt; for examples.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;undici.stream([url, options, ]factory): Promise&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Arguments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; &lt;code&gt;string | URL | UrlObject&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/docs/docs/api/Dispatcher.md#parameter-streamoptions&#34;&gt;&lt;code&gt;StreamOptions&lt;/code&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;dispatcher&lt;/strong&gt; &lt;code&gt;Dispatcher&lt;/code&gt; - Default: &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/#undicigetglobaldispatcher&#34;&gt;getGlobalDispatcher&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;method&lt;/strong&gt; &lt;code&gt;String&lt;/code&gt; - Default: &lt;code&gt;PUT&lt;/code&gt; if &lt;code&gt;options.body&lt;/code&gt;, otherwise &lt;code&gt;GET&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;factory&lt;/strong&gt; &lt;code&gt;Dispatcher.stream.factory&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Returns a promise with the result of the &lt;code&gt;Dispatcher.stream&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;p&gt;Calls &lt;code&gt;options.dispatcher.stream(options, factory)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/docs/docs/api/Dispatcher.md#dispatcherstreamoptions-factory-callback&#34;&gt;Dispatcher.stream&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;undici.pipeline([url, options, ]handler): Duplex&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Arguments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; &lt;code&gt;string | URL | UrlObject&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/docs/docs/api/Dispatcher.md#parameter-pipelineoptions&#34;&gt;&lt;code&gt;PipelineOptions&lt;/code&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;dispatcher&lt;/strong&gt; &lt;code&gt;Dispatcher&lt;/code&gt; - Default: &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/#undicigetglobaldispatcher&#34;&gt;getGlobalDispatcher&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;method&lt;/strong&gt; &lt;code&gt;String&lt;/code&gt; - Default: &lt;code&gt;PUT&lt;/code&gt; if &lt;code&gt;options.body&lt;/code&gt;, otherwise &lt;code&gt;GET&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;handler&lt;/strong&gt; &lt;code&gt;Dispatcher.pipeline.handler&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Returns: &lt;code&gt;stream.Duplex&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Calls &lt;code&gt;options.dispatch.pipeline(options, handler)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/docs/docs/api/Dispatcher.md#dispatcherpipelineoptions-handler&#34;&gt;Dispatcher.pipeline&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;undici.connect([url, options]): Promise&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Starts two-way communications with the requested resource using &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/CONNECT&#34;&gt;HTTP CONNECT&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Arguments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; &lt;code&gt;string | URL | UrlObject&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/docs/docs/api/Dispatcher.md#parameter-connectoptions&#34;&gt;&lt;code&gt;ConnectOptions&lt;/code&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;dispatcher&lt;/strong&gt; &lt;code&gt;Dispatcher&lt;/code&gt; - Default: &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/#undicigetglobaldispatcher&#34;&gt;getGlobalDispatcher&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;callback&lt;/strong&gt; &lt;code&gt;(err: Error | null, data: ConnectData | null) =&amp;gt; void&lt;/code&gt; (optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Returns a promise with the result of the &lt;code&gt;Dispatcher.connect&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;p&gt;Calls &lt;code&gt;options.dispatch.connect(options)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/docs/docs/api/Dispatcher.md#dispatcherconnectoptions-callback&#34;&gt;Dispatcher.connect&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;undici.fetch(input[, init]): Promise&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Implements &lt;a href=&#34;https://fetch.spec.whatwg.org/#fetch-method&#34;&gt;fetch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fetch.spec.whatwg.org/#fetch-method&#34;&gt;https://fetch.spec.whatwg.org/#fetch-method&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Basic usage example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { fetch } from &#39;undici&#39;&#xA;&#xA;&#xA;const res = await fetch(&#39;https://example.com&#39;)&#xA;const json = await res.json()&#xA;console.log(json)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass an optional dispatcher to &lt;code&gt;fetch&lt;/code&gt; as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { fetch, Agent } from &#39;undici&#39;&#xA;&#xA;const res = await fetch(&#39;https://example.com&#39;, {&#xA;  // Mocks are also supported&#xA;  dispatcher: new Agent({&#xA;    keepAliveTimeout: 10,&#xA;    keepAliveMaxTimeout: 10&#xA;  })&#xA;})&#xA;const json = await res.json()&#xA;console.log(json)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;request.body&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A body can be of the following types:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ArrayBuffer&lt;/li&gt; &#xA; &lt;li&gt;ArrayBufferView&lt;/li&gt; &#xA; &lt;li&gt;AsyncIterables&lt;/li&gt; &#xA; &lt;li&gt;Blob&lt;/li&gt; &#xA; &lt;li&gt;Iterables&lt;/li&gt; &#xA; &lt;li&gt;String&lt;/li&gt; &#xA; &lt;li&gt;URLSearchParams&lt;/li&gt; &#xA; &lt;li&gt;FormData&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In this implementation of fetch, &lt;code&gt;request.body&lt;/code&gt; now accepts &lt;code&gt;Async Iterables&lt;/code&gt;. It is not present in the &lt;a href=&#34;https://fetch.spec.whatwg.org&#34;&gt;Fetch Standard.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { fetch } from &#39;undici&#39;&#xA;&#xA;const data = {&#xA;  async *[Symbol.asyncIterator]() {&#xA;    yield &#39;hello&#39;&#xA;    yield &#39;world&#39;&#xA;  },&#xA;}&#xA;&#xA;await fetch(&#39;https://example.com&#39;, { body: data, method: &#39;POST&#39;, duplex: &#39;half&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/FormData&#34;&gt;FormData&lt;/a&gt; besides text data and buffers can also utilize streams via &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Blob&#34;&gt;Blob&lt;/a&gt; objects:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { openAsBlob } from &#39;node:fs&#39;&#xA;&#xA;const file = await openAsBlob(&#39;./big.csv&#39;)&#xA;const body = new FormData()&#xA;body.set(&#39;file&#39;, file, &#39;big.csv&#39;)&#xA;&#xA;await fetch(&#39;http://example.com&#39;, { method: &#39;POST&#39;, body })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;request.duplex&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&#39;half&#39;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In this implementation of fetch, &lt;code&gt;request.duplex&lt;/code&gt; must be set if &lt;code&gt;request.body&lt;/code&gt; is &lt;code&gt;ReadableStream&lt;/code&gt; or &lt;code&gt;Async Iterables&lt;/code&gt;, however, even though the value must be set to &lt;code&gt;&#39;half&#39;&lt;/code&gt;, it is actually a &lt;em&gt;full&lt;/em&gt; duplex. For more detail refer to the &lt;a href=&#34;https://fetch.spec.whatwg.org/#dom-requestinit-duplex&#34;&gt;Fetch Standard.&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;response.body&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Nodejs has two kinds of streams: &lt;a href=&#34;https://nodejs.org/api/webstreams.html&#34;&gt;web streams&lt;/a&gt;, which follow the API of the WHATWG web standard found in browsers, and an older Node-specific &lt;a href=&#34;https://nodejs.org/api/stream.html&#34;&gt;streams API&lt;/a&gt;. &lt;code&gt;response.body&lt;/code&gt; returns a readable web stream. If you would prefer to work with a Node stream you can convert a web stream using &lt;code&gt;.fromWeb()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { fetch } from &#39;undici&#39;&#xA;import { Readable } from &#39;node:stream&#39;&#xA;&#xA;const response = await fetch(&#39;https://example.com&#39;)&#xA;const readableWebStream = response.body&#xA;const readableNodeStream = Readable.fromWeb(readableWebStream)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Specification Compliance&lt;/h4&gt; &#xA;&lt;p&gt;This section documents parts of the &lt;a href=&#34;https://fetch.spec.whatwg.org&#34;&gt;Fetch Standard&lt;/a&gt; that Undici does not support or does not fully implement.&lt;/p&gt; &#xA;&lt;h5&gt;Garbage Collection&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fetch.spec.whatwg.org/#garbage-collection&#34;&gt;https://fetch.spec.whatwg.org/#garbage-collection&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://fetch.spec.whatwg.org&#34;&gt;Fetch Standard&lt;/a&gt; allows users to skip consuming the response body by relying on &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management#garbage_collection&#34;&gt;garbage collection&lt;/a&gt; to release connection resources. Undici does not do the same. Therefore, it is important to always either consume or cancel the response body.&lt;/p&gt; &#xA;&lt;p&gt;Garbage collection in Node is less aggressive and deterministic (due to the lack of clear idle periods that browsers have through the rendering refresh rate) which means that leaving the release of connection resources to the garbage collector can lead to excessive connection usage, reduced performance (due to less connection re-use), and even stalls or deadlocks when running out of connections.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Do&#xA;const headers = await fetch(url)&#xA;  .then(async res =&amp;gt; {&#xA;    for await (const chunk of res.body) {&#xA;      // force consumption of body&#xA;    }&#xA;    return res.headers&#xA;  })&#xA;&#xA;// Do not&#xA;const headers = await fetch(url)&#xA;  .then(res =&amp;gt; res.headers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, if you want to get only headers, it might be better to use &lt;code&gt;HEAD&lt;/code&gt; request method. Usage of this method will obviate the need for consumption or cancelling of the response body. See &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD&#34;&gt;MDN - HTTP - HTTP request methods - HEAD&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const headers = await fetch(url, { method: &#39;HEAD&#39; })&#xA;  .then(res =&amp;gt; res.headers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Forbidden and Safelisted Header Names&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fetch.spec.whatwg.org/#cors-safelisted-response-header-name&#34;&gt;https://fetch.spec.whatwg.org/#cors-safelisted-response-header-name&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fetch.spec.whatwg.org/#forbidden-header-name&#34;&gt;https://fetch.spec.whatwg.org/#forbidden-header-name&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fetch.spec.whatwg.org/#forbidden-response-header-name&#34;&gt;https://fetch.spec.whatwg.org/#forbidden-response-header-name&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wintercg/fetch/issues/6&#34;&gt;https://github.com/wintercg/fetch/issues/6&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://fetch.spec.whatwg.org&#34;&gt;Fetch Standard&lt;/a&gt; requires implementations to exclude certain headers from requests and responses. In browser environments, some headers are forbidden so the user agent remains in full control over them. In Undici, these constraints are removed to give more control to the user.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;undici.upgrade([url, options]): Promise&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Upgrade to a different protocol. See &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism&#34;&gt;MDN - HTTP - Protocol upgrade mechanism&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Arguments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; &lt;code&gt;string | URL | UrlObject&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/docs/docs/api/Dispatcher.md#parameter-upgradeoptions&#34;&gt;&lt;code&gt;UpgradeOptions&lt;/code&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;dispatcher&lt;/strong&gt; &lt;code&gt;Dispatcher&lt;/code&gt; - Default: &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/#undicigetglobaldispatcher&#34;&gt;getGlobalDispatcher&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;callback&lt;/strong&gt; &lt;code&gt;(error: Error | null, data: UpgradeData) =&amp;gt; void&lt;/code&gt; (optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Returns a promise with the result of the &lt;code&gt;Dispatcher.upgrade&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;p&gt;Calls &lt;code&gt;options.dispatcher.upgrade(options)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/undici/main/docs/docs/api/Dispatcher.md#dispatcherupgradeoptions-callback&#34;&gt;Dispatcher.upgrade&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;undici.setGlobalDispatcher(dispatcher)&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;dispatcher &lt;code&gt;Dispatcher&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sets the global dispatcher used by Common API Methods.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;undici.getGlobalDispatcher()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Gets the global dispatcher used by Common API Methods.&lt;/p&gt; &#xA;&lt;p&gt;Returns: &lt;code&gt;Dispatcher&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;undici.setGlobalOrigin(origin)&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;origin &lt;code&gt;string | URL | undefined&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sets the global origin used in &lt;code&gt;fetch&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;undefined&lt;/code&gt; is passed, the global origin will be reset. This will cause &lt;code&gt;Response.redirect&lt;/code&gt;, &lt;code&gt;new Request()&lt;/code&gt;, and &lt;code&gt;fetch&lt;/code&gt; to throw an error when a relative path is passed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;setGlobalOrigin(&#39;http://localhost:3000&#39;)&#xA;&#xA;const response = await fetch(&#39;/api/ping&#39;)&#xA;&#xA;console.log(response.url) // http://localhost:3000/api/ping&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;undici.getGlobalOrigin()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Gets the global origin used in &lt;code&gt;fetch&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Returns: &lt;code&gt;URL&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;UrlObject&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;port&lt;/strong&gt; &lt;code&gt;string | number&lt;/code&gt; (optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;path&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; (optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;pathname&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; (optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;hostname&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; (optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;origin&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; (optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;protocol&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; (optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;search&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; (optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Specification Compliance&lt;/h2&gt; &#xA;&lt;p&gt;This section documents parts of the HTTP/1.1 specification that Undici does not support or does not fully implement.&lt;/p&gt; &#xA;&lt;h3&gt;Expect&lt;/h3&gt; &#xA;&lt;p&gt;Undici does not support the &lt;code&gt;Expect&lt;/code&gt; request header field. The request body is always immediately sent and the &lt;code&gt;100 Continue&lt;/code&gt; response will be ignored.&lt;/p&gt; &#xA;&lt;p&gt;Refs: &lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-5.1.1&#34;&gt;https://tools.ietf.org/html/rfc7231#section-5.1.1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pipelining&lt;/h3&gt; &#xA;&lt;p&gt;Undici will only use pipelining if configured with a &lt;code&gt;pipelining&lt;/code&gt; factor greater than &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Undici always assumes that connections are persistent and will immediately pipeline requests, without checking whether the connection is persistent. Hence, automatic fallback to HTTP/1.0 or HTTP/1.1 without pipelining is not supported.&lt;/p&gt; &#xA;&lt;p&gt;Undici will immediately pipeline when retrying requests after a failed connection. However, Undici will not retry the first remaining requests in the prior pipeline and instead error the corresponding callback/promise/stream.&lt;/p&gt; &#xA;&lt;p&gt;Undici will abort all running requests in the pipeline when any of them are aborted.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Refs: &lt;a href=&#34;https://tools.ietf.org/html/rfc2616#section-8.1.2.2&#34;&gt;https://tools.ietf.org/html/rfc2616#section-8.1.2.2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Refs: &lt;a href=&#34;https://tools.ietf.org/html/rfc7230#section-6.3.2&#34;&gt;https://tools.ietf.org/html/rfc7230#section-6.3.2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Manual Redirect&lt;/h3&gt; &#xA;&lt;p&gt;Since it is not possible to manually follow an HTTP redirect on the server-side, Undici returns the actual response instead of an &lt;code&gt;opaqueredirect&lt;/code&gt; filtered one when invoked with a &lt;code&gt;manual&lt;/code&gt; redirect. This aligns &lt;code&gt;fetch()&lt;/code&gt; with the other implementations in Deno and Cloudflare Workers.&lt;/p&gt; &#xA;&lt;p&gt;Refs: &lt;a href=&#34;https://fetch.spec.whatwg.org/#atomic-http-redirect-handling&#34;&gt;https://fetch.spec.whatwg.org/#atomic-http-redirect-handling&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Workarounds&lt;/h2&gt; &#xA;&lt;h3&gt;Network address family autoselection.&lt;/h3&gt; &#xA;&lt;p&gt;If you experience problem when connecting to a remote server that is resolved by your DNS servers to a IPv6 (AAAA record) first, there are chances that your local router or ISP might have problem connecting to IPv6 networks. In that case undici will throw an error with code &lt;code&gt;UND_ERR_CONNECT_TIMEOUT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the target server resolves to both a IPv6 and IPv4 (A records) address and you are using a compatible Node version (18.3.0 and above), you can fix the problem by providing the &lt;code&gt;autoSelectFamily&lt;/code&gt; option (support by both &lt;code&gt;undici.request&lt;/code&gt; and &lt;code&gt;undici.Agent&lt;/code&gt;) which will enable the family autoselection algorithm when establishing the connection.&lt;/p&gt; &#xA;&lt;h2&gt;Collaborators&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dnlup&#34;&gt;&lt;strong&gt;Daniele Belardi&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/~dnlup&#34;&gt;https://www.npmjs.com/~dnlup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ethan-arrowood&#34;&gt;&lt;strong&gt;Ethan Arrowood&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/~ethan_arrowood&#34;&gt;https://www.npmjs.com/~ethan_arrowood&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mcollina&#34;&gt;&lt;strong&gt;Matteo Collina&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/~matteo.collina&#34;&gt;https://www.npmjs.com/~matteo.collina&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KhafraDev&#34;&gt;&lt;strong&gt;Matthew Aitken&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/~khaf&#34;&gt;https://www.npmjs.com/~khaf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronag&#34;&gt;&lt;strong&gt;Robert Nagy&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/~ronag&#34;&gt;https://www.npmjs.com/~ronag&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/szmarczak&#34;&gt;&lt;strong&gt;Szymon Marczak&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/~szmarczak&#34;&gt;https://www.npmjs.com/~szmarczak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/delvedor&#34;&gt;&lt;strong&gt;Tomas Della Vedova&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/~delvedor&#34;&gt;https://www.npmjs.com/~delvedor&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Releasers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ethan-arrowood&#34;&gt;&lt;strong&gt;Ethan Arrowood&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/~ethan_arrowood&#34;&gt;https://www.npmjs.com/~ethan_arrowood&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mcollina&#34;&gt;&lt;strong&gt;Matteo Collina&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/~matteo.collina&#34;&gt;https://www.npmjs.com/~matteo.collina&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronag&#34;&gt;&lt;strong&gt;Robert Nagy&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/~ronag&#34;&gt;https://www.npmjs.com/~ronag&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KhafraDev&#34;&gt;&lt;strong&gt;Matthew Aitken&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/~khaf&#34;&gt;https://www.npmjs.com/~khaf&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Azgaar/Fantasy-Map-Generator</title>
    <updated>2024-09-08T01:41:36Z</updated>
    <id>tag:github.com,2024-09-08:/Azgaar/Fantasy-Map-Generator</id>
    <link href="https://github.com/Azgaar/Fantasy-Map-Generator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Web application generating interactive and highly customizable maps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fantasy Map Generator&lt;/h1&gt; &#xA;&lt;p&gt;Azgaar&#39;s &lt;em&gt;Fantasy Map Generator&lt;/em&gt; is a free web application that helps fantasy writers, game masters, and cartographers create and edit fantasy maps.&lt;/p&gt; &#xA;&lt;p&gt;Link: &lt;a href=&#34;https://azgaar.github.io/Fantasy-Map-Generator&#34;&gt;azgaar.github.io/Fantasy-Map-Generator&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://github.com/Azgaar/Fantasy-Map-Generator/wiki&#34;&gt;project wiki&lt;/a&gt; for guidance. The current progress is tracked in &lt;a href=&#34;https://trello.com/b/7x832DG4/fantasy-map-generator&#34;&gt;Trello&lt;/a&gt;. Some details are covered in my old blog &lt;a href=&#34;https://azgaar.wordpress.com&#34;&gt;&lt;em&gt;Fantasy Maps for fun and glory&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Azgaar/Fantasy-Map-Generator/assets/26469650/11a42446-4bd5-4526-9cb1-3ef97c868992&#34;&gt;&lt;img src=&#34;https://github.com/Azgaar/Fantasy-Map-Generator/assets/26469650/9502eae9-92e0-4d0d-9f17-a2ba4a565c01&#34; alt=&#34;preview&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Azgaar/Fantasy-Map-Generator/assets/26469650/e751a9e5-7986-4638-b8a9-362395ef7583&#34;&gt;&lt;img src=&#34;https://github.com/Azgaar/Fantasy-Map-Generator/assets/26469650/e751a9e5-7986-4638-b8a9-362395ef7583&#34; alt=&#34;preview&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Azgaar/Fantasy-Map-Generator/assets/26469650/b0d0efde-a0d1-4e80-8818-ea3dd83c2323&#34;&gt;&lt;img src=&#34;https://github.com/Azgaar/Fantasy-Map-Generator/assets/26469650/b0d0efde-a0d1-4e80-8818-ea3dd83c2323&#34; alt=&#34;preview&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://discordapp.com/invite/X7E84HU&#34;&gt;Discord server&lt;/a&gt; and &lt;a href=&#34;https://www.reddit.com/r/FantasyMapGenerator&#34;&gt;Reddit community&lt;/a&gt; to share your creations, discuss the Generator, suggest ideas and get the most recent updates.&lt;/p&gt; &#xA;&lt;p&gt;Contact me via &lt;a href=&#34;mailto:azgaar.fmg@yandex.com&#34;&gt;email&lt;/a&gt; if you have non-public suggestions. For bug reports please use &lt;a href=&#34;https://github.com/Azgaar/Fantasy-Map-Generator/issues&#34;&gt;GitHub issues&lt;/a&gt; or &lt;em&gt;#fmg-bugs&lt;/em&gt; channel on Discord. If you are facing performance issues, please read &lt;a href=&#34;https://github.com/Azgaar/Fantasy-Map-Generator/wiki/Tips#performance-tips&#34;&gt;the tips&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Pull requests are highly welcomed. The codebase is messy and requires re-design. I will appreciate if you start with minor changes. Check out the &lt;a href=&#34;https://github.com/Azgaar/Fantasy-Map-Generator/wiki/Data-model&#34;&gt;data model&lt;/a&gt; before contributing.&lt;/p&gt; &#xA;&lt;p&gt;You can support the project on &lt;a href=&#34;https://www.patreon.com/azgaar&#34;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Inspiration:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Martin O&#39;Leary&#39;s &lt;a href=&#34;https://mewo2.com/notes/terrain&#34;&gt;&lt;em&gt;Generating fantasy maps&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Amit Patel&#39;s &lt;a href=&#34;http://www-cs-students.stanford.edu/~amitp/game-programming/polygon-map-generation&#34;&gt;&lt;em&gt;Polygonal Map Generation for Games&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Scott Turner&#39;s &lt;a href=&#34;https://heredragonsabound.blogspot.com&#34;&gt;&lt;em&gt;Here Dragons Abound&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>