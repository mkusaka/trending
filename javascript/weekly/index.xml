<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-02T02:02:50Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ansh/jiffyreader.com</title>
    <updated>2022-06-02T02:02:50Z</updated>
    <id>tag:github.com,2022-06-02:/ansh/jiffyreader.com</id>
    <link href="https://github.com/ansh/jiffyreader.com" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Chrome Extension for Bionic Reading on ANY website!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jiffy Reader&lt;/h1&gt; &#xA;&lt;p&gt;A Browser Extension for Bionic Reading on ANY website!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/jiffy-reader?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-jiffy-reader&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=347823&amp;amp;theme=light&#34; alt=&#34;Jiffy Reader - Read anything on the internet faster and more clearly! | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.producthunt.com/posts/jiffy-reader?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-jiffy-reader&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=347823&amp;amp;theme=light&amp;amp;period=daily&#34; alt=&#34;Jiffy Reader - Read anything on the internet faster and more clearly | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How it works&lt;/h1&gt; &#xA;&lt;p&gt;Below is a screenshot demonstrating how the extension works by bolding out the initial parts of all text on any page when clicked. There are toggles and sliders to customize it to your preference so you can enjoy your time reading. You must agree this is awesome right? &lt;img src=&#34;https://user-images.githubusercontent.com/20851930/170895288-992e802f-4f64-4134-97cc-5144685ecb9e.png&#34; alt=&#34;Screenshot from 2022-05-29 19-13-02&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The best way to install this extension is to follow the instructions below. However, we will also periodically be releasing this extension on the various stores under the name &lt;a href=&#34;https://jiffyreader.com&#34;&gt;Jiffy Reader&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#bionic-reading&#34;&gt;bionic-reading&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#how-it-works&#34;&gt;How it works&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#installation-instructions&#34;&gt;Installation Instructions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#chrome&#34;&gt;Chrome&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#firefox&#34;&gt;Firefox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#opera&#34;&gt;Opera&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#edge&#34;&gt;Edge&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#what-is-bionic-reading&#34;&gt;What is Bionic Reading?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#reporting-issues-bugs-and-feature-request&#34;&gt;Reporting Issues, bugs and feature request&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#how-to-contribution&#34;&gt;How to Contribution&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#development&#34;&gt;Development&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#configure-vscode-to-run-the-project-when-it-is-opened&#34;&gt;Configure vscode to run the project when it is opened&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#release-a-new-version&#34;&gt;Release a new version&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation Instructions&lt;/h1&gt; &#xA;&lt;h2&gt;Chrome&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Download via &lt;a href=&#34;https://chrome.google.com/webstore/detail/jiffy-reader/lljedihjnnjjefafchaljkhbpfhfkdic&#34;&gt;Chrome Store&lt;/a&gt; or follow the instructions below&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click &lt;a href=&#34;https://github.com/ansh/bionic-reading/releases/latest/download/chrome.zip&#34;&gt;here&lt;/a&gt; to download the latest &lt;code&gt;chrome.zip&lt;/code&gt; release&lt;/li&gt; &#xA; &lt;li&gt;Extract the file&lt;/li&gt; &#xA; &lt;li&gt;Open Chrome&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;chrome://extensions&lt;/code&gt; in the address bar&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;code&gt;developer mode&lt;/code&gt; with the toggle on the top right side of the page if it is not enabled already&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;load unpacked&lt;/code&gt; on the left side of the page&lt;/li&gt; &#xA; &lt;li&gt;Find and select the extracted folder, this extension should now be installed&lt;/li&gt; &#xA; &lt;li&gt;To pin the extension, click the &lt;code&gt;puzzle icon&lt;/code&gt; on the top right of Chrome, then &lt;code&gt;pin the extension&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Firefox&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Download via the &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/jiffy-reader/&#34;&gt;Mozilla Firefox Plugin/Add-on Store&lt;/a&gt; or follow the instructions below&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download &lt;code&gt;firefox.xpi&lt;/code&gt; by right clicking &lt;a href=&#34;https://github.com/ansh/bionic-reading/releases/latest/download/firefox.xpi&#34;&gt;here&lt;/a&gt; and choose &lt;code&gt;Save link as&lt;/code&gt; to download the latest &lt;code&gt;firefox.xpi &lt;/code&gt;release&lt;/li&gt; &#xA; &lt;li&gt;Open Firefox&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;about:debugging#/runtime/this-firefox&lt;/code&gt; in the address bar&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Load Temporary Add-on...&lt;/code&gt; and navigate to the path of the downloaded &lt;code&gt;firefox.xpi&lt;/code&gt; and select it to install it&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Firefox will remove the extension when the browser is closed. This will be solved once we provide a means to download the extension from the firefox store&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Opera&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download: Click &lt;a href=&#34;https://github.com/ansh/bionic-reading/releases/latest/download/opera.crx&#34;&gt;here&lt;/a&gt; to download the latest &lt;code&gt;opera.crx&lt;/code&gt; release&lt;/li&gt; &#xA; &lt;li&gt;Extract the file&lt;/li&gt; &#xA; &lt;li&gt;Open Opera&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;opera://extensions&lt;/code&gt; in the address bar&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;code&gt;developer mode&lt;/code&gt; with the toggle on the top right side of the page if it is not enabled already&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;load unpacked&lt;/code&gt; on the left side of the page&lt;/li&gt; &#xA; &lt;li&gt;Find and select the extracted folder, this extension should now be installed and listed on the screen&lt;/li&gt; &#xA; &lt;li&gt;To pin the extension, click the &lt;code&gt;cube icon&lt;/code&gt; on the top right of Chrome, then &lt;code&gt;pin the extension&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Edge&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please follow the steps for &lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#chrome&#34;&gt;chrome&lt;/a&gt; above&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;What is Bionic Reading?&lt;/h1&gt; &#xA;&lt;p&gt;Bionic Reading is a new method facilitating the reading process by guiding the eyes through text with artficial fixation points. As a result, the reader is only focusing on the highlighted initial letters and lets the brain center complete the word. In a digital world dominated by shallow forms of reading, Bionic Reading aims to encourage a more in-depth reading and understanding of written content.&lt;/p&gt; &#xA;&lt;p&gt;Read more about &lt;a href=&#34;https://bionic-reading.com/about/&#34;&gt;Bionic Reading&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Reporting Issues, bugs and feature request&lt;/h1&gt; &#xA;&lt;p&gt;Visit the issues page to report, bugs or tell us about a feature you would like to see and hopefully we will get to you. Kindly allow for some time after submitting a issue for someone to get back to you. You can also see a list of open issues that you may contribute to by commenting to help out someone with a challenge or developing and opening a PR. &lt;a href=&#34;https://raw.githubusercontent.com/ansh/jiffyreader.com/master/#how-to-contribution&#34;&gt;See contribution section&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to Contribute&lt;/h1&gt; &#xA;&lt;p&gt;Anyone is welcome to provide contributions to this project by submitting a PR (Pull Request) and it will be happily merged to provide features and fixes to the incredible people using the extension.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the project&lt;/li&gt; &#xA; &lt;li&gt;Open in VS Code or your favourite editor&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;npm i&lt;/code&gt; to install dependencies&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn dev:chrome&lt;/code&gt; or &lt;code&gt;npm run dev:chrome&lt;/code&gt; to build the development version. Substitute chrome for firefox if that is your prefered browser.&lt;/li&gt; &#xA; &lt;li&gt;Follow the installation version for your prefered browser but navigate to the &lt;code&gt;projectRootFolder/extensions/&lt;/code&gt; and choose the folder that corresponds with your browser.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Configure vscode to run the project when it is opened&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;.vscode/tasks.json.example&lt;/code&gt; to &lt;code&gt;.vscode/tasks.json&lt;/code&gt; or enter &lt;code&gt;cp .vscode/tasks.json.example .vscode/tasks.json&lt;/code&gt; in the terminal from the &lt;code&gt;project root&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;vs code command pallet&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Type and select &lt;code&gt;Tasks: Manage Automatic Tasks in Folder&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Allow Automatic Tasks in Folder&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Reload VS code.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Release a new version&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Change &lt;code&gt;version&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;, eg. &lt;code&gt;&#34;version&#34;: &#34;1.0.0&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Push a new tag to GitHub, eg. &lt;code&gt;git tag 1.0.0 &amp;amp;&amp;amp; git push --tags&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The Workflow should be running &lt;a href=&#34;https://github.com/ansh/bionic-reading/actions&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check the release version &lt;a href=&#34;https://github.com/ansh/bionic-reading/releases&#34;&gt;here&lt;/a&gt; and edit release notes.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Asabeneh/30-Days-Of-JavaScript</title>
    <updated>2022-06-02T02:02:50Z</updated>
    <id>tag:github.com,2022-06-02:/Asabeneh/30-Days-Of-JavaScript</id>
    <link href="https://github.com/Asabeneh/30-Days-Of-JavaScript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;30 Days Of JavaScript&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;# Day&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Topics&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;01&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&#34;&gt;Introduction&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;02&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&#34;&gt;Data Types&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;03&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/03_Day_Booleans_operators_date/03_booleans_operators_date.md&#34;&gt;Booleans, Operators, Date&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;04&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/04_Day_Conditionals/04_day_conditionals.md&#34;&gt;Conditionals&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;05&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/05_Day_Arrays/05_day_arrays.md&#34;&gt;Arrays&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;06&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/06_Day_Loops/06_day_loops.md&#34;&gt;Loops&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;07&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/07_Day_Functions/07_day_functions.md&#34;&gt;Functions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;08&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/08_Day_Objects/08_day_objects.md&#34;&gt;Objects&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;09&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/09_Day_Higher_order_functions/09_day_higher_order_functions.md&#34;&gt;Higher Order Functions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/10_Day_Sets_and_Maps/10_day_Sets_and_Maps.md&#34;&gt;Sets and Maps&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/11_Day_Destructuring_and_spreading/11_day_destructuring_and_spreading.md&#34;&gt;Destructuring and Spreading&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/12_Day_Regular_expressions/12_day_regular_expressions.md&#34;&gt;Regular Expressions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/13_Day_Console_object_methods/13_day_console_object_methods.md&#34;&gt;Console Object Methods&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/14_Day_Error_handling/14_day_error_handling.md&#34;&gt;Error Handling&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/15_Day_Classes/15_day_classes.md&#34;&gt;Classes&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/16_Day_JSON/16_day_json.md&#34;&gt;JSON&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/17_Day_Web_storages/17_day_web_storages.md&#34;&gt;Web Storages&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/18_Day_Promises/18_day_promises.md&#34;&gt;Promises&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/19_Day_Closures/19_day_closures.md&#34;&gt;Closure&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/20_Day_Writing_clean_codes/20_day_writing_clean_codes.md&#34;&gt;Writing Clean Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/21_Day_DOM/21_day_dom.md&#34;&gt;DOM&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/22_Day_Manipulating_DOM_object/22_day_manipulating_DOM_object.md&#34;&gt;Manipulating DOM Object&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;23&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/23_Day_Event_listeners/23_day_event_listeners.md&#34;&gt;Event Listeners&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/24_Day_Project_solar_system/24_day_project_solar_system.md&#34;&gt;Mini Project: Solar System&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/25_Day_World_countries_data_visualization_1/25_day_world_countries_data_visualization_1.md&#34;&gt;Mini Project: World Countries Data Visualization 1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;26&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/26_Day_World_countries_data_visualization_2/26_day_world_countries_data_visualization_2.md&#34;&gt;Mini Project: World Countries Data Visualization 2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;27&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/27_Day_Mini_project_portfolio/27_day_mini_project_portfolio.md&#34;&gt;Mini Project: Portfolio&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;28&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/28_Day_Mini_project_leaderboard/28_day_mini_project_leaderboard.md&#34;&gt;Mini Project: Leaderboard&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;29&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/29_Day_Mini_project_animating_characters/29_day_mini_project_animating_characters.md&#34;&gt;Mini Project: Animating characters&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/30_Day_Mini_project_final/30_day_mini_project_final.md&#34;&gt;Final Projects&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;small&gt;Support the &lt;strong&gt;author&lt;/strong&gt; to create more educational materials&lt;/small&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://www.paypal.me/asabeneh&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/paypal_lg.png&#34; alt=&#34;Paypal Logo&#34; style=&#34;width:10%&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; 30 Days Of JavaScript: Introduction&lt;/h1&gt; &#xA; &lt;a class=&#34;header-badge&#34; target=&#34;_blank&#34; href=&#34;https://www.linkedin.com/in/asabeneh/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&#34;&gt; &lt;/a&gt; &#xA; &lt;a class=&#34;header-badge&#34; target=&#34;_blank&#34; href=&#34;https://twitter.com/Asabeneh&#34;&gt; &lt;img alt=&#34;Twitter Follow&#34; src=&#34;https://img.shields.io/twitter/follow/asabeneh?style=social&#34;&gt; &lt;/a&gt; &#xA; &lt;p&gt;&lt;sub&gt;Author: &lt;a href=&#34;https://www.linkedin.com/in/asabeneh/&#34; target=&#34;_blank&#34;&gt;Asabeneh Yetayeh&lt;/a&gt;&lt;br&gt; &lt;small&gt; January, 2020&lt;/small&gt; &lt;/sub&gt;&lt;/p&gt; &#xA; &lt;div&gt; &#xA;  &lt;p&gt;🇬🇧 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&#34;&gt;English&lt;/a&gt; 🇪🇸 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Spanish/readme.md&#34;&gt;Spanish&lt;/a&gt; 🇷🇺 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/RU/README.md&#34;&gt;Russian&lt;/a&gt; 🇹🇷 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Turkish/readMe.md&#34;&gt;Turkish&lt;/a&gt; 🇦🇿 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Azerbaijani/readMe.md&#34;&gt;Azerbaijan&lt;/a&gt; 🇰🇷 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Korea/README.md&#34;&gt;Korean&lt;/a&gt; 🇻🇳 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Vietnamese/README.md&#34;&gt;Vietnamese&lt;/a&gt; 🇵🇱 &lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Polish/readMe.md&#34;&gt;Polish&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;  &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&#34;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1_1.png&#34; alt=&#34;Thirty Days Of JavaScript&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#30-days-of-javascript&#34;&gt;30 Days Of JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1&#34;&gt;📔 Day 1&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#setup&#34;&gt;Setup&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#install-nodejs&#34;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#browser&#34;&gt;Browser&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-google-chrome&#34;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#opening-google-chrome-console&#34;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#writing-code-on-browser-console&#34;&gt;Writing Code on Browser Console&lt;/a&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog&#34;&gt;Console.log&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog-with-multiple-arguments&#34;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments&#34;&gt;Comments&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#syntax&#34;&gt;Syntax&lt;/a&gt;&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#arithmetics&#34;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#code-editor&#34;&gt;Code Editor&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-visual-studio-code&#34;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#how-to-use-visual-studio-code&#34;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#adding-javascript-to-a-web-page&#34;&gt;Adding JavaScript to a Web Page&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#inline-script&#34;&gt;Inline Script&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#internal-script&#34;&gt;Internal Script&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#external-script&#34;&gt;External Script&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#multiple-external-scripts&#34;&gt;Multiple External Scripts&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction-to-data-types&#34;&gt;Introduction to Data types&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#numbers&#34;&gt;Numbers&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#strings&#34;&gt;Strings&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#booleans&#34;&gt;Booleans&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#undefined&#34;&gt;Undefined&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#null&#34;&gt;Null&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#checking-data-types&#34;&gt;Checking Data Types&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments-again&#34;&gt;Comments Again&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#variables&#34;&gt;Variables&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1-exercises&#34;&gt;💻 Day 1: Exercises&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;📔 Day 1&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of JavaScript programming challenge. In this challenge you will learn everything you need to be a JavaScript programmer, and in general, the whole concept of programming. In the end of the challenge you will get a 30DaysOfJavaScript programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&#34;https://t.me/ThirtyDaysOfJavaScript&#34;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A 30DaysOfJavaScript&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. JavaScript is the language of the web. I enjoy using and teaching JavaScript and I hope you will do so too.&lt;/p&gt; &#xA;&lt;p&gt;In this step by step JavaScript challenge, you will learn JavaScript, the most popular programming language in the history of mankind. JavaScript is used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt; and nowadays JavaScript can be used for &lt;strong&gt;&lt;em&gt;machine learning&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;AI&lt;/em&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;em&gt;JavaScript (JS)&lt;/em&gt;&lt;/strong&gt; has increased in popularity in recent years and has been the leading programming language for six consecutive years and is the most used programming language on Github.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;No prior knowledge of programming is required to follow this challenge. You need only:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Motivation&lt;/li&gt; &#xA; &lt;li&gt;A computer&lt;/li&gt; &#xA; &lt;li&gt;Internet&lt;/li&gt; &#xA; &lt;li&gt;A browser&lt;/li&gt; &#xA; &lt;li&gt;A code editor&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. If you have those, then you have everything to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Install Node.js&lt;/h3&gt; &#xA;&lt;p&gt;You may not need Node.js right now but you may need it for later. Install &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/download_node.png&#34; alt=&#34;Node download&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After downloading double click and install&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/install_node.png&#34; alt=&#34;Install node&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;asabeneh $ node -v&#xA;v12.14.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When making this tutorial I was using Node version 12.14.0, but now the recommended version of Node.js for download is v14.17.6, by the time you use this material you may have a higher Node.js version.&lt;/p&gt; &#xA;&lt;h3&gt;Browser&lt;/h3&gt; &#xA;&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; &#xA;&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;Google Chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/google_chrome.png&#34; alt=&#34;Google Chrome&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; &#xA;&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_developer_tool.png&#34; alt=&#34;Opening chrome&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To open the Chrome console using a keyboard shortcut.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Mac&#xA;Command+Option+J&#xA;&#xA;Windows/Linux:&#xA;Ctl+Shift+J&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_chrome_console_shortcut.png&#34; alt=&#34;Opening console&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_on_chrome_console.png&#34; alt=&#34;write code on console&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; &#xA;&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Mac&#xA;Command+Option+I&#xA;&#xA;Windows:&#xA;Ctl+Shift+I&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Console.log&lt;/h5&gt; &#xA;&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &lt;code&gt;&#39;Hello, World&#39;&lt;/code&gt; as input data or argument in the console.log() function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello, World!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; &#xA;&lt;p&gt;The &lt;strong&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/strong&gt; function can take multiple parameters separated by commas. The syntax looks like as follows:&lt;strong&gt;&lt;code&gt;console.log(param1, param2, param3)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/console_log_multipl_arguments.png&#34; alt=&#34;console log multiple arguments&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)&#xA;console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)&#xA;console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt; can take multiple arguments.&lt;/p&gt; &#xA;&lt;p&gt;Congratulations! You wrote your first JavaScript code using &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Comments&lt;/h5&gt; &#xA;&lt;p&gt;We can add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code. In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this &lt;code&gt;//&lt;/code&gt; is also a comment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// This is the first comment  &#xA;// This is the second comment  &#xA;// I am a single line comment&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/*&#xA;This is a multiline comment  &#xA; Multiline comments can take multiple lines  &#xA; JavaScript is the language of the web  &#xA; */&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Syntax&lt;/h5&gt; &#xA;&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences, compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is the structure of statements in a computer language. Programming languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/raising_syntax_error.png&#34; alt=&#34;Error&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello, World!&#39;)&#xA;console.log(&#39;Hello, World!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt;. If we are printing text or string using &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello, World!&#39;)&#xA;console.log(&#34;Hello, World!&#34;)&#xA;console.log(`Hello, World!`)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Arithmetics&lt;/h4&gt; &#xA;&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt; on Google Chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. It is possible to write JavaScript code on Google Chrome console can directly without the &lt;strong&gt;&lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/arithmetic.png&#34; alt=&#34;Arithmetic&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(2 + 3) // Addition&#xA;console.log(3 - 2) // Subtraction&#xA;console.log(2 * 3) // Multiplication&#xA;console.log(3 / 2) // Division&#xA;console.log(3 % 2) // Modulus - finding remainder&#xA;console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Code Editor&lt;/h3&gt; &#xA;&lt;p&gt;We can write our codes on the browser console, but it won&#39;t be for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days of JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; &#xA;&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; &#xA;&lt;p&gt;Visual Studio Code is a very popular open-source text editor. I would recommend to &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode.png&#34; alt=&#34;Vscode&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; &#xA;&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; &#xA;&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode_ui.png&#34; alt=&#34;Vscode ui&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/adding_project_to_vscode.png&#34; alt=&#34;Vscode add project&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_project_on_vscode.png&#34; alt=&#34;Vscode open project&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/scripts_on_vscode.png&#34; alt=&#34;script file&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vsc_live_server.png&#34; alt=&#34;Installing Live Server&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/running_script.png&#34; alt=&#34;running script&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/launched_on_new_tab.png&#34; alt=&#34;coding running&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Adding JavaScript to a Web Page&lt;/h2&gt; &#xA;&lt;p&gt;JavaScript can be added to a web page in three different ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;em&gt;Inline script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;em&gt;Internal script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;em&gt;External script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;em&gt;Multiple External scripts&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following sections show different ways of adding JavaScript code to your web page.&lt;/p&gt; &#xA;&lt;h3&gt;Inline Script&lt;/h3&gt; &#xA;&lt;p&gt;Create a project folder on your desktop or in any location, name it 30DaysOfJS and create an &lt;strong&gt;&lt;em&gt;&lt;code&gt;index.html&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt; file in the project folder. Then paste the following code and open it in a browser, for example &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;30DaysOfScript:Inline Script&amp;lt;/title&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&#xA;    &amp;lt;button onclick=&#34;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;)&#34;&amp;gt;Click Me&amp;lt;/button&amp;gt;&#xA;  &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, you just wrote your first inline script. We can create a pop up alert message using the &lt;em&gt;&lt;code&gt;alert()&lt;/code&gt;&lt;/em&gt; built-in function.&lt;/p&gt; &#xA;&lt;h3&gt;Internal Script&lt;/h3&gt; &#xA;&lt;p&gt;The internal script can be written in the &lt;em&gt;&lt;code&gt;head&lt;/code&gt;&lt;/em&gt; or the &lt;em&gt;&lt;code&gt;body&lt;/code&gt;&lt;/em&gt;, but it is preferred to put it on the body of the HTML document. First, let us write on the head part of the page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;&#xA;    &amp;lt;script&amp;gt;&#xA;      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)&#xA;    &amp;lt;/script&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is how we write an internal script most of the time. Writing the JavaScript code in the body section is the most preferred option. Open the browser console to see the output from the &lt;code&gt;console.log()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&#xA;    &amp;lt;button onclick=&#34;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;);&#34;&amp;gt;Click Me&amp;lt;/button&amp;gt;&#xA;    &amp;lt;script&amp;gt;&#xA;      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)&#xA;    &amp;lt;/script&amp;gt;&#xA;  &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open the browser console to see the output from the &lt;code&gt;console.log()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_vscode.png&#34; alt=&#34;js code from vscode&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;External Script&lt;/h3&gt; &#xA;&lt;p&gt;Similar to the internal script, the external script link can be on the header or body, but it is preferred to put it in the body. First, we should create an external JavaScript file with .js extension. All files ending with .js extension are JavaScript files. Create a file named introduction.js inside your project directory and write the following code and link this .js file at the bottom of the body.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;External scripts in the &lt;em&gt;head&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;&#xA;    &amp;lt;script src=&#34;introduction.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;External scripts in the &lt;em&gt;body&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&#xA;    &amp;lt;!-- JavaScript external link could be in the header or in the body --&amp;gt; &#xA;    &amp;lt;!-- Before the closing tag of the body is the recommended place to put the external JavaScript script --&amp;gt;&#xA;    &amp;lt;script src=&#34;introduction.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;  &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open the browser console to see the output of the &lt;code&gt;console.log()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Multiple External Scripts&lt;/h3&gt; &#xA;&lt;p&gt;We can also link multiple external JavaScript files to a web page. Create a &lt;code&gt;helloworld.js&lt;/code&gt; file inside the 30DaysOfJS folder and write the following code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello, World!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;Multiple External Scripts&amp;lt;/title&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&#xA;    &amp;lt;script src=&#34;./helloworld.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;    &amp;lt;script src=&#34;./introduction.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;  &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Your main.js file should be below all other scripts&lt;/em&gt;. It is very important to remember this.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/multiple_script.png&#34; alt=&#34;Multiple Script&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction to Data types&lt;/h2&gt; &#xA;&lt;p&gt;In JavaScript and also other programming languages, there are different types of data types. The following are JavaScript primitive data types: &lt;em&gt;String, Number, Boolean, undefined, Null&lt;/em&gt;, and &lt;em&gt;Symbol&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Numbers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integers: Integer (negative, zero and positive) numbers Example: ... -3, -2, -1, 0, 1, 2, 3 ...&lt;/li&gt; &#xA; &lt;li&gt;Float-point numbers: Decimal number Example ... -3.5, -2.25, -1.0, 0.0, 1.1, 2.2, 3.5 ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Strings&lt;/h3&gt; &#xA;&lt;p&gt;A collection of one or more characters between two single quotes, double quotes, or backticks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&#39;a&#39;&#xA;&#39;Asabeneh&#39;&#xA;&#34;Asabeneh&#34;&#xA;&#39;Finland&#39;&#xA;&#39;JavaScript is a beautiful programming language&#39;&#xA;&#39;I love teaching&#39;&#xA;&#39;I hope you are enjoying the first day&#39;&#xA;`We can also create a string using a backtick`&#xA;&#39;A string could be just as small as one character or as big as many pages&#39;&#xA;&#39;Any data type under a single quote, double quote or backtick is a string&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Booleans&lt;/h3&gt; &#xA;&lt;p&gt;A boolean value is either True or False. Any comparisons returns a boolean value, which is either true or false.&lt;/p&gt; &#xA;&lt;p&gt;A boolean data type is either a true or false value.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;true // if the light is on, the value is true&#xA;false // if the light is off, the value is false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Undefined&lt;/h3&gt; &#xA;&lt;p&gt;In JavaScript, if we don&#39;t assign a value to a variable, the value is undefined. In addition to that, if a function is not returning anything, it returns undefined.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let firstName&#xA;console.log(firstName) // undefined, because it is not assigned to a value yet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Null&lt;/h3&gt; &#xA;&lt;p&gt;Null in JavaScript means an empty value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let emptyValue = null&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Checking Data Types&lt;/h2&gt; &#xA;&lt;p&gt;To check the data type of a certain variable, we use the &lt;strong&gt;typeof&lt;/strong&gt; operator. See the following example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(typeof &#39;Asabeneh&#39;) // string&#xA;console.log(typeof 5) // number&#xA;console.log(typeof true) // boolean&#xA;console.log(typeof null) // object type&#xA;console.log(typeof undefined) // undefined&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Comments Again&lt;/h2&gt; &#xA;&lt;p&gt;Remember that commenting in JavaScript is similar to other programming languages. Comments are important in making your code more readable. There are two ways of commenting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Single line commenting&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Multiline commenting&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// commenting the code itself with a single comment&#xA;// let firstName = &#39;Asabeneh&#39;; single line comment&#xA;// let lastName = &#39;Yetayeh&#39;; single line comment&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multiline commenting:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/*&#xA;  let location = &#39;Helsinki&#39;;&#xA;  let age = 100;&#xA;  let isMarried = true;&#xA;  This is a Multiple line comment&#xA;*/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Variables&lt;/h2&gt; &#xA;&lt;p&gt;Variables are &lt;em&gt;containers&lt;/em&gt; of data. Variables are used to &lt;em&gt;store&lt;/em&gt; data in a memory location. When a variable is declared, a memory location is reserved. When a variable is assigned to a value (data), the memory space will be filled with that data. To declare a variable, we use &lt;em&gt;var&lt;/em&gt;, &lt;em&gt;let&lt;/em&gt;, or &lt;em&gt;const&lt;/em&gt; keywords.&lt;/p&gt; &#xA;&lt;p&gt;For a variable that changes at a different time, we use &lt;em&gt;let&lt;/em&gt;. If the data does not change at all, we use &lt;em&gt;const&lt;/em&gt;. For example, PI, country name, gravity do not change, and we can use &lt;em&gt;const&lt;/em&gt;. We will not use var in this challenge and I don&#39;t recommend you to use it. It is error prone way of declaring variable it has lots of leak. We will talk more about var, let, and const in detail in other sections (scope). For now, the above explanation is enough.&lt;/p&gt; &#xA;&lt;p&gt;A valid JavaScript variable name must follow the following rules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A JavaScript variable name should not begin with a number.&lt;/li&gt; &#xA; &lt;li&gt;A JavaScript variable name does not allow special characters except dollar sign and underscore.&lt;/li&gt; &#xA; &lt;li&gt;A JavaScript variable name follows a camelCase convention.&lt;/li&gt; &#xA; &lt;li&gt;A JavaScript variable name should not have space between words.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following are examples of valid JavaScript variables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;firstName&#xA;lastName&#xA;country&#xA;city&#xA;capitalCity&#xA;age&#xA;isMarried&#xA;&#xA;first_name&#xA;last_name&#xA;is_married&#xA;capital_city&#xA;&#xA;num1&#xA;num_1&#xA;_num_1&#xA;$num1&#xA;year2020&#xA;year_2020&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first and second variables on the list follows the camelCase convention of declaring in JavaScript. In this material, we will use camelCase variables(camelWithOneHump). We use CamelCase(CamelWithTwoHump) to declare classes, we will discuss about classes and objects in other section.&lt;/p&gt; &#xA;&lt;p&gt;Example of invalid variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;  first-name&#xA;  1_num&#xA;  num_#_1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let us declare variables with different data types. To declare a variable, we need to use &lt;em&gt;let&lt;/em&gt; or &lt;em&gt;const&lt;/em&gt; keyword before the variable name. Following the variable name, we write an equal sign (assignment operator), and a value(assigned data).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Syntax&#xA;let nameOfVariable = value&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The nameOfVriable is the name that stores different data of value. See below for detail examples.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples of declared variables&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Declaring different variables of different data types&#xA;let firstName = &#39;Asabeneh&#39; // first name of a person&#xA;let lastName = &#39;Yetayeh&#39; // last name of a person&#xA;let country = &#39;Finland&#39; // country&#xA;let city = &#39;Helsinki&#39; // capital city&#xA;let age = 100 // age in years&#xA;let isMarried = true&#xA;&#xA;console.log(firstName, lastName, country, city, age, isMarried)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Asabeneh Yetayeh Finland Helsinki 100 true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Declaring variables with number values&#xA;let age = 100 // age in years&#xA;const gravity = 9.81 // earth gravity  in m/s2&#xA;const boilingPoint = 100 // water boiling point, temperature in °C&#xA;const PI = 3.14 // geometrical constant&#xA;console.log(gravity, boilingPoint, PI)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;9.81 100 3.14&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Variables can also be declaring in one line separated by comma, however I recommend to use a seperate line to make code more readble&#xA;let name = &#39;Asabeneh&#39;, job = &#39;teacher&#39;, live = &#39;Finland&#39;&#xA;console.log(name, job, live)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Asabeneh teacher Finland&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you run &lt;em&gt;index.html&lt;/em&gt; file in the 01-Day folder you should get this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1.png&#34; alt=&#34;Day one&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;🌕 You are amazing! You have just completed day 1 challenge and you are on your way to greatness. Now do some exercises for your brain and muscle.&lt;/p&gt; &#xA;&lt;h1&gt;💻 Day 1: Exercises&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Write a single line comment which says, &lt;em&gt;comments can make code readable&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Write another single comment which says, &lt;em&gt;Welcome to 30DaysOfJavaScript&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Write a multiline comment which says, &lt;em&gt;comments can make code readable, easy to reuse&lt;/em&gt; &lt;em&gt;and informative&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a variable.js file and declare variables and assign string, boolean, undefined and null data types&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create datatypes.js file and use the JavaScript &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; operator to check different data types. Check the data type of each variable&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare four variables without assigning values&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare four variables with assigned values&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in multiple lines&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in a single line&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare two variables &lt;em&gt;myAge&lt;/em&gt; and &lt;em&gt;yourAge&lt;/em&gt; and assign them initial values and log to the browser console.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;I am 25 years old.&#xA;You are 30 years old.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&#34;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sondnpt00343/tiktok-ui</title>
    <updated>2022-06-02T02:02:50Z</updated>
    <id>tag:github.com,2022-06-02:/sondnpt00343/tiktok-ui</id>
    <link href="https://github.com/sondnpt00343/tiktok-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tiktok Clone, dự án thực hành trong khóa ReactJS tại F8: https://fullstack.edu.vn/courses/reactjs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Getting Started with Create React App&lt;/h1&gt; &#xA;&lt;p&gt;This project was bootstrapped with &lt;a href=&#34;https://github.com/facebook/create-react-app&#34;&gt;Create React App&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Available Scripts&lt;/h2&gt; &#xA;&lt;p&gt;In the project directory, you can run:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Runs the app in the development mode.&lt;br&gt; Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; to view it in your browser.&lt;/p&gt; &#xA;&lt;p&gt;The page will reload when you make changes.&lt;br&gt; You may also see any lint errors in the console.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;npm test&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Launches the test runner in the interactive watch mode.&lt;br&gt; See the section about &lt;a href=&#34;https://facebook.github.io/create-react-app/docs/running-tests&#34;&gt;running tests&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;npm run build&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Builds the app for production to the &lt;code&gt;build&lt;/code&gt; folder.&lt;br&gt; It correctly bundles React in production mode and optimizes the build for the best performance.&lt;/p&gt; &#xA;&lt;p&gt;The build is minified and the filenames include the hashes.&lt;br&gt; Your app is ready to be deployed!&lt;/p&gt; &#xA;&lt;p&gt;See the section about &lt;a href=&#34;https://facebook.github.io/create-react-app/docs/deployment&#34;&gt;deployment&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;npm run eject&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: this is a one-way operation. Once you &lt;code&gt;eject&lt;/code&gt;, you can&#39;t go back!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you aren&#39;t satisfied with the build tool and configuration choices, you can &lt;code&gt;eject&lt;/code&gt; at any time. This command will remove the single build dependency from your project.&lt;/p&gt; &#xA;&lt;p&gt;Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except &lt;code&gt;eject&lt;/code&gt; will still work, but they will point to the copied scripts so you can tweak them. At this point you&#39;re on your own.&lt;/p&gt; &#xA;&lt;p&gt;You don&#39;t have to ever use &lt;code&gt;eject&lt;/code&gt;. The curated feature set is suitable for small and middle deployments, and you shouldn&#39;t feel obligated to use this feature. However we understand that this tool wouldn&#39;t be useful if you couldn&#39;t customize it when you are ready for it.&lt;/p&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;p&gt;You can learn more in the &lt;a href=&#34;https://facebook.github.io/create-react-app/docs/getting-started&#34;&gt;Create React App documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To learn React, check out the &lt;a href=&#34;https://reactjs.org/&#34;&gt;React documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code Splitting&lt;/h3&gt; &#xA;&lt;p&gt;This section has moved here: &lt;a href=&#34;https://facebook.github.io/create-react-app/docs/code-splitting&#34;&gt;https://facebook.github.io/create-react-app/docs/code-splitting&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Analyzing the Bundle Size&lt;/h3&gt; &#xA;&lt;p&gt;This section has moved here: &lt;a href=&#34;https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size&#34;&gt;https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Making a Progressive Web App&lt;/h3&gt; &#xA;&lt;p&gt;This section has moved here: &lt;a href=&#34;https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app&#34;&gt;https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Advanced Configuration&lt;/h3&gt; &#xA;&lt;p&gt;This section has moved here: &lt;a href=&#34;https://facebook.github.io/create-react-app/docs/advanced-configuration&#34;&gt;https://facebook.github.io/create-react-app/docs/advanced-configuration&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deployment&lt;/h3&gt; &#xA;&lt;p&gt;This section has moved here: &lt;a href=&#34;https://facebook.github.io/create-react-app/docs/deployment&#34;&gt;https://facebook.github.io/create-react-app/docs/deployment&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;npm run build&lt;/code&gt; fails to minify&lt;/h3&gt; &#xA;&lt;p&gt;This section has moved here: &lt;a href=&#34;https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify&#34;&gt;https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>adrianhajdin/project_chat_application</title>
    <updated>2022-06-02T02:02:50Z</updated>
    <id>tag:github.com,2022-06-02:/adrianhajdin/project_chat_application</id>
    <link href="https://github.com/adrianhajdin/project_chat_application" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a code repository for the corresponding YouTube video. In this tutorial we are going to build and deploy a real time chat application. Covered topics: React.js, Node.js, Express.js, and Socket.io.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Realtime Chat Application&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://realtime-chat-application.netlify.com&#34;&gt;Live Site&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.ytimg.com/vi/ZwFA3YMfkoc/maxresdefault.jpg&#34; alt=&#34;Chat Application&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This is a code repository for the corresponding video tutorial.&lt;/p&gt; &#xA;&lt;p&gt;In this video, we will create a full Realtime Chat Application. We&#39;re going to use React on the front end, with NodeJS + Socket.io web socket library on the back end.&lt;/p&gt; &#xA;&lt;p&gt;By the end of this video, you will have a strong understanding of how to send and receive messages using web sockets and Socket.io to make any real-time application.&lt;/p&gt; &#xA;&lt;h2&gt;Stay up to date with new projects&lt;/h2&gt; &#xA;&lt;p&gt;New major projects coming soon, subscribe to the mailing list to stay up to date &lt;a href=&#34;https://resource.jsmasterypro.com/newsletter&#34;&gt;https://resource.jsmasterypro.com/newsletter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Setup:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;run &lt;code&gt;npm i &amp;amp;&amp;amp; npm start&lt;/code&gt; for both client and server side to start the development server&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>LeCoupa/awesome-cheatsheets</title>
    <updated>2022-06-02T02:02:50Z</updated>
    <id>tag:github.com,2022-06-02:/LeCoupa/awesome-cheatsheets</id>
    <link href="https://github.com/LeCoupa/awesome-cheatsheets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://lecoupa.github.io/awesome-cheatsheets/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/_design/cover_github@2x.png&#34; alt=&#34;AWESOME CHEATSHEETS LOGO&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://awesome.re&#34;&gt;&lt;img src=&#34;https://awesome.re/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/LeCoupa/awesome-cheatsheets/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WEBSITE DIRECTORY&lt;/strong&gt;: &lt;a href=&#34;https://lecoupa.github.io/awesome-cheatsheets/&#34;&gt;Available here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;📚 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🤔 Why Awesome-Cheatsheets?&lt;/h2&gt; &#xA;&lt;p&gt;I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. &lt;a href=&#34;https://gist.github.com/LeCoupa&#34;&gt;I started doing these kinds of things a long time ago on Gist&lt;/a&gt;. To better keep track of the history and to let people contribute, I reorganized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.&lt;/p&gt; &#xA;&lt;h2&gt;📚 Table of Contents&lt;/h2&gt; &#xA;&lt;h3&gt;📃 Languages&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;View cheatsheets&lt;/summary&gt; &#xA; &lt;h4&gt;Command line interface&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/bash.sh&#34;&gt;Bash&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Imperative&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C.txt&#34;&gt;C&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C%23.txt&#34;&gt;C#&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/golang.md&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/java.md&#34;&gt;Java&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/php.php&#34;&gt;PHP&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/python.md&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Functional&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/javascript.js&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;📦 Backend&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;View cheatsheets&lt;/summary&gt; &#xA; &lt;h4&gt;PHP&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/laravel.php&#34;&gt;Laravel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Python&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/django.py&#34;&gt;Django&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Javascript&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/adonis.js&#34;&gt;Adonis.js&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/express.js&#34;&gt;Express.js&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/feathers.js&#34;&gt;Feathers.js&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/moleculer.js&#34;&gt;Moleculer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/node.js&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/sails.js&#34;&gt;Sails.js&lt;/a&gt; &lt;/li&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;   &#xA;&lt;h3&gt;🌐 Frontend&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;View cheatsheets&lt;/summary&gt; &#xA; &lt;h4&gt;Basics&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/html5.html&#34;&gt;HTML5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Frameworks&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/react.js&#34;&gt;React.js&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/vue.js&#34;&gt;Vue.js&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/tailwind.css&#34;&gt;Tailwind.css&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/ember.js&#34;&gt;Ember.js&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angular.js&#34;&gt;Angular (2+)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angularjs.js&#34;&gt;AngularJS&lt;/a&gt; &lt;/li&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;   &#xA;&lt;h3&gt;🗃️ Databases&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;View cheatsheets&lt;/summary&gt; &#xA; &lt;h4&gt;SQL&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/mysql.sh&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;NoSQL&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/redis.sh&#34;&gt;Redis&lt;/a&gt; &lt;/li&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;   &#xA;&lt;h3&gt;🔧 Tools&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;View cheatsheets&lt;/summary&gt; &#xA; &lt;h4&gt;Development&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/curl.sh&#34;&gt;cURL&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/drush.sh&#34;&gt;Drush&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/elasticsearch.js&#34;&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/emmet.md&#34;&gt;Emmet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/git.sh&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/puppeteer.js&#34;&gt;Puppeteer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/sublime_text.md&#34;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vim.txt&#34;&gt;VIM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vscode.md&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/xcode.txt&#34;&gt;Xcode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Infrastructure&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/aws.sh&#34;&gt;AWS CLI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/docker.sh&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/heroku.sh&#34;&gt;Heroku CLI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/kubernetes.md&#34;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_boxfile.yml&#34;&gt;Nanobox Boxfile&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_cli.sh&#34;&gt;Nanobox CLI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nginx.sh&#34;&gt;Nginx&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/pm2.sh&#34;&gt;PM2&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/ubuntu.sh&#34;&gt;Ubuntu&lt;/a&gt; &lt;/li&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;   &#xA;&lt;h2&gt;🙌🏼 How to Contribute?&lt;/h2&gt; &#xA;&lt;p&gt;You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.&lt;/p&gt; &#xA;&lt;h2&gt;👩‍💻👨‍💻 Our valuable Contributors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/LeCoupa/awesome-cheatsheets/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contributors-img.web.app/image?repo=LeCoupa/awesome-cheatsheets&#34;&gt; &lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>algorithm-visualizer/algorithm-visualizer</title>
    <updated>2022-06-02T02:02:50Z</updated>
    <id>tag:github.com,2022-06-02:/algorithm-visualizer/algorithm-visualizer</id>
    <link href="https://github.com/algorithm-visualizer/algorithm-visualizer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎆Interactive Online Platform that Visualizes Algorithms from Code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Algorithm Visualizer&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Algorithm Visualizer is an interactive online platform that visualizes algorithms from code.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/algorithm-visualizer/algorithm-visualizer/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/algorithm-visualizer/algorithm-visualizer.svg?style=flat-square&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/algorithm-visualizer/algorithm-visualizer/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/algorithm-visualizer/algorithm-visualizer.svg?style=flat-square&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Learning an algorithm gets much easier with visualizing it. Don&#39;t get what we mean? Check it out:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://algorithm-visualizer.org/&#34;&gt;&lt;strong&gt;algorithm-visualizer.org&lt;/strong&gt;&lt;img src=&#34;https://raw.githubusercontent.com/algorithm-visualizer/algorithm-visualizer/master/branding/screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We have multiple repositories under the hood that comprise the website. Take a look at the contributing guidelines in the repository you want to contribute to.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/algorithm-visualizer/algorithm-visualizer&#34;&gt;&lt;strong&gt;&lt;code&gt;algorithm-visualizer&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; is a web app written in React. It contains UI components and interprets commands into visualizations. Check out &lt;a href=&#34;https://raw.githubusercontent.com/algorithm-visualizer/algorithm-visualizer/master/CONTRIBUTING.md&#34;&gt;the contributing guidelines&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/algorithm-visualizer/server&#34;&gt;&lt;strong&gt;&lt;code&gt;server&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; serves the web app and provides APIs that it needs on the fly. (e.g., GitHub sign in, compiling/running code, etc.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/algorithm-visualizer/algorithms&#34;&gt;&lt;strong&gt;&lt;code&gt;algorithms&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; contains visualizations of algorithms shown on the side menu of the website.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/search?q=topic%3Avisualization-library+org%3Aalgorithm-visualizer&amp;amp;type=Repositories&#34;&gt;&lt;strong&gt;&lt;code&gt;tracers.*&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; are visualization libraries written in each supported language. They extract visualizing commands from code.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>