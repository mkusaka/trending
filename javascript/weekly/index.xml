<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-25T01:42:14Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>craftzdog/craftzdog-homepage</title>
    <updated>2022-09-25T01:42:14Z</updated>
    <id>tag:github.com,2022-09-25:/craftzdog/craftzdog-homepage</id>
    <link href="https://github.com/craftzdog/craftzdog-homepage" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My homepage&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Takuya&#39;s Homepage&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.craftz.dog/&#34;&gt;https://www.craftz.dog/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;Watch how I built this website on YouTube:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=bSMZgXzC9AA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/craftzdog/craftzdog-homepage/master/doc/thumb.png&#34; alt=&#34;YouTube thumbnail&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; - A React framework with hybrid static &amp;amp; server rendering, and route pre-fetching, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chakra-ui.com/&#34;&gt;Chakra UI&lt;/a&gt; - A simple, modular and accessible component library for React&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://threejs.org/&#34;&gt;Three.js&lt;/a&gt; - 3D library for JavaScript&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.framer.com/motion/&#34;&gt;Framer Motion&lt;/a&gt; - An animation library for React&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$PROJECT_ROOT&#xA;│   # Page files&#xA;├── pages&#xA;│   # React component files&#xA;├── components&#xA;│   # Non-react modules&#xA;├── lib&#xA;│   # Static files for images and 3d model file&#xA;└── public&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License.&lt;/p&gt; &#xA;&lt;p&gt;You can create your own homepage for free without notifying me by forking this project under the following conditions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add a link to &lt;a href=&#34;https://www.craftz.dog/&#34;&gt;my homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Do not use the 3d voxel dog&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://raw.githubusercontent.com/craftzdog/craftzdog-homepage/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more detail.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Looking for a Markdown note-taking app? Check out my app called Inkdrop:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.inkdrop.app/&#34;&gt;&lt;img src=&#34;https://github.com/craftzdog/dotfiles-public/raw/master/images/inkdrop.png&#34; alt=&#34;Inkdrop&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>djerryz/Sheep_Sheep_Ni</title>
    <updated>2022-09-25T01:42:14Z</updated>
    <id>tag:github.com,2022-09-25:/djerryz/Sheep_Sheep_Ni</id>
    <link href="https://github.com/djerryz/Sheep_Sheep_Ni" rel="alternate"></link>
    <summary type="html">&lt;p&gt;羊了个羊v2 crack - 前端源码与接口分析&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/djerryz/Sheep_Sheep_Ni/main/pic/logo.png&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;p&gt;🐍 &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djerryz/Sheep_Sheep_Ni/main/v1/README.md&#34;&gt;查看v1版本&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;🐍 &lt;a href=&#34;https://mp.weixin.qq.com/s/LfjOqtlYTDwoCYF33nTfxw&#34; target=&#34;_blank&#34;&gt;v2刷榜-视频演示&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🐏了个🐏 - v2&lt;/h1&gt; &#xA;&lt;h2&gt;一、刷日常挑战 (首发)&lt;/h2&gt; &#xA;&lt;p&gt;代码位置在 v2/sheep_crack， 下面是关于分析这款程序的路程， 用时约3小时。&lt;/p&gt; &#xA;&lt;p&gt;🐍 &lt;a href=&#34;https://mp.weixin.qq.com/s/LfjOqtlYTDwoCYF33nTfxw&#34; target=&#34;_blank&#34;&gt;v2刷榜-视频演示&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;1. 分析正常业务逻辑&lt;/h3&gt; &#xA;&lt;p&gt;请求挑战:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GET /sheep/v1/game/map_info_ex?matchType=3&lt;/p&gt; &lt;p&gt;拿到 map_md5 和 map_seed&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;请求游戏地图:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GET /maps/{map_id}.txt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;完成挑战:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;POST /sheep/v1/game/game_over_ex?&lt;/p&gt; &lt;p&gt;提交 MatchPlayInfo&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;查询成绩:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GET /sheep/v1/game/personal_info&lt;/p&gt; &lt;p&gt;通过 daily_count ， today_time 等判断今日挑战完成情况&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. 确认目标&lt;/h3&gt; &#xA;&lt;p&gt;跳过正常的游戏过程，直接构造游戏完成的结果反馈给服务器，以此快速并持续的刷日常挑战完成数&lt;/p&gt; &#xA;&lt;h3&gt;3. 黑盒分析后端处理逻辑&lt;/h3&gt; &#xA;&lt;p&gt;首先，观察重放已成功完成挑战的请求重放是否有效:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;完成挑战，抓包，重放，无效&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;接下来，确认在一天内能否多次成功，若可，代表可以刷:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;完成一次挑战(可以参考下面的篡改方式, 使得游戏变得简单) ， 观察daily_count ， today_time变化，确认服务端认可游戏完成&lt;/li&gt; &#xA; &lt;li&gt;清除本地缓存 &lt;code&gt;Documents\WeChat Files\{wxid}\Applet\{游戏id}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;再次加载游戏， 如果前端有发起&lt;code&gt;/sheep/v1/game/user_rank_info&lt;/code&gt;请求，则丢弃掉&lt;/li&gt; &#xA; &lt;li&gt;再次完成一次挑战， 观察到 daily_count 加 1&lt;/li&gt; &#xA; &lt;li&gt;以上证明单日能是可以多次完成挑战的，这为后续的刷做了铺垫&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;接下来，在不知道MatchPlayInfo的构造情况下，通过改造本地数据，使得游戏变得简单，完成游戏，触发MatchPlayInfo的生成，并推送结果到服务端，观察服务端的处理逻辑:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;通过修改 map_md5 为同一关, 挑战完成无效&lt;/li&gt; &#xA; &lt;li&gt;通过修改 map_map_seed 全为0 , 挑战完成有效&lt;/li&gt; &#xA; &lt;li&gt;通过修改 blockTypeData 使得图像一致, 挑战完成有效&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;最后，确认game_over_ex与map_info_ex是否有前后关系：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击游戏，请求map_info_ex&lt;/li&gt; &#xA; &lt;li&gt;完成游戏，此时抓包，不要打给服务端，再次重放map_info_ex，此时服务端下发了不同的map_seed&lt;/li&gt; &#xA; &lt;li&gt;将完成游戏的包放通给服务端&lt;/li&gt; &#xA; &lt;li&gt;观察到游戏依然顺利完成&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;小结:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;单日内可以多次完成&lt;/li&gt; &#xA; &lt;li&gt;game_over_ex与map_info_ex没有前后关系&lt;/li&gt; &#xA; &lt;li&gt;达成完成任务的关键或者区别，仅在构造出 MatchPlayInfo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. 分析前端构造算法&lt;/h3&gt; &#xA;&lt;p&gt;代码已经提取到v2/index.js：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// 1. 进入游戏 -&amp;gt; 调用加载地图的两个函数 getTodayMap , getLevelMapData, -&amp;gt; 再调用了 beginGameData&#xA;e.prototype.beginGame = function() {&#xA;    var t = this;&#xA;    cc.game.emit(s.EMITKEY.TTSTARTRECORD), this.gameLayer.activeInHierarchy ? console.log(&#34;已经打开 mainLayer 1&#34;) : c.default.getTodayMap(h.default.getInstance().gameType, function() {&#xA;        for (var e = h.default.getInstance().mapMd5s, o = [], n = 0, i = function(i) {&#xA;            c.default.getLevelMapData(e[i], function(a) {&#xA;                n++, o[i] = a, n == e.length &amp;amp;&amp;amp; (t.beginGameData(o), d.default.setGameLevelData(o));&#xA;            });&#xA;        }, a = 0; a &amp;lt; e.length; a++) i(a);&#xA;    });&#xA;}&#xA;&#xA;// 2.1 加载地图&#xA;// getLevelMapData-&amp;gt;&#xA;t.loadMapDataFromLocalStorageOrNetWork = function(e) {&#xA;    return new Promise(function(o, n) {&#xA;        var i = s.STORAGEKEY.GAMEMAP + e, a = t.getItem(i);&#xA;        if (a) o(a); else {&#xA;            var r = &#34;https://cat-match-static.easygame2021.com/maps/&#34; + e + &#34;.txt&#34;;&#xA;            cc.assetManager.loadRemote(r, {&#xA;                ext: &#34;.txt&#34;&#xA;            }&#xA;    });&#xA;}&#xA;// 2.2 加载地图&#xA;// getTodayMap-&amp;gt;&#xA;t.getTodayMap = function(t, e) {&#xA;    p.default.get({&#xA;        url: &#34;/sheep/v1/game/map_info_ex&#34;,&#xA;        params: {&#xA;            matchType: t&#xA;        }&#xA;}&#xA;&#xA;// 3. 处理游戏数据 --&amp;gt; 调用initLevelLayer&#xA;e.prototype.beginGameData = function(t) {&#xA;    var e = this;&#xA;    cc.game.emit(s.EMITKEY.SHOWTRANSITLAYER, function(o) {&#xA;        e.gameLayer.activeInHierarchy ? console.log(&#34;已经打开 mainLayer 2&#34;) : (console.log(&#34;可以打开了 mainLayer&#34;), &#xA;                                                                           e.gameLayer.getComponent(p.default).initLevelLayer(t), e.node.active = !1, o());&#xA;    });&#xA;},&#xA;     &#xA;// 4. 初始等级层? --&amp;gt; 初始化levelDataArray&#xA;e.prototype.initLevelLayer = function(t) {&#xA;&#x9;this.levelDataArray = JSON.parse(JSON.stringify(t));&#xA;&#xA;// 5. 开始挑战 --&amp;gt; 使用 levelDataArray, 并调用initNextLevelMap&#xA;e.prototype.playNextLevelMap = function() {&#xA;&#x9;var e = JSON.parse(JSON.stringify(this.levelDataArray))[this.playLevelNum];&#xA;&#x9;this.gameIsWin = !1, this.gameIsStopFunc(!1), this.adaptScreen(), this.chessboard.getComponent(u.default).initNextLevelMap(e, this),&#xA;&#xA;// 6. 下级地图 --&amp;gt; 调用initBlockNodeLayer&#xA;e.prototype.initNextLevelMap = function(t, e) {&#xA;    this.initBlockNodeLayer(!1), cc.game.emit(l.EMITKEY.SHOWMASKLAYER, 3), this.refreshIndex(), &#xA;&#xA;// 7. initBlockNodeLayer --&amp;gt; 设置cardId&#xA;e.prototype.initBlockNodeLayer = function(t) {&#xA;&#x9;var e = this.nowLevelData.levelData, o = 0;&#xA;    for (var n in e) for (var i in e[n]) e[n][i].cardId = o, o++, t ? this.addBlockFunc(e[n][i], cc.winSize.height) : this.addBlockFunc(e[n][i], 0);&#xA;&#xA;// 8. addOp --&amp;gt; 使用cardId&#xA;addOp(t.cardDataObj.cardId)&#xA;&#xA;// 9. addOp动作填充 operationList&#xA;t.prototype.addOp = function(t, e) {&#xA;&#x9;this.operationList.push(o);&#xA;}&#xA;&#xA;//10. operationList算出p&#xA;for (var u = g.default.getInstance().operationList, p = [], d = 0, h = 0; h &amp;lt; u.length; h++) &#xA;    p.push({&#xA;        chessIndex: u[h].id,&#xA;        timeTag: 0 == d ? 0 : u[h].time - d&#xA;    })&#xA;    d = u[h].time;&#xA;&#xA;// 11. p算出f&#xA;var f = {&#xA;    gameType: g.default.getInstance().gameType,&#xA;    stepInfoList: p&#xA;},&#xA;                     &#xA;// 12. f初始化MatchPlayInfo(), 得到 v&#xA;v = k.protocol.MatchPlayInfo.encode(k.protocol.MatchPlayInfo.create(f)).finish()&#xA;令f_c = create(f) = new t(e) = function t(t) {if (this.stepInfoList = [], t) for (var e = Object.keys(t), o = 0; o &amp;lt; e.length; ++o) null != t[e[o]] &amp;amp;&amp;amp; (this[e[o]] = t[e[o]]);}&#xA;encode(f_c) = for (var o = 0; o &amp;lt; t.stepInfoList.length; ++o) c.protocol.MatchStepInfo.encode(t.stepInfoList[o], e.uint32(34).fork()).ldelim();&#xA;        &#xA;// 13. 通过v算出b&#xA;b = &#34;&#34;, _ = 0; _ &amp;lt; v.length; _++) b += String.fromCharCode(v[_]);&#xA;&#xA;// 14. base64编码b,得到 MatchPlayInfo&#xA;MatchPlayInfo: S.default.base64_encode(b)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;动态调试，在步骤11打断点，观察10生成的p应该是有规律的，能确认p即可确认MatchPlayInfo。&lt;/p&gt; &#xA;&lt;h3&gt;5. 尝试本地构造&lt;/h3&gt; &#xA;&lt;p&gt;分析前端算法，最佳的方式当然是动态调试，目前没有找到比较好的直接去调小程序的方案。这个过程，我也思考到后续可以努力的方向，即如何动态调试小程序:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;小程序基于浏览器内核，基于该层面的调试技巧(附加命令等)?&lt;/li&gt; &#xA; &lt;li&gt;wxapkg 重打包，引入类似webconsole的调试库? -- 目前发现解密后直接篡改是可以执行，但有守护线程检查篡改&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这不是本项目重点，接下来就纯静态的角度，还原出算法。&lt;/p&gt; &#xA;&lt;p&gt;看到关键操作函数是有 e.uint32(8).int32 和 e.uint32(16).int32 等等，开始以为uint32的不同参映射到不同的具体函数，后面匹配了下，发现protobufjs库原生即有这类函数写法, 如 &lt;a href=&#34;https://github.com/dbtcs1/ignite-cli-case-study4/raw/73230d0a99a1093a42c8dd39d8f005abef8544cf/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/tendermint/abci/types.js&#34;&gt;这个git项目&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果足够细心，你会发现代码中有很多特征, 如 &lt;code&gt;prototype&lt;/code&gt;, &lt;code&gt;&#34;./protobuf.min&#34;: &#34;protobuf.min&#34;&lt;/code&gt;等，那么，很显然操作 f 变量的就是来自 protobufjs 里面的函数。&lt;/p&gt; &#xA;&lt;p&gt;通过静态代码，写出如下:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// mkdir sheep_crack &amp;amp;&amp;amp; cd sheep_crack&#xA;// npm install protobufjs --save&#xA;// vim sheep_test.js&#xA;&#xA;const protobufjs = require(&#39;protobufjs&#39;);&#xA;&#xA;/* 基于代码:&#xA;t.encode = function(t, e) {&#xA;   return e || (e = a.create()), null != t.chessIndex &amp;amp;&amp;amp; Object.hasOwnProperty.call(t, &#34;chessIndex&#34;) &amp;amp;&amp;amp; e.uint32(8).int32(t.chessIndex), null != t.timeTag &amp;amp;&amp;amp; Object.hasOwnProperty.call(t, &#34;timeTag&#34;) &amp;amp;&amp;amp; e.uint32(16).int32(t.timeTag), &#xA;e;},&#xA;*/&#xA;function MatchStepInfo_encode(t,e){&#xA;&#x9;e.uint32(8).int32(t.chessIndex)&#xA;&#x9;e.uint32(16).int32(t.timeTag)&#xA;&#x9;return e&#xA;}&#xA;&#xA;// 看到第10和11步，我们直接创建一个特殊值的f&#xA;f = {&#xA;    &#34;gameType&#34;: 0,&#xA;    &#34;stepInfoList&#34;: [&#xA;        {&#xA;            &#34;chessIndex&#34;: 0,&#xA;            &#34;timeTag&#34;: 0&#xA;        }&#xA;    ]&#xA;}&#xA;&#xA;/* 基于代码:&#xA;}, t.encode = function(t, e) {&#xA;if (e || (e = a.create()), null != t.gameType &amp;amp;&amp;amp; Object.hasOwnProperty.call(t, &#34;gameType&#34;) &amp;amp;&amp;amp; e.uint32(8).int32(t.gameType), &#xA;&#x9;null != t.mapId &amp;amp;&amp;amp; Object.hasOwnProperty.call(t, &#34;mapId&#34;) &amp;amp;&amp;amp; e.uint32(16).int32(t.mapId), &#xA;&#x9;null != t.mapSeed &amp;amp;&amp;amp; Object.hasOwnProperty.call(t, &#34;mapSeed&#34;) &amp;amp;&amp;amp; e.uint32(24).int32(t.mapSeed), &#xA;&#x9;null != t.stepInfoList &amp;amp;&amp;amp; t.stepInfoList.length) for (var o = 0; o &amp;lt; t.stepInfoList.length; ++o) &#x9;&#x9;c.protocol.MatchStepInfo.encode(t.stepInfoList[o], e.uint32(34).fork()).ldelim();&#xA; &#x9;return e;&#xA;}&#xA;*/&#xA;t=f&#xA;e = protobufjs.Writer.create()&#xA;e.uint32(8).int32(t.gameType)&#xA;for (var o = 0; o &amp;lt; t.stepInfoList.length; ++o) {&#xA;&#x9;MatchStepInfo_encode(f.stepInfoList[o], e.uint32(34).fork()).ldelim()&#xA;}&#xA;&#xA;v=e.finish()&#xA;b = &#34;&#34;&#xA;for (var _ = 0; _ &amp;lt; v.length; _++){&#xA;&#x9;b += String.fromCharCode(v[_]);&#xA;}&#xA;b = Buffer.from(b).toString(&#39;base64&#39;);&#xA;console.log(b)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;看到sheep_test.js的输出结果和一次正常完成挑战的结果的头部比较，前5个字符只有一个有区别:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/djerryz/Sheep_Sheep_Ni/main/pic/v2_test.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;基本就是八九不离十。&lt;/p&gt; &#xA;&lt;h3&gt;6. 解码MatchPlayInfo&lt;/h3&gt; &#xA;&lt;p&gt;上面是用了一个特殊值的f，但真实的f值实际上要走很大一段代码逻辑，静态看太痛苦了，那么很自然的想到去解码一次成功挑战的MatchPlayInfo，看看完成挑战是如何构造，那么按照其样子去构造，就可以达成目标。&lt;/p&gt; &#xA;&lt;p&gt;通过阅读文档，入门案例和相关源码，了解到protobufjs 有更加优美且常用的使用方式。&lt;/p&gt; &#xA;&lt;p&gt;接下来实践， 还原proto文件结构:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-protobuf&#34;&gt;// cd sheep_crack/ &#xA;// vi yang.proto&#xA;package yang;&#xA;syntax = &#34;proto3&#34;;&#xA;&#xA;// https://developers.google.com/protocol-buffers/docs/proto3&#xA;// 基于代码:&#xA;// o.MatchPlayInfo = function() {&#xA;// return t.prototype.gameType = 0, t.prototype.mapId = 0, t.prototype.mapSeed = 0, t.prototype.stepInfoList = r.emptyArray, t.create = function(e) {&#xA;// case 1: n.gameType = t.int32();  ID号很重要，需要一一对应&#xA;// case 2: n.mapId = t.int32();&#xA;// case 3: n.mapSeed = t.int32();&#xA;// case 4: n.stepInfoList.push(c.protocol.MatchStepInfo.decode(t, t.uint32()));&#xA;message MatchPlayInfo {&#xA;&#x9;int32 gameType = 1; // game_type或者gameType的写法都可以&#xA;&#x9;int32 mapId = 2;&#xA;&#x9;int32 mapSeed = 3;&#xA;&#x9;repeated MatchStepInfo stepInfoList = 4;&#xA;}&#xA;&#xA;// 基于代码:&#xA;// o.MatchStepInfo = function() {&#xA;// return t.prototype.chessIndex = 0, t.prototype.timeTag = 0, t.create = function(e) {&#xA;// case 1: n.chessIndex = t.int32();&#xA;// case 2: n.timeTag = t.int32();&#xA;message MatchStepInfo {&#xA;&#x9;int32 chessIndex = 1;&#xA;&#x9;int32 timeTag = 2;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;解码算法:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// cd sheep_crack/ &#xA;// vi sheep_v2_crack_decode_demo.js&#xA;const protobuf = require(&#39;protobufjs&#39;);&#xA;&#xA;// 输入完成挑战时的MatchPlayInfo&#xA;const success_challenge_playinfo = &#34;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&#34;&#xA;&#xA;protobuf.load(&#34;yang.proto&#34;, function(err, root) {&#xA;    if (err)&#xA;        throw err;&#xA;&#xA;    // 获得 message 类型&#xA;    var MatchPlayInfo = root.lookupType(&#34;yang.MatchPlayInfo&#34;);&#xA;&#x9;var MatchStepInfo = root.lookupType(&#34;yang.MatchStepInfo&#34;);&#xA;    &#xA;    var _debase64 = Buffer.from(success_challenge_playinfo, &#39;base64&#39;);&#xA;&#x9;const message = MatchPlayInfo.decode(_debase64);&#xA;&#x9;console.log(message)&#xA;&#x9;console.log(message.stepInfoList[10])&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;解出来如下:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/djerryz/Sheep_Sheep_Ni/main/pic/decode_demo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;7. 开刷&lt;/h3&gt; &#xA;&lt;p&gt;知道MatchPlayInfo的构成，接下来就可以任意构造MatchPlayInfo完成挑战, 部分逻辑:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var time_array = [&#xA;    {},&#xA;    { chessIndex: 100, timeTag: 303 },&#xA;    ...&#xA;]&#xA;&#xA;var new_time_array = [];&#xA;for (var _ = 0; _ &amp;lt; time_array.length; _++){&#xA;    new_time_array.push(MatchStepInfo.create(time_array[_]))&#xA;}&#xA;&#xA;var payload = { &#xA;    stepInfoList: new_time_array,&#xA;    mapSeed: XXXX,&#xA;    gameType: XXX&#xA;};&#xA;&#xA;var message = MatchPlayInfo.create(payload);&#xA;var buffer = MatchPlayInfo.encode(message).finish();&#xA;&#xA;Buffer.from(buffer).toString(&#39;base64&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;配合一个逻辑缺陷，构造一次MatchPlayInfo即可无限刷，不需要重复构造。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jojoldu/junior-recruit-scheduler</title>
    <updated>2022-09-25T01:42:14Z</updated>
    <id>tag:github.com,2022-09-25:/jojoldu/junior-recruit-scheduler</id>
    <link href="https://github.com/jojoldu/junior-recruit-scheduler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;주니어 개발자 채용 정보&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;주니어 개발자를 위한 취업 정보&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jojoldu/junior-recruit-scheduler/master/README.md&#34;&gt;Korean&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/jojoldu/junior-recruit-scheduler/master/README-en_EN.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/jojoldu/junior-recruit-scheduler/master/README-zh_CN.md&#34;&gt;Chinese&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://jojoldu.tistory.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/author-jojoldu-ff69b4.svg?style=flat-square&#34; alt=&#34;author&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/jojoldu/junior-recruit-scheduler&#34;&gt;&lt;img src=&#34;https://travis-ci.org/jojoldu/junior-recruit-scheduler.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jojoldu/junior-recruit-scheduler/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributors-25-green.svg?style=flat-square&#34; alt=&#34;CONTRIBUTORS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://hits.dwyl.com/jojoldu/junior-recruit-scheduler&#34;&gt;&lt;img src=&#34;http://hits.dwyl.com/jojoldu/junior-recruit-scheduler.svg?sanitize=true&#34; alt=&#34;HitCount&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/jojoldu/junior-recruit-scheduler/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/junior-recruit-scheduler/contributors.svg?width=720&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;이 저장소에 기여해주신 분들입니다.&lt;br&gt; 정말 감사합니다. &lt;span&gt;🙏&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jojoldu/junior-recruit-scheduler/master/images/springboot.jpg&#34; alt=&#34;springboot&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;저의 첫 저서인 &lt;a href=&#34;https://jojoldu.tistory.com/463&#34;&gt;스프링 부트와 AWS로 혼자 구현하는 웹 서비스&lt;/a&gt;가 출간되었습니다.&lt;br&gt; 스프링부트와 AWS로 포트폴리오, 개인 프로젝트를 하고 싶으신 분들께 적극 추천드립니다.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://bit.ly/3bNQ2hA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jojoldu/junior-recruit-scheduler/master/images/youtube.png&#34; alt=&#34;개발바닥 1화&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;개발자 지인과 함께 &lt;a href=&#34;https://bit.ly/3bNQ2hA&#34;&gt;유튜브 채널&lt;/a&gt;을 시작하였습니다.&lt;br&gt; 스타트업에서 개발자로 취업하고 일하는 것에 대해서 이런 저런 관점으로 이야기 해볼까 합니다.&lt;/p&gt; &#xA; &lt;p&gt;여러분의 고민들 (취준생/주니어) 을 받아서 그에 대한 고민 상담도 같이 해보겠습니다 :)&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;1. 소개&lt;/h2&gt; &#xA;&lt;p&gt;주니어 개발자를 위한 &lt;strong&gt;양질의 채용정보&lt;/strong&gt;가 흩어져있는 것 같아 한곳에 모으기 위한 저장소입니다.&lt;br&gt; 인턴/신입/주니어 채용 &amp;amp; 해커톤 일정을 담으려고 합니다.&lt;br&gt; 앞의 일정은 &lt;strong&gt;서류 마감&lt;/strong&gt; 일정입니다.&lt;br&gt; (혹시나 채용이 완료된 것이 확인되면 풀리퀘스트 부탁드립니다.)&lt;/p&gt; &#xA;&lt;h2&gt;2. PR 규칙&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;기간이 정해져 있지 않다면 &lt;strong&gt;채용시까지&lt;/strong&gt;로 해주시면 됩니다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;data/db.json&lt;/strong&gt;도 함께 수정해주셔야 합니다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;db.json은 텔레그램 봇과 &lt;a href=&#34;https://co-duck.com/&#34;&gt;co-duck 사이트&lt;/a&gt;에서 &lt;strong&gt;자동화&lt;/strong&gt;하기 위함입니다.&lt;/li&gt; &#xA;   &lt;li&gt;이후 별도 사이트나 페이스북에서 자동화될 예정입니다.&lt;/li&gt; &#xA;   &lt;li&gt;db.json의 규칙은 &lt;code&gt;yyyy-MM-dd HH:mm:ss&lt;/code&gt; 입니다.&lt;/li&gt; &#xA;   &lt;li&gt;마감 일자만 있다면 시간은 &lt;code&gt;23:59:59&lt;/code&gt; 로 해주세요.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3. 취업 관련 추천 링크&lt;/h2&gt; &#xA;&lt;p&gt;제 블로그에 있는 글 중 취업 관련 추천 글입니다.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://bit.ly/2sFSGim&#34;&gt;3번째 직장에 오기까지&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jojoldu.tistory.com/505&#34;&gt;(2021) 1. 비전공자로 자바 백엔드 개발자 시작하기&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;주니어 개발자분들에게 필요한 기술/세미나 등의 소식을 공유하는 페이스북 페이지&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/devbeginner/&#34;&gt;초보개발자모임&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;4. 채용 (2022)&lt;/h2&gt; &#xA;&lt;p&gt;채용에 올라온 기업들은 모두 &lt;strong&gt;개발자로서 커리어 쌓기가 좋은 회사&lt;/strong&gt;의 &lt;strong&gt;신입/주니어&lt;/strong&gt; 채용을 기준으로 합니다.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;유의미한 트래픽이 발생하고,&lt;br&gt; 코드리뷰, 배포 자동화 등이 구축되어 있고,&lt;br&gt; 코드 품질에 관심이 있는 회사를 얘기합니다.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;잡플래닛 평점 3.3 미만인 회사들은 PR을 주셔도 추가해드릴 수 없습니다.&lt;br&gt; 이 저장소의 목적은 &lt;strong&gt;양질의 취업 정보를 한곳에 모으기 위함&lt;/strong&gt;입니다.&lt;br&gt; &lt;strong&gt;모든 회사의 채용 정보를 담으려는 것이 아닙니다&lt;/strong&gt;.&lt;br&gt; 잡플래닛 평점은 낮지만 정말 추천하고 싶은 회사가 있다면 그 사유를 같이 PR에 남겨주세요.&lt;/p&gt; &#xA;&lt;h3&gt;추천 기업 (마감일)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;[2022.09.05 ~ 2022.09.16 18:00:00] &lt;a href=&#34;https://recruit.webtoonscorp.com/rcrt/view.do?annoId=30000420&#34;&gt;2022 하반기 네이버웹툰 신입 개발자 채용&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[2022.09.01 10:00:00 ~ 2022.09.19 17:00:00] &lt;a href=&#34;https://careers.kakao.com/2023-developer&#34;&gt;2023 카카오 신입 개발자 블라인드 채용&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[2022.09.07 10:00:00 ~ 2022.09.19 17:00:00] &lt;a href=&#34;https://newliner-recruit-2022-2h.com/&#34;&gt;2022 하반기 라인 신입 개발자 채용&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;추천 기업 (수시 &amp;amp; 상시 채용)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://inflab.notion.site/d96215b0d4d44f62ba65c88120c999c5&#34;&gt;인프런 백엔드 / 프론트엔드 신입, 경력 개발자&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://inflab.notion.site/NodeJS-4a7668d2564a4180a0721a2135f97840&#34;&gt;백엔드 개발자 (NodeJS) (신입/경력)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://inflab.notion.site/React-VanillaJS-297e778f28334a50b5e68b8a898de569&#34;&gt;프론트엔드 개발자 (React / VanillaJS) (신입/경력)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://qmit-careers.oopy.io/&#34;&gt;큐엠아이티 백엔드 / 프론트엔드 개발자 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://qmit-careers.oopy.io/2a3ee834-c103-480f-9076-57eeee48d694&#34;&gt;백엔드 개발자 채용 (신입/경력)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://qmit-careers.oopy.io/52fab9af-ef50-4d66-be9c-e1e18bd4bef8&#34;&gt;프론트엔드 개발자 채용 (신입/경력)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://nextunicorn.oopy.io/&#34;&gt;넥스트유니콘 백엔드/프론트엔드 개발자 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;스타트업의 문제를 해결해서 세상을 혁신하는 &lt;a href=&#34;https://www.nextunicorn.kr/&#34;&gt;넥스트유니콘&lt;/a&gt;입니다.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nextunicorn.oopy.io/1df286bb-77c8-4591-ba07-2791296c2129&#34;&gt;프론트엔드 개발자 채용(신입/경력)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nextunicorn.oopy.io/37f9489f-a64c-4845-81e1-71f57772cbf6&#34;&gt;백엔드 개발자 채용(1년차 이상)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://careers.kakao.com/jobs/P-12234&#34;&gt;[브런치/티스토리] Android 앱 개발자(1년차 이상)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://buzzvil.career.greetinghr.com/&#34;&gt;버즈빌 주니어 개발자 (서버/데이터/데브옵스/웹프론트/모바일) 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.buzzvil.com/ko&#34;&gt;회사소개&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://tech.buzzvil.com/&#34;&gt;기술 블로그&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://www.notion.so/crema/CREMA-3cfbd23e20dd4529adbfacfc05175af2&#34;&gt;크리마 Software Engineer&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://careers.kakao.com/jobs/P-11485?utm_source=junior-recruit-scheduler&#34;&gt;카카오 인프라 서비스 플랫폼 개발자 (경력 5년미만)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://toss.im/career/jobs?category=engineering-product&amp;amp;company=%ED%86%A0%EC%8A%A4%ED%8C%80&#34;&gt;토스팀 엔지니어 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/HYxpv8a7I4I&#34;&gt;토스, 루머의 루머의 루머&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://dev-recruit.ab180.co&#34;&gt;AB180 엔지니어 영입중&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;1억 대의 디바이스. 100만 RPM. 하루 10억 건 이상의 이벤트 데이터&lt;/strong&gt;를 다루는 데이터 기업.&lt;br&gt; (GS SHOP 등 &lt;a href=&#34;https://abit.ly/ab180-clients&#34;&gt;100+ 개의 기업&lt;/a&gt;이 제품 사용중)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://abit.ly/ab180-culture&#34;&gt;어떤 문화와 동료를 지향하나요?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dev-recruit.ab180.co/be-data-pipeline&#34;&gt;Backend Engineer - Data Pipeline&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dev-recruit.ab180.co/be-data-serving-api&#34;&gt;BackEnd Engineer - Data Serving API&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dev-recruit.ab180.co/be-platform-api&#34;&gt;BackEnd Engineer - Platform API&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[상시채용] &lt;a href=&#34;https://www.notion.so/codef/fee06e9581f542a4898f803a9a601603&#34;&gt;코드에프 주니어 경력 개발자 채용&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://about.codef.io/#/&#34;&gt;코드에프 서비스 소개&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.notion.so/codef/24b49fbb14c746cb85c9bc090313c16e&#34;&gt;코드에프 문화 소개&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://recruit.buzzni.com/recruit/ai-lab-ai-%eb%b0%b1%ec%97%94%eb%93%9c-%ec%97%94%ec%a7%80%eb%8b%88%ec%96%b4-%ec%a0%84%eb%ac%b8%ec%97%b0%ea%b5%ac%ec%9a%94%ec%9b%90-%ea%b0%80%eb%8a%a5/&#34;&gt;버즈니 AI 백엔드/플랫폼 신입/경력 채용 (전문연구요원 가능)&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://buzzni.com/blog/&#34;&gt;기술 블로그&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://www.notion.so/comento/Front-end-23adb41a65d34ca383d23f049f7b55b9&#34;&gt;코멘토 Front-end 개발자 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ppss.kr/archives/207946&#34;&gt;이재성 대표 인터뷰&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://brunch.co.kr/@comento/120&#34;&gt;CTO 인터뷰&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://brunch.co.kr/@comento/117&#34;&gt;프론트엔드 개발자 인터뷰&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://github.com/gopax/Recruit&#34;&gt;스트리미 엔지니어 채용&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://oilnow.notion.site/070d572ae8d04191bf052135f967ea46&#34;&gt;오일나우 개발자 채용 보러가기&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/%EC%98%A4%EC%9D%BC%EB%82%98%EC%9A%B0-%ED%8C%80-%EB%B8%94%EB%A1%9C%EA%B7%B8&#34;&gt;오일나우 팀 블로그&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://www.notion.so/71edafe219b0432da0b1959f622c9f1a&#34;&gt;스켈터랩스 소프트웨어 엔지니어 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AI 전문 인력이 아니더라도 인터뷰에는 전혀 지장이 없으며, 전문 연구 요원도 상시 채용하고 있습니다.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=uIhKDGz2ENo&amp;amp;t=349s&#34;&gt;스켈터랩스 CEO 인터뷰&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.naver.com/skelterlabs/221860320455&#34;&gt;스켈터랩스 팀 문화 소개&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.skelterlabs.com/ko/news/&#34;&gt;스켈터랩스 뉴스&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://grnh.se/7150da0c3us&#34;&gt;Tridge Software Engineer 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;현존하는 최선의 기술(State of the art technology)들을 집대성하여 구축한 세계에서 가장 신뢰받는 Intelligence Platform 트릿지는 A.T. Kearney, 코스트코, 델몬트, 카길, 월마트, 코카콜라 등 약 200개국 기업, 리서처들이 유용하게 사용하고 있습니다.&lt;/li&gt; &#xA;   &lt;li&gt;기술 적용의 유효성과 임팩트를 최대화함으로써 역사상으로 해결하지 못한 식량자원 무역의 문제를 해결하고 있습니다. 풍부한 경력을 가지고 온 개발자들도 트릿지 서비스의 방대한 정보량에 놀라움을 표현해주셨어요. “최대”의 문제를 “최고”의 팀과 해결하고 싶은 인재를 모십니다.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://swingvy.slite.com/p/note/2FpJguueEPL36XzqznkGfh&#34;&gt;Swingvy Back-end engineer 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.swingvy.com/my/company/careers&#34;&gt;Swingvy careers page&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.swingvy.com/blog-my/whats-it-like-to-work-with-us-as-an-engineer&#34;&gt;What’s it like to work with us as an engineer?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://www.notion.so/techtaka/Backend-Engineer-6b32f56083cf48e7a0d2454f34d8262a&#34;&gt;테크타카(ARGO) 소프트웨어 엔지니어 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.notion.so/techtaka/CEO-3e8eee73a3e64942a2a9a60ff3fc1dbb&#34;&gt;CEO 인터뷰&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.notion.so/techtaka/ARGO-c8480fe7449e4d5dad791fdf42e0abb7&#34;&gt;팀원 이야기&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://www.mfort.co.kr/#ba8c56f46fad442c816127aeb9418d41&#34;&gt;맘시터 백엔드/FE 엔지니어 채용 (Spring/Kotlin)&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.mfort.co.kr/&#34;&gt;맘편한세상 기업소개&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.mfort.co.kr/af72a611-989b-4ade-9a5c-ee411159bc2b&#34;&gt;CTO 인터뷰&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://tech.mfort.co.kr&#34;&gt;기술블로그&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://doodlin.career.greetinghr.com/&#34;&gt;그리팅 경력 무관 개발자 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://career.greetinghr.com/o/NjY2Nw.x-pZslsIqIf6n8MbCGRT-bg8kbU&#34;&gt;프론트엔드 엔지니어 채용 (React) (경력 무관)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://career.greetinghr.com/o/NjY2OA.ScI3Fb42vGPG07gKQ8imUUUIqlc&#34;&gt;그리팅 백엔드 엔지니어 채용 (Node.js) (경력 무관)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://doodlin.career.greetinghr.com&#34;&gt;회사 소개&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;쏘카, 아이디어스, 샌드박스 등&lt;/strong&gt; 국내 유명 스타트업이 사용하는 채용 관리 솔루션을 개발하는 두들린입니다!&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;로켓 성장 스타트업&lt;/strong&gt;에서 함께 기술로 채용을 혁신할 팀원을 찾습니다!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://team.jaranda.kr/backend&#34;&gt;자란다 - 백엔드 엔지니어 (Backend Engineer)&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[자란다] 성인교육 큐레이션 시장이 점차 활성화되고 있는 것처럼, 키즈 교육과 돌봄 시장에서의 붐을 이르키고 있는 에듀테크기업 자란다 입니다.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://team.jaranda.kr/corevalue&#34;&gt;자란다의 핵심 경쟁력&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://team.jaranda.kr/outsiderecruit&#34;&gt;외부 인재 추천제도 &#39;자란다 자란다 잘한다&#39;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지]&lt;a href=&#34;https://typed.biz/career&#34;&gt;비즈니스캔버스 백엔드/프론트엔드 엔지니어 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://businesscanvas.notion.site/Team-Typed-We-re-hiring-e8b8849a7569428eb43a9d911af9ef76&#34;&gt;회사 소개&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.typed.biz/?lang=ko&#34;&gt;제품 소개&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=6AcS5wSRSiQ&#34;&gt;개발자 인터뷰&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=r4CaoI9ryr8&#34;&gt;PM 인터뷰&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UC5TE3eZk_t-OUl-BY-VTK_w/featured&#34;&gt;유튜브 채널&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://channel.io/jobs?utm_source=github&amp;amp;utm_medium=txt-link&amp;amp;utm_campaign=jojoldu&#34;&gt;채널코퍼레이션 - 채널톡 엔지니어 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We make a future classic product! 채팅 CRM 통합 솔루션 &lt;strong&gt;채널톡&lt;/strong&gt;을 만드는 채널코퍼레이션입니다.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;9만개 이상의 기업&lt;/strong&gt;이 선택한 채널톡, 같이 만들어 보실래요?&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://channel.io/ko/team?utm_source=github&amp;amp;utm_medium=txt-link&amp;amp;utm_campaign=jojoldu&#34;&gt;회사 소개&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://channel.io/ko?utm_source=github&amp;amp;utm_medium=txt-link&amp;amp;utm_campaign=jojoldu&#34;&gt;제품 소개&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://channel.io/ko/blog?utm_source=github&amp;amp;utm_medium=txt-link&amp;amp;utm_campaign=jojoldu&#34;&gt;채널톡 블로그&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/c/%EC%B1%84%EB%84%90%ED%86%A1&#34;&gt;유튜브 채널&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://blog.naver.com/bold-9/222544928421&#34;&gt;볼드나인(BOLD9) 소프트웨어 엔지니어 채용 (React / NodeJS)&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://bold-9.com/&#34;&gt;홈페이지&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.naver.com/bold-9/222528579063&#34;&gt;회사소개&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.naver.com/bold-9/222552391789&#34;&gt;백엔드 개발자 인터뷰&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.naver.com/bold-9/222570943274&#34;&gt;프론트엔드 개발자 인터뷰&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://link.ainize.ai/3HZkIZN&#34;&gt;커먼컴퓨터 Software Engineer 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;블록체인 위에 모두를 위한 컴퓨터를 만들고 있는 커먼컴퓨터에서 다음 미래를 같이 만들어갈 갈 분을 찾고 있습니다.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://comcom.ai/&#34;&gt;홈페이지&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ehxt1PDeVG0&#34;&gt;커먼컴퓨터는 이런 미래를 만들고 있어요&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://velog.io/@woomurf/Common-Computer-Summer-Internship-%ED%9B%84%EA%B8%B0&#34;&gt;인턴 후기&lt;/a&gt; (인턴 후, 현재 Software Engineer로 근무 중)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[채용시까지] &lt;a href=&#34;https://career.nexon.com/user/recruit/member/postDetail?joinCorp=NX&amp;amp;reNo=20220237&#34;&gt;넥슨 코리아 개인화개발팀 백엔드 개발(C#) 채용&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;개발 기술에 관심이 높고 배움에 의지가 충만한 주니어를 찾습니다.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://labstechblog.oopy.io/&#34;&gt;인텔리전스랩스 테크 블로그&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;채용 관련 행사 &amp;amp; 교육 코스&lt;/h3&gt; &#xA;&lt;p&gt;채용과 관련된 프로그래밍 대회, 교육 코스, 해커톤 일정, 세미나 등을 포함합니다.&lt;/p&gt; &#xA;&lt;h3&gt;이외 채용정보 얻는 법&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;잡코리아, 사람인 채용 정보는 개인적으로는 추천하지 않습니다&lt;/strong&gt;.&lt;br&gt; 추가로 채용 정보에 복사 &amp;amp; 붙여넣기 한 듯한 양식이나 글이 있다면 거르셔도 됩니다.&lt;br&gt; 그만큼 &lt;strong&gt;채용에 관심이 없는 회사라면 개발자에 대한 인식도 부족&lt;/strong&gt;하다고 보셔야 합니다.&lt;br&gt; 아래는 제가 정기적으로 방문하는 잡플래닛/원티드 검색 조건입니다.&lt;br&gt; 참고하시면 좋을 것 같습니다.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jobplanet.co.kr/job_postings/search?utf8=%E2%9C%93&amp;amp;query=&amp;amp;jp_show_search_result=true&amp;amp;jp_show_search_result_chk=true&amp;amp;occupation_level2_ids%5B%5D=11610&amp;amp;occupation_level2_ids%5B%5D=11604&amp;amp;occupation_level2_ids%5B%5D=11603&amp;amp;industry_level2_ids%5B%5D=709&amp;amp;industry_level2_ids%5B%5D=702&amp;amp;recruitment_type_ids%5B%5D=1&amp;amp;order_by=score&amp;amp;page=1&#34;&gt;잡플래닛 신입 개발자 채용 리스트&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.wanted.co.kr/wdlist/518?referer_id=23685&amp;amp;years=0&#34;&gt;원티드 신입 개발자 채용 리스트&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rocketpunch.com/jobs?military_service=1&amp;amp;q=&#34;&gt;로켓펀치 &#39;병역대체&#39; 채용 리스트&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;5. 신입 개발자 구직 팁&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;취업 팁 외에 다른 팁은 포함하지 않습니다.&lt;/strong&gt;&lt;br&gt; 주니어를 위한 각종 팁은 &lt;a href=&#34;https://www.facebook.com/devbeginner/&#34;&gt;페이스북 페이지&lt;/a&gt;를 참고해주세요.&lt;/p&gt; &#xA;&lt;h3&gt;카카오 코딩 테스트 문제 해설&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;[2021] 카카오 신입 공채 코딩 테스트 &lt;a href=&#34;https://tech.kakao.com/2021/01/25/2021-kakao-recruitment-round-1/&#34;&gt;1차&lt;/a&gt;, &lt;a href=&#34;https://tech.kakao.com/2021/02/16/2021-kakao-recruitment-round-2/&#34;&gt;2차&lt;/a&gt; 해설&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[2020] 카카오 신입 공채 코딩 테스트 &lt;a href=&#34;https://tech.kakao.com/2019/10/02/kakao-blind-recruitment-2020-round1/&#34;&gt;1차&lt;/a&gt;, &lt;a href=&#34;https://tech.kakao.com/2019/10/21/2020-%EC%B9%B4%EC%B9%B4%EC%98%A4-%EB%B8%94%EB%9D%BC%EC%9D%B8%EB%93%9C-%EA%B3%B5%EC%B1%84-2%EC%B0%A8-%EC%98%A4%ED%94%84%EB%9D%BC%EC%9D%B8-%EC%BD%94%EB%94%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%AC%B8/&#34;&gt;2차&lt;/a&gt; 해설&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[2019] 카카오 신입 공채 코딩 테스트 &lt;a href=&#34;http://tech.kakao.com/2018/09/21/kakao-blind-recruitment-for2019-round-1/&#34;&gt;1차&lt;/a&gt;, &lt;a href=&#34;http://tech.kakao.com/2018/10/23/kakao-blind-recruitment-round-2/&#34;&gt;2차&lt;/a&gt; 해설&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[2018] 카카오 코드 페스티벌 &lt;a href=&#34;http://tech.kakao.com/2018/08/09/code-festival-2018-round-1/&#34;&gt;예선전&lt;/a&gt;, &lt;a href=&#34;http://tech.kakao.com/2018/09/12/code-festival-2018-round-2/&#34;&gt;본선&lt;/a&gt; 해설&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[2018] 카카오 블라인드 코딩테스트 &lt;a href=&#34;http://tech.kakao.com/2017/09/27/kakao-blind-recruitment-round-1/&#34;&gt;1차&lt;/a&gt;, &lt;a href=&#34;http://tech.kakao.com/2017/10/24/kakao-blind-recruitment-round-2/&#34;&gt;2차&lt;/a&gt;, &lt;a href=&#34;http://tech.kakao.com/2017/11/14/kakao-blind-recruitment-round-3/&#34;&gt;3차&lt;/a&gt; 해설&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[2017] 카카오 코드 페스티벌 &lt;a href=&#34;http://tech.kakao.com/2017/08/11/code-festival-round-1/&#34;&gt;예선전&lt;/a&gt;, &lt;a href=&#34;http://tech.kakao.com/2017/09/13/code-festival-round-2/&#34;&gt;본선&lt;/a&gt; 해설&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;구직 전반&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://jyami.tistory.com/126&#34;&gt;쟈미님의 공채없이 카카오 개발자 취준기&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://velog.io/@doondoony/%ED%9B%84%EA%B8%B0-%EC%9B%90%ED%8B%B0%EB%93%9C%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%BB%A4%EB%A6%AC%EC%96%B4-%ED%84%B0%EC%B9%98&#34;&gt;원티드와 함께하는 개발자 커리어 터치 참석 후기&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://jojoldu.tistory.com/423&#34;&gt;MS Imagine Cup 국가대표의 스타트업 도전기 - 창업 실패부터 현재 커리어를 만들기까지 - 참석후기&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://jojoldu.tistory.com/398&#34;&gt;마음에 안드는 중소기업에 합격했을때&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://jojoldu.tistory.com/163&#34;&gt;Tech HR - 주니어 개발자와 시니어 개발자의 차이 필독&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://bit.ly/2P8afUH&#34;&gt;OKKY 취준생 Q&amp;amp;A Meet-up 세미나 후기&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://bit.ly/2yqiH7V&#34;&gt;제로 스펙에 가까웠던 듣보잡 개발자의 유명 IT 기업 도전기&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://bit.ly/2LAkFqL&#34;&gt;이종립(aka. 기계인간)님의 SI탈출하기 세미나 by OKKY&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.slideshare.net/EunhyangKim2/ss-87782520&#34;&gt;김은향님의 신입 개발자 이야기&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://milooy.wordpress.com/2018/02/07/moving-job/&#34;&gt;진유림님의 이직 이야기&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://lhb0517.tistory.com/entry/reviewofjojoldu&#34;&gt;이한별님의 구직 이야기&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://zzsza.github.io/diary/2018/10/26/gap-year-and-socar/&#34;&gt;변성윤님의 Gap Year 및 쏘카 이직 이야기&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.notion.so/8a5fb590ae204295adf8117b5f58e32e&#34;&gt;원티드와 함께하는 개발자 커리어 터치&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://luckyyowu.tistory.com/382&#34;&gt;28세 요우님의 개발자 이직 대탐험&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kdinner.tistory.com/58&#34;&gt;강디너의 이직 탐험기&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.sizplay.dev/Interview/%EC%A3%BC%EB%8B%88%EC%96%B4-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%9D%B4%EC%A7%81-%ED%8C%81/&#34;&gt;sizplay의 주니어 프론트엔드 개발자 이직 팁&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;이력서 &amp;amp; 포트폴리오 작성법&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wonny.space/writing/work/engineer-resume&#34;&gt;정원희님의 개발자 이력서 작성하기&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://brunch.co.kr/@wantedlab/43&#34;&gt;원티드랩에서 이야기하는 통과가 잘 되는 이력서 작성법 (신입/경력 포함)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://brunch.co.kr/@seungdols/11&#34;&gt;seungdols님의 신입 자소서 작성법&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://blog.outsider.ne.kr/1234&#34;&gt;Outsider님의 이력서&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://woowabros.github.io/experience/2017/07/17/resume.html&#34;&gt;우아한형제들 구인본님 - 이직 초보 어느 개발자의 이력서 만들기&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://minieetea.com/2021/04/archives/6193&#34;&gt;minieetea님의 잘 정리된 이력서보다 중요한 것&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;면접 팁&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JaeYeopHan/Interview_Question_for_Beginner&#34;&gt;JBee(한재엽)님의 기술면접 자료 Repository&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://taegon.kim/archives/5770&#34;&gt;김태곤님의 신입 프론트엔드 개발자를 위한 면접 조언&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://repo.yona.io/doortts/blog/post/292&#34;&gt;너굴너굴님의 좋은면접자/지원자 되는 방법&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.bloter.net/archives/245110&#34;&gt;네이버 면접 시 듣게 되는 41가지 질문(기사)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.bloter.net/archives/245529&#34;&gt;카카오 면접 시 듣게 되는 70가지 질문(블로터)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.bloter.net/archives/244910&#34;&gt;애플 면접에서 듣게 되는 33가지 질문(기사)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://web.archive.org/web/20170420162138/http://blog.java2game.com/401&#34;&gt;초보팀장의 일기 - 면접을 볼 때마다 하는 질문들&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://sungjk.github.io/2017/06/11/interview-guide.html&#34;&gt;개발자를 채용하면서 느꼈던 것들&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/@jimkimau/%EC%9D%B4%EB%B2%88-%EA%B8%B0%EC%88%A0-%EB%A9%B4%EC%A0%91-%EC%A4%91-%EA%B8%B0%EC%96%B5%EB%82%98%EB%8A%94-%EC%A7%88%EB%AC%B8%EA%B3%BC-%EB%8B%B5%EB%B3%80%EB%93%A4-712daa9a2dc&#34;&gt;이번 기술 면접 중 기억나는 질문과 답변들 (프론트엔드)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/zzsza/Datascience-Interview-Questions&#34;&gt;변성윤님의 Datascience-Interview-Questions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/KimHunJin/Study-Book/tree/master/interview&#34;&gt;1년 동안 면접을 보며 만났던 질문 리스트 (기술)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/KSH-code/Technical-Interview/raw/master/README.md&#34;&gt;직접 경험을 통해 추려낸 공통 질문&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/d-virusss/interview_frontend&#34;&gt;네이버 FE 경력면접 150:1 경쟁률을 뚫은 공부자료&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;기타 정보&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://bit.ly/2QDKlWs&#34;&gt;개발자 채용시 기술검증 어떻게 할 것인가 - 세미나 후기&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://bit.ly/2JEexjS&#34;&gt;2016 KSUG 경력 관리 세미나&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://coderlife.tistory.com/88&#34;&gt;프로그래머의 삶님의 IT 분야의 개발자로 취업할 때 실수하는 몇 가지&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://principlesofknowledge.kr/archives/31414&#34;&gt;피해야 하는 중소기업 거르는 꿀팁&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;추천 도서&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://book.naver.com/bookdb/book_detail.nhn?bid=15064639&#34;&gt;프로그래밍 면접 이렇게 준비한다&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>