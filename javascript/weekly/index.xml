<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-07T01:39:36Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SBoudrias/Inquirer.js</title>
    <updated>2024-07-07T01:39:36Z</updated>
    <id>tag:github.com,2024-07-07:/SBoudrias/Inquirer.js</id>
    <link href="https://github.com/SBoudrias/Inquirer.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of common interactive command line user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;img width=&#34;75px&#34; height=&#34;75px&#34; align=&#34;right&#34; alt=&#34;Inquirer Logo&#34; src=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/assets/inquirer_readme.svg?sanitize=true&#34; title=&#34;Inquirer.js&#34;&gt; &#xA;&lt;h1&gt;Inquirer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@inquirer/prompts&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/@inquirer%2Fprompts.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FSBoudrias%2FInquirer.js?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FSBoudrias%2FInquirer.js.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A collection of common interactive command line user interfaces.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/list.svg?sanitize=true&#34; alt=&#34;List prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Give it a try in your own terminal!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npx @inquirer/demo@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;npm&lt;/th&gt; &#xA;   &lt;th&gt;yarn&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install @inquirer/prompts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add @inquirer/prompts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Inquirer recently underwent a rewrite from the ground up to reduce the package size and improve performance. The previous version of the package is still maintained (though not actively developed), and offered hundreds of community contributed prompts that might not have been migrated to the latest API. If this is what you&#39;re looking for, the &lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/inquirer&#34;&gt;previous package is over here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { input } from &#39;@inquirer/prompts&#39;;&#xA;&#xA;const answer = await input({ message: &#39;Enter your name&#39; });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Prompts&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/input&#34;&gt;Input&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/input.svg?sanitize=true&#34; alt=&#34;Input prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { input } from &#39;@inquirer/prompts&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/input&#34;&gt;See documentation&lt;/a&gt; for usage example and options documentation.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/select&#34;&gt;Select&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/list.svg?sanitize=true&#34; alt=&#34;Select prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { select } from &#39;@inquirer/prompts&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/select&#34;&gt;See documentation&lt;/a&gt; for usage example and options documentation.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/checkbox&#34;&gt;Checkbox&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/checkbox.svg?sanitize=true&#34; alt=&#34;Checkbox prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { checkbox } from &#39;@inquirer/prompts&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/checkbox&#34;&gt;See documentation&lt;/a&gt; for usage example and options documentation.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/confirm&#34;&gt;Confirm&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/confirm.svg?sanitize=true&#34; alt=&#34;Confirm prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { confirm } from &#39;@inquirer/prompts&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/confirm&#34;&gt;See documentation&lt;/a&gt; for usage example and options documentation.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/password&#34;&gt;Password&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/password.svg?sanitize=true&#34; alt=&#34;Password prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { password } from &#39;@inquirer/prompts&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/password&#34;&gt;See documentation&lt;/a&gt; for usage example and options documentation.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/expand&#34;&gt;Expand&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/expand-y.svg?sanitize=true&#34; alt=&#34;Expand prompt closed&#34;&gt; &lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/expand-d.svg?sanitize=true&#34; alt=&#34;Expand prompt expanded&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { expand } from &#39;@inquirer/prompts&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/expand&#34;&gt;See documentation&lt;/a&gt; for usage example and options documentation.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/editor&#34;&gt;Editor&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Launches an instance of the users preferred editor on a temporary file. Once the user exits their editor, the content of the temporary file is read as the answer. The editor used is determined by reading the $VISUAL or $EDITOR environment variables. If neither of those are present, the OS default is used (notepad on Windows, vim on Mac or Linux.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { editor } from &#39;@inquirer/prompts&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/editor&#34;&gt;See documentation&lt;/a&gt; for usage example and options documentation.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/number&#34;&gt;Number&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Very similar to the &lt;code&gt;input&lt;/code&gt; prompt, but with built-in number validation configuration option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { number } from &#39;@inquirer/prompts&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/number&#34;&gt;See documentation&lt;/a&gt; for usage example and options documentation.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/rawlist&#34;&gt;Raw List&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/rawlist.svg?sanitize=true&#34; alt=&#34;Raw list prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { rawlist } from &#39;@inquirer/prompts&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/rawlist&#34;&gt;See documentation&lt;/a&gt; for usage example and options documentation.&lt;/p&gt; &#xA;&lt;h1&gt;Create your own prompts&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/core&#34;&gt;API documentation is over here&lt;/a&gt;, and our &lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/testing&#34;&gt;testing utilities here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Advanced usage&lt;/h1&gt; &#xA;&lt;p&gt;All inquirer prompts are a function taking 2 arguments. The first argument is the prompt configuration (unique to each prompt). The second is providing contextual or runtime configuration.&lt;/p&gt; &#xA;&lt;p&gt;The context options are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;input&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;NodeJS.ReadableStream&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;The stdin stream (defaults to &lt;code&gt;process.stdin&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;output&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;NodeJS.WritableStream&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;The stdout stream (defaults to &lt;code&gt;process.stdout&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clearPromptOnDone&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;If true, we&#39;ll clear the screen after the prompt is answered&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { confirm } from &#39;@inquirer/prompts&#39;;&#xA;&#xA;const allowEmail = await confirm(&#xA;  { message: &#39;Do you allow us to send you email?&#39; },&#xA;  {&#xA;    output: new Stream.Writable({&#xA;      write(chunk, _encoding, next) {&#xA;        // Do something&#xA;        next();&#xA;      },&#xA;    }),&#xA;    clearPromptOnDone: true,&#xA;  },&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Canceling prompt&lt;/h2&gt; &#xA;&lt;p&gt;All prompt functions are returning a cancelable promise. This special promise type has a &lt;code&gt;cancel&lt;/code&gt; method that&#39;ll cancel and cleanup the prompt.&lt;/p&gt; &#xA;&lt;p&gt;On calling &lt;code&gt;cancel&lt;/code&gt;, the answer promise will become rejected.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { confirm } from &#39;@inquirer/prompts&#39;;&#xA;&#xA;const answer = confirm(...); // note: for this you cannot use `await`&#xA;&#xA;answer.cancel();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Recipes&lt;/h1&gt; &#xA;&lt;h2&gt;Get answers in an object&lt;/h2&gt; &#xA;&lt;p&gt;When asking many questions, you might not want to keep one variable per answer everywhere. In which case, you can put the answer inside an object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { input, confirm } from &#39;@inquirer/prompts&#39;;&#xA;&#xA;const answers = {&#xA;  firstName: await input({ message: &#34;What&#39;s your first name?&#34; }),&#xA;  allowEmail: await confirm({ message: &#39;Do you allow us to send you email?&#39; }),&#xA;};&#xA;&#xA;console.log(answers.firstName);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ask a question conditionally&lt;/h2&gt; &#xA;&lt;p&gt;Maybe some questions depend on some other question&#39;s answer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { input, confirm } from &#39;@inquirer/prompts&#39;;&#xA;&#xA;const allowEmail = await confirm({ message: &#39;Do you allow us to send you email?&#39; });&#xA;&#xA;let email;&#xA;if (allowEmail) {&#xA;  email = await input({ message: &#39;What is your email address&#39; });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get default value after timeout&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { setTimeout } from &#39;node:timers/promises&#39;;&#xA;import { input } from &#39;@inquirer/prompts&#39;;&#xA;&#xA;const ac = new AbortController();&#xA;const prompt = input({&#xA;  message: &#39;Enter a value (timing out in 5 seconds)&#39;,&#xA;});&#xA;&#xA;prompt&#xA;  .finally(() =&amp;gt; {&#xA;    ac.abort();&#xA;  })&#xA;  // Silencing the cancellation error.&#xA;  .catch(() =&amp;gt; {});&#xA;&#xA;const defaultValue = setTimeout(5000, &#39;timeout&#39;, { signal: ac.signal }).then(() =&amp;gt; {&#xA;  prompt.cancel();&#xA;  return &#39;Timed out!&#39;;&#xA;});&#xA;&#xA;const answer = await Promise.race([defaultValue, prompt]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using as pre-commit/git hooks, or scripts&lt;/h2&gt; &#xA;&lt;p&gt;By default scripts ran from tools like &lt;code&gt;husky&lt;/code&gt;/&lt;code&gt;lint-staged&lt;/code&gt; might not run inside an interactive shell. In non-interactive shell, Inquirer cannot run, and users cannot send keypress events to the process.&lt;/p&gt; &#xA;&lt;p&gt;For it to work, you must make sure you start a &lt;code&gt;tty&lt;/code&gt; (or &#34;interactive&#34; input stream.)&lt;/p&gt; &#xA;&lt;p&gt;If those scripts are set within your &lt;code&gt;package.json&lt;/code&gt;, you can define the stream like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;precommit&#34;: &#34;my-script &amp;lt; /dev/tty&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or if in a shell script file, you&#39;ll do it like so: (on Windows that&#39;s likely your only option)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/sh&#xA;exec &amp;lt; /dev/tty&#xA;&#xA;node my-script.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Wait for config&lt;/h2&gt; &#xA;&lt;p&gt;Maybe some question configuration require to await a value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { confirm } from &#39;@inquirer/prompts&#39;;&#xA;&#xA;const answer = await confirm({ message: await getMessage() });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Community prompts&lt;/h1&gt; &#xA;&lt;p&gt;If you created a cool prompt, &lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/edit/master/README.md&#34;&gt;send us a PR adding it&lt;/a&gt; to the list below!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pgibler/inquirer-interactive-list-prompt&#34;&gt;&lt;strong&gt;Interactive List Prompt&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Select a choice either with arrow keys + Enter or by pressing a key associated with a choice.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;? Choose an option:&#xA;&amp;gt;   Run command (D)&#xA;    Quit (Q)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zenithlight/inquirer-action-select&#34;&gt;&lt;strong&gt;Action Select Prompt&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Choose an item from a list and choose an action to take by pressing a key.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;? Choose a file Open &amp;lt;O&amp;gt; Edit &amp;lt;E&amp;gt; Delete &amp;lt;X&amp;gt;&#xA;❯ image.png&#xA;  audio.mp3&#xA;  code.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Bartheleway/inquirer-table-multiple&#34;&gt;&lt;strong&gt;Table Multiple Prompt&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Select multiple answer from a table display.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Choose between choices? (Press &amp;lt;space&amp;gt; to select, &amp;lt;Up and Down&amp;gt; to move rows,&#xA;&amp;lt;Left and Right&amp;gt; to move columns)&#xA;&#xA;┌──────────┬───────┬───────┐&#xA;│ 1-2 of 2 │ Yes?  │ No?   |&#xA;├──────────┼───────┼───────┤&#xA;│ Choice 1 │ [ ◯ ] │   ◯   |&#xA;├──────────┼───────┼───────┤&#xA;│ Choice 2 │   ◯   │   ◯   |&#xA;└──────────┴───────┴───────┘&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/skarahoda/inquirer-toggle&#34;&gt;&lt;strong&gt;Toggle Prompt&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Confirm with a toggle. Select a choice with arrow keys + Enter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;? Do you want to continue? no / yes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/th0r/inquirer-sortable-checkbox&#34;&gt;&lt;strong&gt;Sortable Checkbox Prompt&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; The same as built-in checkbox prompt, but also allowing to reorder choices using ctrl+up/down.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;? Which PRs and in what order would you like to merge? (Press &amp;lt;space&amp;gt; to select, &amp;lt;a&amp;gt; to toggle all, &amp;lt;i&amp;gt; to invert selection, &amp;lt;ctrl+up&amp;gt; to move item up, &amp;lt;ctrl+down&amp;gt; to move item down, and &amp;lt;enter&amp;gt; to proceed)&#xA;❯ ◯ PR 1&#xA;  ◯ PR 2&#xA;  ◯ PR 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jeffwcx/inquirer-select-pro&#34;&gt;&lt;strong&gt;Multi Select Prompt&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An inquirer select that supports multiple selections and filtering/searching.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;? Choose your OS, IDE, PL, etc. (Press &amp;lt;tab&amp;gt; to select/deselect, &amp;lt;backspace&amp;gt; to remove selected&#xA;option, &amp;lt;enter&amp;gt; to select option)&#xA;&amp;gt;&amp;gt;  vue&#xA;&amp;gt;[ ] vue&#xA; [ ] vuejs&#xA; [ ] fuelphp&#xA; [ ] venv&#xA; [ ] vercel&#xA; (Use arrow keys to reveal more options)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Copyright (c) 2023 Simon Boudrias (twitter: &lt;a href=&#34;https://twitter.com/Vaxilart&#34;&gt;@vaxilart&lt;/a&gt;)&lt;br&gt; Licensed under the MIT license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kkevsekk1/AutoX</title>
    <updated>2024-07-07T01:39:36Z</updated>
    <id>tag:github.com,2024-07-07:/kkevsekk1/AutoX</id>
    <link href="https://github.com/kkevsekk1/AutoX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A UiAutomator on android, does not need root access(安卓平台上的JavaScript自动化工具)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Auto.js And Autox.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kkevsekk1/AutoX/dev-test/README_en.md&#34;&gt;English Document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;一个支持无障碍服务的Android平台上的JavaScript 运行环境 和 开发环境，其发展目标是类似JsBox和Workflow。&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;由于&lt;a href=&#34;https://github.com/hyb1996&#34;&gt;原作者&lt;/a&gt; 不再维护 Auto.js 项目 我计划在原来基础上继续维护者项目，本项目从&lt;a href=&#34;https://github.com/hyb1996/Auto.js&#34;&gt;autojs&lt;/a&gt; 并将原项目命名为Autox.js。 你现在看的是原4.1版基础上的项目，后面我将针对项目本身如何开发、运行的进行介绍，欢迎更多开发者参与这个项目维护升级， 最新的&lt;a href=&#34;https://github.com/kkevsekk1/AutoX&#34;&gt;Autox.js地址&lt;/a&gt;, 文档中很多原项目路径， 在原项目没有删除的情况下我并不打算替换掉，以表对于原作者的尊重。这篇文档里有加密相关的内容可能和实际运行情况有冲突， 如果你希望写的代码加密保护知识产权，请参考项目 &lt;a href=&#34;https://github.com/kkevsekk1/webpack-autojs&#34;&gt;https://github.com/kkevsekk1/webpack-autojs&lt;/a&gt; 我会逐步完善更新，程序代码，尽可能保持一致。&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;本项目从&lt;a href=&#34;https://github.com/hyb1996/Auto.js&#34;&gt;hyb1996&lt;/a&gt; autojs 获得,并命名为Autox.js （autojs 修改版本）， 你现在看的是原4.1版本基础上的项目， 后面我们将针对项目本身如何开发、运行的进行介绍，欢迎更多开发者参与这个项目维护升级。&lt;a href=&#34;https://github.com/hyb1996/Auto.js&#34;&gt;hyb1996&lt;/a&gt;采用的 &lt;a href=&#34;https://github.com/hyb1996/NoRootScriptDroid/raw/master/LICENSE.md&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt; +&lt;strong&gt;非商业性使用&lt;/strong&gt;，出于多种因素考虑， 本产品采用 &lt;a href=&#34;https://opensource.org/licenses/GPL-2.0&#34;&gt;GPL-V2&lt;/a&gt; 许可证， 无论是其他贡献者，还是使用该产品，均需按照 MPL-2.0+非商业性使用 和 GPL-V2 的相关要求使用。&lt;/p&gt; &#xA;&lt;p&gt;关于两种协议：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GPL-V2&lt;a href=&#34;https://opensource.org/license/gpl-2-0/&#34;&gt;https://opensource.org/licenses/GPL-2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MPL-2 (&lt;a href=&#34;https://www.mozilla.org/MPL/2.0&#34;&gt;https://www.mozilla.org/MPL/2.0&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;现在的Autox.js：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Autox.js文档： &lt;a href=&#34;http://doc.autoxjs.com/&#34;&gt;http://doc.autoxjs.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;开源地址 &lt;a href=&#34;https://github.com/kkevsekk1/AutoX&#34;&gt;https://github.com/kkevsekk1/AutoX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;pc端开发&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=aaroncheng.auto-js-vsce-fixed&#34;&gt;VS Code 插件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;官方论坛： &lt;a href=&#34;http://www.autoxjs.com&#34;&gt;www.autoxjs.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;autoxjs&lt;a href=&#34;https://raw.githubusercontent.com/kkevsekk1/AutoX/dev-test/CHANGELOG.md&#34;&gt;更新日志&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;欢迎点赞&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#kkevsekk1/AutoX&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=kkevsekk1/AutoX&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Autox.js下载地址：&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kkevsekk1/AutoX/releases&#34;&gt;https://github.com/kkevsekk1/AutoX/releases&lt;/a&gt;&lt;br&gt; 如果下载过慢可以右键复制 Release Assets 中APK文件的链接地址，粘贴到 &lt;a href=&#34;http://toolwa.com/github/&#34;&gt;http://toolwa.com/github/&lt;/a&gt; 等github加速网站下载&lt;/p&gt; &#xA;&lt;h4&gt;APK版本说明：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;universal: 通用版（不在乎安装包大小/懒得选就用这个版本，包含以下2种CPU架构so）&lt;/li&gt; &#xA; &lt;li&gt;armeabi-v7a: 32位ARM设备（备用机首选）&lt;/li&gt; &#xA; &lt;li&gt;arm64-v8a: 64位ARM设备（主流旗舰机）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;特性&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;由无障碍服务实现的简单易用的自动操作函数&lt;/li&gt; &#xA; &lt;li&gt;悬浮窗录制和运行&lt;/li&gt; &#xA; &lt;li&gt;更专业&amp;amp;强大的选择器API，提供对屏幕上的控件的寻找、遍历、获取信息、操作等。类似于Google的UI测试框架UiAutomator，您也可以把他当做移动版UI测试框架使用&lt;/li&gt; &#xA; &lt;li&gt;采用JavaScript为脚本语言，并支持代码补全、变量重命名、代码格式化、查找替换等功能，可以作为一个JavaScript IDE使用&lt;/li&gt; &#xA; &lt;li&gt;支持使用e4x编写界面，并可以将JavaScript打包为apk文件，您可以用它来开发小工具应用&lt;/li&gt; &#xA; &lt;li&gt;支持使用Root权限以提供更强大的屏幕点击、滑动、录制功能和运行shell命令。录制录制可产生js文件或二进制文件，录制动作的回放比较流畅&lt;/li&gt; &#xA; &lt;li&gt;提供截取屏幕、保存截图、图片找色、找图等函数&lt;/li&gt; &#xA; &lt;li&gt;可作为Tasker插件使用，结合Tasker可胜任日常工作流&lt;/li&gt; &#xA; &lt;li&gt;带有界面分析工具，类似Android Studio的LayoutInspector，可以分析界面层次和范围、获取界面上的控件信息的&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;本软件与按键精灵等软件不同，主要区别是：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Auto.js主要以自动化、工作流为目标，更多地是方便日常生活工作，例如启动游戏时自动屏蔽通知、一键与特定联系人微信视频（知乎上出现过该问题，老人难以进行复杂的操作和子女进行微信视频）等&lt;/li&gt; &#xA; &lt;li&gt;Auto.js兼容性更好。以坐标为基础的按键精灵、脚本精灵很容易出现分辨率问题，而以控件为基础的Auto.js则没有这个问题&lt;/li&gt; &#xA; &lt;li&gt;Auto.js执行大部分任务不需要root权限。只有需要精确坐标点击、滑动的相关函数才需要root权限&lt;/li&gt; &#xA; &lt;li&gt;Auto.js可以提供界面编写等功能，不仅仅是作为一个脚本软件而存在&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;autojs信息&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;官方论坛： &lt;a href=&#34;http://www.autojs.org&#34;&gt;autojs.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;文档：可在&lt;a href=&#34;https://hyb1996.github.io/AutoJs-Docs/&#34;&gt;这里&lt;/a&gt;查看在线文档。目前文档仍然不完善。&lt;/li&gt; &#xA; &lt;li&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;示例：可在&lt;a href=&#34;https://github.com/hyb1996/NoRootScriptDroid/tree/master/app/src/main/assets/sample&#34;&gt;这里&lt;/a&gt;查看一些示例，或者直接在应用内查看和运行。&lt;/p&gt; &#xA;&lt;h3&gt;架构图&lt;/h3&gt; &#xA;&lt;p&gt;待补充，不过是否有人真对此感兴趣？欢迎联系我交流&lt;/p&gt; &#xA;&lt;h2&gt;关于License&lt;/h2&gt; &#xA;&lt;h5&gt;本产品采用 &lt;a href=&#34;https://opensource.org/licenses/GPL-2.0&#34;&gt;GPL-V2&lt;/a&gt; 许可证&lt;/h5&gt; &#xA;&lt;h5&gt;由于历史原因还得遵循&lt;a href=&#34;https://github.com/hyb1996/Auto.js&#34;&gt;autojs项目&lt;/a&gt;的协议：&lt;/h5&gt; &#xA;&lt;p&gt;基于&lt;a href=&#34;https://github.com/hyb1996/NoRootScriptDroid/raw/master/LICENSE.md&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt;并附加以下条款：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;非商业性使用&lt;/strong&gt; — 不得将此项目及其衍生的项目的源代码和二进制产品用于任何商业和盈利用途&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;本Autox.js能不能采用GPL-V2?&lt;/h4&gt; &#xA;&lt;p&gt;关于GPL-V2 应该很容易理解， 著名linux 采用该许可证。但是对于MPL-2.0 有非常多的文章都是停留在MPL-1.1 的版本，对非常多国内开发者造成困扰, 这是一篇比较标准&lt;a href=&#34;https://github.com/rachelzhang1/MPL2.0_zh-CN/raw/93d2feec60d8b0b5a54a1843c866994af4610d4f/Mozilla_Public_License_2.0_Simplified_Chinese_Reference.txt&#34;&gt;译文&lt;/a&gt; 有兴趣可以研究一下。&lt;/p&gt; &#xA;&lt;h4&gt;代码贡献者需要注意：&lt;/h4&gt; &#xA;&lt;p&gt;原文中没人声明license 即为MPL2.0 ,新加文件或修改（仅限于修你自己的）代码采用GPL-V2，需要做相关声明。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// SPDX-License-Identifier: GPL-2.0&#xA;// 申明你的版权&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;其他人使用Autox.js，做深度开发请注意&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果你使用了带有GPL-2.0 声明的代码 或编译出来的二进制。你需要开源你所有代码。&lt;/li&gt; &#xA; &lt;li&gt;如果你仅使用了MPL-2.0 的东西，你需要开源你修改过的相关代码。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;抛开本产品谈 开源和商业&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;开源不等于随意使用，开源也不等于禁止商用！&lt;/li&gt; &#xA; &lt;li&gt;开源东西可以商用，但你需要按规定开源！&lt;/li&gt; &#xA; &lt;li&gt;商用的产品可以是开源的，比如redhat！&lt;/li&gt; &#xA; &lt;li&gt;不按开源协议使用开源产品，那可了解openwrt的来源，以及近几年国内的侵权案例！&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;关于其他人开发的js脚本，在这上面运行。是否需要遵循GPL-2.0进行开源&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;那是你的自由，不受这协议限制，如同linux 运行软件一样&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;使用本产品或autojs 产品是否可以商用?&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本产品 能不能商用，取决于 原来autojs，因为目前很多功能和代码版权归autojs 所有。&lt;/li&gt; &#xA; &lt;li&gt;autojs 能不能商用,取决于你对于附带的 “ &lt;strong&gt;非商业性使用&lt;/strong&gt; ” 的理解和其法律效益。&lt;/li&gt; &#xA; &lt;li&gt;反正本产品不会拿autojs 进行商用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;编译相关：&lt;/h3&gt; &#xA;&lt;p&gt;环境要求:&lt;code&gt;jdk&lt;/code&gt;版本17以上&lt;/p&gt; &#xA;&lt;p&gt;命令说明：在项目根目录下运行命令，如果使用 Windows powerShell &amp;lt; 7.0，请使用包含 &#34;;&#34; 的命令&lt;/p&gt; &#xA;&lt;h5&gt;本地安装调试版本到设备：&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew app:buildDebugTemplateApp &amp;amp;&amp;amp; ./gradlew app:assembleV6Debug &amp;amp;&amp;amp; ./gradlew app:installV6Debug&#xA;#或&#xA;./gradlew app:buildDebugTemplateApp ; ./gradlew app:assembleV6Debug ; ./gradlew app:installV6Debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;生成的调试版本APK文件在 app/build/outputs/apk/v6/debug 下，使用默认签名&lt;/p&gt; &#xA;&lt;h5&gt;本地编译发布版本：&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew app:buildTemplateApp &amp;amp;&amp;amp; ./gradlew inrt:cp2APP &amp;amp;&amp;amp; ./gradlew app:assembleV6&#xA;#或&#xA;./gradlew app:buildTemplateApp ; ./gradlew inrt:cp2APP ; ./gradlew app:assembleV6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;生成的是未签名的APK文件，在 app/build/outputs/apk/v6/release 下，需要签名后才能安装&lt;/p&gt; &#xA;&lt;h5&gt;本地 Android Studio 运行调试版本到设备：&lt;/h5&gt; &#xA;&lt;p&gt;先运行以下命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew app:buildDebugTemplateApp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;再点击 Android Studio 运行按钮&lt;/p&gt; &#xA;&lt;h5&gt;本地 Android Studio 编译发布版本并签名：&lt;/h5&gt; &#xA;&lt;p&gt;先运行以下命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew app:buildTemplateApp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;再点击 Android Studio 菜单 &#34;Build&#34; -&amp;gt; &#34;Generate Signed Bundle /APK...&#34; -&amp;gt; 勾选&#34;APK&#34; -&amp;gt; &#34;Next&#34; -&amp;gt; 选择或新建证书 -&amp;gt; &#34;Next&#34; -&amp;gt; 选择&#34;v6Release&#34; -&amp;gt; &#34;Finish&#34; 生成的APK文件，在 app/v6/release 下&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wg-easy/wg-easy</title>
    <updated>2024-07-07T01:39:36Z</updated>
    <id>tag:github.com,2024-07-07:/wg-easy/wg-easy</id>
    <link href="https://github.com/wg-easy/wg-easy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The easiest way to run WireGuard VPN + Web-based Admin UI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WireGuard Easy&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wg-easy/wg-easy/actions/workflows/deploy.yml&#34;&gt;&lt;img src=&#34;https://github.com/wg-easy/wg-easy/actions/workflows/deploy.yml/badge.svg?branch=production&#34; alt=&#34;Build &amp;amp; Publish Docker Image to Docker Hub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wg-easy/wg-easy/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/wg-easy/wg-easy/actions/workflows/lint.yml/badge.svg?branch=master&#34; alt=&#34;Lint&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/weejewel/wg-easy.svg?sanitize=true&#34; alt=&#34;Docker&#34;&gt; &lt;a href=&#34;https://github.com/sponsors/WeeJeWel&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/weejewel&#34; alt=&#34;Sponsor&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/wg-easy/wg-easy&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You have found the easiest way to install &amp;amp; manage WireGuard on any Linux host!&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wg-easy/wg-easy/master/assets/screenshot.png&#34; width=&#34;802&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All-in-one: WireGuard + Web UI.&lt;/li&gt; &#xA; &lt;li&gt;Easy installation, simple to use.&lt;/li&gt; &#xA; &lt;li&gt;List, create, edit, delete, enable &amp;amp; disable clients.&lt;/li&gt; &#xA; &lt;li&gt;Show a client&#39;s QR code.&lt;/li&gt; &#xA; &lt;li&gt;Download a client&#39;s configuration file.&lt;/li&gt; &#xA; &lt;li&gt;Statistics for which clients are connected.&lt;/li&gt; &#xA; &lt;li&gt;Tx/Rx charts for each connected client.&lt;/li&gt; &#xA; &lt;li&gt;Gravatar support.&lt;/li&gt; &#xA; &lt;li&gt;Automatic Light / Dark Mode&lt;/li&gt; &#xA; &lt;li&gt;Multilanguage Support&lt;/li&gt; &#xA; &lt;li&gt;UI_TRAFFIC_STATS (default off)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A host with a kernel that supports WireGuard (all modern kernels).&lt;/li&gt; &#xA; &lt;li&gt;A host with Docker installed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;p&gt;We provide more then 1 docker image to get, this will help you decide which one is best for you.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;tag&lt;/th&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;production&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ghcr.io/wg-easy/wg-easy:latest&lt;/code&gt; or &lt;code&gt;ghcr.io/wg-easy/wg-easy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable as possbile get bug fixes quickly when needed, deployed against &lt;code&gt;production&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;13&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;production&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ghcr.io/wg-easy/wg-easy:13&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;same as latest, stick to a version tag.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;nightly&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;master&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ghcr.io/wg-easy/wg-easy:nightly&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;mostly unstable gets frequent package and code updates, deployed against &lt;code&gt;master&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;development&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;pull requests&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ghcr.io/wg-easy/wg-easy:development&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;used for development, testing code from PRs before landing into &lt;code&gt;master&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;1. Install Docker&lt;/h3&gt; &#xA;&lt;p&gt;If you haven&#39;t installed Docker yet, install it by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sSL https://get.docker.com | sh&#xA;sudo usermod -aG docker $(whoami)&#xA;exit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And log in again.&lt;/p&gt; &#xA;&lt;h3&gt;2. Run WireGuard Easy&lt;/h3&gt; &#xA;&lt;p&gt;To automatically install &amp;amp; run wg-easy, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  docker run -d \&#xA;  --name=wg-easy \&#xA;  -e LANG=de \&#xA;  -e WG_HOST=&amp;lt;🚨YOUR_SERVER_IP&amp;gt; \&#xA;  -e PASSWORD_HASH=&amp;lt;🚨YOUR_ADMIN_PASSWORD_HASH&amp;gt; \&#xA;  -e PORT=51821 \&#xA;  -e WG_PORT=51820 \&#xA;  -v ~/.wg-easy:/etc/wireguard \&#xA;  -p 51820:51820/udp \&#xA;  -p 51821:51821/tcp \&#xA;  --cap-add=NET_ADMIN \&#xA;  --cap-add=SYS_MODULE \&#xA;  --sysctl=&#34;net.ipv4.conf.all.src_valid_mark=1&#34; \&#xA;  --sysctl=&#34;net.ipv4.ip_forward=1&#34; \&#xA;  --restart unless-stopped \&#xA;  ghcr.io/wg-easy/wg-easy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;💡 Replace &lt;code&gt;YOUR_SERVER_IP&lt;/code&gt; with your WAN IP, or a Dynamic DNS hostname.&lt;/p&gt; &#xA; &lt;p&gt;💡 Replace &lt;code&gt;YOUR_ADMIN_PASSWORD_HASH&lt;/code&gt; with a bcrypt password hash to log in on the Web UI. See How_to_generate_an_bcrypt_hash.md for know how generate the hash.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The Web UI will now be available on &lt;code&gt;http://0.0.0.0:51821&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;💡 Your configuration files will be saved in &lt;code&gt;~/.wg-easy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;WireGuard Easy can be launched with Docker Compose as well - just download &lt;a href=&#34;https://raw.githubusercontent.com/wg-easy/wg-easy/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt;, make necessary adjustments and execute &lt;code&gt;docker compose up --detach&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;3. Sponsor&lt;/h3&gt; &#xA;&lt;p&gt;Are you enjoying this project? &lt;a href=&#34;https://github.com/sponsors/WeeJeWel&#34;&gt;Buy Emile a beer!&lt;/a&gt; 🍻&lt;/p&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;p&gt;These options can be configured by setting environment variables using &lt;code&gt;-e KEY=&#34;VALUE&#34;&lt;/code&gt; in the &lt;code&gt;docker run&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Env&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;51821&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;6789&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TCP port for Web UI.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WEBUI_HOST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0.0.0.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;IP address web UI binds to.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PASSWORD_HASH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$2y$05$Ci...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;When set, requires a password when logging in to the Web UI. See &lt;a href=&#34;https://raw.githubusercontent.com/wg-easy/wg-easy/master/%22https://github.com/wg-easy/wg-easy/raw/master/How_to_generate_an_bcrypt_hash.md%22&#34;&gt;How to generate an bcrypt hash.md&lt;/a&gt; for know how generate the hash.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PASSWORD&lt;/code&gt; (deprecated)&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;foobar123&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;When set, requires a password when logging in to the Web UI. &lt;em&gt;(Not used if &lt;code&gt;PASSWORD_HASH&lt;/code&gt; is set)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_HOST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;vpn.myserver.com&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The public hostname of your VPN server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_DEVICE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;eth0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ens6f0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ethernet device the wireguard traffic should be forwarded through.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;51820&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;12345&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The public UDP port of your VPN server. WireGuard will listen on that (othwise default) inside the Docker container.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_CONFIG_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;51820&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;12345&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The UDP port used on &lt;a href=&#34;https://github.com/adriy-be/homeassistant-addons-jdeath/tree/main/wgeasy&#34;&gt;Home Assistent Plugin&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_MTU&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1420&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The MTU the clients will use. Server uses default WG MTU.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_PERSISTENT_KEEPALIVE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Value in seconds to keep the &#34;connection&#34; open. If this value is 0, then connections won&#39;t be kept alive.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_DEFAULT_ADDRESS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;10.8.0.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;10.6.0.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Clients IP address range.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_DEFAULT_DNS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1.1.1.1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;8.8.8.8, 8.8.4.4&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;DNS server clients will use. If set to blank value, clients will not use any DNS.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_ALLOWED_IPS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0.0.0.0/0, ::/0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;192.168.15.0/24, 10.0.1.0/24&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allowed IPs clients will use.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_PRE_UP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://github.com/wg-easy/wg-easy/raw/master/src/config.js#L19&#34;&gt;config.js&lt;/a&gt; for the default value.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_POST_UP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;iptables ...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://github.com/wg-easy/wg-easy/raw/master/src/config.js#L20&#34;&gt;config.js&lt;/a&gt; for the default value.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_PRE_DOWN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://github.com/wg-easy/wg-easy/raw/master/src/config.js#L27&#34;&gt;config.js&lt;/a&gt; for the default value.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_POST_DOWN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;iptables ...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://github.com/wg-easy/wg-easy/raw/master/src/config.js#L28&#34;&gt;config.js&lt;/a&gt; for the default value.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LANG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;de&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web UI language (Supports: en, ua, ru, tr, no, pl, fr, de, ca, es, ko, vi, nl, is, pt, chs, cht, it, th, hi).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UI_TRAFFIC_STATS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable detailed RX / TX client stats in Web UI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;UI_CHART_TYPE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;UI_CHART_TYPE=0 # Charts disabled, UI_CHART_TYPE=1 # Line chart, UI_CHART_TYPE=2 # Area chart, UI_CHART_TYPE=3 # Bar chart&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you change &lt;code&gt;WG_PORT&lt;/code&gt;, make sure to also change the exposed port.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Updating&lt;/h2&gt; &#xA;&lt;p&gt;To update to the latest version, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker stop wg-easy&#xA;docker rm wg-easy&#xA;docker pull ghcr.io/wg-easy/wg-easy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then run the &lt;code&gt;docker run -d \ ...&lt;/code&gt; command above again.&lt;/p&gt; &#xA;&lt;p&gt;With Docker Compose WireGuard Easy can be updated with a single command: &lt;code&gt;docker compose up --detach --pull always&lt;/code&gt; (if an image tag is specified in the Compose file and it is not &lt;code&gt;latest&lt;/code&gt;, make sure that it is changed to the desired one; by default it is omitted and &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#image-references&#34;&gt;defaults to &lt;code&gt;latest&lt;/code&gt;&lt;/a&gt;). &lt;br&gt; The WireGuared Easy container will be automatically recreated if a newer image was pulled.&lt;/p&gt; &#xA;&lt;h2&gt;Common Use Cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wg-easy/wg-easy/wiki/Using-WireGuard-Easy-with-Pi-Hole&#34;&gt;Using WireGuard-Easy with Pi-Hole&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wg-easy/wg-easy/wiki/Using-WireGuard-Easy-with-nginx-SSL&#34;&gt;Using WireGuard-Easy with nginx/SSL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For less common or specific edge-case scenarios, please refer to the detailed information provided in the &lt;a href=&#34;https://github.com/wg-easy/wg-easy/wiki&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>