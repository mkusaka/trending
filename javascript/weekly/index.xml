<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-15T01:40:51Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>adrianhajdin/react-movies</title>
    <updated>2025-06-15T01:40:51Z</updated>
    <id>tag:github.com,2025-06-15:/adrianhajdin/react-movies</id>
    <link href="https://github.com/adrianhajdin/react-movies" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dive straight into React‚Äîfrom basic JSX to advanced hooks‚Äîand build a real, modern app in this hands-on crash course!&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://www.youtube.com/watch?v=dCLhUialKPQ&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/adrianhajdin/react-movies/main/public/readme/hero.png&#34; alt=&#34;Project Banner&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;div&gt; &#xA;  &lt;img src=&#34;https://img.shields.io/badge/-React_JS-black?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=react&amp;amp;color=61DAFB&#34; alt=&#34;react.js&#34;&gt; &#xA;  &lt;img src=&#34;https://img.shields.io/badge/-Appwrite-black?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=appwrite&amp;amp;color=FD366E&#34; alt=&#34;appwrite&#34;&gt; &#xA;  &lt;img src=&#34;https://img.shields.io/badge/-Tailwind_CSS-black?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=tailwindcss&amp;amp;color=06B6D4&#34; alt=&#34;tailwindcss&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;A Movie Application&lt;/h3&gt; &#xA; &lt;div align=&#34;center&#34;&gt;&#xA;   Build this project step by step with our detailed tutorial on &#xA;  &lt;a href=&#34;https://www.youtube.com/@javascriptmastery/videos&#34; target=&#34;_blank&#34;&gt;&lt;b&gt;JavaScript Mastery&lt;/b&gt;&lt;/a&gt; YouTube. Join the JSM family! &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;üìã &lt;a name=&#34;table&#34;&gt;Table of Contents&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;ü§ñ &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/react-movies/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚öôÔ∏è &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/react-movies/main/#tech-stack&#34;&gt;Tech Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üîã &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/react-movies/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ü§∏ &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/react-movies/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üï∏Ô∏è &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/react-movies/main/#snippets&#34;&gt;Snippets (Code to Copy)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üîó &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/react-movies/main/#links&#34;&gt;Assets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üöÄ &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/react-movies/main/#more&#34;&gt;More&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üö® Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains the code corresponding to an in-depth tutorial available on our YouTube channel, &lt;a href=&#34;https://www.youtube.com/@javascriptmastery/videos&#34; target=&#34;_blank&#34;&gt;&lt;b&gt;JavaScript Mastery&lt;/b&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you prefer visual learning, this is the perfect resource for you. Follow our tutorial to learn how to build projects like these step-by-step in a beginner-friendly manner!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dCLhUialKPQ&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/sujatagunale/EasyRead/assets/151519281/1736fca5-a031-4854-8c09-bc110e3bc16d&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;introduction&#34;&gt;ü§ñ Introduction&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Built with React.js for the user interface, Appwrite for backend services, and styled with TailwindCSS, this Movie App lets users browse trending movies, search titles, and explore content using the TMDB API. It features a responsive layout and a sleek, modern design.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re getting started and need assistance or face any bugs, join our active Discord community with over &lt;strong&gt;50k+&lt;/strong&gt; members. It&#39;s a place where people help each other out.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.com/invite/n6EdbFJ&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/sujatagunale/EasyRead/assets/151519281/618f4872-1e10-42da-8213-1d69e486d02e&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;tech-stack&#34;&gt;‚öôÔ∏è Tech Stack&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://appwrite.io/&#34;&gt;Appwrite&lt;/a&gt;&lt;/strong&gt; is an open-source Backend-as-a-Service (BaaS) platform that provides developers with a set of APIs to manage authentication, databases, storage, and more, enabling rapid development of secure and scalable applications.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://react.dev/reference/react&#34;&gt;React.js&lt;/a&gt;&lt;/strong&gt; is a JavaScript library developed by Meta for building user interfaces. It allows developers to create reusable UI components that manage their own state, leading to more efficient and predictable code. React is widely used for developing single-page applications (SPAs) due to its virtual DOM that improves performance and ease of maintenance.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/streamich/react-use&#34;&gt;React-use&lt;/a&gt;&lt;/strong&gt; is a collection of essential React hooks that simplify common tasks like managing state, side effects, and lifecycle events, promoting cleaner and more maintainable code in React applications.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/strong&gt; is a utility-first CSS framework that provides low-level utility classes to build custom designs without writing custom CSS, enabling rapid and responsive UI development.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vite.dev/&#34;&gt;Vite&lt;/a&gt;&lt;/strong&gt; is a modern build tool that provides a fast development environment for frontend projects. It offers features like hot module replacement (HMR) and optimized builds, enhancing the development experience and performance.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;features&#34;&gt;üîã Features&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;üëâ &lt;strong&gt;Browse All Movies&lt;/strong&gt;: Explore a wide range of movies available on the platform.&lt;/p&gt; &#xA;&lt;p&gt;üëâ &lt;strong&gt;Search Movies&lt;/strong&gt;: Easily search for specific movies using a search function.&lt;/p&gt; &#xA;&lt;p&gt;üëâ &lt;strong&gt;Trending Movies Algorithm&lt;/strong&gt;: Displays trending movies based on a dynamic algorithm.&lt;/p&gt; &#xA;&lt;p&gt;üëâ &lt;strong&gt;Modern UI/UX&lt;/strong&gt;: A sleek and user-friendly interface designed for a great experience.&lt;/p&gt; &#xA;&lt;p&gt;üëâ &lt;strong&gt;Responsiveness&lt;/strong&gt;: Fully responsive design that works seamlessly across devices.&lt;/p&gt; &#xA;&lt;p&gt;and many more, including code architecture and reusability&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;quick-start&#34;&gt;ü§∏ Quick Start&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Follow these steps to set up the project locally on your machine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Make sure you have the following installed on your machine:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt; (Node Package Manager)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cloning the Repository&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/adrianhajdin/react-movies.git&#xA;cd react-movies&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install the project dependencies using npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Set Up Environment Variables&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Create a new file named &lt;code&gt;.env.local&lt;/code&gt; in the root of your project and add the following content:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt;VITE_TMDB_API_KEY=&#xA;&#xA;VITE_APPWRITE_PROJECT_ID=&#xA;VITE_APPWRITE_DATABASE_ID=&#xA;VITE_APPWRITE_COLLECTION_ID=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace the placeholder values with your actual &lt;strong&gt;&lt;a href=&#34;https://developer.themoviedb.org/reference/intro/getting-started&#34;&gt;TheMovieDatabase API&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://apwr.dev/JSM050&#34;&gt;Appwrite&lt;/a&gt;&lt;/strong&gt; credentials.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Running the Project&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:5173&#34;&gt;http://localhost:5173&lt;/a&gt; in your browser to view the project.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;snippets&#34;&gt;üï∏Ô∏è Snippets&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;index.css&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;@import url(&#34;https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&amp;amp;display=swap&#34;);&#xA;@import url(&#34;https://fonts.googleapis.com/css2?family=Bebas+Neue&amp;amp;display=swap&#34;);&#xA;&#xA;@import &#34;tailwindcss&#34;;&#xA;&#xA;@theme {&#xA;  --color-primary: #030014;&#xA;&#xA;  --color-light-100: #cecefb;&#xA;  --color-light-200: #a8b5db;&#xA;&#xA;  --color-gray-100: #9ca4ab;&#xA;&#xA;  --color-dark-100: #0f0d23;&#xA;&#xA;  --font-dm-sans: DM Sans, sans-serif;&#xA;&#xA;  --breakpoint-xs: 480px;&#xA;&#xA;  --background-image-hero-pattern: url(&#34;/hero-bg.png&#34;);&#xA;}&#xA;&#xA;@layer base {&#xA;  body {&#xA;    font-family: &#34;DM Sans&#34;, serif;&#xA;    font-optical-sizing: auto;&#xA;    background: #030014;&#xA;  }&#xA;&#xA;  h1 {&#xA;    @apply mx-auto max-w-4xl text-center text-5xl font-bold leading-tight tracking-[-1%] text-white sm:text-[64px] sm:leading-[76px];&#xA;  }&#xA;&#xA;  h2 {&#xA;    @apply text-2xl font-bold text-white sm:text-3xl;&#xA;  }&#xA;&#xA;  main {&#xA;    @apply min-h-screen relative bg-primary;&#xA;  }&#xA;&#xA;  header {&#xA;    @apply sm:mt-10 mt-5;&#xA;  }&#xA;&#xA;  header img {&#xA;    @apply w-full max-w-lg h-auto object-contain mx-auto drop-shadow-md;&#xA;  }&#xA;}&#xA;&#xA;@layer components {&#xA;  .pattern {&#xA;    @apply bg-hero-pattern w-full h-screen bg-center bg-cover absolute z-0;&#xA;  }&#xA;&#xA;  .wrapper {&#xA;    @apply px-5 py-12 xs:p-10 max-w-7xl mx-auto flex flex-col relative z-10;&#xA;  }&#xA;&#xA;  .trending {&#xA;    @apply mt-20;&#xA;&#xA;    &amp;amp; ul {&#xA;      @apply flex flex-row overflow-y-auto gap-5 -mt-10 w-full hide-scrollbar;&#xA;    }&#xA;&#xA;    &amp;amp; ul li {&#xA;      @apply min-w-[230px] flex flex-row items-center;&#xA;    }&#xA;&#xA;    &amp;amp; ul li p {&#xA;      @apply fancy-text mt-[22px] text-nowrap;&#xA;    }&#xA;&#xA;    &amp;amp; ul li img {&#xA;      @apply w-[127px] h-[163px] rounded-lg object-cover -ml-3.5;&#xA;    }&#xA;  }&#xA;&#xA;  .search {&#xA;    @apply w-full bg-light-100/5 px-4 py-3 rounded-lg mt-10 max-w-3xl mx-auto;&#xA;&#xA;    &amp;amp; div {&#xA;      @apply relative flex items-center;&#xA;    }&#xA;&#xA;    &amp;amp; img {&#xA;      @apply absolute left-2 h-5 w-5;&#xA;    }&#xA;&#xA;    &amp;amp; input {&#xA;      @apply w-full bg-transparent py-2 sm:pr-10 pl-10 text-base text-gray-200 placeholder-light-200 outline-hidden;&#xA;    }&#xA;  }&#xA;&#xA;  .all-movies {&#xA;    @apply space-y-9;&#xA;&#xA;    &amp;amp; ul {&#xA;      @apply grid grid-cols-1 gap-5 xs:grid-cols-2 md:grid-cols-3 lg:grid-cols-4;&#xA;    }&#xA;  }&#xA;&#xA;  .movie-card {&#xA;    @apply bg-dark-100 p-5 rounded-2xl shadow-inner shadow-light-100/10;&#xA;&#xA;    &amp;amp; img {&#xA;      @apply rounded-lg h-auto w-full;&#xA;    }&#xA;&#xA;    &amp;amp; h3 {&#xA;      @apply text-white font-bold text-base line-clamp-1;&#xA;    }&#xA;&#xA;    &amp;amp; .content {&#xA;      @apply mt-2 flex flex-row items-center flex-wrap gap-2;&#xA;    }&#xA;&#xA;    &amp;amp; .rating {&#xA;      @apply flex flex-row items-center gap-1;&#xA;    }&#xA;&#xA;    &amp;amp; .rating img {&#xA;      @apply size-4 object-contain;&#xA;    }&#xA;&#xA;    &amp;amp; .rating p {&#xA;      @apply font-bold text-base text-white;&#xA;    }&#xA;&#xA;    &amp;amp; .content span {&#xA;      @apply text-sm text-gray-100;&#xA;    }&#xA;&#xA;    &amp;amp; .content .lang {&#xA;      @apply capitalize text-gray-100 font-medium text-base;&#xA;    }&#xA;&#xA;    &amp;amp; .content .year {&#xA;      @apply text-gray-100 font-medium text-base;&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;@utility text-gradient {&#xA;  @apply bg-linear-to-r from-[#D6C7FF] to-[#AB8BFF] bg-clip-text text-transparent;&#xA;}&#xA;&#xA;@utility fancy-text {&#xA;  -webkit-text-stroke: 5px rgba(206, 206, 251, 0.5);&#xA;  font-size: 190px;&#xA;  font-family: &#34;Bebas Neue&#34;, sans-serif;&#xA;}&#xA;&#xA;@utility hide-scrollbar {&#xA;  -ms-overflow-style: none;&#xA;  scrollbar-width: none;&#xA;&#xA;  &amp;amp;::-webkit-scrollbar {&#xA;    display: none;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;components/Spinner.jsx&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import React from &#39;react&#39;&#xA;&#xA;const Spinner = () =&amp;gt; {&#xA;  return (&#xA;    &amp;lt;div role=&#34;status&#34;&amp;gt;&#xA;      &amp;lt;svg aria-hidden=&#34;true&#34;&#xA;           className=&#34;w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-indigo-600&#34;&#xA;           viewBox=&#34;0 0 100 101&#34; fill=&#34;none&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&amp;gt;&#xA;        &amp;lt;path&#xA;          d=&#34;M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z&#34;&#xA;          fill=&#34;currentColor&#34;/&amp;gt;&#xA;        &amp;lt;path&#xA;          d=&#34;M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z&#34;&#xA;          fill=&#34;currentFill&#34;/&amp;gt;&#xA;      &amp;lt;/svg&amp;gt;&#xA;      &amp;lt;span className=&#34;sr-only&#34;&amp;gt;Loading...&amp;lt;/span&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  )&#xA;}&#xA;export default Spinner&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;links&#34;&gt;üîó Assets&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Assets and snippets used in the project can be found in the &lt;strong&gt;&lt;a href=&#34;https://jsm.dev/react25-kit&#34;&gt;video kit&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;a href=&#34;https://jsm.dev/react25-kit&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/adrianhajdin/react-movies/main/public/readme/videokit.png&#34; alt=&#34;Video Kit Banner&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;more&#34;&gt;üöÄ More&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Advance your skills with Next.js Pro Course&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enjoyed creating this project? Dive deeper into our PRO courses for a richer learning adventure. They&#39;re packed with detailed explanations, cool features, and exercises to boost your skills. Give it a go!&lt;/p&gt; &#xA;&lt;a href=&#34;https://jsm.dev/react25-jsmpro&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/adrianhajdin/react-movies/main/public/readme/jsmpro.png&#34; alt=&#34;Project Banner&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>eyaltoledano/claude-task-master</title>
    <updated>2025-06-15T01:40:51Z</updated>
    <id>tag:github.com,2025-06-15:/eyaltoledano/claude-task-master</id>
    <link href="https://github.com/eyaltoledano/claude-task-master" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Task Master &lt;a href=&#34;https://github.com/eyaltoledano/claude-task-master/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/eyaltoledano/claude-task-master?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/js/task-master-ai&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/task-master-ai.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/taskmasterai&#34;&gt;&lt;img src=&#34;https://dcbadge.limes.pink/api/server/https://discord.gg/taskmasterai?style=flat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT%20with%20Commons%20Clause-blue.svg?sanitize=true&#34; alt=&#34;License: MIT with Commons Clause&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/task-master-ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/d18m/task-master-ai?style=flat&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/task-master-ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/task-master-ai?style=flat&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/task-master-ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dw/task-master-ai?style=flat&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;By &lt;a href=&#34;https://x.com/eyaltoledano&#34;&gt;@eyaltoledano&lt;/a&gt;, &lt;a href=&#34;https://x.com/RalphEcom&#34;&gt;@RalphEcom&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://x.com/jasonzhou1993&#34;&gt;@jasonzhou1993&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://x.com/eyaltoledano&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/eyaltoledano&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://x.com/RalphEcom&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/RalphEcom&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://x.com/jasonzhou1993&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/jasonzhou1993&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A task management system for AI-driven development with Claude, designed to work seamlessly with Cursor AI.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For more detailed information, check out the documentation in the &lt;code&gt;docs&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/configuration.md&#34;&gt;Configuration Guide&lt;/a&gt; - Set up environment variables and customize Task Master&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/tutorial.md&#34;&gt;Tutorial&lt;/a&gt; - Step-by-step guide to getting started with Task Master&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/command-reference.md&#34;&gt;Command Reference&lt;/a&gt; - Complete list of all available commands&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/task-structure.md&#34;&gt;Task Structure&lt;/a&gt; - Understanding the task format and features&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/examples.md&#34;&gt;Example Interactions&lt;/a&gt; - Common Cursor AI interaction examples&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/migration-guide.md&#34;&gt;Migration Guide&lt;/a&gt; - Guide to migrating to the new project structure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Quick Install for Cursor 1.0+ (One-Click)&lt;/h4&gt; &#xA;&lt;p&gt;üìã Click the copy button (top-right of code block) then paste into your browser:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;cursor://anysphere.cursor-deeplink/mcp/install?name=taskmaster-ai&amp;amp;config=eyJjb21tYW5kIjoibnB4IiwiYXJncyI6WyIteSIsIi0tcGFja2FnZT10YXNrLW1hc3Rlci1haSIsInRhc2stbWFzdGVyLWFpIl0sImVudiI6eyJBTlRIUk9QSUNfQVBJX0tFWSI6IllPVVJfQU5USFJPUElDX0FQSV9LRVlfSEVSRSIsIlBFUlBMRVhJVFlfQVBJX0tFWSI6IllPVVJfUEVSUExFWElUWV9BUElfS0VZX0hFUkUiLCJPUEVOQUlfQVBJX0tFWSI6IllPVVJfT1BFTkFJX0tFWV9IRVJFIiwiR09PR0xFX0FQSV9LRVkiOiJZT1VSX0dPT0dMRV9LRVlfSEVSRSIsIk1JU1RSQUxfQVBJX0tFWSI6IllPVVJfTUlTVFJBTF9LRVlfSEVSRSIsIk9QRU5ST1VURVJfQVBJX0tFWSI6IllPVVJfT1BFTlJPVVRFUl9LRVlfSEVSRSIsIlhBSV9BUElfS0VZIjoiWU9VUl9YQUlfS0VZX0hFUkUiLCJBWlVSRV9PUEVOQUlfQVBJX0tFWSI6IllPVVJfQVpVUkVfS0VZX0hFUkUiLCJPTExBTUFfQVBJX0tFWSI6IllPVVJfT0xMQU1BX0FQSV9LRVlfSEVSRSJ9fQo=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; After clicking the link, you&#39;ll still need to add your API keys to the configuration. The link installs the MCP server with placeholder keys that you&#39;ll need to replace with your actual API keys.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Taskmaster utilizes AI across several commands, and those require a separate API key. You can use a variety of models from different AI providers provided you add your API keys. For example, if you want to use Claude 3.7, you&#39;ll need an Anthropic API key.&lt;/p&gt; &#xA;&lt;p&gt;You can define 3 types of models to be used: the main model, the research model, and the fallback model (in case either the main or research fail). Whatever model you use, its provider API key must be present in either mcp.json or .env.&lt;/p&gt; &#xA;&lt;p&gt;At least one (1) of the following is required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Anthropic API key (Claude API)&lt;/li&gt; &#xA; &lt;li&gt;OpenAI API key&lt;/li&gt; &#xA; &lt;li&gt;Google Gemini API key&lt;/li&gt; &#xA; &lt;li&gt;Perplexity API key (for research model)&lt;/li&gt; &#xA; &lt;li&gt;xAI API Key (for research or main model)&lt;/li&gt; &#xA; &lt;li&gt;OpenRouter API Key (for research or main model)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using the research model is optional but highly recommended. You will need at least ONE API key. Adding all API keys enables you to seamlessly switch between model providers at will.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Option 1: MCP (Recommended)&lt;/h3&gt; &#xA;&lt;p&gt;MCP (Model Control Protocol) lets you run Task Master directly from your editor.&lt;/p&gt; &#xA;&lt;h4&gt;1. Add your MCP config at the following path depending on your editor&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Editor&lt;/th&gt; &#xA;   &lt;th&gt;Scope&lt;/th&gt; &#xA;   &lt;th&gt;Linux/macOS Path&lt;/th&gt; &#xA;   &lt;th&gt;Windows Path&lt;/th&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Cursor&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Global&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;~/.cursor/mcp.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;%USERPROFILE%\.cursor\mcp.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mcpServers&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Project&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;project_folder&amp;gt;/.cursor/mcp.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;project_folder&amp;gt;\.cursor\mcp.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mcpServers&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Windsurf&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Global&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;~/.codeium/windsurf/mcp_config.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;%USERPROFILE%\.codeium\windsurf\mcp_config.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mcpServers&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VS Code&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Project&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;project_folder&amp;gt;/.vscode/mcp.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;project_folder&amp;gt;\.vscode\mcp.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;servers&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h5&gt;Manual Configuration&lt;/h5&gt; &#xA;&lt;h6&gt;Cursor &amp;amp; Windsurf (&lt;code&gt;mcpServers&lt;/code&gt;)&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;taskmaster-ai&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;--package=task-master-ai&#34;, &#34;task-master-ai&#34;],&#xA;      &#34;env&#34;: {&#xA;        &#34;ANTHROPIC_API_KEY&#34;: &#34;YOUR_ANTHROPIC_API_KEY_HERE&#34;,&#xA;        &#34;PERPLEXITY_API_KEY&#34;: &#34;YOUR_PERPLEXITY_API_KEY_HERE&#34;,&#xA;        &#34;OPENAI_API_KEY&#34;: &#34;YOUR_OPENAI_KEY_HERE&#34;,&#xA;        &#34;GOOGLE_API_KEY&#34;: &#34;YOUR_GOOGLE_KEY_HERE&#34;,&#xA;        &#34;MISTRAL_API_KEY&#34;: &#34;YOUR_MISTRAL_KEY_HERE&#34;,&#xA;        &#34;OPENROUTER_API_KEY&#34;: &#34;YOUR_OPENROUTER_KEY_HERE&#34;,&#xA;        &#34;XAI_API_KEY&#34;: &#34;YOUR_XAI_KEY_HERE&#34;,&#xA;        &#34;AZURE_OPENAI_API_KEY&#34;: &#34;YOUR_AZURE_KEY_HERE&#34;,&#xA;        &#34;OLLAMA_API_KEY&#34;: &#34;YOUR_OLLAMA_API_KEY_HERE&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üîë Replace &lt;code&gt;YOUR_‚Ä¶_KEY_HERE&lt;/code&gt; with your real API keys. You can remove keys you don&#39;t use.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h6&gt;VS‚ÄØCode (&lt;code&gt;servers&lt;/code&gt; + &lt;code&gt;type&lt;/code&gt;)&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;servers&#34;: {&#xA;    &#34;taskmaster-ai&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;--package=task-master-ai&#34;, &#34;task-master-ai&#34;],&#xA;      &#34;env&#34;: {&#xA;        &#34;ANTHROPIC_API_KEY&#34;: &#34;YOUR_ANTHROPIC_API_KEY_HERE&#34;,&#xA;        &#34;PERPLEXITY_API_KEY&#34;: &#34;YOUR_PERPLEXITY_API_KEY_HERE&#34;,&#xA;        &#34;OPENAI_API_KEY&#34;: &#34;YOUR_OPENAI_KEY_HERE&#34;,&#xA;        &#34;GOOGLE_API_KEY&#34;: &#34;YOUR_GOOGLE_KEY_HERE&#34;,&#xA;        &#34;MISTRAL_API_KEY&#34;: &#34;YOUR_MISTRAL_KEY_HERE&#34;,&#xA;        &#34;OPENROUTER_API_KEY&#34;: &#34;YOUR_OPENROUTER_KEY_HERE&#34;,&#xA;        &#34;XAI_API_KEY&#34;: &#34;YOUR_XAI_KEY_HERE&#34;,&#xA;        &#34;AZURE_OPENAI_API_KEY&#34;: &#34;YOUR_AZURE_KEY_HERE&#34;&#xA;      },&#xA;      &#34;type&#34;: &#34;stdio&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üîë Replace &lt;code&gt;YOUR_‚Ä¶_KEY_HERE&lt;/code&gt; with your real API keys. You can remove keys you don&#39;t use.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;2. (Cursor-only) Enable Taskmaster MCP&lt;/h4&gt; &#xA;&lt;p&gt;Open Cursor Settings (Ctrl+Shift+J) ‚û° Click on MCP tab on the left ‚û° Enable task-master-ai with the toggle&lt;/p&gt; &#xA;&lt;h4&gt;3. (Optional) Configure the models you want to use&lt;/h4&gt; &#xA;&lt;p&gt;In your editor&#39;s AI chat pane, say:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Change the main, research and fallback models to &amp;lt;model_name&amp;gt;, &amp;lt;model_name&amp;gt; and &amp;lt;model_name&amp;gt; respectively.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/models.md&#34;&gt;Table of available models&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;4. Initialize Task Master&lt;/h4&gt; &#xA;&lt;p&gt;In your editor&#39;s AI chat pane, say:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Initialize taskmaster-ai in my project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5. Make sure you have a PRD (Recommended)&lt;/h4&gt; &#xA;&lt;p&gt;For &lt;strong&gt;new projects&lt;/strong&gt;: Create your PRD at &lt;code&gt;.taskmaster/docs/prd.txt&lt;/code&gt;&lt;br&gt; For &lt;strong&gt;existing projects&lt;/strong&gt;: You can use &lt;code&gt;scripts/prd.txt&lt;/code&gt; or migrate with &lt;code&gt;task-master migrate&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;An example PRD template is available after initialization in &lt;code&gt;.taskmaster/templates/example_prd.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] While a PRD is recommended for complex projects, you can always create individual tasks by asking &#34;Can you help me implement [description of what you want to do]?&#34; in chat.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Always start with a detailed PRD.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The more detailed your PRD, the better the generated tasks will be.&lt;/p&gt; &#xA;&lt;h4&gt;6. Common Commands&lt;/h4&gt; &#xA;&lt;p&gt;Use your AI assistant to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Parse requirements: &lt;code&gt;Can you parse my PRD at scripts/prd.txt?&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Plan next step: &lt;code&gt;What&#39;s the next task I should work on?&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Implement a task: &lt;code&gt;Can you help me implement task 3?&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;View multiple tasks: &lt;code&gt;Can you show me tasks 1, 3, and 5?&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Expand a task: &lt;code&gt;Can you help me expand task 4?&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Research fresh information&lt;/strong&gt;: &lt;code&gt;Research the latest best practices for implementing JWT authentication with Node.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Research with context&lt;/strong&gt;: &lt;code&gt;Research React Query v5 migration strategies for our current API implementation in src/api.js&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/examples.md&#34;&gt;More examples on how to use Task Master in chat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Option 2: Using Command Line&lt;/h3&gt; &#xA;&lt;h4&gt;Installation&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install globally&#xA;npm install -g task-master-ai&#xA;&#xA;# OR install locally within your project&#xA;npm install task-master-ai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Initialize a new project&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# If installed globally&#xA;task-master init&#xA;&#xA;# If installed locally&#xA;npx task-master init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will prompt you for project details and set up a new project with the necessary files and structure.&lt;/p&gt; &#xA;&lt;h4&gt;Common Commands&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Initialize a new project&#xA;task-master init&#xA;&#xA;# Parse a PRD and generate tasks&#xA;task-master parse-prd your-prd.txt&#xA;&#xA;# List all tasks&#xA;task-master list&#xA;&#xA;# Show the next task to work on&#xA;task-master next&#xA;&#xA;# Show specific task(s) - supports comma-separated IDs&#xA;task-master show 1,3,5&#xA;&#xA;# Research fresh information with project context&#xA;task-master research &#34;What are the latest best practices for JWT authentication?&#34;&#xA;&#xA;# Generate task files&#xA;task-master generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;If &lt;code&gt;task-master init&lt;/code&gt; doesn&#39;t respond&lt;/h3&gt; &#xA;&lt;p&gt;Try running it with Node directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node node_modules/claude-task-master/scripts/init.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or clone the repository and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/eyaltoledano/claude-task-master.git&#xA;cd claude-task-master&#xA;node scripts/init.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/eyaltoledano/claude-task-master/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=eyaltoledano/claude-task-master&#34; alt=&#34;Task Master project contributors&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.star-history.com/#eyaltoledano/claude-task-master&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=eyaltoledano/claude-task-master&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;Task Master is licensed under the MIT License with Commons Clause. This means you can:&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ &lt;strong&gt;Allowed&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use Task Master for any purpose (personal, commercial, academic)&lt;/li&gt; &#xA; &lt;li&gt;Modify the code&lt;/li&gt; &#xA; &lt;li&gt;Distribute copies&lt;/li&gt; &#xA; &lt;li&gt;Create and sell products built using Task Master&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;‚ùå &lt;strong&gt;Not Allowed&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sell Task Master itself&lt;/li&gt; &#xA; &lt;li&gt;Offer Task Master as a hosted service&lt;/li&gt; &#xA; &lt;li&gt;Create competing products based on Task Master&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for the complete license text and &lt;a href=&#34;https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/licensing.md&#34;&gt;licensing details&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>