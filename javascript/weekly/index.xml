<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-09T01:57:32Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>songquanpeng/one-api</title>
    <updated>2023-07-09T01:57:32Z</updated>
    <id>tag:github.com,2023-07-09:/songquanpeng/one-api</id>
    <link href="https://github.com/songquanpeng/one-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenAI 接口管理 &amp; 分发系统，支持多种渠道包括 Azure，可用于二次分发管理 key，仅单可执行文件，已打包好 Docker 镜像，一键部署，开箱即用. OpenAI key management &amp; redistribution system, supports English UI.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;right&#34;&gt; &lt;strong&gt;中文&lt;/strong&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/songquanpeng/one-api/main/README.en.md&#34;&gt;English&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/songquanpeng/one-api&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/songquanpeng/one-api/main/web/public/logo.png&#34; width=&#34;150&#34; height=&#34;150&#34; alt=&#34;one-api logo&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;One API&lt;/h1&gt; &#xA; &lt;p&gt;&lt;em&gt;✨ All in one 的 OpenAI 接口，整合各种 API 访问方式，开箱即用✨&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/songquanpeng/one-api/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/songquanpeng/one-api?color=brightgreen&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/songquanpeng/one-api/releases/latest&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/songquanpeng/one-api?color=brightgreen&amp;amp;include_prereleases&#34; alt=&#34;release&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/repository/docker/justsong/one-api&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/justsong/one-api?color=brightgreen&#34; alt=&#34;docker pull&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/songquanpeng/one-api/releases/latest&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/songquanpeng/one-api/total?color=brightgreen&amp;amp;include_prereleases&#34; alt=&#34;release&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/songquanpeng/one-api&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/songquanpeng/one-api&#34; alt=&#34;GoReportCard&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/songquanpeng/one-api#部署&#34;&gt;部署教程&lt;/a&gt; · &lt;a href=&#34;https://github.com/songquanpeng/one-api#使用方法&#34;&gt;使用方法&lt;/a&gt; · &lt;a href=&#34;https://github.com/songquanpeng/one-api/issues&#34;&gt;意见反馈&lt;/a&gt; · &lt;a href=&#34;https://github.com/songquanpeng/one-api#截图展示&#34;&gt;截图展示&lt;/a&gt; · &lt;a href=&#34;https://openai.justsong.cn/&#34;&gt;在线演示&lt;/a&gt; · &lt;a href=&#34;https://github.com/songquanpeng/one-api#常见问题&#34;&gt;常见问题&lt;/a&gt; · &lt;a href=&#34;https://github.com/songquanpeng/one-api#相关项目&#34;&gt;相关项目&lt;/a&gt; · &lt;a href=&#34;https://iamazing.cn/page/reward&#34;&gt;赞赏支持&lt;/a&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;：本项目为开源项目，使用者必须在遵循 OpenAI 的&lt;a href=&#34;https://openai.com/policies/terms-of-use&#34;&gt;使用条款&lt;/a&gt;以及&lt;strong&gt;法律法规&lt;/strong&gt;的情况下使用，不得用于非法用途。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;：使用 Docker 拉取的最新镜像可能是 &lt;code&gt;alpha&lt;/code&gt; 版本，如果追求稳定性请手动指定版本。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;：从 &lt;code&gt;v0.3&lt;/code&gt; 版本升级到 &lt;code&gt;v0.4&lt;/code&gt; 版本需要手动迁移数据库，请手动执行&lt;a href=&#34;https://raw.githubusercontent.com/songquanpeng/one-api/main/bin/migration_v0.3-v0.4.sql&#34;&gt;数据库迁移脚本&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;支持多种 API 访问渠道： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OpenAI 官方通道（支持配置镜像）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Azure OpenAI API&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://api.gptjk.top/register?aff=QGxj&#34;&gt;API Distribute&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://openai-sb.com&#34;&gt;OpenAI-SB&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://api2d.com/r/197971&#34;&gt;API2D&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://aigptx.top?aff=uFpUl2Kf&#34;&gt;OhMyGPT&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://aiproxy.io/?i=OneAPI&#34;&gt;AI Proxy&lt;/a&gt; （邀请码：&lt;code&gt;OneAPI&lt;/code&gt;）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://console.closeai-asia.com/r/2412&#34;&gt;CloseAI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 自定义渠道：例如各种未收录的第三方代理服务&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;支持通过&lt;strong&gt;负载均衡&lt;/strong&gt;的方式访问多个渠道。&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;strong&gt;stream 模式&lt;/strong&gt;，可以通过流式传输实现打字机效果。&lt;/li&gt; &#xA; &lt;li&gt;支持&lt;strong&gt;多机部署&lt;/strong&gt;，&lt;a href=&#34;https://raw.githubusercontent.com/songquanpeng/one-api/main/#%E5%A4%9A%E6%9C%BA%E9%83%A8%E7%BD%B2&#34;&gt;详见此处&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;支持&lt;strong&gt;令牌管理&lt;/strong&gt;，设置令牌的过期时间和额度。&lt;/li&gt; &#xA; &lt;li&gt;支持&lt;strong&gt;兑换码管理&lt;/strong&gt;，支持批量生成和导出兑换码，可使用兑换码为账户进行充值。&lt;/li&gt; &#xA; &lt;li&gt;支持&lt;strong&gt;通道管理&lt;/strong&gt;，批量创建通道。&lt;/li&gt; &#xA; &lt;li&gt;支持&lt;strong&gt;用户分组&lt;/strong&gt;以及&lt;strong&gt;渠道分组&lt;/strong&gt;，支持为不同分组设置不同的倍率。&lt;/li&gt; &#xA; &lt;li&gt;支持渠道&lt;strong&gt;设置模型列表&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;支持&lt;strong&gt;查看额度明细&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;支持&lt;strong&gt;用户邀请奖励&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;支持以美元为单位显示额度。&lt;/li&gt; &#xA; &lt;li&gt;支持发布公告，设置充值链接，设置新用户初始额度。&lt;/li&gt; &#xA; &lt;li&gt;支持模型映射，重定向用户的请求模型。&lt;/li&gt; &#xA; &lt;li&gt;支持丰富的&lt;strong&gt;自定义&lt;/strong&gt;设置， &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;支持自定义系统名称，logo 以及页脚。&lt;/li&gt; &#xA;   &lt;li&gt;支持自定义首页和关于页面，可以选择使用 HTML &amp;amp; Markdown 代码进行自定义，或者使用一个单独的网页通过 iframe 嵌入。&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;支持通过系统访问令牌访问管理 API。&lt;/li&gt; &#xA; &lt;li&gt;支持 Cloudflare Turnstile 用户校验。&lt;/li&gt; &#xA; &lt;li&gt;支持用户管理，支持&lt;strong&gt;多种用户登录注册方式&lt;/strong&gt;： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;邮箱登录注册以及通过邮箱进行密码重置。&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/settings/applications/new&#34;&gt;GitHub 开放授权&lt;/a&gt;。&lt;/li&gt; &#xA;   &lt;li&gt;微信公众号授权（需要额外部署 &lt;a href=&#34;https://github.com/songquanpeng/wechat-server&#34;&gt;WeChat Server&lt;/a&gt;）。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;未来其他大模型开放 API 后，将第一时间支持，并将其封装成同样的 API 访问方式。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;部署&lt;/h2&gt; &#xA;&lt;h3&gt;基于 Docker 进行部署&lt;/h3&gt; &#xA;&lt;p&gt;部署命令：&lt;code&gt;docker run --name one-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果上面的镜像无法拉取，可以尝试使用 GitHub 的 Docker 镜像，将上面的 &lt;code&gt;justsong/one-api&lt;/code&gt; 替换为 &lt;code&gt;ghcr.io/songquanpeng/one-api&lt;/code&gt; 即可。&lt;/p&gt; &#xA;&lt;p&gt;如果你的并发量较大，推荐设置 &lt;code&gt;SQL_DSN&lt;/code&gt;，详见下面&lt;a href=&#34;https://raw.githubusercontent.com/songquanpeng/one-api/main/#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&#34;&gt;环境变量&lt;/a&gt;一节。&lt;/p&gt; &#xA;&lt;p&gt;更新命令：&lt;code&gt;docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower -cR&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;-p 3000:3000&lt;/code&gt; 中的第一个 &lt;code&gt;3000&lt;/code&gt; 是宿主机的端口，可以根据需要进行修改。&lt;/p&gt; &#xA;&lt;p&gt;数据将会保存在宿主机的 &lt;code&gt;/home/ubuntu/data/one-api&lt;/code&gt; 目录，请确保该目录存在且具有写入权限，或者更改为合适的目录。&lt;/p&gt; &#xA;&lt;p&gt;Nginx 的参考配置：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;server{&#xA;   server_name openai.justsong.cn;  # 请根据实际情况修改你的域名&#xA;   &#xA;   location / {&#xA;          client_max_body_size  64m;&#xA;          proxy_http_version 1.1;&#xA;          proxy_pass http://localhost:3000;  # 请根据实际情况修改你的端口&#xA;          proxy_set_header Host $host;&#xA;          proxy_set_header X-Forwarded-For $remote_addr;&#xA;          proxy_cache_bypass $http_upgrade;&#xA;          proxy_set_header Accept-Encoding gzip;&#xA;          proxy_read_timeout 300s;  # GPT-4 需要较长的超时时间，请自行调整&#xA;   }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;之后使用 Let&#39;s Encrypt 的 certbot 配置 HTTPS：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Ubuntu 安装 certbot：&#xA;sudo snap install --classic certbot&#xA;sudo ln -s /snap/bin/certbot /usr/bin/certbot&#xA;# 生成证书 &amp;amp; 修改 Nginx 配置&#xA;sudo certbot --nginx&#xA;# 根据指示进行操作&#xA;# 重启 Nginx&#xA;sudo service nginx restart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;初始账号用户名为 &lt;code&gt;root&lt;/code&gt;，密码为 &lt;code&gt;123456&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;手动部署&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;从 &lt;a href=&#34;https://github.com/songquanpeng/one-api/releases/latest&#34;&gt;GitHub Releases&lt;/a&gt; 下载可执行文件或者从源码编译： &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/songquanpeng/one-api.git&#xA;&#xA;# 构建前端&#xA;cd one-api/web&#xA;npm install&#xA;npm run build&#xA;&#xA;# 构建后端&#xA;cd ..&#xA;go mod download&#xA;go build -ldflags &#34;-s -w&#34; -o one-api&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;运行： &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;chmod u+x one-api&#xA;./one-api --port 3000 --log-dir ./logs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;访问 &lt;a href=&#34;http://localhost:3000/&#34;&gt;http://localhost:3000/&lt;/a&gt; 并登录。初始账号用户名为 &lt;code&gt;root&lt;/code&gt;，密码为 &lt;code&gt;123456&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;更加详细的部署教程&lt;a href=&#34;https://iamazing.cn/page/how-to-deploy-a-website&#34;&gt;参见此处&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;多机部署&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;所有服务器 &lt;code&gt;SESSION_SECRET&lt;/code&gt; 设置一样的值。&lt;/li&gt; &#xA; &lt;li&gt;必须设置 &lt;code&gt;SQL_DSN&lt;/code&gt;，使用 MySQL 数据库而非 SQLite，所有服务器连接同一个数据库。&lt;/li&gt; &#xA; &lt;li&gt;所有从服务器必须设置 &lt;code&gt;NODE_TYPE&lt;/code&gt; 为 &lt;code&gt;slave&lt;/code&gt;，不设置则默认为主服务器。&lt;/li&gt; &#xA; &lt;li&gt;设置 &lt;code&gt;SYNC_FREQUENCY&lt;/code&gt; 后服务器将定期从数据库同步配置，在使用远程数据库的情况下，推荐设置该项并启用 Redis，无论主从。&lt;/li&gt; &#xA; &lt;li&gt;从服务器可以选择设置 &lt;code&gt;FRONTEND_BASE_URL&lt;/code&gt;，以重定向页面请求到主服务器。&lt;/li&gt; &#xA; &lt;li&gt;从服务器上&lt;strong&gt;分别&lt;/strong&gt;装好 Redis，设置好 &lt;code&gt;REDIS_CONN_STRING&lt;/code&gt;，这样可以做到在缓存未过期的情况下数据库零访问，可以减少延迟。&lt;/li&gt; &#xA; &lt;li&gt;如果主服务器访问数据库延迟也比较高，则也需要启用 Redis，并设置 &lt;code&gt;SYNC_FREQUENCY&lt;/code&gt;，以定期从数据库同步配置。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;环境变量的具体使用方法详见&lt;a href=&#34;https://raw.githubusercontent.com/songquanpeng/one-api/main/#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&#34;&gt;此处&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;宝塔部署教程&lt;/h3&gt; &#xA;&lt;p&gt;详见 &lt;a href=&#34;https://github.com/songquanpeng/one-api/issues/175&#34;&gt;#175&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;如果部署后访问出现空白页面，详见 &lt;a href=&#34;https://github.com/songquanpeng/one-api/issues/97&#34;&gt;#97&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;部署第三方服务配合 One API 使用&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;欢迎 PR 添加更多示例。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;ChatGPT Next Web&lt;/h4&gt; &#xA;&lt;p&gt;项目主页：&lt;a href=&#34;https://github.com/Yidadaa/ChatGPT-Next-Web&#34;&gt;https://github.com/Yidadaa/ChatGPT-Next-Web&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --name chat-next-web -d -p 3001:3000 yidadaa/chatgpt-next-web&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;注意修改端口号，之后在页面上设置接口地址（例如：&lt;a href=&#34;https://openai.justsong.cn/&#34;&gt;https://openai.justsong.cn/&lt;/a&gt; ）和 API Key 即可。&lt;/p&gt; &#xA;&lt;h4&gt;ChatGPT Web&lt;/h4&gt; &#xA;&lt;p&gt;项目主页：&lt;a href=&#34;https://github.com/Chanzhaoyu/chatgpt-web&#34;&gt;https://github.com/Chanzhaoyu/chatgpt-web&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --name chatgpt-web -d -p 3002:3002 -e OPENAI_API_BASE_URL=https://openai.justsong.cn -e OPENAI_API_KEY=sk-xxx chenzhaoyu94/chatgpt-web&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;注意修改端口号、&lt;code&gt;OPENAI_API_BASE_URL&lt;/code&gt; 和 &lt;code&gt;OPENAI_API_KEY&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;部署到第三方平台&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;部署到 Sealos &lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;div&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Sealos 可视化部署，仅需 1 分钟。&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;p&gt;参考这个&lt;a href=&#34;https://github.com/c121914yu/FastGPT/raw/main/docs/deploy/one-api/sealos.md&#34;&gt;教程&lt;/a&gt;中 1~5 步。&lt;/p&gt; &#xA; &lt;/div&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;部署到 Zeabur&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;div&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Zeabur 的服务器在国外，自动解决了网络的问题，同时免费的额度也足够个人使用。&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;首先 fork 一份代码。&lt;/li&gt; &#xA;   &lt;li&gt;进入 &lt;a href=&#34;https://zeabur.com/&#34;&gt;Zeabur&lt;/a&gt;，登录，进入控制台。&lt;/li&gt; &#xA;   &lt;li&gt;新建一个 Project，在 Service -&amp;gt; Add Service 选择 Marketplace，选择 MySQL，并记下连接参数（用户名、密码、地址、端口）。&lt;/li&gt; &#xA;   &lt;li&gt;复制链接参数，运行 &lt;code&gt;create database `one-api` &lt;/code&gt; 创建数据库。&lt;/li&gt; &#xA;   &lt;li&gt;然后在 Service -&amp;gt; Add Service，选择 Git（第一次使用需要先授权），选择你 fork 的仓库。&lt;/li&gt; &#xA;   &lt;li&gt;Deploy 会自动开始，先取消。进入下方 Variable，添加一个 &lt;code&gt;PORT&lt;/code&gt;，值为 &lt;code&gt;3000&lt;/code&gt;，再添加一个 &lt;code&gt;SQL_DSN&lt;/code&gt;，值为 &lt;code&gt;&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@tcp(&amp;lt;addr&amp;gt;:&amp;lt;port&amp;gt;)/one-api&lt;/code&gt; ，然后保存。 注意如果不填写 &lt;code&gt;SQL_DSN&lt;/code&gt;，数据将无法持久化，重新部署后数据会丢失。&lt;/li&gt; &#xA;   &lt;li&gt;选择 Redeploy。&lt;/li&gt; &#xA;   &lt;li&gt;进入下方 Domains，选择一个合适的域名前缀，如 &#34;my-one-api&#34;，最终域名为 &#34;my-one-api.zeabur.app&#34;，也可以 CNAME 自己的域名。&lt;/li&gt; &#xA;   &lt;li&gt;等待部署完成，点击生成的域名进入 One API。&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA; &lt;/div&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;配置&lt;/h2&gt; &#xA;&lt;p&gt;系统本身开箱即用。&lt;/p&gt; &#xA;&lt;p&gt;你可以通过设置环境变量或者命令行参数进行配置。&lt;/p&gt; &#xA;&lt;p&gt;等到系统启动后，使用 &lt;code&gt;root&lt;/code&gt; 用户登录系统并做进一步的配置。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;：如果你不知道某个配置项的含义，可以临时删掉值以看到进一步的提示文字。&lt;/p&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;p&gt;在&lt;code&gt;渠道&lt;/code&gt;页面中添加你的 API Key，之后在&lt;code&gt;令牌&lt;/code&gt;页面中新增访问令牌。&lt;/p&gt; &#xA;&lt;p&gt;之后就可以使用你的令牌访问 One API 了，使用方式与 &lt;a href=&#34;https://platform.openai.com/docs/api-reference/introduction&#34;&gt;OpenAI API&lt;/a&gt; 一致。&lt;/p&gt; &#xA;&lt;p&gt;你需要在各种用到 OpenAI API 的地方设置 API Base 为你的 One API 的部署地址，例如：&lt;code&gt;https://openai.justsong.cn&lt;/code&gt;，API Key 则为你在 One API 中生成的令牌。&lt;/p&gt; &#xA;&lt;p&gt;注意，具体的 API Base 的格式取决于你所使用的客户端。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph LR&#xA;    A(用户)&#xA;    A ---&amp;gt;|请求| B(One API)&#xA;    B --&amp;gt;|中继请求| C(OpenAI)&#xA;    B --&amp;gt;|中继请求| D(Azure)&#xA;    B --&amp;gt;|中继请求| E(其他下游渠道)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;可以通过在令牌后面添加渠道 ID 的方式指定使用哪一个渠道处理本次请求，例如：&lt;code&gt;Authorization: Bearer ONE_API_KEY-CHANNEL_ID&lt;/code&gt;。 注意，需要是管理员用户创建的令牌才能指定渠道 ID。&lt;/p&gt; &#xA;&lt;p&gt;不加的话将会使用负载均衡的方式使用多个渠道。&lt;/p&gt; &#xA;&lt;h3&gt;环境变量&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;REDIS_CONN_STRING&lt;/code&gt;：设置之后将使用 Redis 作为请求频率限制的存储，而非使用内存存储。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;例子：&lt;code&gt;REDIS_CONN_STRING=redis://default:redispw@localhost:49153&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SESSION_SECRET&lt;/code&gt;：设置之后将使用固定的会话密钥，这样系统重新启动后已登录用户的 cookie 将依旧有效。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;例子：&lt;code&gt;SESSION_SECRET=random_string&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SQL_DSN&lt;/code&gt;：设置之后将使用指定数据库而非 SQLite，请使用 MySQL 8.0 版本。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;例子：&lt;code&gt;SQL_DSN=root:123456@tcp(localhost:3306)/oneapi&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;注意需要提前建立数据库 &lt;code&gt;oneapi&lt;/code&gt;，无需手动建表，程序将自动建表。&lt;/li&gt; &#xA;   &lt;li&gt;如果使用本地数据库：部署命令可添加 &lt;code&gt;--network=&#34;host&#34;&lt;/code&gt; 以使得容器内的程序可以访问到宿主机上的 MySQL。&lt;/li&gt; &#xA;   &lt;li&gt;如果使用云数据库：如果云服务器需要验证身份，需要在连接参数中添加 &lt;code&gt;?tls=skip-verify&lt;/code&gt;。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FRONTEND_BASE_URL&lt;/code&gt;：设置之后将重定向页面请求到指定的地址，仅限从服务器设置。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;例子：&lt;code&gt;FRONTEND_BASE_URL=https://openai.justsong.cn&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SYNC_FREQUENCY&lt;/code&gt;：设置之后将定期与数据库同步配置，单位为秒，未设置则不进行同步。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;例子：&lt;code&gt;SYNC_FREQUENCY=60&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NODE_TYPE&lt;/code&gt;：设置之后将指定节点类型，可选值为 &lt;code&gt;master&lt;/code&gt; 和 &lt;code&gt;slave&lt;/code&gt;，未设置则默认为 &lt;code&gt;master&lt;/code&gt;。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;例子：&lt;code&gt;NODE_TYPE=slave&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CHANNEL_UPDATE_FREQUENCY&lt;/code&gt;：设置之后将定期更新渠道余额，单位为分钟，未设置则不进行更新。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;例子：&lt;code&gt;CHANNEL_UPDATE_FREQUENCY=1440&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CHANNEL_TEST_FREQUENCY&lt;/code&gt;：设置之后将定期检查渠道，单位为分钟，未设置则不进行检查。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;例子：&lt;code&gt;CHANNEL_TEST_FREQUENCY=1440&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POLLING_INTERVAL&lt;/code&gt;：批量更新渠道余额以及测试可用性时的请求间隔，单位为秒，默认无间隔。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;例子：&lt;code&gt;POLLING_INTERVAL=5&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;命令行参数&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;--port &amp;lt;port_number&amp;gt;&lt;/code&gt;: 指定服务器监听的端口号，默认为 &lt;code&gt;3000&lt;/code&gt;。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;例子：&lt;code&gt;--port 3000&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--log-dir &amp;lt;log_dir&amp;gt;&lt;/code&gt;: 指定日志文件夹，如果没有设置，日志将不会被保存。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;例子：&lt;code&gt;--log-dir ./logs&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--version&lt;/code&gt;: 打印系统版本号并退出。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--help&lt;/code&gt;: 查看命令的使用帮助和参数说明。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;演示&lt;/h2&gt; &#xA;&lt;h3&gt;在线演示&lt;/h3&gt; &#xA;&lt;p&gt;注意，该演示站不提供对外服务： &lt;a href=&#34;https://openai.justsong.cn&#34;&gt;https://openai.justsong.cn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;截图展示&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/39998050/233837954-ae6683aa-5c4f-429f-a949-6645a83c9490.png&#34; alt=&#34;channel&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/39998050/233837971-dab488b7-6d96-43af-b640-a168e8d1c9bf.png&#34; alt=&#34;token&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;额度是什么？怎么计算的？One API 的额度计算有问题？ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;额度 = 分组倍率 * 模型倍率 * （提示 token 数 + 补全 token 数 * 补全倍率）&lt;/li&gt; &#xA;   &lt;li&gt;其中补全倍率对于 GPT3.5 固定为 1.33，GPT4 为 2，与官方保持一致。&lt;/li&gt; &#xA;   &lt;li&gt;如果是非流模式，官方接口会返回消耗的总 token，但是你要注意提示和补全的消耗倍率不一样。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;账户额度足够为什么提示额度不足？ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;请检查你的令牌额度是否足够，这个和账户额度是分开的。&lt;/li&gt; &#xA;   &lt;li&gt;令牌额度仅供用户设置最大使用量，用户可自由设置。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;提示无可用渠道？ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;请检查的用户分组和渠道分组设置。&lt;/li&gt; &#xA;   &lt;li&gt;以及渠道的模型设置。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;渠道测试报错：&lt;code&gt;invalid character &#39;&amp;lt;&#39; looking for beginning of value&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;这是因为返回值不是合法的 JSON，而是一个 HTML 页面。&lt;/li&gt; &#xA;   &lt;li&gt;大概率是你的部署站的 IP 或代理的节点被 CloudFlare 封禁了。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;ChatGPT Next Web 报错：&lt;code&gt;Failed to fetch&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;部署的时候不要设置 &lt;code&gt;BASE_URL&lt;/code&gt;。&lt;/li&gt; &#xA;   &lt;li&gt;检查你的接口地址和 API Key 有没有填对。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;报错：&lt;code&gt;当前分组负载已饱和，请稍后再试&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;上游通道 429 了。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;相关项目&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/c121914yu/FastGPT&#34;&gt;FastGPT&lt;/a&gt;: 三分钟搭建 AI 知识库&lt;/p&gt; &#xA;&lt;h2&gt;注意&lt;/h2&gt; &#xA;&lt;p&gt;本项目使用 MIT 协议进行开源，&lt;strong&gt;在此基础上&lt;/strong&gt;，必须在页面底部保留署名以及指向本项目的链接。如果不想保留署名，必须首先获得授权。&lt;/p&gt; &#xA;&lt;p&gt;同样适用于基于本项目的二开项目。&lt;/p&gt; &#xA;&lt;p&gt;依据 MIT 协议，使用者需自行承担使用本项目的风险与责任，本开源项目开发者与此无关。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MichMich/MagicMirror</title>
    <updated>2023-07-09T01:57:32Z</updated>
    <id>tag:github.com,2023-07-09:/MichMich/MagicMirror</id>
    <link href="https://github.com/MichMich/MagicMirror" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MagicMirror² is an open source modular smart mirror platform. With a growing list of installable modules, the MagicMirror² allows you to convert your hallway or bathroom mirror into your personal assistant.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MichMich/MagicMirror/master/.github/header.png&#34; alt=&#34;MagicMirror²: The open source modular smart mirror platform. &#34;&gt;&lt;/p&gt; &#xA;&lt;p style=&#34;text-align: center&#34;&gt; &lt;a href=&#34;https://choosealicense.com/licenses/mit&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/michmich/magicmirror/automated-tests.yaml&#34; alt=&#34;GitHub Actions&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/checks-status/michmich/magicmirror/master&#34; alt=&#34;Build Status&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/MichMich/MagicMirror&#34;&gt; &lt;img src=&#34;https://codecov.io/gh/MichMich/MagicMirror/branch/master/graph/badge.svg?token=LEG1KitZR6&#34; alt=&#34;CodeCov Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/MichMich/MagicMirror&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/michmich/magicmirror?style=social&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;MagicMirror²&lt;/strong&gt; is an open source modular smart mirror platform. With a growing list of installable modules, the &lt;strong&gt;MagicMirror²&lt;/strong&gt; allows you to convert your hallway or bathroom mirror into your personal assistant. &lt;strong&gt;MagicMirror²&lt;/strong&gt; is built by the creator of &lt;a href=&#34;https://michaelteeuw.nl/tagged/magicmirror&#34;&gt;the original MagicMirror&lt;/a&gt; with the incredible help of a &lt;a href=&#34;https://github.com/MichMich/MagicMirror/graphs/contributors&#34;&gt;growing community of contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;MagicMirror² focuses on a modular plugin system and uses &lt;a href=&#34;https://www.electronjs.org/&#34;&gt;Electron&lt;/a&gt; as an application wrapper. So no more web server or browser installs necessary!&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For the full documentation including &lt;strong&gt;&lt;a href=&#34;https://docs.magicmirror.builders/getting-started/installation.html&#34;&gt;installation instructions&lt;/a&gt;&lt;/strong&gt;, please visit our dedicated documentation website: &lt;a href=&#34;https://docs.magicmirror.builders&#34;&gt;https://docs.magicmirror.builders&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://magicmirror.builders&#34;&gt;https://magicmirror.builders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://docs.magicmirror.builders&#34;&gt;https://docs.magicmirror.builders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Forum: &lt;a href=&#34;https://forum.magicmirror.builders&#34;&gt;https://forum.magicmirror.builders&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Technical discussions: &lt;a href=&#34;https://forum.magicmirror.builders/category/11/core-system&#34;&gt;https://forum.magicmirror.builders/category/11/core-system&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Discord: &lt;a href=&#34;https://discord.gg/J5BAtvx&#34;&gt;https://discord.gg/J5BAtvx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Blog: &lt;a href=&#34;https://michaelteeuw.nl/tagged/magicmirror&#34;&gt;https://michaelteeuw.nl/tagged/magicmirror&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Donations: &lt;a href=&#34;https://magicmirror.builders/#donate&#34;&gt;https://magicmirror.builders/#donate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing Guidelines&lt;/h2&gt; &#xA;&lt;p&gt;Contributions of all kinds are welcome, not only in the form of code but also with regards to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;bug reports&lt;/li&gt; &#xA; &lt;li&gt;documentation&lt;/li&gt; &#xA; &lt;li&gt;translations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the full contribution guidelines, check out: &lt;a href=&#34;https://docs.magicmirror.builders/about/contributing.html&#34;&gt;https://docs.magicmirror.builders/about/contributing.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Enjoying MagicMirror? Consider a donation!&lt;/h2&gt; &#xA;&lt;p&gt;MagicMirror² is opensource and free. That doesn&#39;t mean we don&#39;t need any money.&lt;/p&gt; &#xA;&lt;p&gt;Please consider a donation to help us cover the ongoing costs like webservers and email services. If we receive enough donations we might even be able to free up some working hours and spend some extra time improving the MagicMirror² core.&lt;/p&gt; &#xA;&lt;p&gt;To donate, please follow &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=G5D8E9MR5DTD2&amp;amp;source=url&#34;&gt;this&lt;/a&gt; link.&lt;/p&gt; &#xA;&lt;p style=&#34;text-align: center&#34;&gt; &lt;a href=&#34;https://forum.magicmirror.builders/topic/728/magicmirror-is-voted-number-1-in-the-magpi-top-50&#34;&gt;&lt;img src=&#34;https://magicmirror.builders/img/magpi-best-watermark-custom.png&#34; width=&#34;150&#34; alt=&#34;MagPi Top 50&#34;&gt;&lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>novnc/noVNC</title>
    <updated>2023-07-09T01:57:32Z</updated>
    <id>tag:github.com,2023-07-09:/novnc/noVNC</id>
    <link href="https://github.com/novnc/noVNC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;VNC client web application&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;noVNC: HTML VNC Client Library and Application&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/novnc/noVNC/actions?query=workflow%3ATest&#34;&gt;&lt;img src=&#34;https://github.com/novnc/noVNC/workflows/Test/badge.svg?sanitize=true&#34; alt=&#34;Test Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/novnc/noVNC/actions?query=workflow%3ALint&#34;&gt;&lt;img src=&#34;https://github.com/novnc/noVNC/workflows/Lint/badge.svg?sanitize=true&#34; alt=&#34;Lint Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Description&lt;/h3&gt; &#xA;&lt;p&gt;noVNC is both a HTML VNC client JavaScript library and an application built on top of that library. noVNC runs well in any modern browser including mobile browsers (iOS and Android).&lt;/p&gt; &#xA;&lt;p&gt;Many companies, projects and products have integrated noVNC including &lt;a href=&#34;http://www.openstack.org&#34;&gt;OpenStack&lt;/a&gt;, &lt;a href=&#34;http://opennebula.org/&#34;&gt;OpenNebula&lt;/a&gt;, &lt;a href=&#34;http://libvncserver.sourceforge.net&#34;&gt;LibVNCServer&lt;/a&gt;, and &lt;a href=&#34;https://cendio.com/thinlinc&#34;&gt;ThinLinc&lt;/a&gt;. See &lt;a href=&#34;https://github.com/novnc/noVNC/wiki/Projects-and-companies-using-noVNC&#34;&gt;the Projects and Companies wiki page&lt;/a&gt; for a more complete list with additional info and links.&lt;/p&gt; &#xA;&lt;h3&gt;Table of Contents&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/#newshelpcontact&#34;&gt;News/help/contact&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/#browser-requirements&#34;&gt;Browser Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/#server-requirements&#34;&gt;Server Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/#installation-from-snap-package&#34;&gt;Installation from Snap Package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/#integration-and-deployment&#34;&gt;Integration and Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/#authorscontributors&#34;&gt;Authors/Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;News/help/contact&lt;/h3&gt; &#xA;&lt;p&gt;The project website is found at &lt;a href=&#34;http://novnc.com&#34;&gt;novnc.com&lt;/a&gt;. Notable commits, announcements and news are posted to &lt;a href=&#34;http://www.twitter.com/noVNC&#34;&gt;@noVNC&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are a noVNC developer/integrator/user (or want to be) please join the &lt;a href=&#34;https://groups.google.com/forum/?fromgroups#!forum/novnc&#34;&gt;noVNC discussion group&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Bugs and feature requests can be submitted via &lt;a href=&#34;https://github.com/novnc/noVNC/issues&#34;&gt;github issues&lt;/a&gt;. If you have questions about using noVNC then please first use the &lt;a href=&#34;https://groups.google.com/forum/?fromgroups#!forum/novnc&#34;&gt;discussion group&lt;/a&gt;. We also have a &lt;a href=&#34;https://github.com/novnc/noVNC/wiki/&#34;&gt;wiki&lt;/a&gt; with lots of helpful information.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for a place to start contributing to noVNC, a good place to start would be the issues that are marked as &lt;a href=&#34;https://github.com/novnc/noVNC/issues?labels=patchwelcome&#34;&gt;&#34;patchwelcome&#34;&lt;/a&gt;. Please check our &lt;a href=&#34;https://github.com/novnc/noVNC/wiki/Contributing&#34;&gt;contribution guide&lt;/a&gt; though.&lt;/p&gt; &#xA;&lt;p&gt;If you want to show appreciation for noVNC you could donate to a great non- profits such as: &lt;a href=&#34;http://www.compassion.com/&#34;&gt;Compassion International&lt;/a&gt;, &lt;a href=&#34;http://www.sil.org&#34;&gt;SIL&lt;/a&gt;, &lt;a href=&#34;http://www.habitat.org&#34;&gt;Habitat for Humanity&lt;/a&gt;, &lt;a href=&#34;https://www.eff.org/&#34;&gt;Electronic Frontier Foundation&lt;/a&gt;, &lt;a href=&#34;http://www.againstmalaria.com/&#34;&gt;Against Malaria Foundation&lt;/a&gt;, &lt;a href=&#34;http://www.nothingbutnets.net/&#34;&gt;Nothing But Nets&lt;/a&gt;, etc. Please tweet &lt;a href=&#34;http://www.twitter.com/noVNC&#34;&gt;@noVNC&lt;/a&gt; if you do.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports all modern browsers including mobile (iOS, Android)&lt;/li&gt; &#xA; &lt;li&gt;Supported authentication methods: none, classical VNC, RealVNC&#39;s RSA-AES, Tight, VeNCrypt Plain, XVP, Apple&#39;s Diffie-Hellman, UltraVNC&#39;s MSLogonII&lt;/li&gt; &#xA; &lt;li&gt;Supported VNC encodings: raw, copyrect, rre, hextile, tight, tightPNG, ZRLE, JPEG&lt;/li&gt; &#xA; &lt;li&gt;Supports scaling, clipping and resizing the desktop&lt;/li&gt; &#xA; &lt;li&gt;Local cursor rendering&lt;/li&gt; &#xA; &lt;li&gt;Clipboard copy/paste with full Unicode support&lt;/li&gt; &#xA; &lt;li&gt;Translations&lt;/li&gt; &#xA; &lt;li&gt;Touch gestures for emulating common mouse actions&lt;/li&gt; &#xA; &lt;li&gt;Licensed mainly under the &lt;a href=&#34;http://www.mozilla.org/MPL/2.0/&#34;&gt;MPL 2.0&lt;/a&gt;, see &lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/LICENSE.txt&#34;&gt;the license document&lt;/a&gt; for details&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Screenshots&lt;/h3&gt; &#xA;&lt;p&gt;Running in Firefox before and after connecting:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://novnc.com/img/noVNC-1-login.png&#34; width=&#34;400&#34;&gt;&amp;nbsp; &lt;img src=&#34;http://novnc.com/img/noVNC-3-connected.png&#34; width=&#34;400&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;See more screenshots &lt;a href=&#34;http://novnc.com/screenshots.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Browser Requirements&lt;/h3&gt; &#xA;&lt;p&gt;noVNC uses many modern web technologies so a formal requirement list is not available. However these are the minimum versions we are currently aware of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chrome 64, Firefox 79, Safari 13.4, Opera 51, Edge 79&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Server Requirements&lt;/h3&gt; &#xA;&lt;p&gt;noVNC follows the standard VNC protocol, but unlike other VNC clients it does require WebSockets support. Many servers include support (e.g. &lt;a href=&#34;http://libvncserver.sourceforge.net/&#34;&gt;x11vnc/libvncserver&lt;/a&gt;, &lt;a href=&#34;http://www.qemu.org/&#34;&gt;QEMU&lt;/a&gt;, and &lt;a href=&#34;http://www.smartlab.at/mobilevnc/&#34;&gt;MobileVNC&lt;/a&gt;), but for the others you need to use a WebSockets to TCP socket proxy. noVNC has a sister project &lt;a href=&#34;https://github.com/novnc/websockify&#34;&gt;websockify&lt;/a&gt; that provides a simple such proxy.&lt;/p&gt; &#xA;&lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the &lt;code&gt;novnc_proxy&lt;/code&gt; script to automatically download and start websockify, which includes a mini-webserver and the WebSockets proxy. The &lt;code&gt;--vnc&lt;/code&gt; option is used to specify the location of a running VNC server:&lt;/p&gt; &lt;p&gt;&lt;code&gt;./utils/novnc_proxy --vnc localhost:5901&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you don&#39;t need to expose the web server to public internet, you can bind to localhost:&lt;/p&gt; &lt;p&gt;&lt;code&gt;./utils/novnc_proxy --vnc localhost:5901 --listen localhost:6081&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Point your browser to the cut-and-paste URL that is output by the &lt;code&gt;novnc_proxy&lt;/code&gt; script. Hit the Connect button, enter a password if the VNC server has one configured, and enjoy!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation from Snap Package&lt;/h3&gt; &#xA;&lt;p&gt;Running the command below will install the latest release of noVNC from Snap:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo snap install novnc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Running noVNC from Snap Directly&lt;/h4&gt; &#xA;&lt;p&gt;You can run the Snap-package installed novnc directly with, for example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;novnc --listen 6081 --vnc localhost:5901 # /snap/bin/novnc if /snap/bin is not in your PATH&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to use certificate files, due to standard Snap confinement restrictions you need to have them in the /home/&amp;lt;user&amp;gt;/snap/novnc/current/ directory. If your username is jsmith an example command would be:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;novnc --listen 8443 --cert ~jsmith/snap/novnc/current/self.crt --key ~jsmith/snap/novnc/current/self.key --vnc ubuntu.example.com:5901&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Running noVNC from Snap as a Service (Daemon)&lt;/h4&gt; &#xA;&lt;p&gt;The Snap package also has the capability to run a &#39;novnc&#39; service which can be configured to listen on multiple ports connecting to multiple VNC servers (effectively a service runing multiple instances of novnc). Instructions (with example values):&lt;/p&gt; &#xA;&lt;p&gt;List current services (out-of-box this will be blank):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo snap get novnc services&#xA;Key             Value&#xA;services.n6080  {...}&#xA;services.n6081  {...}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a new service that listens on port 6082 and connects to the VNC server running on port 5902 on localhost:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo snap set novnc services.n6082.listen=6082 services.n6082.vnc=localhost:5902&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Any services you define with &#39;snap set&#39; will be automatically started) Note that the name of the service, &#39;n6082&#39; in this example, can be anything as long as it doesn&#39;t start with a number or contain spaces/special characters.&lt;/p&gt; &#xA;&lt;p&gt;View the configuration of the service just created:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo snap get novnc services.n6082&#xA;Key                    Value&#xA;services.n6082.listen  6082&#xA;services.n6082.vnc     localhost:5902&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Disable a service (note that because of a limitation in Snap it&#39;s currently not possible to unset config variables, setting them to blank values is the way to disable a service):&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo snap set novnc services.n6082.listen=&#39;&#39; services.n6082.vnc=&#39;&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Any services you set to blank with &#39;snap set&#39; like this will be automatically stopped)&lt;/p&gt; &#xA;&lt;p&gt;Verify that the service is disabled (blank values):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo snap get novnc services.n6082&#xA;Key                    Value&#xA;services.n6082.listen  &#xA;services.n6082.vnc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Integration and Deployment&lt;/h3&gt; &#xA;&lt;p&gt;Please see our other documents for how to integrate noVNC in your own software, or deploying the noVNC application in production environments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/docs/EMBEDDING.md&#34;&gt;Embedding&lt;/a&gt; - For the noVNC application&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/docs/LIBRARY.md&#34;&gt;Library&lt;/a&gt; - For the noVNC JavaScript library&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Authors/Contributors&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/novnc/noVNC/master/AUTHORS&#34;&gt;AUTHORS&lt;/a&gt; for a (full-ish) list of authors. If you&#39;re not on that list and you think you should be, feel free to send a PR to fix that.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Core team:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/samhed&#34;&gt;Samuel Mannehed&lt;/a&gt; (Cendio)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/CendioOssman&#34;&gt;Pierre Ossman&lt;/a&gt; (Cendio)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Previous core contributors:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kanaka&#34;&gt;Joel Martin&lt;/a&gt; (Project founder)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/DirectXMan12&#34;&gt;Solly Ross&lt;/a&gt; (Red Hat / OpenStack)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Notable contributions:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UI and Icons : Pierre Ossman, Chris Gordon&lt;/li&gt; &#xA;   &lt;li&gt;Original Logo : Michael Sersen&lt;/li&gt; &#xA;   &lt;li&gt;tight encoding : Michael Tinglof (Mercuri.ca)&lt;/li&gt; &#xA;   &lt;li&gt;RealVNC RSA AES authentication : USTC Vlab Team&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Included libraries:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;base64 : Martijn Pieters (Digital Creations 2), Samuel Sieb (sieb.net)&lt;/li&gt; &#xA;   &lt;li&gt;DES : Dave Zimmerman (Widget Workshop), Jef Poskanzer (ACME Labs)&lt;/li&gt; &#xA;   &lt;li&gt;Pako : Vitaly Puzrin (&lt;a href=&#34;https://github.com/nodeca/pako&#34;&gt;https://github.com/nodeca/pako&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Do you want to be on this list? Check out our &lt;a href=&#34;https://github.com/novnc/noVNC/wiki/Contributing&#34;&gt;contribution guide&lt;/a&gt; and start hacking!&lt;/p&gt;</summary>
  </entry>
</feed>