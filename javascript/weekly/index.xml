<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-02T01:58:00Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>homanp/superagent</title>
    <updated>2023-07-02T01:58:00Z</updated>
    <id>tag:github.com,2023-07-02:/homanp/superagent</id>
    <link href="https://github.com/homanp/superagent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü•∑ Superagent - Build, deploy, and manage LLM-powered agents&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Superagent ü•∑&lt;/h1&gt; &#xA; &lt;p&gt;&lt;strong&gt;Build, deploy, and manage LLM-powered agents&lt;/strong&gt; &lt;a href=&#34;https://Superagent.sh&#34;&gt;Superagent.sh&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt; &lt;img alt=&#34;GitHub Contributors&#34; src=&#34;https://img.shields.io/github/contributors/homanp/Superagent&#34;&gt; &lt;img alt=&#34;GitHub Last Commit&#34; src=&#34;https://img.shields.io/github/last-commit/homanp/Superagent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/github/repo-size/homanp/Superagent&#34;&gt; &lt;img alt=&#34;GitHub Issues&#34; src=&#34;https://img.shields.io/github/issues/homanp/Superagent&#34;&gt; &lt;img alt=&#34;GitHub Pull Requests&#34; src=&#34;https://img.shields.io/github/issues-pr/homanp/Superagent&#34;&gt; &lt;img alt=&#34;Github License&#34; src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1110910277110743103?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=plastic&amp;amp;color=d7b023)%5D(https://discord.gg/e8j7mgjDUK&#34;&gt; &lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;img alt=&#34;Superagent UI&#34; src=&#34;https://raw.githubusercontent.com/homanp/superagent/main/ui/public/superagent.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;üßê What is this?&lt;/h2&gt; &#xA;&lt;p&gt;Superagent is a powerful tool that simplifies the configuration and deployment of LLM (Large Language Model) Agents to production. It provides a range of features and functionalities to make it easier for developers to build, manage and deploy AI agents to production including features such as built in memory and document retrieval via vector dbs, powerful tools, webhooks, cron jobs etc.&lt;/p&gt; &#xA;&lt;h2&gt;ü•∑ Superagent Cloud&lt;/h2&gt; &#xA;&lt;p&gt;If you are looking for a plug-n-play way getting started be sure to checkout &lt;a href=&#34;https://Superagent.sh&#34;&gt;Superagent.sh&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üîé Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Checkout the &lt;a href=&#34;https://docs.Superagent.sh/&#34;&gt;full documentation here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üöß Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;You can follow the &lt;a href=&#34;https://github.com/users/homanp/projects/4&#34;&gt;roadmap here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with Superagent, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the Superagent repository into a public GitHub repository or fork it from &lt;a href=&#34;https://github.com/homanp/Superagent/fork&#34;&gt;https://github.com/homanp/Superagent/fork&lt;/a&gt;. If you plan to distribute the code, keep the source code public.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/homanp/Superagent.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To run the script, simply execute it using:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bash setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;See the setup instructions for the UI in the &lt;code&gt;ui&lt;/code&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üí° Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Runing Superagent with &lt;a href=&#34;https://github.com/homanp/nextjs-Superagent&#34;&gt;NextJS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üë®üèΩ‚Äçüíª SDKs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/homanp/superagent-js&#34;&gt;Javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/homanp/superagent-py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ü´∂ Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Superagent is an open-source project, and contributions are welcome. If you would like to contribute, you can create new features, fix bugs, or improve the infrastructure. Please refer to the &lt;a href=&#34;https://github.com/homanp/Superagent/raw/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file in the repository for more information on how to contribute.&lt;/p&gt; &#xA;&lt;p&gt;We appreciate your contributions and aim to make it easy for anyone to create and run LLM Agents in production using Superagent.&lt;/p&gt; &#xA;&lt;h2&gt;‚≠ê Partners&lt;/h2&gt; &#xA;&lt;p&gt;A big thanks to all partners that support the development of &lt;strong&gt;Superagent&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üåø &lt;a href=&#34;https://buildwithfern.com/&#34;&gt;Fern&lt;/a&gt;&lt;/strong&gt;: Fern helps create SDKs and client libraries from OpenAPI specs. Superagent uses Fern for all of the client libraries and SDKs we provide. A big shout out for the support!&lt;/p&gt; &#xA;&lt;h2&gt;üôè Support&lt;/h2&gt; &#xA;&lt;p&gt;We appreciate all the support you can give us, either with contributions, feedback, bug reports or feature requests. Drop a star and share Superagent to the world!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>varunshenoy/GraphGPT</title>
    <updated>2023-07-02T01:58:00Z</updated>
    <id>tag:github.com,2023-07-02:/varunshenoy/GraphGPT</id>
    <link href="https://github.com/varunshenoy/GraphGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Extrapolating knowledge graphs from unstructured text using GPT-3 üïµÔ∏è‚Äç‚ôÇÔ∏è&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GraphGPT&lt;/h1&gt; &#xA;&lt;h3&gt;Natural Language ‚Üí Knowledge Graph&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/varunshenoy/GraphGPT/main/demo.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: this is a toy project I built out over a weekend. If you want to use knowledge graphs in your project, check out &lt;a href=&#34;https://github.com/jerryjliu/gpt_index&#34;&gt;GPT Index&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;GraphGPT converts unstructured natural language into a knowledge graph. Pass in the synopsis of your favorite movie, a passage from a confusing Wikipedia page, or transcript from a video to generate a graph visualization of entities and their relationships.&lt;/p&gt; &#xA;&lt;p&gt;Successive queries can update the existing state of the graph or create an entirely new structure. For example, updating the current state could involve injecting new information through nodes and edges or changing the color of certain nodes.&lt;/p&gt; &#xA;&lt;p&gt;The current few-shot prompt guides GPT-3 in accurately understanding the JSON formatting GraphGPT requires for proper rendering. You can see the entire prompt in &lt;code&gt;public/prompts/main.prompt&lt;/code&gt;. A major issue at the moment is latency. Due to the nature of OpenAI API calls, it takes up to 20 seconds to receive a response.&lt;/p&gt; &#xA;&lt;h2&gt;Prompts&lt;/h2&gt; &#xA;&lt;p&gt;Prompts are located in the &lt;code&gt;public/prompts&lt;/code&gt; folder. Read &lt;a href=&#34;https://twitter.com/varunshenoy_/status/1625224544561819648?s=20&#34;&gt;this&lt;/a&gt; Twitter thread I put together to learn more about how these prompts were designed.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to download required dependencies (currently just &lt;a href=&#34;https://github.com/crubier/react-graph-vis&#34;&gt;react-graph-vis&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Make sure you have an &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI API key&lt;/a&gt;. You will enter this into the web app when running queries.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run start&lt;/code&gt;. GraphGPT should open up in a new browser tab.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>ykdojo/kaguya</title>
    <updated>2023-07-02T01:58:00Z</updated>
    <id>tag:github.com,2023-07-02:/ykdojo/kaguya</id>
    <link href="https://github.com/ykdojo/kaguya" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A ChatGPT plugin that allows you to load and edit your local files in a controlled way, as well as run any Python, JavaScript, and bash script.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kaguya&lt;/h1&gt; &#xA;&lt;p&gt;Kaguya is a ChatGPT plugin that allows you to load and edit your local files in a controlled way, as well as run any Python, JavaScript, and bash script. This makes it a powerful tool for developers, enabling them to interact with their file system and run scripts directly from ChatGPT.&lt;/p&gt; &#xA;&lt;h2&gt;API Endpoints&lt;/h2&gt; &#xA;&lt;p&gt;The project provides several API endpoints that allow you to interact with the file system. The API is described in the &lt;code&gt;openapi.yaml&lt;/code&gt; file. Here is a brief overview:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /api/executeCommand&lt;/code&gt;: Execute a shell command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /api/listFilesInDirectory&lt;/code&gt;: List files and directories in the specified directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /api/readFile&lt;/code&gt;: Read the content of a file in the user&#39;s directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /api/update&lt;/code&gt;: Update a file in the user&#39;s directory by performing a search-and-replace operation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /api/updateWholeFile&lt;/code&gt;: Replace the entire content of a file in the user&#39;s directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /api/createFile&lt;/code&gt;: Create a new file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /api/deleteFile&lt;/code&gt;: Delete a file in the user&#39;s directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /api/renameFile&lt;/code&gt;: Rename a file in the user&#39;s directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /api/appendToFile&lt;/code&gt;: Append content to the end of an existing file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /api/createDirectory&lt;/code&gt;: Create a new directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /api/deleteDirectory&lt;/code&gt;: Delete a directory and its contents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /api/readMultipleFiles&lt;/code&gt;: Read the content of multiple files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running the Project&lt;/h2&gt; &#xA;&lt;p&gt;You can run the project using Docker. Simply execute the &lt;code&gt;docker.sh&lt;/code&gt; script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running the script, you can interact with Kaguya through ChatGPT using the localhost port 3000.&lt;/p&gt; &#xA;&lt;h2&gt;More About Kaguya&lt;/h2&gt; &#xA;&lt;p&gt;You can check out a demo of Kaguya in action on Twitter: &lt;a href=&#34;https://twitter.com/ykdojo/status/1645846044843077635&#34;&gt;Demo Video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can check out a second demo of Kaguya in action on Twitter: &lt;a href=&#34;https://twitter.com/ykdojo/status/1670848611532562433&#34;&gt;Second Demo Video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Discord&lt;/h2&gt; &#xA;&lt;p&gt;Join our Discord server &lt;a href=&#34;https://discord.com/invite/nNtVfKddDD&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the MIT license ¬©2023.&lt;/p&gt; &#xA;&lt;p&gt;For the full license text, please see the &lt;a href=&#34;https://raw.githubusercontent.com/ykdojo/kaguya/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
</feed>