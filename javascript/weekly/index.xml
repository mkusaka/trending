<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-31T01:48:56Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>philc/vimium</title>
    <updated>2024-03-31T01:48:56Z</updated>
    <id>tag:github.com,2024-03-31:/philc/vimium</id>
    <link href="https://github.com/philc/vimium" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The hacker&#39;s browser.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vimium - The Hacker&#39;s Browser&lt;/h1&gt; &#xA;&lt;p&gt;Vimium is a browser extension that provides keyboard-based navigation and control of the web in the spirit of the Vim editor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation instructions:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chrome: &lt;a href=&#34;https://chrome.google.com/extensions/detail/dbepggeogbaibhgnhhndojpepiihcmeb&#34;&gt;Chrome web store&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Edge: &lt;a href=&#34;https://microsoftedge.microsoft.com/addons/detail/vimium/djmieaghokpkpjfbpelnlkfgfjapaopa&#34;&gt;Edge Add-ons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Firefox: &lt;a href=&#34;https://addons.mozilla.org/en-GB/firefox/addon/vimium-ff/&#34;&gt;Firefox Add-ons&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To install from source, see &lt;a href=&#34;https://raw.githubusercontent.com/philc/vimium/master/CONTRIBUTING.md#installing-from-source&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Vimium&#39;s Options page can be reached via a link on the help dialog (type &lt;code&gt;?&lt;/code&gt;) or via the button next to Vimium on the extension pages of Chrome and Edge (&lt;code&gt;chrome://extensions&lt;/code&gt;), or Firefox (&lt;code&gt;about:addons&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Keyboard Bindings&lt;/h2&gt; &#xA;&lt;p&gt;Modifier keys are specified as &lt;code&gt;&amp;lt;c-x&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;m-x&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;a-x&amp;gt;&lt;/code&gt; for ctrl+x, meta+x, and alt+x respectively. For shift+x and ctrl-shift-x, just type &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;&amp;lt;c-X&amp;gt;&lt;/code&gt;. See the next section for how to customize these bindings.&lt;/p&gt; &#xA;&lt;p&gt;Once you have Vimium installed, you can see this list of key bindings at any time by typing &lt;code&gt;?&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Navigating the current page:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;?       show the help dialog for a list of all available keys&#xA;h       scroll left&#xA;j       scroll down&#xA;k       scroll up&#xA;l       scroll right&#xA;gg      scroll to top of the page&#xA;G       scroll to bottom of the page&#xA;d       scroll down half a page&#xA;u       scroll up half a page&#xA;f       open a link in the current tab&#xA;F       open a link in a new tab&#xA;r       reload&#xA;gs      view source&#xA;i       enter insert mode -- all commands will be ignored until you hit Esc to exit&#xA;yy      copy the current url to the clipboard&#xA;yf      copy a link url to the clipboard&#xA;gf      cycle forward to the next frame&#xA;gF      focus the main/top frame&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigating to new pages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;o       Open URL, bookmark, or history entry&#xA;O       Open URL, bookmark, history entry in a new tab&#xA;b       Open bookmark&#xA;B       Open bookmark in a new tab&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using find:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/       enter find mode&#xA;          -- type your search query and hit enter to search, or Esc to cancel&#xA;n       cycle forward to the next find match&#xA;N       cycle backward to the previous find match&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For advanced usage, see &lt;a href=&#34;https://github.com/philc/vimium/wiki/Find-Mode&#34;&gt;regular expressions&lt;/a&gt; on the wiki.&lt;/p&gt; &#xA;&lt;p&gt;Navigating your history:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;H       go back in history&#xA;L       go forward in history&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Manipulating tabs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;J, gT   go one tab left&#xA;K, gt   go one tab right&#xA;g0      go to the first tab. Use ng0 to go to n-th tab&#xA;g$      go to the last tab&#xA;^       visit the previously-visited tab&#xA;t       create tab&#xA;yt      duplicate current tab&#xA;x       close current tab&#xA;X       restore closed tab (i.e. unwind the &#39;x&#39; command)&#xA;T       search through your open tabs&#xA;W       move current tab to new window&#xA;&amp;lt;a-p&amp;gt;   pin/unpin current tab&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using marks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ma, mA  set local mark &#34;a&#34; (global mark &#34;A&#34;)&#xA;`a, `A  jump to local mark &#34;a&#34; (global mark &#34;A&#34;)&#xA;``      jump back to the position before the previous jump&#xA;          -- that is, before the previous gg, G, n, N, / or `a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additional advanced browsing commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;]], [[  Follow the link labeled &#39;next&#39; or &#39;&amp;gt;&#39; (&#39;previous&#39; or &#39;&amp;lt;&#39;)&#xA;          - helpful for browsing paginated sites&#xA;&amp;lt;a-f&amp;gt;   open multiple links in a new tab&#xA;gi      focus the first (or n-th) text input box on the page. Use &amp;lt;tab&amp;gt; to cycle through options.&#xA;gu      go up one level in the URL hierarchy&#xA;gU      go up to root of the URL hierarchy&#xA;ge      edit the current URL&#xA;gE      edit the current URL and open in a new tab&#xA;zH      scroll all the way left&#xA;zL      scroll all the way right&#xA;v       enter visual mode; use p/P to paste-and-go, use y to yank&#xA;V       enter visual line mode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Vimium supports command repetition so, for example, hitting &lt;code&gt;5t&lt;/code&gt; will open 5 tabs in rapid succession. &lt;code&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt; (or &lt;code&gt;&amp;lt;c-[&amp;gt;&lt;/code&gt;) will clear any partial commands in the queue and will also exit insert and find modes.&lt;/p&gt; &#xA;&lt;p&gt;There are some advanced commands which aren&#39;t documented here; refer to the help dialog (type &lt;code&gt;?&lt;/code&gt;) for a full list.&lt;/p&gt; &#xA;&lt;h2&gt;Custom Key Mappings&lt;/h2&gt; &#xA;&lt;p&gt;You may remap or unmap any of the default key bindings in the &#34;Custom key mappings&#34; on the options page.&lt;/p&gt; &#xA;&lt;p&gt;Enter one of the following key mapping commands per line:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;map key command&lt;/code&gt;: Maps a key to a Vimium command. Overrides Chrome&#39;s default behavior (if any).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unmap key&lt;/code&gt;: Unmaps a key and restores Chrome&#39;s default behavior (if any).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unmapAll&lt;/code&gt;: Unmaps all bindings. This is useful if you want to completely wipe Vimium&#39;s defaults and start from scratch with your own setup.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;map &amp;lt;c-d&amp;gt; scrollPageDown&lt;/code&gt; maps ctrl+d to scrolling the page down. Chrome&#39;s default behavior of bringing up a bookmark dialog is suppressed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;map r reload&lt;/code&gt; maps the r key to reloading the page.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unmap &amp;lt;c-d&amp;gt;&lt;/code&gt; removes any mapping for ctrl+d and restores Chrome&#39;s default behavior.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unmap r&lt;/code&gt; removes any mapping for the r key.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available Vimium commands can be found via the &#34;Show available commands&#34; link near the key mapping box on the options page. The command name appears to the right of the description in parenthesis.&lt;/p&gt; &#xA;&lt;p&gt;You can add comments to key mappings by starting a line with &lt;code&gt;&#34;&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following special keys are available for mapping:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;c-*&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;a-*&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;s-*&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;m-*&amp;gt;&lt;/code&gt; for ctrl, alt, shift, and meta (command on Mac) respectively with any key. Replace &lt;code&gt;*&lt;/code&gt; with the key of choice.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;left&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;right&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;up&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;down&amp;gt;&lt;/code&gt; for the arrow keys.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;f1&amp;gt;&lt;/code&gt; through &lt;code&gt;&amp;lt;f12&amp;gt;&lt;/code&gt; for the function keys.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;space&amp;gt;&lt;/code&gt; for the space key.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;delete&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;backspace&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;insert&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;home&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; for the corresponding non-printable keys.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Shifts are automatically detected so, for example, &lt;code&gt;&amp;lt;c-&amp;amp;&amp;gt;&lt;/code&gt; corresponds to ctrl+shift+7 on an English keyboard.&lt;/p&gt; &#xA;&lt;h2&gt;More documentation&lt;/h2&gt; &#xA;&lt;p&gt;Many of the more advanced or involved features are documented on &lt;a href=&#34;https://github.com/philc/vimium/wiki&#34;&gt;Vimium&#39;s GitHub wiki&lt;/a&gt;. Also see the &lt;a href=&#34;https://github.com/philc/vimium/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/philc/vimium/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/philc/vimium/master/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for the major changes in each release.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Phil Crosby, Ilya Sukhar. See &lt;a href=&#34;https://raw.githubusercontent.com/philc/vimium/master/MIT-LICENSE.txt&#34;&gt;MIT-LICENSE.txt&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jayofelony/pwnagotchi</title>
    <updated>2024-03-31T01:48:56Z</updated>
    <id>tag:github.com,2024-03-31:/jayofelony/pwnagotchi</id>
    <link href="https://github.com/jayofelony/pwnagotchi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;(⌐■_■) - Deep Reinforcement Learning instrumenting bettercap for WiFi pwning.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pwnagotchi&lt;/h1&gt; &#xA;&lt;p&gt;This is the main source for all forks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RPiZeroW (32bit)&lt;/li&gt; &#xA; &lt;li&gt;RPiZero2W, RPi3, RPi4, RPi5 (64bit)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/jayofelony&#34;&gt;GH Sponsor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pwnagotchi.ai/&#34;&gt;Pwnagotchi&lt;/a&gt; is an &lt;a href=&#34;https://hackernoon.com/intuitive-rl-intro-to-advantage-actor-critic-a2c-4ff545978752&#34;&gt;A2C&lt;/a&gt;-based &#34;AI&#34; leveraging &lt;a href=&#34;https://www.bettercap.org/&#34;&gt;bettercap&lt;/a&gt; that learns from its surrounding Wi-Fi environment to maximize the crackable WPA key material it captures (either passively, or by performing authentication and association attacks). This material is collected as PCAP files containing any form of handshake supported by &lt;a href=&#34;https://hashcat.net/hashcat/&#34;&gt;hashcat&lt;/a&gt;, including &lt;a href=&#34;https://www.evilsocket.net/2019/02/13/Pwning-WiFi-networks-with-bettercap-and-the-PMKID-client-less-attack/&#34;&gt;PMKIDs&lt;/a&gt;, full and half WPA handshakes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/X68GXrn.png&#34; alt=&#34;ui&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Instead of merely playing &lt;a href=&#34;https://becominghuman.ai/getting-mario-back-into-the-gym-setting-up-super-mario-bros-in-openais-gym-8e39a96c1e41?gi=c4b66c3d5ced&#34;&gt;Super Mario or Atari games&lt;/a&gt; like most reinforcement learning-based &#34;AI&#34; &lt;em&gt;(yawn)&lt;/em&gt;, Pwnagotchi tunes &lt;a href=&#34;https://github.com/evilsocket/pwnagotchi/raw/master/pwnagotchi/defaults.toml&#34;&gt;its parameters&lt;/a&gt; over time to &lt;strong&gt;get better at pwning Wi-Fi things to&lt;/strong&gt; in the environments you expose it to.&lt;/p&gt; &#xA;&lt;p&gt;More specifically, Pwnagotchi is using an &lt;a href=&#34;https://stable-baselines.readthedocs.io/en/master/modules/policies.html#stable_baselines.common.policies.MlpLstmPolicy&#34;&gt;LSTM with MLP feature extractor&lt;/a&gt; as its policy network for the &lt;a href=&#34;https://stable-baselines.readthedocs.io/en/master/modules/a2c.html&#34;&gt;A2C agent&lt;/a&gt;. If you&#39;re unfamiliar with A2C, here is &lt;a href=&#34;https://hackernoon.com/intuitive-rl-intro-to-advantage-actor-critic-a2c-4ff545978752&#34;&gt;a very good introductory explanation&lt;/a&gt; (in comic form!) of the basic principles behind how Pwnagotchi learns. (You can read more about how Pwnagotchi learns in the &lt;a href=&#34;https://www.pwnagotchi.ai/usage/#training-the-ai&#34;&gt;Usage&lt;/a&gt; doc.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Keep in mind:&lt;/strong&gt; Unlike the usual RL simulations, Pwnagotchi learns over time. Time for a Pwnagotchi is measured in epochs; a single epoch can last from a few seconds to minutes, depending on how many access points and client stations are visible. Do not expect your Pwnagotchi to perform amazingly well at the very beginning, as it will be &lt;a href=&#34;https://hackernoon.com/intuitive-rl-intro-to-advantage-actor-critic-a2c-4ff545978752&#34;&gt;exploring&lt;/a&gt; several combinations of &lt;a href=&#34;https://www.pwnagotchi.ai/usage/#training-the-ai&#34;&gt;key parameters&lt;/a&gt; to determine ideal adjustments for pwning the particular environment you are exposing it to during its beginning epochs ... but ** listen to your Pwnagotchi when it tells you it&#39;s boring!** Bring it into novel Wi-Fi environments with you and have it observe new networks and capture new handshakes—and you&#39;ll see. :)&lt;/p&gt; &#xA;&lt;p&gt;Multiple units within close physical proximity can &#34;talk&#34; to each other, advertising their presence to each other by broadcasting custom information elements using a parasite protocol I&#39;ve built on top of the existing dot11 standard. Over time, two or more units trained together will learn to cooperate upon detecting each other&#39;s presence by dividing the available channels among them for optimal pwnage.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.pwnagotchi.ai&#34;&gt;https://www.pwnagotchi.ai&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&amp;nbsp;&lt;/th&gt; &#xA;   &lt;th&gt;Official Links&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Website&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pwnagotchi.ai/&#34;&gt;pwnagotchi.ai&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Forum&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://community.pwnagotchi.ai/&#34;&gt;community.pwnagotchi.ai&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Slack&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://invite.pwnagotchi.ai/&#34;&gt;pwnagotchi.slack.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Subreddit&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.reddit.com/r/pwnagotchi/&#34;&gt;r/pwnagotchi&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Twitter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/pwnagotchi&#34;&gt;@pwnagotchi&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;pwnagotchi&lt;/code&gt; is made with ♥ by &lt;a href=&#34;https://twitter.com/evilsocket&#34;&gt;@evilsocket&lt;/a&gt; and the &lt;a href=&#34;https://github.com/evilsocket/pwnagotchi/graphs/contributors&#34;&gt;amazing dev team&lt;/a&gt;. It is released under the GPL3 license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>end-4/dots-hyprland</title>
    <updated>2024-03-31T01:48:56Z</updated>
    <id>tag:github.com,2024-03-31:/end-4/dots-hyprland</id>
    <link href="https://github.com/end-4/dots-hyprland" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modern, feature-rich and accessible desktop configuration.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;【 end_4&#39;s Hyprland dotfiles 】&lt;/h1&gt; &#xA; &lt;h3&gt;&lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/end-4/dots-hyprland?&amp;amp;style=for-the-badge&amp;amp;color=FFB1C8&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=292324&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/end-4/dots-hyprland?style=for-the-badge&amp;amp;logo=andela&amp;amp;color=FFB686&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=292324&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://github.com/end-4/hyprland&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/repo-size/end-4/dots-hyprland?color=CAC992&amp;amp;label=SIZE&amp;amp;logo=googledrive&amp;amp;style=for-the-badge&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=292324&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/issues-skill-green?style=for-the-badge&amp;amp;color=CCE8E9&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=292324&#34; alt=&#34;&#34;&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Notable features&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Overview widget&lt;/strong&gt;: shows open apps. Type to search/calculate/run&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;AI Assisstant&lt;/strong&gt;: ChatGPT and Google Gemini&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Autogenerated colors&lt;/strong&gt; based on your wallpaper using &lt;a href=&#34;https://m3.material.io/styles/color/the-color-system/key-colors-tones&#34;&gt;Material colors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Animations&lt;/strong&gt;, a lot&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Instructions&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Automated installation for Arch(-based) Linux:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash &amp;lt;(curl -s &#34;https://end-4.github.io/dots-hyprland-wiki/setup.sh&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Manual installation, other distros and more: &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;See the &lt;a href=&#34;https://end-4.github.io/dots-hyprland-wiki/en/i-i/01setup/&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;(&lt;em&gt;Available in: English, Vietnamese, and Simplified Chinese. Translations are welcome.&lt;/em&gt;)&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Help improve these dotfiles!&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Join the &lt;a href=&#34;https://github.com/end-4/dots-hyprland/discussions&#34;&gt;discussions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;If you&#39;d like to suggest fixes or a new widget, feel free to &lt;a href=&#34;https://github.com/end-4/dots-hyprland/issues/new/choose&#34;&gt;open an issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/end-4/dots-hyprland/tree/illogical-impulse&#34;&gt;illogical_impulse&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;AI, on-screen indicators&lt;/strong&gt; &lt;img src=&#34;https://github.com/end-4/dots-hyprland/assets/97237370/5e081770-0f1e-45c4-ad9c-3d19f488cd85&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fancy notifications, music controls, system, calendar&lt;/strong&gt; &lt;img src=&#34;https://github.com/end-4/dots-hyprland/assets/97237370/90c13b64-cde3-4363-9716-718d35845d95&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- ![image](https://github.com/end-4/dots-hyprland/assets/97237370/9e7adedd-fae8-4cc8-9c81-d7ad489d7559) --&gt; &#xA;&lt;p&gt;&lt;strong&gt;Weeb powers&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;!-- ![image](https://github.com/end-4/dots-hyprland/assets/97237370/98fe2c03-a128-45c0-8155-3a6080db3b84) --&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/end-4/dots-hyprland/assets/97237370/711f5475-93ca-4097-a960-8047acc85cc7&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Easy window management&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;!--! ![image](https://github.com/end-4/dots-hyprland/assets/97237370/354431f6-8939-487f-9292-0bac71cf9ca8) --&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/end-4/dots-hyprland/assets/97237370/14e9725c-789f-4412-87b6-cce9504db109&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Only the above is maintained&lt;/li&gt; &#xA;  &lt;li&gt;Stuff below: &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Currently, they do NOT work (see &lt;a href=&#34;https://github.com/end-4/dots-hyprland/issues/99&#34;&gt;#99&lt;/a&gt;)&lt;/li&gt; &#xA;    &lt;li&gt;The pics are here mainly for your viewing pleasure&lt;/li&gt; &#xA;    &lt;li&gt;The files are still available, feel free to grab them from &lt;a href=&#34;https://github.com/end-4/dots-hyprland/tree/archive&#34;&gt;&lt;code&gt;archive&lt;/code&gt;&lt;/a&gt; branch if you&#39;re willing to see some spaghetti and troubleshoot&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;stuff below have showcase videos. click image to view.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/end-4/dots-hyprland/tree/archive&#34;&gt;m3ww&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;a href=&#34;https://streamable.com/85ch8x&#34;&gt; &lt;img src=&#34;https://github.com/end-4/dots-hyprland/assets/97237370/09533e64-b6d7-47eb-a840-ee90c6776adf&#34; alt=&#34;Material Eww!&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/end-4/dots-hyprland/tree/archive&#34;&gt;NovelKnock&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;a href=&#34;https://streamable.com/7vo61k&#34;&gt; &lt;img src=&#34;https://github.com/end-4/dots-hyprland/assets/97237370/42903d03-bf6f-49d4-be7f-dd77e6cb389d&#34; alt=&#34;Desktop Preview&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/end-4/dots-hyprland/tree/archive&#34;&gt;Hybrid&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;a href=&#34;https://streamable.com/4oogot&#34;&gt; &lt;img src=&#34;https://github.com/end-4/dots-hyprland/assets/97237370/190deb1e-f6f5-46ce-8cf0-9b39944c079d&#34; alt=&#34;click the circles!&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/end-4/dots-hyprland/tree/archive&#34;&gt;Windoes&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;a href=&#34;https://streamable.com/5qx614&#34;&gt; &lt;img src=&#34;https://github.com/end-4/dots-hyprland/assets/97237370/b15317b1-f295-49f5-b90c-fb6328b8d886&#34; alt=&#34;Desktop Preview&#34;&gt; &lt;/a&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Thank you&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/clsty&#34;&gt;@clsty&lt;/a&gt; for major improvements to the install script and their other contributions&lt;/li&gt; &#xA; &lt;li&gt;AGS: &lt;a href=&#34;https://github.com/Aylur/dotfiles&#34;&gt;Aylur&#39;s config&lt;/a&gt;, &lt;a href=&#34;https://github.com/kotontrion/dotfiles&#34;&gt;kotontrion&#39;s config&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;EWW: &lt;a href=&#34;https://github.com/fufexan/dotfiles&#34;&gt;fufexan&#39;s config&lt;/a&gt; (he thanks more people there btw)&lt;/li&gt; &#xA; &lt;li&gt;AI bots for providing useful examples&lt;/li&gt; &#xA; &lt;li&gt;Open source contributors for their software and ricers for their insipration (would be a too long list to put here!)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stonks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;thank you&lt;/em&gt; &lt;a href=&#34;https://starchart.cc/end-4/dots-hyprland&#34;&gt;&lt;img src=&#34;https://starchart.cc/end-4/dots-hyprland.svg?background=%230d1117&amp;amp;axis=%23e6edf3&amp;amp;line=%234759e7&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Inspirations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;osu!lazer, Windows 11, Material Design 3, AvdanOS (concept)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>