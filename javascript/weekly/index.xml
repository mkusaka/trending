<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-17T02:03:48Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>givanz/VvvebJs</title>
    <updated>2025-08-17T02:03:48Z</updated>
    <id>tag:github.com,2025-08-17:/givanz/VvvebJs</id>
    <link href="https://github.com/givanz/VvvebJs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Drag and drop page builder library written in vanilla javascript without dependencies or build tools.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VvvebJs&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://www.vvveb.com/admin/themes/default/img/biglogo.png&#34; alt=&#34;Vvveb&#34; /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Drag and drop page builder javascript library.&lt;/strong&gt; &lt;br /&gt; &lt;span&gt;Built with Vanilla Js with no dependencies or build tools and Bootstrap 5&lt;/span&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.vvveb.com&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://github.com/givanz/VvvebJs/wiki&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://github.com/givanz/VvvebJs/discussions&#34;&gt;Forum&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/vvvebcms&#34;&gt;Twitter&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://www.vvveb.com/vvvebjs/editor.html&#34;&gt;Live Demo&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;For a full featured Open Source CMS using VvvebJs page builder check &lt;a href=&#34;https://github.com/givanz/Vvveb&#34;&gt;Vvveb CMS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://github.com/givanz/landing&#34;&gt;Vvveb landing page template&lt;/a&gt; for demo page and Bootstrap 5 sections and blocks.&lt;/p&gt; &#xA;&lt;img src=&#34;https://www.vvveb.com/img/dark-theme.png&#34; /&gt; &#xA;&lt;img src=&#34;https://www.vvveb.com/img/light-theme.png&#34; /&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Components and blocks/snippets drag and drop and in page insert.&lt;/li&gt; &#xA; &lt;li&gt;Undo/Redo operations.&lt;/li&gt; &#xA; &lt;li&gt;One or two panels interface.&lt;/li&gt; &#xA; &lt;li&gt;File manager and component hierarchy navigation.&lt;/li&gt; &#xA; &lt;li&gt;Add new page modal with template and folder options.&lt;/li&gt; &#xA; &lt;li&gt;Live code editor with codemirror plugin syntax highlighting.&lt;/li&gt; &#xA; &lt;li&gt;Image upload with example php script included.&lt;/li&gt; &#xA; &lt;li&gt;Page download or export html or save page on server with example php script included.&lt;/li&gt; &#xA; &lt;li&gt;Components/Sections/Blocks list search.&lt;/li&gt; &#xA; &lt;li&gt;Bootstrap 5 components.&lt;/li&gt; &#xA; &lt;li&gt;Media gallery with integrated CC0 image search and server upload support.&lt;/li&gt; &#xA; &lt;li&gt;Image, video and iframe elements resize handles.&lt;/li&gt; &#xA; &lt;li&gt;Elements breadcrumb for easier parent elements selection.&lt;/li&gt; &#xA; &lt;li&gt;Full Google fonts list support for font selection.&lt;/li&gt; &#xA; &lt;li&gt;Youtube, Google maps, Charts.js etc widgets.&lt;/li&gt; &#xA; &lt;li&gt;Optional CKEditor plugin to replace builtin text editor.&lt;/li&gt; &#xA; &lt;li&gt;Zip download plugin to download the page and all assets as zip file.&lt;/li&gt; &#xA; &lt;li&gt;SVG Icon component bundled with hundreds of free icons.&lt;/li&gt; &#xA; &lt;li&gt;Animate on scroll support for page elements.&lt;/li&gt; &#xA; &lt;li&gt;Theme global typography and color pallette editor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By default the editor comes with Bootstrap 5 and Widgets components and can be extended with any kind of components and inputs.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#git 2.13+ &#xA;git clone --recurse-submodules https://github.com/givanz/VvvebJs&#xA;&#xA;# older git versions &#xA;git clone --recursive https://github.com/givanz/VvvebJs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pull changes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git pull --recurse-submodules&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repository or download a release then open &lt;code&gt;editor.html&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Because of browser iframe security you need to use a webserver such as apache/xampp and open &lt;code&gt;http://localhost/editor.html&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use the image upload or page save feature you need to have php installed.&lt;/p&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;h3&gt;Local development&lt;/h3&gt; &#xA;&lt;p&gt;From VvvebJs folder run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Image&lt;/h3&gt; &#xA;&lt;p&gt;Or run image&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 8080:80 vvveb/vvvebjs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:8080/editor.php&#34;&gt;http://localhost:8080/editor.php&lt;/a&gt; or &lt;a href=&#34;http://localhost:8080/editor.html&#34;&gt;http://localhost:8080/editor.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Save page&lt;/h2&gt; &#xA;&lt;p&gt;Save page function needs either php or node&lt;/p&gt; &#xA;&lt;h3&gt;PHP&lt;/h3&gt; &#xA;&lt;p&gt;If you use docker, xampp or a shared hosting account php should work without any change.&lt;/p&gt; &#xA;&lt;p&gt;Saving is done using &lt;a href=&#34;https://raw.githubusercontent.com/givanz/VvvebJs/master/save.php&#34;&gt;save.php&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Node&lt;/h3&gt; &#xA;&lt;p&gt;For node go to VvvebJs folder and run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install express&#xA;node save.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:8080/editor.html&#34;&gt;http://localhost:8080/editor.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Saving is done using &lt;a href=&#34;https://raw.githubusercontent.com/givanz/VvvebJs/master/save.js&#34;&gt;save.js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/givanz/landing&#34;&gt;Landing template&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;To make changes to template files or sections run the following commands from &lt;code&gt;demo/landing&lt;/code&gt; folder&lt;/p&gt; &#xA;&lt;h3&gt;Install gulp&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate html files&lt;/h3&gt; &#xA;&lt;p&gt;Template html partials are located in &lt;code&gt;demo/landing/src&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run gulp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Watch for changes for development&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run gulp watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate sections list for page builder&lt;/h3&gt; &#xA;&lt;p&gt;Sections html files are located in &lt;code&gt;demo/landing/src/sections&lt;/code&gt; folder grouped in folders with the section group name.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run gulp sections&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate blocks list&lt;/h3&gt; &#xA;&lt;p&gt;Blocks html files are located in &lt;code&gt;demo/landing/src/blocks&lt;/code&gt; folder grouped in folders with the blocks group name.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run gulp blocks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate screenshots for sections&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run gulp screenshots&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Initialize example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&amp;lt;!-- bootstrap--&amp;gt;&#xA;&amp;lt;script src=&#34;js/popper.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script src=&#34;js/bootstrap.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&#xA;&amp;lt;!-- builder code--&amp;gt;&#xA;&amp;lt;script src=&#34;libs/builder/builder.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#x9;&#xA;&amp;lt;!-- undo manager--&amp;gt;&#xA;&amp;lt;script src=&#34;libs/builder/undo.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#x9;&#xA;&amp;lt;!-- inputs--&amp;gt;&#xA;&amp;lt;script src=&#34;libs/builder/inputs.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#x9;&#xA;&amp;lt;!-- components--&amp;gt;&#xA;&amp;lt;script src=&#34;libs/builder/components-bootstrap5.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#x9;&#xA;&amp;lt;script src=&#34;libs/builder/components-widgets.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#x9;&#xA;&#xA;&amp;lt;script&amp;gt;&#xA;let pages = [&#xA; {&#xA;&#x9;name:&#34;narrow-jumbotron&#34;, &#xA;&#x9;title:&#34;Jumbotron&#34;, &#xA;&#x9;url: &#34;demo/narrow-jumbotron/index.html&#34;, &#xA;&#x9;file: &#34;demo/narrow-jumbotron/index.html&#34;&#xA;  },&#xA;  {name:&#34;landing-page&#34;, title:&#34;Landing page&#34;, url: &#34;demo/landing/index.html&#34;, file: &#34;demo/landing/index.html&#34;},&#xA;];&#xA;&#x9;&#xA;&#xA;let firstPage = Object.keys(pages)[0];&#xA;Vvveb.Builder.init(pages[firstPage][&#34;url&#34;], function() {&#xA;&#x9;//load code after page is loaded here&#xA;});&#xA;&#xA;Vvveb.Gui.init();&#xA;Vvveb.FileManager.init();&#xA;Vvveb.SectionList.init();&#xA;Vvveb.Breadcrumb.init();&#xA;&#xA;Vvveb.FileManager.addPages(pages);&#xA;Vvveb.FileManager.loadPage(pages[firstPage][&#34;name&#34;]);&#xA;Vvveb.Gui.toggleRightColumn(false);&#xA;Vvveb.Breadcrumb.init();&#xA;&#xA;&amp;lt;script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For editor html and components/input javascript templates edit &lt;a href=&#34;https://raw.githubusercontent.com/givanz/VvvebJs/master/editor.html&#34;&gt;editor.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For css changes edit &lt;a href=&#34;https://raw.githubusercontent.com/givanz/VvvebJs/master/scss/editor.scss&#34;&gt;scss/editor.scss&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/givanz/VvvebJs/master/scss/_builder.scss&#34;&gt;scss/_builder.scss&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Scss&lt;/h3&gt; &#xA;&lt;p&gt;To compile scss to css first install gulp&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run gulp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or use watch to compile on file change.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run gulp watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For documentation check the &lt;a href=&#34;https://github.com/givanz/VvvebJs/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you like the project you can support it with a &lt;a href=&#34;https://paypal.me/zgivan&#34;&gt;PayPal donation&lt;/a&gt; or become a backer/sponsor via &lt;a href=&#34;https://opencollective.com/vvvebjs&#34;&gt;Open Collective&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/vvvebjs/sponsors/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/vvvebjs/sponsors/0/avatar&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vvvebjs/backers/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/vvvebjs/backers/0/avatar&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache 2.0&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mikechambers/adb-mcp</title>
    <updated>2025-08-17T02:03:48Z</updated>
    <id>tag:github.com,2025-08-17:/mikechambers/adb-mcp</id>
    <link href="https://github.com/mikechambers/adb-mcp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;adb-mcp&lt;/h1&gt; &#xA;&lt;p&gt;adb-mcp is a proof of concept project to enabled AI control of Adobe tools (Adobe Photoshop and Adobe Premiere) by providing an interface to LLMs via the MCP protocol.&lt;/p&gt; &#xA;&lt;p&gt;The project is not endorsed by nor supported by Adobe.&lt;/p&gt; &#xA;&lt;p&gt;It has been tested with Claude desktop (Mac and Windows) from Anthropic, as well as the OpenAI Agent SDK, and allows AI clients to control Adobe Photoshop and Adobe Premiere. Theoretically, it should work with any AI App / LLM that supports the MCP protocol, and is built in a way to support multiple Adobe applications.&lt;/p&gt; &#xA;&lt;p&gt;Example use cases include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Giving Claude step by step instruction on what to do in Photoshop, providing a conversational based interface (particularly useful if you are new to Photoshop).&lt;/li&gt; &#xA; &lt;li&gt;Giving Claude a task (create an instagram post that looks like a Polariod image, create a double exposure) and letting it create it from start to finish to use as a template.&lt;/li&gt; &#xA; &lt;li&gt;Asking Claude to generate custom Photoshop tutorials for you, by creating an example file, then step by step instructions on how to recreate.&lt;/li&gt; &#xA; &lt;li&gt;As a Photoshop utility tool (have Claude rename all of your layers into a consistent format)&lt;/li&gt; &#xA; &lt;li&gt;Have Claude create new Premiere projects pre-populations with clips, transitions, effects and Audio&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLrZcuHfRluqt5JQiKzMWefUb0Xumb7MkI&#34;&gt;View Video Examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Premiere agent is a bit more limited in functionality compared to the Photoshop agent, due to current limitations of the Premiere plugin API.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;The proof of concept works by providing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A MCP Server that provides an interface to functionality within Adobe Photoshop to the AI / LLM&lt;/li&gt; &#xA; &lt;li&gt;A Node based command proxy server that sits between the MCP server and Adobe app plugins&lt;/li&gt; &#xA; &lt;li&gt;An Adobe app (Photoshop and Premiere) plugin that listens for commands, and drives the programs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;AI&lt;/strong&gt; &amp;lt;-&amp;gt; &lt;strong&gt;MCP Server&lt;/strong&gt; &amp;lt;-&amp;gt; &lt;strong&gt;Command Proxy Server&lt;/strong&gt; &amp;lt;-&amp;gt; &lt;strong&gt;Photoshop / Premiere UXP Plugin&lt;/strong&gt; &amp;lt;-&amp;gt; &lt;strong&gt;Photoshop / Premiere&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The proxy server is required because the public facing API for UXP Based JavaScript plugin does not allow it to listen on a socket connection (as a server) for the MCP Server to connect to (it can only connect to a socket as a client).&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;In order to run this, the following is required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AI LLM with support for MCP Protocol (tested with Claude desktop on Mac &amp;amp; Windows, and OpenAI Agent SDK)&lt;/li&gt; &#xA; &lt;li&gt;Python 3, which is used to run the MCP server provided with this project&lt;/li&gt; &#xA; &lt;li&gt;NodeJS, used to provide a proxy between the MCP server and Photoshop&lt;/li&gt; &#xA; &lt;li&gt;Adobe UXP Developer tool (available via Creative Cloud) used to install and debug the Photoshop / Premiere plugin used to connect to the proxy&lt;/li&gt; &#xA; &lt;li&gt;Adobe Photoshop (26.0 or greater) with the MCP Plugin installed or Adobe Premiere Beta (25.3 Build 46 or greater)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This guide assumes you&#39;re using Claude Desktop. Other MCP-compatible AI applications should work similarly.&lt;/p&gt; &#xA;&lt;p&gt;Choose your installation method:&lt;/p&gt; &#xA;&lt;h3&gt;Quick Start (Recommended for Testing)&lt;/h3&gt; &#xA;&lt;p&gt;Use this method if you want to try the system without modifying code.&lt;/p&gt; &#xA;&lt;h4&gt;1. Download Release Files&lt;/h4&gt; &#xA;&lt;p&gt;Download the latest release from the &lt;a href=&#34;https://github.com/mikechambers/adb-mcp/releases&#34;&gt;releases page&lt;/a&gt;, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Source code&lt;/li&gt; &#xA; &lt;li&gt;Claude MCP installers (.dxt files)&lt;/li&gt; &#xA; &lt;li&gt;Adobe plugins (.ccx files)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2. Install Claude Desktop&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and install &lt;a href=&#34;https://claude.ai/download&#34;&gt;Claude Desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Launch Claude Desktop to verify it works&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;3. Install MCP in Claude Desktop&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Launch Claude Desktop&lt;/li&gt; &#xA; &lt;li&gt;Double-click the appropriate .dxt file: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;photoshop-mcp.dxt&lt;/code&gt; for Photoshop&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;premiere-mcp.dxt&lt;/code&gt; for Premiere Pro&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Restart Claude Desktop&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Using Prebuilt Executables (Recommended)&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the appropriate executable for your platform from the latest release (files named like &lt;code&gt;adb-proxy-socket-macos-x64.zip&lt;/code&gt; (Intel), &lt;code&gt;adb-proxy-socket-macos-arm64.zip&lt;/code&gt; (Silicon), or &lt;code&gt;adb-proxy-socket-win-x64.exe.zip&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Unzip the executable.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From the terminal or console run the executable:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt; (Intel or Apple Silicon): &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./adb-proxy-socket-macos-x64&#xA;&lt;/code&gt;&lt;/pre&gt; or &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./adb-proxy-socket-macos-arm64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;:&lt;br /&gt; Double-click &lt;code&gt;adb-proxy-socket-win.exe&lt;/code&gt; or run in Command Prompt: &lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;adb-proxy-socket-win.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You should see a message like:&lt;br /&gt; &lt;code&gt;Photoshop MCP Command proxy server running on ws://localhost:3001&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Keep this running&lt;/strong&gt; — the proxy server must stay active for Claude to communicate with Adobe plugins.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;5. Install Adobe Plugins&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the Adobe application you want to use (Photoshop or Premiere Pro)&lt;/li&gt; &#xA; &lt;li&gt;Download and launch &lt;strong&gt;Adobe UXP Developer Tools&lt;/strong&gt; from Creative Cloud&lt;/li&gt; &#xA; &lt;li&gt;In UXP Developer Tools: &lt;strong&gt;File &amp;gt; Add Plugin&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select the appropriate .ccx file from your downloads&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Load&lt;/strong&gt; to install the plugin&lt;/li&gt; &#xA; &lt;li&gt;In your Adobe application, find the plugin panel: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Photoshop&lt;/strong&gt;: Plugins menu&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Premiere Pro&lt;/strong&gt;: Window &amp;gt; UXP Plugins menu&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Connect&lt;/strong&gt; in the plugin panel&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Development Setup&lt;/h3&gt; &#xA;&lt;p&gt;Use this method if you want to modify the code or access the latest features.&lt;/p&gt; &#xA;&lt;h4&gt;1. Download Source Code&lt;/h4&gt; &#xA;&lt;p&gt;Clone or download the source code from the &lt;a href=&#34;https://github.com/mikechambers/adb-mcp&#34;&gt;main project page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;2. Install Claude Desktop&lt;/h4&gt; &#xA;&lt;p&gt;Same as Quick Start step 2.&lt;/p&gt; &#xA;&lt;h4&gt;3. Install MCP for Development&lt;/h4&gt; &#xA;&lt;p&gt;Navigate to the project directory and run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Photoshop:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;uv run mcp install --with fonttools --with python-socketio --with mcp --with requests --with websocket-client --with numpy ps-mcp.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Premiere Pro:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;uv run mcp install --with fonttools --with python-socketio --with mcp --with requests --with websocket-client --with pillow pr-mcp.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Restart Claude Desktop after installation.&lt;/p&gt; &#xA;&lt;h4&gt;4. Set Up Proxy Server&lt;/h4&gt; &#xA;&lt;p&gt;Same as Quick Start step 4.&lt;/p&gt; &#xA;&lt;h4&gt;5. Enable Developer Mode in Adobe Applications&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Photoshop:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Launch Photoshop (2025/26.0 or greater)&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;strong&gt;Settings &amp;gt; Plugins&lt;/strong&gt; and check &lt;strong&gt;&#34;Enable Developer Mode&#34;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Restart Photoshop&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Premiere Pro:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Launch Premiere Pro Beta (25.3 or greater)&lt;/li&gt; &#xA; &lt;li&gt;Developer mode should be available by default in the beta&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;6. Install Plugins for Development&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Launch &lt;strong&gt;UXP Developer Tools&lt;/strong&gt; from Creative Cloud&lt;/li&gt; &#xA; &lt;li&gt;Enable developer mode when prompted&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;File &amp;gt; Add Plugin&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the appropriate directory and select &lt;strong&gt;manifest.json&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Photoshop&lt;/strong&gt;: &lt;code&gt;uxp/ps/manifest.json&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Premiere Pro&lt;/strong&gt;: &lt;code&gt;uxp/pr/manifest.json&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Load&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;In your Adobe application, open the plugin panel and click &lt;strong&gt;Connect&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Using Claude with Adobe Apps&lt;/h2&gt; &#xA;&lt;p&gt;Launch the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Claude Desktop&lt;/li&gt; &#xA; &lt;li&gt;adb-proxy-socket node server&lt;/li&gt; &#xA; &lt;li&gt;Launch Photoshop and / or Premiere&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;TIP: Create a project for Photoshop / Premiere Pro in Claude and pre-load any app specific instructions in its Project knowledge.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Photoshop&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Launch UXP Developer Tool and click the Load button for &lt;em&gt;Photoshop MCP Agent&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;In Photoshop, if the MCP Agent panel is not open, open &lt;em&gt;Plugins &amp;gt; Photoshop MCP Agent &amp;gt; Photoshop MCP Agent&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click connect in the agent panel in Photoshop&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now you can switch over the Claude desktop. Before you start a session, you should load the instructions resource which will provide guidance and info the Claude by clicking the socket icon (Attach from MCP) and then &lt;em&gt;Choose an Integration&lt;/em&gt; &amp;gt; &lt;em&gt;Adobe Photoshop&lt;/em&gt; &amp;gt; &lt;em&gt;config://get_instructions&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Premiere&lt;/h3&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Launch UXP Developer Tool and click the Load button for &lt;em&gt;Premiere MCP Agent&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;In Premiere, if the MCP Agent panel is not open, open &lt;em&gt;Window &amp;gt; UXP Plugins &amp;gt; Premiere MCP Agent &amp;gt; Premiere MCP Agent&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click connect in the agent panel in Photoshop&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now you can switch over the Claude desktop. Before you start a session, you should load the instructions resource which will provide guidance and info the Claude by clicking the socket icon (Attach from MCP) and then &lt;em&gt;Choose an Integration&lt;/em&gt; &amp;gt; _Adobe Premiere &amp;gt; &lt;em&gt;config://get_instructions&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note, you must reload the plugin via the UCP Developer app every time you restart Photoshop and Premiere.&lt;/p&gt; &#xA;&lt;h3&gt;Setting up session&lt;/h3&gt; &#xA;&lt;p&gt;In the chat input field, click the &#34;+&#34; button. From there click &#34;Add from Adobe Photoshop / Premiere&#34; then select &lt;em&gt;config://get_instructions&lt;/em&gt;. This will load the instructions into the prompt. Submit that to Claude and once it processes it, you are ready to go.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mikechambers/adb-mcp/main/images/claud-attach-mcp.png&#34; width=&#34;300&#34; /&gt; &#xA;&lt;p&gt;This will help reduce errors when the AI is using the app.&lt;/p&gt; &#xA;&lt;h3&gt;Prompting&lt;/h3&gt; &#xA;&lt;p&gt;At anytime, you can ask the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Can you list what apis / functions are available for working with Photoshop / Premiere?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and it will list out all of the functionality available.&lt;/p&gt; &#xA;&lt;p&gt;When prompting, you do not need to reference the APIs, just use natural language to give instructions.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Create a new Photoshop file with a blue background, that is 1080 width by 720 height at 300 dpi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Create a new Photoshop file for an instagram post&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Create a double exposure image in Photoshop of a woman and a forest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Generate an image of a forest, and then add a clipping mask to only show the center in a circle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Make something cool with photoshop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Add cross fade transitions between all of the clips on the timeline in Premiere&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tips&lt;/h3&gt; &#xA;&lt;h4&gt;General&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When asking AI to view the content in Photoshop / Premiere Pro, you can see the image returned in the Tool Call item in the chat. It will appear once the entire response has been added to the chat.&lt;/li&gt; &#xA; &lt;li&gt;When prompting, ask the AI to think about and check its work.&lt;/li&gt; &#xA; &lt;li&gt;The more you guide it (i.e. &#34;consider using clipping masks&#34;) the better the results&lt;/li&gt; &#xA; &lt;li&gt;The more advanced the model, or the more resources given to the model the better and more creative the AI is.&lt;/li&gt; &#xA; &lt;li&gt;As a general rule, don&#39;t make changes in the Adobe Apps while the AI is doing work. If you do make changes, make sure to tell the AI about it.&lt;/li&gt; &#xA; &lt;li&gt;The AI will learn from its mistakes, but will lose its memory once you start a new chat. You can guide it to do things in a different way, and then ask it to start over and it should follow the new approach.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The AI currently has access to a subset of Photoshop / Premiere functionality. In general, the approach has been to provide lower level tools to give the AI the basics to do more complex stuff.&lt;/p&gt; &#xA;&lt;p&gt;The Photoshop plugin has more functionality that Premiere.&lt;/p&gt; &#xA;&lt;p&gt;By default, the AI cannot access files directly, although if you install the &lt;a href=&#34;https://www.claudemcp.com/servers/filesystem&#34;&gt;Claude File System MCP server&lt;/a&gt; it can access, and load files into Photoshop / Premiere (open files and embed images).&lt;/p&gt; &#xA;&lt;h4&gt;Photoshop&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can ask the AI to look at the content of the Photoshop file and it should be able to then see the output.&lt;/li&gt; &#xA; &lt;li&gt;The AI currently has issue sizing and positioning text correctly, so giving it guidelines on font sizes to use will help, as well as telling it to align the text relative to the canvas.&lt;/li&gt; &#xA; &lt;li&gt;The AI has access to all of the Postscript fonts on the system. If you want to specify a font, you must use its Postscript name (you may be able to ask the AI for it).&lt;/li&gt; &#xA; &lt;li&gt;You can ask the AI for suggestions. It comes up with really useful ideas / feedback sometimes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Premiere&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Currently the plugin assumes you are just working with a single sequence.&lt;/li&gt; &#xA; &lt;li&gt;Pair the Premiere Pro MCP with the &lt;a href=&#34;https://github.com/mikechambers/media-utils-mcp&#34;&gt;media-utils-mcp&lt;/a&gt; to expand functionality.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;h4&gt;MCP won&#39;t run in Claude&lt;/h4&gt; &#xA;&lt;p&gt;If you get an error when running Claude that the MCP is not working, you may need to edit your Claude config file and put an absolute path for the UV command. More info &lt;a href=&#34;https://github.com/mikechambers/adb-mcp/issues/5#issuecomment-2829817624&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;All fonts not available&lt;/h4&gt; &#xA;&lt;p&gt;The MCP server will return a list of available fonts, but depending on the number of fonts installed on your system, may omit some to work around the amount of data that can be send to the AI. By default it will list the first 1000 fonts sorted in alphabetical order.&lt;/p&gt; &#xA;&lt;p&gt;You can tell the AI to use a specific font, using its postscript name.&lt;/p&gt; &#xA;&lt;h4&gt;Plugin won&#39;t install or connect&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure the app is running before you try to load the plugin.&lt;/li&gt; &#xA; &lt;li&gt;In the UXP developer tool click the debug button next to load, and see if there are any errors.&lt;/li&gt; &#xA; &lt;li&gt;Make sure the node / proxy server is running. If you plugin connects you should see output similar to:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;adb-mcp Command proxy server running on ws://localhost:3001&#xA;User connected: Ud6L4CjMWGAeofYAAAAB&#xA;Client Ud6L4CjMWGAeofYAAAAB registered for application: photoshop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When you press the connect button, if it still says &#34;Connect&#34; it means there was either an error, or it can&#39;t connect to the proxy server. You can view the error in the UXP Developer App, by opening the Developer Workspace and click &#34;Debug&#34;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Errors within AI client&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If something fails on the AI side, it will usually tell you the issue. If you click the command / code box, you can see the error.&lt;/li&gt; &#xA; &lt;li&gt;The first thing to check if there is an issue is to make sure the plugin in Photoshop / Premiere is connected, and that the node proxy server is running.&lt;/li&gt; &#xA; &lt;li&gt;If response times get really slow, check if the AI servers are under load, and that you do not have too much text in the current conversation (restarting a new chat can sometimes help speed up, but you will lose the context).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you continue to have issues post an &lt;a href=&#34;https://github.com/mikechambers/adb-mcp/issuesrd.gg/fgxw9t37D7&#34;&gt;issue&lt;/a&gt;. Include as much information as you can (OS, App, App version, and debug info or errors).&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Adding new functionality is relatively easy, and requires:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Adding the API and parameters in the &lt;em&gt;mcp/ps-mcp.py&lt;/em&gt; / &lt;em&gt;mcp/pr-mcp.py&lt;/em&gt; file (which is used by the AI)&lt;/li&gt; &#xA; &lt;li&gt;Implementing the API in the &lt;em&gt;uxp/ps/commands/index.js&lt;/em&gt; / &lt;em&gt;uxp/pr/commands/index.js&lt;/em&gt; file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;TO BE COMPLETED&lt;/p&gt; &#xA;&lt;h2&gt;Questions, Feature Requests, Feedback&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions, feature requests, need help, or just want to chat, join the &lt;a href=&#34;https://discord.gg/fgxw9t37D7&#34;&gt;discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also log bugs and feature requests on the &lt;a href=&#34;https://github.com/mikechambers/adb-mcp/issues&#34;&gt;issues page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Project released under a &lt;a href=&#34;https://raw.githubusercontent.com/mikechambers/adb-mcp/main/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mikechambers/adb-mcp/main/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-orange.svg?sanitize=true&#34; alt=&#34;License: MIT&#34; /&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>qeeqbox/social-analyzer</title>
    <updated>2025-08-17T02:03:48Z</updated>
    <id>tag:github.com,2025-08-17:/qeeqbox/social-analyzer</id>
    <link href="https://github.com/qeeqbox/social-analyzer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;API, CLI, and Web App for analyzing and finding a person&#39;s profile in 1000 social media \ websites&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/socialanalyzerlogo_.png&#34; /&gt;&lt;/p&gt; &#xA;&lt;p&gt;Social Analyzer - API, CLI, and Web App for analyzing &amp;amp; finding a person&#39;s profile across +1000 social media \ websites. It includes different analysis and detection modules, and you can choose which modules to use during the investigation process.&lt;/p&gt; &#xA;&lt;p&gt;The detection modules utilize a rating mechanism based on different detection techniques, which produces a rate value that starts from 0 to 100 (No-Maybe-Yes). This module is intended to have fewer false positives.&lt;/p&gt; &#xA;&lt;p&gt;The analysis and public extracted information from this OSINT tool could help investigate profiles related to suspicious or malicious activities such as cyberbullying, cyber grooming, cyberstalking, and spreading misinformation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;This project is currently used by some law enforcement agencies in countries where resources are limited - The detection database is different than the one shared here..&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;So·cial Me·di·a&lt;/h2&gt; &#xA;&lt;p&gt;Websites and applications that enable users to create and share content or to participate in social networking - Oxford Dictionary&lt;/p&gt; &#xA;&lt;h2&gt;Structure&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/structure.png&#34; /&gt; &#xA;&lt;h2&gt;APP (Preferred!)&lt;/h2&gt; &#xA;&lt;p&gt;Standard localhost WEB APP url: &lt;a href=&#34;http://0.0.0.0:9005/app.html&#34;&gt;http://0.0.0.0:9005/app.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/intro_fast.gif&#34; style=&#34;max-width:768px&#34; /&gt; &#xA;&lt;h2&gt;CLI&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/cli.gif&#34; style=&#34;max-width:768px&#34; /&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;String &amp;amp; name analysis (Permutations and Combinations)&lt;/li&gt; &#xA; &lt;li&gt;Find a profile using multiple techniques (HTTPS library &amp;amp; Webdriver)&lt;/li&gt; &#xA; &lt;li&gt;Multi profile search (Used for correlation - any combination separated with &#34;,&#34; )&lt;/li&gt; &#xA; &lt;li&gt;Multilayers detections (OCR, normal, advanced &amp;amp; special)&lt;/li&gt; &#xA; &lt;li&gt;Visualized profile information using Ixora (Metadata &amp;amp; Patterns)&lt;/li&gt; &#xA; &lt;li&gt;Metadata &amp;amp; Patterns extraction (Added from Qeeqbox OSINT project)&lt;/li&gt; &#xA; &lt;li&gt;Force-directed Graph for Metadata (Needs ExtractPatterns)&lt;/li&gt; &#xA; &lt;li&gt;Search by top ranking or by country (Alexa Ranking)&lt;/li&gt; &#xA; &lt;li&gt;Search by type (adult, music, etc.. - automated websites stats)&lt;/li&gt; &#xA; &lt;li&gt;Profiles stats and static info (Category country)&lt;/li&gt; &#xA; &lt;li&gt;Cross Metadata stats (Added from Qeeqbox OSINT project)&lt;/li&gt; &#xA; &lt;li&gt;Auto-flirtation to unnecessary output (Enable javascript etc..)&lt;/li&gt; &#xA; &lt;li&gt;Search engine lookup (Google API - optional)&lt;/li&gt; &#xA; &lt;li&gt;Custom search queries (Google API &amp;amp; DuckDuckGo API - optional)&lt;/li&gt; &#xA; &lt;li&gt;Profile screenshot, title, info, and website description&lt;/li&gt; &#xA; &lt;li&gt;Find name origins, name similarity &amp;amp; common words by language&lt;/li&gt; &#xA; &lt;li&gt;Find possible profile\person age (Limited analysis)&lt;/li&gt; &#xA; &lt;li&gt;Custom user-agent, proxy, timeout &amp;amp; implicit wait&lt;/li&gt; &#xA; &lt;li&gt;Python CLI &amp;amp; NodeJS CLI (limited to FindUserProfilesFast option)&lt;/li&gt; &#xA; &lt;li&gt;Screenshots of detected profile (The latest version of Chrome must be installed)&lt;/li&gt; &#xA; &lt;li&gt;Grid option for faster checking (limited to docker-compose)&lt;/li&gt; &#xA; &lt;li&gt;Dump logs to folder or terminal (prettified)&lt;/li&gt; &#xA; &lt;li&gt;Adjust finding\getting profile workers (default 15)&lt;/li&gt; &#xA; &lt;li&gt;Re-checking option for failed profiles&lt;/li&gt; &#xA; &lt;li&gt;Filter profiles by good, maybe, and bad&lt;/li&gt; &#xA; &lt;li&gt;Save the analysis as a JSON file&lt;/li&gt; &#xA; &lt;li&gt;Simplified web interface and CLI&lt;/li&gt; &#xA; &lt;li&gt;And, more!!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Special Detections&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Facebook (Phone number, name, or profile name)&lt;/li&gt; &#xA; &lt;li&gt;Gmail (&lt;a href=&#34;mailto:example@gmail.com&#34;&gt;example@gmail.com&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Google (&lt;a href=&#34;mailto:example@example.com&#34;&gt;example@example.com&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install &amp;amp; Run&lt;/h2&gt; &#xA;&lt;h3&gt;Linux (As Node WebApp)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update&#xA;#Depedning on your Linux distro, you may or may not need these 2 lines&#xA;sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common&#xA;sudo add-apt-repository ppa:mozillateam/ppa -y&#xA;sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm&#xA;git clone https://github.com/qeeqbox/social-analyzer.git&#xA;cd social-analyzer&#xA;npm update&#xA;npm install&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux (As Node CLI)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update&#xA;#Depedning on your Linux distro, you may or may not need these 2 lines&#xA;sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common&#xA;sudo add-apt-repository ppa:mozillateam/ppa -y&#xA;sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm&#xA;git clone https://github.com/qeeqbox/social-analyzer.git&#xA;cd social-analyzer&#xA;npm install&#xA;nodejs app.js --username &#34;johndoe&#34;&#xA;#or&#xA;nodejs app.js --username &#34;johndoe,janedoe&#34; --metadata&#xA;#or&#xA;nodejs app.js --username &#34;johndoe,janedoe&#34; --metadata --top 100&#xA;#or&#xA;nodejs app.js --username &#34;johndoe&#34; --type &#34;adult&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux (As python package)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update&#xA;sudo apt-get install python3 python3-pip&#xA;pip3 install social-analyzer&#xA;python3 -m social-analyzer --username &#34;johndoe&#34;&#xA;#or&#xA;python3 -m social-analyzer --username &#34;johndoe&#34; --metadata&#xA;#or&#xA;python3 -m social-analyzer --username &#34;johndoe&#34; --metadata --top 100&#xA;#or&#xA;python3 -m social-analyzer --username &#34;johndoe&#34; --type &#34;adult&#34;&#xA;#or&#xA;python3 -m social-analyzer --username &#34;johndoe&#34; --websites &#34;car&#34; --logs --screenshots&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux (As python script)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update&#xA;sudo apt-get install git python3 python3-pip&#xA;git clone https://github.com/qeeqbox/social-analyzer&#xA;cd social-analyzer&#xA;pip3 install -r requirements.txt&#xA;python3 app.py --username &#34;janedoe&#34;&#xA;#or&#xA;python3 app.py --username &#34;johndoe&#34; --metadata&#xA;#or&#xA;python3 app.py --username &#34;johndoe&#34; --metadata --top 100&#xA;#or&#xA;python3 app.py --username &#34;johndoe&#34; --type &#34;adult&#34;&#xA;#or&#xA;python3 app.py --username &#34;johndoe&#34; --websites &#34;car&#34; --logs --screenshots&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Importing as object (python)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;#E.g. #1&#xA;from importlib import import_module&#xA;SocialAnalyzer = import_module(&#34;social-analyzer&#34;).SocialAnalyzer()&#xA;results = SocialAnalyzer.run_as_object(username=&#34;johndoe&#34;,silent=True)&#xA;print(results)&#xA;&#xA;#E.g. #2&#xA;from importlib import import_module&#xA;SocialAnalyzer = import_module(&#34;social-analyzer&#34;).SocialAnalyzer()&#xA;results = SocialAnalyzer.run_as_object(username=&#34;johndoe,janedoe&#34;,silent=True,output=&#34;json&#34;,filter=&#34;good&#34;,metadata=False,timeout=10, profiles=&#34;detected&#34;)&#xA;print(results)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux, Windows, MacOS, Raspberry pi..&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;check this &lt;a href=&#34;https://github.com/qeeqbox/social-analyzer/wiki/install&#34;&gt;wiki&lt;/a&gt; for all possible installation methods&lt;/li&gt; &#xA; &lt;li&gt;check this &lt;a href=&#34;https://github.com/qeeqbox/social-analyzer/wiki/integration&#34;&gt;wiki&lt;/a&gt; for integrating social-analyzer with your OSINT tools, feeds, etc...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;social-analyzer --h&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Required Arguments:&#xA;  --username   E.g. johndoe, john_doe or johndoe9999&#xA;&#xA;Optional Arguments:&#xA;  --websites    A website or websites separated by space E.g. youtube, tiktokor tumblr&#xA;  --mode        Analysis mode E.g.fast -&amp;gt; FindUserProfilesFast, slow -&amp;gt; FindUserProfilesSlow or special -&amp;gt; FindUserProfilesSpecial&#xA;  --output      Show the output in the following format: json -&amp;gt; json outputfor integration or pretty -&amp;gt; prettify the output&#xA;  --options     Show the following when a profile is found: link, rate, titleor text&#xA;  --method      find -&amp;gt; show detected profiles, get -&amp;gt; show all profiles regardless detected or not, all -&amp;gt; combine find &amp;amp; get&#xA;  --filter      Filter detected profiles by good, maybe or bad, you can do combine them with comma (good,bad) or use all&#xA;  --profiles    Filter profiles by detected, unknown or failed, you can do combine them with comma (detected,failed) or use all&#xA;  --countries   select websites by country or countries separated by space as: us br ru&#xA;  --type        Select websites by type (Adult, Music etc)&#xA;  --top         select top websites as 10, 50 etc...[--websites is not needed]&#xA;  --extract     Extract profiles, urls &amp;amp; patterns if possible&#xA;  --metadata    Extract metadata if possible (pypi QeeqBox OSINT)&#xA;  --trim        Trim long strings&#xA;  --gui         Reserved for a gui (Not implemented)&#xA;  --cli         Reserved for a cli (Not needed)&#xA;&#xA;Listing websites &amp;amp; detections:&#xA;  --list        List all available websites&#xA;&#xA;Setting:&#xA;  --headers     Headers as dict&#xA;  --logs_dir    Change logs directory&#xA;  --timeout     Change timeout between each request&#xA;  --silent      Disable output to screen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Open Shell&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://github.com/qeeqbox/social-analyzer&amp;amp;tutorial=README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=%3E_&amp;amp;message=Open%20in%20Cloud%20Shell&amp;amp;color=3267d6&amp;amp;style=flat-square&#34; alt=&#34;Open in Cloud Shell&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://repl.it/github/qeeqbox/social-analyzer&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=%3E_&amp;amp;message=Open%20in%20repl.it%20Shell&amp;amp;color=606c74&amp;amp;style=flat-square&#34; alt=&#34;Open in repl.it Shell&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DuckDuckGo API, Google API, NodeJS, bootstrap, selectize, jQuery, Wikipedia, font-awesome, selenium-webdriver &amp;amp; tesseract.js&lt;/li&gt; &#xA; &lt;li&gt;Let me know if I missed a reference or resource!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer\Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download this project from GitHub and treat it as a security project&lt;/li&gt; &#xA; &lt;li&gt;If you want your website to be excluded from this project list, please reach out to me&lt;/li&gt; &#xA; &lt;li&gt;This tool is meant to be used locally, not as a service (It does not have any Access Control)&lt;/li&gt; &#xA; &lt;li&gt;For issues related to modules that end with -private or under the private group &lt;img src=&#34;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/modules.png&#34; alt=&#34;&#34; /&gt;, reach out directly to me (do not open an issue on GitHub)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other Projects&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qeeqbox/analyzer&#34;&gt;&lt;img src=&#34;https://github.com/qeeqbox/.github/raw/main/data/analyzer.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qeeqbox/chameleon&#34;&gt;&lt;img src=&#34;https://github.com/qeeqbox/.github/raw/main/data/chameleon.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qeeqbox/honeypots&#34;&gt;&lt;img src=&#34;https://github.com/qeeqbox/.github/raw/main/data/honeypots.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qeeqbox/osint&#34;&gt;&lt;img src=&#34;https://github.com/qeeqbox/.github/raw/main/data/osint.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qeeqbox/url-sandbox&#34;&gt;&lt;img src=&#34;https://github.com/qeeqbox/.github/raw/main/data/url-sandbox.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qeeqbox/mitre-visualizer&#34;&gt;&lt;img src=&#34;https://github.com/qeeqbox/.github/raw/main/data/mitre-visualizer.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qeeqbox/woodpecker&#34;&gt;&lt;img src=&#34;https://github.com/qeeqbox/.github/raw/main/data/woodpecker.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qeeqbox/docker-images&#34;&gt;&lt;img src=&#34;https://github.com/qeeqbox/.github/raw/main/data/docker-images.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qeeqbox/seahorse&#34;&gt;&lt;img src=&#34;https://github.com/qeeqbox/.github/raw/main/data/seahorse.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qeeqbox/rhino&#34;&gt;&lt;img src=&#34;https://github.com/qeeqbox/.github/raw/main/data/rhino.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qeeqbox/raven&#34;&gt;&lt;img src=&#34;https://github.com/qeeqbox/.github/raw/main/data/raven.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qeeqbox/image-analyzer&#34;&gt;&lt;img src=&#34;https://github.com/qeeqbox/.github/raw/main/data/image-analyzer.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>