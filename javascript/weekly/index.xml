<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-28T01:39:06Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>drawdb-io/drawdb</title>
    <updated>2024-07-28T01:39:06Z</updated>
    <id>tag:github.com,2024-07-28:/drawdb-io/drawdb</id>
    <link href="https://github.com/drawdb-io/drawdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free, simple, and intuitive online database design tool and SQL generator.&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&#34;center&#34;&gt; &lt;img width=&#34;80&#34; alt=&#34;drawdb logo&#34; src=&#34;https://raw.githubusercontent.com/drawdb-io/drawdb/main/src/assets/icon-dark.png&#34;&gt; &lt;/h3&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Free, simple, and intuitive database design tool and SQL generator.&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://drawdb.app/&#34;&gt;drawDB&lt;/a&gt; · &lt;a href=&#34;https://discord.gg/BrjZgNrmR6&#34;&gt;Discord&lt;/a&gt; · &lt;a href=&#34;https://x.com/drawDB_&#34;&gt;X&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;&lt;img width=&#34;700&#34; style=&#34;border-radius:5px;&#34; alt=&#34;demo&#34; src=&#34;https://raw.githubusercontent.com/drawdb-io/drawdb/main/drawdb.gif&#34;&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;drawDB&lt;/h2&gt; &#xA;&lt;p&gt;DrawDB is a robust and user-friendly database entity relationship (DBER) editor right in your browser. Build diagrams with a few clicks, export sql scripts, customize your editor, and more without creating an account. See the full set of features &lt;a href=&#34;https://drawdb.app/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Local Development&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/drawdb-io/drawdb&#xA;cd drawdb&#xA;npm install&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/drawdb-io/drawdb&#xA;cd drawdb&#xA;npm install&#xA;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker Build&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t drawdb .&#xA;docker run -p 3000:80 drawdb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set up the &lt;a href=&#34;https://github.com/drawdb-io/drawdb-server&#34;&gt;server&lt;/a&gt; and environment variables according to &lt;code&gt;.env.sample&lt;/code&gt; for the survey and bug report forms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebook/react</title>
    <updated>2024-07-28T01:39:06Z</updated>
    <id>tag:github.com,2024-07-28:/facebook/react</id>
    <link href="https://github.com/facebook/react" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The library for web and native user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://react.dev/&#34;&gt;React&lt;/a&gt; · &lt;a href=&#34;https://github.com/facebook/react/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/react&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react.svg?style=flat&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/facebook/react&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/facebook/react.svg?style=shield&#34; alt=&#34;CircleCI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml&#34;&gt;&lt;img src=&#34;https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg?sanitize=true&#34; alt=&#34;(Runtime) Build and Test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/facebook/react/actions/workflows/compiler_typescript.yml&#34;&gt;&lt;img src=&#34;https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main&#34; alt=&#34;(Compiler) TypeScript&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Declarative:&lt;/strong&gt; React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Component-Based:&lt;/strong&gt; Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Learn Once, Write Anywhere:&lt;/strong&gt; We don&#39;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using &lt;a href=&#34;https://nodejs.org/en&#34;&gt;Node&lt;/a&gt; and power mobile apps using &lt;a href=&#34;https://reactnative.dev/&#34;&gt;React Native&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://react.dev/learn&#34;&gt;Learn how to use React in your project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;React has been designed for gradual adoption from the start, and &lt;strong&gt;you can use as little or as much React as you need&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://react.dev/learn&#34;&gt;Quick Start&lt;/a&gt; to get a taste of React.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/learn/add-react-to-an-existing-project&#34;&gt;Add React to an Existing Project&lt;/a&gt; to use as little or as much React as you need.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/learn/start-a-new-react-project&#34;&gt;Create a New React App&lt;/a&gt; if you&#39;re looking for a powerful JavaScript toolchain.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the React documentation &lt;a href=&#34;https://react.dev/&#34;&gt;on the website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://react.dev/learn&#34;&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; &#xA;&lt;p&gt;The documentation is divided into several sections:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/learn&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/learn/tutorial-tic-tac-toe&#34;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/learn/thinking-in-react&#34;&gt;Thinking in React&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/learn/installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/learn/describing-the-ui&#34;&gt;Describing the UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/learn/adding-interactivity&#34;&gt;Adding Interactivity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/learn/managing-state&#34;&gt;Managing State&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/learn/escape-hatches&#34;&gt;Advanced Guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/reference/react&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/community&#34;&gt;Where to Get Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://legacy.reactjs.org/docs/how-to-contribute.html&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can improve it by sending pull requests to &lt;a href=&#34;https://github.com/reactjs/react.dev&#34;&gt;this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;We have several examples &lt;a href=&#34;https://react.dev/&#34;&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { createRoot } from &#39;react-dom/client&#39;;&#xA;&#xA;function HelloMessage({ name }) {&#xA;  return &amp;lt;div&amp;gt;Hello {name}&amp;lt;/div&amp;gt;;&#xA;}&#xA;&#xA;const root = createRoot(document.getElementById(&#39;container&#39;));&#xA;root.render(&amp;lt;HelloMessage name=&#34;Taylor&#34; /&amp;gt;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This example will render &#34;Hello Taylor&#34; into a container on the page.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll notice that we used an HTML-like syntax; &lt;a href=&#34;https://react.dev/learn#writing-markup-with-jsx&#34;&gt;we call it JSX&lt;/a&gt;. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://code.fb.com/codeofconduct&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&#34;https://code.fb.com/codeofconduct&#34;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://legacy.reactjs.org/docs/how-to-contribute.html&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://legacy.reactjs.org/docs/how-to-contribute.html&#34;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/facebook/react/labels/good%20first%20issue&#34;&gt;Good First Issues&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href=&#34;https://github.com/facebook/react/labels/good%20first%20issue&#34;&gt;good first issues&lt;/a&gt; that contain bugs that have a relatively limited scope. This is a great place to get started.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;React is &lt;a href=&#34;https://raw.githubusercontent.com/facebook/react/main/LICENSE&#34;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tabler/tabler-icons</title>
    <updated>2024-07-28T01:39:06Z</updated>
    <id>tag:github.com,2024-07-28:/tabler/tabler-icons</id>
    <link href="https://github.com/tabler/tabler-icons" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A set of over 5400 free MIT-licensed high-quality SVG icons for you to use in your web projects.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tabler Icons&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/tabler/tabler-icons/main/.github/packages/og-core.png&#34; alt=&#34;Tabler Icons&#34; width=&#34;838&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A set of &#xA; &lt;!--icons-count--&gt;5450&#xA; &lt;!--/icons-count--&gt; free MIT-licensed high-quality SVG icons for you to use in your web projects. Each icon is designed on a 24x24 grid and a 2px stroke. &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://tabler-icons.io/&#34;&gt;&lt;strong&gt;Browse at tabler-icons.io →&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you want to support my project and help me grow it, you can &lt;a href=&#34;https://github.com/sponsors/codecalm&#34;&gt;become a sponsor on GitHub&lt;/a&gt; or just &lt;a href=&#34;https://paypal.me/codecalm&#34;&gt;donate on PayPal&lt;/a&gt; :)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/sponsors/codecalm&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/tabler/static/main/sponsors.png&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;h3&gt;Outline version (&#xA; &lt;!--icons-count-outline--&gt;4744&#xA; &lt;!--/icons-count-outline--&gt; icons)&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/tabler/tabler-icons/master/.github/preview/icons-outline-dark.png&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://raw.githubusercontent.com/tabler/tabler-icons/master/.github/preview/icons-outline.png&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/tabler/tabler-icons/master/.github/preview/icons-outline.png&#34; alt=&#34;Tabler Icons preview&#34; width=&#34;838&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Filled version (&#xA; &lt;!--icons-count-filled--&gt;706&#xA; &lt;!--/icons-count-filled--&gt; icons)&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/tabler/tabler-icons/master/.github/preview/icons-filled-dark.png&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://raw.githubusercontent.com/tabler/tabler-icons/master/.github/preview/icons-filled.png&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/tabler/tabler-icons/master/.github/preview/icons-filled.png&#34; alt=&#34;Tabler Icons preview&#34; width=&#34;838&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install @tabler/icons --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or just &lt;a href=&#34;https://github.com/tabler/tabler-icons/releases&#34;&gt;download from GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;All icons are built with SVG, so you can place them as &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, &lt;code&gt;background-image&lt;/code&gt; and inline in HTML code.&lt;/p&gt; &#xA;&lt;h3&gt;HTML image&lt;/h3&gt; &#xA;&lt;p&gt;If you load an icon as an image, you can modify its size using CSS.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;img src=&#34;path/to/icon.svg&#34; alt=&#34;icon title&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Inline HTML&lt;/h3&gt; &#xA;&lt;p&gt;You can paste the content of the icon file into your HTML code to display it on the page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&#34;&#34;&amp;gt;&#xA;  &amp;lt;svg&#xA;    xmlns=&#34;http://www.w3.org/2000/svg&#34;&#xA;    class=&#34;icon icon-tabler icon-tabler-disabled&#34;&#xA;    width=&#34;24&#34;&#xA;    height=&#34;24&#34;&#xA;    viewBox=&#34;0 0 24 24&#34;&#xA;    stroke-width=&#34;1.25&#34;&#xA;    stroke=&#34;currentColor&#34;&#xA;    fill=&#34;none&#34;&#xA;    stroke-linecap=&#34;round&#34;&#xA;    stroke-linejoin=&#34;round&#34;&#xA;  &amp;gt;&#xA;    ...&#xA;  &amp;lt;/svg&amp;gt;&#xA;  Click me&#xA;&amp;lt;/a&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Thanks to that, you can change the size, color and the &lt;code&gt;stroke-width&lt;/code&gt; of the icons with CSS code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.icon-tabler {&#xA;  color: red;&#xA;  width: 32px;&#xA;  height: 32px;&#xA;  stroke-width: 1.25;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SVG sprite&lt;/h3&gt; &#xA;&lt;p&gt;Add an icon to be displayed on your page with the following markup (&lt;code&gt;activity&lt;/code&gt; in the above example can be replaced with any valid icon name):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;svg width=&#34;24&#34; height=&#34;24&#34;&amp;gt;&#xA;  &amp;lt;use xlink:href=&#34;path/to/tabler-sprite.svg#tabler-activity&#34; /&amp;gt;&#xA;&amp;lt;/svg&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;React&lt;/h3&gt; &#xA;&lt;p&gt;React components available through &lt;a href=&#34;https://www.npmjs.com/package/@tabler/icons-react&#34;&gt;&lt;code&gt;@tabler/icons-react&lt;/code&gt;&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { IconAward } from &#39;@tabler/icons-react&#39;;&#xA;&#xA;const MyComponent = () =&amp;gt; {&#xA;  return &amp;lt;IconAward&#xA;    size={36} // set custom `width` and `height`&#xA;    color=&#34;red&#34; // set `stroke` color&#xA;    stroke={3}  // set `stroke-width`&#xA;    strokeLinejoin=&#34;miter&#34; // override other SVG props&#xA;  /&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;@tabler/icons-react&lt;/code&gt; exports its own type declarations for usage with React and Typescript.&lt;/p&gt; &#xA;&lt;p&gt;For more details, see the &lt;a href=&#34;https://github.com/tabler/tabler-icons/tree/master/packages/icons-react&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Vue&lt;/h3&gt; &#xA;&lt;p&gt;Vue components available through &lt;a href=&#34;https://www.npmjs.com/package/@tabler/icons-vue&#34;&gt;&lt;code&gt;@tabler/icons-vue&lt;/code&gt;&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;&#xA;  &amp;lt;!-- basic usage --&amp;gt;&#xA;  &amp;lt;IconHome /&amp;gt;&#xA;&#xA;  &amp;lt;!-- set `stroke` color --&amp;gt;&#xA;  &amp;lt;IconHome color=&#34;red&#34;/&amp;gt;&#xA;  &amp;lt;IconHome stroke=&#34;red&#34;/&amp;gt;&#xA;&#xA;  &amp;lt;!-- set custom `width` and `height` --&amp;gt;&#xA;  &amp;lt;IconHome size=&#34;36&#34;/&amp;gt;&#xA;&#xA;  &amp;lt;!-- set `stroke-width` --&amp;gt;&#xA;  &amp;lt;IconHome strokeWidth=&#34;2&#34;/&amp;gt;&#xA;  &amp;lt;IconHome stroke-width=&#34;2&#34;/&amp;gt;&#xA;&amp;lt;/template&amp;gt;&#xA;&#xA;&amp;lt;script&amp;gt;&#xA;// Returns Vue component&#xA;import { IconHome } from &#39;@tabler/icons-vue&#39;;&#xA;&#xA;export default {&#xA;  components: { IconHome }&#xA;};&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or with &lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;script setup&amp;gt;&#xA;// Import Vue component&#xA;import { IconHome } from &#39;@tabler/icons-vue&#39;;&#xA;&amp;lt;/script&amp;gt;&#xA;&#xA;&amp;lt;template&amp;gt;&#xA;  &amp;lt;IconHome color=&#34;red&#34; size=&#34;36&#34; strokeWidth=&#34;2&#34;/&amp;gt;&#xA;&amp;lt;/template&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more details, see the &lt;a href=&#34;https://github.com/tabler/tabler-icons/tree/master/packages/icons-vue&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Angular&lt;/h3&gt; &#xA;&lt;p&gt;Angular components available through &lt;a href=&#34;https://www.npmjs.com/package/angular-tabler-icons&#34;&gt;&lt;code&gt;angular-tabler-icons&lt;/code&gt;&lt;/a&gt; package. Install the package, then create icons module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { NgModule } from &#39;@angular/core&#39;;&#xA;&#xA;import { TablerIconsModule } from &#39;angular-tabler-icons&#39;;&#xA;import { IconCamera, IconHeart, IconBrandGithub } from &#39;angular-tabler-icons/icons&#39;;&#xA;&#xA;// Select some icons (use an object, not an array)&#xA;const icons = {&#xA;  IconCamera,&#xA;  IconHeart,&#xA;  IconBrandGithub&#xA;};&#xA;&#xA;@NgModule({&#xA;  imports: [&#xA;    TablerIconsModule.pick(icons)&#xA;  ],&#xA;  exports: [&#xA;    TablerIconsModule&#xA;  ]&#xA;})&#xA;export class IconsModule { }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After importing the &lt;em&gt;IconsModule&lt;/em&gt; in your feature or shared module, use the icons as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;i-tabler name=&#34;camera&#34;&amp;gt;&amp;lt;/i-tabler&amp;gt;&#xA;&amp;lt;i-tabler name=&#34;heart&#34; style=&#34;color: red;&#34;&amp;gt;&amp;lt;/i-tabler&amp;gt;&#xA;&amp;lt;i-tabler name=&#34;brand-github&#34; class=&#34;someclass&#34;&amp;gt;&amp;lt;/i-tabler&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;angular-tabler-icons&lt;/code&gt; exports its own type declarations for usage with Typescript.&lt;/p&gt; &#xA;&lt;p&gt;For more usage documentation refer to &lt;a href=&#34;https://github.com/pierreavn/angular-tabler-icons&#34;&gt;the official documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Svelte&lt;/h3&gt; &#xA;&lt;p&gt;Svelte components available through &lt;a href=&#34;https://github.com/tabler/tabler-icons/tree/master/packages/icons-svelte&#34;&gt;&lt;code&gt;@tabler/icons-svelte&lt;/code&gt;&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&amp;lt;script lang=&#34;ts&#34;&amp;gt;&#xA;  import { IconHeart } from &#39;@tabler/icons-svelte&#39;;&#xA;&amp;lt;/script&amp;gt;&#xA;&#xA;&amp;lt;main&amp;gt;&#xA;  &amp;lt;IconHeart size={48} stroke={1} /&amp;gt;&#xA;  &amp;lt;IconHeart size=&#34;32&#34; stroke=&#34;1.5&#34; /&amp;gt;&#xA;  &amp;lt;IconHeart color=&#34;crimson&#34; class=&#34;p-1&#34; size=&#34;96&#34; stroke=&#34;2&#34; /&amp;gt;&#xA;&amp;lt;/main&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CDN&lt;/h2&gt; &#xA;&lt;p&gt;All files included in &lt;code&gt;@tabler/icons&lt;/code&gt; npm package are available over a CDN.&lt;/p&gt; &#xA;&lt;h4&gt;React icons&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/@tabler/icons@latest/icons-react/dist/index.umd.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Iconfont&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/@tabler/icons-webfont@latest/tabler-icons.min.css&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To load a specific version replace &lt;code&gt;latest&lt;/code&gt; with the desired version number.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/@tabler/icons@1.74.0/icons-react/dist/index.umd.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;HTML&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;i class=&#34;ti ti-brand-tabler&#34;&amp;gt;&amp;lt;/i&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;CSS&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;content: &#39;ec8f&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compiling fonts&lt;/h3&gt; &#xA;&lt;p&gt;To compile fonts first install &lt;a href=&#34;https://fontforge.org/en-US/&#34;&gt;fontforge&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When compiling the font it will look for a json file &lt;code&gt;compile-options.json&lt;/code&gt; in root folder (same folder as the &lt;code&gt;package.json&lt;/code&gt;) In this file you can define extra options:&lt;/p&gt; &#xA;&lt;p&gt;The default settings if you have not defined the file will be:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;{&#xA;  &#34;includeIcons&#34;: [],&#xA;  &#34;fontForge&#34;: &#34;fontforge&#34;,&#xA;  &#34;strokeWidth&#34;: null&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The fontforge executable needs to be in the path or you can set the path to the downloaded fontforge executable in the configuration file. If you installed in on a mac in your application directory it will be &lt;code&gt;/Applications/FontForge.app/Contents/MacOS/FontForge&lt;/code&gt;. You can set this value in the &lt;code&gt;compile-options.json&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;{&#xA;  &#34;fontForge&#34;: &#34;/Applications/FontForge.app/Contents/MacOS/FontForge&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To compile the fonts run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run build-iconfont&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default the stroke width is 2. You can change the stroke width in the &lt;code&gt;compile-options.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;{&#xA;  &#34;strokeWidth&#34;: 1.5,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To reduce the font file size you can choose to compile a sub set of icons. When you leave the array empty it will compile all the fonts. To compile only two icons you can set for example the following option in the &lt;code&gt;compile-options.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;{&#xA;  &#34;includeIcons&#34;: [&#34;alert-octagon&#34;, &#34;alert-triangle&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional property &lt;code&gt;includeCategories&lt;/code&gt; - an array or string of icon categories to include, category names are case-insensitive.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;{&#xA;  &#34;includeCategories&#34;: [&#34;Devices&#34;, &#34;System&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;{&#xA;  &#34;includeCategories&#34;: &#34;Devices System&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional property &lt;code&gt;excludeIcons&lt;/code&gt; - an array of icon names using to exclude some category icons:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;{&#xA;  &#34;includeCategories&#34;: [&#34;system&#34;],&#xA;  &#34;excludeIcons&#34;: [&#34;adjustments&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Complex solution:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;{&#xA;  &#34;includeIcons&#34;: [&#34;alert-octagon&#34;, &#34;alert-triangle&#34;],&#xA;  &#34;includeCategories&#34;: [&#34;devices&#34;, &#34;system&#34;],&#xA;  &#34;excludeIcons&#34;: [&#34;adjustments&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Jetpack Compose&lt;/h3&gt; &#xA;&lt;p&gt;For Android or Desktop you can use &lt;a href=&#34;https://github.com/DevSrSouza/compose-icons&#34;&gt;&lt;code&gt;compose-icons&lt;/code&gt;&lt;/a&gt; to use icons in your projects. (see &lt;a href=&#34;https://github.com/DevSrSouza/compose-icons/raw/master/tabler-icons/DOCUMENTATION.md&#34;&gt;docs&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Multiple strokes&lt;/h2&gt; &#xA;&lt;p&gt;All icons in this repository have been created with the value of the &lt;code&gt;stroke-width&lt;/code&gt; property, so if you change the value, you can get different icon variants that will fit in well with your design.&lt;/p&gt; &#xA;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/tabler/tabler-icons/master/.github/icons-stroke-dark.png&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://raw.githubusercontent.com/tabler/tabler-icons/master/.github/icons-stroke.png&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/tabler/tabler-icons/master/.github/icons-stroke.png&#34; alt=&#34;Tabler Icons preview&#34; width=&#34;838&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Tabler Icons is licensed under the &lt;a href=&#34;https://github.com/tabler/tabler-icons/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsor Tabler&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/codecalm&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/tabler/tabler/raw/dev/src/static/sponsor-banner-readme.png?raw=true&#34; alt=&#34;Sponsor Tabler&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>