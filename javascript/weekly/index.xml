<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-18T01:55:23Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Mintplex-Labs/anything-llm</title>
    <updated>2023-06-18T01:55:23Z</updated>
    <id>tag:github.com,2023-06-18:/Mintplex-Labs/anything-llm</id>
    <link href="https://github.com/Mintplex-Labs/anything-llm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A full-stack application that turns any documents into an intelligent chatbot with a sleek UI and easier way to manage your workspaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ðŸ¤– AnythingLLM: A full-stack personalized AI assistant&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/tcarambat&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/tim.svg?style=social&amp;amp;label=Follow%20%40Timothy%20Carambat&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/6UyHPeGZAC&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/6UyHPeGZAC?compact=true&amp;amp;style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A full-stack application and tool suite that enables you to turn any document, resource, or piece of content into a piece of data that any LLM can use as reference during chatting. This application runs with very minimal overhead as by default the LLM and vectorDB are hosted remotely, but can be swapped for local instances. Currently this project supports &lt;a href=&#34;https://pinecone.io&#34;&gt;Pinecone&lt;/a&gt;, &lt;a href=&#34;https://trychroma.com&#34;&gt;ChromaDB&lt;/a&gt; &amp;amp; more for vector storage and &lt;a href=&#34;https://openai.com&#34;&gt;OpenAI&lt;/a&gt; for LLM/chatting.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Mintplex-Labs/anything-llm/master/images/screenshots/chat.png&#34; alt=&#34;Chatting&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Mintplex-Labs/anything-llm/master/images/screenshots/SCREENSHOTS.md&#34;&gt;view more screenshots&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Watch the demo!&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/0vZ69AIP_hM&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/0vZ69AIP_hM/maxresdefault.jpg&#34; alt=&#34;Watch the video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Product Overview&lt;/h3&gt; &#xA;&lt;p&gt;AnythingLLM aims to be a full-stack application where you can use commercial off-the-shelf LLMs with Long-term-memory solutions or use popular open source LLM and vectorDB solutions.&lt;/p&gt; &#xA;&lt;p&gt;Anything LLM is a full-stack product that you can run locally as well as host remotely and be able to chat intelligently with any documents you provide it.&lt;/p&gt; &#xA;&lt;p&gt;AnythingLLM divides your documents into objects called &lt;code&gt;workspaces&lt;/code&gt;. A Workspace functions a lot like a thread, but with the addition of containerization of your documents. Workspaces can share documents, but they do not talk to each other so you can keep your context for each workspace clean.&lt;/p&gt; &#xA;&lt;p&gt;Some cool features of AnythingLLM&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Atomically manage documents to be used in long-term-memory from a simple UI&lt;/li&gt; &#xA; &lt;li&gt;Two chat modes &lt;code&gt;conversation&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt;. Conversation retains previous questions and amendments. Query is simple QA against your documents&lt;/li&gt; &#xA; &lt;li&gt;Each chat response contains a citation that is linked to the original content&lt;/li&gt; &#xA; &lt;li&gt;Simple technology stack for fast iteration&lt;/li&gt; &#xA; &lt;li&gt;Fully capable of being hosted remotely&lt;/li&gt; &#xA; &lt;li&gt;&#34;Bring your own LLM&#34; model and vector solution. &lt;em&gt;still in progress&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extremely efficient cost-saving measures for managing very large documents. you&#39;ll never pay to embed a massive document or transcript more than once. 90% more cost effective than other LTM chatbots&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Technical Overview&lt;/h3&gt; &#xA;&lt;p&gt;This monorepo consists of three main sections:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;collector&lt;/code&gt;: Python tools that enable you to quickly convert online resources or local documents into LLM useable format.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;frontend&lt;/code&gt;: A viteJS + React frontend that you can run to easily create and manage all your content the LLM can use.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;server&lt;/code&gt;: A nodeJS + express server to handle all the interactions and do all the vectorDB management and LLM interactions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn&lt;/code&gt; and &lt;code&gt;node&lt;/code&gt; on your machine&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;python&lt;/code&gt; 3.8+ for running scripts in &lt;code&gt;collector/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;access to an LLM like &lt;code&gt;GPT-3.5&lt;/code&gt;, &lt;code&gt;GPT-4&lt;/code&gt;*.&lt;/li&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://pinecone.io&#34;&gt;Pinecone.io&lt;/a&gt; free account*. *you can use drop in replacements for these. This is just the easiest to get up and running fast. We support multiple vector database providers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to get started (Docker - simple setup)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Mintplex-Labs/anything-llm/master/docker/HOW_TO_USE_DOCKER.md&#34;&gt;Get up and running in minutes with Docker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How to get started (Development environment)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn setup&lt;/code&gt; from the project root directory. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This will fill in the required &lt;code&gt;.env&lt;/code&gt; files you&#39;ll need in each of the application sections. Go fill those out before proceeding or else things won&#39;t work right.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd frontend &amp;amp;&amp;amp; yarn install &amp;amp;&amp;amp; cd ../server &amp;amp;&amp;amp; yarn install&lt;/code&gt; from the project root directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Next, you will need some content to embed. This could be a Youtube Channel, Medium articles, local text files, word documents, and the list goes on. This is where you will use the &lt;code&gt;collector/&lt;/code&gt; part of the repo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Mintplex-Labs/anything-llm/master/collector/README.md&#34;&gt;Go set up and run collector scripts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Mintplex-Labs/anything-llm/master/server/storage/documents/DOCUMENTS.md&#34;&gt;Learn about documents&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Mintplex-Labs/anything-llm/master/server/storage/vector-cache/VECTOR_CACHE.md&#34;&gt;Learn about vector caching&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;create issue&lt;/li&gt; &#xA; &lt;li&gt;create PR with branch name format of &lt;code&gt;&amp;lt;issue number&amp;gt;-&amp;lt;short name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;yee haw let&#39;s merge&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>salman0ansari/whatsapp-api-nodejs</title>
    <updated>2023-06-18T01:55:23Z</updated>
    <id>tag:github.com,2023-06-18:/salman0ansari/whatsapp-api-nodejs</id>
    <link href="https://github.com/salman0ansari/whatsapp-api-nodejs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RESTful WhatsApp API with Multiple Device Support&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; whatsapp-api-nodejs Multi Device&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://raw.githubusercontent.com/salman0ansari/whatsapp-api-nodejs/main/#&#34;&gt;&lt;img title=&#34;skynet&#34; src=&#34;https://img.shields.io/badge/whatsapp api nodejs Multi Device-black?style=for-the-badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/salman0ansari&#34;&gt;&lt;img title=&#34;Author&#34; src=&#34;https://img.shields.io/badge/Author-Mohd Salman Ansari-black.svg?style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA; &lt;a href=&#34;https://github.com/salman0ansari?tab=followers&#34;&gt;&lt;img title=&#34;Followers&#34; src=&#34;https://img.shields.io/github/followers/salman0ansari?color=black&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/salman0ansari/whatsapp-api-nodejs/stargazers&#34;&gt;&lt;img title=&#34;Stars&#34; src=&#34;https://img.shields.io/github/stars/salman0ansari/whatsapp-api-nodejs?color=black&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/salman0ansari/whatsapp-api-nodejs/network/members&#34;&gt;&lt;img title=&#34;Forks&#34; src=&#34;https://img.shields.io/github/forks/salman0ansari/whatsapp-api-nodejs?color=black&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/salman0ansari/whatsapp-api-nodejs/issues&#34;&gt;&lt;img title=&#34;Issues&#34; src=&#34;https://img.shields.io/github/issues/salman0ansari/whatsapp-api-nodejs?color=black&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;http://github.com/salman0ansari/whatsapp-api-nodejs&#34;&gt;&lt;img title=&#34;Hits&#34; src=&#34;http://hits.dwyl.com/salman0ansari/whatsapp-api-nodejs.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://t.me/salman0ansari&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Telegram-informational?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;Telegram Badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://join.skype.com/invite/rI5pLf9YIvTA&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Skype-00AFF0.svg?style=for-the-badge&amp;amp;logo=Skype&amp;amp;logoColor=white&#34; alt=&#34;Skype Badge&#34;&gt; &lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;An implementation of &lt;a href=&#34;https://github.com/WhiskeySockets/Baileys&#34;&gt;Baileys&lt;/a&gt; as a simple RESTful API service with multi device support just &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;install&lt;/code&gt;, and &lt;code&gt;start&lt;/code&gt; using, &lt;code&gt;simple&lt;/code&gt; as that.&lt;/p&gt; &#xA;&lt;h1&gt;Libraries Used&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WhiskeySockets/Baileys&#34;&gt;Baileys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/expressjs/express&#34;&gt;Express&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download or clone this repo.&lt;/li&gt; &#xA; &lt;li&gt;Enter to the project directory.&lt;/li&gt; &#xA; &lt;li&gt;Execute &lt;code&gt;yarn install&lt;/code&gt; to install the dependencies.&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and set the environment variables.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Docker Compose&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://raw.githubusercontent.com/salman0ansari/whatsapp-api-nodejs/main/#installation&#34;&gt;Installation&lt;/a&gt; procedure.&lt;/li&gt; &#xA; &lt;li&gt;Update &lt;code&gt;.env&lt;/code&gt; and set&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;MONGODB_ENABLED=true&#xA;MONGODB_URL=mongodb://mongodb:27017/whatsapp_api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Set your &lt;code&gt;TOKEN=&lt;/code&gt; to a random string.&lt;/li&gt; &#xA; &lt;li&gt;Execute&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;p&gt;Edit environment variables on &lt;code&gt;.env&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-a&#34;&gt;Important: You must set TOKEN= to a random string to protect the route.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt;# ==================================&#xA;# SECURITY CONFIGURATION&#xA;# ==================================&#xA;TOKEN=RANDOM_STRING_HERE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;DEVELOPMENT:&lt;/code&gt; Execute &lt;code&gt;yarn dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PRODUCTION:&lt;/code&gt; Execute &lt;code&gt;yarn start&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Generate basic instance using random key.&lt;/h2&gt; &#xA;&lt;p&gt;To generate an Instance Key&lt;br&gt; Using the route:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location --request GET &#39;localhost:3333/instance/init&#39; \&#xA;--data-raw &#39;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: false,&#xA;    &#34;message&#34;: &#34;Initializing successfull&#34;,&#xA;    &#34;key&#34;: &#34;d7e2abff-3ac8-44a9-a738-1b28e0fca8a5&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;WEBHOOK_ALLOWED_EVENTS&lt;/h2&gt; &#xA;&lt;p&gt;You can set which events you want to send to webhook by setting the environment variable &lt;code&gt;WEBHOOK_ALLOWED_EVENTS&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Set a comma seperated list of events you want to get notified about.&lt;/p&gt; &#xA;&lt;p&gt;Default value is &lt;code&gt;all&lt;/code&gt; which will forward all events.&lt;/p&gt; &#xA;&lt;p&gt;Allowed values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;connection&lt;/code&gt; - receive all connection events&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;connection:open&lt;/code&gt; - receive open connection events&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;connection:close&lt;/code&gt; - receive close connection events&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;presense&lt;/code&gt; - receive presence events&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;messages&lt;/code&gt; - receive all messages event&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;call&lt;/code&gt; - receive all events related to calls&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;call:terminate&lt;/code&gt; - receive call terminate events&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;call:offer&lt;/code&gt; - receive call terminate event&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;groups&lt;/code&gt; - receive all events related to groups&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;group_participants&lt;/code&gt; - receive all events related to group participants&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also use the Baileys event format example: &lt;code&gt;messages.upsert&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Generate custom instance with custom key and custom webhook.&lt;/h2&gt; &#xA;&lt;p&gt;To generate a Custom Instance&lt;br&gt; Using the route:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location --request GET &#39;localhost:3333/instance/init?key=CUSTOM_INSTANCE_KEY_HERE&amp;amp;webhook=true&amp;amp;webhookUrl=https://webhook.site/d7114704-97f6-4562-9a47-dcf66b07266d&#39; \&#xA;--data-raw &#39;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;error&#34;: false,&#xA;    &#34;message&#34;: &#34;Initializing successfull&#34;,&#xA;    &#34;key&#34;: &#34;CUSTOM_INSTANCE_KEY_HERE&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Using Key&lt;/h1&gt; &#xA;&lt;p&gt;Save the value of the &lt;code&gt;key&lt;/code&gt; from response. Then use this value to call all the routes.&lt;/p&gt; &#xA;&lt;h2&gt;Postman Docs&lt;/h2&gt; &#xA;&lt;p&gt;All routes are available as a postman collection.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://documenter.getpostman.com/view/12514774/UVsPQkBq&#34;&gt;https://documenter.getpostman.com/view/12514774/UVsPQkBq&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;QR Code&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;http://localhost:3333/instance/qr?key=INSTANCE_KEY_HERE&#34;&gt;http://localhost:3333/instance/qr?key=INSTANCE_KEY_HERE&lt;/a&gt; to view the QR Code and scan with your device. If you take too long to scan the QR Code, you will have to refresh the page.&lt;/p&gt; &#xA;&lt;h2&gt;Send Message&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# /message/text?key=INSTANCE_KEY_HERE&amp;amp;id=PHONE-NUMBER-WITH-COUNTRY-CODE&amp;amp;message=MESSAGE&#xA;&#xA;curl --location --request POST &#39;localhost:3333/message/text?key=INSTANCE_KEY_HERE&#39; \&#xA;--header &#39;Content-Type: application/x-www-form-urlencoded&#39; \&#xA;--data-urlencode &#39;id=919999999999&#39; \&#xA;--data-urlencode &#39;message=Hello World&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Routes&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Route&lt;/th&gt; &#xA;   &lt;th&gt;Source File&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Instance Routes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/salman0ansari/whatsapp-api-nodejs/raw/main/src/api/routes/instance.route.js&#34;&gt;instance.route.js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Message Routes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/salman0ansari/whatsapp-api-nodejs/raw/main/src/api/routes/message.route.js&#34;&gt;message.route.js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Group Routes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/salman0ansari/whatsapp-api-nodejs/raw/main/src/api/routes/group.route.js&#34;&gt;group.route.js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Miscellaneous Routes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/salman0ansari/whatsapp-api-nodejs/raw/main/src/api/routes/misc.route.js&#34;&gt;misc.route.js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;See all routes here &lt;a href=&#34;https://github.com/salman0ansari/whatsapp-api-nodejs/tree/main/src/api/routes&#34;&gt;src/api/routes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Note&lt;/h1&gt; &#xA;&lt;p&gt;I can&#39;t guarantee or can be held responsible if you get blocked or banned by using this software. WhatsApp does not allow bots using unofficial methods on their platform, so this shouldn&#39;t be considered totally safe.&lt;/p&gt; &#xA;&lt;h1&gt;Legal&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This code is in no way affiliated, authorized, maintained, sponsored or endorsed by WA (WhatsApp) or any of its affiliates or subsidiaries.&lt;/li&gt; &#xA; &lt;li&gt;The official WhatsApp website can be found at &lt;a href=&#34;https://whatsapp.com&#34;&gt;https://whatsapp.com&lt;/a&gt;. &#34;WhatsApp&#34; as well as related names, marks, emblems and images are registered trademarks of their respective owners.&lt;/li&gt; &#xA; &lt;li&gt;This is an independent and unofficial software Use at your own risk.&lt;/li&gt; &#xA; &lt;li&gt;Do not spam people with this.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>safak/nextjs-tutorial</title>
    <updated>2023-06-18T01:55:23Z</updated>
    <id>tag:github.com,2023-06-18:/safak/nextjs-tutorial</id>
    <link href="https://github.com/safak/nextjs-tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is a &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; project bootstrapped with &lt;a href=&#34;https://github.com/vercel/next.js/tree/canary/packages/create-next-app&#34;&gt;&lt;code&gt;create-next-app&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;First, run the development server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;# or&#xA;yarn dev&#xA;# or&#xA;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt; &#xA;&lt;p&gt;You can start editing the page by modifying &lt;code&gt;app/page.js&lt;/code&gt;. The page auto-updates as you edit the file.&lt;/p&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://nextjs.org/docs/basic-features/font-optimization&#34;&gt;&lt;code&gt;next/font&lt;/code&gt;&lt;/a&gt; to automatically optimize and load Inter, a custom Google Font.&lt;/p&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about Next.js, take a look at the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs&#34;&gt;Next.js Documentation&lt;/a&gt; - learn about Next.js features and API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/learn&#34;&gt;Learn Next.js&lt;/a&gt; - an interactive Next.js tutorial.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can check out &lt;a href=&#34;https://github.com/vercel/next.js/&#34;&gt;the Next.js GitHub repository&lt;/a&gt; - your feedback and contributions are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Deploy on Vercel&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to deploy your Next.js app is to use the &lt;a href=&#34;https://vercel.com/new?utm_medium=default-template&amp;amp;filter=next.js&amp;amp;utm_source=create-next-app&amp;amp;utm_campaign=create-next-app-readme&#34;&gt;Vercel Platform&lt;/a&gt; from the creators of Next.js.&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://nextjs.org/docs/deployment&#34;&gt;Next.js deployment documentation&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
</feed>