<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-10T06:06:03Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google/earthengine-api</title>
    <updated>2025-08-10T06:06:03Z</updated>
    <id>tag:github.com,2025-08-10:/google/earthengine-api</id>
    <link href="https://github.com/google/earthengine-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python and JavaScript bindings for calling the Earth Engine API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Earth Engine API&lt;/h1&gt; &#xA;&lt;p&gt;Python and JavaScript client libraries for calling the Google Earth Engine API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Important Note: Access to Google Earth Engine is currently only available to registered users. The API is in active development, and users should expect the API to change. When (not if) API changes occur, applications that use the API will likely need to be updated.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://earthengine.google.com/&#34;&gt;Earth Engine Homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.earthengine.google.com/&#34;&gt;Web Code Editor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/earth-engine/python_install&#34;&gt;Python Installation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here&#39;s an example screenshot and the corresponding Code Editor JavaScript code:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/google/earthengine-api/master/trendy-lights.png&#34; alt=&#34;Trendy Lights Image&#34; /&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Compute the trend of night-time lights.&#xA;&#xA;// Adds a band containing image date as years since 1991.&#xA;function createTimeBand(img) {&#xA;  var year = ee.Date(img.get(&#39;system:time_start&#39;)).get(&#39;year&#39;).subtract(1991);&#xA;  return ee.Image(year).byte().addBands(img);&#xA;}&#xA;&#xA;// Map the time band creation helper over the night-time lights collection.&#xA;// https://developers.google.com/earth-engine/datasets/catalog/NOAA_DMSP-OLS_NIGHTTIME_LIGHTS&#xA;var collection = ee.ImageCollection(&#39;NOAA/DMSP-OLS/NIGHTTIME_LIGHTS&#39;)&#xA;    .select(&#39;stable_lights&#39;)&#xA;    .map(createTimeBand);&#xA;&#xA;// Compute a linear fit over the series of values at each pixel, visualizing&#xA;// the y-intercept in green, and positive/negative slopes as red/blue.&#xA;Map.addLayer(&#xA;    collection.reduce(ee.Reducer.linearFit()),&#xA;    {min: 0, max: [0.18, 20, -0.18], bands: [&#39;scale&#39;, &#39;offset&#39;, &#39;scale&#39;]},&#xA;    &#39;stable lights trend&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;NOTICE&lt;/h2&gt; &#xA;&lt;p&gt;In order to be more responsive to bug reports and feature requests, we are currently using the Google Issue Tracker rather than the GitHub Issue tracker. Please see the &lt;a href=&#34;https://developers.google.com/earth-engine/help&#34;&gt;Get Help&lt;/a&gt; page of the Earth Engine documentation for details on how to browse and submit issues to Issue Tracker.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>crocodilestick/Calibre-Web-Automated</title>
    <updated>2025-08-10T06:06:03Z</updated>
    <id>tag:github.com,2025-08-10:/crocodilestick/Calibre-Web-Automated</id>
    <link href="https://github.com/crocodilestick/Calibre-Web-Automated" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Calibre-Web but automated and with Calibre features! Fully automate and simplify your eBook set up!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Calibre-Web Automated &lt;em&gt;(formerly Calibre-Web Automator)&lt;/em&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/CWA-banner.png&#34; alt=&#34;Calibre-Web Automated&#34; title=&#34;Calibre-Web Automated&#34; /&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Making Calibre-Web your &lt;em&gt;dream&lt;/em&gt;, all-in-one self-hosted digital library solution.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/crocodilestick/calibre-web-automated&#34; alt=&#34;Docker Pulls&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/crocodilestick/calibre-web-automated&#34; alt=&#34;GitHub Release&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/commits-since/crocodilestick/calibre-web-automated/latest&#34; alt=&#34;GitHub commits since latest release&#34; /&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;em&gt;Quick Access&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#features&#34;&gt;Features&lt;/a&gt; ü™Ñ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crocodilestick/Calibre-Web-Automated/releases&#34;&gt;Releases&lt;/a&gt; üÜï&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#features-currently-under-active-development-and-on-our-roadmap-%EF%B8%8F%EF%B8%8F&#34;&gt;Roadmap&lt;/a&gt; üõ£Ô∏è&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#how-to-install-&#34;&gt;How to Install&lt;/a&gt;: üìñ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#quick-install-&#34;&gt;Quick Install&lt;/a&gt; üöÄ&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#using-docker-compose-recommended&#34;&gt;Docker-Compose&lt;/a&gt; üêã‚≠ê(Recommended)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#users-migrating-from-stock-calibre-web&#34;&gt;Users Migrating from stock Calibre Web&lt;/a&gt; üîÑ&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#post-install-tasks&#34;&gt;Post-Install Tasks&lt;/a&gt; üèÅ &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#default-admin-login&#34;&gt;Default Login Credentials üîë&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#usage-&#34;&gt;Usage&lt;/a&gt; üîß &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#adding-books-to-your-library&#34;&gt;Adding Books to Your Library&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#koreader-syncing-kosync-&#34;&gt;KOReader Syncing (KOSync)&lt;/a&gt; üìñ‚ö°&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#for-developers---building-custom-docker-image&#34;&gt;For Developers&lt;/a&gt; üöÄ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#further-development-%EF%B8%8F&#34;&gt;Further Development&lt;/a&gt; üèóÔ∏è&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ko-fi.com/crocodilestick&#34;&gt;Support / Buy me a Coffee&lt;/a&gt; ‚òï&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;em&gt;Affiliated Projects&lt;/em&gt; üë¨&lt;/h2&gt; &#xA;&lt;h3&gt;Calibre-Web Automated Book Downloader&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An intuitive web interface for searching and requesting book downloads, designed to work seamlessly with Calibre-Web-Automated. This project streamlines the process of downloading books and preparing them for integration into your Calibre library&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/calibrain/calibre-web-automated-book-downloader&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vadret/android/master/assets/get-github.png&#34; alt=&#34;Get it on GitHub&#34; height=&#34;80&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h3&gt;Calibre-Web Companion&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Built with &lt;strong&gt;Flutter&lt;/strong&gt; and using &lt;strong&gt;Material You&lt;/strong&gt;, &lt;a href=&#34;https://github.com/doen1el/calibre-web-companion&#34;&gt;&lt;strong&gt;Calibre Web Companion&lt;/strong&gt;&lt;/a&gt; is an &lt;strong&gt;unofficial companion application&lt;/strong&gt; for &lt;strong&gt;Calibre Web&lt;/strong&gt; &amp;amp; &lt;strong&gt;Calibre Web Automated&lt;/strong&gt; that allows you to browse your book collection and download books directly on your device, providing a much &lt;strong&gt;more modern, mobile-friendly UX&lt;/strong&gt; than either service can currently provide on its own&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br /&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/doen1el/calibre-web-companion&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cw-companion-screenshots.png&#34; alt=&#34;Calibre Web Companion Preview&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=de.doen1el.calibreWebCompanion&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/google-play.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;80&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/en/packages/de.doen1el.calibreWebCompanion/&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/doen1el/calibre-web-companion&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vadret/android/master/assets/get-github.png&#34; alt=&#34;Get it on GitHub&#34; height=&#34;80&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why does it exist? üîì&lt;/h2&gt; &#xA;&lt;p&gt;Calibre, while a fantastic tool for its age, has several problems when containerised, including its reliance on a KasmVNC server instance for the UI, which is near impossible to use on mobile and is relatively resource-heavy if you&#39;re running a small, lower power server like I am.&lt;/p&gt; &#xA;&lt;p&gt;For many, Calibre-Web has really swooped in to save the day, offering an alternative to a containerised Calibre instance that&#39;s resource-light and with a much more modern UI to boot.&lt;/p&gt; &#xA;&lt;p&gt;However, when compared to full-fat Calibre, it unfortunately lacks a few core features leading many to run both services in parallel, each serving to fill in where the other lacks, resulting in an often clunky, imperfect solution.&lt;/p&gt; &#xA;&lt;h2&gt;Goal of the Project üéØ&lt;/h2&gt; &#xA;&lt;p&gt;Calibre-Web Automated aims to be an all-in-one solution, combining the modern lightweight web UI from Calibre-Web with the robust, versatile feature set of Calibre, with a slew of extra features and automations thrown in on top.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/CWA-Homepage.png&#34; alt=&#34;Calibre-Web Automated Example Homepage&#34; /&gt;&lt;/p&gt; &#xA;&lt;p style=&#34;text-align:center;&#34;&gt;&lt;i&gt;CWA allows you to keep your ebook library accessible &amp;amp; organised and looks good while doing it&lt;/i&gt; üòéü¶ö&lt;/p&gt; &#xA;&lt;h2&gt;Join our Community! ‚ù§Ô∏è&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;I want to say a &lt;strong&gt;big thanks&lt;/strong&gt; üôè to all the members of this community that have taken the time to participate in the testing and development of this project and we encourage anyone who would like to to contribute in some way. Anyone of any level is welcome and every little helps!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;For anyone that wish to contribute to this project in some way&lt;/strong&gt;, please reach out on our Discord Server and see how you can best get involved:&lt;br /&gt; &lt;br /&gt; &lt;a href=&#34;https://discord.gg/EjgSeek94R&#34;&gt;&lt;img src=&#34;https://dcbadge.limes.pink/api/server/https://discord.gg/EjgSeek94R&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Or alternativly make your own companion project, come hang out and or come get help if you&#39;re facing issues :)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üö® To users planning to deploy via Network Shares (particularly NFS) üö®&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Calibre, Calibre-Web and CWA are all SQLite3 based applications and as a result &lt;strong&gt;don&#39;t like being run over network shares (especially NFS)&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SQLite is designed as a lightweight, file-based database system, and it assumes the underlying file system supports certain guarantees about &lt;strong&gt;file locking, atomic writes, and consistency&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Network file systems (e.g., NFS, SMB/CIFS, etc.) often do not meet these assumptions, which can lead to issues.&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Some users are successful in deploying CWA across NFS shares however doing so &lt;strong&gt;can produce a lot of hard to diagnose issues&lt;/strong&gt; that take time away from users with actual issues&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Therefore as of V3.0.0, deployments over NFS shares are &#34;unsupported&#34;&lt;/strong&gt;, meaning &lt;strong&gt;you are free to do so&lt;/strong&gt;, but &lt;strong&gt;support will not be provided for users facing issues&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;strong&gt;&lt;em&gt;Features:&lt;/em&gt;&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;CWA supports all Stock CW Features:&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Modern &amp;amp; responsive Bootstrap 3 HTML5 interface&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Comprehensive user management with per-user permissions&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OPDS feed for ereader apps&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;eBook metadata editing and deletion support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Metadata download from various sources (extensible via plugins)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;eBook download restriction to logged-in users&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Public user registration support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Send eBooks to E-Readers with a single click&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Sync Kobo devices with your Calibre library&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;In-browser eBook reading support for multiple formats&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Content hiding based on categories and Custom Column content per user&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;Magic Link&#34; login for easy access on eReaders&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;LDAP, Google/GitHub OAuth, and proxy authentication support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Advanced search and filtering options&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Multilingual user interface supporting 20+ &lt;a href=&#34;https://github.com/janeczku/calibre-web/wiki/Translation-Status&#34;&gt;languages&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Plus these &lt;em&gt;&lt;strong&gt;CWA Specific Features&lt;/strong&gt;&lt;/em&gt; on top:&lt;/h2&gt; &#xA;&lt;h4&gt;Click a feature below to read about it in more detail:&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automatic-ingest-service-&#34;&gt;Automatic Ingest Service ‚ú®&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automatic-conversion-service-&#34;&gt;Automatic Conversion Service üîÉ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automatic-enforcement-of-changes-made-to-covers--metadata-through-the-calibre-web-ui-&#34;&gt;Automatic Enforcement of Covers &amp;amp; Metadata üëÄüìî&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#batch-editing--deletion-%EF%B8%8F%EF%B8%8F&#34;&gt;Batch Editing &amp;amp; Deletion üóÇÔ∏è&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automated-back-up-service-&#34;&gt;Automated Back Up Service üîí&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#library-auto-detect-%EF%B8%8F&#34;&gt;Automated Setup Experience for New Users ü¶Æ&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automatic-epub-fixer-service-&#34;&gt;Automatic EPUB Fixer Service üî®&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#simple-to-use-multi-format-conversion-service-&#34;&gt;Multi-Format Conversion Service üåå&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#library-auto-detect-%EF%B8%8F&#34;&gt;Library Auto-Detect üìöüïµÔ∏è&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#server-stats-tracking-page-&#34;&gt;Server Stats Tracking Page üìç&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#server-stats-tracking-page-&#34;&gt;Server Stats Tracking üìä&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#easy-dark-light-mode-switching-%EF%B8%8F&#34;&gt;Easy Dark/ Light Mode Switching ‚òÄÔ∏èüåô&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#internal-update-notification-system-%EF%B8%8F&#34;&gt;Internal Update Notification System üõéÔ∏è&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#auto-compression-of-backed-up-files-&#34;&gt;Auto-Compression of Backed Up Files ü§ê&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#additional-metadata-providers-%EF%B8%8F&#34;&gt;Additional Metadata Providers üóÉÔ∏è&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#koreader-syncing-kosync-&#34;&gt;KOReader Syncing (KOSync) üìñ‚ö°&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Automatic Ingest Service&lt;/strong&gt; ‚ú®&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CWA currently supports automatic ingest of 27 different popular ebook formats&lt;/li&gt; &#xA; &lt;li&gt;Users can configure the services behavior to ignore and/or have certain formats automatically converted to other formats in the Admin Panel&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- - A **Weighted Conversion Algorithm:** ‚öñÔ∏è&#xA;  - Using the information provided in the Calibre eBook-converter documentation on which formats convert best into epubs, CWA is able to determine from downloads containing multiple eBook formats, which format will convert most optimally, ignoring the other formats to ensure the **best possible quality** and no **duplicate imports** --&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Automatic Conversion Service&lt;/strong&gt; üîÉ&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On by default though can be toggled of in the CWA Settings page, with EPUB as the default target format &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Available target formats include:&lt;/em&gt; &lt;strong&gt;EPUB&lt;/strong&gt;, &lt;strong&gt;MOBI&lt;/strong&gt;, &lt;strong&gt;AZW3&lt;/strong&gt;, &lt;strong&gt;KEPUB&lt;/strong&gt; &amp;amp; &lt;strong&gt;PDF&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Upon detecting new files in the Ingest Directory, if any of the files are in formats the user has configured CWA to auto-convert to the current target format,&lt;/li&gt; &#xA; &lt;li&gt;The following &lt;strong&gt;28 file types are currently supported:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;.azw, .azw3, .azw4, .mobi, .cbz, .cbr, .cb7, .cbc, .chm, .djvu, .docx, .epub, .fb2, .fbz, .html, .htmlz, .lit, .lrf, .odt, .pdf, .prc, .pdb, .pml, .rb, .rtf, .snb, .tcr, .txtz&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Automatic Enforcement of Changes made to Covers &amp;amp; Metadata through the Calibre-Web UI!&lt;/strong&gt; üëÄüìî&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In stock Calibre-Web, any changes made to a book&#39;s &lt;strong&gt;Cover and/or Metadata&lt;/strong&gt; are only applied to how the book appears in the Calibre-Web UI, changing nothing in the ebook&#39;s files like you would expect&lt;/li&gt; &#xA; &lt;li&gt;This results in a frustrating situation for many CW users who utilise CW&#39;s Send-To-Kindle function, and are disappointed to find that the High-Quality Covers they picked out and carefully chosen Metadata they sourced are completely absent on all their other devices! UGH!&lt;/li&gt; &#xA; &lt;li&gt;CWA&#39;s &lt;strong&gt;Automatic Cover &amp;amp; Metadata Enforcement Feature&lt;/strong&gt; makes it so that &lt;strong&gt;WHATEVER&lt;/strong&gt; you changes you make to &lt;strong&gt;YOUR&lt;/strong&gt; books, &lt;strong&gt;&lt;em&gt;are made to the books themselves&lt;/em&gt;&lt;/strong&gt;, as well as in the Web UI, &lt;strong&gt;making what you see, what you get.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cwa-enforcer-diagram.png&#34; alt=&#34;Cover Enforcement CWA&#34; title=&#34;CWA 1.2.0 Cover Enforcement Diagram&#34; /&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Batch Editing &amp;amp; Deletion!&lt;/strong&gt; üóÇÔ∏èüóÑÔ∏è&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Say goodbye to clicking that edit button again, and again, and again just to remove or edit a single series!&lt;/li&gt; &#xA; &lt;li&gt;To use, simply navigate to the &lt;code&gt;Books List&lt;/code&gt;page on the left hand side of the Web UI, select the books you wish to edit/ delete and use the buttons either above the table or within the headers to do whatever you need!&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Courtesy of &lt;a href=&#34;https://github.com/jmarmstrong1207&#34;&gt;@jmarmstrong1207&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cwa-bulk-editting-diagram.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Automated Back Up Service&lt;/strong&gt; üîí&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worried what will happen if something goes wrong during one of CWA&#39;s automated functions? Don&#39;t be!&lt;/li&gt; &#xA; &lt;li&gt;By default, the originals all files processed by CWA are stored in &lt;code&gt;/config/processed_books&lt;/code&gt; though this can be toggled in the CWA Settings panel&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Automatic EPUB Fixer Service&lt;/strong&gt; üî®&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Ever had it where you&#39;re super excited to start reading your next book but for some reason, Amazon&#39;s Send-to-Kindle service just keeps rejecting it? Well no more!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Originally developed by &lt;a href=&#34;https://github.com/innocenat/kindle-epub-fix&#34;&gt;innocenat&lt;/a&gt;, this tool corrects the following potential issues for every EPUB processed by CWA:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fixes UTF-8 encoding problem by adding UTF-8 declaration if no encoding is specified&lt;/li&gt; &#xA;   &lt;li&gt;Fixes hyperlink problem (result in Amazon rejecting the EPUB) when NCX table of content link to &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; with ID hash.&lt;/li&gt; &#xA;   &lt;li&gt;Detect invalid and/or missing language tag in metadata, and prompt user to select new language.&lt;/li&gt; &#xA;   &lt;li&gt;Remove stray &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags with no source field.&lt;/li&gt; &#xA;   &lt;li&gt;Resolves several EPUB compatibility issues, such as UTF-8 encoding, hyperlink problems, invalid/missing language tags, and stray image tags.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This &lt;strong&gt;ensures maximum comparability&lt;/strong&gt; for each EPUB file with the Amazon &lt;strong&gt;Send-to-Kindle&lt;/strong&gt; service and for those who don&#39;t use Amazon devices, has the side benefit of cleaning up your lower quality files!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enabled by default but can be toggled in settings.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Files processed by the EPUB-Fixer service are by default automatically backed up to &lt;code&gt;/config/processed_books&lt;/code&gt; however this can also be toggled in the settings.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bulk processing of whole library with progress tracking available in the Admin Panel&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Available via both the Web UI and CLI&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Simple to use Multi-Format Conversion Service&lt;/strong&gt; üåå&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This utility gives the user the option to either keep a copy of the original of all converted files in &lt;code&gt;/config/processed_books&lt;/code&gt; or to trust the process and have CWA simply convert and replace those files (not recommended)&lt;/li&gt; &#xA; &lt;li&gt;Full usage details can be found &lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#the-convert-library-tool&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/CWA-new-process-ui.gif&#34; alt=&#34;CWA Convert Library Web UI&#34; /&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Additional Metadata Providers&lt;/strong&gt; üóÉÔ∏è&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Users can now make use of &lt;a href=&#34;https://isbndb.com/&#34;&gt;isbndb.com&lt;/a&gt;&#39;s huge database when fetching metadata for the books in their library!&lt;/li&gt; &#xA; &lt;li&gt;Access is being provided via &lt;a href=&#34;https://ibdb.dev/&#34;&gt;ibdb.dev&lt;/a&gt; thanks to a generous donation to the community by &lt;a href=&#34;https://www.github.com/chad3814&#34;&gt;@chad3814&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hardcover.app/&#34;&gt;Hardcover&lt;/a&gt; is also currently in the process of being added to CWA as a Metadata Provider&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;KOReader Syncing (KOSync)&lt;/strong&gt; üìñ‚ö°&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CWA now includes built-in KOReader syncing functionality, providing a modern alternative to traditional KOReader sync servers&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Universal KOReader Syncer:&lt;/strong&gt; Works across all KOReader-compatible devices, storing sync data in a readable format for future CWA features&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modern Authentication:&lt;/strong&gt; Uses RFC 7617 compliant header-based authentication instead of legacy MD5 hashing for enhanced security&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CWA Integration:&lt;/strong&gt; Leverages your existing CWA user accounts and permissions - no additional server setup required&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy Installation:&lt;/strong&gt; Plugin and setup instructions are available directly from your CWA instance at &lt;code&gt;/kosync&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Server Stats Tracking Page&lt;/strong&gt; üìçüìä&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ever wondered how many times CWA has been there for you in the background? Check out the CWA Stats page to see a fun list of statistics showing how many times CWA has been there to make your life just that little bit easier&lt;/li&gt; &#xA; &lt;li&gt;A database also exists to keep track of any and all enforcements, imports, conversions &amp;amp; fixes both for peace of mind and to make the checking of any bugs or weird behaviour easier &#xA;  &lt;!-- - Full documentation can be found below [here](#checking-the-cover-enforcement-logs) --&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cwa-server-stats-page.png&#34; alt=&#34;CWA Server Stats Page&#34; /&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Library Auto-Detect&lt;/strong&gt; üìöüïµÔ∏è&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Made to &lt;strong&gt;MASSIVELY&lt;/strong&gt; simplify the setup process for both &lt;strong&gt;new and existing users&lt;/strong&gt; alike&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;New Users without existing Libraries:&lt;/strong&gt; üÜï &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;No library? No problem!&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;New users without existing Calibre Libraries no longer need to copy and paste &lt;code&gt;metadata.db&lt;/code&gt; files and point to their location in the Web UI, CWA will now automatically detect the lack of Library in your given bind and automatically create a new one for you! It will even automatically register it with the Web UI so you can really hit the ground running&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;New or Existing Users with Existing Libraries:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Simply bind a directory containing your Calibre Library (search is done recursively so it doesn&#39;t matter how deep in the directory it is) and CWA will now automatically find it and mount it to the Web UI&lt;/li&gt; &#xA;   &lt;li&gt;Should you bind a directory with more than 1 Calibre Library in it, CWA will intelligently compare the disk sizes of all discovered libraries and mount the largest one &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;em&gt;CWA supports only one library per instance though support for multiple libraries is being investigated for future releases&lt;/em&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;em&gt;In the meantime, users with multiple libraries who don&#39;t want to consolidate them are advised to run multiple, parallel instances&lt;/em&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Easy Dark/ Light Mode Switching&lt;/strong&gt; ‚òÄÔ∏èüåô&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Switch between Light &amp;amp; Dark Modes in just one click from anywhere in the Web UI!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Simply click/tap the üï∂Ô∏è icon on the Web UI&#39;s navbar and switch between themes at your leisure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Internal Update Notification System&lt;/strong&gt; üõéÔ∏è&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Users will now be automatically notified of the availability of new updates from within the Web UI&lt;/li&gt; &#xA; &lt;li&gt;Automatically triggered by a difference between the version number of the most recent GitHub release and the version installed&lt;/li&gt; &#xA; &lt;li&gt;Set to only show once per calendar day until updated as to not be annoying&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Visible to Admin users only&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Manual Library Refresh&lt;/strong&gt; ‚ôªÔ∏è&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ever had books get stuck in the ingest folder after an unexpected power-cut ect.? Well say goodbye to having to manually copy the books to be ingested back in and out of the ingest folder, simply press the &lt;code&gt;Refresh Library&lt;/code&gt; button on the navbar of the Web UI and anything still sitting in the ingest folder will be automatically ingested!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Auto-Compression of Backed Up Files&lt;/strong&gt; ü§ê&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Just before midnight each day, the CWA-Auto-Zipper service will automatically zip together all files processed that day.&lt;/li&gt; &#xA; &lt;li&gt;Minimises disk space usage and helps keep back up files as organised as possible&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enabled by default but can be disabled in the CWA Settings page in the Admin panel&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cwa-bulk-editting-diagram.png&#34; alt=&#34;Calibre-Web Automated&#34; title=&#34;Calibre-Web Automated Bulk Editing &amp;amp; Bulk Deletion&#34; /&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features Currently Under Active Development and on our Roadmap üèóÔ∏èüõ£Ô∏è&lt;/h1&gt; &#xA;&lt;h4&gt;High Priority üö®&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration of CWA with &lt;a href=&#34;https://hardcover.app/&#34;&gt;Hardcover&lt;/a&gt; üìö &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ability to use Hardcover as a Metadata Provider&lt;/li&gt; &#xA;   &lt;li&gt;Ability to sync read progress with your Hardcover account! (Kobo users only)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A companion project to integrate CWA with the Friendliest &amp;amp; Warmest Place on the Internet üê≠üßÄ&lt;/li&gt; &#xA; &lt;li&gt;Support for Calibre Plugins e.g. deDRM üîå&lt;/li&gt; &#xA; &lt;li&gt;Split Libraries (having your Calibre Library and books in separate locations)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Lower Priority üå±&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Notification system integrations e.g. Telegram, Gotify, ntfy ect. üìß&lt;/li&gt; &#xA; &lt;li&gt;Possible Prowlarr Integration üêØ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please suggest any ideas or wishes you might have! we&#39;re open to anything!&lt;/p&gt; &#xA;&lt;h1&gt;How To Install üìñ&lt;/h1&gt; &#xA;&lt;h2&gt;Quick Install üöÄ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the Docker Compose template file using the command below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -OL https://raw.githubusercontent.com/crocodilestick/calibre-web-automated/main/docker-compose.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Move the compose file to an empty folder (e.g. ~/docker/calibre-web-automated/docker-compose.yml). This will be used to store the server data and library&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit the compose file using the comments to help, filling in your Timezone (optional) and desired binds&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to where you downloaded the Compose file using &lt;code&gt;cd&lt;/code&gt; and run:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And that&#39;s you off to the races! ü•≥ HOWEVER to avoid potential problems and ensure maximum functionality, we recommend carrying out these &lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#post-install-tasks&#34;&gt;Post-Install Tasks Here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;Using Docker Compose üêã‚≠ê(Recommended)&lt;/h2&gt; &#xA;&lt;h3&gt;1. Setup the container using the Docker Compose template below: üêãüìú&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;---&#xA;services:&#xA;  calibre-web-automated:&#xA;    image: crocodilestick/calibre-web-automated:latest&#xA;    container_name: calibre-web-automated&#xA;    environment:&#xA;      # Only change these if you know what you&#39;re doing&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      # Edit to match your current timezone https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&#xA;      - TZ=UTC&#xA;    volumes:&#xA;      # CW users migrating should stop their existing CW instance, make a copy of the config folder, and bind that here to carry over all of their user settings ect.&#xA;      - /path/to/config/folder:/config&#xA;      # This is an ingest dir, NOT a library one. Anything added here will be automatically added to your library according to the settings you have configured in CWA Settings page. All files placed here are REMOVED AFTER PROCESSING&#xA;      - /path/to/the/folder/you/want/to/use/for/book/ingest:/cwa-book-ingest&#xA;      # If you don&#39;t have an existing library, CWA will automatically create one at the bind provided here&#xA;      - /path/to/your/calibre/library:/calibre-library&#xA;    ports:&#xA;      # Change the first number to change the port you want to access the Web UI, not the second&#xA;      - 8083:8083&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Explanation of the Container Bindings:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure all 3 of the main bindings are separate directories, errors can occur when binds are made within other binds&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/config&lt;/code&gt; - This is used to store logs and other miscellaneous files that keep CWA running &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;New Users&lt;/strong&gt; - Use any empty folder (if you run into any issues, make sure the ownership of said folder isn&#39;t &lt;code&gt;root:root&lt;/code&gt; in your main os)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Existing/ CW Users&lt;/strong&gt; - Those with existing Calibre-Web setups, map this to your existing &lt;code&gt;/config&lt;/code&gt; directory containing &lt;code&gt;app.db&lt;/code&gt; to ensure settings and users are pulled in&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/cwa-book-ingest&lt;/code&gt; - &lt;strong&gt;ATTENTION&lt;/strong&gt; ‚ö†Ô∏è - All files within this folder will be &lt;strong&gt;DELETED&lt;/strong&gt; after being processed. This folder should only be used to dump new books into for import and automatic conversion&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/calibre-library&lt;/code&gt; - This should be bound to your Calibre library folder where the &lt;code&gt;metadata.db&lt;/code&gt; &amp;amp; book(s) files reside. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;New Users&lt;/strong&gt; - Use any empty folder (if you run into any issues, make sure the ownership of said folder isn&#39;t &lt;code&gt;root:root&lt;/code&gt; in your main os)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Existing/ CW Users&lt;/strong&gt; - If there are multiple libraries in the mounted directory, CWA will automatically find and mount the largest one - check the logs for more details on which &lt;code&gt;metadata.db&lt;/code&gt; was utilised&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- - `/books` _(Optional)_ Utilise if you have a separate collection of book files somewhere and want to be able to access within the container. For the majority of users, this is not required and mounting`/calibre-library&#39; is sufficient --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/app/calibre-web-automated/gmail.json&lt;/code&gt; &lt;em&gt;(Optional)&lt;/em&gt; - This is used to setup Calibre-Web and/or CWA with your gmail account for sending books via email. Follow the guide &lt;a href=&#34;https://github.com/janeczku/calibre-web/wiki/Setup-Mailserver#gmail&#34;&gt;here&lt;/a&gt; if this is something you&#39;re interested in but be warned it can be a very fiddly process, I would personally recommend a simple SMTP Server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And just like that, Calibre-Web Automated should be up and running! &lt;strong&gt;HOWEVER&lt;/strong&gt; to avoid potential problems and ensure maximum functionality,we recommend carrying out these &lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#post-install-tasks&#34;&gt;Post-Install Tasks Here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Users migrating from stock Calibre-Web&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CWA has been designed to make switching over as easy as possible. To migrate your CW instance to CWA, simply: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Stop your instance of CW if it&#39;s still running&lt;/li&gt; &#xA;   &lt;li&gt;Whatever your &lt;code&gt;/books&lt;/code&gt; bind was in Calibre-Web, should be your &lt;code&gt;/calibre-library&lt;/code&gt; bind for CWA&lt;/li&gt; &#xA;   &lt;li&gt;Mount the same &lt;code&gt;/config&lt;/code&gt; folder in your Docker Compose that you were using for CW (or a copy of it to be extra safe)&lt;/li&gt; &#xA;   &lt;li&gt;Mount the same folder containing your Calibre Library (the Docker Compose for the Linuxserver image of Calibre Web has this as &lt;code&gt;/books&lt;/code&gt; by default)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;And then you&#39;re done! All of your users, settings ect. should be automatically carried over into your new CWA instance! Enjoy!&lt;/li&gt; &#xA; &lt;li&gt;If you run into an issue where the Web UI won&#39;t load, trying using the same port as you did for CW and then reconfiguring if you want to once you&#39;ve got everything set up&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Post-Install Tasks:&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;em&gt;Calibre-Web Quick Start Guide&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open your browser and navigate to &lt;a href=&#34;http://localhost:8083&#34;&gt;http://localhost:8083&lt;/a&gt; or &lt;a href=&#34;http://localhost:8083/opds&#34;&gt;http://localhost:8083/opds&lt;/a&gt; for the OPDS catalog&lt;/li&gt; &#xA; &lt;li&gt;Log in with the default admin credentials (&lt;em&gt;below&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Configure your Calibre-Web Automated instance via the Admin Page&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A guide to what all of the stock CW Settings do can be found &lt;a href=&#34;https://github.com/janeczku/calibre-web/wiki/Configuration#basic-configuration&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Make sure &lt;code&gt;Enable Uploads&lt;/code&gt; is enabled in &lt;code&gt;Settings -&amp;gt; Basic Configuration -&amp;gt; Feature Configuration&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Configure CWA to behave as you would like it to in the CWA Settings panel&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Here you can turn certain features on and off, set your Target Format, which file formats should be ignored and which should be auto-converted ect.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Drop a book into your ingest folder to check everything is working and enjoy!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Default Admin Login:&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Username:&lt;/strong&gt; admin&lt;br /&gt; &lt;strong&gt;Password:&lt;/strong&gt; admin123&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Usage üîß&lt;/h1&gt; &#xA;&lt;h2&gt;Adding Books to Your Library&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simply move your newly downloaded or existing eBook files to the ingest folder which is &lt;code&gt;/cwa-book-ingest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Anything you place in this folder will be automatically analysed, converted if necessary and then imported into your Calibre-Web library if not in a format you have told CWA to ignore in the CWA Settings Panel &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;‚ö†Ô∏è ATTENTION ‚ö†Ô∏è&lt;/strong&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;em&gt;Downloading files directly into &lt;code&gt;/cwa-book-ingest&lt;/code&gt; is not supported. It can cause duplicate imports and potentially a corrupt database. It is recommended to first download the books completely, then transfer them to &lt;code&gt;/cwa-book-ingest&lt;/code&gt; to avoid any issues&lt;/em&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Be sure that the books you are transferring to &lt;code&gt;/cwa-book-ingest&lt;/code&gt; are owned by your user rather than root. Otherwise, permission errors may occur and may result in incomplete importing.&lt;/li&gt; &#xA;     &lt;li&gt;In the event you&#39;re expecting a book to be ingested and it hasn&#39;t been, use the &#34;Library Refresh&#34; button on the Upper Navbar to manually trigger the ingest process&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;KOReader Syncing (KOSync) üìñ‚ö°&lt;/h2&gt; &#xA;&lt;p&gt;CWA now includes built-in KOReader syncing functionality, allowing you to sync your reading progress across devices using KOReader. This feature provides a modern, secure alternative to traditional KOReader sync servers. Navigate to &lt;code&gt;http://your-cwa-instance:8083/kosync&lt;/code&gt; in your browser where you&#39;ll find download links and installation instructions for the CWA KOReader plugin.&lt;/p&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;For Developers - Building Custom Docker Image&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute to this project, you can build a local version with your changes by running &lt;code&gt;build.sh&lt;/code&gt; in the repository.&lt;/p&gt; &#xA;&lt;p&gt;The resultant image will then be automatically deployed using the &lt;code&gt;docker-compose.yml.dev&lt;/code&gt; (make changes as necessary beforehand) in the directory and the &lt;code&gt;build/&lt;/code&gt; folder will be created, primarily housing the development docker-compose.yml file and its mount points. Add a calibre library here for testing if necessary.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ chmod +x build.sh&#xA;$ ./build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#post-install-tasks&#34;&gt;Post-Install Tasks Here&lt;/a&gt; when necessary.&lt;/p&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h1&gt;Further Development üèóÔ∏è&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CWA is really lucky to have a very passionate and active community of people that really help shape CWA into what it is today&lt;/li&gt; &#xA; &lt;li&gt;If you have any ideas or want to contribute to the project, you&#39;re more than welcome to! We accept anyone regardless of skill level of expertise!&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;ve got a good idea or want to simply suggest improvements, simply get in touch with us on the Discord Server &lt;a href=&#34;https://discord.gg/EjgSeek94R&#34;&gt;here&lt;/a&gt;!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>copy/v86</title>
    <updated>2025-08-10T06:06:03Z</updated>
    <id>tag:github.com,2025-08-10:/copy/v86</id>
    <link href="https://github.com/copy/v86" rel="alternate"></link>
    <summary type="html">&lt;p&gt;x86 PC emulator and x86-to-wasm JIT, running in the browser&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://gitter.im/copy/v86&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/copy/v86&#34; /&gt;&lt;/a&gt; or #v86 on &lt;a href=&#34;https://libera.chat/&#34;&gt;irc.libera.chat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;v86 emulates an x86-compatible CPU and hardware. Machine code is translated to WebAssembly modules at runtime in order to achieve decent performance. Here&#39;s a list of emulated hardware:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An x86-compatible CPU. The instruction set is around Pentium 4 level, including full SSE3 support. Some features are missing, in particular: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Task gates, far calls in protected mode&lt;/li&gt; &#xA;   &lt;li&gt;Some 16 bit protected mode features&lt;/li&gt; &#xA;   &lt;li&gt;Single stepping (trap flag, debug registers)&lt;/li&gt; &#xA;   &lt;li&gt;Some exceptions, especially floating point and SSE&lt;/li&gt; &#xA;   &lt;li&gt;Multicore&lt;/li&gt; &#xA;   &lt;li&gt;64-bit extensions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A floating point unit (FPU). Calculations are done using the Berkeley SoftFloat library and therefore should be precise (but slow). Trigonometric and log functions are emulated using 64-bit floats and may be less precise. Not all FPU exceptions are supported.&lt;/li&gt; &#xA; &lt;li&gt;A floppy disk controller (8272A).&lt;/li&gt; &#xA; &lt;li&gt;An 8042 Keyboard Controller, PS2. With mouse support.&lt;/li&gt; &#xA; &lt;li&gt;An 8254 Programmable Interval Timer (PIT).&lt;/li&gt; &#xA; &lt;li&gt;An 8259 Programmable Interrupt Controller (PIC).&lt;/li&gt; &#xA; &lt;li&gt;Partial APIC support.&lt;/li&gt; &#xA; &lt;li&gt;A CMOS Real Time Clock (RTC).&lt;/li&gt; &#xA; &lt;li&gt;A generic VGA card with SVGA support and Bochs VBE Extensions.&lt;/li&gt; &#xA; &lt;li&gt;A PCI bus. This one is partly incomplete and not used by every device.&lt;/li&gt; &#xA; &lt;li&gt;An IDE disk controller. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A built-in ISO 9660 CD-ROM generator.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;An NE2000 (RTL8390) PCI network card.&lt;/li&gt; &#xA; &lt;li&gt;Various virtio devices: Filesystem, network and balloon.&lt;/li&gt; &#xA; &lt;li&gt;A SoundBlaster 16 sound card.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://copy.sh/v86/?profile=9front&#34;&gt;9front&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=archlinux&#34;&gt;Arch Linux&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86?profile=android&#34;&gt;Android-x86 1.6-r2&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86?profile=android4&#34;&gt;Android-x86 4.4-r2&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=basiclinux&#34;&gt;BasicLinux&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=buildroot&#34;&gt;Buildroot Linux&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=dsl&#34;&gt;Damn Small Linux&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=elks&#34;&gt;ELKS&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=freedos&#34;&gt;FreeDOS&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=freebsd&#34;&gt;FreeBSD&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=fiwix&#34;&gt;FiwixOS&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=haiku&#34;&gt;Haiku&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=copy/skiffos&#34;&gt;SkiffOS&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=reactos&#34;&gt;ReactOS&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=windows2000&#34;&gt;Windows 2000&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=windows98&#34;&gt;Windows 98&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=windows95&#34;&gt;Windows 95&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=windows1&#34;&gt;Windows 1.01&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=msdos&#34;&gt;MS-DOS 6.22&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=openbsd&#34;&gt;OpenBSD&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=oberon&#34;&gt;Oberon&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=kolibrios&#34;&gt;KolibriOS&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86?profile=skift&#34;&gt;SkiftOS&lt;/a&gt; ‚Äî &lt;a href=&#34;https://copy.sh/v86/?profile=qnx&#34;&gt;QNX&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/docs/how-it-works.md&#34;&gt;How it works&lt;/a&gt; ‚Äî &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/docs/networking.md&#34;&gt;Networking&lt;/a&gt; ‚Äî &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/tools/docker/alpine/&#34;&gt;Alpine Linux guest setup&lt;/a&gt; ‚Äî &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/docs/archlinux.md&#34;&gt;Arch Linux guest setup&lt;/a&gt; ‚Äî &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/docs/windows-nt.md&#34;&gt;Windows NT guest setup&lt;/a&gt; ‚Äî &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/docs/windows-9x.md&#34;&gt;Windows 9x guest setup&lt;/a&gt; ‚Äî &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/docs/filesystem.md&#34;&gt;9p filesystem&lt;/a&gt; ‚Äî &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/docs/linux-9p-image.md&#34;&gt;Linux rootfs on 9p&lt;/a&gt; ‚Äî &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/docs/profiling.md&#34;&gt;Profiling&lt;/a&gt; ‚Äî &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/docs/cpu-idling.md&#34;&gt;CPU Idling&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s an overview of the operating systems supported in v86:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux works pretty well. 64-bit kernels are not supported. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://buildroot.uclibc.org&#34;&gt;Buildroot&lt;/a&gt; can be used to build a minimal image. &lt;a href=&#34;https://github.com/humphd/browser-vm&#34;&gt;humphd/browser-vm&lt;/a&gt; and &lt;a href=&#34;https://github.com/Darin755/browser-buildroot&#34;&gt;darin755/browser-buildroot&lt;/a&gt; have some useful scripts for building one.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/skiffos/SkiffOS/tree/master/configs/browser/v86&#34;&gt;SkiffOS&lt;/a&gt; (based on Buildroot) can cross-compile a custom image.&lt;/li&gt; &#xA;   &lt;li&gt;Ubuntu and other Debian derivatives works up to the latest version that supported i386 (16.04 LTS or 18.04 LTS for some variants).&lt;/li&gt; &#xA;   &lt;li&gt;Alpine Linux works. An image can be built from a Dockerfile, see &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/tools/docker/alpine/&#34;&gt;tools/docker/alpine/&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Arch Linux 32 works. See &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/docs/archlinux.md&#34;&gt;archlinux.md&lt;/a&gt; for building an image.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;ReactOS works.&lt;/li&gt; &#xA; &lt;li&gt;FreeDOS, Windows 1.01 and MS-DOS run very well.&lt;/li&gt; &#xA; &lt;li&gt;KolibriOS works.&lt;/li&gt; &#xA; &lt;li&gt;Haiku works.&lt;/li&gt; &#xA; &lt;li&gt;Android-x86 has been tested up to 4.4-r2.&lt;/li&gt; &#xA; &lt;li&gt;Windows 1, 3.x, 95, 98, ME, NT and 2000 work reasonably well. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In Windows 2000 and higher the PC type has to be changed from ACPI PC to Standard PC&lt;/li&gt; &#xA;   &lt;li&gt;There are some known boot issues (&lt;a href=&#34;https://github.com/copy/v86/issues/250&#34;&gt;#250&lt;/a&gt;, &lt;a href=&#34;https://github.com/copy/v86/issues/433&#34;&gt;#433&lt;/a&gt;, &lt;a href=&#34;https://github.com/copy/v86/issues/507&#34;&gt;#507&lt;/a&gt;, &lt;a href=&#34;https://github.com/copy/v86/issues/555&#34;&gt;#555&lt;/a&gt;, &lt;a href=&#34;https://github.com/copy/v86/issues/620&#34;&gt;#620&lt;/a&gt;, &lt;a href=&#34;https://github.com/copy/v86/issues/645&#34;&gt;#645&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/docs/windows-9x.md&#34;&gt;Windows 9x guest setup&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Windows XP, Vista and 8 work under certain conditions (see &lt;a href=&#34;https://github.com/copy/v86/issues/86&#34;&gt;#86&lt;/a&gt;, &lt;a href=&#34;https://github.com/copy/v86/issues/208&#34;&gt;#208&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/docs/windows-nt.md&#34;&gt;Windows NT guest setup&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Many hobby operating systems work.&lt;/li&gt; &#xA; &lt;li&gt;9front works.&lt;/li&gt; &#xA; &lt;li&gt;Plan 9 doesn&#39;t work.&lt;/li&gt; &#xA; &lt;li&gt;QNX works.&lt;/li&gt; &#xA; &lt;li&gt;OS/2 doesn&#39;t work.&lt;/li&gt; &#xA; &lt;li&gt;FreeBSD works.&lt;/li&gt; &#xA; &lt;li&gt;OpenBSD works with a specific boot configuration. At the &lt;code&gt;boot&amp;gt;&lt;/code&gt; prompt type &lt;code&gt;boot -c&lt;/code&gt;, then at the &lt;code&gt;UKC&amp;gt;&lt;/code&gt; prompt &lt;code&gt;disable mpbios&lt;/code&gt; and &lt;code&gt;exit&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;NetBSD works only with a custom kernel, see &lt;a href=&#34;https://github.com/copy/v86/issues/350&#34;&gt;#350&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;SerenityOS works (only 32-bit versions).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skiftos.org/&#34;&gt;SkiftOS&lt;/a&gt; works.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can get some information on the disk images here: &lt;a href=&#34;https://github.com/copy/images&#34;&gt;https://github.com/copy/images&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to build, run and embed?&lt;/h2&gt; &#xA;&lt;p&gt;You need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;make&lt;/li&gt; &#xA; &lt;li&gt;Rust with the wasm32-unknown-unknown target&lt;/li&gt; &#xA; &lt;li&gt;A version of clang compatible with Rust&lt;/li&gt; &#xA; &lt;li&gt;java (for Closure Compiler, not necessary when using &lt;code&gt;debug.html&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;nodejs (a recent version is required, v16.11.1 is known to be working)&lt;/li&gt; &#xA; &lt;li&gt;To run tests: nasm, gdb, qemu-system, gcc, libc-i386 and rustfmt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/tools/docker/test-image/Dockerfile&#34;&gt;tools/docker/test-image/Dockerfile&lt;/a&gt; for a full setup on Debian or &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make&lt;/code&gt; to build the debug build (at &lt;code&gt;debug.html&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make all&lt;/code&gt; to build the optimized build (at &lt;code&gt;index.html&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;ROM and disk images are loaded via XHR, so if you want to try out &lt;code&gt;index.html&lt;/code&gt; locally, make sure to serve it from a local webserver. You can use &lt;code&gt;make run&lt;/code&gt; to serve the files using Python&#39;s http module.&lt;/li&gt; &#xA; &lt;li&gt;If you only want to embed v86 in a webpage you can use libv86.js. For usage, check out the &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/examples/&#34;&gt;examples&lt;/a&gt;. You can download it from the release section.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Alternatively, to build using Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have Docker installed, you can run the whole system inside a container.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;code&gt;tools/docker/exec&lt;/code&gt; to find the Dockerfile required for this.&lt;/li&gt; &#xA; &lt;li&gt;You can run &lt;code&gt;docker build -f tools/docker/exec/Dockerfile -t v86:alpine-3.19 .&lt;/code&gt; from the root directory to generate docker image.&lt;/li&gt; &#xA; &lt;li&gt;Then you can simply run &lt;code&gt;docker run -it -p 8000:8000 v86:alpine-3.19&lt;/code&gt; to start the server.&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;code&gt;localhost:8000&lt;/code&gt; for hosted server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running via Dev Container&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you are using an IDE that supports Dev Containers, such as GitHub Codespaces, the Visual Studio Code Remote Container extension, or possibly others such as Jetbrains&#39; IntelliJ IDEA, you can setup the development environment in a Dev Container.&lt;/li&gt; &#xA; &lt;li&gt;Follow the instructions from your development environment to setup the container.&lt;/li&gt; &#xA; &lt;li&gt;Run the Task &#34;Fetch images&#34; in order to download images for testing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;The disk images for testing are not included in this repository. You can download them directly from the website using:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;curl --compressed --output-dir images/ --remote-name-all https://i.copy.sh/{linux.iso,linux3.iso,linux4.iso,buildroot-bzimage68.bin,TinyCore-11.0.iso,oberon.img,msdos.img,openbsd-floppy.img,kolibri.img,windows101.img,os8.img,freedos722.img,mobius-fd-release5.img,msdos622.img}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run integration tests: &lt;code&gt;make tests&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run all tests: &lt;code&gt;make jshint rustfmt kvm-unit-test nasmtests nasmtests-force-jit expect-tests jitpagingtests qemutests rust-test tests&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/tests/Readme.md&#34;&gt;tests/Readme.md&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;API examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/examples/basic.html&#34;&gt;Basic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/examples/serial.html&#34;&gt;Programatically using the serial terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/examples/lua.html&#34;&gt;A Lua interpreter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/examples/two_instances.html&#34;&gt;Two instances in one window&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/examples/broadcast-network.html&#34;&gt;Networking between browser windows/tabs using the Broadcast Channel API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/examples/tcp_terminal.html&#34;&gt;TCP Terminal (fetch-based networking)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/examples/save_restore.html&#34;&gt;Saving and restoring emulator state&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using v86 for your own purposes is as easy as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var emulator = new V86({&#xA;    screen_container: document.getElementById(&#34;screen_container&#34;),&#xA;    bios: {&#xA;        url: &#34;../../bios/seabios.bin&#34;,&#xA;    },&#xA;    vga_bios: {&#xA;        url: &#34;../../bios/vgabios.bin&#34;,&#xA;    },&#xA;    cdrom: {&#xA;        url: &#34;../../images/linux.iso&#34;,&#xA;    },&#xA;    autostart: true,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/src/browser/starter.js&#34;&gt;starter.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;v86 is distributed under the terms of the Simplified BSD License, see &lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;. The following third-party dependencies are included in the repository under their own licenses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/lib/softfloat/softfloat.c&#34;&gt;&lt;code&gt;lib/softfloat/softfloat.c&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/lib/zstd/zstddeclib.c&#34;&gt;&lt;code&gt;lib/zstd/zstddeclib.c&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/tests/kvm-unit-tests&#34;&gt;&lt;code&gt;tests/kvm-unit-tests/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/copy/v86/master/tests/qemutests&#34;&gt;&lt;code&gt;tests/qemutests/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPU test cases via &lt;a href=&#34;https://wiki.qemu.org/Main_Page&#34;&gt;QEMU&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;More tests via &lt;a href=&#34;https://www.linux-kvm.org/page/KVM-unit-tests&#34;&gt;kvm-unit-tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebook/zstd&#34;&gt;zstd&lt;/a&gt; support is included for better compression of state images&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.jhauser.us/arithmetic/SoftFloat.html&#34;&gt;Berkeley SoftFloat&lt;/a&gt; is included to precisely emulate 80-bit floating point numbers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s-macke/jor1k&#34;&gt;The jor1k project&lt;/a&gt; for 9p, filesystem and uart drivers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://winworldpc.com/&#34;&gt;WinWorld&lt;/a&gt; sources of some old operating systems&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.os2museum.com/&#34;&gt;OS/2 Museum&lt;/a&gt; sources of some old operating systems&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://archiveos.org/&#34;&gt;ArchiveOS&lt;/a&gt; sources of several operating systems&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More questions?&lt;/h2&gt; &#xA;&lt;p&gt;Shoot me an email to &lt;code&gt;copy@copy.sh&lt;/code&gt;. Please report bugs on GitHub.&lt;/p&gt;</summary>
  </entry>
</feed>