<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T01:59:58Z</updated>
  <subtitle>Weekly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rolling-scopes-school/tasks</title>
    <updated>2022-06-03T01:59:58Z</updated>
    <id>tag:github.com,2022-06-03:/rolling-scopes-school/tasks</id>
    <link href="https://github.com/rolling-scopes-school/tasks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Курс JS/Frontend-разработка&lt;/h1&gt; &#xA;&lt;p&gt;Это бесплатный курс по JavaScript / Front-end, проводимый сообществом с 2013 года. В RS School может учиться каждый, независимо от возраста, профессии, места жительства. Новый набор студентов стартует каждые полгода и насчитывает около 6000-7000 человек. Для продуктивного обучения студентам помогают 250+ менторов.&lt;/p&gt; &#xA;&lt;p&gt;Цель курса — получение студентами знаний и опыта, достаточного для трудоустройства на позицию Junior Software Engineer в области JavaScript / Front-end.&lt;/p&gt; &#xA;&lt;p&gt;За период с 1 октября 2020 по 1 июня 2021 только в компанию EPAM Systems трудоустроилось 208 выпускников нашего курса.&lt;/p&gt; &#xA;&lt;p&gt;Больше информации о RS School находится тут: &lt;a href=&#34;https://docs.rs.school/#/&#34;&gt;https://docs.rs.school/#/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Продолжительность обучения&lt;/h3&gt; &#xA;&lt;p&gt;5-7 месяцев. Для успешного прохождения программы вам потребуется 20-40 часов в неделю.&lt;/p&gt; &#xA;&lt;h3&gt;Программа обучения&lt;/h3&gt; &#xA;&lt;p&gt;Программа обучения находится &lt;a href=&#34;https://raw.githubusercontent.com/rolling-scopes-school/tasks/master/roadmap.md&#34;&gt;тут&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Регистрация&lt;/h1&gt; &#xA;&lt;p&gt;Мы предлагаем два варианта регистрации в зависимости от уровня вашей подготовки.&lt;/p&gt; &#xA;&lt;h3&gt;Регистрация на подготовительный курс&lt;/h3&gt; &#xA;&lt;p&gt;Подготовительный курс предназначен для тех, кто мало знаком или незнаком с программированием, но хотел бы в дальнейшем учиться на основном курсе JavaScript / Front-end.&lt;/p&gt; &#xA;&lt;p&gt;Программу обучения подготовительного курса можно посмотреть &lt;a href=&#34;https://raw.githubusercontent.com/rolling-scopes-school/tasks/master/stage0/&#34;&gt;тут&lt;/a&gt;. Регистрацию на ближайший запуск можно найти тут: &lt;a href=&#34;https://rs.school/js-stage0/&#34;&gt;https://rs.school/js-stage0/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Регистрация на основной курс JavaScript / Front-end&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Внимание!&lt;/strong&gt; Основной курс требует наличия у студентов базовых знаний:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;понимание основ HTML и CSS, наличие практических навыков вёрстки;&lt;/li&gt; &#xA; &lt;li&gt;знание основ JavaScript (типы данных, операторы, циклы, условные констуркции, функции);&lt;/li&gt; &#xA; &lt;li&gt;знание структуры данных и их организации (массив, список, стек, очередь, дерево и т.д.);&lt;/li&gt; &#xA; &lt;li&gt;умение реализовать достаточно простой алгоритм на языке программирования JavaScript. Например, сортировку или поиск элементов массива;&lt;/li&gt; &#xA; &lt;li&gt;умение решать задачи уровня 8-7 kyu на сайте &lt;a href=&#34;https://www.codewars.com/&#34;&gt;https://www.codewars.com/&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;(желательно) английский язык уровня Pre-intermediate.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Программу обучения можно посмотреть &lt;a href=&#34;https://raw.githubusercontent.com/rolling-scopes-school/tasks/master/roadmap.md&#34;&gt;тут&lt;/a&gt;. Регистрацию на ближайший запуск можно найти тут: &lt;a href=&#34;https://rs.school/js/&#34;&gt;https://rs.school/js/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Где можно задать вопрос?&lt;/h3&gt; &#xA;&lt;p&gt;Вопросы можно задать в Discord чате: &lt;a href=&#34;https://discord.gg/8Dv4bAw6Hx&#34;&gt;https://discord.gg/8Dv4bAw6Hx&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Имеет ли значения город проживания? Можно ли пройти курс полностью онлайн?&lt;/h3&gt; &#xA;&lt;p&gt;Город проживания значения не имеет. Все этапы обучения можно пройти онлайн.&lt;/p&gt; &#xA;&lt;h3&gt;Что делать до старта обучения?&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Выполнить задания и тесты &lt;a href=&#34;https://raw.githubusercontent.com/rolling-scopes-school/tasks/master/stage0/&#34;&gt;подготовительного курса&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Пойти на курсы английского языка до получения уровня Pre-Intermediate (Минимум A2).&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>MonsterNone/tmall-miao</title>
    <updated>2022-06-03T01:59:58Z</updated>
    <id>tag:github.com,2022-06-03:/MonsterNone/tmall-miao</id>
    <link href="https://github.com/MonsterNone/tmall-miao" rel="alternate"></link>
    <summary type="html">&lt;p&gt;喵币助手：618天猫（淘宝）、京东任务一键完成。基于Auto.JS。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tmall-miao&lt;/h1&gt; &#xA;&lt;p&gt;2022618!淘宝、京东任务已上线。&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;2022年货节任务一键完成。&lt;/del&gt; &lt;del&gt;天猫618/双十一喵币任务一键完成&lt;/del&gt; &lt;del&gt;现在是年货节任务了&lt;/del&gt; &lt;del&gt;2021618开始了&lt;/del&gt; &lt;del&gt;天猫奥运任务&lt;/del&gt; &lt;del&gt;天猫、京东2021双十一任务&lt;/del&gt;&lt;/p&gt; &#xA;&lt;h1&gt;特别申明&lt;/h1&gt; &#xA;&lt;p&gt;本仓库仅用于对视觉障碍人士辅助操作的学习研究，禁止用于商业用途，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断。&lt;/p&gt; &#xA;&lt;p&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。&lt;/p&gt; &#xA;&lt;p&gt;本人对任何脚本问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害。&lt;/p&gt; &#xA;&lt;p&gt;请勿将此项目的任何内容用于商业或非法目的，否则后果自负。&lt;/p&gt; &#xA;&lt;p&gt;因为内含打开淘宝的操作，部分手机管家会报风险软件。除了无障碍操作和悬浮窗权限外，其他任何权限都可以拒绝授予。Root权限非必须，请不要授权。推荐允许网络权限检查更新。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;打包版APK下载地址 &lt;a href=&#34;https://github.com/MonsterNone/tmall-miao/releases/latest&#34;&gt;https://github.com/MonsterNone/tmall-miao/releases/latest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;出现bug直接&lt;a href=&#34;https://github.com/MonsterNone/tmall-miao/issues&#34;&gt;提issue&lt;/a&gt;，请附上机型、系统版本、截图、错误日志等&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;2022年货节V9及以后的版本适配MIUI13定制版安卓12&lt;/h2&gt; &#xA;&lt;p&gt;意思就是V9以前原生安卓12运行完美流畅，到了MIUI13里就是跑不起来。。。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;新版使用了新的打包方式，已经不会被淘宝检测到了，10.0.0淘宝测试OK&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果任务只有几百喵币，请先检查是否安装了其他辅助。淘宝会检测无障碍服务的包名，任何包含autojs、脚本精灵等包名的服务都会被判定作弊。 **如果不想删除其他辅助，可以试试双开淘宝，用新开的淘宝登录帐号运行脚本。**或者可以在应用列表中“强制停止”其他辅助（杀掉后台），不推荐。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;暂不清楚root权限是否会造成影响。xposed和magisk有概率被判定。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;基于Auto.JS 4.1.1开发，感谢原开发者&lt;a href=&#34;https://github.com/hyb1996/Auto.js&#34;&gt;https://github.com/hyb1996/Auto.js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;因为内含打开淘宝的操作，部分手机管家会报风险软件。除了无障碍操作和悬浮窗权限外，其他任何权限都可以拒绝授予。（推荐允许网络权限检查更新）小米手机必须打开&lt;code&gt;后台弹出窗口&lt;/code&gt;权限，否则无法申请截屏权限。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jamiebuilds/the-super-tiny-compiler</title>
    <updated>2022-06-03T01:59:58Z</updated>
    <id>tag:github.com,2022-06-03:/jamiebuilds/the-super-tiny-compiler</id>
    <link href="https://github.com/jamiebuilds/the-super-tiny-compiler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⛄ Possibly the smallest compiler ever&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jamiebuilds/the-super-tiny-compiler/master/the-super-tiny-compiler.js&#34;&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/952783/21579290/5755288a-cf75-11e6-90e0-029529a44a38.png&#34; alt=&#34;The Super Tiny Compiler&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Welcome to The Super Tiny Compiler!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is an ultra-simplified example of all the major pieces of a modern compiler written in easy to read JavaScript.&lt;/p&gt; &#xA;&lt;p&gt;Reading through the guided code will help you learn about how &lt;em&gt;most&lt;/em&gt; compilers work from end to end.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jamiebuilds/the-super-tiny-compiler/master/the-super-tiny-compiler.js&#34;&gt;Want to jump into the code? Click here&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://the-super-tiny-compiler.glitch.me/&#34;&gt;You can also check it out on Glitch&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Why should I care?&lt;/h3&gt; &#xA;&lt;p&gt;That&#39;s fair, most people don&#39;t really have to think about compilers in their day jobs. However, compilers are all around you, tons of the tools you use are based on concepts borrowed from compilers.&lt;/p&gt; &#xA;&lt;h3&gt;But compilers are scary!&lt;/h3&gt; &#xA;&lt;p&gt;Yes, they are. But that&#39;s our fault (the people who write compilers), we&#39;ve taken something that is reasonably straightforward and made it so scary that most think of it as this totally unapproachable thing that only the nerdiest of the nerds are able to understand.&lt;/p&gt; &#xA;&lt;h3&gt;Okay so where do I begin?&lt;/h3&gt; &#xA;&lt;p&gt;Awesome! Head on over to the &lt;a href=&#34;https://raw.githubusercontent.com/jamiebuilds/the-super-tiny-compiler/master/the-super-tiny-compiler.js&#34;&gt;the-super-tiny-compiler.js&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;I&#39;m back, that didn&#39;t make sense&lt;/h3&gt; &#xA;&lt;p&gt;Ouch, I&#39;m really sorry. Let me know how it can be improved.&lt;/p&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;Run with &lt;code&gt;node test.js&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://creativecommons.org/licenses/by/4.0/&#34;&gt;&lt;img src=&#34;https://licensebuttons.net/l/by/4.0/80x15.png&#34; alt=&#34;cc-by-4.0&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fengyuanchen/cropperjs</title>
    <updated>2022-06-03T01:59:58Z</updated>
    <id>tag:github.com,2022-06-03:/fengyuanchen/cropperjs</id>
    <link href="https://github.com/fengyuanchen/cropperjs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JavaScript image cropper.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cropper.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/cropperjs&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/cropperjs.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/cropperjs&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/cropperjs.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://unpkg.com/cropperjs/dist/cropper.common.js&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/cropperjs.svg?sanitize=true&#34; alt=&#34;Gzip Size&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;JavaScript image cropper. This is the branch for v1.x, for v2.x, check out the &lt;a href=&#34;https://github.com/fengyuanchen/cropperjs/tree/v2&#34;&gt;&lt;code&gt;v2&lt;/code&gt;&lt;/a&gt; branch.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fengyuanchen.github.io/cropperjs&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fengyuanchen.github.io/photo-editor&#34;&gt;Photo Editor&lt;/a&gt; - An advanced example of Cropper.js.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fengyuanchen/jquery-cropper&#34;&gt;jquery-cropper&lt;/a&gt; - A jQuery plugin wrapper for Cropper.js.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#main&#34;&gt;Main&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#options&#34;&gt;Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#methods&#34;&gt;Methods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#events&#34;&gt;Events&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#no-conflict&#34;&gt;No conflict&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#browser-support&#34;&gt;Browser support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#versioning&#34;&gt;Versioning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports 39 &lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#options&#34;&gt;options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Supports 27 &lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#methods&#34;&gt;methods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Supports 6 &lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#events&#34;&gt;events&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Supports touch (mobile)&lt;/li&gt; &#xA; &lt;li&gt;Supports zooming&lt;/li&gt; &#xA; &lt;li&gt;Supports rotating&lt;/li&gt; &#xA; &lt;li&gt;Supports scaling (flipping)&lt;/li&gt; &#xA; &lt;li&gt;Supports multiple croppers&lt;/li&gt; &#xA; &lt;li&gt;Supports cropping on a canvas&lt;/li&gt; &#xA; &lt;li&gt;Supports cropping an image on the browser-side by canvas&lt;/li&gt; &#xA; &lt;li&gt;Supports translating Exif Orientation information&lt;/li&gt; &#xA; &lt;li&gt;Cross-browser support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Main files&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;dist/&#xA;├── cropper.css&#xA;├── cropper.min.css   (compressed)&#xA;├── cropper.js        (UMD)&#xA;├── cropper.min.js    (UMD, compressed)&#xA;├── cropper.common.js (CommonJS, default)&#xA;└── cropper.esm.js    (ES Module)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install cropperjs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In browser:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link  href=&#34;/path/to/cropper.css&#34; rel=&#34;stylesheet&#34;&amp;gt;&#xA;&amp;lt;script src=&#34;/path/to/cropper.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cdnjs/cdnjs&#34;&gt;cdnjs&lt;/a&gt; provides CDN support for Cropper.js&#39;s CSS and JavaScript. You can find the links &lt;a href=&#34;https://cdnjs.com/libraries/cropperjs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;h4&gt;Syntax&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;new Cropper(element[, options])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;element&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;HTMLImageElement&lt;/code&gt; or &lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The target image or canvas element for cropping.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;options&lt;/strong&gt; (optional)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The options for cropping. Check out the available &lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#options&#34;&gt;options&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- Wrap the image or canvas element with a block element (container) --&amp;gt;&#xA;&amp;lt;div&amp;gt;&#xA;  &amp;lt;img id=&#34;image&#34; src=&#34;picture.jpg&#34;&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/* Ensure the size of the image fit the container perfectly */&#xA;img {&#xA;  display: block;&#xA;&#xA;  /* This rule is very important, please don&#39;t ignore this */&#xA;  max-width: 100%;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// import &#39;cropperjs/dist/cropper.css&#39;;&#xA;import Cropper from &#39;cropperjs&#39;;&#xA;&#xA;const image = document.getElementById(&#39;image&#39;);&#xA;const cropper = new Cropper(image, {&#xA;  aspectRatio: 16 / 9,&#xA;  crop(event) {&#xA;    console.log(event.detail.x);&#xA;    console.log(event.detail.y);&#xA;    console.log(event.detail.width);&#xA;    console.log(event.detail.height);&#xA;    console.log(event.detail.rotate);&#xA;    console.log(event.detail.scaleX);&#xA;    console.log(event.detail.scaleY);&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;FAQ&lt;/h4&gt; &#xA;&lt;p&gt;How to crop a new area after zooming in or zooming out?&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Just double-click your mouse to enter crop mode.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;How to move the image after cropping an area?&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Just double-click your mouse to enter move mode.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;How to fix the aspect ratio in free ratio mode?&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Just hold the &lt;code&gt;Shift&lt;/code&gt; key when you resize the crop box.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;How to crop a square area in free ratio mode?&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Just hold the &lt;code&gt;Shift&lt;/code&gt; key when you crop on the image.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Notes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The size of the cropper inherits from the size of the image&#39;s parent element (wrapper), so be sure to wrap the image with a &lt;strong&gt;visible block element&lt;/strong&gt;.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;If you are using cropper in a modal, you should initialize the cropper after the modal is shown completely. Otherwise, you will not get the correct cropper.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The outputted cropped data is based on the original image size, so you can use them to crop the image directly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you try to start cropper on a cross-origin image, please make sure that your browser supports HTML5 &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes&#34;&gt;CORS settings attributes&lt;/a&gt;, and your image server supports the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; option (see the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&#34;&gt;HTTP access control (CORS)&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Known issues&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.apple.com/library/mac/documentation/AppleApplications/Reference/SafariWebContent/CreatingContentforSafarioniPhone/CreatingContentforSafarioniPhone.html&#34;&gt;Known iOS resource limits&lt;/a&gt;: As iOS devices limit memory, the browser may crash when you are cropping a large image (iPhone camera resolution). To avoid this, you may resize the image first (preferably below 1024 pixels) before starting a cropper.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Known image size increase: When exporting the cropped image on the browser side with the &lt;code&gt;HTMLCanvasElement.toDataURL&lt;/code&gt; method, the size of the exported image may be greater than the original image&#39;s. This is because the type of the exported image is not the same as the original image. So just pass the original image&#39;s type as the first parameter to &lt;code&gt;toDataURL&lt;/code&gt; to fix this. For example, if the original type is JPEG, then use &lt;code&gt;cropper.getCroppedCanvas().toDataURL(&#39;image/jpeg&#39;)&lt;/code&gt; to export image.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;p&gt;You may set cropper options with &lt;code&gt;new Cropper(image, options)&lt;/code&gt;. If you want to change the global default options, You may use &lt;code&gt;Cropper.setDefaults(options)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;viewMode&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Options: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;0&lt;/code&gt;: no restrictions&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;1&lt;/code&gt;: restrict the crop box not to exceed the size of the canvas.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;2&lt;/code&gt;: restrict the minimum canvas size to fit within the container. If the proportions of the canvas and the container differ, the minimum canvas will be surrounded by extra space in one of the dimensions.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;3&lt;/code&gt;: restrict the minimum canvas size to fill fit the container. If the proportions of the canvas and the container are different, the container will not be able to fit the whole canvas in one of the dimensions.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Define the view mode of the cropper. If you set &lt;code&gt;viewMode&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;, the crop box can extend outside the canvas, while a value of &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, or &lt;code&gt;3&lt;/code&gt; will restrict the crop box to the size of the canvas. &lt;code&gt;viewMode&lt;/code&gt; of &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt; will additionally restrict the canvas to the container. There is no difference between &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt; when the proportions of the canvas and the container are the same.&lt;/p&gt; &#xA;&lt;h3&gt;dragMode&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;String&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;&#39;crop&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Options: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;&#39;crop&#39;&lt;/code&gt;: create a new crop box&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&#39;move&#39;&lt;/code&gt;: move the canvas&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&#39;none&#39;&lt;/code&gt;: do nothing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Define the dragging mode of the cropper.&lt;/p&gt; &#xA;&lt;h3&gt;initialAspectRatio&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;NaN&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Define the initial aspect ratio of the crop box. By default, it is the same as the aspect ratio of the canvas (image wrapper).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Only available when the &lt;code&gt;aspectRatio&lt;/code&gt; option is set to &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;aspectRatio&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;NaN&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Define the fixed aspect ratio of the crop box. By default, the crop box has a free ratio.&lt;/p&gt; &#xA;&lt;h3&gt;data&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The previous cropped data you stored will be passed to the &lt;code&gt;setData&lt;/code&gt; method automatically when initialized.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Only available when the &lt;code&gt;autoCrop&lt;/code&gt; option had set to the &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;preview&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Element&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt; (elements), &lt;code&gt;NodeList&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; (selector)&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;&#39;&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;An element or an array of elements or a node list object or a valid selector for &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll&#34;&gt;Document.querySelectorAll&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Add extra elements (containers) for preview.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The maximum width is the initial width of the preview container.&lt;/li&gt; &#xA; &lt;li&gt;The maximum height is the initial height of the preview container.&lt;/li&gt; &#xA; &lt;li&gt;If you set an &lt;code&gt;aspectRatio&lt;/code&gt; option, be sure to set the same aspect ratio to the preview container.&lt;/li&gt; &#xA; &lt;li&gt;If the preview does not display correctly, set the &lt;code&gt;overflow: hidden&lt;/code&gt; style to the preview container.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;responsive&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Re-render the cropper when resizing the window.&lt;/p&gt; &#xA;&lt;h3&gt;restore&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Restore the cropped area after resizing the window.&lt;/p&gt; &#xA;&lt;h3&gt;checkCrossOrigin&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check if the current image is a cross-origin image.&lt;/p&gt; &#xA;&lt;p&gt;If so, a &lt;code&gt;crossOrigin&lt;/code&gt; attribute will be added to the cloned image element, and a timestamp parameter will be added to the &lt;code&gt;src&lt;/code&gt; attribute to reload the source image to avoid browser cache error.&lt;/p&gt; &#xA;&lt;p&gt;Adding a &lt;code&gt;crossOrigin&lt;/code&gt; attribute to the image element will stop adding a timestamp to the image URL and stop reloading the image. But the request (XMLHttpRequest) to read the image data for orientation checking will require a timestamp to bust the cache to avoid browser cache error. You can set the &lt;code&gt;checkOrientation&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt; to cancel this request.&lt;/p&gt; &#xA;&lt;p&gt;If the value of the image&#39;s &lt;code&gt;crossOrigin&lt;/code&gt; attribute is &lt;code&gt;&#34;use-credentials&#34;&lt;/code&gt;, then the &lt;code&gt;withCredentials&lt;/code&gt; attribute will set to &lt;code&gt;true&lt;/code&gt; when read the image data by XMLHttpRequest.&lt;/p&gt; &#xA;&lt;h3&gt;checkOrientation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check the current image&#39;s Exif Orientation information. Note that only a JPEG image may contain Exif Orientation information.&lt;/p&gt; &#xA;&lt;p&gt;Exactly, read the Orientation value for rotating or flipping the image, and then override the Orientation value with &lt;code&gt;1&lt;/code&gt; (the default value) to avoid some issues (&lt;a href=&#34;https://github.com/fengyuanchen/cropper/issues/120&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://github.com/fengyuanchen/cropper/issues/509&#34;&gt;2&lt;/a&gt;) on iOS devices.&lt;/p&gt; &#xA;&lt;p&gt;Requires to set both the &lt;code&gt;rotatable&lt;/code&gt; and &lt;code&gt;scalable&lt;/code&gt; options to &lt;code&gt;true&lt;/code&gt; at the same time.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Do not trust this all the time as some JPG images may have incorrect (non-standard) Orientation values&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Requires &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&#34;&gt;Typed Arrays&lt;/a&gt; support (&lt;a href=&#34;https://caniuse.com/typedarrays&#34;&gt;IE 10+&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;modal&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Show the black modal above the image and under the crop box.&lt;/p&gt; &#xA;&lt;h3&gt;guides&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Show the dashed lines above the crop box.&lt;/p&gt; &#xA;&lt;h3&gt;center&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Show the center indicator above the crop box.&lt;/p&gt; &#xA;&lt;h3&gt;highlight&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Show the white modal above the crop box (highlight the crop box).&lt;/p&gt; &#xA;&lt;h3&gt;background&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Show the grid background of the container.&lt;/p&gt; &#xA;&lt;h3&gt;autoCrop&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enable to crop the image automatically when initialized.&lt;/p&gt; &#xA;&lt;h3&gt;autoCropArea&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;0.8&lt;/code&gt; (80% of the image)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It should be a number between 0 and 1. Define the automatic cropping area size (percentage).&lt;/p&gt; &#xA;&lt;h3&gt;movable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enable to move the image.&lt;/p&gt; &#xA;&lt;h3&gt;rotatable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enable to rotate the image.&lt;/p&gt; &#xA;&lt;h3&gt;scalable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: `Boolean&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enable to scale the image.&lt;/p&gt; &#xA;&lt;h3&gt;zoomable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enable to zoom the image.&lt;/p&gt; &#xA;&lt;h3&gt;zoomOnTouch&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enable to zoom the image by dragging touch.&lt;/p&gt; &#xA;&lt;h3&gt;zoomOnWheel&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enable to zoom the image by mouse wheeling.&lt;/p&gt; &#xA;&lt;h3&gt;wheelZoomRatio&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;0.1&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Define zoom ratio when zooming the image by mouse wheeling.&lt;/p&gt; &#xA;&lt;h3&gt;cropBoxMovable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enable to move the crop box by dragging.&lt;/p&gt; &#xA;&lt;h3&gt;cropBoxResizable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enable to resize the crop box by dragging.&lt;/p&gt; &#xA;&lt;h3&gt;toggleDragModeOnDblclick&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enable to toggle drag mode between &lt;code&gt;&#34;crop&#34;&lt;/code&gt; and &lt;code&gt;&#34;move&#34;&lt;/code&gt; when clicking twice on the cropper.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Requires &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Events/dblclick&#34;&gt;&lt;code&gt;dblclick&lt;/code&gt;&lt;/a&gt; event support.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;minContainerWidth&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;200&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The minimum width of the container.&lt;/p&gt; &#xA;&lt;h3&gt;minContainerHeight&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;100&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The minimum height of the container.&lt;/p&gt; &#xA;&lt;h3&gt;minCanvasWidth&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The minimum width of the canvas (image wrapper).&lt;/p&gt; &#xA;&lt;h3&gt;minCanvasHeight&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The minimum height of the canvas (image wrapper).&lt;/p&gt; &#xA;&lt;h3&gt;minCropBoxWidth&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The minimum width of the crop box.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This size is relative to the page, not the image.&lt;/p&gt; &#xA;&lt;h3&gt;minCropBoxHeight&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The minimum height of the crop box.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This size is relative to the page, not the image.&lt;/p&gt; &#xA;&lt;h3&gt;ready&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A shortcut to the &lt;code&gt;ready&lt;/code&gt; event.&lt;/p&gt; &#xA;&lt;h3&gt;cropstart&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A shortcut to the &lt;code&gt;cropstart&lt;/code&gt; event.&lt;/p&gt; &#xA;&lt;h3&gt;cropmove&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A shortcut to the &lt;code&gt;cropmove&lt;/code&gt; event.&lt;/p&gt; &#xA;&lt;h3&gt;cropend&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A shortcut to the &lt;code&gt;cropend&lt;/code&gt; event.&lt;/p&gt; &#xA;&lt;h3&gt;crop&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A shortcut to the &lt;code&gt;crop&lt;/code&gt; event.&lt;/p&gt; &#xA;&lt;h3&gt;zoom&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A shortcut to the &lt;code&gt;zoom&lt;/code&gt; event.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Methods&lt;/h2&gt; &#xA;&lt;p&gt;As there is an &lt;strong&gt;asynchronous&lt;/strong&gt; process when loading the image, you &lt;strong&gt;should call most of the methods after ready&lt;/strong&gt;, except &lt;code&gt;setAspectRatio&lt;/code&gt;, &lt;code&gt;replace&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If a method doesn&#39;t need to return any value, it will return the cropper instance (&lt;code&gt;this&lt;/code&gt;) for chain composition.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;new Cropper(image, {&#xA;  ready() {&#xA;    // this.cropper[method](argument1, , argument2, ..., argumentN);&#xA;    this.cropper.move(1, -1);&#xA;&#xA;    // Allows chain composition&#xA;    this.cropper.move(1, -1).rotate(45).scale(1, -1);&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;crop()&lt;/h3&gt; &#xA;&lt;p&gt;Show the crop box manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;new Cropper(image, {&#xA;  autoCrop: false,&#xA;  ready() {&#xA;    // Do something here&#xA;    // ...&#xA;&#xA;    // And then&#xA;    this.cropper.crop();&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;reset()&lt;/h3&gt; &#xA;&lt;p&gt;Reset the image and crop box to its initial states.&lt;/p&gt; &#xA;&lt;h3&gt;clear()&lt;/h3&gt; &#xA;&lt;p&gt;Clear the crop box.&lt;/p&gt; &#xA;&lt;h3&gt;replace(url[, hasSameSize])&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;url&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;String&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;A new image url.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;hasSameSize&lt;/strong&gt; (optional):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;If the new image has the same size as the old one, then it will not rebuild the cropper and only update the URLs of all related images. This can be used for applying filters.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Replace the image&#39;s src and rebuild the cropper.&lt;/p&gt; &#xA;&lt;h3&gt;enable()&lt;/h3&gt; &#xA;&lt;p&gt;Enable (unfreeze) the cropper.&lt;/p&gt; &#xA;&lt;h3&gt;disable()&lt;/h3&gt; &#xA;&lt;p&gt;Disable (freeze) the cropper.&lt;/p&gt; &#xA;&lt;h3&gt;destroy()&lt;/h3&gt; &#xA;&lt;p&gt;Destroy the cropper and remove the instance from the image.&lt;/p&gt; &#xA;&lt;h3&gt;move(offsetX[, offsetY])&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;offsetX&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Moving size (px) in the horizontal direction.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;offsetY&lt;/strong&gt; (optional):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Moving size (px) in the vertical direction.&lt;/li&gt; &#xA;   &lt;li&gt;If not present, its default value is &lt;code&gt;offsetX&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Move the canvas (image wrapper) with relative offsets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;cropper.move(1);&#xA;cropper.move(1, 0);&#xA;cropper.move(0, -1);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;moveTo(x[, y])&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;code&gt;left&lt;/code&gt; value of the canvas&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;y&lt;/strong&gt; (optional):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;code&gt;top&lt;/code&gt; value of the canvas&lt;/li&gt; &#xA;   &lt;li&gt;If not present, its default value is &lt;code&gt;x&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Move the canvas (image wrapper) to an absolute point.&lt;/p&gt; &#xA;&lt;h3&gt;zoom(ratio)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ratio&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Zoom in: requires a positive number (ratio &amp;gt; 0)&lt;/li&gt; &#xA;   &lt;li&gt;Zoom out: requires a negative number (ratio &amp;lt; 0)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Zoom the canvas (image wrapper) with a relative ratio.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;cropper.zoom(0.1);&#xA;cropper.zoom(-0.1);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;zoomTo(ratio[, pivot])&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ratio&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Requires a positive number (ratio &amp;gt; 0)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;pivot&lt;/strong&gt; (optional):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Schema: &lt;code&gt;{ x: Number, y: Number }&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The coordinate of the center point for zooming, base on the top left corner of the cropper container.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Zoom the canvas (image wrapper) to an absolute ratio.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;cropper.zoomTo(1); // 1:1 (canvasData.width === canvasData.naturalWidth)&#xA;&#xA;const containerData = cropper.getContainerData();&#xA;&#xA;// Zoom to 50% from the center of the container.&#xA;cropper.zoomTo(.5, {&#xA;  x: containerData.width / 2,&#xA;  y: containerData.height / 2,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;rotate(degree)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;degree&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Rotate right: requires a positive number (degree &amp;gt; 0)&lt;/li&gt; &#xA;   &lt;li&gt;Rotate left: requires a negative number (degree &amp;lt; 0)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Rotate the image to a relative degree.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Requires &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/transform&#34;&gt;CSS3 2D Transforms&lt;/a&gt; support (&lt;a href=&#34;https://caniuse.com/transforms2d&#34;&gt;IE 9+&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;cropper.rotate(90);&#xA;cropper.rotate(-90);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;rotateTo(degree)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;degree&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Rotate the image to an absolute degree.&lt;/p&gt; &#xA;&lt;h3&gt;scale(scaleX[, scaleY])&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scaleX&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The scaling factor applies to the abscissa of the image.&lt;/li&gt; &#xA;   &lt;li&gt;When equal to &lt;code&gt;1&lt;/code&gt; it does nothing.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scaleY&lt;/strong&gt; (optional):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The scaling factor to apply on the ordinate of the image.&lt;/li&gt; &#xA;   &lt;li&gt;If not present, its default value is &lt;code&gt;scaleX&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Scale the image.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Requires &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/transform&#34;&gt;CSS3 2D Transforms&lt;/a&gt; support (&lt;a href=&#34;https://caniuse.com/transforms2d&#34;&gt;IE 9+&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;cropper.scale(-1); // Flip both horizontal and vertical&#xA;cropper.scale(-1, 1); // Flip horizontal&#xA;cropper.scale(1, -1); // Flip vertical&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;scaleX(scaleX)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;scaleX&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The scaling factor applies to the abscissa of the image.&lt;/li&gt; &#xA;   &lt;li&gt;When equal to &lt;code&gt;1&lt;/code&gt; it does nothing.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Scale the abscissa of the image.&lt;/p&gt; &#xA;&lt;h3&gt;scaleY(scaleY)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;scaleY&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The scaling factor to apply on the ordinate of the image.&lt;/li&gt; &#xA;   &lt;li&gt;When equal to &lt;code&gt;1&lt;/code&gt; it does nothing.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Scale the ordinate of the image.&lt;/p&gt; &#xA;&lt;h3&gt;getData([rounded])&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;rounded&lt;/strong&gt; (optional):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;true&lt;/code&gt; to get rounded values.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(return value):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Properties: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;x&lt;/code&gt;: the offset left of the cropped area&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;y&lt;/code&gt;: the offset top of the cropped area&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: the width of the cropped area&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: the height of the cropped area&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;rotate&lt;/code&gt;: the rotated degrees of the image&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;scaleX&lt;/code&gt;: the scaling factor to apply on the abscissa of the image&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;scaleY&lt;/code&gt;: the scaling factor to apply on the ordinate of the image&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Output the final cropped area position and size data (based on the natural size of the original image).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can send the data to the server-side to crop the image directly:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Rotate the image with the &lt;code&gt;rotate&lt;/code&gt; property.&lt;/li&gt; &#xA;  &lt;li&gt;Scale the image with the &lt;code&gt;scaleX&lt;/code&gt; and &lt;code&gt;scaleY&lt;/code&gt; properties.&lt;/li&gt; &#xA;  &lt;li&gt;Crop the image with the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt; properties.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/docs/images/data.jpg&#34; alt=&#34;A schematic diagram for data&#39;s properties&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;setData(data)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;data&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Properties: See the &lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#getdatarounded&#34;&gt;&lt;code&gt;getData&lt;/code&gt;&lt;/a&gt; method.&lt;/li&gt; &#xA;   &lt;li&gt;You may need to round the data properties before passing them in.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Change the cropped area position and size with new data (based on the original image).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method only available when the value of the &lt;code&gt;viewMode&lt;/code&gt; option is greater than or equal to &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;getContainerData()&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(return value): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Properties: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: the current width of the container&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: the current height of the container&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Output the container size data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/docs/images/layers.jpg&#34; alt=&#34;A schematic diagram for cropper&#39;s layers&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;getImageData()&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(return value): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Properties: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;left&lt;/code&gt;: the offset left of the image&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;top&lt;/code&gt;: the offset top of the image&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: the width of the image&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: the height of the image&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;naturalWidth&lt;/code&gt;: the natural width of the image&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;naturalHeight&lt;/code&gt;: the natural height of the image&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;aspectRatio&lt;/code&gt;: the aspect ratio of the image&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;rotate&lt;/code&gt;: the rotated degrees of the image if it is rotated&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;scaleX&lt;/code&gt;: the scaling factor to apply on the abscissa of the image if scaled&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;scaleY&lt;/code&gt;: the scaling factor to apply on the ordinate of the image if scaled&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Output the image position, size, and other related data.&lt;/p&gt; &#xA;&lt;h3&gt;getCanvasData()&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(return value): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Properties: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;left&lt;/code&gt;: the offset left of the canvas&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;top&lt;/code&gt;: the offset top of the canvas&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: the width of the canvas&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: the height of the canvas&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;naturalWidth&lt;/code&gt;: the natural width of the canvas (read only)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;naturalHeight&lt;/code&gt;: the natural height of the canvas (read only)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Output the canvas (image wrapper) position and size data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const imageData = cropper.getImageData();&#xA;const canvasData = cropper.getCanvasData();&#xA;&#xA;if (imageData.rotate % 180 === 0) {&#xA;  console.log(canvasData.naturalWidth === imageData.naturalWidth);&#xA;  // &amp;gt; true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;setCanvasData(data)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;data&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Properties: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;left&lt;/code&gt;: the new offset left of the canvas&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;top&lt;/code&gt;: the new offset top of the canvas&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: the new width of the canvas&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: the new height of the canvas&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Change the canvas (image wrapper) position and size with new data.&lt;/p&gt; &#xA;&lt;h3&gt;getCropBoxData()&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(return value): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Properties: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;left&lt;/code&gt;: the offset left of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;top&lt;/code&gt;: the offset top of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: the width of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: the height of the crop box&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Output the crop box position and size data.&lt;/p&gt; &#xA;&lt;h3&gt;setCropBoxData(data)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;data&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Properties: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;left&lt;/code&gt;: the new offset left of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;top&lt;/code&gt;: the new offset top of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: the new width of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: the new height of the crop box&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Change the crop box position and size with new data.&lt;/p&gt; &#xA;&lt;h3&gt;getCroppedCanvas([options])&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;options&lt;/strong&gt; (optional):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Properties: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: the destination width of the output canvas.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: the destination height of the output canvas.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;minWidth&lt;/code&gt;: the minimum destination width of the output canvas, the default value is &lt;code&gt;0&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;minHeight&lt;/code&gt;: the minimum destination height of the output canvas, the default value is &lt;code&gt;0&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;maxWidth&lt;/code&gt;: the maximum destination width of the output canvas, the default value is &lt;code&gt;Infinity&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;maxHeight&lt;/code&gt;: the maximum destination height of the output canvas, the default value is &lt;code&gt;Infinity&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;fillColor&lt;/code&gt;: a color to fill any alpha values in the output canvas, the default value is the &lt;code&gt;transparent&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled&#34;&gt;&lt;code&gt;imageSmoothingEnabled&lt;/code&gt;&lt;/a&gt;: set to change if images are smoothed (&lt;code&gt;true&lt;/code&gt;, default) or not (&lt;code&gt;false&lt;/code&gt;).&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingQuality&#34;&gt;&lt;code&gt;imageSmoothingQuality&lt;/code&gt;&lt;/a&gt;: set the quality of image smoothing, one of &#34;low&#34; (default), &#34;medium&#34;, or &#34;high&#34;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(return value):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;A canvas drawn the cropped image.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Notes:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The aspect ratio of the output canvas will be fitted to the aspect ratio of the crop box automatically.&lt;/li&gt; &#xA;   &lt;li&gt;If you intend to get a JPEG image from the output canvas, you should set the &lt;code&gt;fillColor&lt;/code&gt; option first, if not, the transparent part in the JPEG image will become black by default.&lt;/li&gt; &#xA;   &lt;li&gt;Uses the Browser&#39;s native &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob&#34;&gt;canvas.toBlob&lt;/a&gt; API to do the compression work, which means it is &lt;strong&gt;lossy compression&lt;/strong&gt;. For better image quality, you can upload the original image and the cropped data to a server and do the crop work on the server.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Browser support:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Basic image: requires &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement&#34;&gt;Canvas&lt;/a&gt; support (&lt;a href=&#34;https://caniuse.com/canvas&#34;&gt;IE 9+&lt;/a&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Rotated image: requires &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/transform&#34;&gt;CSS3 2D Transforms&lt;/a&gt; support (&lt;a href=&#34;https://caniuse.com/transforms2d&#34;&gt;IE 9+&lt;/a&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Cross-origin image: requires HTML5 &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes&#34;&gt;CORS settings attributes&lt;/a&gt; support (&lt;a href=&#34;https://caniuse.com/cors&#34;&gt;IE 11+&lt;/a&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Get a canvas drawn from the cropped image (lossy compression). If it is not cropped, then returns a canvas drawn the whole image.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;After then, you can display the canvas as an image directly, or use &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL&#34;&gt;HTMLCanvasElement.toDataURL&lt;/a&gt; to get a Data URL, or use &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob&#34;&gt;HTMLCanvasElement.toBlob&lt;/a&gt; to get a blob and upload it to server with &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/FormData&#34;&gt;FormData&lt;/a&gt; if the browser supports these APIs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Avoid getting a blank (or black) output image, you might need to set the &lt;code&gt;maxWidth&lt;/code&gt; and &lt;code&gt;maxHeight&lt;/code&gt; properties to limited numbers, because of &lt;a href=&#34;https://stackoverflow.com/questions/6081483/maximum-size-of-a-canvas-element&#34;&gt;the size limits of a canvas element&lt;/a&gt;. Also, you should limit the maximum zoom ratio (in the &lt;code&gt;zoom&lt;/code&gt; event) for the same reason.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;cropper.getCroppedCanvas();&#xA;&#xA;cropper.getCroppedCanvas({&#xA;  width: 160,&#xA;  height: 90,&#xA;  minWidth: 256,&#xA;  minHeight: 256,&#xA;  maxWidth: 4096,&#xA;  maxHeight: 4096,&#xA;  fillColor: &#39;#fff&#39;,&#xA;  imageSmoothingEnabled: false,&#xA;  imageSmoothingQuality: &#39;high&#39;,&#xA;});&#xA;&#xA;// Upload cropped image to server if the browser supports `HTMLCanvasElement.toBlob`.&#xA;// The default value for the second parameter of `toBlob` is &#39;image/png&#39;, change it if necessary.&#xA;cropper.getCroppedCanvas().toBlob((blob) =&amp;gt; {&#xA;  const formData = new FormData();&#xA;&#xA;  // Pass the image file name as the third parameter if necessary.&#xA;  formData.append(&#39;croppedImage&#39;, blob/*, &#39;example.png&#39; */);&#xA;&#xA;  // Use `jQuery.ajax` method for example&#xA;  $.ajax(&#39;/path/to/upload&#39;, {&#xA;    method: &#39;POST&#39;,&#xA;    data: formData,&#xA;    processData: false,&#xA;    contentType: false,&#xA;    success() {&#xA;      console.log(&#39;Upload success&#39;);&#xA;    },&#xA;    error() {&#xA;      console.log(&#39;Upload error&#39;);&#xA;    },&#xA;  });&#xA;}/*, &#39;image/png&#39; */);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;setAspectRatio(aspectRatio)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;aspectRatio&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Requires a positive number.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Change the aspect ratio of the crop box.&lt;/p&gt; &#xA;&lt;h3&gt;setDragMode([mode])&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;mode&lt;/strong&gt; (optional): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;String&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;&#39;none&#39;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Options: &lt;code&gt;&#39;none&#39;&lt;/code&gt;, &lt;code&gt;&#39;crop&#39;&lt;/code&gt;, &lt;code&gt;&#39;move&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Change the drag mode.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt; You can toggle the &#34;crop&#34; and &#34;move&#34; mode by double clicking on the cropper.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Events&lt;/h2&gt; &#xA;&lt;h3&gt;ready&lt;/h3&gt; &#xA;&lt;p&gt;This event fires when the target image has been loaded and the cropper instance is ready for operating.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let cropper;&#xA;&#xA;image.addEventListener(&#39;ready&#39;, function () {&#xA;  console.log(this.cropper === cropper);&#xA;  // &amp;gt; true&#xA;});&#xA;&#xA;cropper = new Cropper(image);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;cropstart&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;event.detail.originalEvent&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Event&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Options: &lt;code&gt;pointerdown&lt;/code&gt;, &lt;code&gt;touchstart&lt;/code&gt;, and &lt;code&gt;mousedown&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;event.detail.action&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;String&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Options: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;&#39;crop&#39;&lt;/code&gt;: create a new crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;&#39;move&#39;&lt;/code&gt;: move the canvas (image wrapper)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;&#39;zoom&#39;&lt;/code&gt;: zoom in / out the canvas (image wrapper) by touch.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;&#39;e&#39;&lt;/code&gt;: resize the east side of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;&#39;w&#39;&lt;/code&gt;: resize the west side of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;&#39;s&#39;&lt;/code&gt;: resize the south side of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;&#39;n&#39;&lt;/code&gt;: resize the north side of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;&#39;se&#39;&lt;/code&gt;: resize the southeast side of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;&#39;sw&#39;&lt;/code&gt;: resize the southwest side of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;&#39;ne&#39;&lt;/code&gt;: resize the northeast side of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;&#39;nw&#39;&lt;/code&gt;: resize the northwest side of the crop box&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;&#39;all&#39;&lt;/code&gt;: move the crop box (all directions)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This event fires when the canvas (image wrapper) or the crop box starts to change.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;image.addEventListener(&#39;cropstart&#39;, (event) =&amp;gt; {&#xA;  console.log(event.detail.originalEvent);&#xA;  console.log(event.detail.action);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;cropmove&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;event.detail.originalEvent&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Event&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Options: &lt;code&gt;pointermove&lt;/code&gt;, &lt;code&gt;touchmove&lt;/code&gt;, and &lt;code&gt;mousemove&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;event.detail.action&lt;/strong&gt;: the same as &#34;cropstart&#34;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This event fires when the canvas (image wrapper) or the crop box is changing.&lt;/p&gt; &#xA;&lt;h3&gt;cropend&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;event.detail.originalEvent&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Event&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Options: &lt;code&gt;pointerup&lt;/code&gt;, &lt;code&gt;pointercancel&lt;/code&gt;, &lt;code&gt;touchend&lt;/code&gt;, &lt;code&gt;touchcancel&lt;/code&gt;, and &lt;code&gt;mouseup&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;event.detail.action&lt;/strong&gt;: the same as &#34;cropstart&#34;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This event fires when the canvas (image wrapper) or the crop box stops changing.&lt;/p&gt; &#xA;&lt;h3&gt;crop&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;event.detail.x&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;event.detail.y&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;event.detail.width&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;event.detail.height&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;event.detail.rotate&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;event.detail.scaleX&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;event.detail.scaleY&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;About these properties, see the &lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#getdatarounded&#34;&gt;&lt;code&gt;getData&lt;/code&gt;&lt;/a&gt; method.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This event fires when the canvas (image wrapper) or the crop box changes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When the &lt;code&gt;autoCrop&lt;/code&gt; option is set to the &lt;code&gt;true&lt;/code&gt;, a &lt;code&gt;crop&lt;/code&gt; event will be triggered before the &lt;code&gt;ready&lt;/code&gt; event.&lt;/li&gt; &#xA; &lt;li&gt;When the &lt;code&gt;data&lt;/code&gt; option is set, another &lt;code&gt;crop&lt;/code&gt; event will be triggered before the &lt;code&gt;ready&lt;/code&gt; event.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;zoom&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;event.detail.originalEvent&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Event&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Options: &lt;code&gt;wheel&lt;/code&gt;, &lt;code&gt;pointermove&lt;/code&gt;, &lt;code&gt;touchmove&lt;/code&gt;, and &lt;code&gt;mousemove&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;event.detail.oldRatio&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The old (current) ratio of the canvas&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;event.detail.ratio&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The new (next) ratio of the canvas (&lt;code&gt;canvasData.width / canvasData.naturalWidth&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This event fires when a cropper instance starts to zoom in or zoom out its canvas (image wrapper).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;image.addEventListener(&#39;zoom&#39;, (event) =&amp;gt; {&#xA;  // Zoom in&#xA;  if (event.detail.ratio &amp;gt; event.detail.oldRatio) {&#xA;    event.preventDefault(); // Prevent zoom in&#xA;  }&#xA;&#xA;  // Zoom out&#xA;  // ...&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;No conflict&lt;/h2&gt; &#xA;&lt;p&gt;If you have to use another cropper with the same namespace, just call the &lt;code&gt;Cropper.noConflict&lt;/code&gt; static method to revert to it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;other-cropper.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script src=&#34;cropper.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script&amp;gt;&#xA;  Cropper.noConflict();&#xA;  // Code that uses other `Cropper` can follow here.&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Browser support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chrome (latest)&lt;/li&gt; &#xA; &lt;li&gt;Firefox (latest)&lt;/li&gt; &#xA; &lt;li&gt;Safari (latest)&lt;/li&gt; &#xA; &lt;li&gt;Opera (latest)&lt;/li&gt; &#xA; &lt;li&gt;Edge (latest)&lt;/li&gt; &#xA; &lt;li&gt;Internet Explorer 9+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read through our &lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/.github/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;Maintained under the &lt;a href=&#34;https://semver.org/&#34;&gt;Semantic Versioning guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt; © &lt;a href=&#34;https://chenfengyuan.com/&#34;&gt;Chen Fengyuan&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Related projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matheusdavidson/angular-cropperjs&#34;&gt;angular-cropperjs&lt;/a&gt; by @matheusdavidson&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danielthall/ember-cropperjs&#34;&gt;ember-cropperjs&lt;/a&gt; by @danielthall&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/safetychanger/iron-cropper&#34;&gt;iron-cropper&lt;/a&gt; by @safetychanger&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/react-cropper/react-cropper&#34;&gt;react-cropper&lt;/a&gt; by @roadmanfong&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Agontuk/vue-cropperjs&#34;&gt;vue-cropperjs&lt;/a&gt; by @Agontuk&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengyuanchen/cropperjs/main/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>