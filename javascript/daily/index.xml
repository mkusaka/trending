<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-09T01:40:19Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ciaochaos/qrbtf</title>
    <updated>2023-06-09T01:40:19Z</updated>
    <id>tag:github.com,2023-06-09:/ciaochaos/qrbtf</id>
    <link href="https://github.com/ciaochaos/qrbtf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An art QR code (qrcode) beautifier. 艺术二维码生成器。https://qrbtf.com&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;&lt;img alt=&#34;QRBTF&#34; src=&#34;https://raw.githubusercontent.com/ciaochaos/qrbtf/master/.github/qrbtf-logo.svg?sanitize=true&#34; height=&#34;75&#34;&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; URL: &lt;a href=&#34;https://qrbtf.com&#34; rel=&#34;noopener noreferrer&#34; target=&#34;_blank&#34;&gt;qrbtf.com&lt;/a&gt;&lt;br&gt; QRBTF is a simple web app to beautify your QR code. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ciaochaos/qrbtf/master/public/img/QRcodes.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Various Art QR Code Styles&lt;/li&gt; &#xA; &lt;li&gt;Parametric Design&lt;/li&gt; &#xA; &lt;li&gt;No Backend Required&lt;/li&gt; &#xA; &lt;li&gt;Support for SVG Downloads&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;中文介绍:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/_Oy9I9FqPXhfwN9IUhf6_g&#34;&gt;如何制作一个漂亮的二维码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/GFEMCWQu3e2qhTuBabnHmQ&#34;&gt;QRBTF 开源啦！来写个二维码样式吧～&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;QRBTF Website&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ciaochaos/qrbtf.git&#xA;cd qrbtf&#xA;npm install&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open &lt;a href=&#34;https://qrbtf.com&#34;&gt;qrbtf.com&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Enter a URL or text.&lt;/li&gt; &#xA; &lt;li&gt;Select a style.&lt;/li&gt; &#xA; &lt;li&gt;Adjust parameters.&lt;/li&gt; &#xA; &lt;li&gt;Download &lt;code&gt;JPG&lt;/code&gt; or &lt;code&gt;SVG&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;React Component (react-qrbtf)&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/cpunisher/react-qrbtf&#34;&gt;CPunisher / react-qrbtf&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install react-qrbtf --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Include the Component&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import React from &#39;react&#39;&#xA;import { QRNormal } from &#39;react-qrbtf&#39;&#xA;&#xA;class Component extends React.Component {&#xA;&#xA;    render() {&#xA;        return (&#xA;            &amp;lt;QRNormal&#xA;                value=&#34;react-qrbtf&#34;&#xA;                className=&#34;my-qrcode&#34;&#xA;                styles={{ svg: {width: &#34;200px&#34;} }}&#xA;                type=&#34;round&#34;&#xA;                size={50}&#xA;                opacity={80}&#xA;                posType=&#34;planet&#34;&#xA;                otherColor=&#34;#33CCCC&#34;&#xA;                posColor=&#34;#009999&#34;&#xA;            /&amp;gt;&#xA;        )&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Third-Party Project&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gexin1/beautify-qrcode&#34;&gt;gexin1 / beautify-qrcode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ciaochaos&#34;&gt;ciaochaos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CPunisher&#34;&gt;CPunisher&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Donation&lt;/h2&gt; &#xA;&lt;h4&gt;Paypal&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.me/ciaochaos&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Alipay&lt;/h4&gt; &#xA;&lt;img align=&#34;center&#34; src=&#34;https://blog.ciaochaos.com/projects/qrcode/alipay2.jpeg&#34; width=&#34;250&#34;&gt; &#xA;&lt;h2&gt;Dependency&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/davidshimjs/qrcodejs&#34;&gt;davidshimjs / qrcode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cozmo/jsQR&#34;&gt;cozmo / jsQR&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ciaochaos/qrbtf/master/LICENSE&#34;&gt;GPLv3&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Blockstream/greenlight</title>
    <updated>2023-06-09T01:40:19Z</updated>
    <id>tag:github.com,2023-06-09:/Blockstream/greenlight</id>
    <link href="https://github.com/Blockstream/greenlight" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Blockstream Greenlight&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains everything to get you started with Blockstream Greenlight, your self-sovereign Lightning node in the cloud.&lt;/p&gt; &#xA;&lt;p&gt;greenlight exposes a number of services over grpc allowing applications to integrate, and users to manage and control their node running on our infrastructure. The &lt;a href=&#34;https://github.com/Blockstream/greenlight/raw/main/libs/proto/&#34;&gt;protocol buffers files&lt;/a&gt; are provided as well as a number of language bindings for easier integration.&lt;/p&gt; &#xA;&lt;p&gt;The core two services currently exposed are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;strong&gt;scheduler&lt;/strong&gt; which allows users and applications to register new accounts, recover accounts based on the seed secret used to create the account, schedule their node on our infrastructure and looking up already scheduled nodes. Scheduling returns a grpc URI where the node itself can be reached.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;strong&gt;node&lt;/strong&gt; represents the scheduled user node running, and is used to interact with the c-lightning instance. It can be used to send and receive payments, manage channels and liquidity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The application can have two possible roles:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Remote control&lt;/strong&gt;: the application can authenticate as a user and can interact with its node to receive payments, initiate payments, manage channels and funds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Key manager&lt;/strong&gt;: the application has access to the secret keys that are necessary to sign off on actions initiated by a remote control, or as a reaction to some state change on the node. This usually involves running a part of c-lightning called the &lt;code&gt;hsmd&lt;/code&gt; and is the binary portion of the language bindings in this repository.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;An application can implement either one or both of these roles at the same time. Particular care has to be taken when implementing the key manager role, but only one application implementing this role must be present at a time, freeing others from that duty.&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;p&gt;The following is a quick walkthrough based on the python &lt;code&gt;glcli&lt;/code&gt; command line tool to get you started:&lt;/p&gt; &#xA;&lt;h2&gt;Install and updating &lt;code&gt;glcli&lt;/code&gt; and python API&lt;/h2&gt; &#xA;&lt;p&gt;There are prebuilt &lt;code&gt;glcli&lt;/code&gt; and &lt;code&gt;gl-client-py&lt;/code&gt; packages on a private repository. These allow developers to hit a running start, without having to bother with compiling the binary extensions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -U gl-client&#xA;pip install --extra-index-url=https://us-west2-python.pkg.dev/c-lightning/greenlight-pypi/simple/ -U glcli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Should you encounter any issues with the installation it is likely due to there not being a prebuilt version of the &lt;code&gt;gl-client-py&lt;/code&gt; library. Please refer to its &lt;a href=&#34;https://raw.githubusercontent.com/Blockstream/greenlight/main/libs/gl-client-py&#34;&gt;documentation&lt;/a&gt; on how to build the library from source, and let us know your platform so we can add it to our build system if possible.&lt;/p&gt; &#xA;&lt;h2&gt;Register / recover an account&lt;/h2&gt; &#xA;&lt;p&gt;Registration and recovery are managed by the scheduler, hence the &lt;code&gt;scheduler&lt;/code&gt; prefix in the following commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ glcli scheduler register --network=testnet&#xA;{&#xA;  &#34;device_cert&#34;: &#34;-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----\n\n\n&#34;,&#xA;  &#34;device_key&#34;: &#34;-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This returns an mTLS certificate and a matching private key that is used to authenticate and authorize the application with the services. These should be stored on the device and be used for all future communication. In particular, nodes will only accept incoming connections that are authenticated with the user&#39;s certificate. In order to register as a new user a signature from the key manager is required.&lt;/p&gt; &#xA;&lt;p&gt;The recovery process is also based on the key manager providing a signature:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ glcli scheduler recover&#xA;{&#xA;  &#34;device_cert&#34;: &#34;-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----\n\n\n&#34;,&#xA;  &#34;device_key&#34;: &#34;-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This too provides a certificate and a matching private key that can be used to authenticate and authorize the application.&lt;/p&gt; &#xA;&lt;h2&gt;Scheduling&lt;/h2&gt; &#xA;&lt;p&gt;While &lt;code&gt;glcli&lt;/code&gt; takes care of scheduling the node automatically if another command is provided, when implementing the client this must be done as a separate step:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ glcli scheduler schedule&#xA;{&#xA;  &#34;grpc_uri&#34;: &#34;https://35.236.110.178:6019&#34;,&#xA;  &#34;node_id&#34;: &#34;A27DtykCS7EjvnlUCB0yjrSMz4KSN4kGOo0Hm2Gd+lbi&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice that protocol buffers encode binary values using base64, which is why the &lt;code&gt;node_id&lt;/code&gt; isn&#39;t hex encoded. The node can now be reached directly at the provided URI. Notice that &lt;code&gt;glcli&lt;/code&gt; will automatically look up the current location:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ glcli getinfo&#xA;{&#xA;  &#34;addresses&#34;: [],&#xA;  &#34;alias&#34;: &#34;LATENTGLEE&#34;,&#xA;  &#34;blockheight&#34;: 2003446,&#xA;  &#34;color&#34;: &#34;A27D&#34;,&#xA;  &#34;network&#34;: &#34;testnet&#34;,&#xA;  &#34;node_id&#34;: &#34;A27DtykCS7EjvnlUCB0yjrSMz4KSN4kGOo0Hm2Gd+lbi&#34;,&#xA;  &#34;num_peers&#34;: 0,&#xA;  &#34;version&#34;: &#34;0.10.0&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to attach the &lt;code&gt;hsmd&lt;/code&gt; to the node run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ glcli hsmd &#xA;[2021-06-07 18:38:02,574 - DEBUG] Found existing hsm_secret file, loading secret from it&#xA;[2021-06-07 18:38:02,575 - DEBUG] Initializing libhsmd with secret&#xA;[2021-06-07 18:38:02,583 - DEBUG] libhsmd initialized for node_id=036ec3b729024bb123be7954081d328eb48ccf82923789063a8d079b619dfa56e2&#xA;[2021-06-07 18:38:02,584 - DEBUG] Contacting scheduler at 35.236.110.178:2601 to wait for the node to be scheduled.&#xA;[2021-06-07 18:38:02,594 - DEBUG] Waiting for node 036ec3b729024bb123be7954081d328eb48ccf82923789063a8d079b619dfa56e2 to be scheduled&#xA;[2021-06-07 18:38:03,229 - INFO] Node was scheduled at https://35.236.110.178:6019, opening direct connection&#xA;[2021-06-07 18:38:03,230 - DEBUG] Streaming HSM requests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Not all commands require the &lt;code&gt;hsmd&lt;/code&gt; to be running, however it is good practice to have it running in parallel with other commands being executed. Future versions of &lt;code&gt;glcli&lt;/code&gt; will automatically spawn an instance if needed by the command in question.&lt;/p&gt; &#xA;&lt;p&gt;From hereon the node can be managed just as if it were a local node, including sending and receiving on-chain transactions, sending and receiving off-chain transactions, opening and closing channels, etc.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;glcli --help&#xA;Usage: glcli [OPTIONS] COMMAND [ARGS]...&#xA;&#xA;Options:&#xA;  --help  Show this message and exit.&#xA;&#xA;Commands:&#xA;  close&#xA;  connect&#xA;  destroy&#xA;  disconnect&#xA;  fundchannel&#xA;  getinfo&#xA;  hsmd         Run the hsmd against the scheduler.&#xA;  invoice&#xA;  listfunds&#xA;  listpeers&#xA;  newaddr&#xA;  pay&#xA;  scheduler&#xA;  stop&#xA;  withdraw&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Best practices&lt;/h1&gt; &#xA;&lt;h2&gt;Secret generation&lt;/h2&gt; &#xA;&lt;p&gt;The language bindings expect a 32 byte securely generated secret from which all private keys and secrets are generated. This secret must be kept safe on the user device, and under no circumstances should be stored on the application server, as it controls the user funds. When generating the seed secret ensure that the source of randomness is suitable for cryptographically secure random numbers!&lt;/p&gt; &#xA;&lt;p&gt;In order to guarantee portability, the seed should be generated according with the &lt;a href=&#34;https://github.com/bitcoin/bips/raw/master/bip-0039.mediawiki&#34;&gt;BIP 39&lt;/a&gt; standard, and show the mnemonic during the creation so they can initialize other client applications with the same secret. The mnemonic should not be shown afterwards.&lt;/p&gt; &#xA;&lt;h2&gt;Network&lt;/h2&gt; &#xA;&lt;p&gt;greenlight currently supports 3 networks: &lt;code&gt;bitcoin&lt;/code&gt;, &lt;code&gt;testnet&lt;/code&gt; and &lt;code&gt;regtest&lt;/code&gt;. We suggest mostly using &lt;code&gt;testnet&lt;/code&gt; for testing. We plan to open up our &lt;code&gt;regtest&lt;/code&gt; and add &lt;code&gt;signet&lt;/code&gt; in the near future to make testing simpler as well, but the public testnet should serve that purpose well for now. Keep in mind that the &lt;code&gt;testnet&lt;/code&gt; can sometimes be a bit flaky, and the lightning network running on testnet is not the best maintained, expect &lt;code&gt;bitcoin&lt;/code&gt; to perform better 🙂&lt;/p&gt; &#xA;&lt;h2&gt;Preemption&lt;/h2&gt; &#xA;&lt;p&gt;Scheduled nodes are preempted after some minutes of inactivity. The timer can be reset by performing any interaction, except attaching the key device. This is to conserve server resources, reflect that the node can&#39;t do much without a key manager attached, and provide our operational team the flexibility to take down nodes for maintenance. There is currently no absolute deadline by which nodes are shut down, however keep in mind that that might eventually become necessary if applications just keep nodes alive indefinitely.&lt;/p&gt; &#xA;&lt;h2&gt;Latencies&lt;/h2&gt; &#xA;&lt;p&gt;Currently the environment consists of a single cluster in &lt;code&gt;us-west2&lt;/code&gt;, with both scheduler and nodes in this region. We plan to implement geo-load-balancing of the nodes (and associated databases) and thus considerably reduce the roundtrip times from the rest of the world.&lt;/p&gt; &#xA;&lt;p&gt;Currently the roundtrip times can be relatively high from more distant regions, and an mTLS handshake requires multiple roundtrips the first time (parts of the handshake can be cached in memory and skipped on reconnects). This is only temporary until geo-load-balancing gets rolled out.&lt;/p&gt; &#xA;&lt;p&gt;To minimize the overhead of the mTLS handshake it is suggested to keep the grpc connections open and reuse them whenever possible.&lt;/p&gt; &#xA;&lt;h1&gt;Changelog&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>NaturalIntelligence/fast-xml-parser</title>
    <updated>2023-06-09T01:40:19Z</updated>
    <id>tag:github.com,2023-06-09:/NaturalIntelligence/fast-xml-parser</id>
    <link href="https://github.com/NaturalIntelligence/fast-xml-parser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Validate XML, Parse XML and Build XML rapidly without C/C++ based libraries and no callback.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://www.npmjs.com/package/fast-xml-parser&#34;&gt;fast-xml-parser&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://snyk.io/test/github/naturalintelligence/fast-xml-parser&#34;&gt;&lt;img src=&#34;https://snyk.io/test/github/naturalintelligence/fast-xml-parser/badge.svg?sanitize=true&#34; alt=&#34;Known Vulnerabilities&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://packagequality.com/#?package=fast-xml-parser&#34;&gt;&lt;img src=&#34;http://npm.packagequality.com/shield/fast-xml-parser.svg?style=flat-square&#34; alt=&#34;NPM quality&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/NaturalIntelligence/fast-xml-parser?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/NaturalIntelligence/fast-xml-parser/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://naturalintelligence.github.io/fast-xml-parser/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Try-me-blue.svg?colorA=FFA500&amp;amp;colorB=0000FF&#34; alt=&#34;Try me&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npm.im/fast-xml-parser&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dt/fast-xml-parser.svg?sanitize=true&#34; alt=&#34;NPM total downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Validate XML, Parse XML to JS Object, or Build XML from JS Object without C/C++ based libraries and no callback.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Looking for maintainers&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Support this project by becoming a &lt;strong&gt;Sponsor&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Click on Sponsor button above or &lt;a href=&#34;https://opencollective.com/fast-xml-parser/donate&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://opencollective.com/fast-xml-parser/donate/button@2x.png?color=blue&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://paypal.me/naturalintelligence&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/static/img/support_paypal.svg?sanitize=true&#34; alt=&#34;Stubmatic donate button&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/getsentry&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7692328/204701653-ce369b29-6fdb-48f2-9848-593d04628a2b.png&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/fast-xml-parser/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/fast-xml-parser/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/fast-xml-parser/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/fast-xml-parser/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/fast-xml-parser/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/fast-xml-parser/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/fast-xml-parser/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/fast-xml-parser/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/fast-xml-parser/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/fast-xml-parser/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://github.com/NaturalIntelligence/ThankYouBackers&#34;&gt;ThankYouBackers&lt;/a&gt; for our supporters&lt;/p&gt; &#xA;&lt;h2&gt;Users&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/renovatebot/renovate&#34; title=&#34;renovate&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/38656520&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://vmware.com/&#34; title=&#34;vmware&#34;&gt; &lt;img src=&#34;https://avatars0.githubusercontent.com/u/473334&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.microsoft.com/&#34; title=&#34;microsoft&#34;&gt; &lt;img src=&#34;https://avatars0.githubusercontent.com/u/6154722&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://ibm.github.io/&#34; title=&#34;IBM&#34;&gt; &lt;img src=&#34;https://avatars2.githubusercontent.com/u/1459110&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.smartbear.com&#34; title=&#34;SmartBear Software&#34;&gt; &lt;img src=&#34;https://avatars2.githubusercontent.com/u/1644671&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://nasa.github.io/&#34; title=&#34;NASA&#34;&gt; &lt;img src=&#34;https://avatars0.githubusercontent.com/u/848102&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prettier&#34; title=&#34;Prettier&#34;&gt; &lt;img src=&#34;https://avatars0.githubusercontent.com/u/25822731&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://brain.js.org/&#34; title=&#34;brain.js&#34;&gt; &lt;img src=&#34;https://avatars2.githubusercontent.com/u/23732838&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aws&#34; title=&#34;AWS SDK&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/2232217&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.fda.gov/&#34; title=&#34;Food and Drug Administration &#34;&gt; &lt;img src=&#34;https://avatars2.githubusercontent.com/u/6471964&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.magento.com/&#34; title=&#34;Magento&#34;&gt; &lt;img src=&#34;https://avatars2.githubusercontent.com/u/168457&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SAP&#34; title=&#34;SAP&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7692328/204835214-d9d25b58-e3df-408d-87a3-c7d36b578ee4.png&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/postmanlabs&#34; title=&#34;postman&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7692328/204835529-e9e290ad-696a-49ad-9d34-08e955704715.png&#34; width=&#34;60px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/react-native-community&#34; title=&#34;React Native Community&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/20269980?v=4&#34; width=&#34;60px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check the list of all known users &lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/USERs.md&#34;&gt;here&lt;/a&gt;;&lt;/p&gt; &#xA;&lt;p&gt;&lt;small&gt;The list of users is collected either from the list published by Github, cummunicated directly through mails/chat , or from other resources. If you feel that your name in the above list is incorrectly published or you&#39;re not the user of this library anymore then you can inform us to remove it. We&#39;ll do the necessary changes ASAP.&lt;/small&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Main Features&lt;/h2&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/static/img/fxp_logo.png&#34; width=&#34;180px&#34; alt=&#34;FXP logo&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Validate XML data syntactically&lt;/li&gt; &#xA; &lt;li&gt;Parse XML to JS Object&lt;/li&gt; &#xA; &lt;li&gt;Build XML from JS Object&lt;/li&gt; &#xA; &lt;li&gt;Works with node packages, in browser, and in CLI (press try me button above for demo)&lt;/li&gt; &#xA; &lt;li&gt;Faster than any other pure JS implementation.&lt;/li&gt; &#xA; &lt;li&gt;It can handle big files (tested up to 100mb).&lt;/li&gt; &#xA; &lt;li&gt;Controlled parsing using various options&lt;/li&gt; &#xA; &lt;li&gt;XML Entities, HTML entities, and DOCTYPE entites are supported.&lt;/li&gt; &#xA; &lt;li&gt;unpaired tags (Eg &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; in HTML), stop nodes (Eg &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; in HTML) are supported.&lt;/li&gt; &#xA; &lt;li&gt;You can restore almost same XML from JSON&lt;/li&gt; &#xA; &lt;li&gt;Supports comments&lt;/li&gt; &#xA; &lt;li&gt;It can preserve Order of tags in JS object&lt;/li&gt; &#xA; &lt;li&gt;You can control if a single tag should be parsed into array.&lt;/li&gt; &#xA; &lt;li&gt;Supports parsing of PI (Processing Instruction) tags with XML declaration tags&lt;/li&gt; &#xA; &lt;li&gt;And many more other features.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;To use as package dependency &lt;code&gt;$ npm install fast-xml-parser&lt;/code&gt; or &lt;code&gt;$ yarn add fast-xml-parser&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use as system command &lt;code&gt;$ npm install fast-xml-parser -g&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use it on a &lt;strong&gt;webpage&lt;/strong&gt; include it from a &lt;a href=&#34;https://cdnjs.com/libraries/fast-xml-parser&#34;&gt;CDN&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;As CLI command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ fxparser some.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In a node js project&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { XMLParser, XMLBuilder, XMLValidator} = require(&#34;fast-xml-parser&#34;);&#xA;&#xA;const parser = new XMLParser();&#xA;let jObj = parser.parse(XMLdata);&#xA;&#xA;const builder = new XMLBuilder();&#xA;const xmlContent = builder.build(jObj);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In a HTML page&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;path/to/fxp.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;:&#xA;&amp;lt;script&amp;gt;&#xA;  const parser = new fxparser.XMLParser();&#xA;  parser.parse(xmlContent);&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check lib folder for different browser bundles&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Bundle Name&lt;/th&gt; &#xA;   &lt;th&gt;Size&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fxbuilder.min.js&lt;/td&gt; &#xA;   &lt;td&gt;5.2K&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fxparser.js&lt;/td&gt; &#xA;   &lt;td&gt;50K&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fxparser.min.js&lt;/td&gt; &#xA;   &lt;td&gt;17K&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fxp.min.js&lt;/td&gt; &#xA;   &lt;td&gt;22K&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fxvalidator.min.js&lt;/td&gt; &#xA;   &lt;td&gt;5.7K&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Documents&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;v3&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/docs/v3/docs.md&#34;&gt;documents&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;v4&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/docs/v4/1.GettingStarted.md&#34;&gt;GettingStarted.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/docs/v4/2.XMLparseOptions.md&#34;&gt;XML Parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/docs/v4/3.XMLBuilder.md&#34;&gt;XML Builder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/docs/v4/4.XMLValidator.md&#34;&gt;XML Validator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/docs/v4/5.Entities.md&#34;&gt;Entities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/docs/v4/6.HTMLParsing.md&#34;&gt;HTML Document Parsing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/docs/v4/7.PITags.md&#34;&gt;PI Tag processing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;h3&gt;XML Parser&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/docs/imgs/XMLParser_v4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Y-axis: requests per second&lt;/li&gt; &#xA; &lt;li&gt;X-axis: File size&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Large files&lt;/strong&gt; &lt;img src=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/docs/imgs/XMLParser_large_v4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Y-axis: requests per second&lt;/li&gt; &#xA; &lt;li&gt;X-axis: File size&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;XML Builder&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/docs/imgs/XMLBuilder_v4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Y-axis: requests per second&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;small&gt;negative means error&lt;/small&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/NaturalIntelligence/ads/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/static/img/ni_ads_ads.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Our other projects and research you must try&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/amitguptagwl/bigbit&#34;&gt;BigBit standard&lt;/a&gt;&lt;/strong&gt; : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Single text encoding to replace UTF-8, UTF-16, UTF-32 and more with less memory.&lt;/li&gt; &#xA;   &lt;li&gt;Single Numeric datatype alternative of integer, float, double, long, decimal and more without precision loss.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/NaturalIntelligence/cytorus&#34;&gt;Cytorus&lt;/a&gt;&lt;/strong&gt;: Be specific and flexible while running E2E tests. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Run tests only for a particular User Story&lt;/li&gt; &#xA;   &lt;li&gt;Run tests for a route or from a route&lt;/li&gt; &#xA;   &lt;li&gt;Customizable reporting&lt;/li&gt; &#xA;   &lt;li&gt;Central dashboard for better monitoring&lt;/li&gt; &#xA;   &lt;li&gt;Options to integrate E2E tests with Jira, Github etc using Central dashboard &lt;code&gt;Tian&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/NaturalIntelligence/Stubmatic&#34;&gt;Stubmatic&lt;/a&gt;&lt;/strong&gt; : Create fake webservices, DynamoDB or S3 servers, Manage fake/mock stub data, Or fake any HTTP(s) call.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supporters&lt;/h2&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to &lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/graphs/contributors&#34;&gt;all&lt;/a&gt; the people who contribute. [&lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/docs/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;].&lt;/p&gt; &#xA;&lt;!-- &lt;a href=&#34;graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/contributors.svg?width=890&amp;button=false&#34; /&gt;&lt;/a&gt; --&gt; &#xA;&lt;!--&#xA;### Lead Maintainers&#xA;![Amit Gupta](https://avatars1.githubusercontent.com/u/7692328?s=100&amp;v=4)&#xA;[![Vohmyanin Sergey Vasilevich](https://avatars3.githubusercontent.com/u/783335?s=100&amp;v=4)](https://github.com/Delagen)&#xA;&#xA;### All Contributors --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&#34;https://opencollective.com/fast-xml-parser#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/fast-xml-parser#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/fast-xml-parser/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MIT License&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/static/img/donation_quote.png&#34; alt=&#34;Donate $5&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>