<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-01T01:28:25Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yonggekkk/CF-workers-vless</title>
    <updated>2023-08-01T01:28:25Z</updated>
    <id>tag:github.com,2023-08-01:/yonggekkk/CF-workers-vless</id>
    <link href="https://github.com/yonggekkk/CF-workers-vless" rel="alternate"></link>
    <summary type="html">&lt;p&gt;cf-worker-vless脚本、优选域名一键脚本。懒人小白必备的代理神器两件套&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;自选域名一键脚本，请在本地网络环境下运行&lt;/h3&gt; &#xA;&lt;h3&gt;一键脚本：&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -sSL https://gitlab.com/rwkgyg/CFwarp/raw/main/point/CFcdnym.sh -o CFcdnym.sh &amp;amp;&amp;amp; chmod +x CFcdnym.sh &amp;amp;&amp;amp; bash CFcdnym.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;相关教程请参考&lt;a href=&#34;https://ygkkk.blogspot.com/2023/07/cfworkers-vless.html&#34;&gt;甬哥博客及视频教程&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/3Kmfi6HP/EDtunnel/raw/main/_worker.js&#34;&gt;worker-vless代码取自3Kmfi6HP&lt;/a&gt;&lt;/h4&gt;</summary>
  </entry>
  <entry>
    <title>iptv-org/database</title>
    <updated>2023-08-01T01:28:25Z</updated>
    <id>tag:github.com,2023-08-01:/iptv-org/database</id>
    <link href="https://github.com/iptv-org/database" rel="alternate"></link>
    <summary type="html">&lt;p&gt;User editable database for TV channels.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Database &lt;a href=&#34;https://github.com/iptv-org/database/actions/workflows/update.yml&#34;&gt;&lt;img src=&#34;https://github.com/iptv-org/database/actions/workflows/update.yml/badge.svg?sanitize=true&#34; alt=&#34;update&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;User editable database for TV channels.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iptv-org/database/master/.readme/preview.png&#34; alt=&#34;channels.csv&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;All data is stored in the &lt;a href=&#34;https://raw.githubusercontent.com/iptv-org/database/master/data&#34;&gt;/data&lt;/a&gt; folder as &lt;a href=&#34;https://en.wikipedia.org/wiki/Comma-separated_values&#34;&gt;CSV&lt;/a&gt; (Comma-separated values) files and can be edited with any spreadsheet editor (such as &lt;a href=&#34;https://www.google.com/sheets/about/&#34;&gt;Google Sheets&lt;/a&gt;, &lt;a href=&#34;https://www.libreoffice.org/discover/libreoffice/&#34;&gt;LibreOffice&lt;/a&gt;, ...).&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Please make sure to read the &lt;a href=&#34;https://raw.githubusercontent.com/iptv-org/database/master/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; before sending an issue or making a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iptv-org/database/master/LICENSE&#34;&gt;&lt;img src=&#34;http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg?sanitize=true&#34; alt=&#34;CC0&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jaegertracing/jaeger-ui</title>
    <updated>2023-08-01T01:28:25Z</updated>
    <id>tag:github.com,2023-08-01:/jaegertracing/jaeger-ui</id>
    <link href="https://github.com/jaegertracing/jaeger-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Web UI for Jaeger&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/jaegertracing/jaeger-ui/actions&#34;&gt;&lt;img src=&#34;https://github.com/jaegertracing/jaeger-ui/workflows/Unit%20Tests/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/jaegertracing/jaeger-ui&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/jaegertracing/jaeger-ui/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fjaegertracing%2Fjaeger-ui?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjaegertracing%2Fjaeger-ui.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Jaeger UI&lt;/h1&gt; &#xA;&lt;p&gt;Visualize distributed tracing with Jaeger.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Trace Search&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Trace Details&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/main/media/ss_search.png&#34; alt=&#34;Trace Search&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/main/media/ss_trace.png&#34; alt=&#34;Trace Details&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Stuck somewhere or found a bug? See &lt;a href=&#34;https://www.jaegertracing.io/get-in-touch/&#34;&gt;Getting in Touch&lt;/a&gt; on how to ask for help.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/main/#running-the-application&#34;&gt;Running the application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/main/#running-on-windows-os&#34;&gt;Running on Windows OS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm (Node Version Manager)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en&#34;&gt;Node.JS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;npm package manager&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yarnpkg.com/&#34;&gt;yarn package manager&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The app was built with &lt;a href=&#34;https://github.com/facebookincubator/create-react-app&#34;&gt;create-react-app&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Running the application&lt;/h3&gt; &#xA;&lt;p&gt;Fork and/or clone the &lt;code&gt;jaeger-ui&lt;/code&gt; repo and change directory into it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/jaegertracing/jaeger-ui.git&#xA;cd jaeger-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the recommended Node versions: (defined in &lt;a href=&#34;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/main/.nvmrc&#34;&gt;.nvmrc&lt;/a&gt; file):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nvm use&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install dependencies via &lt;code&gt;yarn&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn install --frozen-lockfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure you have the Jaeger Query service running on &lt;a href=&#34;http://localhost:16686&#34;&gt;http://localhost:16686&lt;/a&gt;. For example, you can run Jaeger all-in-one Docker image as described in the &lt;a href=&#34;https://www.jaegertracing.io/docs/latest/getting-started/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t have it running locally, then tunnel to the correct host and port:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ssh -fN -L 16686:$BACKEND_HOST:$BACKEND_PORT $BACKEND_HOST&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using the &lt;a href=&#34;https://www.jaegertracing.io/docs/1.7/deployment/#ui-base-path&#34;&gt;UI Base Path&lt;/a&gt; feature, you need to append the base path into &lt;code&gt;jaeger-ui/jaeger-ui/vite.config.js&lt;/code&gt; in &lt;code&gt;proxyConfig&lt;/code&gt; object. For example, if the base path is &lt;code&gt;&#34;/jaeger&#34;&lt;/code&gt;, then the &lt;code&gt;target&lt;/code&gt; should be &lt;code&gt;&#34;http://localhost:16686/jaeger&#34;&lt;/code&gt; and your &lt;code&gt;proxyConfig&lt;/code&gt; object would be:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const proxyConfig = {&#xA;  target: &#39;http://localhost:16686/jaeger&#39;,&#xA;  secure: false,&#xA;  changeOrigin: true,&#xA;  ws: true,&#xA;  xfwd: true,&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the development server with hot loading:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above command will run a web server on &lt;code&gt;http://localhost:5173&lt;/code&gt; that will serve the UI assets, with hot reloading support, and it will proxy all API requests to &lt;code&gt;http://localhost:16686&lt;/code&gt; where Jaeger query should be running.&lt;/p&gt; &#xA;&lt;h4&gt;Commands&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;yarn start&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Starts development server with hot reloading and api proxy.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;yarn test&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run all the tests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;yarn lint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Lint the project (eslint, prettier, typescript)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;yarn fmt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Apply Prettier source code formatting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;yarn build&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Runs production build. Outputs files to &lt;code&gt;packages/jaeger-ui/build&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Running on Windows OS&lt;/h3&gt; &#xA;&lt;p&gt;While we don&#39;t natively support Windows OS for running the Jaeger UI Dev Environment, you can use Windows Subsystem for Linux (WSL) to run it.&lt;/p&gt; &#xA;&lt;p&gt;Here are some steps to follow:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install WSL: &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install&#34;&gt;https://learn.microsoft.com/en-us/windows/wsl/install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install Node.JS: &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/dev-environment/javascript/nodejs-on-wsl&#34;&gt;https://learn.microsoft.com/en-us/windows/dev-environment/javascript/nodejs-on-wsl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install Yarn: &lt;a href=&#34;https://dev.to/bonstine/installing-yarn-on-wsl-38p2&#34;&gt;https://dev.to/bonstine/installing-yarn-on-wsl-38p2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Connect WSL Environment with VSCode: &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/dev-environment/javascript/nodejs-on-wsl#install-visual-studio-code&#34;&gt;https://learn.microsoft.com/en-us/windows/dev-environment/javascript/nodejs-on-wsl#install-visual-studio-code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use the WSL Terminal inside VSCode and &lt;a href=&#34;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/main/#running-the-application&#34;&gt;follow the Jaeger UI installation steps&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;UI Configuration&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.jaegertracing.io/docs/latest/frontend-ui/&#34;&gt;configuration guide&lt;/a&gt; for details on configuring Google Analytics tracking, menu customizations, and other aspects of UI behavior.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/main/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>