<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-22T01:34:52Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>thomasjacquin/allsky</title>
    <updated>2023-10-22T01:34:52Z</updated>
    <id>tag:github.com,2023-10-22:/thomasjacquin/allsky</id>
    <link href="https://github.com/thomasjacquin/allsky" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Raspberry Pi operated Wireless Allsky Camera&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Allsky Camera &lt;img src=&#34;https://img.shields.io/badge/Version-v2023.05.01_03-green.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt; &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=MEBU2KN75G2NG&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;This is the source code for the Allsky Camera project described &lt;a href=&#34;http://www.instructables.com/id/Wireless-All-Sky-Camera/&#34;&gt;on Instructables&lt;/a&gt;. &amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/thomasjacquin/allsky/raw/master/assets/allsky_camera.png&#34; width=&#34;50%&#34; title=&#34;Example of an allsky camera&#34;&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;This README and the &lt;a href=&#34;https://htmlpreview.github.io/?https://raw.githubusercontent.com/thomasjacquin/allsky/master/html/documentation/index.html&#34;&gt;Allsky documentation&lt;/a&gt; will help get your allsky camera up and running.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;You will need the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A Raspberry Pi (Zero 2, 2, 3, 4) running Pi OS.&lt;/li&gt; &#xA; &lt;li&gt;A camera (Raspberry Pi HQ, Module 3, or RPi compatible, or ZWO ASI)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTES:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Only the Raspberry Pi OS is supported. Other operating systems like Ubuntu are NOT supported.&lt;/li&gt; &#xA;  &lt;li&gt;The ZWO ASI120-series cameras are not recommended due to somewhat poor quality. See &lt;a href=&#34;https://htmlpreview.github.io/?https://raw.githubusercontent.com/thomasjacquin/allsky/master/html/documentation/troubleshooting/ZWOCameras.html&#34;&gt;Troubleshooting --&amp;gt; ZWO Cameras&lt;/a&gt; for notes on the ASI120-series and related T7 / T7C cameras.&lt;/li&gt; &#xA;  &lt;li&gt;The Pi Zero with its limited memory and &lt;em&gt;very&lt;/em&gt; limited CPU power (single CPU core), is not recommended. You will likely not be able to create keograms, startrails, or timelapse videos.&lt;/li&gt; &#xA;  &lt;li&gt;The Pi Zero 2 with its limited memory and somewhat limited CPU power, is not recommended unless cost is the only concern. Creating keograms, startrails, and timelapse videos may or may not be possible.&lt;/li&gt; &#xA;  &lt;li&gt;The Le Potato is the only &#34;Pi-compatible&#34; board that we&#39;ve found to actually be compatible, so buyer beware.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Software Installation&lt;/h2&gt; &#xA;&lt;p&gt;PatriotAstro created a great &lt;a href=&#34;https://www.youtube.com/watch?v=7TGpGz5SeVI&#34;&gt;video&lt;/a&gt; describing the installation steps below. &lt;strong&gt;We highly suggest viewing it before installing the software.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Detailed installation instructions can be found at &lt;a href=&#34;https://htmlpreview.github.io/?https://raw.githubusercontent.com/thomasjacquin/allsky/master/html/documentation/installations/Allsky.html&#34;&gt;Installing / Upgrading --&amp;gt; Allsky&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Web User Interface (WebUI)&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/thomasjacquin/allsky/raw/master/html/documentation/settings/AllskySettingsPage.png&#34; style=&#34;border: 1px solid black&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;The WebUI is now installed as part of Allsky and is used to administer Allsky, and to a lesser extent, your Pi. It can also be used to view the current image as well as all saved images, keograms, startrails, and timelapse videos.&lt;/p&gt; &#xA;&lt;p&gt;A public page is also available in order to view the current image without having to log into the WebUI and without being able to do any administrative tasks. This can be useful for people who don&#39;t have a Allsky Website but still want to share a view of their sky:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://your_raspberry_IP/public.php&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure this page is publically viewable. If it is behind a firewall consult the documentation for your network equipment for information on allowing inbound connections.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Allsky Website&lt;/h2&gt; &#xA;&lt;p&gt;By installling the optional Allsky Website you can display your files on a website on the Pi, on another machine, or on both.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://htmlpreview.github.io/?https://raw.githubusercontent.com/thomasjacquin/allsky/master/html/documentation/installations/AllskyWebsite.html&#34;&gt;Installation / Upgrading --&amp;gt; Website&lt;/a&gt; for information on how to install and configure an Allsky Website.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Post-capture processing&lt;/h2&gt; &#xA;&lt;p&gt;Captured images can be resized, cropped, and stretched, and bad images (i.e., too light or too dark) can be removed automatically.&lt;/p&gt; &#xA;&lt;p&gt;Allsky supports running &#34;modules&#34; after each picture is taken to change the image (e.g., add an overlay) or perform other tasks (e.g., count the number of stars in the image). You can determine what modules to run and in what order. Modules can pass data to other modules, for example, the Start Count Module can pass the star count to the Overlay Module to be added to the overlay.&lt;/p&gt; &#xA;&lt;p&gt;The Overlay Editor lets you easily specify what text and images you want in your overlay, and place them using drag-and-drop. Each field can be formatted however you want (font, color, size, position, rotation, etc.). The only limit is your imagination!!&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://htmlpreview.github.io/?https://raw.githubusercontent.com/thomasjacquin/allsky/master/html/documentation/overlays/overlays.html&#34;&gt;Explanations / How To -&amp;gt; Overlays&lt;/a&gt; and &lt;a href=&#34;https://htmlpreview.github.io/?https://raw.githubusercontent.com/thomasjacquin/allsky/master/html/documentation/modules/modules.html&#34;&gt;Explanations / How To -&amp;gt; Modules&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Dark frame subtraction&lt;/h2&gt; &#xA;&lt;p&gt;Dark frame subtraction removes hot pixels from images by taking images at different temperatures with a cover on your camera lens and subtracting those images from nighttime images.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://htmlpreview.github.io/?https://raw.githubusercontent.com/thomasjacquin/allsky/master/html/documentation/explanations/darkFrames.html&#34;&gt;Explanations / How To -&amp;gt; Dark frames&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Timelapse and mini timelapse&lt;/h2&gt; &#xA;&lt;p&gt;By default, a timelapse video is generated at the end of nighttime from all of the images captured in the last 24 hours.&lt;/p&gt; &#xA;&lt;p&gt;&#34;Mini&#34; timelapse videos can also be created every few images, and contain the last several images. They are useful to see what the sky was recently like.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Keograms&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/thomasjacquin/allsky/raw/master/assets/Keogram.png&#34; width=&#34;75%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;A &lt;strong&gt;Keogram&lt;/strong&gt; is an image giving a quick view of the day&#39;s activity. For each image a central vertical column 1 pixel wide is extracted. All these columns are then stitched together from left to right. This results in a timeline that reads from dawn to the end of nighttime (the image above only shows nighttime data since daytime images were turned off).&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://htmlpreview.github.io/?https://raw.githubusercontent.com/thomasjacquin/allsky/master/html/documentation/explanations/keograms.html&#34;&gt;Explanations / How To --&amp;gt; Keograms&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Startrails&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/thomasjacquin/allsky/raw/master/assets/Startrails.png&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Startrails&lt;/strong&gt; are generated by stacking all the images from a night on top of each other. In the image above, Polaris is centered about one-fourth the way from the top.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://htmlpreview.github.io/?https://raw.githubusercontent.com/thomasjacquin/allsky/master/html/documentation/explanations/startrails.html&#34;&gt;Explanations / How To --&amp;gt; Startrails&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Automatic deletion of old data&lt;/h2&gt; &#xA;&lt;p&gt;You can specify how many days worth of images to keep in order to keep the Raspberry Pi SD card from filling up. If you have the Allsky Website installed on your Pi, you can specify how many days worth of its imags to keep.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;strong&gt;DAYS_TO_KEEP&lt;/strong&gt; and &lt;strong&gt;WEB_DAYS_TO_KEEP&lt;/strong&gt; settings in &lt;a href=&#34;https://htmlpreview.github.io/?https://raw.githubusercontent.com/thomasjacquin/allsky/master/html/documentation/settings/allsky.html&#34;&gt;Settings --&amp;gt; Allsky&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Share your sky&lt;/h2&gt; &#xA;&lt;p&gt;If you want your allsky camera added to the &lt;a href=&#34;http://www.thomasjacquin.com/allsky-map&#34;&gt;Allsky map&lt;/a&gt;, see &lt;a href=&#34;https://htmlpreview.github.io/?https://raw.githubusercontent.com/thomasjacquin/allsky/master/html/documentation/miscellaneous/AllskyMap.html&#34;&gt;Put your camera on Allsky Map&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you know anyone in Greenland or Antartica, send them a camera!!&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.thomasjacquin.com/allsky-map/&#34; title=&#34;Allsky map example - click to see real map&#34;&gt; &lt;img src=&#34;https://github.com/thomasjacquin/allsky/raw/master/html/documentation/miscellaneous/allsky-map-with-pins.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Release changes&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://htmlpreview.github.io/?https://raw.githubusercontent.com/thomasjacquin/allsky/master/html/documentation/changeLog.html&#34;&gt;Allsky Version Change Log&lt;/a&gt; for a list of changes in this release and all prior releases.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;!-- =============================================================================== --&gt; &#xA;&lt;h2&gt;Donation&lt;/h2&gt; &#xA;&lt;p&gt;If you found this project useful, here&#39;s a link to send Thomas a cup of coffee :)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=MEBU2KN75G2NG&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>woowacourse-precourse/javascript-baseball-6</title>
    <updated>2023-10-22T01:34:52Z</updated>
    <id>tag:github.com,2023-10-22:/woowacourse-precourse/javascript-baseball-6</id>
    <link href="https://github.com/woowacourse-precourse/javascript-baseball-6" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;미션 - 숫자 야구&lt;/h1&gt; &#xA;&lt;h2&gt;🔍 진행 방식&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;미션은 &lt;strong&gt;기능 요구 사항, 프로그래밍 요구 사항, 과제 진행 요구 사항&lt;/strong&gt; 세 가지로 구성되어 있다.&lt;/li&gt; &#xA; &lt;li&gt;세 개의 요구 사항을 만족하기 위해 노력한다. 특히 기능을 구현하기 전에 기능 목록을 만든다.&lt;/li&gt; &#xA; &lt;li&gt;기능 요구 사항에 기재되지 않은 내용은 스스로 판단하여 구현한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📮 미션 제출 방법&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;미션 구현을 완료한 후 GitHub을 통해 제출해야 한다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;GitHub을 활용한 제출 방법은 &lt;a href=&#34;https://github.com/woowacourse/woowacourse-docs/tree/master/precourse&#34;&gt;프리코스 과제 제출&lt;/a&gt; 문서를 참고해 제출한다.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;GitHub에 미션을 제출한 후 &lt;a href=&#34;https://apply.techcourse.co.kr&#34;&gt;우아한테크코스 지원&lt;/a&gt; 사이트에 접속하여 프리코스 과제를 제출한다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;자세한 방법은 &lt;a href=&#34;https://github.com/woowacourse/woowacourse-docs/tree/master/precourse#%EC%A0%9C%EC%B6%9C-%EA%B0%80%EC%9D%B4%EB%93%9C&#34;&gt;제출 가이드&lt;/a&gt; 참고&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Pull Request만 보내고 지원 플랫폼에서 과제를 제출하지 않으면 최종 제출하지 않은 것으로 처리되니 주의한다.&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚨 과제 제출 전 체크 리스트 - 0점 방지&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;기능 구현을 모두 정상적으로 했더라도 &lt;strong&gt;요구 사항에 명시된 출력값 형식을 지키지 않을 경우 0점으로 처리&lt;/strong&gt;한다.&lt;/li&gt; &#xA; &lt;li&gt;기능 구현을 완료한 뒤 아래 가이드에 따라 테스트를 실행했을 때 모든 테스트가 성공하는지 확인한다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;테스트가 실패할 경우 0점으로 처리&lt;/strong&gt;되므로, 반드시 확인 후 제출한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;테스트 실행 가이드&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;테스트 패키지 설치를 위해 &lt;code&gt;Node.js&lt;/code&gt; 버전 &lt;code&gt;18.17.1&lt;/code&gt; 이상이 필요하다.&lt;/li&gt; &#xA; &lt;li&gt;다음 명령어를 입력해 패키지를 설치한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;설치가 완료되었다면, 다음 명령어를 입력해 테스트를 실행한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🚀 기능 요구 사항&lt;/h2&gt; &#xA;&lt;p&gt;기본적으로 1부터 9까지 서로 다른 수로 이루어진 3자리의 수를 맞추는 게임이다.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;같은 수가 같은 자리에 있으면 스트라이크, 다른 자리에 있으면 볼, 같은 수가 전혀 없으면 낫싱이란 힌트를 얻고, 그 힌트를 이용해서 먼저 상대방(컴퓨터)의 수를 맞추면 승리한다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;예) 상대방(컴퓨터)의 수가 425일 때 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;123을 제시한 경우 : 1스트라이크&lt;/li&gt; &#xA;     &lt;li&gt;456을 제시한 경우 : 1볼 1스트라이크&lt;/li&gt; &#xA;     &lt;li&gt;789를 제시한 경우 : 낫싱&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;위 숫자 야구 게임에서 상대방의 역할을 컴퓨터가 한다. 컴퓨터는 1에서 9까지 서로 다른 임의의 수 3개를 선택한다. 게임 플레이어는 컴퓨터가 생각하고 있는 서로 다른 3개의 숫자를 입력하고, 컴퓨터는 입력한 숫자에 대한 결과를 출력한다.&lt;/li&gt; &#xA; &lt;li&gt;이 같은 과정을 반복해 컴퓨터가 선택한 3개의 숫자를 모두 맞히면 게임이 종료된다.&lt;/li&gt; &#xA; &lt;li&gt;게임을 종료한 후 게임을 다시 시작하거나 완전히 종료할 수 있다.&lt;/li&gt; &#xA; &lt;li&gt;사용자가 잘못된 값을 입력한 경우 &lt;code&gt;throw&lt;/code&gt;문을 사용해 예외를 발생시킨후 애플리케이션은 종료되어야 한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;입출력 요구 사항&lt;/h3&gt; &#xA;&lt;h4&gt;입력&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;서로 다른 3자리의 수&lt;/li&gt; &#xA; &lt;li&gt;게임이 끝난 경우 재시작/종료를 구분하는 1과 2 중 하나의 수&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;출력&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;입력한 수에 대한 결과를 볼, 스트라이크 개수로 표시&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;1볼 1스트라이크&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;하나도 없는 경우&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;낫싱&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;3개의 숫자를 모두 맞힐 경우&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;3스트라이크&#xA;3개의 숫자를 모두 맞히셨습니다! 게임 종료&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;게임 시작 문구 출력&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;숫자 야구 게임을 시작합니다.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;실행 결과 예시&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;숫자 야구 게임을 시작합니다.&#xA;숫자를 입력해주세요 : 123&#xA;1볼 1스트라이크&#xA;숫자를 입력해주세요 : 145&#xA;1볼&#xA;숫자를 입력해주세요 : 671&#xA;2볼&#xA;숫자를 입력해주세요 : 216&#xA;1스트라이크&#xA;숫자를 입력해주세요 : 713&#xA;3스트라이크&#xA;3개의 숫자를 모두 맞히셨습니다! 게임 종료&#xA;게임을 새로 시작하려면 1, 종료하려면 2를 입력하세요.&#xA;1&#xA;숫자를 입력해주세요 : 123&#xA;1볼&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🎯 프로그래밍 요구 사항&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js 18.17.1 버전에서 실행 가능해야 한다. &lt;strong&gt;Node.js 18.17.1에서 정상적으로 동작하지 않을 경우 0점 처리한다.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;프로그램 실행의 시작점은 &lt;code&gt;App.js&lt;/code&gt;의 &lt;code&gt;play&lt;/code&gt; 메서드이다. 아래와 같이 프로그램을 실행시킬 수 있어야 한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;예시&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const app = new App();&#xA;app.play();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;package.json&lt;/code&gt;을 변경할 수 없고 외부 라이브러리(jQuery, Lodash 등)를 사용하지 않는다. 순수 Vanilla JS로만 구현한다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/woowacourse/woowacourse-docs/tree/main/styleguide/javascript&#34;&gt;JavaScript 코드 컨벤션&lt;/a&gt;을 지키면서 프로그래밍 한다&lt;/li&gt; &#xA; &lt;li&gt;프로그램 종료 시 &lt;code&gt;process.exit()&lt;/code&gt;를 호출하지 않는다.&lt;/li&gt; &#xA; &lt;li&gt;프로그램 구현이 완료되면 &lt;code&gt;ApplicationTest&lt;/code&gt;의 모든 테스트가 성공해야 한다. &lt;strong&gt;테스트가 실패할 경우 0점 처리한다.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;프로그래밍 요구 사항에서 달리 명시하지 않는 한 파일, 패키지 이름을 수정하거나 이동하지 않는다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;라이브러리&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;@woowacourse/mission-utils&lt;/code&gt;의 &lt;code&gt;Random&lt;/code&gt; 및 &lt;code&gt;Console&lt;/code&gt; API를 사용하여 구현해야 한다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Random 값 추출은 &lt;code&gt;Random.pickNumberInRange()&lt;/code&gt;를 활용한다.&lt;/li&gt; &#xA;   &lt;li&gt;사용자의 값을 입력 받고 출력하기 위해서는 &lt;code&gt;Console.readLineAsync&lt;/code&gt;, &lt;code&gt;Console.print&lt;/code&gt;를 활용한다.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;사용 예시&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const computer = [];&#xA;while (computer.length &amp;lt; 3) {&#xA;  const number = MissionUtils.Random.pickNumberInRange(1, 9);&#xA;  if (!computer.includes(number)) {&#xA;    computer.push(number);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;✏️ 과제 진행 요구 사항&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;미션은 &lt;a href=&#34;https://github.com/woowacourse-precourse/javascript-baseball-6/&#34;&gt;javascript-baseball&lt;/a&gt; 저장소를 Fork &amp;amp; Clone해 시작한다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;기능을 구현하기 전 &lt;code&gt;docs/README.md&lt;/code&gt;에 구현할 기능 목록을 정리&lt;/strong&gt;해 추가한다.&lt;/li&gt; &#xA; &lt;li&gt;과제 진행 및 제출 방법은 &lt;a href=&#34;https://github.com/woowacourse/woowacourse-docs/tree/master/precourse&#34;&gt;프리코스 과제 제출&lt;/a&gt; 문서를 참고한다.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Dabble-Studio/3d-to-photo</title>
    <updated>2023-10-22T01:34:52Z</updated>
    <id>tag:github.com,2023-10-22:/Dabble-Studio/3d-to-photo</id>
    <link href="https://github.com/Dabble-Studio/3d-to-photo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;3D to Photo is an open-source package by Dabble, that combines threeJS and Stable diffusion to build a virtual photo studio for product photography. Load a 3D model into the browser and virtual shoot it in any kind of scene you can imagine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;3D to Photo&lt;/h1&gt; &#xA;&lt;p&gt;3D to Photo is an open-source package by Dabble, that combines threeJS and Stable diffusion to build a virtual photo studio for product photography. Load a 3D model into the browser and virtual shoot it in any kind of scene you can imagine. The app currently uses Stable Diffusion 1.5-inpainting, hosted on Replicate.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/iv-iOJDvtvc?si=MwYTDScrixLsLksR&#34;&gt;Demo Video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=iv-iOJDvtvc&#34;&gt;&lt;img src=&#34;https://i.imgur.com/opwbcT9.jpg&#34; alt=&#34;3D Photo to Studio Demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How it Works&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upload a 3D model of any object in .glb format.&lt;/li&gt; &#xA; &lt;li&gt;Adjust the position and orientation of the model on the canvas&lt;/li&gt; &#xA; &lt;li&gt;Describe the scene you want to create in the text box and click generate image&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Use Cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Product Photography: Create product lifestyle photos in any backdrop you can imagine, without a physical photoshoot.&lt;/li&gt; &#xA; &lt;li&gt;Synthetic Data Generation: Generate synthetic images of an item in a variety of scenes. Useful when training object detection models.&lt;/li&gt; &#xA; &lt;li&gt;Previsualize Game Assets: Upload your game assets and generate level art around it to previsualize scenes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://threejs.org&#34;&gt;ThreeJS&lt;/a&gt; to handle loading and viewing 3D models&lt;/li&gt; &#xA; &lt;li&gt;Stable Diffusion 1.5 (inpainting) by &lt;a href=&#34;https://stability.ai/&#34;&gt;stability.ai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://replicate.com/&#34;&gt;Replicate&lt;/a&gt; to run Stable Diffusion&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;NextJS&lt;/a&gt; by Vercel for the front-end&lt;/li&gt; &#xA; &lt;li&gt;Python Flask Server for some backend image processing functions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install and Run&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:Dabble-Studio/3d-to-photo.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install neccessary packages for the front end&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd 3d-to-photo&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install neccessary packages for the python backend&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd image_proc_server&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Run the Flask Server&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;flask run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Set your Replicate API key. In another terminal, navigate to the root folder and create a file called .env. You can use the .env.example file as a template. Paste your Replicate API key in this line REPLICATE_API_TOKEN=YOUR_API_TOKEN, in place of YOUR_API_TOKEN&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the NextJS app&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Use one of the sample 3D models and drag it into the upload area. Enter a prompt in the text box and click &#34;Generate Image&#34;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>