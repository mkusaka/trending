<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-15T01:31:08Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>OpenZeppelin/openzeppelin-contracts-upgradeable</title>
    <updated>2024-06-15T01:31:08Z</updated>
    <id>tag:github.com,2024-06-15:/OpenZeppelin/openzeppelin-contracts-upgradeable</id>
    <link href="https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Upgradeable variant of OpenZeppelin Contracts, meant for use in upgradeable contracts.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/logo.svg?sanitize=true&#34; alt=&#34;OpenZeppelin&#34; height=&#34;40px&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.org/package/@openzeppelin/contracts&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@openzeppelin/contracts.svg?sanitize=true&#34; alt=&#34;NPM Package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts&#34;&gt;&lt;img src=&#34;https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge&#34; alt=&#34;GitPOAPs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.openzeppelin.com/contracts&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-%F0%9F%93%84-yellow&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.openzeppelin.com/contracts&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/forum-%F0%9F%92%AC-yellow&#34; alt=&#34;Forum&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A library for secure smart contract development.&lt;/strong&gt; Build on a solid foundation of community-vetted code.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Implementations of standards like &lt;a href=&#34;https://docs.openzeppelin.com/contracts/erc20&#34;&gt;ERC20&lt;/a&gt; and &lt;a href=&#34;https://docs.openzeppelin.com/contracts/erc721&#34;&gt;ERC721&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Flexible &lt;a href=&#34;https://docs.openzeppelin.com/contracts/access-control&#34;&gt;role-based permissioning&lt;/a&gt; scheme.&lt;/li&gt; &#xA; &lt;li&gt;Reusable &lt;a href=&#34;https://docs.openzeppelin.com/contracts/utilities&#34;&gt;Solidity components&lt;/a&gt; to build custom contracts and complex decentralized systems.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;span&gt;üßô&lt;/span&gt; &lt;strong&gt;Not sure how to get started?&lt;/strong&gt; Check out &lt;a href=&#34;https://wizard.openzeppelin.com/&#34;&gt;Contracts Wizard&lt;/a&gt; ‚Äî an interactive smart contract generator.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üèó&lt;/span&gt; &lt;strong&gt;Want to scale your decentralized application?&lt;/strong&gt; Check out &lt;a href=&#34;https://openzeppelin.com/defender&#34;&gt;OpenZeppelin Defender&lt;/a&gt; ‚Äî a mission-critical developer security platform to code, audit, deploy, monitor, and operate with confidence.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] OpenZeppelin Contracts uses semantic versioning to communicate backwards compatibility of its API and storage layout. For upgradeable contracts, the storage layout of different major versions should be assumed incompatible, for example, it is unsafe to upgrade from 4.9.3 to 5.0.0. Learn more at &lt;a href=&#34;https://docs.openzeppelin.com/contracts/backwards-compatibility&#34;&gt;Backwards Compatibility&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;+&amp;gt; [!NOTE] +&amp;gt; You are looking at the upgradeable variant of OpenZeppelin Contracts. Be sure to review the documentation on &lt;a href=&#34;https://docs.openzeppelin.com/contracts/upgradeable&#34;&gt;Using OpenZeppelin Contracts with Upgrades&lt;/a&gt;. +&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;h4&gt;Hardhat (npm)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm install @openzeppelin/contracts-upgradeable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Foundry (git)&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] When installing via git, it is a common error to use the &lt;code&gt;master&lt;/code&gt; branch. This is a development branch that should be avoided in favor of tagged releases. The release process involves security measures that the &lt;code&gt;master&lt;/code&gt; branch does not guarantee.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Foundry installs the latest version initially, but subsequent &lt;code&gt;forge update&lt;/code&gt; commands will use the &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ forge install OpenZeppelin/openzeppelin-contracts-upgradeable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add &lt;code&gt;@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/&lt;/code&gt; in &lt;code&gt;remappings.txt.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Once installed, you can use the contracts in the library by importing them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-solidity&#34;&gt;pragma solidity ^0.8.20;&#xA;&#xA;import {ERC721Upgradeable} from &#34;@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol&#34;;&#xA;&#xA;contract MyCollectible is ERC721Upgradeable {&#xA;    function initialize() initializer public {&#xA;        __ERC721_init(&#34;MyCollectible&#34;, &#34;MCO&#34;);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;If you&#39;re new to smart contract development, head to &lt;a href=&#34;https://docs.openzeppelin.com/learn/developing-smart-contracts&#34;&gt;Developing Smart Contracts&lt;/a&gt; to learn about creating a new project and compiling your contracts.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;To keep your system secure, you should &lt;strong&gt;always&lt;/strong&gt; use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don&#39;t need to worry about it needlessly increasing gas costs.&lt;/p&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;p&gt;The guides in the &lt;a href=&#34;https://docs.openzeppelin.com/contracts&#34;&gt;documentation site&lt;/a&gt; will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.openzeppelin.com/contracts/access-control&#34;&gt;Access Control&lt;/a&gt;: decide who can perform each of the actions on your system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.openzeppelin.com/contracts/tokens&#34;&gt;Tokens&lt;/a&gt;: create tradeable assets or collectives, and distribute them via &lt;a href=&#34;https://docs.openzeppelin.com/contracts/crowdsales&#34;&gt;Crowdsales&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.openzeppelin.com/contracts/utilities&#34;&gt;Utilities&lt;/a&gt;: generic useful tools including non-overflowing math, signature verification, and trustless paying systems.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.openzeppelin.com/contracts/api/token/ERC20&#34;&gt;full API&lt;/a&gt; is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts&#39;s development in the &lt;a href=&#34;https://forum.openzeppelin.com&#34;&gt;community forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Finally, you may want to take a look at the &lt;a href=&#34;https://blog.openzeppelin.com/&#34;&gt;guides on our blog&lt;/a&gt;, which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05&#34;&gt;The Hitchhiker‚Äôs Guide to Smart Contracts in Ethereum&lt;/a&gt; will help you get an overview of the various tools available for smart contract development, and help you set up your environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094&#34;&gt;A Gentle Introduction to Ethereum Programming, Part 1&lt;/a&gt; provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.&lt;/li&gt; &#xA; &lt;li&gt;For a more in-depth dive, you may read the guide &lt;a href=&#34;https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317&#34;&gt;Designing the Architecture for Your Ethereum Application&lt;/a&gt;, which discusses how to better structure your application and its relationship to the real world.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;This project is maintained by &lt;a href=&#34;https://openzeppelin.com&#34;&gt;OpenZeppelin&lt;/a&gt; with the goal of providing a secure and reliable library of smart contract components for the ecosystem. We address security through risk management in various areas such as engineering and open source best practices, scoping and API design, multi-layered review processes, and incident response preparedness.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://contracts.openzeppelin.com/security&#34;&gt;OpenZeppelin Contracts Security Center&lt;/a&gt; contains more details about the secure development process.&lt;/p&gt; &#xA;&lt;p&gt;The security policy is detailed in &lt;a href=&#34;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/SECURITY.md&#34;&gt;&lt;code&gt;SECURITY.md&lt;/code&gt;&lt;/a&gt; as well, and specifies how you can report security vulnerabilities, which versions will receive security patches, and how to stay informed about them. We run a &lt;a href=&#34;https://immunefi.com/bounty/openzeppelin&#34;&gt;bug bounty program on Immunefi&lt;/a&gt; to reward the responsible disclosure of vulnerabilities.&lt;/p&gt; &#xA;&lt;p&gt;The engineering guidelines we follow to promote project quality can be found in &lt;a href=&#34;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/GUIDELINES.md&#34;&gt;&lt;code&gt;GUIDELINES.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Past audits can be found in &lt;a href=&#34;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/audits&#34;&gt;&lt;code&gt;audits/&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Smart contracts are a nascent technology and carry a high level of technical risk and uncertainty. Although OpenZeppelin is well known for its security audits, using OpenZeppelin Contracts is not a substitute for a security audit.&lt;/p&gt; &#xA;&lt;p&gt;OpenZeppelin Contracts is made available under the MIT License, which disclaims all warranties in relation to the project and which limits the liability of those that contribute and maintain the project, including OpenZeppelin. As set out further in the Terms, you acknowledge that you are solely responsible for any use of OpenZeppelin Contracts and you assume all risks associated with any such use.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;OpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the &lt;a href=&#34;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;OpenZeppelin Contracts is released under the &lt;a href=&#34;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Legal&lt;/h2&gt; &#xA;&lt;p&gt;Your use of this Project is governed by the terms found at &lt;a href=&#34;http://www.openzeppelin.com/tos&#34;&gt;www.openzeppelin.com/tos&lt;/a&gt; (the &#34;Terms&#34;).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>software-mansion/react-native-reanimated</title>
    <updated>2024-06-15T01:31:08Z</updated>
    <id>tag:github.com,2024-06-15:/software-mansion/react-native-reanimated</id>
    <link href="https://github.com/software-mansion/react-native-reanimated" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React Native&#39;s Animated library reimplemented&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16062886/117443145-ff868480-af37-11eb-8680-648bccf0d0ce.png&#34; alt=&#34;React Native Reanimated by Software Mansion&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;React Native&#39;s Animated library reimplemented&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Reanimated 3 is here! Check out our &lt;a href=&#34;https://docs.swmansion.com/react-native-reanimated/&#34;&gt;documentation page&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;React Native Reanimated provides a more comprehensive, low level abstraction for the Animated library API to be built on top of and hence allow for much greater flexibility especially when it comes to gesture based interactions.&lt;/p&gt; &#xA;&lt;h3&gt;Nightly CI state&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/build-nightly-npm-package.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/build-nightly-npm-package.yml/badge.svg?sanitize=true&#34; alt=&#34;Build nightly npm package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/build-monorepo-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/build-monorepo-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Run nightly monorepo test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/check-static-framework-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/check-static-framework-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Check static framework nightly build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/check-react-native-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/check-react-native-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Check React Native nightly build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/check-expo-dev-client-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/check-expo-dev-client-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Check Expo dev-client nightly build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/check-TS-react-native.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/check-TS-react-native.yml/badge.svg?sanitize=true&#34; alt=&#34;Check TypeScript nightly build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/build-v8-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/build-v8-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Test V8 on Android nightly&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/build-on-windows-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/build-on-windows-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Test build on Windows nightly&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/detect-broken-urls-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/software-mansion/react-native-reanimated/actions/workflows/detect-broken-urls-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Validate urls in source code&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/getting-started/#installation&#34;&gt;installation&lt;/a&gt; section of our docs for the detailed installation instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Fabric&lt;/h2&gt; &#xA;&lt;p&gt;&#39;react-native-reanimated&#39; works with Fabric (the New Architecture). Instructions on how to run Fabric Example within this repo can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/software-mansion/react-native-reanimated/main/apps/fabric-example/README.md&#34;&gt;FabricExample README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check out our dedicated documentation page for info about this library, API reference and more: &lt;a href=&#34;https://docs.swmansion.com/react-native-reanimated/&#34;&gt;https://docs.swmansion.com/react-native-reanimated/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;The source code for the example (showcase) app is under the &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/raw/main/apps/common-app/&#34;&gt;&lt;code&gt;apps/common-app&lt;/code&gt;&lt;/a&gt; directory. If you want to play with the API but don&#39;t feel like trying it on a real app, you can run the example project. Check &lt;a href=&#34;https://raw.githubusercontent.com/software-mansion/react-native-reanimated/main/apps/paper-example/README.md&#34;&gt;Example README&lt;/a&gt; for installation instructions.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Reanimated library is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/software-mansion/react-native-reanimated/main/LICENSE&#34;&gt;The MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This project has been built and is maintained thanks to the support from &lt;a href=&#34;https://shopify.com&#34;&gt;Shopify&lt;/a&gt;, &lt;a href=&#34;https://expo.io&#34;&gt;Expo.io&lt;/a&gt; and &lt;a href=&#34;https://swmansion.com&#34;&gt;Software Mansion&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://shopify.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/8085?v=3&amp;amp;s=100&#34; alt=&#34;shopify&#34; title=&#34;Shopify.com&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://expo.io&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/12504344?v=3&amp;amp;s=100&#34; alt=&#34;expo&#34; title=&#34;Expo.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swmansion.com&#34;&gt;&lt;img src=&#34;https://logo.swmansion.com/logo?color=white&amp;amp;variant=desktop&amp;amp;width=150&amp;amp;tag=react-native-reanimated-github&#34; alt=&#34;swm&#34; title=&#34;Software Mansion&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community Discord&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.swmansion.com&#34;&gt;Join the Software Mansion Community Discord&lt;/a&gt; to chat about Reanimated or other Software Mansion libraries.&lt;/p&gt; &#xA;&lt;h2&gt;Reanimated is created by Software Mansion&lt;/h2&gt; &#xA;&lt;p&gt;Since 2012 &lt;a href=&#34;https://swmansion.com&#34;&gt;Software Mansion&lt;/a&gt; is a software agency with experience in building web and mobile apps. We are Core React Native Contributors and experts in dealing with all kinds of React Native issues. We can help you build your next dream product ‚Äì &lt;a href=&#34;https://swmansion.com/contact/projects?utm_source=reanimated&amp;amp;utm_medium=readme&#34;&gt;Hire us&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hotwired/turbo-rails</title>
    <updated>2024-06-15T01:31:08Z</updated>
    <id>tag:github.com,2024-06-15:/hotwired/turbo-rails</id>
    <link href="https://github.com/hotwired/turbo-rails" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use Turbo in your Ruby on Rails app&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hotwired/turbo-rails/main/assets/logo.png?sanitize=true&#34; width=&#34;24&#34; height=&#34;24&#34; alt=&#34;Turbo&#34;&gt; Turbo&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://turbo.hotwired.dev&#34;&gt;Turbo&lt;/a&gt; gives you the speed of a single-page web application without having to write any JavaScript. Turbo accelerates links and form submissions without requiring you to change your server-side generated HTML. It lets you carve up a page into independent frames, which can be lazy-loaded and operate as independent components. And finally, helps you make partial page updates using just HTML and a set of CRUD-like container tags. These three techniques reduce the amount of custom JavaScript that many web applications need to write by an order of magnitude. And for the few dynamic bits that are left, you&#39;re invited to finish the job with &lt;a href=&#34;https://github.com/hotwired/stimulus&#34;&gt;Stimulus&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On top of accelerating web applications, Turbo was built from the ground-up to form the foundation of hybrid native applications. Write the navigational shell of your &lt;a href=&#34;https://github.com/hotwired/turbo-android&#34;&gt;Android&lt;/a&gt; or &lt;a href=&#34;https://github.com/hotwired/turbo-ios&#34;&gt;iOS&lt;/a&gt; app using the standard platform tooling, then seamlessly fill in features from the web, following native navigation patterns. Not every mobile screen needs to be written in Swift or Kotlin to feel native. With Turbo, you spend less time wrangling JSON, waiting on app stores to approve updates, or reimplementing features you&#39;ve already created in HTML.&lt;/p&gt; &#xA;&lt;p&gt;Turbo is a language-agnostic framework written in JavaScript, but this gem builds on top of those basics to make the integration with Rails as smooth as possible. You can deliver turbo updates via model callbacks over Action Cable, respond to controller actions with native navigation or standard redirects, and render turbo frames with helpers and layout-free responses.&lt;/p&gt; &#xA;&lt;h2&gt;Navigate with Turbo Drive&lt;/h2&gt; &#xA;&lt;p&gt;Turbo is a continuation of the ideas from the previous &lt;a href=&#34;https://github.com/turbolinks/turbolinks&#34;&gt;Turbolinks&lt;/a&gt; framework, and the heart of that past approach lives on as Turbo Drive. When installed, Turbo automatically intercepts all clicks on &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; links to the same domain. When you click an eligible link, Turbo prevents the browser from following it. Instead, Turbo changes the browser‚Äôs URL using the History API, requests the new page using &lt;code&gt;fetch&lt;/code&gt;, and then renders the HTML response.&lt;/p&gt; &#xA;&lt;p&gt;During rendering, Turbo replaces the current &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element outright and merges the contents of the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; element. The JavaScript window and document objects, and the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element, persist from one rendering to the next.&lt;/p&gt; &#xA;&lt;p&gt;Whereas Turbolinks previously just dealt with links, Turbo can now also process form submissions and responses. This means the entire flow in the web application is wrapped into Turbo, making all the parts fast. No more need for &lt;code&gt;data-remote=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Turbo Drive can be disabled on a per-element basis by annotating the element or any of its ancestors with &lt;code&gt;data-turbo=&#34;false&#34;&lt;/code&gt;. If you want Turbo Drive to be disabled by default, then you can adjust your import like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#34;@hotwired/turbo-rails&#34;&#xA;Turbo.session.drive = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can use &lt;code&gt;data-turbo=&#34;true&#34;&lt;/code&gt; to enable Drive on a per-element basis.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://turbo.hotwired.dev/handbook/drive&#34;&gt;See documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Decompose with Turbo Frames&lt;/h2&gt; &#xA;&lt;p&gt;Turbo reinvents the old HTML technique of frames without any of the drawbacks that lead to developers abandoning it. With Turbo Frames, &lt;strong&gt;you can treat a subset of the page as its own component&lt;/strong&gt;, where links and form submissions &lt;strong&gt;replace only that part&lt;/strong&gt;. This removes an entire class of problems around partial interactivity that before would have required custom JavaScript.&lt;/p&gt; &#xA;&lt;p&gt;It also makes it dead easy to carve a single page into smaller pieces that can all live on their own cache timeline. While the bulk of the page might easily be cached between users, a small personalized toolbar perhaps cannot. With Turbo::Frames, you can designate the toolbar as a frame, which will be &lt;strong&gt;lazy-loaded automatically&lt;/strong&gt; by the publicly-cached root page. This means simpler pages, easier caching schemes with fewer dependent keys, and all without needing to write a lick of custom JavaScript.&lt;/p&gt; &#xA;&lt;p&gt;This gem provides a &lt;code&gt;turbo_frame_tag&lt;/code&gt; helper to create those frames.&lt;/p&gt; &#xA;&lt;p&gt;For instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%# app/views/todos/show.html.erb %&amp;gt;&#xA;&amp;lt;%= turbo_frame_tag @todo do %&amp;gt;&#xA;  &amp;lt;p&amp;gt;&amp;lt;%= @todo.description %&amp;gt;&amp;lt;/p&amp;gt;&#xA;&#xA;  &amp;lt;%= link_to &#39;Edit this todo&#39;, edit_todo_path(@todo) %&amp;gt;&#xA;&amp;lt;% end %&amp;gt;&#xA;&#xA;&amp;lt;%# app/views/todos/edit.html.erb %&amp;gt;&#xA;&amp;lt;%= turbo_frame_tag @todo do %&amp;gt;&#xA;  &amp;lt;%= render &#34;form&#34; %&amp;gt;&#xA;&#xA;  &amp;lt;%= link_to &#39;Cancel&#39;, todo_path(@todo) %&amp;gt;&#xA;&amp;lt;% end %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When the user clicks on the &lt;code&gt;Edit this todo&lt;/code&gt; link, as a direct response to this user interaction, the turbo frame will be automatically replaced with the one in the &lt;code&gt;edit.html.erb&lt;/code&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://turbo.hotwired.dev/handbook/frames&#34;&gt;See documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;A note on custom layouts&lt;/h3&gt; &#xA;&lt;p&gt;In order to render turbo frame requests without the application layout, Turbo registers a custom &lt;a href=&#34;https://api.rubyonrails.org/classes/ActionView/Layouts/ClassMethods.html#method-i-layout&#34;&gt;layout method&lt;/a&gt;. If your application uses custom layout resolution, you have to make sure to return &lt;code&gt;&#34;turbo_rails/frame&#34;&lt;/code&gt; (or &lt;code&gt;false&lt;/code&gt; for TurboRails &amp;lt; 1.4.0) for turbo frame requests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;layout :custom_layout&#xA;&#xA;def custom_layout&#xA;  return &#34;turbo_rails/frame&#34; if turbo_frame_request?&#xA;  &#xA;  # ... your custom layout logic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using a custom, but &#34;static&#34; layout,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;layout &#34;some_static_layout&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;you &lt;strong&gt;have&lt;/strong&gt; to change it to a layout method in order to conditionally return &lt;code&gt;false&lt;/code&gt; for turbo frame requests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;layout :custom_layout&#xA;&#xA;def custom_layout&#xA;  return &#34;turbo_rails/frame&#34; if turbo_frame_request?&#xA;  &#xA;  &#34;some_static_layout&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Come Alive with Turbo Streams&lt;/h2&gt; &#xA;&lt;p&gt;Partial page updates that are &lt;strong&gt;delivered asynchronously over a web socket connection&lt;/strong&gt; is the hallmark of modern, reactive web applications. With Turbo Streams, you can get all of that modern goodness using the existing server-side HTML you&#39;re already rendering to deliver the first page load. With a set of simple CRUD container tags, you can send HTML fragments over the web socket (or in response to direct interactions), and see the page change in response to new data. Again, &lt;strong&gt;no need to construct an entirely separate API&lt;/strong&gt;, &lt;strong&gt;no need to wrangle JSON&lt;/strong&gt;, &lt;strong&gt;no need to reimplement the HTML construction in JavaScript&lt;/strong&gt;. Take the HTML you&#39;re already making, wrap it in an update tag, and, voila, your page comes alive.&lt;/p&gt; &#xA;&lt;p&gt;With this Rails integration, you can create these asynchronous updates directly in response to your model changes. Turbo uses Active Jobs to provide asynchronous partial rendering and Action Cable to deliver those updates to subscribers.&lt;/p&gt; &#xA;&lt;p&gt;This gem provides a &lt;code&gt;turbo_stream_from&lt;/code&gt; helper to create a turbo stream.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%# app/views/todos/show.html.erb %&amp;gt;&#xA;&amp;lt;%= turbo_stream_from dom_id(@todo) %&amp;gt;&#xA;&#xA;&amp;lt;%# Rest of show here %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://turbo.hotwired.dev/handbook/streams&#34;&gt;See documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This gem is automatically configured for applications made with Rails 7+ (unless --skip-hotwire is passed to the generator). But if you&#39;re on Rails 6, you can install it manually:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add the &lt;code&gt;turbo-rails&lt;/code&gt; gem to your Gemfile: &lt;code&gt;gem &#39;turbo-rails&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./bin/bundle install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./bin/rails turbo:install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./bin/rails turbo:install:redis&lt;/code&gt; to change the development Action Cable adapter from Async (the default one) to Redis. The Async adapter does not support Turbo Stream broadcasting.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Running &lt;code&gt;turbo:install&lt;/code&gt; will install through NPM if Node.js is used in the application. Otherwise the asset pipeline version is used. To use the asset pipeline version, you must have &lt;code&gt;importmap-rails&lt;/code&gt; installed first and listed higher in the Gemfile.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using node and need to use the cable consumer, you can import &lt;a href=&#34;https://github.com/hotwired/turbo-rails/raw/main/app/javascript/turbo/cable.js&#34;&gt;&lt;code&gt;cable&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;import { cable } from &#34;@hotwired/turbo-rails&#34;&lt;/code&gt;), but ensure that your application actually &lt;em&gt;uses&lt;/em&gt; the members it &lt;code&gt;import&lt;/code&gt;s when using this style (see &lt;a href=&#34;https://github.com/hotwired/turbo-rails/issues/48&#34;&gt;turbo-rails#48&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;Turbo&lt;/code&gt; instance is automatically assigned to &lt;code&gt;window.Turbo&lt;/code&gt; upon import:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#34;@hotwired/turbo-rails&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can watch &lt;a href=&#34;https://hotwired.dev/#screencast&#34;&gt;the video introduction to Hotwire&lt;/a&gt;, which focuses extensively on demonstrating Turbo in a Rails demo. Then you should familiarize yourself with &lt;a href=&#34;https://turbo.hotwired.dev/handbook/introduction&#34;&gt;Turbo handbook&lt;/a&gt; to understand Drive, Frames, and Streams in-depth. Finally, dive into the code documentation by starting with &lt;a href=&#34;https://github.com/hotwired/turbo-rails/raw/main/app/helpers/turbo/frames_helper.rb&#34;&gt;&lt;code&gt;Turbo::FramesHelper&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/hotwired/turbo-rails/raw/main/app/helpers/turbo/streams_helper.rb&#34;&gt;&lt;code&gt;Turbo::StreamsHelper&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/hotwired/turbo-rails/raw/main/app/models/turbo/streams/tag_builder.rb&#34;&gt;&lt;code&gt;Turbo::Streams::TagBuilder&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://github.com/hotwired/turbo-rails/raw/main/app/models/concerns/turbo/broadcastable.rb&#34;&gt;&lt;code&gt;Turbo::Broadcastable&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;RubyDoc Documentation&lt;/h3&gt; &#xA;&lt;p&gt;For the API documentation covering this gem&#39;s classes and packages, &lt;a href=&#34;https://rubydoc.info/github/hotwired/turbo-rails/main&#34;&gt;visit the RubyDoc page&lt;/a&gt;. Note that this documentation is updated automatically from the main branch, so it may contain features that are not released yet.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubydoc.info/github/hotwired/turbo-rails/main/Turbo/DriveHelper&#34;&gt;Turbo Drive Helpers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubydoc.info/github/hotwired/turbo-rails/main/Turbo/FramesHelper&#34;&gt;Turbo Frames Helpers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubydoc.info/github/hotwired/turbo-rails/main/Turbo/StreamsHelper&#34;&gt;Turbo Streams View Helpers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubydoc.info/github/hotwired/turbo-rails/main/Turbo/Broadcastable&#34;&gt;Turbo Streams Broadcast Methods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubydoc.info/github/hotwired/turbo-rails/main/Turbo/StreamsChannel&#34;&gt;Turbo Streams Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubydoc.info/github/hotwired/turbo-rails/main/Turbo/Native/Navigation&#34;&gt;Turbo Native Navigation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubydoc.info/github/hotwired/turbo-rails/main/Turbo/TestAssertions&#34;&gt;Turbo Test Assertions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubydoc.info/github/hotwired/turbo-rails/main/Turbo/TestAssertions/IntegrationTestAssertions&#34;&gt;Turbo Integration Test Assertions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubydoc.info/github/hotwired/turbo-rails/main/Turbo/Broadcastable/TestHelper&#34;&gt;Turbo Broadcastable Test Helper&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compatibility with Rails UJS&lt;/h2&gt; &#xA;&lt;p&gt;Turbo can coexist with Rails UJS, but you need to take a series of upgrade steps to make it happen. See &lt;a href=&#34;https://github.com/hotwired/turbo-rails/raw/main/UPGRADING.md&#34;&gt;the upgrading guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/hotwired/turbo-rails/main/lib/turbo/test_assertions.rb&#34;&gt;&lt;code&gt;Turbo::TestAssertions&lt;/code&gt;&lt;/a&gt; concern provides Turbo Stream test helpers that assert the presence or absence ofs s &lt;code&gt;&amp;lt;turbo-stream&amp;gt;&lt;/code&gt; elements in a rendered fragment of HTML. &lt;code&gt;Turbo::TestAssertions&lt;/code&gt; are automatically included in &lt;a href=&#34;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TestCase.html&#34;&gt;&lt;code&gt;ActiveSupport::TestCase&lt;/code&gt;&lt;/a&gt; and depend on the presence of &lt;a href=&#34;https://github.com/rails/rails-dom-testing/&#34;&gt;&lt;code&gt;rails-dom-testing&lt;/code&gt;&lt;/a&gt; assertions.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/hotwired/turbo-rails/main/lib/turbo/test_assertions/integration_test_assertions.rb&#34;&gt;&lt;code&gt;Turbo::TestAssertions::IntegrationTestAssertions&lt;/code&gt;&lt;/a&gt; are built on top of &lt;code&gt;Turbo::TestAssertions&lt;/code&gt;, and add support for passing a &lt;code&gt;status:&lt;/code&gt; keyword. They are automatically included in &lt;a href=&#34;https://edgeguides.rubyonrails.org/testing.html#integration-testing&#34;&gt;&lt;code&gt;ActionDispatch::IntegrationTest&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/hotwired/turbo-rails/main/lib/turbo/broadcastable/test_helper.rb&#34;&gt;&lt;code&gt;Turbo::Broadcastable::TestHelper&lt;/code&gt;&lt;/a&gt; concern provides Action Cable-aware test helpers that assert that &lt;code&gt;&amp;lt;turbo-stream&amp;gt;&lt;/code&gt; elements were or were not broadcast over Action Cable. &lt;code&gt;Turbo::Broadcastable::TestHelper&lt;/code&gt; is automatically included in &lt;a href=&#34;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TestCase.html&#34;&gt;&lt;code&gt;ActiveSupport::TestCase&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Run the tests with &lt;code&gt;./bin/test&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Turbo is released under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>