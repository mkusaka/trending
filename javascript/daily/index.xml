<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-09T01:36:57Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bradtraversy/next-13-crash-course</title>
    <updated>2023-04-09T01:36:57Z</updated>
    <id>tag:github.com,2023-04-09:/bradtraversy/next-13-crash-course</id>
    <link href="https://github.com/bradtraversy/next-13-crash-course" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Next.js 13 Crash Course Project&lt;/h1&gt; &#xA;&lt;p&gt;This is a project from my &lt;a href=&#34;https://youtu.be/Y6KDk5iyrYE&#34;&gt;Next.js 13 Crash Course&lt;/a&gt;. It uses the newer features such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;App directory&lt;/li&gt; &#xA; &lt;li&gt;New routing system&lt;/li&gt; &#xA; &lt;li&gt;Next Fonts&lt;/li&gt; &#xA; &lt;li&gt;React Server Components&lt;/li&gt; &#xA; &lt;li&gt;Data Fetching&lt;/li&gt; &#xA; &lt;li&gt;Layouts&lt;/li&gt; &#xA; &lt;li&gt;Metadata API&lt;/li&gt; &#xA; &lt;li&gt;API Route Handlers&lt;/li&gt; &#xA; &lt;li&gt;loading.js Page&lt;/li&gt; &#xA; &lt;li&gt;and more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/bradtraversy/next-13-crash-course/main/public/screen.png&#34; width=&#34;500&#34;&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Install dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;# or&#xA;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the development server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;# or&#xA;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt; &#xA;&lt;p&gt;Build the project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build&#xA;# or&#xA;yarn build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run production build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run start&#xA;# or&#xA;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>zachgoll/tic-tac-toe-subscriber-refactor</title>
    <updated>2023-04-09T01:36:57Z</updated>
    <id>tag:github.com,2023-04-09:/zachgoll/tic-tac-toe-subscriber-refactor</id>
    <link href="https://github.com/zachgoll/tic-tac-toe-subscriber-refactor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A refactor of a YouTube subscriber&#39;s Tic Tac Toe JS game!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tic Tac Toe Subscriber Refactor&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Did you know??&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a YouTube video I made about this repository. &lt;a href=&#34;&#34;&gt;You should watch it.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;There are two examples in this repository that show how the &lt;code&gt;/original&lt;/code&gt; project could be refactored using different libraries and patterns. I suggest reading through them in the following order.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Vanilla Refactor - this is the &lt;em&gt;closest&lt;/em&gt; representation of the original project and I highly recommend starting here since the remaining examples build off of the patterns here. You can also view the &lt;code&gt;typescript&lt;/code&gt; Git branch to see how this would look written in TS rather than JS.&lt;/li&gt; &#xA; &lt;li&gt;React Refactor - this shows a React implementation of the project, which is a much more &lt;em&gt;declarative&lt;/em&gt; approach than the vanilla implementations, which are mostly &lt;em&gt;imperative&lt;/em&gt;. See my post on &lt;a href=&#34;https://www.zachgollwitzer.com/posts/imperative-programming&#34;&gt;declarative vs. imperative programming&lt;/a&gt;. This also has a TypeScript implementation on the &lt;code&gt;typescript&lt;/code&gt; branch.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Attribution&lt;/h2&gt; &#xA;&lt;p&gt;All the code in the &lt;code&gt;/original&lt;/code&gt; directory is from &lt;a href=&#34;https://github.com/ivan00stojanovic/TickyToey&#34;&gt;this repository&lt;/a&gt; and was created by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/Ivan00sto&#34;&gt;@Ivan00Sto&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/megfdev&#34;&gt;@megfdev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks for your submission!!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hkirat/full-stack-assignment</title>
    <updated>2023-04-09T01:36:57Z</updated>
    <id>tag:github.com,2023-04-09:/hkirat/full-stack-assignment</id>
    <link href="https://github.com/hkirat/full-stack-assignment" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>