<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-13T01:38:35Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DataDog/dd-trace-js</title>
    <updated>2023-01-13T01:38:35Z</updated>
    <id>tag:github.com,2023-01-13:/DataDog/dd-trace-js</id>
    <link href="https://github.com/DataDog/dd-trace-js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JavaScript APM Tracer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;dd-trace&lt;/code&gt;: Node.js APM Tracer Library&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/dd-trace&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/dd-trace/latest?color=blue&amp;amp;label=dd-trace%40v3&amp;amp;logo=npm&#34; alt=&#34;npm v3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/dd-trace/v/latest-node12&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/dd-trace/latest-node12?color=blue&amp;amp;label=dd-trace%40v2&amp;amp;logo=npm&#34; alt=&#34;npm v2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/dd-trace/v/dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/dd-trace/dev?color=orange&amp;amp;label=dd-trace%40dev&amp;amp;logo=npm&#34; alt=&#34;npm dev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/DataDog/dd-trace-js&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/DataDog/dd-trace-js/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://user-images.githubusercontent.com/551402/208212084-1d0c07e2-4135-4c61-b2da-8f2fddbc66ed.png&#34; alt=&#34;Bits the dog  JavaScript&#34; width=&#34;200px&#34;&gt; &#xA;&lt;p&gt;&lt;code&gt;dd-trace&lt;/code&gt; is an npm package that you can install in your Node.js application to capture APM (Application Performance Monitoring) data. In Datadog terminology this library is called a Tracer. This data is then sent off to a process which collects and aggregates the data, called an Agent. Finally the data is sent off to the Datadog servers where it&#39;s stored and made available for querying in a myriad of ways, such as displaying in a dashboard or triggering alerts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DataDog/dd-trace-js/master/docs/relationship.png&#34; alt=&#34;Tracer, Agent, Datadog relationship diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Most of the documentation for &lt;code&gt;dd-trace&lt;/code&gt; is available on these webpages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.datadoghq.com/tracing/languages/nodejs/&#34;&gt;Tracing Node.js Applications&lt;/a&gt; - most project documentation, including setup instructions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.datadoghq.com/tracing/trace_collection/library_config/nodejs&#34;&gt;Configuring the NodeJS Tracing Library&lt;/a&gt; - environment variables and config options&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://datadog.github.io/dd-trace-js&#34;&gt;API Documentation&lt;/a&gt; - method signatures, plugin list, and some usage examples&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.datadoghq.com/tracing/visualization/&#34;&gt;APM Terms and Concepts&lt;/a&gt; - a glossary of concepts applicable across all languages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Version Release Lines and Maintenance&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Release Line&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Latest Version&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Initial Release&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;End of Life&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/DataDog/dd-trace-js/tree/v1.x&#34;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/dd-trace/legacy-v1?color=white&amp;amp;label=%20&amp;amp;style=flat-square&#34; alt=&#34;npm v1&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;End of Life&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2021-07-13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2022-02-25&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/DataDog/dd-trace-js/tree/v2.x&#34;&gt;&lt;code&gt;v2&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/dd-trace/latest-node12?color=white&amp;amp;label=%20&amp;amp;style=flat-square&#34; alt=&#34;npm v2&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Maintenance&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2022-01-28&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2023-08-15&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/DataDog/dd-trace-js/tree/v3.x&#34;&gt;&lt;code&gt;v3&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/dd-trace/latest?color=white&amp;amp;label=%20&amp;amp;style=flat-square&#34; alt=&#34;npm v3&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Current&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2022-08-15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Unknown&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;We currently maintain two release lines, namely &lt;code&gt;v2&lt;/code&gt; and &lt;code&gt;v3&lt;/code&gt;. Features and bug fixes that are merged are released to the &lt;code&gt;v3&lt;/code&gt; line and, if appropriate, also the &lt;code&gt;v2&lt;/code&gt; line.&lt;/p&gt; &#xA;&lt;p&gt;For any new projects it is recommended to use the &lt;code&gt;v3&lt;/code&gt; release line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm install dd-trace&#xA;$ yarn add dd-trace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, existing projects that already use the &lt;code&gt;v2&lt;/code&gt; release line, or projects that need to support Node.js v12, may use the &lt;code&gt;v2&lt;/code&gt; release line. This is done by specifying the version when installing the package. Note that we also publish to npm using a &lt;code&gt;latest-node12&lt;/code&gt; tag that can also be used for install:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm install dd-trace@2&#xA;$ yarn add dd-trace@2&#xA;$ npm install dd-trace@latest-node12&#xA;$ yarn add dd-trace@latest-node12&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Any backwards-breaking functionality that is introduced into the library will result in an increase of the major version of the library and therefore a new release line. Such releases are kept to a minimum to reduce the pain of upgrading the library.&lt;/p&gt; &#xA;&lt;p&gt;When a new release line is introduced the previous release line then enters maintenance mode where it will receive updates for the next year. Once that year is up the release line enters End of Life and will not receive new updates. The library also follows the Node.js LTS lifecycle wherein new release lines drop compatibility with Node.js versions that reach end of life (with the maintenance release line still receiving updates for a year).&lt;/p&gt; &#xA;&lt;p&gt;For more information about library versioning and compatibility, see the &lt;a href=&#34;https://docs.datadoghq.com/tracing/trace_collection/compatibility/nodejs/#releases&#34;&gt;NodeJS Compatibility Requirements&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;Changes associated with each individual release are documented on the &lt;a href=&#34;https://github.com/DataDog/dd-trace-js/releases&#34;&gt;GitHub Releases&lt;/a&gt; screen.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Before contributing to this open source project, read our &lt;a href=&#34;https://github.com/DataDog/dd-trace-js/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Since this project supports multiple Node versions, using a version manager such as &lt;a href=&#34;https://github.com/creationix/nvm&#34;&gt;nvm&lt;/a&gt; is recommended.&lt;/p&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://yarnpkg.com/&#34;&gt;yarn&lt;/a&gt; for its workspace functionality, so make sure to install that as well.&lt;/p&gt; &#xA;&lt;p&gt;To install dependencies once you have Node and yarn installed, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Before running &lt;em&gt;plugin&lt;/em&gt; tests, the data stores need to be running. The easiest way to start all of them is to use the provided docker-compose configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker-compose up -d -V --remove-orphans --force-recreate&#xA;$ yarn services&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Unit Tests&lt;/h3&gt; &#xA;&lt;p&gt;There are several types of unit tests, for various types of components. The following commands may be useful:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Tracer core tests (i.e. testing `packages/dd-trace`)&#xA;$ yarn test:trace:core&#xA;# &#34;Core&#34; library tests (i.e. testing `packages/datadog-core`&#xA;$ yarn test:core&#xA;# Instrumentations tests (i.e. testing `packages/datadog-instrumentations`&#xA;$ yarn test:instrumentations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Several other components have test commands as well. See &lt;code&gt;package.json&lt;/code&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;To test &lt;em&gt;plugins&lt;/em&gt; (i.e. components in &lt;code&gt;packages/datadog-plugin-XXXX&lt;/code&gt; directories, set the &lt;code&gt;PLUGINS&lt;/code&gt; environment variable to the plugin you&#39;re interested in, and use &lt;code&gt;yarn test:plugins&lt;/code&gt;. If you need to test multiple plugins you may separate then with a pipe (&lt;code&gt;|&lt;/code&gt;) delimiter. Here&#39;s an example testing the &lt;code&gt;express&lt;/code&gt; and &lt;code&gt;bluebird&lt;/code&gt; plugins:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;PLUGINS=&#34;express|bluebird&#34; yarn test:plugins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Memory Leaks&lt;/h3&gt; &#xA;&lt;p&gt;To run the memory leak tests, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ yarn leak:core&#xA;&#xA;# or&#xA;&#xA;$ yarn leak:plugins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linting&lt;/h3&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://eslint.org&#34;&gt;ESLint&lt;/a&gt; to make sure that new code is conform to our coding standards.&lt;/p&gt; &#xA;&lt;p&gt;To run the linter, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ yarn lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Benchmarks&lt;/h3&gt; &#xA;&lt;p&gt;Our microbenchmarks live in &lt;code&gt;benchmark/sirun&lt;/code&gt;. Each directory in there corresponds to a specific benchmark test and its variants, which are used to track regressions and improvements over time.&lt;/p&gt; &#xA;&lt;p&gt;In addition to those, when two or more approaches must be compared, please write a benchmark in the &lt;code&gt;benchmark/index.js&lt;/code&gt; module so that we can keep track of the most efficient algorithm. To run your benchmark, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ yarn bench&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Serverless / Lambda&lt;/h2&gt; &#xA;&lt;p&gt;Note that there is a separate Lambda project, &lt;a href=&#34;https://github.com/DataDog/datadog-lambda-js&#34;&gt;datadog-lambda-js&lt;/a&gt;, that is responsible for enabling metrics and distributed tracing when your application runs on Lambda. That project does depend on the &lt;code&gt;dd-trace&lt;/code&gt; package but also adds a lot of Lambda-related niceties. If you find any issues specific to Lambda integrations then the issues may get solved quicker if they&#39;re added to that repository. That said, even if your application runs on Lambda, any core instrumentation issues not related to Lambda itself may be better served by opening an issue in this repository. Regardless of where you open the issue, someone at Datadog will try to help.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;If you have found a security issue, please contact the security team directly at &lt;a href=&#34;mailto:security@datadoghq.com&#34;&gt;security@datadoghq.com&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>open-duelyst/duelyst</title>
    <updated>2023-01-13T01:38:35Z</updated>
    <id>tag:github.com,2023-01-13:/open-duelyst/duelyst</id>
    <link href="https://github.com/open-duelyst/duelyst" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Duelyst is a digital collectible card game and turn-based strategy hybrid, developed by Counterplay Games.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenDuelyst&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/open-duelyst/duelyst/main/app/resources/ui/brand_duelyst.png&#34; alt=&#34;Duelyst Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the source code for Duelyst, a digital collectible card game and turn-based strategy hybrid developed by Counterplay Games and released in 2016.&lt;/p&gt; &#xA;&lt;h2&gt;Production Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Work is underway to deploy OpenDuelyst as &#34;Duelyst Classic&#34;: a version of the game exactly as it was in v1.96.17, before the servers were shut down. This is being tracked in &lt;a href=&#34;https://github.com/open-duelyst/duelyst/issues/3&#34;&gt;issue #3&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Staging Deployment&lt;/h2&gt; &#xA;&lt;p&gt;The staging deployment is up and running at &lt;a href=&#34;https://staging.duelyst.org&#34;&gt;https://staging.duelyst.org&lt;/a&gt;. Both single-player and multi-player games are available.&lt;/p&gt; &#xA;&lt;h2&gt;Downloading the Desktop Clients&lt;/h2&gt; &#xA;&lt;p&gt;Desktop clients for Windows, Mac, and Linux can be downloaded on the &lt;a href=&#34;https://github.com/open-duelyst/duelyst/releases&#34;&gt;Releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;Desktop clients currently use the staging environment. They&#39;ll use the production environment once it&#39;s available.&lt;/p&gt; &#xA;&lt;h2&gt;Playing on Android or iOS&lt;/h2&gt; &#xA;&lt;p&gt;We have basic support for playing on mobile web currently. From your phone&#39;s browser, head to &lt;a href=&#34;https://staging.duelyst.org&#34;&gt;https://staging.duelyst.org&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;p&gt;To hide the status/navigation bar in Chrome or Safari, open the game and select &#34;Add to Home Screen&#34;. When you open the game from the home screen, the status bar will be hidden.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to OpenDuelyst&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to OpenDuelyst, check out our &lt;a href=&#34;https://raw.githubusercontent.com/open-duelyst/duelyst/main/docs/README.md&#34;&gt;Documentation&lt;/a&gt;, especially the &lt;a href=&#34;https://raw.githubusercontent.com/open-duelyst/duelyst/main/docs/ROADMAP.md&#34;&gt;Roadmap&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/open-duelyst/duelyst/main/docs/CONTRIBUTING.md&#34;&gt;Contributor Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also join the OpenDuelyst developer Discord server &lt;a href=&#34;https://discord.gg/HhUWfZ9cxe&#34;&gt;here&lt;/a&gt;. This Discord server is focused on the development of OpenDuelyst, and has channels for frontend, backend, and infrastructure discussions, but it is open for anyone to join.&lt;/p&gt; &#xA;&lt;h2&gt;Filing Issues and Reporting Bugs&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter a bug and would like to report it, first check the &lt;a href=&#34;https://github.com/open-duelyst/duelyst/issues/&#34;&gt;Open Issues&lt;/a&gt; to see if the bug has already been reported. If not, feel free to create a new issue with the &lt;code&gt;bug&lt;/code&gt; label.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to request a technical feature or enhancement to the code, you can create a new issue with the &lt;code&gt;enhancement&lt;/code&gt; label.&lt;/p&gt; &#xA;&lt;p&gt;Since OpenDuelyst is currently focused on recreating the game as it last existed in v1.96.17, please avoid creating feature requests related to balance changes.&lt;/p&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;p&gt;The game currently includes English and German localization. If you&#39;d like to contribute translations for another language, take a look at the &lt;code&gt;app/localization/locales&lt;/code&gt; directory. You can copy the &lt;code&gt;en&lt;/code&gt; folder and start updating strings for the new language, then submit a Pull Request with your contribution.&lt;/p&gt; &#xA;&lt;p&gt;There are about 4,500 localized strings, so this can also be done a little bit at a time. Once the translations are in, we can help get the language included in the game.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;OpenDuelyst is licensed under the Creative Commons Zero v1.0 Universal license. You can see a copy of the license &lt;a href=&#34;https://raw.githubusercontent.com/open-duelyst/duelyst/main/LICENSE&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PavelDoGreat/WebGL-Fluid-Simulation</title>
    <updated>2023-01-13T01:38:35Z</updated>
    <id>tag:github.com,2023-01-13:/PavelDoGreat/WebGL-Fluid-Simulation</id>
    <link href="https://github.com/PavelDoGreat/WebGL-Fluid-Simulation" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Play with fluids in your browser (works even on mobile)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WebGL Fluid Simulation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paveldogreat.github.io/WebGL-Fluid-Simulation/&#34;&gt;Play here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/PavelDoGreat/WebGL-Fluid-Simulation/master/screenshot.jpg?raw=true&#34; width=&#34;880&#34;&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://developer.download.nvidia.com/books/HTML/gpugems/gpugems_ch38.html&#34;&gt;http://developer.download.nvidia.com/books/HTML/gpugems/gpugems_ch38.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mharrys/fluids-2d&#34;&gt;https://github.com/mharrys/fluids-2d&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/haxiomic/GPU-Fluid-Experiments&#34;&gt;https://github.com/haxiomic/GPU-Fluid-Experiments&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The code is available under the &lt;a href=&#34;https://raw.githubusercontent.com/PavelDoGreat/WebGL-Fluid-Simulation/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>