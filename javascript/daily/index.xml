<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-11T01:35:30Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ffmpegwasm/ffmpeg.wasm</title>
    <updated>2022-09-11T01:35:30Z</updated>
    <id>tag:github.com,2022-09-11:/ffmpegwasm/ffmpeg.wasm</id>
    <link href="https://github.com/ffmpegwasm/ffmpeg.wasm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FFmpeg for browser and node, powered by WebAssembly&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ffmpegwasm/ffmpeg.wasm/master/#&#34;&gt; &lt;img alt=&#34;ffmpeg.wasm&#34; width=&#34;128px&#34; height=&#34;128px&#34; src=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm/raw/master/docs/images/ffmpegwasm-icon.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;ffmpeg.wasm&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/emersion/stability-badges#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stability-experimental-orange.svg?sanitize=true&#34; alt=&#34;stability-experimental&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/node/v/@ffmpeg/ffmpeg.svg&#34;&gt;&lt;img src=&#34;https://img.shields.io/node/v/@ffmpeg/ffmpeg.svg?sanitize=true&#34; alt=&#34;Node Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm/actions&#34;&gt;&lt;img src=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm/workflows/CodeQL/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/@ffmpeg/ffmpeg/latest&#34; alt=&#34;npm (tag)&#34;&gt; &lt;a href=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm/graphs/commit-activity&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Maintained%3F-yes-green.svg?sanitize=true&#34; alt=&#34;Maintenance&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/airbnb/javascript&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/code%20style/airbnb/ff5a5f?icon=airbnb&#34; alt=&#34;Code Style&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@ffmpeg/ffmpeg&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dt/@ffmpeg/ffmpeg.svg?sanitize=true&#34; alt=&#34;Downloads Total&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@ffmpeg/ffmpeg&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@ffmpeg/ffmpeg.svg?sanitize=true&#34; alt=&#34;Downloads Month&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Join us on Discord!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/NjGMaqqfm5&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/NjGMaqqfm5&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ffmpeg.wasm is a pure Webassembly / Javascript port of FFmpeg. It enables video &amp;amp; audio record, convert and stream right inside browsers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;AVI to MP4 Demo&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ffmpegwasm/ffmpeg.wasm/master/#&#34;&gt; &lt;img alt=&#34;transcode-demo&#34; src=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm/raw/master/docs/images/transcode.gif&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Try it: &lt;a href=&#34;https://ffmpegwasm.netlify.app#demo&#34;&gt;https://ffmpegwasm.netlify.app&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check next steps of ffmpeg.wasm &lt;a href=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm/discussions/415&#34;&gt;HERE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Node&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm install @ffmpeg/ffmpeg @ffmpeg/core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;As we are using experimental features, you need to add flags to run in Node.js&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ node --experimental-wasm-threads transcode.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Browser&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or, using a script tag in the browser (only works in some browsers, see list below):&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;SharedArrayBuffer is only available to pages that are &lt;a href=&#34;https://developer.chrome.com/blog/enabling-shared-array-buffer/#cross-origin-isolation&#34;&gt;cross-origin isolated&lt;/a&gt;. So you need to host &lt;a href=&#34;https://github.com/ffmpegwasm/ffmpegwasm.github.io/raw/main/server/server.js&#34;&gt;your own server&lt;/a&gt; with &lt;code&gt;Cross-Origin-Embedder-Policy: require-corp&lt;/code&gt; and &lt;code&gt;Cross-Origin-Opener-Policy: same-origin&lt;/code&gt; headers to use ffmpeg.wasm.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;static/js/ffmpeg.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script&amp;gt;&#xA;  const { createFFmpeg } = FFmpeg;&#xA;  ...&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Only browsers with SharedArrayBuffer support can use ffmpeg.wasm, you can check &lt;a href=&#34;https://caniuse.com/sharedarraybuffer&#34;&gt;HERE&lt;/a&gt; for the complete list.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;ffmpeg.wasm provides simple to use APIs, to transcode a video you only need few lines of code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const fs = require(&#39;fs&#39;);&#xA;const { createFFmpeg, fetchFile } = require(&#39;@ffmpeg/ffmpeg&#39;);&#xA;&#xA;const ffmpeg = createFFmpeg({ log: true });&#xA;&#xA;(async () =&amp;gt; {&#xA;  await ffmpeg.load();&#xA;  ffmpeg.FS(&#39;writeFile&#39;, &#39;test.avi&#39;, await fetchFile(&#39;./test.avi&#39;));&#xA;  await ffmpeg.run(&#39;-i&#39;, &#39;test.avi&#39;, &#39;test.mp4&#39;);&#xA;  await fs.promises.writeFile(&#39;./test.mp4&#39;, ffmpeg.FS(&#39;readFile&#39;, &#39;test.mp4&#39;));&#xA;  process.exit(0);&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use other version of ffmpeg.wasm-core / @ffmpeg/core&lt;/h3&gt; &#xA;&lt;p&gt;For each version of ffmpeg.wasm, there is a default version of @ffmpeg/core (you can find it in &lt;strong&gt;devDependencies&lt;/strong&gt; section of &lt;a href=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm/raw/master/package.json&#34;&gt;package.json&lt;/a&gt;), but sometimes you may need to use newer version of @ffmpeg/core to use the latest/experimental features.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Node&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Just install the specific version you need:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @ffmpeg/core@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use your own version with customized path&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const ffmpeg = createFFmpeg({&#xA;  corePath: &#39;../../../src/ffmpeg-core.js&#39;,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Browser&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const ffmpeg = createFFmpeg({&#xA;  corePath: &#39;static/js/ffmpeg-core.js&#39;,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Keep in mind that for compatibility with webworkers and nodejs this will default to a local path, so it will attempt to look for &lt;code&gt;&#39;static/js/ffmpeg.core.js&#39;&lt;/code&gt; locally, often resulting in a local resource error. If you wish to use a core version hosted on your own domain, you might reference it relatively like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const ffmpeg = createFFmpeg({&#xA;  corePath: new URL(&#39;static/js/ffmpeg-core.js&#39;, document.location).href,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the list available versions and their changelog, please check: &lt;a href=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm-core/releases&#34;&gt;https://github.com/ffmpegwasm/ffmpeg.wasm-core/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Use single thread version&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const ffmpeg = createFFmpeg({&#xA;  mainName: &#39;main&#39;,&#xA;  corePath: &#39;https://unpkg.com/@ffmpeg/core-st@0.11.1/dist/ffmpeg-core.js&#39;,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Multi-threading&lt;/h2&gt; &#xA;&lt;p&gt;Multi-threading need to be configured per external libraries, only following libraries supports it now:&lt;/p&gt; &#xA;&lt;h3&gt;x264&lt;/h3&gt; &#xA;&lt;p&gt;Run it multi-threading mode by default, no need to pass any arguments.&lt;/p&gt; &#xA;&lt;h3&gt;libvpx / webm&lt;/h3&gt; &#xA;&lt;p&gt;Need to pass &lt;code&gt;-row-mt 1&lt;/code&gt;, but can only use one thread to help, can speed up around 30%&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm/raw/master/docs/api.md&#34;&gt;API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm-core#configuration&#34;&gt;Supported External Libraries&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;What is the license of ffmpeg.wasm?&lt;/h3&gt; &#xA;&lt;p&gt;There are two components inside ffmpeg.wasm:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;@ffmpeg/ffmpeg (&lt;a href=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm&#34;&gt;https://github.com/ffmpegwasm/ffmpeg.wasm&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;@ffmpeg/core (&lt;a href=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm-core&#34;&gt;https://github.com/ffmpegwasm/ffmpeg.wasm-core&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;@ffmpeg/core contains WebAssembly code which is transpiled from original FFmpeg C code with minor modifications, but overall it still following the same licenses as FFmpeg and its external libraries (as each external libraries might have its own license).&lt;/p&gt; &#xA;&lt;p&gt;@ffmpeg/ffmpeg contains kind of a wrapper to handle the complexity of loading core and calling low-level APIs. It is a small code base and under MIT license.&lt;/p&gt; &#xA;&lt;h3&gt;Can I use ffmpeg.wasm in Firefox?&lt;/h3&gt; &#xA;&lt;p&gt;Yes, but only for Firefox 79+ with proper header in both client and server, visit &lt;a href=&#34;https://ffmpegwasm.netlify.app&#34;&gt;https://ffmpegwasm.netlify.app&lt;/a&gt; to try whether your Firefox works.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5723124/98955802-4cb20c80-253a-11eb-8f16-ce0298720a2a.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more details: &lt;a href=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm/issues/106&#34;&gt;https://github.com/ffmpegwasm/ffmpeg.wasm/issues/106&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;What is the maximum size of input file?&lt;/h3&gt; &#xA;&lt;p&gt;2 GB, which is a hard limit in WebAssembly. Might become 4 GB in the future.&lt;/p&gt; &#xA;&lt;h3&gt;How can I build my own ffmpeg.wasm?&lt;/h3&gt; &#xA;&lt;p&gt;In fact, it is ffmpeg.wasm-core most people would like to build.&lt;/p&gt; &#xA;&lt;p&gt;To build on your own, you can check build.sh inside &lt;a href=&#34;https://github.com/ffmpegwasm/ffmpeg.wasm-core&#34;&gt;https://github.com/ffmpegwasm/ffmpeg.wasm-core&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;p&gt;Also you can check this series of posts to learn more fundamental concepts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-1-preparation/&#34;&gt;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-1-preparation/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-2-compile-with-emscripten/&#34;&gt;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-2-compile-with-emscripten/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-3-v0.1/&#34;&gt;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-3-v0.1/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-4-v0.2/&#34;&gt;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-4-v0.2/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Why it doesn&#39;t work in my local environment?&lt;/h3&gt; &#xA;&lt;p&gt;When calling &lt;code&gt;ffmpeg.load()&lt;/code&gt;, by default it looks for &lt;code&gt;http://localhost:3000/node_modules/@ffmpeg/core/dist/&lt;/code&gt; to download essential files (ffmpeg-core.js, ffmpeg-core.wasm, ffmpeg-core.worker.js). It is necessary to make sure you have those files served there.&lt;/p&gt; &#xA;&lt;p&gt;If you have those files serving in other location, you can rewrite the default behavior when calling &lt;code&gt;createFFmpeg()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const { createFFmpeg } = FFmpeg;&#xA;const ffmpeg = createFFmpeg({&#xA;  corePath: &#34;http://localhost:3000/public/ffmpeg-core.js&#34;,&#xA;  // Use public address if you don&#39;t want to host your own.&#xA;  // corePath: &#39;https://unpkg.com/@ffmpeg/core@0.10.0/dist/ffmpeg-core.js&#39;&#xA;  log: true,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>appwrite/appwrite</title>
    <updated>2022-09-11T01:35:30Z</updated>
    <id>tag:github.com,2022-09-11:/appwrite/appwrite</id>
    <link href="https://github.com/appwrite/appwrite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Secure Backend Server for Web, Mobile &amp; Flutter Developers 🚀 AKA the 100% open-source Firebase alternative.&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;It&#39;s going to get cloudy! 🌩 ☂️ The Appwrite Cloud is coming soon! You can learn more about our upcoming hosted solution and signup for free credits at: &lt;a href=&#34;https://appwrite.io/cloud&#34;&gt;https://appwrite.io/cloud&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://appwrite.io&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;260&#34; height=&#34;39&#34; src=&#34;https://appwrite.io/images/appwrite.svg?sanitize=true&#34; alt=&#34;Appwrite Logo&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;b&gt;A complete backend solution for your [Flutter / Vue / Angular / React / iOS / Android / *ANY OTHER*] app&lt;/b&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;!-- [![Hacktoberfest](https://img.shields.io/static/v1?label=hacktoberfest&amp;message=friendly&amp;color=90a88b&amp;style=flat-square)](https://hacktoberfest.appwrite.io) --&gt; &#xA;&lt;!-- [![Build Status](https://img.shields.io/travis/com/appwrite/appwrite?style=flat-square)](https://travis-ci.com/appwrite/appwrite) --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://appwrite.io/discord?r=Github&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/564160730845151244?label=discord&amp;amp;style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/appwrite/appwrite&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/appwrite/appwrite?color=f02e65&amp;amp;style=flat-square&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/appwrite/appwrite/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/appwrite/appwrite/Tests?label=tests&amp;amp;style=flat-square&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/appwrite&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/appwrite?color=00acee&amp;amp;label=twitter&amp;amp;style=flat-square&#34; alt=&#34;Twitter Account&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/docs/tutorials/add-translations.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/translate-f02e65?style=flat-square&#34; alt=&#34;Translate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://store.appwrite.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/swag%20store-f02e65?style=flat-square&#34; alt=&#34;Swag Store&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/README-CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.to/appwrite/announcing-appwrite-015-with-phone-authentication-more-5cjj&#34;&gt;&lt;strong&gt;Appwrite 0.15 has been released! Learn what&#39;s new!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Appwrite is an end-to-end backend server for Web, Mobile, Native, or Backend apps packaged as a set of Docker&#xA; &lt;nobr&gt;&#xA;   microservices. Appwrite abstracts the complexity and repetitiveness required to build a modern backend API from scratch and allows you to build secure apps faster.&#xA; &lt;/nobr&gt;&lt;/p&gt;&#xA;&lt;nobr&gt; &#xA; &lt;p&gt;Using Appwrite, you can easily integrate your app with user authentication &amp;amp; multiple sign-in methods, a database for storing and querying users and team data, storage and file management, image manipulation, Cloud Functions, and &lt;a href=&#34;https://appwrite.io/docs&#34;&gt;more services&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/public/images/github.png&#34; alt=&#34;Appwrite&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;Find out more at: &lt;a href=&#34;https://appwrite.io&#34;&gt;https://appwrite.io&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Table of Contents:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#unix&#34;&gt;Unix&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#windows&#34;&gt;Windows&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#cmd&#34;&gt;CMD&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#powershell&#34;&gt;PowerShell&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#upgrade-from-an-older-version&#34;&gt;Upgrade from an Older Version&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#services&#34;&gt;Services&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#sdks&#34;&gt;SDKs&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#client&#34;&gt;Client&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#server&#34;&gt;Server&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#follow-us&#34;&gt;Follow Us&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h2&gt;Installation&lt;/h2&gt; &#xA; &lt;p&gt;Appwrite backend server is designed to run in a container environment. Running your server is as easy as running one command from your terminal. You can either run Appwrite on your localhost using docker-compose or on any other container orchestration tool like Kubernetes, Docker Swarm, or Rancher.&lt;/p&gt; &#xA; &lt;p&gt;The easiest way to start running your Appwrite server is by running our docker-compose file. Before running the installation command, make sure you have &lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker&lt;/a&gt; installed on your machine:&lt;/p&gt; &#xA; &lt;h3&gt;Unix&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm \&#xA;    --volume /var/run/docker.sock:/var/run/docker.sock \&#xA;    --volume &#34;$(pwd)&#34;/appwrite:/usr/src/code/appwrite:rw \&#xA;    --entrypoint=&#34;install&#34; \&#xA;    appwrite/appwrite:0.15.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Windows&lt;/h3&gt; &#xA; &lt;h4&gt;CMD&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;docker run -it --rm ^&#xA;    --volume //var/run/docker.sock:/var/run/docker.sock ^&#xA;    --volume &#34;%cd%&#34;/appwrite:/usr/src/code/appwrite:rw ^&#xA;    --entrypoint=&#34;install&#34; ^&#xA;    appwrite/appwrite:0.15.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;PowerShell&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;docker run -it --rm ,&#xA;    --volume /var/run/docker.sock:/var/run/docker.sock ,&#xA;    --volume ${pwd}/appwrite:/usr/src/code/appwrite:rw ,&#xA;    --entrypoint=&#34;install&#34; ,&#xA;    appwrite/appwrite:0.15.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Once the Docker installation completes, go to &lt;a href=&#34;http://localhost&#34;&gt;http://localhost&lt;/a&gt; to access the Appwrite console from your browser. Please note that on non-Linux native hosts, the server might take a few minutes to start after installation completes.&lt;/p&gt; &#xA; &lt;p&gt;For advanced production and custom installation, check out our Docker &lt;a href=&#34;https://appwrite.io/docs/environment-variables&#34;&gt;environment variables&lt;/a&gt; docs. You can also use our public &lt;a href=&#34;https://appwrite.io/install/compose&#34;&gt;docker-compose.yml&lt;/a&gt; and &lt;a href=&#34;https://appwrite.io/install/env&#34;&gt;.env&lt;/a&gt; files to manually set up an environment.&lt;/p&gt; &#xA; &lt;h3&gt;Upgrade from an Older Version&lt;/h3&gt; &#xA; &lt;p&gt;If you are upgrading your Appwrite server from an older version, you should use the Appwrite migration tool once your setup is completed. For more information regarding this, check out the &lt;a href=&#34;https://appwrite.io/docs/installation&#34;&gt;Installation Docs&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;One-Click Setups&lt;/h2&gt; &#xA; &lt;p&gt;In addition to running Appwrite locally, you can also launch Appwrite using a pre-configured setup. This allows you to get up and running with Appwrite quickly without installing Docker on your local machine.&lt;/p&gt; &#xA; &lt;p&gt;Choose from one of the providers below:&lt;/p&gt; &#xA; &lt;table border=&#34;0&#34;&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &lt;a href=&#34;https://marketplace.digitalocean.com/apps/appwrite&#34;&gt; &lt;img width=&#34;50&#34; height=&#34;39&#34; src=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/public/images/integrations/digitalocean-logo.svg?sanitize=true&#34; alt=&#34;DigitalOcean Logo&#34;&gt; &lt;br&gt;&lt;sub&gt;&lt;b&gt;DigitalOcean&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;  &lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/appwrite/integration-for-gitpod&#34;&gt; &lt;img width=&#34;50&#34; height=&#34;39&#34; src=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/public/images/integrations/gitpod-logo.svg?sanitize=true&#34; alt=&#34;Gitpod Logo&#34;&gt; &lt;br&gt;&lt;sub&gt;&lt;b&gt;Gitpod&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;  &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA; &lt;h2&gt;Getting Started&lt;/h2&gt; &#xA; &lt;p&gt;Getting started with Appwrite is as easy as creating a new project, choosing your platform, and integrating its SDK into your code. You can easily get started with your platform of choice by reading one of our Getting Started tutorials.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/getting-started-for-web&#34;&gt;Getting Started for Web&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/getting-started-for-flutter&#34;&gt;Getting Started for Flutter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/getting-started-for-apple&#34;&gt;Getting Started for Apple&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/getting-started-for-android&#34;&gt;Getting Started for Android&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/getting-started-for-server&#34;&gt;Getting Started for Server&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/command-line&#34;&gt;Getting Started for CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;Services&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/client/account&#34;&gt;&lt;strong&gt;Account&lt;/strong&gt;&lt;/a&gt; - Manage current user authentication and account. Track and manage the user sessions, devices, sign-in methods, and security logs.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/server/users&#34;&gt;&lt;strong&gt;Users&lt;/strong&gt;&lt;/a&gt; - Manage and list all project users when in admin mode.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/client/teams&#34;&gt;&lt;strong&gt;Teams&lt;/strong&gt;&lt;/a&gt; - Manage and group users in teams. Manage memberships, invites, and user roles within a team.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/client/databases&#34;&gt;&lt;strong&gt;Databases&lt;/strong&gt;&lt;/a&gt; - Manage databases, collections and documents. Read, create, update, and delete documents and filter lists of document collections using advanced filters.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/client/storage&#34;&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;/a&gt; - Manage storage files. Read, create, delete, and preview files. Manipulate the preview of your files to fit your app perfectly. All files are scanned by ClamAV and stored in a secure and encrypted way.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/server/functions&#34;&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/a&gt; - Customize your Appwrite server by executing your custom code in a secure, isolated environment. You can trigger your code on any Appwrite system event, manually or using a CRON schedule.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/realtime&#34;&gt;&lt;strong&gt;Realtime&lt;/strong&gt;&lt;/a&gt; - Listen to real-time events for any of your Appwrite services including users, storage, functions, databases and more.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/client/locale&#34;&gt;&lt;strong&gt;Locale&lt;/strong&gt;&lt;/a&gt; - Track your user&#39;s location, and manage your app locale-based data.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appwrite.io/docs/client/avatars&#34;&gt;&lt;strong&gt;Avatars&lt;/strong&gt;&lt;/a&gt; - Manage your users&#39; avatars, countries&#39; flags, browser icons, credit card symbols, and generate QR codes.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;For the complete API documentation, visit &lt;a href=&#34;https://appwrite.io/docs&#34;&gt;https://appwrite.io/docs&lt;/a&gt;. For more tutorials, news and announcements check out our &lt;a href=&#34;https://medium.com/appwrite-io&#34;&gt;blog&lt;/a&gt; and &lt;a href=&#34;https://discord.gg/GSeTUeA&#34;&gt;Discord Server&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h3&gt;SDKs&lt;/h3&gt; &#xA; &lt;p&gt;Below is a list of currently supported platforms and languages. If you wish to help us add support to your platform of choice, you can go over to our &lt;a href=&#34;https://github.com/appwrite/sdk-generator&#34;&gt;SDK Generator&lt;/a&gt; project and view our &lt;a href=&#34;https://github.com/appwrite/sdk-generator/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h4&gt;Client&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-web&#34;&gt;Web&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-flutter&#34;&gt;Flutter&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-apple&#34;&gt;Apple&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-android&#34;&gt;Android&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Server&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-node&#34;&gt;NodeJS&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-php&#34;&gt;PHP&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-dart&#34;&gt;Dart&lt;/a&gt; - (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-deno&#34;&gt;Deno&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-ruby&#34;&gt;Ruby&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-python&#34;&gt;Python&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-kotlin&#34;&gt;Kotlin&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-apple&#34;&gt;Apple&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/appwrite/sdk-for-dotnet&#34;&gt;.NET&lt;/a&gt; - &lt;strong&gt;Experimental&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Community&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/m1ga/ti.appwrite&#34;&gt;Appcelerator Titanium&lt;/a&gt; (Maintained by &lt;a href=&#34;https://github.com/m1ga/&#34;&gt;Michael Gangolf&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&#34;https://github.com/GodotNuts/appwrite-sdk&#34;&gt;Godot Engine&lt;/a&gt; (Maintained by &lt;a href=&#34;https://github.com/fenix-hub&#34;&gt;fenix-hub @GodotNuts&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Looking for more SDKs? - Help us by contributing a pull request to our &lt;a href=&#34;https://github.com/appwrite/sdk-generator&#34;&gt;SDK Generator&lt;/a&gt;!&lt;/p&gt; &#xA; &lt;h2&gt;Architecture&lt;/h2&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/docs/specs/overview.drawio.svg?sanitize=true&#34; alt=&#34;Appwrite Architecture&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;Appwrite uses a microservices architecture that was designed for easy scaling and delegation of responsibilities. In addition, Appwrite supports multiple APIs (REST, WebSocket, and GraphQL-soon) to allow you to interact with your resources leveraging your existing knowledge and protocols of choice.&lt;/p&gt; &#xA; &lt;p&gt;The Appwrite API layer was designed to be extremely fast by leveraging in-memory caching and delegating any heavy-lifting tasks to the Appwrite background workers. The background workers also allow you to precisely control your compute capacity and costs using a message queue to handle the load. You can learn more about our architecture in the &lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/CONTRIBUTING.md#architecture-1&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Contributing&lt;/h2&gt; &#xA; &lt;p&gt;All code contributions - including those of people having commit access - must go through a pull request and be approved by a core developer before being merged. This is to ensure a proper review of all the code.&lt;/p&gt; &#xA; &lt;p&gt;We truly ❤️ pull requests! If you wish to help, you can learn more about how you can contribute to this project in the &lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Security&lt;/h2&gt; &#xA; &lt;p&gt;For security issues, kindly email us at &lt;a href=&#34;mailto:security@appwrite.io&#34;&gt;security@appwrite.io&lt;/a&gt; instead of posting a public issue on GitHub.&lt;/p&gt; &#xA; &lt;h2&gt;Follow Us&lt;/h2&gt; &#xA; &lt;p&gt;Join our growing community around the world! See our official &lt;a href=&#34;https://medium.com/appwrite-io&#34;&gt;Blog&lt;/a&gt;. Follow us on &lt;a href=&#34;https://twitter.com/appwrite&#34;&gt;Twitter&lt;/a&gt;, &lt;a href=&#34;https://www.facebook.com/appwrite.io&#34;&gt;Facebook Page&lt;/a&gt;, &lt;a href=&#34;https://www.facebook.com/groups/appwrite.developers/&#34;&gt;Facebook Group&lt;/a&gt; , &lt;a href=&#34;https://dev.to/appwrite&#34;&gt;Dev Community&lt;/a&gt; or join our live &lt;a href=&#34;https://discord.gg/GSeTUeA&#34;&gt;Discord server&lt;/a&gt; for more help, ideas, and discussions.&lt;/p&gt; &#xA; &lt;h2&gt;License&lt;/h2&gt; &#xA; &lt;p&gt;This repository is available under the &lt;a href=&#34;https://raw.githubusercontent.com/appwrite/appwrite/master/LICENSE&#34;&gt;BSD 3-Clause License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/nobr&gt;</summary>
  </entry>
  <entry>
    <title>parse-community/parse-server</title>
    <updated>2022-09-11T01:35:30Z</updated>
    <id>tag:github.com,2022-09-11:/parse-community/parse-server</id>
    <link href="https://github.com/parse-community/parse-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;API server module for Node/Express&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5673677/138278489-7d0cebc5-1e31-4d3c-8ffb-53efcda6f29d.png&#34; alt=&#34;parse-repository-header-server&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/parse-community/parse-server/actions?query=workflow%3Aci+branch%3Aalpha&#34;&gt;&lt;img src=&#34;https://github.com/parse-community/parse-server/workflows/ci/badge.svg?branch=alpha&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://snyk.io/test/github/parse-community/parse-server&#34;&gt;&lt;img src=&#34;https://snyk.io/test/github/parse-community/parse-server/badge.svg?sanitize=true&#34; alt=&#34;Snyk Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/parse-community/parse-server?branch=alpha&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/parse-community/parse-server/alpha.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/parse-community/parse-dashboard/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%9A%80-auto--release-9e34eb.svg?sanitize=true&#34; alt=&#34;auto-release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nodejs.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/nodejs-12,_14,_16,_17,_18-green.svg?logo=node.js&amp;amp;style=flat&#34; alt=&#34;Node Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.mongodb.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/mongodb-4.0,_4.2,_4.4,_5.0,_5.1,_5.2-green.svg?logo=mongodb&amp;amp;style=flat&#34; alt=&#34;MongoDB Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.postgresql.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/postgresql-11,_12,_13,_14-green.svg?logo=postgresql&amp;amp;style=flat&#34; alt=&#34;Postgres Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/parse-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/parse-server/latest.svg?sanitize=true&#34; alt=&#34;npm latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/parse-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/parse-server/beta.svg?sanitize=true&#34; alt=&#34;npm beta version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/parse-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/parse-server/alpha.svg?sanitize=true&#34; alt=&#34;npm alpha version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/parse-server&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-BSD-lightgrey.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://community.parseplatform.org/c/parse-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/community.parseplatform.org/topics.svg?sanitize=true&#34; alt=&#34;Forum&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=ParsePlatform&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ParsePlatform.svg?label=Follow&amp;amp;style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://chat.parseplatform.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Chat-Join!-%23fff?style=social&amp;amp;logo=slack&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Parse Server works with the Express web application framework. It can be added to existing web applications, or run by itself.&lt;/p&gt; &#xA;&lt;p&gt;The full documentation for Parse Server is available in the &lt;a href=&#34;https://github.com/parse-community/parse-server/wiki&#34;&gt;wiki&lt;/a&gt;. The &lt;a href=&#34;http://docs.parseplatform.org/parse-server/guide/&#34;&gt;Parse Server guide&lt;/a&gt; is a good place to get started. An &lt;a href=&#34;http://parseplatform.org/parse-server/api/&#34;&gt;API reference&lt;/a&gt; and &lt;a href=&#34;https://docs.parseplatform.org/cloudcode/guide/&#34;&gt;Cloud Code guide&lt;/a&gt; are also available. If you&#39;re interested in developing for Parse Server, the &lt;a href=&#34;http://docs.parseplatform.org/parse-server/guide/#development-guide&#34;&gt;Development guide&lt;/a&gt; will help you get set up.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;A big &lt;em&gt;thank you&lt;/em&gt; 🙏 to our &lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#sponsors&#34;&gt;sponsors&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#backers&#34;&gt;backers&lt;/a&gt; who support the development of Parse Platform!&lt;/p&gt; &#xA;&lt;h3&gt;Diamond Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/parse-server/contribute/diamond-sponsor-10560&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/tiers/diamond-sponsor.svg?avatarHeight=70&amp;amp;button=false&#34; alt=&#34;Diamond Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Bronze Sponsors&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/parse-server/contribute/bronze-sponsor-10559&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/tiers/bronze-sponsor.svg?avatarHeight=36&amp;amp;button=false&#34; alt=&#34;Bronze Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#flavors--branches&#34;&gt;Flavors &amp;amp; Branches&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#long-term-support&#34;&gt;Long Term Support&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#running-parse-server&#34;&gt;Running Parse Server&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#compatibility&#34;&gt;Compatibility&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#nodejs&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#mongodb&#34;&gt;MongoDB&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#postgresql&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#locally&#34;&gt;Locally&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#docker-container&#34;&gt;Docker Container&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#saving-an-object&#34;&gt;Saving an Object&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#connect-an-sdk&#34;&gt;Connect an SDK&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#running-parse-server-elsewhere&#34;&gt;Running Parse Server elsewhere&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#sample-application&#34;&gt;Sample Application&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#parse-server--express&#34;&gt;Parse Server + Express&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#basic-options&#34;&gt;Basic Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#client-key-options&#34;&gt;Client Key Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#email-verification-and-password-reset&#34;&gt;Email Verification and Password Reset&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#password-and-account-policy&#34;&gt;Password and Account Policy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#custom-routes&#34;&gt;Custom Routes&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#example&#34;&gt;Example&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#reserved-paths&#34;&gt;Reserved Paths&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#custom-pages&#34;&gt;Custom Pages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#using-environment-variables&#34;&gt;Using Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#available-adapters&#34;&gt;Available Adapters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#configuring-file-adapters&#34;&gt;Configuring File Adapters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#idempotency-enforcement&#34;&gt;Idempotency Enforcement&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#localization&#34;&gt;Localization&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#pages&#34;&gt;Pages&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#localization-with-directory-structure&#34;&gt;Localization with Directory Structure&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#localization-with-json-resource&#34;&gt;Localization with JSON Resource&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#dynamic-placeholders&#34;&gt;Dynamic placeholders&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#reserved-keys&#34;&gt;Reserved Keys&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#parameters-1&#34;&gt;Parameters&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#logging&#34;&gt;Logging&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#deprecations&#34;&gt;Deprecations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#live-query&#34;&gt;Live Query&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#graphql&#34;&gt;GraphQL&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#running&#34;&gt;Running&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#using-the-cli&#34;&gt;Using the CLI&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#using-docker&#34;&gt;Using Docker&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#using-expressjs&#34;&gt;Using Express.js&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#checking-the-api-health&#34;&gt;Checking the API health&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#creating-your-first-class&#34;&gt;Creating your first class&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#using-automatically-generated-operations&#34;&gt;Using automatically generated operations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#customizing-your-graphql-schema&#34;&gt;Customizing your GraphQL Schema&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#learning-more&#34;&gt;Learning more&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#upgrading-to-parse-server-30&#34;&gt;Upgrading to Parse Server 3.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#backers&#34;&gt;Backers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Flavors &amp;amp; Branches&lt;/h1&gt; &#xA;&lt;p&gt;Parse Server is available in different flavors on different branches:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The main branches are &lt;a href=&#34;https://github.com/parse-community/parse-server/raw/release/changelogs/CHANGELOG_release.md&#34;&gt;release&lt;/a&gt;, &lt;a href=&#34;https://github.com/parse-community/parse-server/raw/beta/changelogs/CHANGELOG_beta.md&#34;&gt;beta&lt;/a&gt; and &lt;a href=&#34;https://github.com/parse-community/parse-server/raw/alpha/changelogs/CHANGELOG_alpha.md&#34;&gt;alpha&lt;/a&gt;. See the &lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/CHANGELOG.md&#34;&gt;changelog overview&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;The long-term-support (LTS) branches are named &lt;code&gt;release-&amp;lt;version&amp;gt;.x.x&lt;/code&gt;, for example &lt;code&gt;release-4.x.x&lt;/code&gt;. LTS branches do not have pre-release branches.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Long Term Support&lt;/h2&gt; &#xA;&lt;p&gt;Long-Term-Support (LTS) is provided for the previous Parse Server major version. For example, Parse Server 4.x will receive security updates until Parse Server 5.x is superseded by Parse Server 6.x and becomes the new LTS version. While the current major version is published on branch &lt;code&gt;release&lt;/code&gt;, a LTS version is published on branch &lt;code&gt;release-#.x.x&lt;/code&gt;, for example &lt;code&gt;release-4.x.x&lt;/code&gt; for the Parse Server 4.x LTS branch.&lt;/p&gt; &#xA;&lt;p&gt;⚠️ LTS versions are provided to help you transition as soon as possible to the current major version. While we aim to fix security vulnerabilities in the LTS version, our main focus is on developing the current major version and preparing the next major release. Therefore we may leave certain vulnerabilities up to the community to fix. Search for &lt;a href=&#34;https://github.com/parse-community/parse-server/pulls?q=is%3Aopen+is%3Apr+base%3Arelease-4.x.x&#34;&gt;pull requests with the specific LTS base branch&lt;/a&gt; to see the current open vulnerabilities for that LTS branch.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;The fastest and easiest way to get started is to run MongoDB and Parse Server locally.&lt;/p&gt; &#xA;&lt;h2&gt;Running Parse Server&lt;/h2&gt; &#xA;&lt;p&gt;Before you start make sure you have installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/&#34;&gt;NodeJS&lt;/a&gt; that includes &lt;code&gt;npm&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt; or &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;(with &lt;a href=&#34;https://postgis.net&#34;&gt;PostGIS&lt;/a&gt; 2.2.0 or higher)&lt;/li&gt; &#xA; &lt;li&gt;Optionally &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compatibility&lt;/h3&gt; &#xA;&lt;h4&gt;Node.js&lt;/h4&gt; &#xA;&lt;p&gt;Parse Server is continuously tested with the most recent releases of Node.js to ensure compatibility. We follow the &lt;a href=&#34;https://github.com/nodejs/Release&#34;&gt;Node.js Long Term Support plan&lt;/a&gt; and only test against versions that are officially supported and have not reached their end-of-life date.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Latest Version&lt;/th&gt; &#xA;   &lt;th&gt;End-of-Life&lt;/th&gt; &#xA;   &lt;th&gt;Compatible&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Node.js 12&lt;/td&gt; &#xA;   &lt;td&gt;12.22.11&lt;/td&gt; &#xA;   &lt;td&gt;April 2022&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Node.js 14&lt;/td&gt; &#xA;   &lt;td&gt;14.19.1&lt;/td&gt; &#xA;   &lt;td&gt;April 2023&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Node.js 16&lt;/td&gt; &#xA;   &lt;td&gt;16.14.2&lt;/td&gt; &#xA;   &lt;td&gt;April 2024&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Node.js 17&lt;/td&gt; &#xA;   &lt;td&gt;17.9.0&lt;/td&gt; &#xA;   &lt;td&gt;June 2022&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Node.js 18&lt;/td&gt; &#xA;   &lt;td&gt;18.1.0&lt;/td&gt; &#xA;   &lt;td&gt;April 2025&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;MongoDB&lt;/h4&gt; &#xA;&lt;p&gt;Parse Server is continuously tested with the most recent releases of MongoDB to ensure compatibility. We follow the &lt;a href=&#34;https://www.mongodb.com/support-policy&#34;&gt;MongoDB support schedule&lt;/a&gt; and only test against versions that are officially supported and have not reached their end-of-life date.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Latest Version&lt;/th&gt; &#xA;   &lt;th&gt;End-of-Life&lt;/th&gt; &#xA;   &lt;th&gt;Compatible&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MongoDB 4.0&lt;/td&gt; &#xA;   &lt;td&gt;4.0.28&lt;/td&gt; &#xA;   &lt;td&gt;April 2022&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MongoDB 4.2&lt;/td&gt; &#xA;   &lt;td&gt;4.2.19&lt;/td&gt; &#xA;   &lt;td&gt;TBD&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MongoDB 4.4&lt;/td&gt; &#xA;   &lt;td&gt;4.4.13&lt;/td&gt; &#xA;   &lt;td&gt;TBD&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MongoDB 5.0&lt;/td&gt; &#xA;   &lt;td&gt;5.0.6&lt;/td&gt; &#xA;   &lt;td&gt;TBD&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MongoDB 5.1&lt;/td&gt; &#xA;   &lt;td&gt;5.1.1&lt;/td&gt; &#xA;   &lt;td&gt;TBD&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MongoDB 5.2&lt;/td&gt; &#xA;   &lt;td&gt;5.2.1&lt;/td&gt; &#xA;   &lt;td&gt;TBD&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;PostgreSQL&lt;/h4&gt; &#xA;&lt;p&gt;Parse Server is continuously tested with the most recent releases of PostgreSQL and PostGIS to ensure compatibility, using &lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;ordering=last_updated&#34;&gt;PostGIS docker images&lt;/a&gt;. We follow the &lt;a href=&#34;https://www.postgresql.org/support/versioning&#34;&gt;PostgreSQL support schedule&lt;/a&gt; and &lt;a href=&#34;https://www.postgis.net/eol_policy/&#34;&gt;PostGIS support schedule&lt;/a&gt; and only test against versions that are officially supported and have not reached their end-of-life date. Due to the extensive PostgreSQL support duration of 5 years, Parse Server drops support if a version is older than 3.5 years and a newer version has been available for at least 2.5 years.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;PostGIS Version&lt;/th&gt; &#xA;   &lt;th&gt;End-of-Life&lt;/th&gt; &#xA;   &lt;th&gt;Parse Server Support End&lt;/th&gt; &#xA;   &lt;th&gt;Compatible&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Postgres 11&lt;/td&gt; &#xA;   &lt;td&gt;3.0, 3.1, 3.2&lt;/td&gt; &#xA;   &lt;td&gt;November 2023&lt;/td&gt; &#xA;   &lt;td&gt;April 2022&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Postgres 12&lt;/td&gt; &#xA;   &lt;td&gt;3.2&lt;/td&gt; &#xA;   &lt;td&gt;November 2024&lt;/td&gt; &#xA;   &lt;td&gt;April 2023&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Postgres 13&lt;/td&gt; &#xA;   &lt;td&gt;3.2&lt;/td&gt; &#xA;   &lt;td&gt;November 2025&lt;/td&gt; &#xA;   &lt;td&gt;April 2024&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Postgres 14&lt;/td&gt; &#xA;   &lt;td&gt;3.2&lt;/td&gt; &#xA;   &lt;td&gt;November 2026&lt;/td&gt; &#xA;   &lt;td&gt;April 2025&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Locally&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install -g parse-server mongodb-runner&#xA;$ mongodb-runner start&#xA;$ parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://localhost/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;If installation with&lt;/em&gt; &lt;code&gt;-g&lt;/code&gt; &lt;em&gt;fails due to permission problems&lt;/em&gt; (&lt;code&gt;npm ERR! code &#39;EACCES&#39;&lt;/code&gt;), &lt;em&gt;please refer to &lt;a href=&#34;https://docs.npmjs.com/getting-started/fixing-npm-permissions&#34;&gt;this link&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker Container&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/parse-community/parse-server&#xA;$ cd parse-server&#xA;$ docker build --tag parse-server .&#xA;$ docker run --name my-mongo -d mongo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Running the Parse Server Image &#xA; &lt;!-- omit in toc --&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --name my-parse-server -v config-vol:/parse-server/config -p 1337:1337 --link my-mongo:mongo -d parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://mongo/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;If you want to use &lt;a href=&#34;https://docs.parseplatform.org/cloudcode/guide/&#34;&gt;Cloud Code&lt;/a&gt;, add &lt;code&gt;-v cloud-code-vol:/parse-server/cloud --cloud /parse-server/cloud/main.js&lt;/code&gt; to the command above. Make sure &lt;code&gt;main.js&lt;/code&gt; is in the &lt;code&gt;cloud-code-vol&lt;/code&gt; directory before starting Parse Server.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use any arbitrary string as your application id and master key. These will be used by your clients to authenticate with the Parse Server.&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s it! You are now running a standalone version of Parse Server on your machine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Using a remote MongoDB?&lt;/strong&gt; Pass the &lt;code&gt;--databaseURI DATABASE_URI&lt;/code&gt; parameter when starting &lt;code&gt;parse-server&lt;/code&gt;. Learn more about configuring Parse Server &lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#configuration&#34;&gt;here&lt;/a&gt;. For a full list of available options, run &lt;code&gt;parse-server --help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Saving an Object&lt;/h3&gt; &#xA;&lt;p&gt;Now that you&#39;re running Parse Server, it is time to save your first object. We&#39;ll use the &lt;a href=&#34;http://docs.parseplatform.org/rest/guide&#34;&gt;REST API&lt;/a&gt;, but you can easily do the same using any of the &lt;a href=&#34;http://parseplatform.org/#sdks&#34;&gt;Parse SDKs&lt;/a&gt;. Run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -X POST \&#xA;-H &#34;X-Parse-Application-Id: APPLICATION_ID&#34; \&#xA;-H &#34;Content-Type: application/json&#34; \&#xA;-d &#39;{&#34;score&#34;:1337,&#34;playerName&#34;:&#34;Sean Plott&#34;,&#34;cheatMode&#34;:false}&#39; \&#xA;http://localhost:1337/parse/classes/GameScore&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should get a response similar to this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{&#xA;  &#34;objectId&#34;: &#34;2ntvSpRGIK&#34;,&#xA;  &#34;createdAt&#34;: &#34;2016-03-11T23:51:48.050Z&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now retrieve this object directly (make sure to replace &lt;code&gt;2ntvSpRGIK&lt;/code&gt; with the actual &lt;code&gt;objectId&lt;/code&gt; you received when the object was created):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -X GET \&#xA;  -H &#34;X-Parse-Application-Id: APPLICATION_ID&#34; \&#xA;  http://localhost:1337/parse/classes/GameScore/2ntvSpRGIK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;// Response&#xA;{&#xA;  &#34;objectId&#34;: &#34;2ntvSpRGIK&#34;,&#xA;  &#34;score&#34;: 1337,&#xA;  &#34;playerName&#34;: &#34;Sean Plott&#34;,&#xA;  &#34;cheatMode&#34;: false,&#xA;  &#34;updatedAt&#34;: &#34;2016-03-11T23:51:48.050Z&#34;,&#xA;  &#34;createdAt&#34;: &#34;2016-03-11T23:51:48.050Z&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Keeping tracks of individual object ids is not ideal, however. In most cases you will want to run a query over the collection, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -X GET \&#xA;  -H &#34;X-Parse-Application-Id: APPLICATION_ID&#34; \&#xA;  http://localhost:1337/parse/classes/GameScore&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;// The response will provide all the matching objects within the `results` array:&#xA;{&#xA;  &#34;results&#34;: [&#xA;    {&#xA;      &#34;objectId&#34;: &#34;2ntvSpRGIK&#34;,&#xA;      &#34;score&#34;: 1337,&#xA;      &#34;playerName&#34;: &#34;Sean Plott&#34;,&#xA;      &#34;cheatMode&#34;: false,&#xA;      &#34;updatedAt&#34;: &#34;2016-03-11T23:51:48.050Z&#34;,&#xA;      &#34;createdAt&#34;: &#34;2016-03-11T23:51:48.050Z&#34;&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To learn more about using saving and querying objects on Parse Server, check out the &lt;a href=&#34;http://docs.parseplatform.org&#34;&gt;Parse documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Connect an SDK&lt;/h3&gt; &#xA;&lt;p&gt;Parse provides SDKs for all the major platforms. Refer to the Parse Server guide to &lt;a href=&#34;https://docs.parseplatform.org/parse-server/guide/#using-parse-sdks-with-parse-server&#34;&gt;learn how to connect your app to Parse Server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running Parse Server elsewhere&lt;/h2&gt; &#xA;&lt;p&gt;Once you have a better understanding of how the project works, please refer to the &lt;a href=&#34;https://github.com/parse-community/parse-server/wiki&#34;&gt;Parse Server wiki&lt;/a&gt; for in-depth guides to deploy Parse Server to major infrastructure providers. Read on to learn more about additional ways of running Parse Server.&lt;/p&gt; &#xA;&lt;h3&gt;Sample Application&lt;/h3&gt; &#xA;&lt;p&gt;We have provided a basic &lt;a href=&#34;https://github.com/parse-community/parse-server-example&#34;&gt;Node.js application&lt;/a&gt; that uses the Parse Server module on Express and can be easily deployed to various infrastructure providers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devcenter.heroku.com/articles/deploying-a-parse-server-to-heroku&#34;&gt;Heroku and mLab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mobile.awsblog.com/post/TxCD57GZLM2JR/How-to-set-up-Parse-Server-on-AWS-using-AWS-Elastic-Beanstalk&#34;&gt;AWS and Elastic Beanstalk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@justinbeckwith/deploying-parse-server-to-google-app-engine-6bc0b7451d50&#34;&gt;Google App Engine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://azure.microsoft.com/en-us/blog/azure-welcomes-parse-developers/&#34;&gt;Microsoft Azure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.sashido.io/tag/migration/&#34;&gt;SashiDo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-run-parse-server-on-ubuntu-14-04&#34;&gt;Digital Ocean&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cf-platform-eng/pws-parse-server&#34;&gt;Pivotal Web Services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.back4app.com/docs/get-started/welcome&#34;&gt;Back4app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://glitch.com/edit/#!/parse-server&#34;&gt;Glitch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flynn.io/blog/parse-apps-on-flynn&#34;&gt;Flynn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Parse Server + Express&lt;/h3&gt; &#xA;&lt;p&gt;You can also create an instance of Parse Server, and mount it on a new or existing Express website:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var express = require(&#39;express&#39;);&#xA;var ParseServer = require(&#39;parse-server&#39;).ParseServer;&#xA;var app = express();&#xA;&#xA;var api = new ParseServer({&#xA;  databaseURI: &#39;mongodb://localhost:27017/dev&#39;, // Connection string for your MongoDB database&#xA;  cloud: &#39;./cloud/main.js&#39;, // Path to your Cloud Code&#xA;  appId: &#39;myAppId&#39;,&#xA;  masterKey: &#39;myMasterKey&#39;, // Keep this key secret!&#xA;  fileKey: &#39;optionalFileKey&#39;,&#xA;  serverURL: &#39;http://localhost:1337/parse&#39; // Don&#39;t forget to change to https if needed&#xA;});&#xA;&#xA;// Serve the Parse API on the /parse URL prefix&#xA;app.use(&#39;/parse&#39;, api);&#xA;&#xA;app.listen(1337, function() {&#xA;  console.log(&#39;parse-server-example running on port 1337.&#39;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a full list of available options, run &lt;code&gt;parse-server --help&lt;/code&gt; or take a look at &lt;a href=&#34;http://parseplatform.org/parse-server/api/master/ParseServerOptions.html&#34;&gt;Parse Server Configurations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;p&gt;Parse Server can be configured using the following options. You may pass these as parameters when running a standalone &lt;code&gt;parse-server&lt;/code&gt;, or by loading a configuration file in JSON format using &lt;code&gt;parse-server path/to/configuration.json&lt;/code&gt;. If you&#39;re using Parse Server on Express, you may also pass these to the &lt;code&gt;ParseServer&lt;/code&gt; object as options.&lt;/p&gt; &#xA;&lt;p&gt;For the full list of available options, run &lt;code&gt;parse-server --help&lt;/code&gt; or take a look at &lt;a href=&#34;http://parseplatform.org/parse-server/api/master/ParseServerOptions.html&#34;&gt;Parse Server Configurations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Basic Options&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;appId&lt;/code&gt; &lt;strong&gt;(required)&lt;/strong&gt; - The application id to host with this server instance. You can use any arbitrary string. For migrated apps, this should match your hosted Parse app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;masterKey&lt;/code&gt; &lt;strong&gt;(required)&lt;/strong&gt; - The master key to use for overriding ACL security. You can use any arbitrary string. Keep it secret! For migrated apps, this should match your hosted Parse app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;databaseURI&lt;/code&gt; &lt;strong&gt;(required)&lt;/strong&gt; - The connection string for your database, i.e. &lt;code&gt;mongodb://user:pass@host.com/dbname&lt;/code&gt;. Be sure to &lt;a href=&#34;https://app.zencoder.com/docs/guides/getting-started/special-characters-in-usernames-and-passwords&#34;&gt;URL encode your password&lt;/a&gt; if your password has special characters.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;port&lt;/code&gt; - The default port is 1337, specify this parameter to use a different port.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;serverURL&lt;/code&gt; - URL to your Parse Server (don&#39;t forget to specify http:// or https://). This URL will be used when making requests to Parse Server from Cloud Code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cloud&lt;/code&gt; - The absolute path to your cloud code &lt;code&gt;main.js&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;push&lt;/code&gt; - Configuration options for APNS and GCM push. See the &lt;a href=&#34;https://docs.parseplatform.org/parse-server/guide/#push-notifications-quick-start&#34;&gt;Push Notifications quick start&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Client Key Options&lt;/h2&gt; &#xA;&lt;p&gt;The client keys used with Parse are no longer necessary with Parse Server. If you wish to still require them, perhaps to be able to refuse access to older clients, you can set the keys at initialization time. Setting any of these keys will require all requests to provide one of the configured keys.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;clientKey&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;javascriptKey&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;restAPIKey&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dotNetKey&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Email Verification and Password Reset&lt;/h2&gt; &#xA;&lt;p&gt;Verifying user email addresses and enabling password reset via email requires an email adapter. There are many email adapters provided and maintained by the community. The following is an example configuration with an example email adapter. See the &lt;a href=&#34;https://parseplatform.org/parse-server/api/master/ParseServerOptions.html&#34;&gt;Parse Server Options&lt;/a&gt; for more details and a full list of available options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const server = ParseServer({&#xA;  ...otherOptions,&#xA;&#xA;  // Enable email verification&#xA;  verifyUserEmails: true,&#xA;&#xA;  // Set email verification token validity to 2 hours&#xA;  emailVerifyTokenValidityDuration: 2 * 60 * 60,&#xA;&#xA;  // Set email adapter&#xA;  emailAdapter: {&#xA;    module: &#39;example-mail-adapter&#39;,&#xA;    options: {&#xA;      // Additional adapter options&#xA;      ...mailAdapterOptions&#xA;    }&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Email adapters contributed by the community:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/parse-server-api-mail-adapter&#34;&gt;parse-server-api-mail-adapter&lt;/a&gt; (localization, templates, universally supports any email provider)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/parse-smtp-template&#34;&gt;parse-smtp-template&lt;/a&gt; (localization, templates)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/parse-server-postmark-adapter&#34;&gt;parse-server-postmark-adapter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/parse-server-sendgrid-adapter&#34;&gt;parse-server-sendgrid-adapter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/parse-server-mandrill-adapter&#34;&gt;parse-server-mandrill-adapter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/parse-server-simple-ses-adapter&#34;&gt;parse-server-simple-ses-adapter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/parse-server-mailgun-adapter-template&#34;&gt;parse-server-mailgun-adapter-template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/parse-server-sendinblue-adapter&#34;&gt;parse-server-sendinblue-adapter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/parse-server-mailjet-adapter&#34;&gt;parse-server-mailjet-adapter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/simple-parse-smtp-adapter&#34;&gt;simple-parse-smtp-adapter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/parse-server-generic-email-adapter&#34;&gt;parse-server-generic-email-adapter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Password and Account Policy&lt;/h2&gt; &#xA;&lt;p&gt;Set a password and account policy that meets your security requirements. The following is an example configuration. See the &lt;a href=&#34;https://parseplatform.org/parse-server/api/master/ParseServerOptions.html&#34;&gt;Parse Server Options&lt;/a&gt; for more details and a full list of available options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const server = ParseServer({&#xA;  ...otherOptions,&#xA;&#xA;  // The account lock policy&#xA;  accountLockout: {&#xA;    // Lock the account for 5 minutes.&#xA;    duration: 5,&#xA;    // Lock an account after 3 failed log-in attempts&#xA;    threshold: 3,&#xA;    // Unlock the account after a successful password reset&#xA;    unlockOnPasswordReset: true,&#xA;  },&#xA;&#xA;  // The password policy&#xA;  passwordPolicy: {    &#xA;    // Enforce a password of at least 8 characters which contain at least 1 lower case, 1 upper case and 1 digit&#xA;    validatorPattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,&#xA;    // Do not allow the username as part of the password&#xA;    doNotAllowUsername: true,&#xA;    // Do not allow to re-use the last 5 passwords when setting a new password&#xA;    maxPasswordHistory: 5,&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Custom Routes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Caution, this is an experimental feature that may not be appropriate for production.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Custom routes allow to build user flows with webpages, similar to the existing password reset and email verification features. Custom routes are defined with the &lt;code&gt;pages&lt;/code&gt; option in the Parse Server configuration:&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const api = new ParseServer({&#xA;  ...otherOptions,&#xA;&#xA;  pages: {&#xA;    enableRouter: true, // Enables the experimental feature; required for custom routes&#xA;    customRoutes: [{&#xA;      method: &#39;GET&#39;,&#xA;      path: &#39;custom_route&#39;,&#xA;      handler: async request =&amp;gt; {&#xA;        // custom logic&#xA;        // ...&#xA;        // then, depending on the outcome, return a HTML file as response&#xA;        return { file: &#39;custom_page.html&#39; };&#xA;      }&#xA;    }]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above route can be invoked by sending a &lt;code&gt;GET&lt;/code&gt; request to: &lt;code&gt;https://[parseServerPublicUrl]/[parseMount]/[pagesEndpoint]/[appId]/[customRoute]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;handler&lt;/code&gt; receives the &lt;code&gt;request&lt;/code&gt; and returns a &lt;code&gt;custom_page.html&lt;/code&gt; webpage from the &lt;code&gt;pages.pagesPath&lt;/code&gt; directory as response. The advantage of building a custom route this way is that it automatically makes use of Parse Server&#39;s built-in capabilities, such as &lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#pages&#34;&gt;page localization&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/#dynamic-placeholders&#34;&gt;dynamic placeholders&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Reserved Paths&lt;/h3&gt; &#xA;&lt;p&gt;The following paths are already used by Parse Server&#39;s built-in features and are therefore not available for custom routes. Custom routes with an identical combination of &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;method&lt;/code&gt; are ignored.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Path&lt;/th&gt; &#xA;   &lt;th&gt;HTTP Method&lt;/th&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;verify_email&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;email verification&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;resend_verification_email&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;email verification&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;choose_password&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;password reset&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;request_password_reset&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;password reset&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;request_password_reset&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;password reset&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Parameters&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Optional&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Example values&lt;/th&gt; &#xA;   &lt;th&gt;Environment variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The options for pages such as password reset and email verification.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.enableRouter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_ENABLE_ROUTER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Is &lt;code&gt;true&lt;/code&gt; if the pages router should be enabled; this is required for any of the pages options to take effect. &lt;strong&gt;Caution, this is an experimental feature that may not be appropriate for production.&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customRoutes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_ROUTES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The custom routes. The routes are added in the order they are defined here, which has to be considered since requests traverse routes in an ordered manner. Custom routes are traversed after build-in routes such as password reset and email verification.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customRoutes.method&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The HTTP method of the custom route.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customRoutes.path&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;custom_page&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The path of the custom route. Note that the same path can used if the &lt;code&gt;method&lt;/code&gt; is different, for example a path &lt;code&gt;custom_page&lt;/code&gt; can have two routes, a &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; route, which will be invoked depending on the HTTP request method.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customRoutes.handler&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;async () =&amp;gt; { ... }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;The route handler that is invoked when the route matches the HTTP request. If the handler does not return a page, the request is answered with a 404 &lt;code&gt;Not found.&lt;/code&gt; response.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Custom Pages&lt;/h2&gt; &#xA;&lt;p&gt;It’s possible to change the default pages of the app and redirect the user to another path or domain.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var server = ParseServer({&#xA;  ...otherOptions,&#xA;&#xA;  customPages: {&#xA;    passwordResetSuccess: &#34;http://yourapp.com/passwordResetSuccess&#34;,&#xA;    verifyEmailSuccess: &#34;http://yourapp.com/verifyEmailSuccess&#34;,&#xA;    parseFrameURL: &#34;http://yourapp.com/parseFrameURL&#34;,&#xA;    linkSendSuccess: &#34;http://yourapp.com/linkSendSuccess&#34;,&#xA;    linkSendFail: &#34;http://yourapp.com/linkSendFail&#34;,&#xA;    invalidLink: &#34;http://yourapp.com/invalidLink&#34;,&#xA;    invalidVerificationLink: &#34;http://yourapp.com/invalidVerificationLink&#34;,&#xA;    choosePassword: &#34;http://yourapp.com/choosePassword&#34;&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using Environment Variables&lt;/h2&gt; &#xA;&lt;p&gt;You may configure the Parse Server using environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PORT&#xA;PARSE_SERVER_APPLICATION_ID&#xA;PARSE_SERVER_MASTER_KEY&#xA;PARSE_SERVER_DATABASE_URI&#xA;PARSE_SERVER_URL&#xA;PARSE_SERVER_CLOUD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default port is 1337, to use a different port set the PORT environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ PORT=8080 parse-server --appId APPLICATION_ID --masterKey MASTER_KEY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the full list of configurable environment variables, run &lt;code&gt;parse-server --help&lt;/code&gt; or take a look at &lt;a href=&#34;https://github.com/parse-community/parse-server/raw/master/src/Options/Definitions.js&#34;&gt;Parse Server Configuration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Available Adapters&lt;/h2&gt; &#xA;&lt;p&gt;All official adapters are distributed as scoped packages on &lt;a href=&#34;https://www.npmjs.com/search?q=scope%3Aparse&#34;&gt;npm (@parse)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some well maintained adapters are also available on the &lt;a href=&#34;https://github.com/parse-server-modules&#34;&gt;Parse Server Modules&lt;/a&gt; organization.&lt;/p&gt; &#xA;&lt;p&gt;You can also find more adapters maintained by the community by searching on &lt;a href=&#34;https://www.npmjs.com/search?q=parse-server%20adapter&amp;amp;page=1&amp;amp;ranking=optimal&#34;&gt;npm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuring File Adapters&lt;/h2&gt; &#xA;&lt;p&gt;Parse Server allows developers to choose from several options when hosting files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GridFSBucketAdapter&lt;/code&gt; - which is backed by MongoDB&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;S3Adapter&lt;/code&gt; - which is backed by &lt;a href=&#34;https://aws.amazon.com/s3/&#34;&gt;Amazon S3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GCSAdapter&lt;/code&gt; - which is backed by &lt;a href=&#34;https://cloud.google.com/storage/&#34;&gt;Google Cloud Storage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FSAdapter&lt;/code&gt; - local file storage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;GridFSBucketAdapter&lt;/code&gt; is used by default and requires no setup, but if you&#39;re interested in using Amazon S3, Google Cloud Storage, or local file storage, additional configuration information is available in the &lt;a href=&#34;http://docs.parseplatform.org/parse-server/guide/#configuring-file-adapters&#34;&gt;Parse Server guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Idempotency Enforcement&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Caution, this is an experimental feature that may not be appropriate for production.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This feature deduplicates identical requests that are received by Parse Server multiple times, typically due to network issues or network adapter access restrictions on mobile operating systems.&lt;/p&gt; &#xA;&lt;p&gt;Identical requests are identified by their request header &lt;code&gt;X-Parse-Request-Id&lt;/code&gt;. Therefore a client request has to include this header for deduplication to be applied. Requests that do not contain this header cannot be deduplicated and are processed normally by Parse Server. This means rolling out this feature to clients is seamless as Parse Server still processes requests without this header when this feature is enabled.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This feature needs to be enabled on the client side to send the header and on the server to process the header. Refer to the specific Parse SDK docs to see whether the feature is supported yet.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Deduplication is only done for object creation and update (&lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; requests). Deduplication is not done for object finding and deletion (&lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt; requests), as these operations are already idempotent by definition.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration example &#xA; &lt;!-- omit in toc --&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;let api = new ParseServer({&#xA;    idempotencyOptions: {&#xA;        paths: [&#34;.*&#34;],       // enforce for all requests&#xA;        ttl: 120             // keep request IDs for 120s&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Parameters &#xA; &lt;!-- omit in toc --&gt;&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Optional&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Example values&lt;/th&gt; &#xA;   &lt;th&gt;Environment variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;idempotencyOptions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_OPTIONS&lt;/td&gt; &#xA;   &lt;td&gt;Setting this enables idempotency enforcement for the specified paths.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;idempotencyOptions.paths&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Array&amp;lt;String&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.*&lt;/code&gt; (all paths, includes the examples below), &lt;br&gt;&lt;code&gt;functions/.*&lt;/code&gt; (all functions), &lt;br&gt;&lt;code&gt;jobs/.*&lt;/code&gt; (all jobs), &lt;br&gt;&lt;code&gt;classes/.*&lt;/code&gt; (all classes), &lt;br&gt;&lt;code&gt;functions/.*&lt;/code&gt; (all functions), &lt;br&gt;&lt;code&gt;users&lt;/code&gt; (user creation / update), &lt;br&gt;&lt;code&gt;installations&lt;/code&gt; (installation creation / update)&lt;/td&gt; &#xA;   &lt;td&gt;PARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_PATHS&lt;/td&gt; &#xA;   &lt;td&gt;An array of path patterns that have to match the request path for request deduplication to be enabled. The mount path must not be included, for example to match the request path &lt;code&gt;/parse/functions/myFunction&lt;/code&gt; specify the path pattern &lt;code&gt;functions/myFunction&lt;/code&gt;. A trailing slash of the request path is ignored, for example the path pattern &lt;code&gt;functions/myFunction&lt;/code&gt; matches both &lt;code&gt;/parse/functions/myFunction&lt;/code&gt; and &lt;code&gt;/parse/functions/myFunction/&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;idempotencyOptions.ttl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;60&lt;/code&gt; (60 seconds)&lt;/td&gt; &#xA;   &lt;td&gt;PARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_TTL&lt;/td&gt; &#xA;   &lt;td&gt;The duration in seconds after which a request record is discarded from the database. Duplicate requests due to network issues can be expected to arrive within milliseconds up to several seconds. This value must be greater than &lt;code&gt;0&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Postgres &#xA; &lt;!-- omit in toc --&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To use this feature in Postgres, you will need to create a cron job using &lt;a href=&#34;https://www.pgadmin.org/docs/pgadmin4/development/pgagent_jobs.html&#34;&gt;pgAdmin&lt;/a&gt; or similar to call the Postgres function &lt;code&gt;idempotency_delete_expired_records()&lt;/code&gt; that deletes expired idempotency records. You can find an example script below. Make sure the script has the same privileges to log into Postgres as Parse Server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash&#xA;&#xA;set -e&#xA;psql -v ON_ERROR_STOP=1 --username &#34;$POSTGRES_USER&#34; --dbname &#34;$POSTGRES_DB&#34; &amp;lt;&amp;lt;-EOSQL&#xA;    SELECT idempotency_delete_expired_records();&#xA;EOSQL&#xA;&#xA;exec &#34;$@&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Assuming the script above is named, &lt;code&gt;parse_idempotency_delete_expired_records.sh&lt;/code&gt;, a cron job that runs the script every 2 minutes may look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;2 * * * * /root/parse_idempotency_delete_expired_records.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;h3&gt;Pages&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Caution, this is an experimental feature that may not be appropriate for production.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Custom pages as well as feature pages (e.g. password reset, email verification) can be localized with the &lt;code&gt;pages&lt;/code&gt; option in the Parse Server configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const api = new ParseServer({&#xA;  ...otherOptions,&#xA;&#xA;  pages: {&#xA;    enableRouter: true, // Enables the experimental feature; required for localization&#xA;    enableLocalization: true,&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Localization is achieved by matching a request-supplied &lt;code&gt;locale&lt;/code&gt; parameter with localized page content. The locale can be supplied in either the request query, body or header with the following keys:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;query: &lt;code&gt;locale&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;body: &lt;code&gt;locale&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;header: &lt;code&gt;x-parse-page-param-locale&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, a password reset link with the locale parameter in the query could look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://example.com/parse/apps/[appId]/request_password_reset?token=[token]&amp;amp;username=[username]&amp;amp;locale=de-AT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Localization is only available for pages in the pages directory as set with &lt;code&gt;pages.pagesPath&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Localization for feature pages (e.g. password reset, email verification) is disabled if &lt;code&gt;pages.customUrls&lt;/code&gt; are set, even if the custom URLs point to the pages within the pages path.&lt;/li&gt; &#xA; &lt;li&gt;Only &lt;code&gt;.html&lt;/code&gt; files are considered for localization when localizing custom pages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Pages can be localized in two ways:&lt;/p&gt; &#xA;&lt;h4&gt;Localization with Directory Structure&lt;/h4&gt; &#xA;&lt;p&gt;Pages are localized by using the corresponding file in the directory structure where the files are placed in subdirectories named after the locale or language. The file in the base directory is the default file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example Directory Structure:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;root/&#xA;├── public/                  // pages base path&#xA;│   ├── example.html         // default file&#xA;│   └── de/                  // de language folder&#xA;│   │   └── example.html     // de localized file&#xA;│   └── de-AT/               // de-AT locale folder&#xA;│   │   └── example.html     // de-AT localized file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Files are matched with the locale in the following order:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Locale match, e.g. locale &lt;code&gt;de-AT&lt;/code&gt; matches file in folder &lt;code&gt;de-AT&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Language match, e.g. locale &lt;code&gt;de-CH&lt;/code&gt; matches file in folder &lt;code&gt;de&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Default; file in base folder is returned.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configuration Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const api = new ParseServer({&#xA;  ...otherOptions,&#xA;&#xA;  pages: {&#xA;    enableRouter: true, // Enables the experimental feature; required for localization&#xA;    enableLocalization: true,&#xA;    customUrls: {&#xA;      passwordReset: &#39;https://example.com/page.html&#39;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pros:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All files are complete in their content and can be easily opened and previewed by viewing the file in a browser.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Cons:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In most cases, a localized page differs only slightly from the default page, which could cause a lot of duplicate code that is difficult to maintain.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Localization with JSON Resource&lt;/h4&gt; &#xA;&lt;p&gt;Pages are localized by adding placeholders in the HTML files and providing a JSON resource that contains the translations to fill into the placeholders.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example Directory Structure:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;root/&#xA;├── public/                  // pages base path&#xA;│   ├── example.html         // the page containing placeholders&#xA;├── private/                 // folder outside of public scope&#xA;│   └── translations.json    // JSON resource file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The JSON resource file loosely follows the &lt;a href=&#34;https://github.com/i18next/i18next&#34;&gt;i18next&lt;/a&gt; syntax, which is a syntax that is often supported by translation platforms, making it easy to manage translations, exporting them for use in Parse Server, and even to automate this workflow.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example JSON Content:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;en&#34;: {               // resource for language `en` (English)&#xA;    &#34;translation&#34;: {&#xA;      &#34;greeting&#34;: &#34;Hello!&#34;&#xA;    }&#xA;  },&#xA;  &#34;de&#34;: {               // resource for language `de` (German)&#xA;    &#34;translation&#34;: {&#xA;      &#34;greeting&#34;: &#34;Hallo!&#34;&#xA;    }&#xA;  }&#xA;  &#34;de-AT&#34;: {            // resource for locale `de-AT` (Austrian German)&#xA;    &#34;translation&#34;: {&#xA;      &#34;greeting&#34;: &#34;Servus!&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configuration Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const api = new ParseServer({&#xA;  ...otherOptions,&#xA;&#xA;  pages: {&#xA;    enableRouter: true, // Enables the experimental feature; required for localization&#xA;    enableLocalization: true,&#xA;    localizationJsonPath: &#39;./private/localization.json&#39;,&#xA;    localizationFallbackLocale: &#39;en&#39;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pros:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There is only one HTML file to maintain that contains the placeholders that are filled with the translations according to the locale.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Cons:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Files cannot be easily previewed by viewing the file in a browser because the content contains only placeholders and even HTML or CSS changes may be dynamically applied, e.g. when a localization requires a Right-To-Left layout direction.&lt;/li&gt; &#xA; &lt;li&gt;Style and other fundamental layout changes may be more difficult to apply.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Dynamic placeholders&lt;/h4&gt; &#xA;&lt;p&gt;In addition to feature related default parameters such as &lt;code&gt;appId&lt;/code&gt; and the translations provided via JSON resource, it is possible to define custom dynamic placeholders as part of the router configuration. This works independently of localization and, also if &lt;code&gt;enableLocalization&lt;/code&gt; is disabled.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configuration Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const api = new ParseServer({&#xA;  ...otherOptions,&#xA;&#xA;  pages: {&#xA;    enableRouter: true, // Enables the experimental feature; required for localization&#xA;    placeholders: {&#xA;      exampleKey: &#39;exampleValue&#39;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The placeholders can also be provided as function or as async function, with the &lt;code&gt;locale&lt;/code&gt; and other feature related parameters passed through, to allow for dynamic placeholder values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const api = new ParseServer({&#xA;  ...otherOptions,&#xA;&#xA;  pages: {&#xA;    enableRouter: true, // Enables the experimental feature; required for localization&#xA;    placeholders: async (params) =&amp;gt; {&#xA;      const value = await doSomething(params.locale);&#xA;      return {&#xA;        exampleKey: value&#xA;      };&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Reserved Keys&lt;/h4&gt; &#xA;&lt;p&gt;The following parameter and placeholder keys are reserved because they are used related to features such as password reset or email verification. They should not be used as translation keys in the JSON resource or as manually defined placeholder keys in the configuration: &lt;code&gt;appId&lt;/code&gt;, &lt;code&gt;appName&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;locale&lt;/code&gt;, &lt;code&gt;publicServerUrl&lt;/code&gt;, &lt;code&gt;token&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Parameters&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Optional&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Example values&lt;/th&gt; &#xA;   &lt;th&gt;Environment variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The options for pages such as password reset and email verification.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.enableRouter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_ENABLE_ROUTER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Is &lt;code&gt;true&lt;/code&gt; if the pages router should be enabled; this is required for any of the pages options to take effect. &lt;strong&gt;Caution, this is an experimental feature that may not be appropriate for production.&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.enableLocalization&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_ENABLE_LOCALIZATION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Is true if pages should be localized; this has no effect on custom page redirects.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.localizationJsonPath&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;./private/translations.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_LOCALIZATION_JSON_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The path to the JSON file for localization; the translations will be used to fill template placeholders according to the locale.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.localizationFallbackLocale&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;, &lt;code&gt;en-GB&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_LOCALIZATION_FALLBACK_LOCALE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The fallback locale for localization if no matching translation is provided for the given locale. This is only relevant when providing translation resources via JSON file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.placeholders&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{ exampleKey: &#39;exampleValue&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_PLACEHOLDERS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The placeholder keys and values which will be filled in pages; this can be a simple object or a callback function.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.forceRedirect&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_FORCE_REDIRECT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Is &lt;code&gt;true&lt;/code&gt; if responses should always be redirects and never content, &lt;code&gt;false&lt;/code&gt; if the response type should depend on the request type (&lt;code&gt;GET&lt;/code&gt; request -&amp;gt; content response; &lt;code&gt;POST&lt;/code&gt; request -&amp;gt; redirect response).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.pagesPath&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;./public&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;./files/pages&lt;/code&gt;, &lt;code&gt;../../pages&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_PAGES_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The path to the pages directory; this also defines where the static endpoint &lt;code&gt;/apps&lt;/code&gt; points to.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.pagesEndpoint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;apps&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_PAGES_ENDPOINT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The API endpoint for the pages.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customUrls&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{ passwordReset: &#39;https://example.com/page.html&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URLS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The URLs to the custom pages&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customUrls.passwordReset&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;password_reset.html&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_PASSWORD_RESET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The URL to the custom page for password reset.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customUrls.passwordResetSuccess&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;password_reset_success.html&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_PASSWORD_RESET_SUCCESS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The URL to the custom page for password reset -&amp;gt; success.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customUrls.passwordResetLinkInvalid&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;password_reset_link_invalid.html&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_PASSWORD_RESET_LINK_INVALID&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The URL to the custom page for password reset -&amp;gt; link invalid.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customUrls.emailVerificationSuccess&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;email_verification_success.html&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_SUCCESS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The URL to the custom page for email verification -&amp;gt; success.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customUrls.emailVerificationSendFail&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;email_verification_send_fail.html&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_SEND_FAIL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The URL to the custom page for email verification -&amp;gt; link send fail.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customUrls.emailVerificationSendSuccess&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;email_verification_send_success.html&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_SEND_SUCCESS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The URL to the custom page for email verification -&amp;gt; resend link -&amp;gt; success.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customUrls.emailVerificationLinkInvalid&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;email_verification_link_invalid.html&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_LINK_INVALID&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The URL to the custom page for email verification -&amp;gt; link invalid.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pages.customUrls.emailVerificationLinkExpired&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;email_verification_link_expired.html&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_LINK_EXPIRED&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The URL to the custom page for email verification -&amp;gt; link expired.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Notes &#xA; &lt;!-- omit in toc --&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In combination with the &lt;a href=&#34;https://www.npmjs.com/package/parse-server-api-mail-adapter&#34;&gt;Parse Server API Mail Adapter&lt;/a&gt; Parse Server provides a fully localized flow (emails -&amp;gt; pages) for the user. The email adapter sends a localized email and adds a locale parameter to the password reset or email verification link, which is then used to respond with localized pages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;p&gt;Parse Server will, by default, log:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;to the console&lt;/li&gt; &#xA; &lt;li&gt;daily rotating files as new line delimited JSON&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Logs are also viewable in Parse Dashboard.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Want to log each request and response?&lt;/strong&gt; Set the &lt;code&gt;VERBOSE&lt;/code&gt; environment variable when starting &lt;code&gt;parse-server&lt;/code&gt;. Usage :- &lt;code&gt;VERBOSE=&#39;1&#39; parse-server --appId APPLICATION_ID --masterKey MASTER_KEY&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Want logs to be placed in a different folder?&lt;/strong&gt; Pass the &lt;code&gt;PARSE_SERVER_LOGS_FOLDER&lt;/code&gt; environment variable when starting &lt;code&gt;parse-server&lt;/code&gt;. Usage :- &lt;code&gt;PARSE_SERVER_LOGS_FOLDER=&#39;&amp;lt;path-to-logs-folder&amp;gt;&#39; parse-server --appId APPLICATION_ID --masterKey MASTER_KEY&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Want to log specific levels?&lt;/strong&gt; Pass the &lt;code&gt;logLevel&lt;/code&gt; parameter when starting &lt;code&gt;parse-server&lt;/code&gt;. Usage :- &lt;code&gt;parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --logLevel LOG_LEVEL&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Want new line delimited JSON error logs (for consumption by CloudWatch, Google Cloud Logging, etc)?&lt;/strong&gt; Pass the &lt;code&gt;JSON_LOGS&lt;/code&gt; environment variable when starting &lt;code&gt;parse-server&lt;/code&gt;. Usage :- &lt;code&gt;JSON_LOGS=&#39;1&#39; parse-server --appId APPLICATION_ID --masterKey MASTER_KEY&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Deprecations&lt;/h1&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/parse-community/parse-server/raw/master/DEPRECATIONS.md&#34;&gt;Deprecation Plan&lt;/a&gt; for an overview of deprecations and planned breaking changes.&lt;/p&gt; &#xA;&lt;h1&gt;Live Query&lt;/h1&gt; &#xA;&lt;p&gt;Live queries are meant to be used in real-time reactive applications, where just using the traditional query paradigm could cause several problems, like increased response time and high network and server usage. Live queries should be used in cases where you need to continuously update a page with fresh data coming from the database, which often happens in (but is not limited to) online games, messaging clients and shared to-do lists.&lt;/p&gt; &#xA;&lt;p&gt;Take a look at &lt;a href=&#34;https://docs.parseplatform.org/parse-server/guide/#live-queries&#34;&gt;Live Query Guide&lt;/a&gt;, &lt;a href=&#34;https://docs.parseplatform.org/parse-server/guide/#scalability&#34;&gt;Live Query Server Setup Guide&lt;/a&gt; and &lt;a href=&#34;https://github.com/parse-community/parse-server/wiki/Parse-LiveQuery-Protocol-Specification&#34;&gt;Live Query Protocol Specification&lt;/a&gt;. You can setup a standalone server or multiple instances for scalability (recommended).&lt;/p&gt; &#xA;&lt;h1&gt;GraphQL&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://graphql.org/&#34;&gt;GraphQL&lt;/a&gt;, developed by Facebook, is an open-source data query and manipulation language for APIs. In addition to the traditional REST API, Parse Server automatically generates a GraphQL API based on your current application schema. Parse Server also allows you to define your custom GraphQL queries and mutations, whose resolvers can be bound to your cloud code functions.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;h3&gt;Using the CLI&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to run the Parse GraphQL API is through the CLI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install -g parse-server mongodb-runner&#xA;$ mongodb-runner start&#xA;$ parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://localhost/test --publicServerURL http://localhost:1337/parse --mountGraphQL --mountPlayground&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After starting the server, you can visit &lt;a href=&#34;http://localhost:1337/playground&#34;&gt;http://localhost:1337/playground&lt;/a&gt; in your browser to start playing with your GraphQL API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; Do &lt;em&gt;&lt;strong&gt;NOT&lt;/strong&gt;&lt;/em&gt; use --mountPlayground option in production. &lt;a href=&#34;https://github.com/parse-community/parse-dashboard&#34;&gt;Parse Dashboard&lt;/a&gt; has a built-in GraphQL Playground and it is the recommended option for production apps.&lt;/p&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;p&gt;You can also run the Parse GraphQL API inside a Docker container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/parse-community/parse-server&#xA;$ cd parse-server&#xA;$ docker build --tag parse-server .&#xA;$ docker run --name my-mongo -d mongo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Running the Parse Server Image &#xA; &lt;!-- omit in toc --&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --name my-parse-server --link my-mongo:mongo -v config-vol:/parse-server/config -p 1337:1337 -d parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://mongo/test --publicServerURL http://localhost:1337/parse --mountGraphQL --mountPlayground&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;If you want to use &lt;a href=&#34;https://docs.parseplatform.org/cloudcode/guide/&#34;&gt;Cloud Code&lt;/a&gt;, add &lt;code&gt;-v cloud-code-vol:/parse-server/cloud --cloud /parse-server/cloud/main.js&lt;/code&gt; to the command above. Make sure &lt;code&gt;main.js&lt;/code&gt; is in the &lt;code&gt;cloud-code-vol&lt;/code&gt; directory before starting Parse Server.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;After starting the server, you can visit &lt;a href=&#34;http://localhost:1337/playground&#34;&gt;http://localhost:1337/playground&lt;/a&gt; in your browser to start playing with your GraphQL API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; Do &lt;em&gt;&lt;strong&gt;NOT&lt;/strong&gt;&lt;/em&gt; use --mountPlayground option in production. &lt;a href=&#34;https://github.com/parse-community/parse-dashboard&#34;&gt;Parse Dashboard&lt;/a&gt; has a built-in GraphQL Playground and it is the recommended option for production apps.&lt;/p&gt; &#xA;&lt;h3&gt;Using Express.js&lt;/h3&gt; &#xA;&lt;p&gt;You can also mount the GraphQL API in an Express.js application together with the REST API or solo. You first need to create a new project and install the required dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkdir my-app&#xA;$ cd my-app&#xA;$ npm install parse-server express --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, create an &lt;code&gt;index.js&lt;/code&gt; file with the following content:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const express = require(&#39;express&#39;);&#xA;const { default: ParseServer, ParseGraphQLServer } = require(&#39;parse-server&#39;);&#xA;&#xA;const app = express();&#xA;&#xA;const parseServer = new ParseServer({&#xA;  databaseURI: &#39;mongodb://localhost:27017/test&#39;,&#xA;  appId: &#39;APPLICATION_ID&#39;,&#xA;  masterKey: &#39;MASTER_KEY&#39;,&#xA;  serverURL: &#39;http://localhost:1337/parse&#39;,&#xA;  publicServerURL: &#39;http://localhost:1337/parse&#39;&#xA;});&#xA;&#xA;const parseGraphQLServer = new ParseGraphQLServer(&#xA;  parseServer,&#xA;  {&#xA;    graphQLPath: &#39;/graphql&#39;,&#xA;    playgroundPath: &#39;/playground&#39;&#xA;  }&#xA;);&#xA;&#xA;app.use(&#39;/parse&#39;, parseServer.app); // (Optional) Mounts the REST API&#xA;parseGraphQLServer.applyGraphQL(app); // Mounts the GraphQL API&#xA;parseGraphQLServer.applyPlayground(app); // (Optional) Mounts the GraphQL Playground - do NOT use in Production&#xA;&#xA;app.listen(1337, function() {&#xA;  console.log(&#39;REST API running on http://localhost:1337/parse&#39;);&#xA;  console.log(&#39;GraphQL API running on http://localhost:1337/graphql&#39;);&#xA;  console.log(&#39;GraphQL Playground running on http://localhost:1337/playground&#39;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And finally start your app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npx mongodb-runner start&#xA;$ node index.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After starting the app, you can visit &lt;a href=&#34;http://localhost:1337/playground&#34;&gt;http://localhost:1337/playground&lt;/a&gt; in your browser to start playing with your GraphQL API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; Do &lt;em&gt;&lt;strong&gt;NOT&lt;/strong&gt;&lt;/em&gt; mount the GraphQL Playground in production. &lt;a href=&#34;https://github.com/parse-community/parse-dashboard&#34;&gt;Parse Dashboard&lt;/a&gt; has a built-in GraphQL Playground and it is the recommended option for production apps.&lt;/p&gt; &#xA;&lt;h2&gt;Checking the API health&lt;/h2&gt; &#xA;&lt;p&gt;Run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-graphql&#34;&gt;query Health {&#xA;  health&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should receive the following response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;data&#34;: {&#xA;    &#34;health&#34;: true&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Creating your first class&lt;/h2&gt; &#xA;&lt;p&gt;Since your application does not have any schema yet, you can use the &lt;code&gt;createClass&lt;/code&gt; mutation to create your first class. Run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-graphql&#34;&gt;mutation CreateClass {&#xA;  createClass(&#xA;    name: &#34;GameScore&#34;&#xA;    schemaFields: {&#xA;      addStrings: [{ name: &#34;playerName&#34; }]&#xA;      addNumbers: [{ name: &#34;score&#34; }]&#xA;      addBooleans: [{ name: &#34;cheatMode&#34; }]&#xA;    }&#xA;  ) {&#xA;    name&#xA;    schemaFields {&#xA;      name&#xA;      __typename&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should receive the following response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;data&#34;: {&#xA;    &#34;createClass&#34;: {&#xA;      &#34;name&#34;: &#34;GameScore&#34;,&#xA;      &#34;schemaFields&#34;: [&#xA;        {&#xA;          &#34;name&#34;: &#34;objectId&#34;,&#xA;          &#34;__typename&#34;: &#34;SchemaStringField&#34;&#xA;        },&#xA;        {&#xA;          &#34;name&#34;: &#34;updatedAt&#34;,&#xA;          &#34;__typename&#34;: &#34;SchemaDateField&#34;&#xA;        },&#xA;        {&#xA;          &#34;name&#34;: &#34;createdAt&#34;,&#xA;          &#34;__typename&#34;: &#34;SchemaDateField&#34;&#xA;        },&#xA;        {&#xA;          &#34;name&#34;: &#34;playerName&#34;,&#xA;          &#34;__typename&#34;: &#34;SchemaStringField&#34;&#xA;        },&#xA;        {&#xA;          &#34;name&#34;: &#34;score&#34;,&#xA;          &#34;__typename&#34;: &#34;SchemaNumberField&#34;&#xA;        },&#xA;        {&#xA;          &#34;name&#34;: &#34;cheatMode&#34;,&#xA;          &#34;__typename&#34;: &#34;SchemaBooleanField&#34;&#xA;        },&#xA;        {&#xA;          &#34;name&#34;: &#34;ACL&#34;,&#xA;          &#34;__typename&#34;: &#34;SchemaACLField&#34;&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using automatically generated operations&lt;/h2&gt; &#xA;&lt;p&gt;Parse Server learned from the first class that you created and now you have the &lt;code&gt;GameScore&lt;/code&gt; class in your schema. You can now start using the automatically generated operations!&lt;/p&gt; &#xA;&lt;p&gt;Run the following to create your first object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-graphql&#34;&gt;mutation CreateGameScore {&#xA;  createGameScore(&#xA;    fields: {&#xA;      playerName: &#34;Sean Plott&#34;&#xA;      score: 1337&#xA;      cheatMode: false&#xA;    }&#xA;  ) {&#xA;    id&#xA;    updatedAt&#xA;    createdAt&#xA;    playerName&#xA;    score&#xA;    cheatMode&#xA;    ACL&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should receive a response similar to this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;data&#34;: {&#xA;    &#34;createGameScore&#34;: {&#xA;      &#34;id&#34;: &#34;XN75D94OBD&#34;,&#xA;      &#34;updatedAt&#34;: &#34;2019-09-17T06:50:26.357Z&#34;,&#xA;      &#34;createdAt&#34;: &#34;2019-09-17T06:50:26.357Z&#34;,&#xA;      &#34;playerName&#34;: &#34;Sean Plott&#34;,&#xA;      &#34;score&#34;: 1337,&#xA;      &#34;cheatMode&#34;: false,&#xA;      &#34;ACL&#34;: null&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also run a query to this new class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-graphql&#34;&gt;query GameScores {&#xA;  gameScores {&#xA;    results {&#xA;      id&#xA;      updatedAt&#xA;      createdAt&#xA;      playerName&#xA;      score&#xA;      cheatMode&#xA;      ACL&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should receive a response similar to this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;data&#34;: {&#xA;    &#34;gameScores&#34;: {&#xA;      &#34;results&#34;: [&#xA;        {&#xA;          &#34;id&#34;: &#34;XN75D94OBD&#34;,&#xA;          &#34;updatedAt&#34;: &#34;2019-09-17T06:50:26.357Z&#34;,&#xA;          &#34;createdAt&#34;: &#34;2019-09-17T06:50:26.357Z&#34;,&#xA;          &#34;playerName&#34;: &#34;Sean Plott&#34;,&#xA;          &#34;score&#34;: 1337,&#xA;          &#34;cheatMode&#34;: false,&#xA;          &#34;ACL&#34;: null&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customizing your GraphQL Schema&lt;/h2&gt; &#xA;&lt;p&gt;Parse GraphQL Server allows you to create a custom GraphQL schema with own queries and mutations to be merged with the auto-generated ones. You can resolve these operations using your regular cloud code functions.&lt;/p&gt; &#xA;&lt;p&gt;To start creating your custom schema, you need to code a &lt;code&gt;schema.graphql&lt;/code&gt; file and initialize Parse Server with &lt;code&gt;--graphQLSchema&lt;/code&gt; and &lt;code&gt;--cloud&lt;/code&gt; options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://localhost/test --publicServerURL http://localhost:1337/parse --cloud ./cloud/main.js --graphQLSchema ./cloud/schema.graphql --mountGraphQL --mountPlayground&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating your first custom query &#xA; &lt;!-- omit in toc --&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Use the code below for your &lt;code&gt;schema.graphql&lt;/code&gt; and &lt;code&gt;main.js&lt;/code&gt; files. Then restart your Parse Server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-graphql&#34;&gt;# schema.graphql&#xA;extend type Query {&#xA;  hello: String! @resolve&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// main.js&#xA;Parse.Cloud.define(&#39;hello&#39;, async () =&amp;gt; {&#xA;  return &#39;Hello world!&#39;;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now run your custom query using GraphQL Playground:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-graphql&#34;&gt;query {&#xA;  hello&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should receive the response below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;data&#34;: {&#xA;    &#34;hello&#34;: &#34;Hello world!&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Learning more&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;http://docs.parseplatform.org/graphql/guide/&#34;&gt;Parse GraphQL Guide&lt;/a&gt; is a very good source for learning how to use the Parse GraphQL API.&lt;/p&gt; &#xA;&lt;p&gt;You also have a very powerful tool inside your GraphQL Playground. Please look at the right side of your GraphQL Playground. You will see the &lt;code&gt;DOCS&lt;/code&gt; and &lt;code&gt;SCHEMA&lt;/code&gt; menus. They are automatically generated by analyzing your application schema. Please refer to them and learn more about everything that you can do with your Parse GraphQL API.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, the &lt;a href=&#34;https://graphql.org/learn/&#34;&gt;GraphQL Learn Section&lt;/a&gt; is a very good source to learn more about the power of the GraphQL language.&lt;/p&gt; &#xA;&lt;h1&gt;Upgrading to Parse Server 3.0&lt;/h1&gt; &#xA;&lt;p&gt;Starting Parse Server 3.0, Parse Server uses the Parse JavaScript SDK 2.0. In short, the Parse JavaScript SDK 2.0 removes the backbone style callbacks as well as the &lt;code&gt;Parse.Promise&lt;/code&gt; object in favor of native promises. All the Cloud Code interfaces also have been updated to reflect those changes, and all backbone style response objects are removed and replaced by promise style resolution.&lt;/p&gt; &#xA;&lt;p&gt;We have written up a &lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/3.0.0.md&#34;&gt;migration guide&lt;/a&gt; to help you transition to the next major release.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/parse-community/parse-server/alpha/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute... we&#39;d love to see your face on this list!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/parse-community/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Sponsors&lt;/h1&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. &lt;a href=&#34;https://opencollective.com/parse-server#sponsor&#34;&gt;Become a sponsor!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/parse-server/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/10/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/11/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/12/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/13/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/14/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/15/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/16/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/17/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/18/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/19/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/20/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/21/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/22/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/23/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/24/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/25/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/26/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/27/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/28/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/parse-server/sponsor/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/sponsor/29/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Backers&lt;/h1&gt; &#xA;&lt;p&gt;Support us with a monthly donation and help us continue our activities. &lt;a href=&#34;https://opencollective.com/parse-server#backer&#34;&gt;Become a backer!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/parse-server#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/parse-server/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;As of April 5, 2017, Parse, LLC has transferred this code to the parse-community organization, and will no longer be contributing to or distributing this code.&lt;/p&gt;</summary>
  </entry>
</feed>