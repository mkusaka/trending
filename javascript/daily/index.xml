<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-17T01:38:01Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MarginalClan/UniSwap-sniper-bot</title>
    <updated>2023-07-17T01:38:01Z</updated>
    <id>tag:github.com,2023-07-17:/MarginalClan/UniSwap-sniper-bot</id>
    <link href="https://github.com/MarginalClan/UniSwap-sniper-bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Optimized, fast and safe Uniswap sniping bot for buying new listings.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;This is version of UniSwap Sniper 1.0.0. It is from the July 2023 edition.&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/V4NSH4J/discord-mass-DM-GO?style=for-the-badge&amp;amp;logo=appveyor&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/V4NSH4J/discord-mass-DM-GO/total?style=for-the-badge&amp;amp;logo=appveyor&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;download&#34;&gt;&lt;/a&gt;ðŸ“Œ ã€¢ Download this version &lt;a href=&#34;https://telegra.ph/UniSwap-10-July-Edition-07-14&#34;&gt;here&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;We use BloXroute&#39;s streams to listen to liquidity add transaction and call swapExactETHForTokens on Uniswap V2/V3 Router 02 contract. By sending our transaction with the same gas price, we have a very high chance of being very close to the original transaction in the block, hence buying tokens just after liquidity add and just before the price significantly rises.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://telegra.ph/file/f387686214f8914b6505f.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Like this project? Feel free to leave a star ðŸŒŸ&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/MarginalClan/UniSwap-sniper-bot/main/#head&#34;&gt; Back to the top &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Explosion-Scratch/claude-unofficial-api</title>
    <updated>2023-07-17T01:38:01Z</updated>
    <id>tag:github.com,2023-07-17:/Explosion-Scratch/claude-unofficial-api</id>
    <link href="https://github.com/Explosion-Scratch/claude-unofficial-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unofficial API for Claude-2 via Claude Web (Also CLI)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  &lt;a href=&#34;https://github.com/explosion-scratch/claude-unofficial-api&#34;&gt;claude-unofficial-api&lt;/a&gt;&#xA; &lt;/div&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Explosion-Scratch/claude-unofficial-api/assets/61319150/6c3f706d-bddf-42e6-9745-aa1f7561ca40&#34;&gt;https://github.com/Explosion-Scratch/claude-unofficial-api/assets/61319150/6c3f706d-bddf-42e6-9745-aa1f7561ca40&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a lightweight (isomorphic, 0 dependency) JavaScript library for interacting with the &lt;a href=&#34;https://www.claude.ai/&#34;&gt;Claude AI&lt;/a&gt; chatbot&#39;s unofficial internal API. &lt;a href=&#34;https://raw.githubusercontent.com/Explosion-Scratch/claude-unofficial-api/main/#cli-installation&#34;&gt;CLI installation&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/Explosion-Scratch/claude-unofficial-api/main/#usage&#34;&gt;API installation + usage&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ðŸ’¬ Start new conversations&lt;/li&gt; &#xA; &lt;li&gt;ðŸ“Ž Upload files&lt;/li&gt; &#xA; &lt;li&gt;ðŸŒŽ Isomorphic (supposing you setup a proxy, cors make me sad)&lt;/li&gt; &#xA; &lt;li&gt;ðŸ”„ Async/await ready with modern syntax&lt;/li&gt; &#xA; &lt;li&gt;ðŸ’¾ Get and respond to existing conversations&lt;/li&gt; &#xA; &lt;li&gt;ðŸš€ Upcoming &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;CLI: Retrying responses, &lt;a href=&#34;https://arxiv.org/abs/2303.11366&#34;&gt;Reflexion&lt;/a&gt; implementation, prompt templates, auto conversation saving&lt;/li&gt; &#xA;   &lt;li&gt;API: Better error handling, automated unit tests, caching layer, searching, &lt;code&gt;setActiveModel&lt;/code&gt;, list available models, send message directly to existing conversation, hooks for events, used tokens count (percentage/raw), token estimator, available tokens for model&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;ðŸ’ª Supports all claude models (&lt;code&gt;claude-2&lt;/code&gt;, &lt;code&gt;claude-1.3&lt;/code&gt;, &lt;code&gt;claude-instant-100k&lt;/code&gt; - See &lt;code&gt;--model&lt;/code&gt; flag)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install claude-ai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CLI installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install -g claude-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Run &lt;code&gt;claude --help&lt;/code&gt; or see &lt;a href=&#34;https://raw.githubusercontent.com/Explosion-Scratch/claude-unofficial-api/main/CLI_DOCS.md&#34;&gt;CLI_DOCS.md&lt;/a&gt; for more info about the CLI&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;First, import the library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Claude = require(&#39;claude-ai&#39;); &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Initialize a new Claude instance with your session key:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Get &lt;code&gt;sessionKey&lt;/code&gt; from the &lt;code&gt;sessionKey&lt;/code&gt; cookie via the Claude website.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const claude = new Claude({&#xA;  sessionKey: &#39;YOUR_SESSION_KEY&#39; &#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start a conversation by calling &lt;code&gt;startConversation()&lt;/code&gt; with a prompt message (or get existing conversations via &lt;code&gt;.getConversations()&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const conversation = await claude.startConversation(&#39;Hello Claude!&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;Conversation&lt;/code&gt; instance exposes methods like &lt;code&gt;sendMessage()&lt;/code&gt; to continue the chat:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await conversation.sendMessage(&#39;How are you today?&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The full code would look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Claude = require(&#39;claude-ai&#39;);&#xA;&#xA;const claude = new Claude({&#xA;  sessionKey: &#39;YOUR_SESSION_KEY&#39;&#xA;});&#xA;&#xA;const conversation = await claude.startConversation(&#39;Hello Claude!&#39;);&#xA;&#xA;await conversation.sendMessage(&#39;How are you today?&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/Explosion-Scratch/claude-unofficial-api/main/#documentation&#34;&gt;documentation&lt;/a&gt; below for the full API reference.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;Claude&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The main class for interfacing with the Claude API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Constructor:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const claude_instance = new Claude({&#xA;  sessionKey: string,&#xA;  proxy: string | ({endpoint, options}) =&amp;gt; ({endpoint, options})&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If proxy is a function it will be passed the API route to fetch as well as the fetch options which can then be manipulated before running through fetch. If you&#39;re feeling adventurous you could also just modify the &lt;code&gt;claude.request&lt;/code&gt; functionnn (see source for more info)&lt;/li&gt; &#xA; &lt;li&gt;If &lt;code&gt;proxy&lt;/code&gt; is a string, it will simply be prepended before the API endpoint, example: &lt;code&gt;https://claude.ai/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sessionKey&lt;/code&gt; - Your Claude &lt;code&gt;sessionKey&lt;/code&gt; cookie&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Methods (on an instance):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;startConversation(prompt)&lt;/code&gt; - Starts a new conversation with the given prompt message&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;getConversations()&lt;/code&gt; - Gets recent conversations&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;clearConversations()&lt;/code&gt; - Clear all conversations&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;uploadFile(file)&lt;/code&gt; - Uploads a file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;Conversation&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Returned by &lt;code&gt;Claude.startConversation()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Methods:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sendMessage(message, options)&lt;/code&gt; - Sends a followup message in the conversation&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;getInfo()&lt;/code&gt; - Gets the conversation (includes messages, name, created_at, update_at, etc)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;delete()&lt;/code&gt; - Delete the conversation (returns fetch response)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;SendMessage Options:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;timezone&lt;/code&gt; - The timezone for completion&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;attachments&lt;/code&gt; - Array of file attachments&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;model&lt;/code&gt; - The Claude model to use (default: &lt;code&gt;claude-2&lt;/code&gt;, other models that I know of include &lt;code&gt;claude-1.3&lt;/code&gt;, and &lt;code&gt;claude-instant-100k&lt;/code&gt;. Seems to also accept &lt;code&gt;claude-1&lt;/code&gt; but transform it to &lt;code&gt;claude-1.3&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;done&lt;/code&gt; - Callback when completed&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;progress&lt;/code&gt; - Progress callback&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions welcome! This library was created by @Explosion-Scratch on GitHub. Please submit PRs to help improve it.&lt;/p&gt;</summary>
  </entry>
</feed>