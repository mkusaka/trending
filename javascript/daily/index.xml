<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-11T01:30:50Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nunocoracao/blowfish</title>
    <updated>2024-04-11T01:30:50Z</updated>
    <id>tag:github.com,2024-04-11:/nunocoracao/blowfish</id>
    <link href="https://github.com/nunocoracao/blowfish" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Personal Website &amp; Blog Theme for Hugo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Blowfish&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nunocoracao/blowfish/actions/workflows/firebase-production.yml&#34;&gt;&lt;img src=&#34;https://github.com/nunocoracao/blowfish/actions/workflows/firebase-production.yml/badge.svg?sanitize=true&#34; alt=&#34;Deploy Production to Firebase&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nunocoracao/blowfish/actions/workflows/pages.yml&#34;&gt;&lt;img src=&#34;https://github.com/nunocoracao/blowfish/actions/workflows/pages.yml/badge.svg?sanitize=true&#34; alt=&#34;Deploy Production to GitHub pages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.87.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=min-HUGO-version&amp;amp;message=0.87.0&amp;amp;color=blue&amp;amp;logo=hugo&#34; alt=&#34;Minimum Hugo Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nunocoracao/blowfish/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/nunocoracao/blowfish&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://themes.gohugo.io/themes/blowfish/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Hugo--Themes-@Blowfish-blue&#34; alt=&#34;Blowfish&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/languages/code-size/nunocoracao/blowfish&#34; alt=&#34;code-size&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Blowfish is designed to be a powerful, lightweight theme for &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;. It&#39;s built using Tailwind CSS with a clean and minimalist design that prioritises to your content.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nunocoracao/blowfish/raw/main/images/screenshot.png?raw=true&#34; alt=&#34;blowfish screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;üåè &lt;a href=&#34;https://blowfish.page/&#34;&gt;Demo site&lt;/a&gt;&lt;br&gt; üìë &lt;a href=&#34;https://blowfish.page/docs/&#34;&gt;Theme documentation&lt;/a&gt;&lt;br&gt; üíé &lt;a href=&#34;http://tee.pub/lic/qwSlWVBL5zc&#34;&gt;Merch Store&lt;/a&gt;&lt;br&gt; üêõ &lt;a href=&#34;https://github.com/nunocoracao/blowfish/issues&#34;&gt;Bug reports &amp;amp; issues&lt;/a&gt;&lt;br&gt; üí° &lt;a href=&#34;https://github.com/nunocoracao/blowfish/discussions&#34;&gt;Questions &amp;amp; feature requests&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/nunocoracao&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 60px !important;width: 217px !important;&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;http://tee.pub/lic/qwSlWVBL5zc&#34;&gt;&lt;img class=&#34;nozoom&#34; src=&#34;https://img.buymeacoffee.com/button-api/?text=Merch Store &amp;amp;emoji=üíé&amp;amp;slug=nunocoracao&amp;amp;button_colour=5F7FFF&amp;amp;font_colour=ffffff&amp;amp;font_family=Lato&amp;amp;outline_colour=000000&amp;amp;coffee_colour=FFDD00&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully responsive layout built with Tailwind CSS 3.0&lt;/li&gt; &#xA; &lt;li&gt;Multiple colour schemes (or fully customise your own)&lt;/li&gt; &#xA; &lt;li&gt;Dark mode (forced on/off or auto-switching with user toggle)&lt;/li&gt; &#xA; &lt;li&gt;Highly customisable configuration&lt;/li&gt; &#xA; &lt;li&gt;Firebase integration to support dynamic data&lt;/li&gt; &#xA; &lt;li&gt;Views count &amp;amp; like mechanism&lt;/li&gt; &#xA; &lt;li&gt;Related articles&lt;/li&gt; &#xA; &lt;li&gt;Multiple homepage layouts&lt;/li&gt; &#xA; &lt;li&gt;Multiple authors&lt;/li&gt; &#xA; &lt;li&gt;Series of articles&lt;/li&gt; &#xA; &lt;li&gt;Zen mode for article reading&lt;/li&gt; &#xA; &lt;li&gt;Flexible with any content types, taxonomies and menus&lt;/li&gt; &#xA; &lt;li&gt;Header and footer menus&lt;/li&gt; &#xA; &lt;li&gt;Nested menus &amp;amp; sub-navigation menu&lt;/li&gt; &#xA; &lt;li&gt;Multilingual content support including support for RTL languages&lt;/li&gt; &#xA; &lt;li&gt;Ability to link to posts on third-party websites&lt;/li&gt; &#xA; &lt;li&gt;Support for several shortcodes like Gallery, Timeline, GitHub cards, and Carousels&lt;/li&gt; &#xA; &lt;li&gt;Buymeacoffee integration&lt;/li&gt; &#xA; &lt;li&gt;Client-side site search powered by Fuse.js&lt;/li&gt; &#xA; &lt;li&gt;Diagrams and visualisations using Mermaid&lt;/li&gt; &#xA; &lt;li&gt;Charts using Chart.js&lt;/li&gt; &#xA; &lt;li&gt;TypeIt integration&lt;/li&gt; &#xA; &lt;li&gt;Youtube embeds with performance improvements&lt;/li&gt; &#xA; &lt;li&gt;Mathematical notation using KaTeX&lt;/li&gt; &#xA; &lt;li&gt;SVG icons from FontAwesome 6&lt;/li&gt; &#xA; &lt;li&gt;Automatic image resizing using Hugo Pipes&lt;/li&gt; &#xA; &lt;li&gt;Heading anchors, Tables of Contents, Code copy, Buttons, Badges and more&lt;/li&gt; &#xA; &lt;li&gt;HTML and Emoji support in articles üéâ&lt;/li&gt; &#xA; &lt;li&gt;SEO friendly with links for sharing to social media&lt;/li&gt; &#xA; &lt;li&gt;Fathom Analytics and Google Analytics support&lt;/li&gt; &#xA; &lt;li&gt;RSS feeds, Favicons and comments support&lt;/li&gt; &#xA; &lt;li&gt;Advanced customisation using simple Tailwind colour definitions and styles&lt;/li&gt; &#xA; &lt;li&gt;Optimised for performance and accessibility with perfect Lighthouse scores&lt;/li&gt; &#xA; &lt;li&gt;Fully documented with regular updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nunocoracao/blowfish/raw/main/logo.png?raw=true&#34; alt=&#34;blowfish logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Blowfish has &lt;a href=&#34;https://blowfish.page/docs/&#34;&gt;extensive documentation&lt;/a&gt; that covers all aspects of the theme. Be sure to &lt;a href=&#34;https://blowfish.page/docs/&#34;&gt;read the docs&lt;/a&gt; to learn more about how to use the theme and its features.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Blowfish supports several installation methods - as a git submodule, a Hugo Module, or as a completely manual install.&lt;/p&gt; &#xA;&lt;p&gt;Detailed instructions for each method can be found in the &lt;a href=&#34;https://blowfish.page/docs/installation&#34;&gt;Installation&lt;/a&gt; docs. You should consult the documentation for the simplest setup experience. Below is a quick start guide using submodules if you are using git, or Hugo modules if you&#39;re already confident installing Hugo themes.&lt;/p&gt; &#xA;&lt;h3&gt;Quick start using Blowfish Tools&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Ensure you have &lt;strong&gt;Node.js&lt;/strong&gt;, &lt;strong&gt;Git&lt;/strong&gt;, &lt;strong&gt;Go&lt;/strong&gt; and &lt;strong&gt;Hugo&lt;/strong&gt; installed, and that you have created a new Hugo project before proceeding.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;We just launched a new CLI tool to help you get started with Blowfish. It will create a new Hugo project, install the theme and set up the theme configuration files for you. It&#39;s still in beta so please &lt;a href=&#34;https://github.com/nunocoracao/blowfish-tools&#34;&gt;report any issues you find&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install the CLI tool globally using npm (or other package manager):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm i -g blowfish-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the command &lt;code&gt;blowfish-tools&lt;/code&gt; to start an interactive run which will guide you through creation and configuration use-cases.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;blowfish-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also run the command &lt;code&gt;blowfish-tools new&lt;/code&gt; to create a new Hugo project and install the theme in one go. Check the CLI help for more information.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;blowfish-tools new mynewsite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Quick start using git submodules&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Ensure you have &lt;strong&gt;Git&lt;/strong&gt;, &lt;strong&gt;Go&lt;/strong&gt;, and &lt;strong&gt;Hugo&lt;/strong&gt; installed, and that you have created a new Hugo project before proceeding.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;From your project directory, initialise git:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git init&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure Blowfish as a git submodule:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git submodule add -b main https://github.com/nunocoracao/blowfish.git themes/blowfish&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the root folder of your website, delete the &lt;code&gt;config.toml&lt;/code&gt; file that was generated by Hugo. Copy the &lt;code&gt;*.toml&lt;/code&gt; config files from the theme into your &lt;code&gt;config/_default/&lt;/code&gt; folder.&lt;/p&gt; &lt;p&gt;You will find these theme config files in the Hugo cache directory, or &lt;a href=&#34;https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/nunocoracao/blowfish/tree/main/config/_default&#34;&gt;download a copy&lt;/a&gt; from GitHub.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the &lt;a href=&#34;https://blowfish.page/docs/getting-started/&#34;&gt;Getting Started&lt;/a&gt; instructions to configure your website.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Quick start using Hugo&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Ensure you have &lt;strong&gt;Go&lt;/strong&gt; and &lt;strong&gt;Hugo&lt;/strong&gt; installed, and that you have created a new Hugo project before proceeding.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;From your project directory, initialise Hugo Modules:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;hugo mod init github.com/&amp;lt;username&amp;gt;/&amp;lt;repo-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create &lt;code&gt;config/_default/module.toml&lt;/code&gt; and add the following:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[imports]]&#xA;path = &#34;github.com/nunocoracao/blowfish/v2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start your server using &lt;code&gt;hugo server&lt;/code&gt; and the theme will be downloaded automatically.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the root folder of your website, delete the &lt;code&gt;config.toml&lt;/code&gt; file that was generated by Hugo. Copy the &lt;code&gt;*.toml&lt;/code&gt; config files from the theme into your &lt;code&gt;config/_default/&lt;/code&gt; folder.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Do not overwrite the &lt;code&gt;module.toml&lt;/code&gt; file you created above!&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;You will find these theme config files in the Hugo cache directory, or &lt;a href=&#34;https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/nunocoracao/blowfish/tree/main/config/_default&#34;&gt;download a copy&lt;/a&gt; from GitHub.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the &lt;a href=&#34;https://blowfish.page/docs/getting-started/&#34;&gt;Getting Started&lt;/a&gt; instructions to configure your website.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Installing theme updates&lt;/h3&gt; &#xA;&lt;p&gt;As new releases are posted, you can update the theme using Hugo. Simply run &lt;code&gt;hugo mod get -u&lt;/code&gt; from your project directory and the theme will automatically update to the latest release.&lt;/p&gt; &#xA;&lt;p&gt;Detailed &lt;a href=&#34;https://blowfish.page/docs/installation/#installing-updates&#34;&gt;update instructions&lt;/a&gt; are available in the docs.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Blowfish is expected to evolve over time. I intend to keep adding features and making changes as required.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to get in touch with any issues or suggestions for new features you&#39;d like to see.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üêõ &lt;strong&gt;Bug reports &amp;amp; issues:&lt;/strong&gt; Use &lt;a href=&#34;https://github.com/nunocoracao/blowfish/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üí° &lt;strong&gt;Ideas for new features:&lt;/strong&gt; Open a discussion on &lt;a href=&#34;https://github.com/nunocoracao/blowfish/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üôã‚Äç‚ôÄÔ∏è &lt;strong&gt;General questions:&lt;/strong&gt; Head to &lt;a href=&#34;https://github.com/nunocoracao/blowfish/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re able to fix a bug or implement a new feature, I welcome PRs for this purpose. Learn more in the &lt;a href=&#34;https://github.com/nunocoracao/blowfish/raw/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/nunocoracao/blowfish&#34;&gt;&lt;img src=&#34;https://starchart.cc/nunocoracao/blowfish.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;me&#34; href=&#34;https://masto.ai/@blowfish&#34;&gt;Mastodon&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>camwiegert/typical</title>
    <updated>2024-04-11T01:30:50Z</updated>
    <id>tag:github.com,2024-04-11:/camwiegert/typical</id>
    <link href="https://github.com/camwiegert/typical" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Animated typing in ~400 bytes üê° of JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;typical&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Animated typing in ~400 bytes &lt;span&gt;üê°&lt;/span&gt; of JavaScript.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zero dependencies&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MIT licensed&lt;/strong&gt; &lt;a href=&#34;https://github.com/camwiegert/typical/tree/master/LICENSE&#34;&gt;‚Üí&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Emoji support&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Smart delete:&lt;/strong&gt; only delete what needs deleting&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pausing:&lt;/strong&gt; pause between steps&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Looping:&lt;/strong&gt; easily loop from any point&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Waiting:&lt;/strong&gt; wait on arbitrary Promises&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Humanity:&lt;/strong&gt; slightly varied typing speed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codepen.io/camwiegert/pen/rNNepYo&#34;&gt;&lt;strong&gt;Demo ‚Üí&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codepen.io/camwiegert/pen/rNNepYo&#34; title=&#34;Demo on CodePen&#34;&gt;&lt;img src=&#34;https://repository-images.githubusercontent.com/211405607/1dd6e300-f8b2-11e9-8260-26ad1d49db17&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install @camwiegert/typical&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;More install options&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Instead of using a package manager, you can download &lt;code&gt;typical.js&lt;/code&gt; from &lt;a href=&#34;https://raw.githubusercontent.com/camwiegert/typical/master/typical.js&#34;&gt;GitHub&lt;/a&gt; and import it locally or import it directly from a CDN like &lt;a href=&#34;https://unpkg.com/@camwiegert/typical&#34;&gt;unpkg&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;type(target: HTMLElement, ...steps: any[]) =&amp;gt; Promise&amp;lt;void&amp;gt;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The module exports a single function, &lt;code&gt;type&lt;/code&gt;, which takes a target element as its first argument, and any number of additional arguments as the steps to perform. Additional arguments perform actions based on their type:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Type text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Pause (milliseconds)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;function&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Call with target element&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Wait for resolution&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The most basic usage of &lt;code&gt;type&lt;/code&gt; is providing a target element and a string to type.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { type } from &#39;@camwiegert/typical&#39;;&#xA;&#xA;type(element, &#39;text&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pausing&lt;/h3&gt; &#xA;&lt;p&gt;In order to pause typing at any point, pass a number of milliseconds to pause.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;type(element, &#39;Hello&#39;, 1000, &#39;Hello world!&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Looping&lt;/h3&gt; &#xA;&lt;p&gt;In order to loop, pass &lt;code&gt;type&lt;/code&gt; as a parameter to itself at the point at which you&#39;d like to start looping. It can be helpful to alias &lt;code&gt;type&lt;/code&gt; as &lt;code&gt;loop&lt;/code&gt; to be explicit.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import {&#xA;    type,&#xA;    type as loop&#xA;};&#xA;&#xA;const steps = [1000, &#39;Ready&#39;, 1000, &#39;Set&#39;, 1000, &#39;Go&#39;];&#xA;&#xA;type(element, ...steps, loop);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To loop a finite amount, pass your steps multiple times.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;type(element, ...steps, ...steps, ...steps);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Waiting&lt;/h3&gt; &#xA;&lt;p&gt;When passed a &lt;code&gt;Promise&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt; will wait for it to resolve before continuing. Because &lt;code&gt;type&lt;/code&gt; itself returns a &lt;code&gt;Promise&lt;/code&gt;, that means you can wait on a set of steps to complete before starting another.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const init = type(target, &#39;In a moment...&#39;, 500);&#xA;&#xA;type(target, init, &#39;start&#39;, 500, &#39;looping&#39;, loop);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Functions&lt;/h3&gt; &#xA;&lt;p&gt;Function arguments are passed the target element, and can be useful for operating on the target element between steps. If you return a &lt;code&gt;Promise&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt; will wait for it to resolve.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const toggle = (element) =&amp;gt;&#xA;    element.classList.toggle(&#39;is-typing&#39;);&#xA;&#xA;type(target, toggle, &#39;Type me&#39;, toggle);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Chrome&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Edge&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Firefox&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Safari&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Internet Explorer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catalinmiron/react-typical&#34;&gt;react-typical&lt;/a&gt; - React component&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Turkyden/vue-typical&#34;&gt;vue-typical&lt;/a&gt; - Vue component&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>