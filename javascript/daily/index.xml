<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-06T01:31:36Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Kong/insomnia</title>
    <updated>2022-08-06T01:31:36Z</updated>
    <id>tag:github.com,2022-08-06:/Kong/insomnia</id>
    <link href="https://github.com/Kong/insomnia" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The open-source, cross-platform API client for GraphQL, REST, and gRPC.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Insomnia API Client&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chat.insomnia.rest/&#34;&gt;&lt;img src=&#34;https://chat.insomnia.rest/badge.svg?sanitize=true&#34; alt=&#34;Slack Channel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Kong/insomnia/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/Kong/insomnia.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Insomnia is an open-source, cross-platform API client for GraphQL, REST, and gRPC.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Kong/insomnia/develop/screenshots/main.png&#34; alt=&#34;Insomnia API Client&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Insomnia is available for Mac, Windows, and Linux and can be downloaded from the website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://insomnia.rest/download/&#34;&gt;https://insomnia.rest/download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bugs and Feature Requests&lt;/h2&gt; &#xA;&lt;p&gt;Have a bug or a feature request? First, read the &lt;a href=&#34;https://raw.githubusercontent.com/Kong/insomnia/develop/CONTRIBUTING.md#using-the-issue-tracker&#34;&gt;issue guidelines&lt;/a&gt; and search for existing and closed issues. If your problem or idea is not addressed yet, &lt;a href=&#34;https://raw.githubusercontent.com/Kong/insomnia/develop/issues&#34;&gt;please open a new issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more generic product questions and feedback, join the &lt;a href=&#34;https://chat.insomnia.rest&#34;&gt;Slack Team&lt;/a&gt; or email &lt;a href=&#34;mailto:support@insomnia.rest&#34;&gt;support@insomnia.rest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read through our &lt;a href=&#34;https://raw.githubusercontent.com/Kong/insomnia/develop/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/Kong/insomnia/develop/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;. Included are directions for opening issues, coding standards, and notes on development.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check out our open-source &lt;a href=&#34;https://docs.insomnia.rest/&#34;&gt;Insomnia Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Develop Insomnia&lt;/h2&gt; &#xA;&lt;p&gt;Development on Insomnia can be done on Mac, Windows, or Linux as long as you have &lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt; and &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;. See the &lt;code&gt;.nvmrc&lt;/code&gt; file located in the project for the correct Node version.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Initial Dev Setup&lt;/summary&gt; &#xA; &lt;p&gt;This repository is structured as a monorepo and contains many Node.JS packages. Each package has its own set of commands, but the most common commands are available from the root &lt;a href=&#34;https://raw.githubusercontent.com/Kong/insomnia/develop/package.json&#34;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; and can be accessed using the &lt;code&gt;npm run ‚Ä¶&lt;/code&gt; command. Here are the only three commands you should need to start developing on the app.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Install and Link Dependencies&#xA;npm run bootstrap&#xA;&#xA;# Run Tests&#xA;npm test&#xA;&#xA;# Start App with Live Reload&#xA;npm run app-start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Linux&lt;/h3&gt; &#xA; &lt;p&gt;If you are on Linux, you may need to install the following supporting packages:&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;Ubuntu/Debian&lt;/summary&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Update library&#xA;sudo apt-get update&#xA;&#xA;# Install font configuration library &amp;amp; support&#xA;sudo apt-get install libfontconfig-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;Fedora&lt;/summary&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Install libcurl for node-libcurl&#xA;sudo dnf install libcurl-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA; &lt;p&gt;Also on Linux, if Electron is failing during the bootstrap process, run the following&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Clear Electron install conflicts&#xA;rm -rf ~/.cache/electron&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Windows&lt;/h3&gt; &#xA; &lt;p&gt;If you are on Windows and have problems, you may need to install &lt;a href=&#34;https://github.com/felixrieseberg/windows-build-tools&#34;&gt;Windows Build Tools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Editor Requirements&lt;/summary&gt; &#xA; &lt;p&gt;You can use any editor you&#39;d like, but make sure to have support/plugins for the following tools:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;http://eslint.org/&#34;&gt;ESLint&lt;/a&gt; - For catching syntax problems and common errors&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://facebook.github.io/react/docs/jsx-in-depth.html&#34;&gt;JSX Syntax&lt;/a&gt; - For React components&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Develop Inso CLI&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bootstrap: &lt;code&gt;npm run bootstrap&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start the compiler in watch mode: &lt;code&gt;npm run inso-start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run: &lt;code&gt;./packages/insomnia-inso/bin/inso -v&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Search for, discover, and install plugins from the Insomnia &lt;a href=&#34;https://insomnia.rest/plugins/&#34;&gt;Plugin Hub&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Community Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jozsefsallai/insomnia-documenter&#34;&gt;Insomnia Documenter&lt;/a&gt; - Generate beautiful API documentation pages using the &lt;a href=&#34;https://insomnia.rest/plugins/insomnia-plugin-documenter&#34;&gt;documenter plugin&lt;/a&gt; or your Insomnia export file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swinton/github-rest-apis-for-insomnia&#34;&gt;GitHub API Spec Importer&lt;/a&gt; - A complete set of GitHub REST API route specifications that can be imported straight into Insomnia.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mlabouardy/swaggymnia&#34;&gt;Swaggymnia&lt;/a&gt; - Generate &lt;a href=&#34;https://swagger.io/&#34;&gt;Swagger&lt;/a&gt; documentation for your existing API in Insomnia.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kong/insomnia/develop/LICENSE&#34;&gt;MIT&lt;/a&gt; ¬© &lt;a href=&#34;https://insomnia.rest&#34;&gt;Insomnia&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>preactjs/preact</title>
    <updated>2022-08-06T01:31:36Z</updated>
    <id>tag:github.com,2022-08-06:/preactjs/preact</id>
    <link href="https://github.com/preactjs/preact" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚öõÔ∏è Fast 3kB React alternative with the same modern API. Components &amp; Virtual DOM.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://preactjs.com&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://preactjs.com&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/preactjs/preact/8b0bcc927995c188eca83cba30fbc83491cc0b2f/logo.svg?sanitize=true&#34; alt=&#34;Preact&#34; title=&#34;Preact&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;a href=&#34;https://preactjs.com&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Fast &lt;b&gt;3kB&lt;/b&gt; alternative to React with the same modern API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;All the power of Virtual DOM components, without the overhead:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Familiar React API &amp;amp; patterns: ES6 Class, hooks, and Functional Components&lt;/li&gt; &#xA; &lt;li&gt;Extensive React compatibility via a simple &lt;a href=&#34;https://github.com/preactjs/preact/tree/master/compat&#34;&gt;preact/compat&lt;/a&gt; alias&lt;/li&gt; &#xA; &lt;li&gt;Everything you need: JSX, &lt;abbr title=&#34;Virtual DOM&#34;&gt;VDOM&lt;/abbr&gt;, &lt;a href=&#34;https://github.com/preactjs/preact-devtools&#34;&gt;DevTools&lt;/a&gt;, &lt;abbr title=&#34;Hot Module Replacement&#34;&gt;HMR&lt;/abbr&gt;, &lt;abbr title=&#34;Server-Side Rendering&#34;&gt;SSR&lt;/abbr&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Highly optimized diff algorithm and seamless hydration from Server Side Rendering&lt;/li&gt; &#xA; &lt;li&gt;Supports all modern browsers and IE11&lt;/li&gt; &#xA; &lt;li&gt;Transparent asynchronous rendering with a pluggable scheduler&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Instant production-grade app setup with &lt;a href=&#34;https://github.com/preactjs/preact-cli&#34;&gt;Preact CLI&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üíÅ More information at the &lt;a href=&#34;https://preactjs.com&#34;&gt;Preact Website ‚ûû&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;table border=&#34;0&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;http://npm.im/preact&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/preact.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://chat.preactjs.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack%20Community-preact.slack.com-blue&#34; alt=&#34;Preact Slack Community&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/preactjs/preact/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backers/badge.svg?sanitize=true&#34; alt=&#34;OpenCollective Backers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/preactjs/preact/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsors/badge.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://coveralls.io/github/preactjs/preact&#34;&gt;&lt;img src=&#34;https://img.shields.io/coveralls/preactjs/preact/master.svg?sanitize=true&#34; alt=&#34;coveralls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://unpkg.com/preact/dist/preact.min.js&#34;&gt;&lt;img src=&#34;http://img.badgesize.io/https://unpkg.com/preact/dist/preact.min.js?compression=gzip&amp;amp;label=gzip&#34; alt=&#34;gzip size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://unpkg.com/preact/dist/preact.min.js&#34;&gt;&lt;img src=&#34;http://img.badgesize.io/https://unpkg.com/preact/dist/preact.min.js?compression=brotli&amp;amp;label=brotli&#34; alt=&#34;brotli size&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://saucelabs.com/browser-matrix/preact.svg?sanitize=true&#34; title=&#34;Browser support matrix&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can find some awesome libraries in the &lt;a href=&#34;https://github.com/preactjs/awesome-preact&#34;&gt;awesome-preact list&lt;/a&gt; &lt;span&gt;üòé&lt;/span&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üíÅ &lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; You &lt;a href=&#34;https://github.com/developit/preact-in-es3&#34;&gt;don&#39;t need ES2015 to use Preact&lt;/a&gt;... but give it a try!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The easiest way to get started with Preact is to use &lt;a href=&#34;https://github.com/preactjs/preact-cli&#34;&gt;Preact CLI&lt;/a&gt;. This simple command-line tool wraps up the best possible tooling for you, and even keeps things like Webpack and Babel up-to-date as they change. Best of all, it&#39;s easy to understand! Start a project or compile for production in a single command (&lt;code&gt;preact build&lt;/code&gt;), with no configuration needed and best practices baked in! üôå&lt;/p&gt; &#xA;&lt;h4&gt;Tutorial: Building UI with Preact&lt;/h4&gt; &#xA;&lt;p&gt;With Preact, you create user interfaces by assembling trees of components and elements. Components are functions or classes that return a description of what their tree should output. These descriptions are typically written in &lt;a href=&#34;https://facebook.github.io/jsx/&#34;&gt;JSX&lt;/a&gt; (shown underneath), or &lt;a href=&#34;https://github.com/developit/htm&#34;&gt;HTM&lt;/a&gt; which leverages standard JavaScript Tagged Templates. Both syntaxes can express trees of elements with &#34;props&#34; (similar to HTML attributes) and children.&lt;/p&gt; &#xA;&lt;p&gt;To get started using Preact, first look at the render() function. This function accepts a tree description and creates the structure described. Next, it appends this structure to a parent DOM element provided as the second argument. Future calls to render() will reuse the existing tree and update it in-place in the DOM. Internally, render() will calculate the difference from previous outputted structures in an attempt to perform as few DOM operations as possible.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { h, render } from &#39;preact&#39;;&#xA;// Tells babel to use h for JSX. It&#39;s better to configure this globally.&#xA;// See https://babeljs.io/docs/en/babel-plugin-transform-react-jsx#usage&#xA;// In tsconfig you can specify this with the jsxFactory&#xA;/** @jsx h */&#xA;&#xA;// create our tree and append it to document.body:&#xA;render(&amp;lt;main&amp;gt;&amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;&amp;lt;/main&amp;gt;, document.body);&#xA;&#xA;// update the tree in-place:&#xA;render(&amp;lt;main&amp;gt;&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;&amp;lt;/main&amp;gt;, document.body);&#xA;// ^ this second invocation of render(...) will use a single DOM call to update the text of the &amp;lt;h1&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Hooray! render() has taken our structure and output a User Interface! This approach demonstrates a simple case, but would be difficult to use as an application grows in complexity. Each change would be forced to calculate the difference between the current and updated structure for the entire application. Components can help here ‚Äì by dividing the User Interface into nested Components each can calculate their difference from their mounted point. Here&#39;s an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { render, h } from &#39;preact&#39;;&#xA;import { useState } from &#39;preact/hooks&#39;;&#xA;&#xA;/** @jsx h */&#xA;&#xA;const App = () =&amp;gt; {&#xA;&#x9;const [input, setInput] = useState(&#39;&#39;);&#xA;&#xA;&#x9;return (&#xA;&#x9;&#x9;&amp;lt;div&amp;gt;&#xA;&#x9;&#x9;&#x9;&amp;lt;p&amp;gt;Do you agree to the statement: &#34;Preact is awesome&#34;?&amp;lt;/p&amp;gt;&#xA;&#x9;&#x9;&#x9;&amp;lt;input value={input} onInput={e =&amp;gt; setInput(e.target.value)} /&amp;gt;&#xA;&#x9;&#x9;&amp;lt;/div&amp;gt;&#xA;&#x9;)&#xA;}&#xA;&#xA;render(&amp;lt;App /&amp;gt;, document.body);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Become a sponsor and get your logo on our README on GitHub with a link to your site. [&lt;a href=&#34;https://opencollective.com/preact#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/preact/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://snyk.co/preact&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://res.cloudinary.com/snyk/image/upload/snyk-marketingui/brand-logos/wordmark-logo-color.svg?sanitize=true&#34; width=&#34;192&#34; height=&#34;64&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/10/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/11/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/12/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/13/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/14/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/15/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/guardian&#34; target=&#34;_blank&#34;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;img src=&#34;https://github.com/guardian.png&#34; width=&#34;64&#34; height=&#34;64&#34;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/16/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/17/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/18/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/19/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/20/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/21/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/22/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/23/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/24/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/25/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/26/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/27/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/28/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/sponsor/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/sponsor/29/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backers&lt;/h2&gt; &#xA;&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href=&#34;https://opencollective.com/preact#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/preact/backer/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/10/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/11/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/12/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/13/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/14/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/15/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/16/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/17/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/18/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/19/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/20/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/21/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/22/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/23/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/24/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/25/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/26/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/27/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/28/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/preact/backer/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/preact/backer/29/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://preactjs.com&#34;&gt;&lt;img src=&#34;https://i.imgur.com/YqCHvEW.gif&#34; alt=&#34;Preact&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ChainSafe/web3.js</title>
    <updated>2022-08-06T01:31:36Z</updated>
    <id>tag:github.com,2022-08-06:/ChainSafe/web3.js</id>
    <link href="https://github.com/ChainSafe/web3.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ethereum JavaScript API&lt;/p&gt;&lt;hr&gt;&lt;p style=&#34;text-align: center;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ChainSafe/web3.js/1.x/assets/logo/web3js.jpg&#34; width=&#34;200&#34; alt=&#34;web3.js&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;web3.js - Ethereum JavaScript API&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/pb3U4zE8ca&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/593655374469660673?label=Discord&amp;amp;logo=discord&amp;amp;style=flat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ethereum.stackexchange.com/questions/tagged/web3js&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/web3js-stackexchange-brightgreen&#34; alt=&#34;StackExchange&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmjs.org/package/web3&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/web3.svg?sanitize=true&#34; alt=&#34;NPM Package Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmjs.org/package/web3&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/web3.svg?sanitize=true&#34; alt=&#34;NPM Package Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ethereum/web3.js/actions&#34;&gt;&lt;img src=&#34;https://github.com/ethereum/web3.js/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://david-dm.org/ethereum/web3.js/1.x?type=dev&#34;&gt;&lt;img src=&#34;https://david-dm.org/ethereum/web3.js/1.x/dev-status.svg?sanitize=true&#34; alt=&#34;Dev Dependency Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/r/ethereum/web3.js?branch=1.x&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/ethereum/web3.js/badge.svg?branch=1.x&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lerna.js.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&#34; alt=&#34;Lerna&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.netlify.com/sites/web3-staging/deploys&#34;&gt;&lt;img src=&#34;https://api.netlify.com/api/v1/badges/1fc64933-d170-4939-8bdb-508ecd205519/deploy-status&#34; alt=&#34;Netlify Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the Ethereum &lt;a href=&#34;http://web3js.readthedocs.io/&#34;&gt;JavaScript API&lt;/a&gt; which connects to the &lt;a href=&#34;https://github.com/ethereum/wiki/wiki/JSON-RPC&#34;&gt;Generic JSON-RPC&lt;/a&gt; spec.&lt;/p&gt; &#xA;&lt;p&gt;You need to run a local or remote &lt;a href=&#34;https://www.ethereum.org/&#34;&gt;Ethereum&lt;/a&gt; node to use this library.&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;http://web3js.readthedocs.io/&#34;&gt;documentation&lt;/a&gt; for more.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Node&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install web3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Yarn&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add web3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;In the Browser&lt;/h3&gt; &#xA;&lt;p&gt;Use the prebuilt &lt;code&gt;dist/web3.min.js&lt;/code&gt;, or build using the &lt;a href=&#34;https://github.com/ethereum/web3.js&#34;&gt;web3.js&lt;/a&gt; repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then include &lt;code&gt;dist/web3.min.js&lt;/code&gt; in your html file. This will expose &lt;code&gt;Web3&lt;/code&gt; on the window object.&lt;/p&gt; &#xA;&lt;p&gt;Or via jsDelivr CDN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;UNPKG:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://unpkg.com/web3@latest/dist/web3.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// In Node.js&#xA;const Web3 = require(&#39;web3&#39;);&#xA;const web3 = new Web3(&#39;ws://localhost:8546&#39;);&#xA;console.log(web3);&#xA;// Output&#xA;{&#xA;    eth: ... ,&#xA;    shh: ... ,&#xA;    utils: ...,&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally you can set a provider using &lt;code&gt;web3.setProvider()&lt;/code&gt; (e.g. WebsocketProvider):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;web3.setProvider(&#39;ws://localhost:8546&#39;);&#xA;// or&#xA;web3.setProvider(new Web3.providers.WebsocketProvider(&#39;ws://localhost:8546&#39;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There you go, now you can use it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;web3.eth.getAccounts().then(console.log);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage with TypeScript&lt;/h3&gt; &#xA;&lt;p&gt;We support types within the repo itself. Please open an issue here if you find any wrong types.&lt;/p&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;web3.js&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import Web3 from &#39;web3&#39;;&#xA;import { BlockHeader, Block } from &#39;web3-eth&#39; // ex. package types&#xA;const web3 = new Web3(&#39;ws://localhost:8546&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using the types in a &lt;code&gt;commonjs&lt;/code&gt; module, like in a Node app, you just have to enable &lt;code&gt;esModuleInterop&lt;/code&gt; and &lt;code&gt;allowSyntheticDefaultImports&lt;/code&gt; in your &lt;code&gt;tsconfig&lt;/code&gt; for typesystem compatibility:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&#34;compilerOptions&#34;: {&#xA;    &#34;allowSyntheticDefaultImports&#34;: true,&#xA;    &#34;esModuleInterop&#34;: true,&#xA;    ....&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting and known issues.&lt;/h2&gt; &#xA;&lt;h3&gt;Web3 and Create-react-app&lt;/h3&gt; &#xA;&lt;p&gt;If you are using create-react-app version &amp;gt;=5 you may run into issues building. This is because NodeJS polyfills are not included in the latest version of create-react-app.&lt;/p&gt; &#xA;&lt;h3&gt;Solution&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install react-app-rewired and the missing modules&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are using yarn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add --dev react-app-rewired process crypto-browserify stream-browserify assert stream-http https-browserify os-browserify url buffer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install --save-dev react-app-rewired crypto-browserify stream-browserify assert stream-http https-browserify os-browserify url buffer process&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create &lt;code&gt;config-overrides.js&lt;/code&gt; in the root of your project folder with the content:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const webpack = require(&#39;webpack&#39;);&#xA;&#xA;module.exports = function override(config) {&#xA;    const fallback = config.resolve.fallback || {};&#xA;    Object.assign(fallback, {&#xA;        &#34;crypto&#34;: require.resolve(&#34;crypto-browserify&#34;),&#xA;        &#34;stream&#34;: require.resolve(&#34;stream-browserify&#34;),&#xA;        &#34;assert&#34;: require.resolve(&#34;assert&#34;),&#xA;        &#34;http&#34;: require.resolve(&#34;stream-http&#34;),&#xA;        &#34;https&#34;: require.resolve(&#34;https-browserify&#34;),&#xA;        &#34;os&#34;: require.resolve(&#34;os-browserify&#34;),&#xA;        &#34;url&#34;: require.resolve(&#34;url&#34;)&#xA;    })&#xA;    config.resolve.fallback = fallback;&#xA;    config.plugins = (config.plugins || []).concat([&#xA;        new webpack.ProvidePlugin({&#xA;            process: &#39;process/browser&#39;,&#xA;            Buffer: [&#39;buffer&#39;, &#39;Buffer&#39;]&#xA;        })&#xA;    ])&#xA;    return config;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Within &lt;code&gt;package.json&lt;/code&gt; change the scripts field for start, build and test. Instead of &lt;code&gt;react-scripts&lt;/code&gt; replace it with &lt;code&gt;react-app-rewired&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;before:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;&#34;scripts&#34;: {&#xA;    &#34;start&#34;: &#34;react-scripts start&#34;,&#xA;    &#34;build&#34;: &#34;react-scripts build&#34;,&#xA;    &#34;test&#34;: &#34;react-scripts test&#34;,&#xA;    &#34;eject&#34;: &#34;react-scripts eject&#34;&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;after:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;&#34;scripts&#34;: {&#xA;    &#34;start&#34;: &#34;react-app-rewired start&#34;,&#xA;    &#34;build&#34;: &#34;react-app-rewired build&#34;,&#xA;    &#34;test&#34;: &#34;react-app-rewired test&#34;,&#xA;    &#34;eject&#34;: &#34;react-scripts eject&#34;&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The missing Nodejs polyfills should be included now and your app should be functional with web3.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to hide the warnings created by the console:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In &lt;code&gt;config-overrides.js&lt;/code&gt; within the &lt;code&gt;override&lt;/code&gt; function, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;config.ignoreWarnings = [/Failed to parse source map/];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Web3 and Angular&lt;/h3&gt; &#xA;&lt;h3&gt;New solution&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Angular version &amp;gt;11 and run into an issue building, the old solution below will not work. This is because polyfills are not included in the newest version of Angular.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the required dependencies within your angular project:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install --save-dev crypto-browserify stream-browserify assert stream-http https-browserify os-browserify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Within &lt;code&gt;tsconfig.json&lt;/code&gt; add the following &lt;code&gt;paths&lt;/code&gt; in &lt;code&gt;compilerOptions&lt;/code&gt; so Webpack can get the correct dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;{&#xA;    &#34;compilerOptions&#34;: {&#xA;        &#34;paths&#34; : {&#xA;        &#34;crypto&#34;: [&#34;./node_modules/crypto-browserify&#34;],&#xA;        &#34;stream&#34;: [&#34;./node_modules/stream-browserify&#34;],&#xA;        &#34;assert&#34;: [&#34;./node_modules/assert&#34;],&#xA;        &#34;http&#34;: [&#34;./node_modules/stream-http&#34;],&#xA;        &#34;https&#34;: [&#34;./node_modules/https-browserify&#34;],&#xA;        &#34;os&#34;: [&#34;./node_modules/os-browserify&#34;],&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add the following lines to &lt;code&gt;polyfills.ts&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Buffer } from &#39;buffer&#39;;&#xA;&#xA;(window as any).global = window;&#xA;global.Buffer = Buffer;&#xA;global.process = {&#xA;    env: { DEBUG: undefined },&#xA;    version: &#39;&#39;,&#xA;    nextTick: require(&#39;next-tick&#39;)&#xA;} as any;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Old solution&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Ionic/Angular at a version &amp;gt;5 you may run into a build error in which modules &lt;code&gt;crypto&lt;/code&gt; and &lt;code&gt;stream&lt;/code&gt; are &lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;a workaround for this is to go into your node-modules and at &lt;code&gt;/angular-cli-files/models/webpack-configs/browser.js&lt;/code&gt; change the &lt;code&gt;node: false&lt;/code&gt; to &lt;code&gt;node: {crypto: true, stream: true}&lt;/code&gt; as mentioned &lt;a href=&#34;https://github.com/ethereum/web3.js/issues/2260#issuecomment-458519127&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Another variation of this problem was an &lt;a href=&#34;https://github.com/angular/angular-cli/issues/1548&#34;&gt;issue opned on angular-cli&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation can be found at &lt;a href=&#34;http://web3js.readthedocs.io/&#34;&gt;ReadTheDocs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update&#xA;sudo apt-get install nodejs&#xA;sudo apt-get install npm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building (webpack)&lt;/h3&gt; &#xA;&lt;p&gt;Build the web3.js package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Testing (mocha)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Please follow the &lt;a href=&#34;https://raw.githubusercontent.com/ChainSafe/web3.js/1.x/CONTRIBUTIONS.md&#34;&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/ChainSafe/web3.js/1.x/REVIEW.md&#34;&gt;Review Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project adheres to the &lt;a href=&#34;https://raw.githubusercontent.com/ChainSafe/web3.js/1.x/REVIEW.md&#34;&gt;Release Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/pb3U4zE8ca&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.stackexchange.com/questions/tagged/web3js&#34;&gt;StackExchange&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Similar libraries in other languages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Haskell: &lt;a href=&#34;https://github.com/airalab/hs-web3&#34;&gt;hs-web3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Java: &lt;a href=&#34;https://github.com/web3j/web3j&#34;&gt;web3j&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PHP: &lt;a href=&#34;https://github.com/web3p/web3.php&#34;&gt;web3.php&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Purescript: &lt;a href=&#34;https://github.com/f-o-a-m/purescript-web3&#34;&gt;purescript-web3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Python: &lt;a href=&#34;https://github.com/ethereum/web3.py&#34;&gt;Web3.py&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ruby: &lt;a href=&#34;https://github.com/EthWorks/ethereum.rb&#34;&gt;ethereum.rb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scala: &lt;a href=&#34;https://github.com/mslinn/web3j-scala&#34;&gt;web3j-scala&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Semantic versioning&lt;/h2&gt; &#xA;&lt;p&gt;This project follows &lt;a href=&#34;https://semver.org/&#34;&gt;semver&lt;/a&gt; as closely as possible &lt;strong&gt;from version 1.3.0 onwards&lt;/strong&gt;. Earlier minor version bumps &lt;a href=&#34;https://github.com/ethereum/web3.js/issues/3758&#34;&gt;might&lt;/a&gt; have included breaking behavior changes.&lt;/p&gt;</summary>
  </entry>
</feed>