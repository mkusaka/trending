<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-14T01:37:03Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>web3/web3.js</title>
    <updated>2023-04-14T01:37:03Z</updated>
    <id>tag:github.com,2023-04-14:/web3/web3.js</id>
    <link href="https://github.com/web3/web3.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ethereum JavaScript API&lt;/p&gt;&lt;hr&gt;&lt;p style=&#34;text-align: center;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/web3/web3.js/1.x/assets/logo/web3js.jpg&#34; width=&#34;200&#34; alt=&#34;web3.js&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;web3.js - Ethereum JavaScript API&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://npmjs.org/package/web3&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/web3.svg?sanitize=true&#34; alt=&#34;NPM Package Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jsdelivr.com/package/npm/web3&#34;&gt;&lt;img src=&#34;https://data.jsdelivr.com/v1/package/npm/web3/badge&#34; alt=&#34;cdnhits&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/pb3U4zE8ca&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/593655374469660673?label=Discord&amp;amp;logo=discord&amp;amp;style=flat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ethereum.stackexchange.com/questions/tagged/web3js&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/web3js-stackexchange-brightgreen&#34; alt=&#34;StackExchange&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmjs.org/package/web3&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/web3.svg?sanitize=true&#34; alt=&#34;NPM Package Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ethereum/web3.js/actions&#34;&gt;&lt;img src=&#34;https://github.com/ethereum/web3.js/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/r/ethereum/web3.js?branch=1.x&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/ethereum/web3.js/badge.svg?branch=1.x&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lerna.js.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&#34; alt=&#34;Lerna&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.netlify.com/sites/web3-staging/deploys&#34;&gt;&lt;img src=&#34;https://api.netlify.com/api/v1/badges/1fc64933-d170-4939-8bdb-508ecd205519/deploy-status&#34; alt=&#34;Netlify Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gitpoap.io/gh/ChainSafe/web3.js&#34;&gt;&lt;img src=&#34;https://public-api.gitpoap.io/v1/repo/ChainSafe/web3.js/badge&#34; alt=&#34;GitPOAP Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/web3_js&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/web3_js?label=web3_js&amp;amp;style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/ChainSafe/web3.js/releases/tag/v4.0.0-alpha.0&#34;&gt;Web3.js 4.x&lt;/a&gt; has been released. Checkout 4.x &lt;a href=&#34;https://docs.web3js.org/&#34;&gt;API documentation and migration guide&lt;/a&gt; for testing, early feedback and contributions.&lt;/h5&gt; &#xA;&lt;p&gt;This is the Ethereum &lt;a href=&#34;http://web3js.readthedocs.io/&#34;&gt;JavaScript API&lt;/a&gt; which connects to the &lt;a href=&#34;https://github.com/ethereum/wiki/wiki/JSON-RPC&#34;&gt;Generic JSON-RPC&lt;/a&gt; spec.&lt;/p&gt; &#xA;&lt;p&gt;You need to run a local or remote &lt;a href=&#34;https://www.ethereum.org/&#34;&gt;Ethereum&lt;/a&gt; node to use this library.&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;http://web3js.readthedocs.io/&#34;&gt;documentation&lt;/a&gt; for more.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package either using &lt;a href=&#34;https://www.npmjs.com/package/web3&#34;&gt;NPM&lt;/a&gt; or using &lt;a href=&#34;https://yarnpkg.com/package/web3&#34;&gt;Yarn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using NPM&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install web3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Yarn&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add web3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;In the Browser&lt;/h3&gt; &#xA;&lt;p&gt;Use the prebuilt &lt;code&gt;dist/web3.min.js&lt;/code&gt;, or build using the &lt;a href=&#34;https://github.com/ethereum/web3.js&#34;&gt;web3.js&lt;/a&gt; repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then include &lt;code&gt;dist/web3.min.js&lt;/code&gt; in your html file. This will expose &lt;code&gt;Web3&lt;/code&gt; on the window object.&lt;/p&gt; &#xA;&lt;p&gt;Or via jsDelivr CDN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;UNPKG:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://unpkg.com/web3@latest/dist/web3.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// In Node.js&#xA;const Web3 = require(&#39;web3&#39;);&#xA;const web3 = new Web3(&#39;ws://localhost:8546&#39;);&#xA;console.log(web3);&#xA;// Output&#xA;{&#xA;    eth: ... ,&#xA;    shh: ... ,&#xA;    utils: ...,&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally you can set a provider using &lt;code&gt;web3.setProvider()&lt;/code&gt; (e.g. WebsocketProvider):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;web3.setProvider(&#39;ws://localhost:8546&#39;);&#xA;// or&#xA;web3.setProvider(new Web3.providers.WebsocketProvider(&#39;ws://localhost:8546&#39;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There you go, now you can use it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;web3.eth.getAccounts().then(console.log);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage with TypeScript&lt;/h3&gt; &#xA;&lt;p&gt;We support types within the repo itself. Please open an issue here if you find any wrong types.&lt;/p&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;web3.js&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import Web3 from &#39;web3&#39;;&#xA;import { BlockHeader, Block } from &#39;web3-eth&#39; // ex. package types&#xA;const web3 = new Web3(&#39;ws://localhost:8546&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using the types in a &lt;code&gt;commonjs&lt;/code&gt; module, like in a Node app, you just have to enable &lt;code&gt;esModuleInterop&lt;/code&gt; and &lt;code&gt;allowSyntheticDefaultImports&lt;/code&gt; in your &lt;code&gt;tsconfig&lt;/code&gt; for typesystem compatibility:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&#34;compilerOptions&#34;: {&#xA;    &#34;allowSyntheticDefaultImports&#34;: true,&#xA;    &#34;esModuleInterop&#34;: true,&#xA;    ....&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting and known issues.&lt;/h2&gt; &#xA;&lt;h3&gt;Web3 and Create-react-app&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.8 UPDATE: If you are facing any issues with create-react-app or angular, make sure you are using a web3 version of 1.8.0 or greater, as its been fixed&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are using create-react-app version &amp;gt;=5 you may run into issues building. This is because NodeJS polyfills are not included in the latest version of create-react-app.&lt;/p&gt; &#xA;&lt;h3&gt;Solution&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install react-app-rewired and the missing modules&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are using yarn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add --dev react-app-rewired process crypto-browserify stream-browserify assert stream-http https-browserify os-browserify url buffer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install --save-dev react-app-rewired crypto-browserify stream-browserify assert stream-http https-browserify os-browserify url buffer process&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create &lt;code&gt;config-overrides.js&lt;/code&gt; in the root of your project folder with the content:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const webpack = require(&#39;webpack&#39;);&#xA;&#xA;module.exports = function override(config) {&#xA;    const fallback = config.resolve.fallback || {};&#xA;    Object.assign(fallback, {&#xA;        &#34;crypto&#34;: require.resolve(&#34;crypto-browserify&#34;),&#xA;        &#34;stream&#34;: require.resolve(&#34;stream-browserify&#34;),&#xA;        &#34;assert&#34;: require.resolve(&#34;assert&#34;),&#xA;        &#34;http&#34;: require.resolve(&#34;stream-http&#34;),&#xA;        &#34;https&#34;: require.resolve(&#34;https-browserify&#34;),&#xA;        &#34;os&#34;: require.resolve(&#34;os-browserify&#34;),&#xA;        &#34;url&#34;: require.resolve(&#34;url&#34;)&#xA;    })&#xA;    config.resolve.fallback = fallback;&#xA;    config.plugins = (config.plugins || []).concat([&#xA;        new webpack.ProvidePlugin({&#xA;            process: &#39;process/browser&#39;,&#xA;            Buffer: [&#39;buffer&#39;, &#39;Buffer&#39;]&#xA;        })&#xA;    ])&#xA;    return config;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Within &lt;code&gt;package.json&lt;/code&gt; change the scripts field for start, build and test. Instead of &lt;code&gt;react-scripts&lt;/code&gt; replace it with &lt;code&gt;react-app-rewired&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;before:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;&#34;scripts&#34;: {&#xA;    &#34;start&#34;: &#34;react-scripts start&#34;,&#xA;    &#34;build&#34;: &#34;react-scripts build&#34;,&#xA;    &#34;test&#34;: &#34;react-scripts test&#34;,&#xA;    &#34;eject&#34;: &#34;react-scripts eject&#34;&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;after:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;&#34;scripts&#34;: {&#xA;    &#34;start&#34;: &#34;react-app-rewired start&#34;,&#xA;    &#34;build&#34;: &#34;react-app-rewired build&#34;,&#xA;    &#34;test&#34;: &#34;react-app-rewired test&#34;,&#xA;    &#34;eject&#34;: &#34;react-scripts eject&#34;&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The missing Nodejs polyfills should be included now and your app should be functional with web3.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to hide the warnings created by the console:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In &lt;code&gt;config-overrides.js&lt;/code&gt; within the &lt;code&gt;override&lt;/code&gt; function, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;config.ignoreWarnings = [/Failed to parse source map/];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Web3 and Angular&lt;/h3&gt; &#xA;&lt;h3&gt;New solution&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Angular version &amp;gt;11 and run into an issue building, the old solution below will not work. This is because polyfills are not included in the newest version of Angular.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the required dependencies within your angular project:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install --save-dev crypto-browserify stream-browserify assert stream-http https-browserify os-browserify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Within &lt;code&gt;tsconfig.json&lt;/code&gt; add the following &lt;code&gt;paths&lt;/code&gt; in &lt;code&gt;compilerOptions&lt;/code&gt; so Webpack can get the correct dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;{&#xA;    &#34;compilerOptions&#34;: {&#xA;        &#34;paths&#34; : {&#xA;        &#34;crypto&#34;: [&#34;./node_modules/crypto-browserify&#34;],&#xA;        &#34;stream&#34;: [&#34;./node_modules/stream-browserify&#34;],&#xA;        &#34;assert&#34;: [&#34;./node_modules/assert&#34;],&#xA;        &#34;http&#34;: [&#34;./node_modules/stream-http&#34;],&#xA;        &#34;https&#34;: [&#34;./node_modules/https-browserify&#34;],&#xA;        &#34;os&#34;: [&#34;./node_modules/os-browserify&#34;],&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add the following lines to &lt;code&gt;polyfills.ts&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Buffer } from &#39;buffer&#39;;&#xA;&#xA;(window as any).global = window;&#xA;global.Buffer = Buffer;&#xA;global.process = {&#xA;    env: { DEBUG: undefined },&#xA;    version: &#39;&#39;,&#xA;    nextTick: require(&#39;next-tick&#39;)&#xA;} as any;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Old solution&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Ionic/Angular at a version &amp;gt;5 you may run into a build error in which modules &lt;code&gt;crypto&lt;/code&gt; and &lt;code&gt;stream&lt;/code&gt; are &lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;a workaround for this is to go into your node-modules and at &lt;code&gt;/angular-cli-files/models/webpack-configs/browser.js&lt;/code&gt; change the &lt;code&gt;node: false&lt;/code&gt; to &lt;code&gt;node: {crypto: true, stream: true}&lt;/code&gt; as mentioned &lt;a href=&#34;https://github.com/ethereum/web3.js/issues/2260#issuecomment-458519127&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Another variation of this problem was an &lt;a href=&#34;https://github.com/angular/angular-cli/issues/1548&#34;&gt;issue opned on angular-cli&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation can be found at &lt;a href=&#34;http://web3js.readthedocs.io/&#34;&gt;ReadTheDocs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update&#xA;sudo apt-get install nodejs&#xA;sudo apt-get install npm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building (webpack)&lt;/h3&gt; &#xA;&lt;p&gt;Build the web3.js package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Testing (mocha)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Please follow the &lt;a href=&#34;https://raw.githubusercontent.com/web3/web3.js/1.x/CONTRIBUTIONS.md&#34;&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/web3/web3.js/1.x/REVIEW.md&#34;&gt;Review Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project adheres to the &lt;a href=&#34;https://raw.githubusercontent.com/web3/web3.js/1.x/REVIEW.md&#34;&gt;Release Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/pb3U4zE8ca&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ethereum.stackexchange.com/questions/tagged/web3js&#34;&gt;StackExchange&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Similar libraries in other languages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Haskell: &lt;a href=&#34;https://github.com/airalab/hs-web3&#34;&gt;hs-web3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Java: &lt;a href=&#34;https://github.com/web3j/web3j&#34;&gt;web3j&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PHP: &lt;a href=&#34;https://github.com/web3p/web3.php&#34;&gt;web3.php&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Purescript: &lt;a href=&#34;https://github.com/f-o-a-m/purescript-web3&#34;&gt;purescript-web3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Python: &lt;a href=&#34;https://github.com/ethereum/web3.py&#34;&gt;Web3.py&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ruby: &lt;a href=&#34;https://github.com/EthWorks/ethereum.rb&#34;&gt;ethereum.rb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scala: &lt;a href=&#34;https://github.com/mslinn/web3j-scala&#34;&gt;web3j-scala&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Semantic versioning&lt;/h2&gt; &#xA;&lt;p&gt;This project follows &lt;a href=&#34;https://semver.org/&#34;&gt;semver&lt;/a&gt; as closely as possible &lt;strong&gt;from version 1.3.0 onwards&lt;/strong&gt;. Earlier minor version bumps &lt;a href=&#34;https://github.com/ethereum/web3.js/issues/3758&#34;&gt;might&lt;/a&gt; have included breaking behavior changes.&lt;/p&gt;</summary>
  </entry>
</feed>