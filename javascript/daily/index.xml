<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-05T01:32:12Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nwjs/nw.js</title>
    <updated>2025-07-05T01:32:12Z</updated>
    <id>tag:github.com,2025-07-05:/nwjs/nw.js</id>
    <link href="https://github.com/nwjs/nw.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Call all Node.js modules directly from DOM/WebWorker and enable a new way of writing applications with all Web technologies.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;node-webkit is renamed NW.js&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/nwjs/nw.js?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;br&gt; Official site: &lt;a href=&#34;https://nwjs.io&#34;&gt;https://nwjs.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;NW.js is an app runtime based on &lt;code&gt;Chromium&lt;/code&gt; and &lt;code&gt;node.js&lt;/code&gt;. You can write native apps in HTML and JavaScript with NW.js. It also lets you call Node.js modules directly from the DOM and enables a new way of writing native applications with all Web technologies.&lt;/p&gt; &#xA;&lt;p&gt;It was created in the Intel Open Source Technology Center.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.sitepoint.com/cross-platform-desktop-app-nw-js/&#34;&gt;Building a Cross-platform Desktop App with NW.js&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://strongloop.com/strongblog/creating-desktop-applications-with-node-webkit/&#34;&gt;Creating Desktop Applications With node-webkit&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://oldgeeksguide.github.io/presentations/html5devconf2013/wtod.html&#34;&gt;WebApp to DesktopApp with node-webkit (slides)&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://yedingding.com/2014/08/01/node-webkit-intro-en.html&#34;&gt;Essay on the history and internals of the project&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apps written in modern HTML5, CSS3, JS and WebGL.&lt;/li&gt; &#xA; &lt;li&gt;Complete support for &lt;a href=&#34;https://nodejs.org/api/&#34;&gt;Node.js APIs&lt;/a&gt; and all its &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;third party modules&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Good performance: Node and WebKit run in the same thread: Function calls are made straightforward; objects are in the same heap and can just reference each other.&lt;/li&gt; &#xA; &lt;li&gt;Easy to package and distribute apps.&lt;/li&gt; &#xA; &lt;li&gt;Available on Linux, Mac OS X and Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;v0.101.2:&lt;/strong&gt; (Jun 30, 2025, based off of Node.js v24.3.0, Chromium 138) : &lt;a href=&#34;https://nwjs.io/blog/v0.101.2/&#34;&gt;release notes&lt;/a&gt;&lt;br&gt; &lt;strong&gt;NOTE&lt;/strong&gt; You might want the &lt;strong&gt;SDK build&lt;/strong&gt;. Please read the release notes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux: &lt;a href=&#34;https://dl.nwjs.io/v0.101.2/nwjs-v0.101.2-linux-ia32.tar.gz&#34;&gt;32bit&lt;/a&gt; / &lt;a href=&#34;https://dl.nwjs.io/v0.101.2/nwjs-v0.101.2-linux-x64.tar.gz&#34;&gt;64bit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows: &lt;a href=&#34;https://dl.nwjs.io/v0.101.2/nwjs-v0.101.2-win-ia32.zip&#34;&gt;32bit&lt;/a&gt; / &lt;a href=&#34;https://dl.nwjs.io/v0.101.2/nwjs-v0.101.2-win-x64.zip&#34;&gt;64bit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mac 10.10+: &lt;a href=&#34;https://dl.nwjs.io/v0.101.2/nwjs-v0.101.2-osx-arm64.zip&#34;&gt;64bit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;a href=&#34;http://nwjs.io/downloads/&#34;&gt;Legacy build&lt;/a&gt; for Win XP and early OSX.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;latest nightly build from git tip&lt;/strong&gt;: &lt;a href=&#34;https://dl.nwjs.io/live-build/&#34;&gt;https://dl.nwjs.io/live-build/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dl.nwjs.io&#34;&gt;Previous versions&lt;/a&gt;; See &lt;a href=&#34;https://nwjs.io/versions.json&#34;&gt;the mapping file&lt;/a&gt; for the version info in previous releases.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Demos and real apps&lt;/h3&gt; &#xA;&lt;p&gt;You may also be interested in &lt;a href=&#34;https://github.com/zcbenz/nw-sample-apps&#34;&gt;our demos repository&lt;/a&gt; and the &lt;a href=&#34;https://github.com/nwjs/nw.js/wiki/List-of-apps-and-companies-using-nw.js&#34;&gt;List of apps and companies using nw.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Create &lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;Hello World!&amp;lt;/title&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&#xA;    &amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;&#xA;    We are using node.js &amp;lt;script&amp;gt;document.write(process.version)&amp;lt;/script&amp;gt;.&#xA;  &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;name&#34;: &#34;nw-demo&#34;,&#xA;  &#34;version&#34;: &#34;0.0.1&#34;,&#xA;  &#34;main&#34;: &#34;index.html&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ /path/to/nw .  (suppose the current directory contains &#39;package.json&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: on Windows, you can drag the folder containing &lt;code&gt;package.json&lt;/code&gt; to &lt;code&gt;nw.exe&lt;/code&gt; to open it.&lt;/p&gt; &#xA;&lt;p&gt;Note: on OSX, the executable binary is in a hidden directory within the .app file. To run node-webkit on OSX, type:&lt;br&gt; &lt;code&gt;/path/to/nwjs.app/Contents/MacOS/nwjs .&lt;/code&gt; &lt;em&gt;(suppose the current directory contains &#39;package.json&#39;)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;p&gt;Official documentation: &lt;a href=&#34;http://docs.nwjs.io/&#34;&gt;http://docs.nwjs.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more information on how to write/package/run apps, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nwjs/nw.js/wiki/How-to-run-apps&#34;&gt;How to run apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nwjs/nw.js/wiki/How-to-package-and-distribute-your-apps&#34;&gt;How to package and distribute your apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nwjs/nw.js/wiki/Using-Node-modules&#34;&gt;How to use Node.js modules in node-webkit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And our &lt;a href=&#34;https://github.com/nwjs/nw.js/wiki&#34;&gt;Wiki&lt;/a&gt; for much more.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;We use the &lt;a href=&#34;https://groups.google.com/d/forum/nwjs-general&#34;&gt;google group&lt;/a&gt; as our mailing list (use English only). Subscribe via &lt;a href=&#34;mailto:nwjs-general+subscribe@googlegroups.com&#34;&gt;nwjs-general+subscribe@googlegroups.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: Links to the old google group (e.g. &lt;code&gt;https://groups.google.com/forum/#!msg/node-webkit/doRWZ07LgWQ/4fheV8FF8zsJ&lt;/code&gt;) that are no longer working can be fixed by replacing &lt;code&gt;node-webkit&lt;/code&gt; with &lt;code&gt;nwjs-general&lt;/code&gt; (e.g &lt;code&gt;https://groups.google.com/forum/#!msg/nwjs-general/doRWZ07LgWQ/4fheV8FF8zsJ&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Issues are being tracked here on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;The source code for NW.js and the daily development spans multiple repositories in this organization. This repository is for issue tracking, landing page, and part of the source code.&lt;/p&gt; &#xA;&lt;h3&gt;Verifying Binaries&lt;/h3&gt; &#xA;&lt;p&gt;Starting from 0.32.0 the stable and nightly download directories contain a SHASUMS256.txt file that lists the SHA checksums for each file available for download, as well as the checksums for the files inside the download package.&lt;/p&gt; &#xA;&lt;p&gt;The SHASUMS256.txt can be downloaded using &lt;code&gt;curl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ curl -O https://dl.nwjs.io/vx.y.z/SHASUMS256.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To check that a downloaded file matches the checksum, run it through &lt;code&gt;sha256sum&lt;/code&gt; with a command such as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ grep nwjs-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The stable releases (but not Nightlies) also have the GPG detached signature of SHASUMS256.txt available as SHASUMS256.txt.asc. You can use &lt;code&gt;gpg&lt;/code&gt; to verify that SHASUMS256.txt has not been tampered with.&lt;/p&gt; &#xA;&lt;p&gt;To verify SHASUMS256.txt has not been altered, you will first need to import the GPG key of NW.js maintainer to create releases. Use this command to import the key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ gpg --keyserver pool.sks-keyservers.net --recv-keys 78680FA9E21BB40A&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;(Key fingerprint is 1E8B EE8D 5B0C 4CBC D6D1  9E26 7868 0FA9 E21B B40A)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, download the SHASUMS256.txt.asc for the release:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ curl -O https://dl.nwjs.io/vx.y.z/SHASUMS256.txt.asc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After downloading the appropriate SHASUMS256.txt and SHASUMS256.txt.asc files, you can then use &lt;code&gt;gpg --verify SHASUMS256.txt.asc SHASUMS256.txt&lt;/code&gt; to verify that the file has been signed by an authorized member of the NW.js team.&lt;/p&gt; &#xA;&lt;p&gt;Once verified, use the SHASUMS256.txt file to get the checksum for the binary verification command above.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;NW.js&lt;/code&gt;&#39;s code in this repo uses the MIT license, see our &lt;code&gt;LICENSE&lt;/code&gt; file. To redistribute the binary, see &lt;a href=&#34;https://github.com/nwjs/nw.js/wiki/How-to-package-and-distribute-your-apps&#34;&gt;How to package and distribute your apps&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>