<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-29T01:36:32Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sytpb/chatgpt-wework-robot</title>
    <updated>2023-04-29T01:36:32Z</updated>
    <id>tag:github.com,2023-04-29:/sytpb/chatgpt-wework-robot</id>
    <link href="https://github.com/sytpb/chatgpt-wework-robot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;零代码、一键部署chatgpt到企业微信，无须VPN，速度快&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;零代码 一键部署chatGPT到企业微信应用 无须VPN&lt;br&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/12178686/233244040-7ab04261-79d7-4588-b8b1-18fc64d9f040.png&#34; width=&#34;400px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/12178686/233246963-9f7e5eb0-d78f-4286-8536-2f4e9f9bee11.png&#34; width=&#34;800px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;font-size: 12px; line-height: 12px;&#34;&gt;&#xA;  ChatGPT 接入企业微信,赋能商业成功 &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;关于本项目&lt;/h2&gt; &#xA;&lt;p&gt;本项目可以实现一键部署ChatGPT到企业微信中，使ChatGPT与企业微信完美融合，手机或电脑上，打开企业微信，就可以使用强大的ChatGPT智能问答。截止目前，本项目可以提供两个能力:&lt;br&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;功能集成，将ChatGPT问答功能集成到企业微信中，借助企业微信权限功能，可以将ChatGPT共享到企业应用当中，此功能要求简单，有企业微信管理员权限即可，方法，参照下面的&lt;strong&gt;部署方法&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;更强大的功能扩展，本项目为开源项目，有开发能力的小伙伴可以Fork到自己的仓库，根据自己企业业务需要，比如结合企业微信开放的API，二次开发一些其他功能。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;其他功能，后续更新。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;部署方法&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;创建企业微信应用&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;第一步，创建应用，操作方法：企微管理员， 电脑端上的企业微信--&amp;gt;头像--&amp;gt;管理企业--&amp;gt;应用管理--&amp;gt;（最下面）创建应用--&amp;gt;应用logo + 填入基本信息&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/12178686/233253399-489b0905-9a4c-4b2e-8f5d-ed7e8dac0f6b.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;第二步，配置应用，操作方法：接收消息一栏--&amp;gt;设置API接收--&amp;gt;未完等待第四步。 &lt;img src=&#34;https://user-images.githubusercontent.com/12178686/233256124-cc6334e3-90ff-43e7-8fe5-3dc0026226fb.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;第三步，记录和准备下列字段信息， &lt;strong&gt;corpid, agentid, secret, token ,aeskey, open-api-key&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;corpid&lt;/strong&gt; : 电脑端上的企业微信--&amp;gt;头像--&amp;gt;管理企业--&amp;gt;我的企业（下方） 图略&lt;br&gt;&lt;br&gt; &lt;strong&gt;agentid, secret&lt;/strong&gt;: 第一步里完成后可见。 &lt;img src=&#34;https://user-images.githubusercontent.com/12178686/233275423-67281448-02ee-4e61-8586-0fe095351fb2.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;token ,aeskey&lt;/strong&gt;： 在设置API接收里（上面第二步）&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;open-api-key&lt;/strong&gt; 这个需要在ChatGPT账号里生成，（如果没有chatgpt 账号也可以让别人生成一个，但是这个会产生费用） &lt;img src=&#34;https://user-images.githubusercontent.com/12178686/233278134-9d3fb914-9f3a-4049-b20e-3b0f237239f6.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;申请网址API KEY&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;第四步，一键部署到Render（代理服务器，免费，可以升级付费） &lt;a href=&#34;https://render.com/deploy?repo=https://github.com/sytpb/chatgpt-wework-robot&#34;&gt; &lt;img src=&#34;https://render.com/images/deploy-to-render-button.svg?sanitize=true&#34; alt=&#34;Deploy to Render&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/12178686/233276472-77ad1f07-e275-4bc2-a0fa-1c7d0b7172bc.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;如图所示，将上面的字段信息填入，然后点击Apply。&lt;/p&gt; &#xA;&lt;p&gt;需要等3-5分钟部署，完成后复制生成的服务的URL，如下图，&lt;strong&gt;然后拷贝URL后面拼接上/message&lt;/strong&gt;, 比如URL是 &lt;a href=&#34;https://abc.com&#34;&gt;https://abc.com&lt;/a&gt; 拼接成 &lt;a href=&#34;https://abc.com/message%EF%BC%8C&#34;&gt;https://abc.com/message，&lt;/a&gt; 粘贴到上面&lt;strong&gt;第二步&lt;/strong&gt;页面里，然后点保存，看到提示类似”保存成功“，代表服务已经配置成功了！ &lt;img src=&#34;https://user-images.githubusercontent.com/12178686/233277321-5392207b-58c5-4c6e-959e-de71518e4094.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;最后一步： 企业可信IP配置， 应用页的最下方，配置可信IP。 &lt;img src=&#34;https://user-images.githubusercontent.com/12178686/233280128-10dbcbdd-db47-47d2-91a0-8b20f2fd8893.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;IP地址如下图，Render-&amp;gt;Connect-&amp;gt;Outbound &lt;img src=&#34;https://user-images.githubusercontent.com/12178686/233280575-8d92c978-cf06-4763-9443-694f495d3e16.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;将这三个ip地址配置到可信IP里，至此所有配置工作完成。 &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;💯&lt;/span&gt; 下面就可以直接体验了，手机或电脑上企业微信进入自己创建的应用，可以和ChatGPT的聊起来了。&lt;/p&gt; &#xA;&lt;p&gt;经过一段时间的测试，如果想提高回复速度，办法一是升级Render 为付费，另外一个最重要的因素是chatgpt回复的有延迟，因为用的是GPT 3.5 turbo, 如果是PLUS 用户的API Key 会快很多，这是本人的测试情况，供参考。&lt;/p&gt; &#xA;&lt;h3&gt;ChatGPT的诞生给整个产业带来巨大的变化，希望大家多交流，多提issue 和点star 关注后续，也希望更多开发小伙伴参与进来，一起撸代码，一起搞新功能。&lt;/h3&gt; &#xA;&lt;h3&gt;微信群，有问题建议先提issue。&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/12178686/234575314-214a6c68-614c-43ee-9b51-492348534785.jpg&#34; width=&#34;200px&#34; alt=&#34;group&#34;&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>mtenenholtz/chat-twitter</title>
    <updated>2023-04-29T01:36:32Z</updated>
    <id>tag:github.com,2023-04-29:/mtenenholtz/chat-twitter</id>
    <link href="https://github.com/mtenenholtz/chat-twitter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chat With the Algorithm&lt;/h1&gt; &#xA;&lt;p&gt;Ask questions about the open-sourced &lt;a href=&#34;https://github.com/twitter/the-algorithm&#34;&gt;Twitter algorithm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The app is publicly hosted here: &lt;a href=&#34;https://chat-twitter.vercel.app/&#34;&gt;https://chat-twitter.vercel.app/&lt;/a&gt;. Instructions for hosting it yourself are below.&lt;/p&gt; &#xA;&lt;h2&gt;Basic architecture&lt;/h2&gt; &#xA;&lt;p&gt;The app is a NextJS/Tailwind CSS frontend with a FastAPI backend. The frontend is hosted on Vercel and the backend is hosted on a small node on &lt;a href=&#34;https://fly.io/&#34;&gt;fly.io&lt;/a&gt;. The backend uses a Pinecone vector DB on the free tier. There is a Dockerfile provided.&lt;/p&gt; &#xA;&lt;p&gt;Right now, I&#39;m footing the OpenAI bill on the public instance. But I may require users to bring their own key in the future.&lt;/p&gt; &#xA;&lt;h2&gt;Running locally&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Set up environment variables&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;OPENAI_API_KEY=...&#xA;OPENAI_ORG_ID=... # organization id, found in Manage account &amp;gt; settings&#xA;PINECONE_API_KEY=...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/mtenenholtz/chat-twitter.git&#xA;cd chat-twitter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install Node dependencies&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Run the Node server&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;In another terminal, install the Python dependencies&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;# in the backend/ directory&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Embed the Twitter codebase&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;# in the backend/ directory&#xA;python create_vector_db.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up a Pinecone index. Give it a vector dimension of 1536 and name it &lt;code&gt;pinecone-index&lt;/code&gt;. You can change this in &lt;code&gt;backend/main.py&lt;/code&gt; if you want.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the backend server&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;uvicorn main:app --reload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;The URL for the backend is currently hard coded to the live server URL. You will have to change this to localhost or your other server name.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Potential improvements&lt;/h2&gt; &#xA;&lt;p&gt;I will continue development on this project as demand exists. But, if I abandon it, here are some ideas:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The dependency on Pinecone could be removed and replaced with a simple NumPy array. I just wanted to try Pinecone.&lt;/li&gt; &#xA; &lt;li&gt;Replace the &lt;code&gt;chat_stream&lt;/code&gt; endpoint with a websocket implementation.&lt;/li&gt; &#xA; &lt;li&gt;Ask the model not to generatively reference its sources. Instead, simply copy the code snippet directly.&lt;/li&gt; &#xA; &lt;li&gt;The splitter could be improved. Right now, it&#39;s a character splitter that favors newlines, but OpenAI has implemented a similar one that splits on tokens instead.&lt;/li&gt; &#xA; &lt;li&gt;The embeddings and retrieval mechanisms could account for the hierarchy of the Algorithm&#39;s code structure, like Replit&#39;s Ghostwriter does.&lt;/li&gt; &#xA; &lt;li&gt;The UI could be improved &lt;strong&gt;a lot&lt;/strong&gt;. I suck at JS.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>