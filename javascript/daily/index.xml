<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-09T01:36:27Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Ice-Hazymoon/openai-scf-proxy</title>
    <updated>2023-03-09T01:36:27Z</updated>
    <id>tag:github.com,2023-03-09:/Ice-Hazymoon/openai-scf-proxy</id>
    <link href="https://github.com/Ice-Hazymoon/openai-scf-proxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;使用腾讯云函数一分钟搭建 OpenAI 免翻墙代理&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;猴子也能学会的腾讯云函数搭建 OpenAI 国内代理教程&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;优势：免费！比 Cloudflare Worker 简单，支持香港等多地区可选，部署简单，一行代码都不用写，有 QQ、微信账号就能注册，猴子也能学会！&lt;/p&gt; &#xA; &lt;p&gt;劣势：不支持 SSE，用户体验欠佳，但完全能用！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;PS：本教程不仅仅针对云函数，你也可以托管在自己的服务器上，或者 Azure 等平台，只要能运行 Node.js 程序即可，参加下方&lt;a href=&#34;https://raw.githubusercontent.com/Ice-Hazymoon/openai-scf-proxy/master/#%E8%87%AA%E6%89%98%E7%AE%A1&#34;&gt;【自托管】&lt;/a&gt;部分。&lt;/p&gt; &#xA;&lt;p&gt;注意：本教程只是教你搭建一个 OpenAI 的代理，需要配合其他类似软件使用，直接访问会出现 404 的错误。&lt;/p&gt; &#xA;&lt;p&gt;本文档可能有所不足，各位大佬欢迎补充。&lt;/p&gt; &#xA;&lt;h2&gt;你需要准备什么：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;一台电脑&lt;/li&gt; &#xA; &lt;li&gt;一个腾讯旗下的账号或者手机号&lt;/li&gt; &#xA; &lt;li&gt;一个脑子&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;教程开始&lt;/h2&gt; &#xA;&lt;p&gt;在 &lt;a href=&#34;https://cloud.tencent.com/&#34;&gt;https://cloud.tencent.com/&lt;/a&gt; 注册账号&lt;/p&gt; &#xA;&lt;p&gt;进入云函数控制台：&lt;a href=&#34;https://console.cloud.tencent.com/scf/list&#34;&gt;https://console.cloud.tencent.com/scf/list&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;依次点击【新建】-&amp;gt;【从头开始】，然后按照以下配置，&lt;strong&gt;没写出来的就不用管，使用默认设置&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;函数类型：Web函数&lt;/li&gt; &#xA; &lt;li&gt;函数名称：openai-proxy（也可以随便取个名字）&lt;/li&gt; &#xA; &lt;li&gt;地域：香港（也可以是中国之外的任何国家）&lt;/li&gt; &#xA; &lt;li&gt;运行环境：Nodejs 16.13（或者更高的版本）&lt;/li&gt; &#xA; &lt;li&gt;高级配置: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;内存：64M&lt;/li&gt; &#xA;   &lt;li&gt;执行超时时间：900 秒&lt;/li&gt; &#xA;   &lt;li&gt;请求多并发：2 并发&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;日志配置 -&amp;gt; 日志投递：启用（可以选择不开，开的话一个月应该几分钱）&lt;/li&gt; &#xA; &lt;li&gt;函数代码：本地上传zip包（&lt;a href=&#34;https://github.com/Ice-Hazymoon/openai-scf-proxy/releases/download/0.0.3/openai-proxy.zip&#34;&gt;点我下载 ZIP 包&lt;/a&gt;）&lt;/li&gt; &#xA; &lt;li&gt;触发器配置（这里可能要创建一个新的触发器）： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;默认触发器&lt;/li&gt; &#xA;   &lt;li&gt;触发别名/版本：默认流量&lt;/li&gt; &#xA;   &lt;li&gt;请求方法：ANY&lt;/li&gt; &#xA;   &lt;li&gt;发布环境：发布&lt;/li&gt; &#xA;   &lt;li&gt;鉴权方法：免鉴权&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;之后点击“完成”按钮，进入【函数管理】，点击【函数代码】，往下拉，找到【访问路径】，这里就是你的代理地址&lt;/p&gt; &#xA;&lt;p&gt;使用的时候需要把 &#34;/release&#34; 部分删除&lt;/p&gt; &#xA;&lt;p&gt;例如：&lt;code&gt;https://service-aaaaa.hk.apigw.tencentcs.com/release/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;改为：&lt;code&gt;https://service-aaaaa.hk.apigw.tencentcs.com/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;如何使用&lt;/h2&gt; &#xA;&lt;p&gt;你可以在任何支持配置 OpenAI 域名的软件中使用这个服务，例如在 CatGPT 中配置：&lt;/p&gt; &#xA;&lt;p&gt;进入：&lt;a href=&#34;https://ai.okmiku.com/&#34;&gt;https://ai.okmiku.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;点击右上角的🔑图标，在接口地址中输入这个地址，点击保存即可&lt;/p&gt; &#xA;&lt;p&gt;愉快的与 OpenAI 一起冲浪吧~&lt;/p&gt; &#xA;&lt;h2&gt;自托管&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/Ice-Hazymoon/openai-scf-proxy&#xA;cd openai-scf-proxy&#xA;npm install&#xA;npm run start&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>easychen/openai-api-proxy</title>
    <updated>2023-03-09T01:36:27Z</updated>
    <id>tag:github.com,2023-03-09:/easychen/openai-api-proxy</id>
    <link href="https://github.com/easychen/openai-api-proxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;可通过Docker 一行命令部署的 OpenAI/GPT API代理，支持SSE实时返回和部署到腾讯云函数，已添加教程 。Simple proxy for OpenAi api via a one-line docker command&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;openai-api-proxy&lt;/h1&gt; &#xA;&lt;p&gt;可以部署到docker和云函数的OpenAI API代理 Simple proxy for OpenAi api via a one-line docker command&lt;/p&gt; &#xA;&lt;p&gt;🎉 已经支持SSE，可以实时返回内容&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/easychen/openai-api-proxy/master/FUNC.md&#34;&gt;腾讯云函数部署教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/easychen/openai-api-proxy/master/README.CN.md&#34;&gt;简体中文使用说明&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easychen/openai-gpt-dev-notes-for-cn-developer&#34;&gt;《如何快速开发一个OpenAI/GPT应用：国内开发者笔记》&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;以下英文由GPT翻译。The following English was translated by GPT.&lt;/p&gt; &#xA;&lt;h2&gt;NodeJS Deployment&lt;/h2&gt; &#xA;&lt;p&gt;You can deploy ./app.js to any environment that supports nodejs 14+, such as cloud functions and edge computing platforms.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy app.js and package.json to the directory&lt;/li&gt; &#xA; &lt;li&gt;Run yarn install to install dependencies&lt;/li&gt; &#xA; &lt;li&gt;Run node app.js to start the service.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Docker Deployment&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 9000:9000 easychen/ai.level06.com:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The proxy address is http://${IP}:9000.&lt;/p&gt; &#xA;&lt;h3&gt;Available Environment Variables&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;PORT: Service port.&lt;/li&gt; &#xA; &lt;li&gt;PROXY_KEY: Proxy access key used to restrict access.&lt;/li&gt; &#xA; &lt;li&gt;TIMEOUT: Request timeout, default is 5 seconds.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage of the API&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Change the request address of OpenAI (&lt;a href=&#34;https://api.openai.com&#34;&gt;https://api.openai.com&lt;/a&gt;) to the address of this proxy (without a slash).&lt;/li&gt; &#xA; &lt;li&gt;If PROXY_KEY is set, add &lt;code&gt;:&amp;lt;PROXY_KEY&amp;gt;&lt;/code&gt; after the OpenAI key. If not set, no modification is required.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Explanation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Only GET and POST method interfaces are supported, and file-related interfaces are not supported.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;SSE is currently not supported, so stream-related options need to be turned off.&lt;/del&gt; SSE is OK now.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Example of Client Usage&lt;/h2&gt; &#xA;&lt;p&gt;Take &lt;code&gt;https://www.npmjs.com/package/chatgpt&lt;/code&gt; as an example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;chatApi= new gpt.ChatGPTAPI({&#xA;    apiKey: &#39;sk.....:&amp;lt;proxy_key here&amp;gt;&#39;,&#xA;    apiBaseUrl: &#34;http://localhost:9001&#34;, // Pass the proxy address&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;SSE referenced the related code in &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api/raw/main/src/fetch-sse.ts&#34;&gt;chatgpt-api project&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>anc95/ChatGPT-CodeReview</title>
    <updated>2023-03-09T01:36:27Z</updated>
    <id>tag:github.com,2023-03-09:/anc95/ChatGPT-CodeReview</id>
    <link href="https://github.com/anc95/ChatGPT-CodeReview" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐥 A code review bot powered by ChatGPT&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CodeReview BOT&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A code review robot powered by ChatGPT&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Translation Versions: &lt;a href=&#34;https://raw.githubusercontent.com/anc95/ChatGPT-CodeReview/main/README.md&#34;&gt;ENGLISH&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/anc95/ChatGPT-CodeReview/main/README.zh-CN.md&#34;&gt;中文简体&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/anc95/ChatGPT-CodeReview/main/README.zh-TW.md&#34;&gt;中文繁體&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;Install: &lt;a href=&#34;https://github.com/apps/cr-gpt&#34;&gt;apps/cr-gpt&lt;/a&gt;;&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the repo homepage which you want integrate this bot&lt;/li&gt; &#xA; &lt;li&gt;click &lt;code&gt;settings&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;click &lt;code&gt;actions&lt;/code&gt; under &lt;code&gt;secrets and variables&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Change to &lt;code&gt;Variables&lt;/code&gt; tab, create a new variable &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; with the value of your open api key &lt;img width=&#34;1465&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/13167934/218533628-3974b70f-c423-44b0-b096-d1ec2ace85ea.png&#34;&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Start using&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The robot will automatically do the code review when you create a new Pull request, the review information will show in the pr timeline / file changes part.&lt;/li&gt; &#xA; &lt;li&gt;After &lt;code&gt;git push&lt;/code&gt; update the pull request, cr bot will re-review the changed files&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/anc95/ChatGPT-CodeReview/pull/21&#34;&gt;ChatGPT-CodeReview/pull/21&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;1052&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/13167934/218999459-812206e1-d8d2-4900-8ce8-19b5b6e1f5cb.png&#34;&gt; &#xA;&lt;h3&gt;Using Github Actions&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;this is a recommended way as github bot is serving on a humble vps, I can&#39;t make sure it&#39;s always stable&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/marketplace/actions/chatgpt-codereviewer&#34;&gt;actions/chatgpt-codereviewer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;add the &lt;code&gt;OPEN_API_KEY&lt;/code&gt; to your github actions secrets&lt;/li&gt; &#xA; &lt;li&gt;create &lt;code&gt;.github/workflows/cr.yml&lt;/code&gt; add bellow content&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;name: Code Review&#xA;&#xA;permissions:&#xA;  contents: read&#xA;  pull-requests: write&#xA;&#xA;on:&#xA;  pull_request:&#xA;    types: [opened, reopened]&#xA;&#xA;jobs:&#xA;  test:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: anc95/ChatGPT-CodeReview@v1&#xA;        env:&#xA;          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Self-hosting&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone code&lt;/li&gt; &#xA; &lt;li&gt;copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt;, and fill the env variables&lt;/li&gt; &#xA; &lt;li&gt;install deps and run&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm i&#xA;npm -i g pm2&#xA;npm run build&#xA;pm2 start pm2.config.cjs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://probot.github.io/docs/development/&#34;&gt;probot&lt;/a&gt; for more detail&lt;/p&gt; &#xA;&lt;h2&gt;Dev&lt;/h2&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Install dependencies&#xA;npm install&#xA;&#xA;# Run the bot&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 1. Build container&#xA;docker build -t cr-bot .&#xA;&#xA;# 2. Start container&#xA;docker run -e APP_ID=&amp;lt;app-id&amp;gt; -e PRIVATE_KEY=&amp;lt;pem-value&amp;gt; cr-bot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you have suggestions for how cr-bot could be improved, or want to report a bug, open an issue! We&#39;d love all and any contributions.&lt;/p&gt; &#xA;&lt;p&gt;For more, check out the &lt;a href=&#34;https://raw.githubusercontent.com/anc95/ChatGPT-CodeReview/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;this project is inpired by &lt;a href=&#34;https://github.com/sturdy-dev/codereview.gpt&#34;&gt;codereview.gpt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anc95/ChatGPT-CodeReview/main/LICENSE&#34;&gt;ISC&lt;/a&gt; © 2023 anc95&lt;/p&gt;</summary>
  </entry>
</feed>