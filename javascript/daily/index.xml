<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-25T01:31:10Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nightwatchjs/nightwatch</title>
    <updated>2024-02-25T01:31:10Z</updated>
    <id>tag:github.com,2024-02-25:/nightwatchjs/nightwatch</id>
    <link href="https://github.com/nightwatchjs/nightwatch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Integrated end-to-end testing framework written in Node.js and using W3C Webdriver API. Developed at @browserstack&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nightwatch.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/nightwatch&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/nightwatch.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nightwatchjs/nightwatch/actions/workflows/build-node.yaml&#34;&gt;&lt;img src=&#34;https://github.com/nightwatchjs/nightwatch/actions/workflows/build-node.yaml/badge.svg?branch=main&#34; alt=&#34;Node.js CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/nightwatchjs/nightwatch&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/nightwatchjs/nightwatch/branch/main/graph/badge.svg?token=MSObyfECEh&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/SN8Da2X&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/618399631038218240.svg?color=7389D8&amp;amp;labelColor=6A7EC2&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;style=flat-square&amp;amp;label=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Nightwatch.js Logo&#34; src=&#34;https://raw.githubusercontent.com/nightwatchjs/nightwatch/main/.github/assets/nightwatch-logo.png&#34; width=&#34;300&#34;&gt; &lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://nightwatchjs.org&#34;&gt;Homepage&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://nightwatchjs.org/guide&#34;&gt;Developer Guide&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://nightwatchjs.org/api&#34;&gt;API Reference&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://nightwatchjs.org/about&#34;&gt;About&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://nightwatchjs.org/blog&#34;&gt;Blog&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Nightwatch is an integrated testing framework powered by Node.js and using the &lt;a href=&#34;https://www.w3.org/TR/webdriver/&#34;&gt;W3C Webdriver API&lt;/a&gt;. It is a complete testing solution developed at &lt;a href=&#34;https://www.browserstack.com/&#34;&gt;BrowserStack&lt;/a&gt; and which can be used for:&lt;/p&gt; &#xA;&lt;p&gt;‚òëÔ∏è end-to-end testing of web applications and websites&lt;/p&gt; &#xA;&lt;p&gt;‚òëÔ∏è component testing in isolation (React / Vue / Storybook / Angular)&lt;/p&gt; &#xA;&lt;p&gt;‚òëÔ∏è Node.js unit, visual regression testing, accessibility testing &amp;amp; API testing&lt;/p&gt; &#xA;&lt;p&gt;‚òëÔ∏è Native mobile app testing on Android &amp;amp; iOS&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Nightwatch v3&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nightwatchjs.org/guide/overview/whats-new-in-v3.html&#34;&gt;What&#39;s New&lt;/a&gt; | &lt;a href=&#34;https://github.com/nightwatchjs/nightwatch/releases/tag/v3.0.1&#34;&gt;Release Notes&lt;/a&gt; | &lt;a href=&#34;https://github.com/nightwatchjs/nightwatch/discussions&#34;&gt;Discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Nightwatch v3 is an all new generation that has been built around these three pillars:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Developer Experience&lt;/strong&gt; : The entire experience from getting started, to writing and debugging tests, has been redesigned for speed, stability, and consistent non-flaky results.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mobile first&lt;/strong&gt;: Test your web or native, iOS and Android, mobile applications on simulators, real mobile devices or a cloud grid like BrowserStack.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;One test automation framework&lt;/strong&gt;: Run all types of tests from unit, component, and E2E to API, visual, and accessibility with a single framework.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/nightwatchjs/nightwatch/releases/tag/v3.0.1&#34;&gt;Nightwatch v3&lt;/a&gt; is not just a new version, it‚Äôs the result of months of engineering effort to reimagine test automation for the future. Try it out in 60 seconds and see it in action.&lt;/p&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Get started in 60 seconds&lt;/h2&gt; &#xA;&lt;h4&gt;1. Install Nightwatch from NPM&lt;/h4&gt; &#xA;&lt;p&gt;From your existing project&#39;s root dir:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm init nightwatch@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, if you want to initialize a new project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm init nightwatch@latest ./path/to/new/project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/39924567/174841680-59664ff6-da2d-44a3-a1df-52d22c69b1e2.gif&#34; alt=&#34;nightwatch-cli-gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;2. Answer a few questions about your preferred setup:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What is your Language - Test Runner setup?&lt;/li&gt; &#xA; &lt;li&gt;Where do you want to run your e2e tests?&lt;/li&gt; &#xA; &lt;li&gt;Where you&#39;ll be testing on?&lt;/li&gt; &#xA; &lt;li&gt;Where do you plan to keep your end-to-end tests?&lt;/li&gt; &#xA; &lt;li&gt;What is the base_url of your project?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Nightwatch will do the entire setup for you based on your answers.&lt;/p&gt; &#xA;&lt;h4&gt;3. Run a Demo Test:&lt;/h4&gt; &#xA;&lt;p&gt;Nightwatch comes with a few examples, which are automatically copied to your Nightwatch project during the setup and can also be used as boilerplate to write your own tests on top of them.&lt;/p&gt; &#xA;&lt;p&gt;You can follow the instructions given at the end of the setup to run your first test with Nightwatch.&lt;/p&gt; &#xA;&lt;img width=&#34;413&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/39924567/174763723-aff4d501-6320-402c-81cc-de75fbb5e8f0.png&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Nightwatch mobile app testing&lt;/h2&gt; &#xA;&lt;p&gt;Nightwatch enables automation testing of native mobile applications via Appium. It combines the robustness of Appium with the enhanced developer experience provided by Nightwatch. It enables end-to-end functional testing of native mobile apps on Android and iOS devices. Try it now&lt;/p&gt; &#xA;&lt;h2&gt;Go beyond E2E&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://nightwatchjs.org/guide/component-testing/introduction.html&#34;&gt;Component testing&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;With Nightwatch you can test components in isolation by mounting them in the browser. Nightwatch 2 added support for component testing for popular web frameworks such as&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightwatchjs.org/guide/component-testing/testing-react-components.html&#34;&gt;React&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightwatchjs.org/guide/component-testing/vite-plugin.html&#34;&gt;VueJS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightwatchjs.org/guide/component-testing/angular-component-testing.html&#34;&gt;Angular&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightwatchjs.org/guide/component-testing/storybook-component-testing.html&#34;&gt;Storybook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Nightwatch unit tests&lt;/h3&gt; &#xA;&lt;p&gt;The tests for Nightwatch are written using Mocha.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the project&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/nightwatchjs/nightwatch.git&#xA;$ cd nightwatch&#xA;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run tests&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;To run the complete test suite:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To check test coverage, run the command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm run mocha-coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and then open the generated coverage/index.html file in your browser.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://nightwatchjs.org/guide/writing-tests/write-nodejs-unit-integration-tests.html&#34;&gt;Unit testing guide&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Other types of testing&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://nightwatchjs.org/guide/writing-tests/visual-regression-testing.html&#34;&gt;Visual Regression Testing&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Nightwatch v3 introduces visual regression testing as an in-house plugin. The plugin takes care of&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Capturing screenshots&lt;/li&gt; &#xA; &lt;li&gt;Comparison with baseline to highlight visual differences&lt;/li&gt; &#xA; &lt;li&gt;Report to review the differences&lt;/li&gt; &#xA; &lt;li&gt;Approve the changes&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;VRT can be done on real desktop &amp;amp; mobile browsers. Also, VRT can be run on components as part of component testing as well.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://nightwatchjs.org/guide/writing-tests/api-testing.html&#34;&gt;API Testing&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;API testing is now available with Nightwatch v3. The following functionality can be achieved with API testing&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Request assertions&lt;/li&gt; &#xA; &lt;li&gt;Response assertions&lt;/li&gt; &#xA; &lt;li&gt;Viewing API tests in the HTML report&lt;/li&gt; &#xA; &lt;li&gt;Mock server&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://nightwatchjs.org/guide/using-nightwatch/accessibility-testing.html&#34;&gt;Accessibility Testing&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Nightwatch v3 packages the aXe-core package developed by Deque Systems as a plugin. It enables 90 different types of accessibility tests for WCAG compliance.&lt;/p&gt; &#xA;&lt;h2&gt;ü¶â About Nightwatch&lt;/h2&gt; &#xA;&lt;p&gt;Nightwatch was initially built by &lt;a href=&#34;https://github.com/pineviewlabs/&#34;&gt;@pineviewlabs&lt;/a&gt; - an independent software consultancy based in Oslo, Norway, with help from &lt;a href=&#34;https://github.com/nightwatchjs/nightwatch/graphs/contributors&#34;&gt;contributors&lt;/a&gt;. In mid 2021, Nightwatch has become a part of the &lt;a href=&#34;https://github.com/browserstack&#34;&gt;@BrowserStack&lt;/a&gt; family and it is being developed further at the BrowserStack Open-source Program Office. Read more on &lt;a href=&#34;https://nightwatchjs.org/blog/nightwatch-has-joined-the-browserstack-family.html&#34;&gt;our blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome any and all contributions from the community which can help improve Nightwatch. Please check out &lt;a href=&#34;https://raw.githubusercontent.com/nightwatchjs/nightwatch/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more extensive contributing guidelines.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nightwatchjs/nightwatch/raw/main/LICENSE.md&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fal-ai/sdxl-lightning-demo-app</title>
    <updated>2024-02-25T01:31:10Z</updated>
    <id>tag:github.com,2024-02-25:/fal-ai/sdxl-lightning-demo-app</id>
    <link href="https://github.com/fal-ai/sdxl-lightning-demo-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A demo application using fal.realtime and the lightning fast SDXL API provided by fal&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Lightning Fast SDXL API demo by fal.ai&lt;/h2&gt; &#xA;&lt;p&gt;This application is a sample of the SDXL Lightning API [https://fal.ai/models/stable-diffusion-xl-lightning]. It also shows the &lt;code&gt;fal.realtime&lt;/code&gt; client in action.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fal.ai/&#34;&gt;Fal AI&lt;/a&gt; API key (for model access)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Getting started&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add the &lt;code&gt;FAL_KEY&lt;/code&gt; to your &lt;code&gt;.env.local&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>