<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-21T01:32:04Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kevin-mizu/domloggerpp</title>
    <updated>2024-07-21T01:32:04Z</updated>
    <id>tag:github.com,2024-07-21:/kevin-mizu/domloggerpp</id>
    <link href="https://github.com/kevin-mizu/domloggerpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A browser extension that allows you to monitor, intercept, and debug JavaScript sinks based on customizable configurations.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kevin-mizu/domloggerpp/main/.github/banner.png&#34; width=&#34;80%&#34;&gt;&lt;br&gt; A browser extension that allows you to monitor, intercept, and debug JavaScript sinks based on customizable configurations. &lt;br&gt; &lt;img alt=&#34;GitHub release (latest by date)&#34; src=&#34;https://img.shields.io/github/v/release/kevin-mizu/DOMLoggerpp&#34;&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=kevin_mizu&#34; title=&#34;Follow&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/podalirius_?label=kevin_mizu&amp;amp;style=social&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;From extension stores&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Firefox: &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/domloggerpp&#34;&gt;https://addons.mozilla.org/en-US/firefox/addon/domloggerpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chromium: &lt;a href=&#34;https://chrome.google.com/webstore/detail/domlogger%2B%2B/lkpfjhmpbmpflldmdpdoabimdbaclolp&#34;&gt;https://chrome.google.com/webstore/detail/domlogger%2B%2B/lkpfjhmpbmpflldmdpdoabimdbaclolp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Safari: Not yet available.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Manual installation&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Download the latest release: &lt;a href=&#34;https://github.com/kevin-mizu/domloggerpp/releases/&#34;&gt;https://github.com/kevin-mizu/domloggerpp/releases/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Firefox: Go to &lt;code&gt;about:debugging#/runtime/this-firefox&lt;/code&gt; and click on &lt;code&gt;Load Temporary Add-on&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kevin-mizu/domloggerpp/main/.github/images/firefox_manual.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chromium: Go to &lt;code&gt;chrome://extensions/&lt;/code&gt;, enable &lt;code&gt;Developer mode&lt;/code&gt; and click on &lt;code&gt;Load unpacked&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kevin-mizu/domloggerpp/main/.github/images/chromium_manual.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;if you want to build the extension by yourself, check the &lt;a href=&#34;https://raw.githubusercontent.com/kevin-mizu/domloggerpp/main/app/&#34;&gt;app&lt;/a&gt; folder.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üåü Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Regex-based domain management.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Flexible hooking configuration (&lt;code&gt;class&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;attribute&lt;/code&gt;, &lt;code&gt;event&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Regex-based hooks arguments filtering (&lt;code&gt;match&lt;/code&gt;, &lt;code&gt;!match&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dynamic sinks arguments update (&lt;code&gt;hookFunction&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Customizable notifications system (&lt;code&gt;alert&lt;/code&gt;, &lt;code&gt;notification&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; On-demand debugging breakpoints.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Integrated Devtools log panel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Remote logging via webhooks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Extensive theme customization.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üìù Usage example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kevin-mizu/domloggerpp/assets/48991194/d6ac9f90-0f44-4cd2-a5e6-890cd44b0aeb&#34;&gt;https://github.com/kevin-mizu/domloggerpp/assets/48991194/d6ac9f90-0f44-4cd2-a5e6-890cd44b0aeb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Devtools&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kevin-mizu/domloggerpp/main/.github/images/devtools.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;Custom filter buttons&lt;/code&gt;: Dynamically generated from your custom settings, these buttons facilitate log filtering.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Data/Canary search bar&lt;/code&gt;: Easily filter and highlight logs using specific criteria related to a sink&#39;s args data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Advanced column search&lt;/code&gt;: Tailor your search to specific column criteria, like &lt;code&gt;sink=innerHTML;frame=top&lt;/code&gt;, for more refined results.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Global search bar&lt;/code&gt;: This default datatable feature enables searching across all columns.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Debug button&lt;/code&gt;: Navigate directly to the page triggering the sink, with an automatic breakpoint for debugging.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Log data management buttons&lt;/code&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Import JSON log data.&lt;/li&gt; &#xA;   &lt;li&gt;Clear existing log data.&lt;/li&gt; &#xA;   &lt;li&gt;Export log data in JSON format.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üí¨ Popup&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kevin-mizu/domloggerpp/main/.github/images/popup.png&#34; width=&#34;310&#34; height=&#34;409&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Domains&lt;/code&gt;: Define allowed domains using regex to specify from which sites you&#39;d like to receive logs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Hooking&lt;/code&gt;: Choose the hooking configuration to apply on the selected website.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Settings&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kevin-mizu/domloggerpp/assets/48991194/0827eef3-6c16-42fc-b84d-d8ea16def6bf&#34;&gt;https://github.com/kevin-mizu/domloggerpp/assets/48991194/0827eef3-6c16-42fc-b84d-d8ea16def6bf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Settings&lt;/code&gt;: Manage your hooking configurations - create, edit, modify, and remove as per your needs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Domains&lt;/code&gt;: Easily manage allowed domains, similar to the functionality in the popup menu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Webhook&lt;/code&gt;: Specify a remote host that will receive logs based on your configuration settings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Devtools&lt;/code&gt;: If you&#39;re using a backend server and prefer not to display information in your devtool panel, this section lets you disable that feature.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Table&lt;/code&gt;: Personalize the devtools tables to align with your preferences.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Customize&lt;/code&gt;: Personalize the application&#39;s theme to align with your preferences.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üîó Hooking configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Global JSON structure&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;_description&#34;: &#34;JSON config example&#34;,&#xA;&#xA;    &#34;hooks&#34;: {&#xA;        &#34;category&#34;: {&#xA;            &#34;type_1&#34;: [ &#34;sink_1&#34;, &#34;sink_2&#34; ],&#xA;            &#34;type_2&#34;: [ &#34;sink_1&#34;, &#34;sink_2&#34; ]&#xA;        }&#xA;    },&#xA;&#xA;    &#34;config&#34;: {&#xA;        &#34;*&#34;: {},&#xA;        &#34;sink_1&#34;: {&#xA;            &#34;match&#34;: [ &#34;regex_1&#34;, &#34;regex_2&#34;, &#34;exec:return &#39;regex_3&#39;&#34; ],&#xA;            &#34;!match&#34;: [ &#34;regex_1&#34;, &#34;regex_2&#34;, &#34;exec:return &#39;regex_3&#39;&#34; ],&#xA;            &#34;hookFunction&#34;: &#34;return args&#34;,&#xA;            &#34;alert&#34;: {&#xA;                &#34;match&#34;: [ &#34;regex_1&#34;, &#34;regex_2&#34;, &#34;exec:return &#39;regex_3&#39;&#34; ],&#xA;                &#34;!match&#34;: [ &#34;regex_1&#34;, &#34;regex_2&#34;, &#34;exec:return &#39;regex_3&#39;&#34; ],&#xA;                &#34;notification&#34;: true&#xA;            }&#xA;        }&#xA;    },&#xA;&#xA;    &#34;removeHeaders&#34;: [ &#34;content-security-policy&#34; ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;None of the specified keys in the configuration are mandatory; they can be manage to fit specific needs or omitted as desired.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;_Description&lt;/h3&gt; &#xA;&lt;p&gt;This key aims to provide a way to insert notes within the configuration JSON itself. The value can be whatever you want as long as the JSON remains valid.&lt;/p&gt; &#xA;&lt;h3&gt;Hooks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;category&lt;/code&gt;: Acts as a filter in the devtools panel, helping you organize and identify the sinks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;type_X&lt;/code&gt;: Specifies the type of sink you&#39;re targeting. The possible types are: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;class&lt;/li&gt; &#xA;   &lt;li&gt;attribute&lt;/li&gt; &#xA;   &lt;li&gt;function&lt;/li&gt; &#xA;   &lt;li&gt;event&lt;/li&gt; &#xA;   &lt;li&gt;custom&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sink_X&lt;/code&gt;: This denotes the name of the sink that needs to be hooked, the notation varies based on type: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;class&lt;/code&gt; &amp;amp; &lt;code&gt;function&lt;/code&gt;: Use the target name directly, such as &lt;code&gt;URLSearchParams&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;event&lt;/code&gt;: Only use the event name. For instance, for the onmessage event, simply use &lt;code&gt;message&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;attribute&lt;/code&gt;: Prefix with &lt;code&gt;set:&lt;/code&gt; or/and &lt;code&gt;get:&lt;/code&gt; as appropriate. An example would be &lt;code&gt;set:Element.prototype.innerHTML&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;custom&lt;/code&gt;: Format it as &lt;code&gt;type:sink_X&lt;/code&gt;. For example, &lt;code&gt;attribute:set:jQuery.prototype.add&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Config&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sink&lt;/code&gt;: Refers to the target sink to be configured. It&#39;s essential for this to be present in the hooks section.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;match&lt;/code&gt;: An array of regular expressions. The parameters of the sink must respect to these patterns.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;!match&lt;/code&gt;: An array of regular expressions that the parameters of the sink should not match.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hookFunction&lt;/code&gt;: This function takes the sink&#39;s arguments and allows you to modify them before the original function is invoked. For example, using &lt;code&gt;return [args[0] + &#39;*2&#39;]&lt;/code&gt; on &lt;code&gt;eval(&#39;2&#39;)&lt;/code&gt; will result in &lt;code&gt;4&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;alert&lt;/code&gt;: Triggers an alert badge on the extension icon based on specific conditions. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;match&lt;/code&gt; &amp;amp; &lt;code&gt;!match&lt;/code&gt;: Additional regular expressions that the sink parameters must respect to or avoid, respectively, in order to trigger the alert.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;notification&lt;/code&gt;: If set to &lt;code&gt;true&lt;/code&gt;, a notification popup will appear when all conditions are satisfied.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Since version &lt;code&gt;1.0.4&lt;/code&gt;, it is now possible to use the &lt;code&gt;exec:&lt;/code&gt; regex directive, which allows you to generate a regex from JavaScript execution. For instance: &lt;code&gt;exec:return document.location.pathname&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;For more detailed examples and insights, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/kevin-mizu/domloggerpp/main/configs/&#34;&gt;configs&lt;/a&gt; folder.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;removeHeaders&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to this key, you&#39;ll be able to provide a list of response headers (in lower case) that you want to remove if the remove headers feature is enabled. This is especially useful for removing security headers during tests.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üñ•Ô∏è Backend&lt;/h2&gt; &#xA;&lt;p&gt;Not yet developed.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üó∫Ô∏è Road map&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set up an integrated backend server.&lt;/li&gt; &#xA; &lt;li&gt;Improve the scaling of the devtools panel.&lt;/li&gt; &#xA; &lt;li&gt;Find a way to log Content Security Policy (CSP) errors.&lt;/li&gt; &#xA; &lt;li&gt;Find a way to hook the document.location property.&lt;/li&gt; &#xA; &lt;li&gt;Simplify headless browser compatibility.&lt;/li&gt; &#xA; &lt;li&gt;Fix a DOS with Reflect.apply, crypto, this.nodeName.toLowerCase... hooking.&lt;/li&gt; &#xA; &lt;li&gt;Fix the devtools goto button when the sink is reached within an iframe (it should redirect on the top frame).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;ü§ù Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Many people helped and help DOMLogger++ become what it is and need to be acknowledged here!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://x.com/aituglo&#34;&gt;@aituglo&lt;/a&gt;, &lt;a href=&#34;https://x.com/xnl_h4ck3r&#34;&gt;@xnl_h4ck3r&lt;/a&gt;, &lt;a href=&#34;https://github.com/AetherBlack&#34;&gt;AetherBlack&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/FeelProud_sec&#34;&gt;@FeelProud_sec&lt;/a&gt;, &lt;a href=&#34;https://github.com/aristosMiliaressis&#34;&gt;aristosMiliaressis&lt;/a&gt;, &lt;a href=&#34;https://x.com/me0wday&#34;&gt;@me0wday&lt;/a&gt;, &lt;a href=&#34;https://x.com/k1ng_pr4wn&#34;&gt;@k1ng_pr4wn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Special thanks to &lt;a href=&#34;https://twitter.com/BitK_&#34;&gt;@BitK_&lt;/a&gt; for the well-structured code in &lt;a href=&#34;https://github.com/yeswehack/PwnFox&#34;&gt;Pwnfox&lt;/a&gt;, it helped me a lot to understand browsers extensions ‚ù§Ô∏è&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>