<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-02T01:32:08Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>muyoou/st-memory-enhancement</title>
    <updated>2025-05-02T01:32:08Z</updated>
    <id>tag:github.com,2025-05-02:/muyoou/st-memory-enhancement</id>
    <link href="https://github.com/muyoou/st-memory-enhancement" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SillyTavern酒馆的长期记忆增强插件&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;✨ SillyTavern 酒馆记忆增强插件 ✨&lt;/h1&gt; &#xA; &lt;p&gt; &lt;b&gt;🧠 记忆增强插件&lt;/b&gt; - 专为 &lt;a href=&#34;https://github.com/SillyTavern/SillyTavern&#34;&gt;SillyTavern酒馆&lt;/a&gt; 设计，旨在显著提升角色扮演中 AI 的长期记忆能力！ &lt;/p&gt;&#xA; &lt;p&gt; &lt;a href=&#34;https://muyoo.com.cn/2025/01/26/SillyTavern%E9%85%92%E9%86%86%E8%AE%B0%E5%BF%86%E5%A2%9E%E5%BC%BA%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/&#34;&gt;⚙️ 安装教程&lt;/a&gt; | &lt;a href=&#34;https://muyoo.com.cn/2025/01/30/SillyTavern%E9%85%92%E9%86%86%E8%AE%B0%EE%BF%86%E5%A2%9E%E5%BC%BA%E6%8F%92%A2%A2%E4%BB%B6%E6%9B%B4%E6%96%B0/&#34;&gt;🔄 更新教程&lt;/a&gt; | &lt;a href=&#34;https://muyoo.com.cn/2025/01/27/SillyTavern%E9%85%92%E9%86%86%E8%AE%B0%EE%BF%86%E5%A2%9E%E5%BC%BA%E6%8F%92%A2%A2%E4%BB%B6%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/&#34;&gt;📜 更新日志&lt;/a&gt; | &lt;a href=&#34;https://muyoo.com.cn/2025/02/09/SillyTavern%E9%85%92%E9%86%92%E9%A6%86%E8%AE%B0%EE%BF%86%E5%A2%9E%E5%BC%BA%E6%8F%92%A2%A2%E4%BB%B6%E9%97%AE%E9%A2%98%E8%87%AA%E6%9F%A5/&#34;&gt;🔍 问题自查&lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/muyoou/st-memory-enhancement/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/muyoou/st-memory-enhancement?style=flat-square&#34; alt=&#34;GitHub Stars&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/muyoou/st-memory-enhancement/graphs/contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/muyoou/st-memory-enhancement?style=flat-square&#34; alt=&#34;Contributors&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/muyoou/st-memory-enhancement/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/muyoou/st-memory-enhancement?style=flat-square&#34; alt=&#34;GitHub Issues&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://qm.qq.com/q/bBSIrwKty2&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Join-QQ_Group-ff69b4&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/SillyTavern/SillyTavern&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/SillyTavern-%3E=1.10.0-blue&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;b&gt;🚀 最新版本: v2.0.0 🚀&lt;/b&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] &lt;strong&gt;大版本2.0已发布 - 正在整理文档中&lt;/strong&gt; 注意：原先的扩展设置已不存在，记忆插件所有的内容都被转移到上方的倒数第三个按钮中 如果有任何使用问题或者改进的想法建议，欢迎 &lt;a href=&#34;https://github.com/muyoou/st-memory-enhancement/issues&#34;&gt;提出Issue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🌟 插件简介&lt;/h2&gt; &#xA;&lt;p&gt;记忆增强插件为您的角色扮演体验注入强大的 &lt;strong&gt;结构化长期记忆&lt;/strong&gt;，支持角色设定、关键事件、重要物品等自定义内容。它能有效帮助 AI 更好地理解和记住对话上下文，从而做出 &lt;strong&gt;更连贯、更贴近情境&lt;/strong&gt; 的推演。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;插件优势：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;😊 &lt;strong&gt;用户友好：&lt;/strong&gt; 通过直观的表格轻松查看和编辑记忆，掌控角色记忆。&lt;/li&gt; &#xA; &lt;li&gt;🛠️ &lt;strong&gt;创作者友好：&lt;/strong&gt; 便捷导出和分享配置，JSON 文件灵活定制表格结构，满足各种创作需求。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;✨ 核心功能亮点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📅 &lt;strong&gt;结构化记忆储存：&lt;/strong&gt; 基于表格的强大记忆系统，未来更将支持节点编辑器，自由定义表格类型和结构。&lt;/li&gt; &#xA; &lt;li&gt;✏️ &lt;strong&gt;灵活内容编辑：&lt;/strong&gt; 表格内容完全可编辑，随时浏览和修改，打造专属角色记忆库。&lt;/li&gt; &#xA; &lt;li&gt;🗃️ &lt;strong&gt;自由模板管理：&lt;/strong&gt; 可以管理保存多个作用域的模板，以灵活调整表格结构。&lt;/li&gt; &#xA; &lt;li&gt;🤖 &lt;strong&gt;智能提示词生成与注入：&lt;/strong&gt; 自动生成精准提示词，深度注入或全局宏，无缝集成世界书或预设，提升 AI 表现。&lt;/li&gt; &#xA; &lt;li&gt;🖼️ &lt;strong&gt;自定义数据推送展示：&lt;/strong&gt; 表格内容推送至聊天界面 DOM，自定义样式，重要信息醒目可见。&lt;/li&gt; &#xA; &lt;li&gt;📦 &lt;strong&gt;便捷配置导出与分享：&lt;/strong&gt; 提供丰富的自定义选项（提示词、注入方式等），预设轻松导出和分享表格结构和设置。&lt;/li&gt; &#xA; &lt;li&gt;🚀 &lt;strong&gt;分步操作：&lt;/strong&gt; 未来结合主副 API，实现任务智能分配（生成、整理、重建等），支持自定义触发时机，高效管理记忆。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/36997237-2c72-46b5-a8df-f5af3fa42171&#34; alt=&#34;插件界面示例&#34; style=&#34;max-width:80%; border-radius: 5px;&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;🚀 快速上手指南&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] &lt;strong&gt;重要提示：&lt;/strong&gt; 本插件仅在 SillyTavern 的 &lt;strong&gt;聊天补全模式&lt;/strong&gt; 下工作。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;安装插件：&lt;/strong&gt; 在 SillyTavern 页面，点击 &lt;code&gt;扩展&lt;/code&gt; &amp;gt; &lt;code&gt;安装拓展&lt;/code&gt;。&lt;/p&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/67904e14-dc8d-4d7c-a1a8-d24253b72621&#34; alt=&#34;安装插件步骤 1&#34; style=&#34;max-width:70%; border-radius: 5px;&#34;&gt; &lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;输入插件地址：&lt;/strong&gt; 在弹出的窗口中，输入插件的 GitHub 地址 &lt;code&gt;https://github.com/muyoou/st-memory-enhancement&lt;/code&gt; ，然后选择 &lt;code&gt;Install for all users&lt;/code&gt;&lt;/p&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/9f39015f-63bb-4741-bb7f-740c02f1de17&#34; alt=&#34;安装插件步骤 2&#34; style=&#34;max-width:70%; border-radius: 5px;&#34;&gt; &lt;/p&gt; &lt;p&gt;&lt;strong&gt;国内用户加速：&lt;/strong&gt; 如遇网络问题，可尝试国内 Gitee 源地址：&lt;code&gt;https://gitee.com/muyoou/st-memory-enhancement&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;💖 支持与交流&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;🤝 参与贡献：&lt;/strong&gt; 欢迎参与插件开发！请查阅 &lt;a href=&#34;https://github.com/muyoou/st-memory-enhancement/raw/dev/README.md&#34;&gt;贡献指南&lt;/a&gt;，了解如何贡献代码和想法。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;💬 社群交流：&lt;/strong&gt; 加入插件交流 &amp;amp; BUG 反馈 QQ 群：&lt;a href=&#34;https://raw.githubusercontent.com/muyoou/st-memory-enhancement/master/#&#34;&gt;&lt;strong&gt;1030109849&lt;/strong&gt;&lt;/a&gt;，与更多用户交流心得，解决问题。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;☕ 捐赠支持：&lt;/strong&gt; 如果您认为插件有所帮助，欢迎 &lt;a href=&#34;https://muyoo.com.cn/2025/02/10/%E8%B5%9E%E5%8A%A9%E9%A1%B5%E9%9D%A2/&#34;&gt;请作者喝杯蜜雪冰城~ 🍹&lt;/a&gt;，您的支持是我们前进的最大动力！&lt;/p&gt; &#xA;&lt;h2&gt;🥰 贡献者们&lt;/h2&gt; &#xA;&lt;p&gt;感谢所有为本项目做出贡献的朋友们！&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/muyoou/st-memory-enhancement/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=muyoou/st-memory-enhancement&#34; style=&#34;max-width: 400px;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Master 分支贡献统计：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://repobeats.axiom.co/api/embed/ece4e039de7cf89ed5ccc9fba2e9b432e44dfaaa.svg?sanitize=true&#34; alt=&#34;Master 分支代码分析&#34; style=&#34;max-width: 80%; border-radius: 5px;&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;🤗 感谢所有人的使用与支持&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>json-schema-org/json-schema-spec</title>
    <updated>2025-05-02T01:32:08Z</updated>
    <id>tag:github.com,2025-05-02:/json-schema-org/json-schema-spec</id>
    <link href="https://github.com/json-schema-org/json-schema-spec" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The JSON Schema specification&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to JSON Schema&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/json-schema-org/.github/raw/main/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg?sanitize=true&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active – The project has reached a stable, usable state and is being actively developed.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/json-schema&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/all/badge.svg?label=financial+contributors&#34; alt=&#34;Financial Contributors on Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;JSON Schema is a vocabulary that allows you to validate, annotate, and manipulate JSON documents.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the sources for the &lt;strong&gt;work in progress&lt;/strong&gt; of the next set of JSON Schema IETF Internet Draft (I-D) documents. For the latest released I-Ds, please see the &lt;a href=&#34;http://json-schema.org/specification.html&#34;&gt;Specification page&lt;/a&gt; on the website.&lt;/p&gt; &#xA;&lt;h2&gt;Call for contributions and feedback&lt;/h2&gt; &#xA;&lt;p&gt;Reviews, comments and suggestions are most welcome! Please read our &lt;a href=&#34;https://raw.githubusercontent.com/json-schema-org/json-schema-spec/main/CONTRIBUTING.md&#34;&gt;guidelines for contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;For the current status of issues and pull requests, please see the following labels&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/json-schema-org/json-schema-spec/issues?q=is%3Aopen+is%3Aissue+label%3A%22Status%3A+Available%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/json-schema-org/json-schema-spec/Status:%20Available.svg?color=brightgreen&#34; alt=&#34;Available&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/json-schema-org/json-schema-spec/labels/Status:%20In%20Progress&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/json-schema-org/json-schema-spec/Status:%20In%20Progress.svg?sanitize=true&#34; alt=&#34;In Progress&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/json-schema-org/json-schema-spec/labels/Status%3A%20Review%20Needed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/json-schema-org/json-schema-spec/Status:%20Review%20Needed.svg?sanitize=true&#34; alt=&#34;Review Needed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/json-schema-org/json-schema-spec/labels/Priority%3A%20Critical&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/json-schema-org/json-schema-spec/Priority:%20Critical.svg?color=critical&#34; alt=&#34;Critical&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/json-schema-org/json-schema-spec/labels/Priority%3A%20High&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/json-schema-org/json-schema-spec/Priority:%20High.svg?color=important&#34; alt=&#34;High&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/json-schema-org/json-schema-spec/labels/Priority%3A%20Medium&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/json-schema-org/json-schema-spec/Priority:%20Medium.svg?sanitize=true&#34; alt=&#34;Medium&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/json-schema-org/json-schema-spec/labels/Priority%3A%20Low&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/json-schema-org/json-schema-spec/Priority:%20Low.svg?sanitize=true&#34; alt=&#34;Low&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Labels are assigned based on &lt;a href=&#34;https://github.com/Relequestual/sensible-github-labels&#34;&gt;Sensible Github Labels&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Authoring and Building&lt;/h2&gt; &#xA;&lt;h3&gt;Specification&lt;/h3&gt; &#xA;&lt;p&gt;To build all the spec files to HTML from the Markdown sources, run &lt;code&gt;npm run build -- specs&lt;/code&gt;. You can also build each individually with &lt;code&gt;npm run build -- specs/filename.md&lt;/code&gt; (Example: &lt;code&gt;npm run build -- specs/jsonschema-core.md&lt;/code&gt;). You can also use wildcards to build multiple specs at the same time: &lt;code&gt;npm run build -- specs/jsonschema-*.md&lt;/code&gt;. The HTML files will be available in the &lt;code&gt;web&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;The spec is built using &lt;a href=&#34;https://remark.js.org/&#34;&gt;Remark&lt;/a&gt;, a markdown engine with good support for plugins and lots of existing plugins we can use. Remark also has a &lt;a href=&#34;https://github.com/remarkjs/remark-language-server&#34;&gt;language server&lt;/a&gt; and a &lt;a href=&#34;https://github.com/remarkjs/vscode-remark&#34;&gt;VSCode extension&lt;/a&gt; we can use to get linting an link checking while developing the spec.&lt;/p&gt; &#xA;&lt;h4&gt;Plugins&lt;/h4&gt; &#xA;&lt;p&gt;The following is a not-necessarily-complete list of configured plugins and the features they make available to you.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/remarkjs/remark-lint&#34;&gt;remark-lint&lt;/a&gt; -- Enforce markdown styles guide.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/remarkjs/remark-validate-links&#34;&gt;remark-validate-links&lt;/a&gt; -- Check for broken links.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/remarkjs/remark-gfm&#34;&gt;remark-gfm&lt;/a&gt; -- Adds support for Github Flavored Markdown specific markdown features such as autolink literals, footnotes, strikethrough, tables, and tasklists.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/imcuttle/remark-heading-id&#34;&gt;remark-heading-id&lt;/a&gt; -- Adds support for &lt;code&gt;{#my-anchor}&lt;/code&gt; syntax to add an &lt;code&gt;id&lt;/code&gt; to an element so it can be referenced using URI fragment syntax.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/json-schema-org/json-schema-spec/main/remark/remark-headings.js&#34;&gt;remark-headings&lt;/a&gt; -- A collection of enhancements for headings. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Adds hierarchical section numbers to headings. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Use the &lt;code&gt;%appendix%&lt;/code&gt; prefix on headings that should be numbered as an appendix.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Adds id anchors to headers that don&#39;t have one &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Example: &lt;code&gt;#section-2-13&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Example: &lt;code&gt;#appendix-a&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Makes the heading a link utilizing its anchor&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/json-schema-org/json-schema-spec/main/remark/remark-reference-links.js&#34;&gt;remark-reference-links&lt;/a&gt; -- Adds new syntax for referencing a section of the spec using the section number as the link text. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;## Foo {#foo}&#xA;## Bar&#xA;This is covered in {{foo}} // --&amp;gt; Renders to &#34;This is covered in [Section 2.3](#foo)&#34;&#xA;- Link text will use &#34;Section&#34; or &#34;Appendix&#34; as needed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/json-schema-org/json-schema-spec/main/remark/remark-table-of-contents.js&#34;&gt;remark-table-of-contents&lt;/a&gt; -- Adds a table of contents in a section with a header called &#34;Table of Contents&#34;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/json-schema-org/json-schema-spec/main/remark/remark-code-titles.js&#34;&gt;remark-code-titles&lt;/a&gt; -- Add titles to code blocks &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;\`\`\`jsonschema &#34;My Fun Title&#34;&#xA;{ &#34;type&#34;: &#34;string&#34; }&#xA;\`\`\`&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;The languages &lt;code&gt;jsonschema&lt;/code&gt; and &lt;code&gt;json&lt;/code&gt; have special styling&lt;/li&gt; &#xA;   &lt;li&gt;The title will be parsed as a JSON string, but you have to double escape escaped characters. So, to get &lt;code&gt;My &#34;quoted&#34; title&lt;/code&gt;, you would need to be &lt;code&gt;&#34;My \\\\&#34;quoted\\\\&#34; title&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rehypejs/rehype-highlight&#34;&gt;rehype-highlight&lt;/a&gt; -- Syntax highlighting.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ipikuka/rehype-highlight-code-lines&#34;&gt;rehype-highlight-code-lines&lt;/a&gt; -- Adds line numbers to code blocks. Supports ranges.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ipikuka/remark-flexible-containers&#34;&gt;remark-flexible-containers&lt;/a&gt; -- Add a callout box using the following syntax. Supported container types are &lt;code&gt;warning&lt;/code&gt;, &lt;code&gt;note&lt;/code&gt;, and &lt;code&gt;experimental&lt;/code&gt;. &lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;::: {type} {title}&#xA;{content}&#xA;:::&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Internet-Drafts&lt;/h3&gt; &#xA;&lt;p&gt;To build components that are being maintained as IETF Internet-Drafts, run &lt;code&gt;make&lt;/code&gt;. The Makefile will create the necessary Python venv for you as part of the regular make target.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;make clean&lt;/code&gt; will remove all output including the venv. To clean just the spec output and keep the venv, use &lt;code&gt;make spec-clean&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run &lt;code&gt;xml2rfc&lt;/code&gt; manually after running make for the first time, you will need to activate the virtual environment: &lt;code&gt;source .venv/bin/activate&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The version of &#34;xml2rfc&#34; that this project uses is updated by modifying &lt;code&gt;requirements.in&lt;/code&gt; and running &lt;code&gt;pip-compile requirements.in&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Descriptions of the xml2rfc, I-D documents, and RFC processes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xml2rfc.tools.ietf.org/authoring/draft-mrose-writing-rfcs.html&#34;&gt;https://xml2rfc.tools.ietf.org/authoring/draft-mrose-writing-rfcs.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ietf.org/tao.html&#34;&gt;https://www.ietf.org/tao.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ietf.org/ietf-ftp/1id-guidelines.html&#34;&gt;https://www.ietf.org/ietf-ftp/1id-guidelines.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc7322.txt&#34;&gt;https://www.rfc-editor.org/rfc/rfc7322.txt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Test suites&lt;/h2&gt; &#xA;&lt;p&gt;Conformance tests for JSON Schema and its vocabularies may be found &lt;a href=&#34;https://github.com/json-schema-org/JSON-Schema-Test-Suite&#34;&gt;in their own repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;The website&lt;/h2&gt; &#xA;&lt;p&gt;The JSON Schema web site is at &lt;a href=&#34;http://json-schema.org/&#34;&gt;http://json-schema.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The source for the website is &lt;a href=&#34;https://github.com/json-schema-org/website&#34;&gt;maintained in a separate repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;h3&gt;Code Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href=&#34;https://raw.githubusercontent.com/json-schema-org/json-schema-spec/main/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;]. &lt;a href=&#34;https://github.com/json-schema-org/json-schema-spec/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Financial Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&#34;https://opencollective.com/json-schema/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Sponsors&lt;/h4&gt; &#xA;&lt;p&gt;Here are our top sponsors. You could be next! [&lt;a href=&#34;https://opencollective.com/json-schema#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/json-schema/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/json-schema/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/json-schema/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/json-schema/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/json-schema/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/json-schema/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/json-schema/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/json-schema/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/json-schema/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/json-schema/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Individuals&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/json-schema&#34;&gt;&lt;img src=&#34;https://opencollective.com/json-schema/individuals.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The contents of this repository are &lt;a href=&#34;https://raw.githubusercontent.com/json-schema-org/json-schema-spec/main/LICENSE&#34;&gt;licensed under&lt;/a&gt; either the BSD 3-clause license &lt;em&gt;or&lt;/em&gt; the Academic Free License v3.0.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>department-of-veterans-affairs/vets-website</title>
    <updated>2025-05-02T01:32:08Z</updated>
    <id>tag:github.com,2025-05-02:/department-of-veterans-affairs/vets-website</id>
    <link href="https://github.com/department-of-veterans-affairs/vets-website" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Frontend for VA.gov&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VA.gov &lt;img src=&#34;https://github.com/department-of-veterans-affairs/vets-website/actions/workflows/continuous-integration.yml/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#what-is-this&#34;&gt;What is this?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#common-commands&#34;&gt;Common commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#building-vets-website&#34;&gt;Building &lt;code&gt;vets-website&lt;/code&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#building-applications&#34;&gt;Building applications&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#building-static-content&#34;&gt;Building static content&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#building-both-together&#34;&gt;Building both together&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#working-in-github-codespaces&#34;&gt;Working in GitHub Codespaces&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#running-tests&#34;&gt;Running tests&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#unit-tests&#34;&gt;Unit tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#end-to-end-e2e--browser-tests&#34;&gt;End-to-end (E2E) / Browser tests&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#changing-virtual-agent-backend-url&#34;&gt;Changing Virtual Agent backend URL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#running-a-mock-api-for-local-development&#34;&gt;Running a mock API for local development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#more-commands&#34;&gt;More commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#supported-browsers&#34;&gt;Supported Browsers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#api-keys&#34;&gt;API Keys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#additional-resources&#34;&gt;Additional Resources&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is this?&lt;/h2&gt; &#xA;&lt;p&gt;This is the front end repository for VA.gov. It contains application code used across the site.&lt;/p&gt; &#xA;&lt;p&gt;There are several repositories that contain the code and content used to build VA.gov. If you&#39;re looking to get started running VA.gov locally, you should read the &lt;a href=&#34;https://depo-platform-documentation.scrollhelp.site/developer-docs/Setting-up-your-local-frontend-environment.1844215878.html&#34;&gt;Getting Started&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Common commands&lt;/h2&gt; &#xA;&lt;p&gt;Once you have the site set up locally, these are some common commands you might find useful:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;I want to...&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Then you should...&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;fetch all dependencies&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn install&lt;/code&gt;; run this any time &lt;code&gt;package.json&lt;/code&gt; changes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;build applications&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn build&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run the webpack dev server&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn watch&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;build in codespaces&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn build:codespaces&lt;/code&gt;. Build with codespace options&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Building &lt;code&gt;vets-website&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Building applications&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;vets-website&lt;/code&gt; uses &lt;a href=&#34;https://webpack.js.org&#34;&gt;Webpack&lt;/a&gt; to bundle application assets.&lt;/p&gt; &#xA;&lt;p&gt;To &lt;strong&gt;build all applications&lt;/strong&gt;, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To &lt;strong&gt;build one or more applications&lt;/strong&gt;, you can use the &lt;code&gt;--entry&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn build --entry=static-pages,auth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To &lt;strong&gt;recompile your application when you make changes&lt;/strong&gt;, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also &lt;strong&gt;limit the applications Webpack builds&lt;/strong&gt; with &lt;code&gt;--env entry&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn watch --env entry=static-pages,auth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;entryname&lt;/code&gt; for your application can be found in its &lt;code&gt;manifest.json&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re developing a feature that requires the API, but can&#39;t or don&#39;t want to run it locally, you can specify &lt;code&gt;--env api&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn watch --env api=https://dev-api.va.gov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need to disable CORS in your browser when using a non-local API. Here are some helpful links that explain how to do this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/3102819/disable-same-origin-policy-in-chrome&#34;&gt;https://stackoverflow.com/questions/3102819/disable-same-origin-policy-in-chrome&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/4556429/disabling-same-origin-policy-in-safari&#34;&gt;https://stackoverflow.com/questions/4556429/disabling-same-origin-policy-in-safari&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you try to log on, ID.me will redirect you to the environment that the API is set up for. So in the above example, you&#39;d be &lt;strong&gt;redirected back to dev.va.gov.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Building static content&lt;/h3&gt; &#xA;&lt;p&gt;Static pages are created from the &lt;a href=&#34;https://github.com/department-of-veterans-affairs/content-build&#34;&gt;content-build&lt;/a&gt; repository. See the &lt;a href=&#34;https://github.com/department-of-veterans-affairs/content-build#building-static-content&#34;&gt;building static content&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Building both together&lt;/h3&gt; &#xA;&lt;p&gt;After &lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/#building-applications&#34;&gt;building the applications&lt;/a&gt;, running &lt;code&gt;yarn build&lt;/code&gt; in the &lt;code&gt;../content-build&lt;/code&gt; directory will build content using the generated app bundles from &lt;code&gt;vets-website/build/localhost/generated&lt;/code&gt;. The full build can be seen in &lt;code&gt;../content-build/build/localhost&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Working in GitHub Codespaces&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://depo-platform-documentation.scrollhelp.site/developer-docs/Using-GitHub-Codespaces.1909063762.html#UsingGitHubCodespaces-Codespacesinvets-websiteandcontent-buildrepositories&#34;&gt;Read the Codespaces documentation for this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running tests&lt;/h2&gt; &#xA;&lt;h3&gt;Unit tests&lt;/h3&gt; &#xA;&lt;p&gt;To &lt;strong&gt;run all unit tests&lt;/strong&gt;, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn test:unit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to &lt;strong&gt;run only one test file&lt;/strong&gt;, you can provide the path to it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn test:unit src/applications/path/to/test-file.unit.spec.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To &lt;strong&gt;run all tests for a folder in src/applications&lt;/strong&gt;, you can use app-folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn test:unit --app-folder hca&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To &lt;strong&gt;run all tests in a directory&lt;/strong&gt;, you can use a glob pattern:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn test:unit src/applications/path/to/tests/**/*.unit.spec.js*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To &lt;strong&gt;run tests with stack traces&lt;/strong&gt;, pass log-level &lt;code&gt;trace&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn test:unit --log-level trace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To &lt;strong&gt;run tests with coverage output&lt;/strong&gt;, you can pass the coverage option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn test:unit --coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To &lt;strong&gt;run tests with coverage and open the coverage report in your browser for a specific app&lt;/strong&gt; from &lt;code&gt;src/applications&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn test:coverage-app {app-name}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For &lt;strong&gt;help with test runner usage&lt;/strong&gt;, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn test:unit --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;End-to-end (E2E) / Browser tests&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;E2E or browser tests run in Cypress.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Before running Cypress tests&lt;/strong&gt;, first make sure that:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;vets-website&lt;/code&gt; is served locally on port 3001 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can do this with &lt;code&gt;yarn watch&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vets-api&lt;/code&gt; is &lt;strong&gt;NOT&lt;/strong&gt; running &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Any required APIs will be mocked by the Cypress test that needs them.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To &lt;strong&gt;open the Cypress test runner UI and run any tests within it&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn cy:open&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To &lt;strong&gt;open the Cypress test runner UI in Codespaces and run any tests within it&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn cy:open-codespaces&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then visit &lt;a href=&#34;http://localhost:6080/&#34;&gt;http://localhost:6080/&lt;/a&gt; and log in with the password &lt;code&gt;vscode&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To &lt;strong&gt;run Cypress tests from the command line&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn cy:run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To &lt;strong&gt;run specific Cypress tests from the command line&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Running one specific test.&#xA;yarn cy:run --spec &#34;path/to/test-file.cypress.spec.js&#34;&#xA;&#xA;# Running multiple specific tests.&#xA;yarn cy:run --spec &#34;path/to/test-a.cypress.spec.js,path/to/test-b.cypress.spec.js&#34;&#xA;&#xA;# Running tests that match a glob pattern.&#xA;yarn cy:run --spec &#34;src/applications/my-app/tests/*&#34;&#xA;yarn cy:run --spec &#34;src/applications/my-app/tests/**/*&#34;&#xA;&#xA;# Running tests that match multiple glob patterns.&#xA;yarn cy:run --spec &#34;src/applications/a/tests/**/*,src/applications/b/tests/**/*&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To &lt;strong&gt;run Cypress tests from the command line on a specific browser&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn cy:run --browser chrome&#xA;yarn cy:run --browser firefox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To &lt;strong&gt;run Cypress tests with reports&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn cy:run:localreports my-app-folder&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn cy:run:localreports appeals/995&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn cy:run:localreports ask-a-question&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Afterward, check &lt;code&gt;/mochawesome-report&lt;/code&gt; contents.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For other options with &lt;code&gt;yarn cy:run&lt;/code&gt;,&lt;/strong&gt; &lt;a href=&#34;https://docs.cypress.io/guides/guides/command-line.html#Commands&#34;&gt;the same options for &lt;code&gt;cypress run&lt;/code&gt; are applicable&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Changing Virtual Agent backend URL&lt;/h2&gt; &#xA;&lt;p&gt;If not already create a &lt;code&gt;.env&lt;/code&gt; file in the root of the project and add the following while updating the URL&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;VIRTUAL_AGENT_BACKEND_URL=https://some.url.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running a mock API for local development&lt;/h2&gt; &#xA;&lt;p&gt;In separate terminal from your local dev server, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn mock-api --responses path/to/responses.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/jaywcjlove/mocker-api#usage&#34;&gt;mocker-api usage documentation&lt;/a&gt; for how to use the &lt;code&gt;responses.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you need to log in&lt;/strong&gt;, go to your browser dev tools console and enter &lt;code&gt;localStorage.setItem(&#39;hasSession&#39;, true)&lt;/code&gt; and refresh the page. This will then trigger a &lt;code&gt;/v0/user&lt;/code&gt; call, which will then get the mocked response of a logged-in user. (Assuming you&#39;ve mocked that response, of course.)&lt;/p&gt; &#xA;&lt;p&gt;Responses to common API requests, such as &lt;code&gt;/v0/user&lt;/code&gt; and &lt;code&gt;/v0/maintenance_windows&lt;/code&gt;, you can use &lt;a href=&#34;https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/src/platform/testing/local-dev-mock-api/common.js&#34;&gt;&lt;code&gt;src/platform/testing/local-dev-mock-api/common.js&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const commonResponses = require(&#39;src/platform/testing/local-dev-mock-api/common&#39;);&#xA;&#xA;module.exports = {&#xA;  ...commonResponses,&#xA;  &#39;GET path/to/endpoint&#39;: { foo: &#39;bar&#39; },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;More commands&lt;/h2&gt; &#xA;&lt;p&gt;After a while, you may run into a less common task. We have a lot of commands for doing very specific things.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;I want to...&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Then you should...&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;build the production site (dev features disabled).&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn build:production&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;deploy the production site (dev features disabled).&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;node src/platform/testing/e2e/test-server.js --buildtype=vagovprod&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;reset local environment (clean out node modules, Babel cache, and runs &lt;code&gt;npm install&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn reset:env&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run the app pages on the site for local development&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn watch --env scaffold&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run the site for local development with automatic rebuilding of Javascript and sass &lt;strong&gt;with&lt;/strong&gt; css sourcemaps&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn watch:css-sourcemaps&lt;/code&gt; then visit &lt;code&gt;http://localhost:3001/&lt;/code&gt;. You may also set &lt;code&gt;--env buildtype&lt;/code&gt; and &lt;code&gt;NODE_ENV&lt;/code&gt; though setting &lt;code&gt;NODE_ENV&lt;/code&gt; to production will make incremental builds slow.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run the site for local development with automatic rebuilding of code and styles for specific &lt;strong&gt;apps&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn watch --env entry=disability-benefits,static-pages&lt;/code&gt;. Valid application names are in each app&#39;s &lt;code&gt;manifest.json&lt;/code&gt; under &lt;code&gt;entryName&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run the site so that devices on your local network can access it&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn watch --env host=0.0.0.0 --env public=192.168.x.x:3001&lt;/code&gt; Note that we use CORS to limit what hosts can access different APIs, so accessing with a &lt;code&gt;192.168.x.x&lt;/code&gt; address may run into problems&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run the site so that it can be accessed from a public codespaces URL&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn watch --env api=https://${CODESPACE_NAME}-3000.app.github.dev public=https://${CODESPACE_NAME}-3001.app.github.dev&lt;/code&gt; (only works from a codespaces terminal with mocks running and public port visibility)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;watch file changes without starting the server&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn watch:no-server&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run all unit tests and watch&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn test:watch&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run only E2E tests (headless)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Make sure the site is running locally (&lt;code&gt;yarn watch&lt;/code&gt;) and run the tests with &lt;code&gt;yarn cy:run&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run E2E tests in the browser&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn cy:open&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;count all Cypress E2E specs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn cy:count&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run all linters&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn lint&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run only javascript linter&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn lint:js&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run only sass linter&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn lint:sass&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run lint on JS and fix anything that changed&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn lint:js:changed:fix&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;add new npm modules&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn add my-module&lt;/code&gt;. Use the &lt;code&gt;--dev&lt;/code&gt; flag for modules that are build or test related.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the latest json schema&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn update:schema&lt;/code&gt;. This updates our &lt;a href=&#34;https://github.com/department-of-veterans-affairs/vets-json-schema&#34;&gt;&lt;code&gt;vets-json-schema&lt;/code&gt;&lt;/a&gt; to the most recent commit.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;check test coverage&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn test:coverage&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;run &lt;a href=&#34;https://github.com/statoscope/statoscope&#34;&gt;statoscope&lt;/a&gt; on your app&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn build-analyze-app static-pages&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;add a new React app&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yarn new:app&lt;/code&gt; (make sure you have &lt;a href=&#34;https://github.com/department-of-veterans-affairs/vagov-content/&#34;&gt;&lt;code&gt;vagov-content&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/department-of-veterans-affairs/content-build/&#34;&gt;&lt;code&gt;content-build&lt;/code&gt;&lt;/a&gt; sibling to &lt;code&gt;vets-website&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Supported Browsers&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Browser&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Minimum version&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internet Explorer&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Microsoft Edge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Safari / iOS Safari&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Chrome / Android Web view&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;44&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;em&gt;Latest version with &amp;gt;0.5% of traffic&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Firefox&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;52&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;em&gt;Latest version with &amp;gt;0.5% of traffic&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;API Keys&lt;/h2&gt; &#xA;&lt;p&gt;In order to work with the Facility Locator locally, you will need a Mapbox API key with dev access. see &lt;a href=&#34;https://github.com/department-of-veterans-affairs/va.gov-team/raw/master/platform/working-with-vsp/policies-work-norms/sensitive-guidance.md&#34;&gt;this link&lt;/a&gt; for details on handling non public keys and tokens. You will need to access the paramater store within AWS Systems manager, and get the dev mapbox token from this location: /dsva-vagov/vets-website/dev/mapbox_token.&lt;/p&gt; &#xA;&lt;p&gt;Create a .env file in the root of vets-website, and assign the above token to a variable called MAPBOX_TOKEN. The .env file should already be configured to work with dotenv for webpack. Ensure that the .env file is in .gitigore and take care not to expose this token in any public commits. See &lt;a href=&#34;https://github.com/department-of-veterans-affairs/va.gov-team/issues/new?assignees=&amp;amp;labels=external-request%2Coperations%2Cops-access-request&amp;amp;template=aws-access-request.yml&amp;amp;title=AWS+access+for+%5Bindividual%5D&#34;&gt;this link&lt;/a&gt; for instructions on requesting AWS access.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Resources&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://depo-platform-documentation.scrollhelp.site/developer-docs/frontend-developer-documentation&#34;&gt;Frontend developer documentation home&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/department-of-veterans-affairs/va.gov-team/raw/master/platform/accessibility/testing/508-manual-testing.md&#34;&gt;Manual&lt;/a&gt; and &lt;a href=&#34;https://github.com/department-of-veterans-affairs/va.gov-team/raw/master/platform/accessibility/testing/508-automated-testing.md&#34;&gt;Automated&lt;/a&gt; 508 Testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://depo-platform-documentation.scrollhelp.site/developer-docs/yarn-workspaces&#34;&gt;Using yarn Workspaces&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Not a member of the repository and want to be added?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you&#39;re on a VA.gov Platform team, contact your Program Manager.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re on a VFS team, you must complete &lt;a href=&#34;https://depo-platform-documentation.scrollhelp.site/getting-started/platform-orientation&#34;&gt;Platform Orientation&lt;/a&gt; to be added to this repository. This includes completing your Platform Orientation ticket(s) in GitHub.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>