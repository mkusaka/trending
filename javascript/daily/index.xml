<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-28T01:34:13Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dotnet/eShopSupport</title>
    <updated>2024-10-28T01:34:13Z</updated>
    <id>tag:github.com,2024-10-28:/dotnet/eShopSupport</id>
    <link href="https://github.com/dotnet/eShopSupport" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A reference .NET application using AI for a customer support ticketing system&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;eShopSupport&lt;/h1&gt; &#xA;&lt;p&gt;A sample .NET application showcasing common use cases and development practices for build AI solutions in .NET (Generative AI, specifically). This sample demonstrates a customer support application for an e-commerce website using a services-based architecture with .NET Aspire. It includes support for the following AI use cases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Text classification, applying labels based on content&lt;/li&gt; &#xA; &lt;li&gt;Sentiment analysis based on message content&lt;/li&gt; &#xA; &lt;li&gt;Summarization of large sets of text&lt;/li&gt; &#xA; &lt;li&gt;Synthetic data generation, creating test content for the sample&lt;/li&gt; &#xA; &lt;li&gt;Chat bot interactions with chat history and suggested responses&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;400&#34; align=&#34;top&#34; src=&#34;https://github.com/user-attachments/assets/5a41493f-565b-4dd0-ae31-1b5c3c2f6d22&#34;&gt; &#xA;&lt;img width=&#34;400&#34; align=&#34;top&#34; src=&#34;https://github.com/user-attachments/assets/7930a940-bb31-4dc0-b5f6-738d43dfcfe5&#34;&gt; &#xA;&lt;p&gt;This sample also demonstrates the following development practices:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Developing a solution locally, using small local models&lt;/li&gt; &#xA; &lt;li&gt;Evaluating the quality of AI responses using grounded Q&amp;amp;A data&lt;/li&gt; &#xA; &lt;li&gt;Leveraging Python projects as part of a .NET Aspire solution&lt;/li&gt; &#xA; &lt;li&gt;Deploying the application, including small local models, to the Cloud (coming soon)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/3c339d0d-507a-416b-94ba-0e179d6ff2f5&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A device with an Nvidia GPU (see &lt;a href=&#34;https://github.com/dotnet/eShopSupport/issues/19&#34;&gt;workaround for running on the CPU&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Clone the eShopSupport repository: &lt;a href=&#34;https://github.com/dotnet/eshopsupport&#34;&gt;https://github.com/dotnet/eshopsupport&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Install &amp;amp; start Docker Desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/release/python-3125/&#34;&gt;Install Python 3.12.5&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Windows with Visual Studio&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://visualstudio.microsoft.com/vs/&#34;&gt;Visual Studio 2022 version 17.10 or newer&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Select the following workloads: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;ASP.NET and web development&lt;/code&gt; workload.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;Python Development&lt;/code&gt; workload.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.NET Aspire SDK&lt;/code&gt; component in &lt;code&gt;Individual components&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Mac, Linux, &amp;amp; Windows without Visual Studio&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the latest &lt;a href=&#34;https://dot.net/download?cid=eshop&#34;&gt;.NET 8 SDK&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the &lt;a href=&#34;https://learn.microsoft.com/dotnet/aspire/fundamentals/setup-tooling?tabs=dotnet-cli%2Cunix#install-net-aspire&#34;&gt;.NET Aspire workload&lt;/a&gt; with the following commands:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dotnet workload update&#xA;dotnet workload install aspire&#xA;dotnet restore eShopSupport.sln&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optionally) Install &lt;a href=&#34;https://code.visualstudio.com&#34;&gt;Visual Studio Code&lt;/a&gt; with the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit&#34;&gt;C# Dev Kit extension&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Install Python requirements&lt;/h4&gt; &#xA;&lt;p&gt;From the Terminal, at the root of the cloned repo, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;pip install -r src/PythonInference/requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the above command doesn&#39;t work on Windows, use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;py -m pip install -r src/PythonInference/requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running the solution&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Remember to ensure that Docker is started.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;(Windows only) Run the application from Visual Studio:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open the &lt;code&gt;eShopSupport.sln&lt;/code&gt; file in Visual Studio&lt;/li&gt; &#xA;   &lt;li&gt;Ensure that &lt;code&gt;AppHost&lt;/code&gt; is your startup project&lt;/li&gt; &#xA;   &lt;li&gt;Hit Ctrl-F5 to launch .NET Aspire&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Or run the application from your terminal:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dotnet run --project src/AppHost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;then look for lines like this in the console output in order to find the URL to open the Aspire dashboard:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Login to the dashboard at: http://localhost:17191/login?t=uniquelogincodeforyou&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You may need to install ASP.NET Core HTTPS development certificates first, and then close all browser tabs. Learn more at &lt;a href=&#34;https://aka.ms/aspnet/https-trust-dev-cert&#34;&gt;https://aka.ms/aspnet/https-trust-dev-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h1&gt;Sample data&lt;/h1&gt; &#xA;&lt;p&gt;The sample data is defined in &lt;a href=&#34;https://github.com/dotnet/eShopSupport/tree/main/seeddata&#34;&gt;seeddata&lt;/a&gt;. All products/descriptions/brands, manuals, customers, and support tickets names are fictional and were generated using &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/chatgpt&#34;&gt;GPT-35-Turbo&lt;/a&gt; using the included &lt;a href=&#34;https://github.com/dotnet/eShopSupport/tree/main/seeddata/DataGenerator&#34;&gt;DataGenerator&lt;/a&gt; project.&lt;/p&gt;</summary>
  </entry>
</feed>