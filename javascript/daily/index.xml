<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-02T01:38:26Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>isekaidev/stable.art</title>
    <updated>2023-02-02T01:38:26Z</updated>
    <id>tag:github.com,2023-02-02:/isekaidev/stable.art</id>
    <link href="https://github.com/isekaidev/stable.art" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Photoshop plugin for Stable Diffusion with Automatic1111 as backend (locally or with Google Colab)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stable.art 🖼&lt;/h1&gt; &#xA;&lt;p&gt;Stable.art is an open-source plugin for Photoshop (v23.3.0+) that allows you to use Stable Diffusion (with Automatic1111 as a backend) to accelerate your art workflow. Say goodbye to tedious art processes and hello to seamless creativity with Stable.art.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/118139897/211406928-63c2c689-ff75-4825-a49e-7cb2eb352006.mp4&#34;&gt;https://user-images.githubusercontent.com/118139897/211406928-63c2c689-ff75-4825-a49e-7cb2eb352006.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to install&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/isekaidev/stable.art/releases/download/v0.0.1/stable.art_0.0.1.ccx&#34;&gt;the CCX file&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Open the Creative Cloud desktop app and ensure it is running and up to date.&lt;/li&gt; &#xA; &lt;li&gt;Make sure you have the latest version of Photoshop installed. If not, update it through the Creative Cloud desktop app.&lt;/li&gt; &#xA; &lt;li&gt;Open Photoshop.&lt;/li&gt; &#xA; &lt;li&gt;Double-click on the downloaded CCX file.&lt;/li&gt; &#xA; &lt;li&gt;Follow the prompts and the plugin panel should appear in Photoshop. If it does not, go to Plugins &amp;gt; Stable.art.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Start API server&lt;/h3&gt; &#xA;&lt;p&gt;To use Stable.art you need to enable an API for your Automatic1111:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you use Automatic1111 locally, then you need to follow this &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/API&#34;&gt;guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to use Google Colab, then you can use &lt;a href=&#34;https://github.com/TheLastBen/fast-stable-diffusion&#34;&gt;fast-stable-diffusion&lt;/a&gt;. It supports API out of the box.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Lastly, enter the url of your Automatic1111 server (e.g. &lt;code&gt;http://127.0.0.1:7860&lt;/code&gt;, &lt;code&gt;https://***.gradio.live&lt;/code&gt;, &lt;code&gt;https://***.loca.lt&lt;/code&gt;, &lt;code&gt;https://***.gradio.app&lt;/code&gt;, etc) in the &#34;Endpoint&#34; field.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Lexica.art Integration&lt;/h3&gt; &#xA;&lt;p&gt;If you need help coming up with ideas or finding assistance with prompts, you can use the Lexica.art search engine right inside the plugin for inspiration.&lt;/p&gt; &#xA;&lt;h3&gt;txt2img&lt;/h3&gt; &#xA;&lt;p&gt;By default, txt2img generates an image with a size of 512x512. If you want to generate an image with a specific size, you can use the rectangular marquee tool and specify any size (with any ratio!) you desire.&lt;/p&gt; &#xA;&lt;h3&gt;img2img/inpaint&lt;/h3&gt; &#xA;&lt;p&gt;To use img2img/inpaint, simply select an area of your image using any selection tool. Yes, you can use any selection tool (e.g. rectangular marquee, lasso, quick selection, magic wand, or any other selection tool). Then to generate an image, simply click the &#34;Generate&#34; button. It is that easy - no masks or any other complicated steps are required.&lt;/p&gt; &#xA;&lt;h3&gt;outpaint&lt;/h3&gt; &#xA;&lt;p&gt;Coming Soon.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependencies.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start a server to compile and hot-reload the plugin.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run serve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open Photoshop, then open &#34;Adobe UXP Developer Tool&#34;, click &#34;Add plugin&#34;, and select &lt;code&gt;manifest-dev.json&lt;/code&gt;, which is located in the &lt;code&gt;/public&lt;/code&gt; folder. Note: during development, you should only use &lt;code&gt;manifest-dev.json&lt;/code&gt; because &lt;code&gt;manifest.json&lt;/code&gt; (which will be located in the &lt;code&gt;/dist&lt;/code&gt; folder) should be used only for final builds after running &lt;code&gt;npm run build&lt;/code&gt; (and you can just ignore &lt;code&gt;manifest.json&lt;/code&gt; that is located in the &lt;code&gt;/public&lt;/code&gt; folder). Two manifests are required to conveniently test final builds - &#34;UXP Developer Tool&#34; does not support adding multiple plugins with the same ids.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You will get the plugin with id &lt;code&gt;dev.stable.art&lt;/code&gt;, click on its Actions and then click &#34;Load&#34;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>SortableJS/Vue.Draggable</title>
    <updated>2023-02-02T01:38:26Z</updated>
    <id>tag:github.com,2023-02-02:/SortableJS/Vue.Draggable</id>
    <link href="https://github.com/SortableJS/Vue.Draggable" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Vue drag-and-drop component based on Sortable.js&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img width=&#34;140&#34; src=&#34;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/logo.svg?sanitize=true&#34;&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Vue.Draggable&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/SortableJS/Vue.Draggable&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/SortableJS/Vue.Draggable.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/SortableJS/Vue.Draggable&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/SortableJS/Vue.Draggable/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codebeat.co/projects/github-com-sortablejs-vue-draggable-master&#34;&gt;&lt;img src=&#34;https://codebeat.co/badges/7a6c27c8-2d0b-47b9-af55-c2eea966e713&#34; alt=&#34;codebeat badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SortableJS/Vue.Draggable/issues?q=is%3Aopen+is%3Aissue&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/SortableJS/Vue.Draggable.svg?sanitize=true&#34; alt=&#34;GitHub open issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/vuedraggable&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dt/vuedraggable.svg?sanitize=true&#34; alt=&#34;npm download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/vuedraggable&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/vuedraggable.svg?sanitize=true&#34; alt=&#34;npm download per month&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/vuedraggable&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/vuedraggable.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SortableJS/Vue.Draggable/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/SortableJS/Vue.Draggable.svg?sanitize=true&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Vue component (Vue.js 2.0) or directive (Vue.js 1.0) allowing drag-and-drop and synchronization with view model array.&lt;/p&gt; &#xA;&lt;p&gt;Based on and offering all features of &lt;a href=&#34;https://github.com/RubaXa/Sortable&#34;&gt;Sortable.js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;For Vue 3&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/SortableJS/vue.draggable.next&#34;&gt;vue.draggable.next&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/example.gif&#34; alt=&#34;demo gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Live Demos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sortablejs.github.io/Vue.Draggable/&#34;&gt;https://sortablejs.github.io/Vue.Draggable/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://david-desmaisons.github.io/draggable-example/&#34;&gt;https://david-desmaisons.github.io/draggable-example/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full support of &lt;a href=&#34;https://github.com/RubaXa/Sortable&#34;&gt;Sortable.js&lt;/a&gt; features: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supports touch devices&lt;/li&gt; &#xA;   &lt;li&gt;Supports drag handles and selectable text&lt;/li&gt; &#xA;   &lt;li&gt;Smart auto-scrolling&lt;/li&gt; &#xA;   &lt;li&gt;Support drag and drop between different lists&lt;/li&gt; &#xA;   &lt;li&gt;No jQuery dependency&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Keeps in sync HTML and view model list&lt;/li&gt; &#xA; &lt;li&gt;Compatible with Vue.js 2.0 transition-group&lt;/li&gt; &#xA; &lt;li&gt;Cancellation support&lt;/li&gt; &#xA; &lt;li&gt;Events reporting any changes when full control is needed&lt;/li&gt; &#xA; &lt;li&gt;Reuse existing UI library components (such as &lt;a href=&#34;https://vuetifyjs.com&#34;&gt;vuetify&lt;/a&gt;, &lt;a href=&#34;http://element.eleme.io/&#34;&gt;element&lt;/a&gt;, or &lt;a href=&#34;https://vuematerial.io&#34;&gt;vue material&lt;/a&gt; etc...) and make them draggable using &lt;code&gt;tag&lt;/code&gt; and &lt;code&gt;componentData&lt;/code&gt; props&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Backers&lt;/h2&gt; &#xA;&lt;p&gt;Looking for backers!&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;Find this project useful? You can buy me a &lt;span&gt;☕&lt;/span&gt; or a &lt;span&gt;🍺&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=GYAEKQZJ4FQT2&amp;amp;currency_code=USD&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&#34; alt=&#34;paypal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;With npm or yarn&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add vuedraggable&#xA;&#xA;npm i -S vuedraggable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Beware it is vuedraggable for Vue 2.0 and not vue-draggable which is for version 1.0&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;with direct link&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&#xA;&amp;lt;script src=&#34;//cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;!-- CDNJS :: Sortable (https://cdnjs.com/) --&amp;gt;&#xA;&amp;lt;script src=&#34;//cdn.jsdelivr.net/npm/sortablejs@1.8.4/Sortable.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;!-- CDNJS :: Vue.Draggable (https://cdnjs.com/) --&amp;gt;&#xA;&amp;lt;script src=&#34;//cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.20.0/vuedraggable.umd.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SortableJS/Vue.Draggable/tree/master/example&#34;&gt;cf example section&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;For Vue.js 2.0&lt;/h2&gt; &#xA;&lt;p&gt;Use draggable component:&lt;/p&gt; &#xA;&lt;h3&gt;Typical use:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;draggable v-model=&#34;myArray&#34; group=&#34;people&#34; @start=&#34;drag=true&#34; @end=&#34;drag=false&#34;&amp;gt;&#xA;   &amp;lt;div v-for=&#34;element in myArray&#34; :key=&#34;element.id&#34;&amp;gt;{{element.name}}&amp;lt;/div&amp;gt;&#xA;&amp;lt;/draggable&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.vue file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;  import draggable from &#39;vuedraggable&#39;&#xA;  ...&#xA;  export default {&#xA;        components: {&#xA;            draggable,&#xA;        },&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;With &lt;code&gt;transition-group&lt;/code&gt;:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;draggable v-model=&#34;myArray&#34;&amp;gt;&#xA;    &amp;lt;transition-group&amp;gt;&#xA;        &amp;lt;div v-for=&#34;element in myArray&#34; :key=&#34;element.id&#34;&amp;gt;&#xA;            {{element.name}}&#xA;        &amp;lt;/div&amp;gt;&#xA;    &amp;lt;/transition-group&amp;gt;&#xA;&amp;lt;/draggable&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Draggable component should directly wrap the draggable elements, or a &lt;code&gt;transition-component&lt;/code&gt; containing the draggable elements.&lt;/p&gt; &#xA;&lt;h3&gt;With footer slot:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;draggable v-model=&#34;myArray&#34; draggable=&#34;.item&#34;&amp;gt;&#xA;    &amp;lt;div v-for=&#34;element in myArray&#34; :key=&#34;element.id&#34; class=&#34;item&#34;&amp;gt;&#xA;        {{element.name}}&#xA;    &amp;lt;/div&amp;gt;&#xA;    &amp;lt;button slot=&#34;footer&#34; @click=&#34;addPeople&#34;&amp;gt;Add&amp;lt;/button&amp;gt;&#xA;&amp;lt;/draggable&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;With header slot:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;draggable v-model=&#34;myArray&#34; draggable=&#34;.item&#34;&amp;gt;&#xA;    &amp;lt;div v-for=&#34;element in myArray&#34; :key=&#34;element.id&#34; class=&#34;item&#34;&amp;gt;&#xA;        {{element.name}}&#xA;    &amp;lt;/div&amp;gt;&#xA;    &amp;lt;button slot=&#34;header&#34; @click=&#34;addPeople&#34;&amp;gt;Add&amp;lt;/button&amp;gt;&#xA;&amp;lt;/draggable&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;With Vuex:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;draggable v-model=&#39;myList&#39;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;computed: {&#xA;    myList: {&#xA;        get() {&#xA;            return this.$store.state.myList&#xA;        },&#xA;        set(value) {&#xA;            this.$store.commit(&#39;updateList&#39;, value)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Props&lt;/h3&gt; &#xA;&lt;h4&gt;value&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Array&lt;/code&gt;&lt;br&gt; Required: &lt;code&gt;false&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Input array to draggable component. Typically same array as referenced by inner element v-for directive.&lt;br&gt; This is the preferred way to use Vue.draggable as it is compatible with Vuex.&lt;br&gt; It should not be used directly but only though the &lt;code&gt;v-model&lt;/code&gt; directive:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;draggable v-model=&#34;myArray&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;list&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Array&lt;/code&gt;&lt;br&gt; Required: &lt;code&gt;false&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternative to the &lt;code&gt;value&lt;/code&gt; prop, list is an array to be synchronized with drag-and-drop.&lt;br&gt; The main difference is that &lt;code&gt;list&lt;/code&gt; prop is updated by draggable component using splice method, whereas &lt;code&gt;value&lt;/code&gt; is immutable.&lt;br&gt; &lt;strong&gt;Do not use in conjunction with value prop.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;All sortable options&lt;/h4&gt; &#xA;&lt;p&gt;New in version 2.19&lt;/p&gt; &#xA;&lt;p&gt;Sortable options can be set directly as vue.draggable props since version 2.19.&lt;/p&gt; &#xA;&lt;p&gt;This means that all &lt;a href=&#34;https://github.com/RubaXa/Sortable#options&#34;&gt;sortable option&lt;/a&gt; are valid sortable props with the notable exception of all the method starting by &#34;on&#34; as draggable component expose the same API via events.&lt;/p&gt; &#xA;&lt;p&gt;kebab-case propery are supported: for example &lt;code&gt;ghost-class&lt;/code&gt; props will be converted to &lt;code&gt;ghostClass&lt;/code&gt; sortable option.&lt;/p&gt; &#xA;&lt;p&gt;Example setting handle, sortable and a group option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-HTML&#34;&gt;&amp;lt;draggable&#xA;        v-model=&#34;list&#34;&#xA;        handle=&#34;.handle&#34;&#xA;        :group=&#34;{ name: &#39;people&#39;, pull: &#39;clone&#39;, put: false }&#34;&#xA;        ghost-class=&#34;ghost&#34;&#xA;        :sort=&#34;false&#34;&#xA;        @change=&#34;log&#34;&#xA;      &amp;gt;&#xA;      &amp;lt;!-- --&amp;gt;&#xA;&amp;lt;/draggable&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;tag&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;String&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;&#39;div&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;HTML node type of the element that draggable component create as outer element for the included slot.&lt;br&gt; It is also possible to pass the name of vue component as element. In this case, draggable attribute will be passed to the create component.&lt;br&gt; See also &lt;a href=&#34;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/#componentdata&#34;&gt;componentData&lt;/a&gt; if you need to set props or event to the created component.&lt;/p&gt; &#xA;&lt;h4&gt;clone&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;br&gt; Required: &lt;code&gt;false&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;(original) =&amp;gt; { return original;}&lt;/code&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Function called on the source component to clone element when clone option is true. The unique argument is the viewModel element to be cloned and the returned value is its cloned version.&lt;br&gt; By default vue.draggable reuses the viewModel element, so you have to use this hook if you want to clone or deep clone it.&lt;/p&gt; &#xA;&lt;h4&gt;move&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;br&gt; Required: &lt;code&gt;false&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;If not null this function will be called in a similar way as &lt;a href=&#34;https://github.com/RubaXa/Sortable#move-event-object&#34;&gt;Sortable onMove callback&lt;/a&gt;. Returning false will cancel the drag operation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function onMoveCallback(evt, originalEvent){&#xA;   ...&#xA;    // return false; — for cancel&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;evt object has same property as &lt;a href=&#34;https://github.com/RubaXa/Sortable#move-event-object&#34;&gt;Sortable onMove event&lt;/a&gt;, and 3 additional properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;draggedContext&lt;/code&gt;: context linked to dragged element &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;index&lt;/code&gt;: dragged element index&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: dragged element underlying view model element&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;futureIndex&lt;/code&gt;: potential index of the dragged element if the drop operation is accepted&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;relatedContext&lt;/code&gt;: context linked to current drag operation &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;index&lt;/code&gt;: target element index&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: target element view model element&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;list&lt;/code&gt;: target list&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;component&lt;/code&gt;: target VueComponent&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;HTML:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-HTML&#34;&gt;&amp;lt;draggable :list=&#34;list&#34; :move=&#34;checkMove&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;javascript:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;checkMove: function(evt){&#xA;    return (evt.draggedContext.element.name!==&#39;apple&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See complete example: &lt;a href=&#34;https://github.com/SortableJS/Vue.Draggable/raw/master/examples/Cancel.html&#34;&gt;Cancel.html&lt;/a&gt;, &lt;a href=&#34;https://github.com/SortableJS/Vue.Draggable/raw/master/examples/script/cancel.js&#34;&gt;cancel.js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;componentData&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;br&gt; Required: &lt;code&gt;false&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;This props is used to pass additional information to child component declared by &lt;a href=&#34;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/#tag&#34;&gt;tag props&lt;/a&gt;.&lt;br&gt; Value:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;props&lt;/code&gt;: props to be passed to the child component&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;attrs&lt;/code&gt;: attrs to be passed to the child component&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;on&lt;/code&gt;: events to be subscribe in the child component&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example (using &lt;a href=&#34;http://element.eleme.io/#/en-US&#34;&gt;element UI library&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-HTML&#34;&gt;&amp;lt;draggable tag=&#34;el-collapse&#34; :list=&#34;list&#34; :component-data=&#34;getComponentData()&#34;&amp;gt;&#xA;    &amp;lt;el-collapse-item v-for=&#34;e in list&#34; :title=&#34;e.title&#34; :name=&#34;e.name&#34; :key=&#34;e.name&#34;&amp;gt;&#xA;        &amp;lt;div&amp;gt;{{e.description}}&amp;lt;/div&amp;gt;&#xA;     &amp;lt;/el-collapse-item&amp;gt;&#xA;&amp;lt;/draggable&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;methods: {&#xA;    handleChange() {&#xA;      console.log(&#39;changed&#39;);&#xA;    },&#xA;    inputChanged(value) {&#xA;      this.activeNames = value;&#xA;    },&#xA;    getComponentData() {&#xA;      return {&#xA;        on: {&#xA;          change: this.handleChange,&#xA;          input: this.inputChanged&#xA;        },&#xA;        attrs:{&#xA;          wrap: true&#xA;        },&#xA;        props: {&#xA;          value: this.activeNames&#xA;        }&#xA;      };&#xA;    }&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Events&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for Sortable events:&lt;/p&gt; &lt;p&gt;&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, &lt;code&gt;choose&lt;/code&gt;, &lt;code&gt;unchoose&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;clone&lt;/code&gt;&lt;br&gt; Events are called whenever onStart, onAdd, onRemove, onUpdate, onEnd, onChoose, onUnchoose, onSort, onClone are fired by Sortable.js with the same argument.&lt;br&gt; &lt;a href=&#34;https://github.com/RubaXa/Sortable#event-object-demo&#34;&gt;See here for reference&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Note that SortableJS OnMove callback is mapped with the &lt;a href=&#34;https://github.com/SortableJS/Vue.Draggable/raw/master/README.md#move&#34;&gt;move prop&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;HTML:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-HTML&#34;&gt;&amp;lt;draggable :list=&#34;list&#34; @end=&#34;onEnd&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;change event&lt;/p&gt; &lt;p&gt;&lt;code&gt;change&lt;/code&gt; event is triggered when list prop is not null and the corresponding array is altered due to drag-and-drop operation.&lt;br&gt; This event is called with one argument containing one of the following properties:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;added&lt;/code&gt;: contains information of an element added to the array &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;newIndex&lt;/code&gt;: the index of the added element&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: the added element&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;removed&lt;/code&gt;: contains information of an element removed from to the array &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;oldIndex&lt;/code&gt;: the index of the element before remove&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: the removed element&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;moved&lt;/code&gt;: contains information of an element moved within the array &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;newIndex&lt;/code&gt;: the current index of the moved element&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;oldIndex&lt;/code&gt;: the old index of the moved element&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: the moved element&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Slots&lt;/h3&gt; &#xA;&lt;p&gt;Limitation: neither header or footer slot works in conjunction with transition-group.&lt;/p&gt; &#xA;&lt;h4&gt;Header&lt;/h4&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;header&lt;/code&gt; slot to add none-draggable element inside the vuedraggable component. Important: it should be used in conjunction with draggable option to tag draggable element. Note that header slot will always be added before the default slot regardless its position in the template. Ex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;draggable v-model=&#34;myArray&#34; draggable=&#34;.item&#34;&amp;gt;&#xA;    &amp;lt;div v-for=&#34;element in myArray&#34; :key=&#34;element.id&#34; class=&#34;item&#34;&amp;gt;&#xA;        {{element.name}}&#xA;    &amp;lt;/div&amp;gt;&#xA;    &amp;lt;button slot=&#34;header&#34; @click=&#34;addPeople&#34;&amp;gt;Add&amp;lt;/button&amp;gt;&#xA;&amp;lt;/draggable&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Footer&lt;/h4&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;footer&lt;/code&gt; slot to add none-draggable element inside the vuedraggable component. Important: it should be used in conjunction with draggable option to tag draggable elements. Note that footer slot will always be added after the default slot regardless its position in the template. Ex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;draggable v-model=&#34;myArray&#34; draggable=&#34;.item&#34;&amp;gt;&#xA;    &amp;lt;div v-for=&#34;element in myArray&#34; :key=&#34;element.id&#34; class=&#34;item&#34;&amp;gt;&#xA;        {{element.name}}&#xA;    &amp;lt;/div&amp;gt;&#xA;    &amp;lt;button slot=&#34;footer&#34; @click=&#34;addPeople&#34;&amp;gt;Add&amp;lt;/button&amp;gt;&#xA;&amp;lt;/draggable&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Gotchas&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Vue.draggable children should always map the list or value prop using a v-for directive&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You may use &lt;a href=&#34;https://github.com/SortableJS/Vue.Draggable#header&#34;&gt;header&lt;/a&gt; and &lt;a href=&#34;https://github.com/SortableJS/Vue.Draggable#footer&#34;&gt;footer&lt;/a&gt; slot to by-pass this limitation.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Children elements inside v-for should be keyed as any element in Vue.js. Be carefull to provide revelant key values in particular:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;typically providing array index as keys won&#39;t work as key should be linked to the items content&lt;/li&gt; &#xA;   &lt;li&gt;cloned elements should provide updated keys, it is doable using the &lt;a href=&#34;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/#clone&#34;&gt;clone props&lt;/a&gt; for example&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sortablejs.github.io/Vue.Draggable/#/custom-clone&#34;&gt;Clone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sortablejs.github.io/Vue.Draggable/#/handle&#34;&gt;Handle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sortablejs.github.io/Vue.Draggable/#/transition-example-2&#34;&gt;Transition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sortablejs.github.io/Vue.Draggable/#/nested-example&#34;&gt;Nested&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sortablejs.github.io/Vue.Draggable/#/table-example&#34;&gt;Table&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Full demo example&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/David-Desmaisons/draggable-example&#34;&gt;draggable-example&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;For Vue.js 1.0&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/documentation/Vue.draggable.for.ReadME.md&#34;&gt;See here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>logica-programacion/Solucion-Challenge-encriptador</title>
    <updated>2023-02-02T01:38:26Z</updated>
    <id>tag:github.com,2023-02-02:/logica-programacion/Solucion-Challenge-encriptador</id>
    <link href="https://github.com/logica-programacion/Solucion-Challenge-encriptador" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Challenge ONE | Lógica de Programación - Encriptador de texto&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; heigth=&#34;200&#34; src=&#34;https://user-images.githubusercontent.com/91544872/157673573-5e781ce9-601c-4ea3-9db1-b60bebf717aa.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;¡Bienvenido al repositorio del Encriptador de texto! Pasos principales:&lt;/h3&gt; &#xA;&lt;h4&gt;Marca este proyecto con una estrella ⭐&lt;/h4&gt; &#xA;&lt;h4&gt;Sigue las lecciones y las instrucciones de contenido 📚&lt;/h4&gt; &#xA;&lt;h4&gt;Visita la página del Desafío &lt;a href=&#34;https://www.aluracursos.com/challenges/challenge-one-logica&#34;&gt;¡Haciendo clic aquí!&lt;/a&gt; 📃&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;¿Cómo descargar el repositorio?&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Para descargar el archivo: Puede hacer clic en el botón verde con el nombre &#34;Code&#34; en la parte superior derecha y luego Descargar zip/Download zip. Luego puede abrir el archivo en su editor preferido&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; heigth=&#34;200&#34; src=&#34;https://user-images.githubusercontent.com/101413385/185686126-23339f8c-ecf9-44b8-9c52-996c50750254.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Enlaces útiles!&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Videos de Solución del Challenge ONE Encriptador de Texto&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Parte I: &lt;a href=&#34;https://www.youtube.com/watch?v=oQgt8BF2wAg&#34;&gt;HTML y CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Parte II: &lt;a href=&#34;https://www.youtube.com/watch?v=DVjp-TJihAM&#34;&gt;Lógica con Javascript&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Durante la ejecución de nuestro código, se utilizaron varios métodos en JavaScript, dejamos aquí algunos de ellos para facilitar sus búsquedas en el proceso de estudio &lt;a href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&#34;&gt;Includes()&lt;/a&gt; | &lt;a href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase&#34;&gt;toLowerCase()&lt;/a&gt; | &lt;a href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll&#34;&gt;replaceAll()&lt;/a&gt; | &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Interact_with_the_clipboard&#34;&gt;navigator.clipboard&lt;/a&gt; | &lt;a href=&#34;https://www.w3schools.com/jsref/dom_obj_style.asp&#34;&gt;Element.style&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;¿Cómo incluir mi proyecto en este Challenge?&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Publicar el proyecto en GitHub: &lt;a href=&#34;https://www.aluracursos.com/blog/creando-repositorio-remoto-en-github?utm_source=gnarus&amp;amp;utm_medium=timeline&#34;&gt;Creando un repositorio remoto en GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Publicarlo en GitHub Pages: &lt;a href=&#34;https://www.aluracursos.com/blog/github-pages&#34;&gt;Paso a Paso para activar tu proyecto en GitHub Pages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Utiliza el tema/topic: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Grupo 3: &lt;strong&gt;challengeonecodificador3&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Grupo 4: &lt;strong&gt;challengeonecodificador4&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Ve a la pestaña &#34;Acerca&#34; o &#34;About&#34; de tu proyecto en el menú de la izquierda dentro de tu repositorio de GitHub Incluye la etiqueta &#34;&lt;strong&gt;challengeonecodificador3&lt;/strong&gt;&#34; o &#34;&lt;strong&gt;challengeonecodificador4&lt;/strong&gt;&#34; dependiendo del grupo al cual perteneces.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/91544872/153601047-62aee6cb-e3cf-42b3-92c3-7130c996113f.gif&#34; alt=&#34;gif-vitrine&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;¿Cómo hago la entrega final de mi proyecto?&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Coloca tus datos en el formulario de entrega con el &lt;strong&gt;link del proyecto publicado con GitHub Pages&lt;/strong&gt; 🔹 &lt;a href=&#34;https://lp.alura.com.br/alura-latam-entrega-challenge-one-esp&#34;&gt;link del formulario&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;![formulario-latam]&lt;img src=&#34;https://user-images.githubusercontent.com/92184087/208179417-7965c06e-21d6-4174-b76a-95ec648edc00.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Accede a tu correo electrónico para conseguir tu Insignia Exclusiva para este desafío 🏆&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;¡No olvides publicar un link o un vídeo de tu proyecto en Linkedin! 🏁&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/company/alura-latam/mycompany/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-LinkedIn-%230077B5?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>