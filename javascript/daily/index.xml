<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-21T01:37:53Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HorrorPills/ChatGPT-Gnome-Desktop-Extension</title>
    <updated>2023-01-21T01:37:53Z</updated>
    <id>tag:github.com,2023-01-21:/HorrorPills/ChatGPT-Gnome-Desktop-Extension</id>
    <link href="https://github.com/HorrorPills/ChatGPT-Gnome-Desktop-Extension" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ChatGPT Gnome Desktop Extension | Talk with ChatGPT from your menubar!&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;ChatGPT Gnome Desktop Extension&lt;/h1&gt; &#xA; &lt;img width=&#34;650&#34; src=&#34;https://user-images.githubusercontent.com/119129086/213536496-c204f289-45d8-4d45-aaa9-ea72cec31143.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h4&gt;&lt;p align=&#34;center&#34;&gt; Gnome just became even more powerful thanks to ChatGPT now being available from the comfort of your desktop, always ready to assist. &lt;br&gt;Save time on finding answers on the internet, you are now 1 click away. &lt;/p&gt; &lt;/h4&gt;&#xA;&lt;h2&gt;&lt;p align=&#34;center&#34;&gt; EARLY VERSION | WORK IN PROGRESS &lt;/p&gt; &lt;br&gt; &#xA; &lt;!-- screenshots --&gt; &#xA; &lt;details markdown=&#34;1&#34;&gt;&#xA;  &lt;summary align=&#34;center&#34;&gt;SCREENSHOTS&lt;/summary&gt;&#xA;  &lt;div align=&#34;center&#34;&gt; &#xA;   &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/21268783/212362417-1e06b82e-8abd-400a-9659-ba25611cd3ae.png&#34; alt=&#34;Screenshot from 2023-01-13 16-53-54&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/21268783/212363907-ce25b9d3-dda9-4586-ae66-29fc2a118831.png&#34; alt=&#34;Screenshot from 2023-01-13 16-57-31&#34;&gt;&lt;/p&gt; &#xA;  &lt;/div&gt;&#xA; &lt;/details&gt; &#xA; &lt;!-- end screenshots --&gt; &lt;/h2&gt;&#xA;&lt;h3&gt;TO-DO &amp;amp; INFO:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clicking &amp;amp; Scrolling using the mouse within the extension window is buggy (Using keyboard navigation is recommended). This will be fixed.&lt;/li&gt; &#xA; &lt;li&gt;Cache &amp;amp; Cookies storing for the comfort of not having to log in each time after system/extension restart.&lt;/li&gt; &#xA; &lt;li&gt;Add Gnome 43 support (potentially fixed, testing)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;HOW TO INSTALL/UNINSTALL:&lt;/h3&gt; &#xA;&lt;p&gt;To install the chatgpt gnome desktop ext. clone this repo, cd into the ext dir. and run &lt;code&gt;make install&lt;/code&gt; &lt;br&gt; &lt;br&gt;&lt;code&gt;DO NOT RUN THE FOLLOWING COMMANDS AS SUDO&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ocaml&#34;&gt;$ git clone https://github.com/HorrorPills/ChatGPT-Gnome-Desktop-Extension &amp;amp;&amp;amp; cd ChatGPT-Gnome-Desktop-Extension &amp;amp;&amp;amp; make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To uninstall it. run &lt;code&gt;make uninstall&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ocaml&#34;&gt;$ git clone https://github.com/HorrorPills/ChatGPT-Gnome-Desktop-Extension &amp;amp;&amp;amp; cd ChatGPT-Gnome-Desktop-Extension &amp;amp;&amp;amp; make uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;KNOWN ISSUES:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Possibly not fully working on Wayland. Use Xorg.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Requiring WebKit2, version none: Requiring namespace &#39;Gtk&#39; version &#39;4.0&#39;, but &#39;3.0&#39; is already loaded&lt;/code&gt; can appear on Gnome 43.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;EXTRAS:&lt;/h3&gt; &#xA;&lt;p&gt;On Ubuntu and Debian-based distributions, you can install the latest version of GTK 4 by running the following command in the terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ocaml&#34;&gt;$ sudo apt install libgtk-4-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Arch Linux and its derivatives, you can install GTK 4 by running the following command in the terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ocaml&#34;&gt;$ sudo pacman -S gtk4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Fedora, you can install GTK 4 by running the following command in the terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ocaml&#34;&gt;$ sudo dnf install gtk4-devel&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>plankanban/planka</title>
    <updated>2023-01-21T01:37:53Z</updated>
    <id>tag:github.com,2023-01-21:/plankanban/planka</id>
    <link href="https://github.com/plankanban/planka" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The realtime kanban board for workgroups built with React and Redux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Planka&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/package-json/v/plankanban/planka&#34; alt=&#34;David (path)&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/meltyshev/planka&#34; alt=&#34;Docker Pulls&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/plankanban/planka&#34; alt=&#34;GitHub&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Trello-like kanban board built with React and Redux.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/plankanban/planka/master/demo.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://plankanban.github.io/planka&#34;&gt;&lt;strong&gt;Client demo&lt;/strong&gt;&lt;/a&gt; (without server features).&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create projects, boards, lists, cards, labels and tasks&lt;/li&gt; &#xA; &lt;li&gt;Add card members, track time, set a due date, add attachments, write comments&lt;/li&gt; &#xA; &lt;li&gt;Markdown support in a card description and comment&lt;/li&gt; &#xA; &lt;li&gt;Filter by members and labels&lt;/li&gt; &#xA; &lt;li&gt;Customize project background&lt;/li&gt; &#xA; &lt;li&gt;Real-time updates&lt;/li&gt; &#xA; &lt;li&gt;User notifications&lt;/li&gt; &#xA; &lt;li&gt;Internationalization&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;p&gt;There are 2 types of installation:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plankanban/planka/master/#1-docker-compose&#34;&gt;Dockerized&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/plankanban/planka/master/#2-without-docker&#34;&gt;Without Docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;1. Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/plankanban/planka/pkgs/container/planka&#34;&gt;&lt;img src=&#34;https://d207aa93qlcgug.cloudfront.net/1.95.5.qa/img/nav/docker-logo-loggedout.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you have &lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;Docker&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker Compose&lt;/a&gt; installed and operational.&lt;/li&gt; &#xA; &lt;li&gt;Create &lt;code&gt;docker-compose.yml&lt;/code&gt; based on &lt;a href=&#34;https://raw.githubusercontent.com/plankanban/planka/master/docker-compose.yml&#34;&gt;the example&lt;/a&gt;. This is the ONLY file you will need. You can create this file on your own machine by copy and pasting the content.&lt;/li&gt; &#xA; &lt;li&gt;Edit &lt;code&gt;BASE_URL&lt;/code&gt; to match your domain name or IP address.&lt;/li&gt; &#xA; &lt;li&gt;Edit &lt;code&gt;SECRET_KEY&lt;/code&gt; with random value. You can generate it by &lt;code&gt;openssl rand -hex 64&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Download the docker-compose.yml:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L https://raw.githubusercontent.com/plankanban/planka/master/docker-compose.yml -o docker-compose.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pull images and start services:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Demo user: &lt;a href=&#34;mailto:demo@demo.demo&#34;&gt;demo@demo.demo&lt;/a&gt; demo&lt;/p&gt; &#xA;&lt;h3&gt;2. Without Docker&lt;/h3&gt; &#xA;&lt;p&gt;Installing without Docker is a bit more complicated, here&#39;s what you need to do:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository into a directory of your choice. (e.g. &lt;code&gt;/var/www/planka&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p /var/www/planka&#xA;cd /var/www/planka&#xA;git clone https://github.com/plankanban/planka.git .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install dependencies for client and build it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd client&#xA;npm install&#xA;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can use &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;pnpm&lt;/code&gt; instead of &lt;code&gt;npm&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;build&lt;/code&gt; directory to the &lt;code&gt;server/public&lt;/code&gt; directory.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp -r build ../server/public&#xA;cp build/index.html ../server/views/index.ejs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Install dependencies for server.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ../server&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Configure environment variables.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.sample .env&#xA;&#xA;# Edit .env file (You could use nano, vim, etc.)&#xA;nano .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Before continuing, make sure you have your selected database created and running.&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Copy start script from the root directory to the &lt;code&gt;server&lt;/code&gt; directory.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp ../start.sh .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Start the server.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./start.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can use &lt;code&gt;pm2&lt;/code&gt; or &lt;code&gt;systemd&lt;/code&gt; to run the server in the background.&lt;/p&gt; &#xA;&lt;h2&gt;Additional information&lt;/h2&gt; &#xA;&lt;h3&gt;Nginx configuration&lt;/h3&gt; &#xA;&lt;p&gt;Here is an example of Nginx configuration for Planka, make sure to replace &lt;code&gt;&amp;lt;domain&amp;gt;&lt;/code&gt; with your domain name, and make sure to configure the SSL.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;upstream planka {&#xA;   server localhost:1337;&#xA;   keepalive 32;&#xA;}&#xA;&#xA;server {&#xA;    listen 443 ssl http2;&#xA;    listen [::]:443 ssl http2;&#xA;    server_name &amp;lt;domain&amp;gt;;&#xA;&#xA;    access_log /var/log/nginx/planka-access.log;&#xA;    error_log  /var/log/nginx/planka-error.log error;&#xA;&#xA;    # SSL Configuration - Replace the example &amp;lt;domain&amp;gt; with your domain&#xA;    ssl_certificate /etc/letsencrypt/live/&amp;lt;domain&amp;gt;/fullchain.pem;&#xA;    ssl_certificate_key /etc/letsencrypt/live/&amp;lt;domain&amp;gt;/privkey.pem;&#xA;    ssl_session_cache shared:SSL:10m;&#xA;    ssl_protocols TLSv1.2 TLSv1.3;&#xA;    ssl_ciphers &#34;ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384&#34;;&#xA;    ssl_prefer_server_ciphers on;&#xA;&#xA;    client_max_body_size 120M;&#xA;    add_header Access-Control-Allow-Origin *;&#xA;    add_header Access-Control-Max-Age 3600;&#xA;    add_header Access-Control-Expose-Headers Content-Length;&#xA;    add_header Access-Control-Allow-Headers Range;&#xA;&#xA;    # Make sure to allow socket.io connections&#xA;    location ~* \.io {&#xA;        proxy_set_header Upgrade $http_upgrade;&#xA;        proxy_set_header Connection &#34;upgrade&#34;;&#xA;        client_max_body_size 50M;&#xA;        proxy_set_header Host $http_host;&#xA;        proxy_set_header X-Real-IP $remote_addr;&#xA;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;        proxy_set_header X-Forwarded-Proto $scheme;&#xA;        proxy_set_header X-Frame-Options SAMEORIGIN;&#xA;        proxy_buffers 256 16k;&#xA;        proxy_buffer_size 16k;&#xA;        client_body_timeout 60;&#xA;        send_timeout 300;&#xA;        lingering_timeout 5;&#xA;        proxy_connect_timeout 1d;&#xA;        proxy_send_timeout 1d;&#xA;        proxy_read_timeout 1d;&#xA;        proxy_pass http://planka;&#xA;    }&#xA;&#xA;    location / {&#xA;        client_max_body_size 50M;&#xA;        proxy_set_header Connection &#34;&#34;;&#xA;        proxy_set_header Host $http_host;&#xA;        proxy_set_header X-Real-IP $remote_addr;&#xA;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;        proxy_set_header X-Forwarded-Proto $scheme;&#xA;        proxy_set_header X-Frame-Options SAMEORIGIN;&#xA;        proxy_buffers 256 16k;&#xA;        proxy_buffer_size 16k;&#xA;        proxy_read_timeout 600s;&#xA;        proxy_cache_revalidate on;&#xA;        proxy_cache_min_uses 2;&#xA;        proxy_cache_use_stale timeout;&#xA;        proxy_cache_lock on;&#xA;        proxy_http_version 1.1;&#xA;        proxy_pass http://planka;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Logging&lt;/h3&gt; &#xA;&lt;p&gt;Planka currently allows you to expose the application&#39;s logfile directory to the host machine via a shared volume. This feature is not enabled by default.&lt;/p&gt; &#xA;&lt;p&gt;To expose the logfile director to the host machine, add the item &lt;code&gt;./logs/:/app/logs/&lt;/code&gt; under &lt;code&gt;services.planka.volumes&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that the directory to the left of the semicolon is regarding the host machine while the directory to the right of the semicolon is regarding the Docker container.&lt;/p&gt; &#xA;&lt;p&gt;For example, in the above step, &lt;code&gt;./logs/:/app/logs/&lt;/code&gt; will create the folder &lt;code&gt;logs&lt;/code&gt; in the same directory where the &lt;code&gt;docker-compose.yml&lt;/code&gt; file lives.&lt;/p&gt; &#xA;&lt;h3&gt;Rotating Logs&lt;/h3&gt; &#xA;&lt;p&gt;Logrotate is designed to ease administration of systems that generate large numbers of log files. It allows automatic rotation, compression, removal, and mailing of log files. Each log file may be handled daily, weekly, monthly, or when it grows too large.&lt;/p&gt; &#xA;&lt;h4&gt;Setup logrotate for Planka logs&lt;/h4&gt; &#xA;&lt;p&gt;Create a file in &lt;code&gt;/etc/logrotate.d&lt;/code&gt; named &lt;code&gt;planka&lt;/code&gt; with the following contents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/path/to/planka/logs/planka.log {&#xA;  daily&#xA;  missingok&#xA;  rotate 14&#xA;  compress&#xA;  delaycompress&#xA;  notifempty&#xA;  create 640 root adm&#xA;  sharedscripts&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ensure to replace logfile directory with your installation’s &lt;code&gt;/logs/planka.log&lt;/code&gt; location.&lt;/p&gt; &#xA;&lt;p&gt;Restart the logrotate service.&lt;/p&gt; &#xA;&lt;h3&gt;Fail2ban&lt;/h3&gt; &#xA;&lt;p&gt;Fail2ban is a service that uses iptables to automatically drop connections for a pre-defined amount of time from IPs that continuously failed to authenticate to the configured services.&lt;/p&gt; &#xA;&lt;h4&gt;Setup a filter and a jail for Planka&lt;/h4&gt; &#xA;&lt;p&gt;A filter defines regex rules to identify when users fail to authenticate on Planka&#39;s user interface.&lt;/p&gt; &#xA;&lt;p&gt;Create a file in &lt;code&gt;/etc/fail2ban/filter.d&lt;/code&gt; named &lt;code&gt;planka.conf&lt;/code&gt; with the following contents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[Definition]&#xA;failregex = ^(.*) Invalid (email or username:|password!) (\&#34;(.*)\&#34;!)? ?\(IP: &amp;lt;ADDR&amp;gt;\)$&#xA;ignoreregex =&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The jail file defines how to handle the failed authentication attempts found by the Planka filter.&lt;/p&gt; &#xA;&lt;p&gt;Create a file in &lt;code&gt;/etc/fail2ban/jail.d&lt;/code&gt; named &lt;code&gt;planka.local&lt;/code&gt; with the following contents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[planka]&#xA;enabled = true&#xA;port = http,https&#xA;filter = planka&#xA;logpath = /path/to/planka/logs/planka.log&#xA;maxretry = 5&#xA;bantime = 900&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ensure to replace &lt;code&gt;logpath&lt;/code&gt;&#39;s value with your installation’s &lt;code&gt;/logs/planka.log&lt;/code&gt; location. If you are using ports other than 80 and 443 for your Web server you should replace those too. The bantime and findtime are defined in seconds.&lt;/p&gt; &#xA;&lt;p&gt;Restart the fail2ban service. You can check the status of your Planka jail by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;fail2ban-client status planka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Import from Trello&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s already available in Planka, or you can also use the great tool &lt;a href=&#34;https://github.com/christophenne/trello2planka&#34;&gt;trello2planka&lt;/a&gt; to do the import.&lt;/p&gt; &#xA;&lt;h3&gt;Backup and Restore&lt;/h3&gt; &#xA;&lt;p&gt;Planka comes with two scripts that allow for manual backup and restore when running Planka with docker-compose.yml. Backups can be triggered with &lt;code&gt;docker-backup.sh&lt;/code&gt; which will export the Database, User Avatars, Project Backgrounds and Attachments into a single tgz file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./docker-backup.sh&#xA;Exporting postgres database ... Success!&#xA;Exporting user-avatars ... Success!&#xA;Exporting project-background-images ... Success!&#xA;Exporting attachments ... Success!&#xA;Creating final tarball 2023-01-17T15-37-22Z-backup.tgz ... Success!&#xA;Cleaning up temporary files and folders ... Success!&#xA;Backup Complete!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The resulting backup can be restored using the &lt;code&gt;docker-restore.sh&lt;/code&gt; script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./docker-restore.sh 2023-01-17T15-37-22Z-backup.tgz&#xA;Extracting tarball 2023-01-17T11-10-54Z-backup.tgz ... Success!&#xA;Importing postgres database ...&#xA;&#xA;[Many lines of postgres output]&#xA;...&#xA;&#xA;Success!&#xA;Importing user-avatars ... Success!&#xA;Importing project-background-images ... Success!&#xA;Importing attachments ... Success!&#xA;Cleaning up temporary files and folders ... Success!&#xA;Restore complete!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repository and install dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/plankanban/planka.git&#xA;&#xA;cd planka&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Either use a local database or start the provided development database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose -f docker-compose-dev.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create &lt;code&gt;server/.env&lt;/code&gt; based on &lt;code&gt;server/.env.sample&lt;/code&gt; and edit &lt;code&gt;DATABASE_URL&lt;/code&gt; if needed, then initialize the database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run server:db:init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the development server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Demo user: &lt;a href=&#34;mailto:demo@demo.demo&#34;&gt;demo@demo.demo&lt;/a&gt; demo&lt;/p&gt; &#xA;&lt;h2&gt;Tech stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;React, Redux, Redux-Saga, Redux-ORM, Semantic UI React, react-beautiful-dnd&lt;/li&gt; &#xA; &lt;li&gt;Sails.js, Knex.js&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Planka is &lt;a href=&#34;https://github.com/plankanban/planka/raw/master/LICENSE&#34;&gt;AGPL-3.0 licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>meteor/meteor</title>
    <updated>2023-01-21T01:37:53Z</updated>
    <id>tag:github.com,2023-01-21:/meteor/meteor</id>
    <link href="https://github.com/meteor/meteor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Meteor, the JavaScript App Platform&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://www.meteor.com&#34; target=&#34;_blank&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;225&#34; src=&#34;https://user-images.githubusercontent.com/841294/26841702-0902bbee-4af3-11e7-9805-0618da66a246.png&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://travis-ci.org/meteor/meteor&#34;&gt;&lt;img src=&#34;https://travis-ci.org/meteor/meteor.svg?branch=devel&#34; alt=&#34;TravisCI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/meteor/meteor/tree/devel&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/meteor/meteor/tree/devel.svg?style=shield&amp;amp;circle-token=c2d3c041506bd493ef3795ffa4448684cfce97b8&#34; alt=&#34;CircleCI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://meteor.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Meteor-2.7.4-green?logo=meteor&amp;amp;logoColor=white&#34; alt=&#34;built with Meteor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Meteor is an &lt;strong&gt;ultra-simple&lt;/strong&gt; environment for building &lt;strong&gt;modern&lt;/strong&gt; web applications.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.meteor.com&#34;&gt;Official Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.meteor.com/developers/install&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.meteor.com/#/full/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;📚 &lt;strong&gt;Create your applications using modern JavaScript&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Benefit from the latest technology updates to fastly prototype and develop your applications.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;✨ &lt;strong&gt;Integrate technologies you already use&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Use popular frameworks and tools right out-of-the-box. Focus on building features instead of configuring disparate components yourself.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;💻 &lt;strong&gt;Build apps for any device&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Use the same code whether you’re developing for web, iOS, Android, or desktop for a seamless update experience for your users.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;🔥 Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;What about to try a getting started tutorial in your favorite technology?&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://react-tutorial.meteor.com/&#34;&gt;&lt;img align=&#34;left&#34; width=&#34;25&#34; src=&#34;https://www.quantumversity.com/wp-content/uploads/2020/11/Adding-Authentication-to-React-with-Auth0-Login-and-Profile.png&#34;&gt; React&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blaze-tutorial.meteor.com/&#34;&gt;&lt;img align=&#34;left&#34; width=&#34;25&#34; src=&#34;https://progsoft.net/images/blaze-css-icon-3e80acb3996047afd09f1150f53fcd78e98c1e1b.png&#34;&gt; Blaze&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://vue-tutorial.meteor.com/&#34;&gt;&lt;img align=&#34;left&#34; width=&#34;25&#34; src=&#34;https://vuejs.org/images/logo.png&#34;&gt; Vue&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://svelte-tutorial.meteor.com/&#34;&gt;&lt;img align=&#34;left&#34; width=&#34;25&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Svelte_Logo.svg/1200px-Svelte_Logo.svg.png&#34;&gt; Svelte&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Next, read the &lt;a href=&#34;https://docs.meteor.com/&#34;&gt;documentation&lt;/a&gt; and get some &lt;a href=&#34;https://github.com/meteor/examples&#34;&gt;examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;🚀 Quick Start&lt;/h1&gt; &#xA;&lt;p&gt;On your platform, use this line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; npm install -g meteor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;🚀 To create a project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; meteor create my-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;☄️ Run it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd my-app&#xA;meteor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;🧱 Developer Resources&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Building an application with Meteor?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Deploy on &lt;a href=&#34;https://www.meteor.com/cloud&#34;&gt;Meteor Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discussion &lt;a href=&#34;https://forums.meteor.com/&#34;&gt;Forums&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Join the Meteor community Slack by clicking this &lt;a href=&#34;https://join.slack.com/t/meteor-community/shared_invite/enQtODA0NTU2Nzk5MTA3LWY5NGMxMWRjZDgzYWMyMTEyYTQ3MTcwZmU2YjM5MTY3MjJkZjQ0NWRjOGZlYmIxZjFlYTA5Mjg4OTk3ODRiOTc&#34;&gt;invite link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Announcement list. Subscribe in the &lt;a href=&#34;https://www.meteor.com/&#34;&gt;footer&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Interested in helping or contributing to Meteor? These resources will help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/meteor/meteor/devel/DEVELOPMENT.md&#34;&gt;Core development guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/meteor/meteor/devel/CONTRIBUTING.md&#34;&gt;Contribution guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/meteor/meteor/discussions/&#34;&gt;Feature requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/meteor/meteor/issues&#34;&gt;Issue tracker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To uninstall Meteor &lt;a href=&#34;https://docs.meteor.com/install.html#uninstall&#34;&gt;read here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>