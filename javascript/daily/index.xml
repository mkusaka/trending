<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-06T01:38:54Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>barretlee/cloudflare-proxy</title>
    <updated>2023-04-06T01:38:54Z</updated>
    <id>tag:github.com,2023-04-06:/barretlee/cloudflare-proxy</id>
    <link href="https://github.com/barretlee/cloudflare-proxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloudflare Worker 代理请求 ChatGPT API，支持 Stream 流式输出&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cloudflare-proxy&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;好多调用 ChatGPT 的客户端都是直接使用的 api.openai.com，这个接口很显然是访问不通的，好在有些良心作者还提供了一个自定义 API 域名的入口，在 Cloudflare Worker 上写了一个简单的代理，用起来顺手多了，省得我一直在本机挂全局代理。—— &lt;a href=&#34;https://twitter.com/Barret_China/status/1642725620798087168&#34;&gt;Barret李靖&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/2698003/229402093-8e4f55e8-95e5-4adc-92dd-2fb6bfacce42.png&#34; width=&#34;800&#34;&gt; &#xA;&lt;p&gt;代理请求到 ChatGPT API，代码部署步骤：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;注册并登录到 Cloudflare 账户&lt;/li&gt; &#xA; &lt;li&gt;创建一个新的 Cloudflare Worker&lt;/li&gt; &#xA; &lt;li&gt;将 &lt;a href=&#34;https://raw.githubusercontent.com/barretlee/cloudflare-proxy/main/cloudflare-worker.js&#34;&gt;cloudflare-worker.js&lt;/a&gt; 复制并粘贴到 Cloudflare Worker 编辑器中&lt;/li&gt; &#xA; &lt;li&gt;保存并部署 Cloudflare Worker&lt;/li&gt; &#xA; &lt;li&gt;在 Worker 详情页 -&amp;gt; Trigger -&amp;gt; Custom Domains 中为这个 Worker 添加一个自定义域名&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;为啥需要第五步？因为直接使用 Cloudflare 的域名，依然无法访问。&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/2698003/229402115-f7463a82-dd03-45e1-820c-1ab29acf1048.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;h3&gt;使用说明&lt;/h3&gt; &#xA;&lt;p&gt;ChatGPT 的 API 默认是非流式输出的，如果想让他变成流式输出，需要将 &lt;code&gt;payload.stream&lt;/code&gt; 设置为 true，大部分的客户端都已经加上了这个参数。&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/2698003/229670098-b093b04c-22fe-4dd8-85be-b55a29b34c87.png&#34; width=&#34;500&#34;&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/barretlee/cloudflare-proxy/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>getsomecat/GetSomeCats</title>
    <updated>2023-04-06T01:38:54Z</updated>
    <id>tag:github.com,2023-04-06:/getsomecat/GetSomeCats</id>
    <link href="https://github.com/getsomecat/GetSomeCats" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GetSomeCats&lt;/h1&gt; &#xA;&lt;p&gt;准备重新整理一下我之前做的教程等相关资料。 集中放入此项目里面。 希望不会鸽。&lt;/p&gt; &#xA;&lt;p&gt;###推一个&lt;a href=&#34;https://book.surge.ga/surge-ios&#34;&gt;新手教程&lt;/a&gt; 由Alice（主要）和我（打酱油）整理完成。&lt;/p&gt; &#xA;&lt;p&gt;以及另外一个教程：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/getsomecat/GetSomeCats/Surge/Surge%E6%96%B0%E6%89%8B%E4%BB%8E%E6%B3%A8%E5%86%8CApple%20ID%E5%88%B0%E9%80%80%E6%AC%BE.md&#34;&gt;Surge新手从注册Apple ID到退款&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;💡提醒我所折腾的东西都是基于surge的TF版，如果您不是TF版用户，请谨慎！！！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;提供一个基于surge作者老刘的最简配置，带一个我的warp 节点的配置。 使用方法：打开surge配置页面，选择从URL下载配置，将下方的配置链接复制粘贴进去即可&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://raw.githubusercontent.com/getsomecat/GetSomeCats/Surge/Surge.conf&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果你希望拥有一个做好了策略组的配置那么可以选择以下配置：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://raw.githubusercontent.com/getsomecat/GetSomeCats/Surge/A_mini.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;这里还有个自己修改版的一键snell脚本：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget -O snell.sh --no-check-certificate https://raw.githubusercontent.com/getsomecat/Snell/master/snell_test.sh &amp;amp;&amp;amp; chmod +x snell.sh &amp;amp;&amp;amp; ./snell.sh &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;下面是两个手动搭建服务器的教程&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/getsomecat/GetSomeCats/Surge/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BASnell%E6%9C%8D%E5%8A%A1.md&#34;&gt;手动搭建Snell服务器&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/getsomecat/GetSomeCats/Surge/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BATUIC%E6%9C%8D%E5%8A%A1.md&#34;&gt;手动搭建TUIC 服务器&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;其实如果有兴趣还是可以尝试一下自己手动搭建服务器。&lt;/p&gt;</summary>
  </entry>
</feed>