<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-28T01:34:12Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lencx/Noi</title>
    <updated>2024-01-28T01:34:12Z</updated>
    <id>tag:github.com,2024-01-28:/lencx/Noi</id>
    <link href="https://github.com/lencx/Noi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🦄 AI + Tools + Plugins + Community&lt;/p&gt;&lt;hr&gt;&lt;h2 align=&#34;center&#34;&gt; &lt;img width=&#34;160&#34; src=&#34;https://raw.githubusercontent.com/lencx/Noi/main/assets/noi-logo.png&#34;&gt; &lt;p&gt;AI + Tools + Plugins + Community&lt;/p&gt; &lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lencx/Noi/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/lencx/Noi/total.svg?style=flat-square&#34; alt=&#34;Noi downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/lencx&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 40px !important;width: 145px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for loading any URL and system tray&lt;/li&gt; &#xA; &lt;li&gt;Theme Mode (Light/Dark)&lt;/li&gt; &#xA; &lt;li&gt;Multiple Languages&lt;/li&gt; &#xA; &lt;li&gt;Prompt Management&lt;/li&gt; &#xA; &lt;li&gt;AI Batch Questioning&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lencx/Noi/releases/download/v0.2.1/Noi_macos_0.2.1.dmg&#34;&gt;⬇️ x64&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lencx/Noi/releases/download/v0.2.1/Noi_macos_0.2.1-arm64.dmg&#34;&gt;⬇️ arm64&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lencx/Noi/releases/download/v0.2.1/Noi-win32-x64-0.2.1-setup.exe&#34;&gt;⬇️ x64&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lencx/Noi/releases/download/v0.2.1/Noi_linux_0.2.1.AppImage&#34;&gt;⬇️ AppImage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lencx/Noi/releases/download/v0.2.1/noi_linux_amd64_0.2.1.deb&#34;&gt;⬇️ amd64.deb&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Preview&lt;/th&gt; &#xA;   &lt;th&gt;Preview&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lencx/Noi/main/assets/noi-theme-dark.png&#34; alt=&#34;theme-dark&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lencx/Noi/main/assets/noi-theme-light.png&#34; alt=&#34;theme-light&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lencx/Noi/main/assets/noi-batch-ask.png&#34; alt=&#34;batch-ask&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lencx/Noi/main/assets/noi-settings-prompts.png&#34; alt=&#34;settings-prompts&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#lencx/Noi&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=lencx/Noi&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;If you encounter the error message &#34;Noi&#34; is damaged and can&#39;t be opened. You should move it to the Trash. while installing software on macOS, it may be due to security settings restrictions in macOS. To solve this problem, please try the following command in Terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xattr -cr /Applications/Noi.app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lencx/Noi/main/assets/mac-install-error.png&#34; alt=&#34;mac-install-error&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Notes&lt;/li&gt; &#xA; &lt;li&gt;Toolset&lt;/li&gt; &#xA; &lt;li&gt;Plugin system&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;中国用户&lt;/h2&gt; &#xA;&lt;p&gt;国内用户如果遇到使用问题或者想交流 Noi，可以关注公众号「&lt;strong&gt;浮之静&lt;/strong&gt;」，发送 “&lt;strong&gt;noi&lt;/strong&gt;” 进群参与讨论。如果 Noi 应用对你有帮助可以分享给更多人，或者微信扫码打赏。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img height=&#34;200&#34; src=&#34;https://user-images.githubusercontent.com/16164244/207228025-117b5f77-c5d2-48c2-a070-774b7a1596f2.png&#34;&gt; &lt;img height=&#34;200&#34; src=&#34;https://user-images.githubusercontent.com/16164244/207228300-ea5c4688-c916-4c55-a8c3-7f862888f351.png&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>slackapi/slack-github-action</title>
    <updated>2024-01-28T01:34:12Z</updated>
    <id>tag:github.com,2024-01-28:/slackapi/slack-github-action</id>
    <link href="https://github.com/slackapi/slack-github-action" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Send data into Slack using this GitHub Action!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Slack Send GitHub Action&lt;/h1&gt; &#xA;&lt;p&gt;Send data into Slack using this GitHub Action!&lt;/p&gt; &#xA;&lt;h2&gt;Sending Variables&lt;/h2&gt; &#xA;&lt;p&gt;You can send GitHub-specific data related to GitHub Action workflow events using &lt;a href=&#34;https://docs.github.com/en/actions/learn-github-actions/contexts&#34;&gt;GitHub Contexts&lt;/a&gt; and &lt;a href=&#34;https://docs.github.com/en/actions/learn-github-actions/variables&#34;&gt;Variables&lt;/a&gt; that GitHub Actions provides.&lt;/p&gt; &#xA;&lt;p&gt;For examples on how to leverage this in your workflows, check out the &lt;a href=&#34;https://github.com/slackapi/slack-github-action/tree/main/example-workflows&#34;&gt;example workflows we have&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to Send Data to Slack&lt;/h2&gt; &#xA;&lt;p&gt;This package has three different techniques to send data to Slack:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Send data to Slack&#39;s Workflow Builder (requires a paid Slack instance).&lt;/li&gt; &#xA; &lt;li&gt;Send data via a Slack app to post to a specific channel (use an existing custom app or create a new one).&lt;/li&gt; &#xA; &lt;li&gt;Send data via a Slack Incoming Webhook URL (use an existing custom app or create a new one).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The recommended way to use this action is with Slack&#39;s Workflow Builder (if you&#39;re on a paid Slack plan).&lt;/p&gt; &#xA;&lt;h3&gt;Technique 1: Slack Workflow Builder&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;❗️ This approach requires a paid Slack plan; it also doesn&#39;t support any text formatting&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This technique sends data into Slack via a webhook URL created using &lt;a href=&#34;https://slack.com/features/workflow-automation&#34;&gt;Slack&#39;s Workflow builder&lt;/a&gt;. Follow &lt;a href=&#34;https://slack.com/intl/en-ca/help/articles/360041352714-Create-more-advanced-workflows-using-webhooks&#34;&gt;these steps to create a Slack workflow using webhooks&lt;/a&gt;. The Slack workflow webhook URL will be in the form &lt;code&gt;https://hooks.slack.com/workflows/....&lt;/code&gt;. The payload sent by this GitHub action will be flattened (all nested keys moved to the top level) and stringified since Slack&#39;s workflow builder only supports top level string values in payloads.&lt;/p&gt; &#xA;&lt;p&gt;As part of the &lt;a href=&#34;https://slack.com/help/articles/360041352714-Create-more-advanced-workflows-using-webhooks#workflow-setup&#34;&gt;workflow setup&lt;/a&gt;, you will need to define expected variables in the payload the webhook will receive (described in the &#34;Create custom variables&#34; section of the docs). If these variables are missing in the payload, an error is returned.&lt;/p&gt; &#xA;&lt;h4&gt;Setup&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slack.com/intl/en-ca/help/articles/360041352714-Create-more-advanced-workflows-using-webhooks&#34;&gt;Create a Slack workflow webhook&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy the webhook URL (&lt;code&gt;https://hooks.slack.com/workflows/....&lt;/code&gt;) and &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository&#34;&gt;add it as a secret in your repo settings&lt;/a&gt; named &lt;code&gt;SLACK_WEBHOOK_URL&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add a step to your GitHub action to send data to your Webhook.&lt;/li&gt; &#xA; &lt;li&gt;Configure your Slack workflow to use variables from the incoming payload from the GitHub Action. You can select where you want to post the data and how you want to format it in Slack&#39;s workflow builder interface.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Usage&lt;/h4&gt; &#xA;&lt;p&gt;Add this Action as a &lt;a href=&#34;https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idsteps&#34;&gt;step&lt;/a&gt; to your project&#39;s GitHub Action Workflow file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Send GitHub Action trigger data to Slack workflow&#xA;  id: slack&#xA;  uses: slackapi/slack-github-action@v1.25.0&#xA;  env:&#xA;    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Send custom JSON data to Slack workflow&#xA;  id: slack&#xA;  uses: slackapi/slack-github-action@v1.25.0&#xA;  with:&#xA;    # This data can be any valid JSON from a previous step in the GitHub Action&#xA;    payload: |&#xA;      {&#xA;        &#34;key&#34;: &#34;value&#34;,&#xA;        &#34;foo&#34;: &#34;bar&#34;&#xA;      }&#xA;  env:&#xA;    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If the &lt;code&gt;payload&lt;/code&gt; is provided it will take preference over &lt;code&gt;payload-file-path&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Send custom JSON data to Slack workflow&#xA;  id: slack&#xA;  uses: slackapi/slack-github-action@v1.25.0&#xA;  with:&#xA;    payload-file-path: &#34;./payload-slack-content.json&#34;&#xA;  env:&#xA;    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Technique 2: Slack App&lt;/h3&gt; &#xA;&lt;p&gt;By creating a new Slack app or using an existing one, this approach allows your GitHub Actions job to post a message in a Slack channel or direct message by utilizing the &lt;a href=&#34;https://api.slack.com/methods/chat.postMessage&#34;&gt;chat.postMessage&lt;/a&gt; API method. Using this approach you can instantly post a message without setting up Slack workflows.&lt;/p&gt; &#xA;&lt;h4&gt;Setup&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.slack.com/apps&#34;&gt;Create a Slack App&lt;/a&gt; for your workspace (alternatively use an existing app you have already created and installed).&lt;/li&gt; &#xA; &lt;li&gt;Add the &lt;a href=&#34;https://api.slack.com/scopes/chat:write&#34;&gt;&lt;code&gt;chat:write&lt;/code&gt;&lt;/a&gt; bot scope under &lt;strong&gt;OAuth &amp;amp; Permissions&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install the app to your workspace.&lt;/li&gt; &#xA; &lt;li&gt;Copy the app&#39;s Bot Token from the &lt;strong&gt;OAuth &amp;amp; Permissions&lt;/strong&gt; page and &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository&#34;&gt;add it as a secret in your repo settings&lt;/a&gt; named &lt;code&gt;SLACK_BOT_TOKEN&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Invite the bot user into the channel you wish to post messages to (&lt;code&gt;/invite @bot_user_name&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Usage&lt;/h4&gt; &#xA;&lt;p&gt;Add this Action as a &lt;a href=&#34;https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idsteps&#34;&gt;step&lt;/a&gt; to your project&#39;s GitHub Action Workflow file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Post to a Slack channel&#xA;  id: slack&#xA;  uses: slackapi/slack-github-action@v1.25.0&#xA;  with:&#xA;    # Slack channel id, channel name, or user id to post message.&#xA;    # See also: https://api.slack.com/methods/chat.postMessage#channels&#xA;    # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.&#xA;    channel-id: &#39;CHANNEL_ID,ANOTHER_CHANNEL_ID&#39;&#xA;    # For posting a simple plain text message&#xA;    slack-message: &#34;GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}&#34;&#xA;  env:&#xA;    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using JSON payload for constructing a message is also available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Post to a Slack channel&#xA;  id: slack&#xA;  uses: slackapi/slack-github-action@v1.25.0&#xA;  with:&#xA;    # Slack channel id, channel name, or user id to post message.&#xA;    # See also: https://api.slack.com/methods/chat.postMessage#channels&#xA;    channel-id: &#39;CHANNEL_ID&#39;&#xA;    # For posting a rich message using Block Kit&#xA;    payload: |&#xA;      {&#xA;        &#34;text&#34;: &#34;GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}&#34;,&#xA;        &#34;blocks&#34;: [&#xA;          {&#xA;            &#34;type&#34;: &#34;section&#34;,&#xA;            &#34;text&#34;: {&#xA;              &#34;type&#34;: &#34;mrkdwn&#34;,&#xA;              &#34;text&#34;: &#34;GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}&#34;&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;  env:&#xA;    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Update the message&lt;/h4&gt; &#xA;&lt;p&gt;If you would like to notify the real-time updates on a build status, you can modify the message your build job posted in the subsequent steps. In order to do this, the steps after the first message posting can have &lt;code&gt;update-ts: ${{ steps.slack.outputs.ts }}&lt;/code&gt; in their settings. With this, the step updates the already posted channel message instead of posting a new one.&lt;/p&gt; &#xA;&lt;p&gt;Please note that &lt;strong&gt;the message update step does not accept a channel name.&lt;/strong&gt; Set a channel ID for the steps for the actions that update messages.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: slack&#xA;  uses: slackapi/slack-github-action@v1.25.0&#xA;  with:&#xA;    # The following message update step does not accept a channel name.&#xA;    # Setting a channel ID here for consistency is highly recommended.&#xA;    channel-id: &#34;CHANNEL_ID&#34;&#xA;    payload: |&#xA;      {&#xA;        &#34;text&#34;: &#34;Deployment started (In Progress)&#34;,&#xA;        &#34;attachments&#34;: [&#xA;          {&#xA;            &#34;pretext&#34;: &#34;Deployment started&#34;,&#xA;            &#34;color&#34;: &#34;dbab09&#34;,&#xA;            &#34;fields&#34;: [&#xA;              {&#xA;                &#34;title&#34;: &#34;Status&#34;,&#xA;                &#34;short&#34;: true,&#xA;                &#34;value&#34;: &#34;In Progress&#34;&#xA;              }&#xA;            ]&#xA;          }&#xA;        ]&#xA;      }&#xA;  env:&#xA;    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN}}&#xA;- uses: slackapi/slack-github-action@v1.25.0&#xA;  with:&#xA;    # Unlike the step posting a new message, this step does not accept a channel name.&#xA;    # Please use a channel ID, not a name here.&#xA;    channel-id: &#34;CHANNEL_ID&#34;&#xA;    update-ts: ${{ steps.slack.outputs.ts }}&#xA;    payload: |&#xA;      {&#xA;        &#34;text&#34;: &#34;Deployment finished (Completed)&#34;,&#xA;        &#34;attachments&#34;: [&#xA;          {&#xA;            &#34;pretext&#34;: &#34;Deployment finished&#34;,&#xA;            &#34;color&#34;: &#34;28a745&#34;,&#xA;            &#34;fields&#34;: [&#xA;              {&#xA;                &#34;title&#34;: &#34;Status&#34;,&#xA;                &#34;short&#34;: true,&#xA;                &#34;value&#34;: &#34;Completed&#34;&#xA;              }&#xA;            ]&#xA;          }&#xA;        ]&#xA;      }&#xA;  env:&#xA;    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Technique 3: Slack Incoming Webhook&lt;/h3&gt; &#xA;&lt;p&gt;This approach allows your GitHub Actions job to post a message to a Slack channel or direct message by utilizing &lt;a href=&#34;https://api.slack.com/messaging/webhooks&#34;&gt;Incoming Webhooks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Incoming Webhooks conform to the same rules and functionality as any of Slack&#39;s other messaging APIs. You can make your posted messages as simple as a single line of text, or make them really useful with &lt;a href=&#34;https://api.slack.com/messaging/interactivity&#34;&gt;interactive components&lt;/a&gt;. To make the message more expressive and useful use &lt;a href=&#34;https://api.slack.com/block-kit&#34;&gt;Block Kit&lt;/a&gt; to build and test visual components.&lt;/p&gt; &#xA;&lt;h4&gt;Setup&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.slack.com/apps&#34;&gt;Create a Slack App&lt;/a&gt; for your workspace (alternatively use an existing app you have already created and installed).&lt;/li&gt; &#xA; &lt;li&gt;Add the &lt;a href=&#34;https://api.slack.com/scopes/incoming-webhook&#34;&gt;&lt;code&gt;incoming-webhook&lt;/code&gt;&lt;/a&gt; bot scope under &lt;strong&gt;OAuth &amp;amp; Permissions&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install the app to your workspace (you will select a channel to notify).&lt;/li&gt; &#xA; &lt;li&gt;Activate and create a new webhook under &lt;strong&gt;Incoming Webhooks&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy the Webhook URL from the Webhook you just generated &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository&#34;&gt;add it as a secret in your repo settings&lt;/a&gt; named &lt;code&gt;SLACK_WEBHOOK_URL&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Usage&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Send custom JSON data to Slack workflow&#xA;  id: slack&#xA;  uses: slackapi/slack-github-action@v1.25.0&#xA;  with:&#xA;    # For posting a rich message using Block Kit&#xA;    payload: |&#xA;      {&#xA;        &#34;text&#34;: &#34;GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}&#34;,&#xA;        &#34;blocks&#34;: [&#xA;          {&#xA;            &#34;type&#34;: &#34;section&#34;,&#xA;            &#34;text&#34;: {&#xA;              &#34;type&#34;: &#34;mrkdwn&#34;,&#xA;              &#34;text&#34;: &#34;GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}&#34;&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;  env:&#xA;    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}&#xA;    SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;HTTPS Proxy&lt;/h3&gt; &#xA;&lt;p&gt;If you need to use a proxy to connect with Slack, you can use the &lt;code&gt;HTTPS_PROXY&lt;/code&gt; (or &lt;code&gt;https_proxy&lt;/code&gt;) environment variable. In this example we use the Slack App technique, but configuring a proxy works the same way for all of them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Post to a Slack channel via a proxy&#xA;  id: slack&#xA;  uses: slackapi/slack-github-action@v1.25.0&#xA;  with:&#xA;    channel-id: &#39;CHANNEL_ID&#39;&#xA;    slack-message: &#39;This message was sent through a proxy&#39;&#xA;  env:&#xA;    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}&#xA;    # Set the HTTPS_PROXY environment variable to whatever your policy requires&#xA;    HTTPS_PROXY: &#39;http://proxy.example.org:8080&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/slackapi/slack-github-action/main/.github/contributing.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/slackapi/slack-github-action/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TheBeastLT/torrentio-scraper</title>
    <updated>2024-01-28T01:34:12Z</updated>
    <id>tag:github.com,2024-01-28:/TheBeastLT/torrentio-scraper</id>
    <link href="https://github.com/TheBeastLT/torrentio-scraper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Torrentio&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TheBeastLT/torrentio-scraper/master/addon&#34;&gt;torrentio-addon&lt;/a&gt; - the Stremio addon which will query scraped entries and return Stremio stream results.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>