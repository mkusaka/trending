<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-10T01:38:20Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Ninjas-Code-official/Enatega-Restaurant-Solution</title>
    <updated>2023-07-10T01:38:20Z</updated>
    <id>tag:github.com,2023-07-10:/Ninjas-Code-official/Enatega-Restaurant-Solution</id>
    <link href="https://github.com/Ninjas-Code-official/Enatega-Restaurant-Solution" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fully functional white label Restaurant/Grocery App built using React Native with Customer, Rider App and Dashboard.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Enatega Single Vendor Solution&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ninjas-Code-official/Enatega-Restaurant-Solution/main/contributingGuides/thumbnail.png&#34; alt=&#34;Project thumbnail&#34;&gt; &lt;br&gt; Enatega is a state of the art white label storefront delivery solution that allows business owners to easily manage their deliveries. Whether they have a restaurant, grocery store, pharmacy, winery or any similar storefront, Enatega will intuitively and instantly be able to automate their deliveries, and handle the logistics. Our solution provides the capability of order management, as well as separate applications for the rider and the customer. It also boasts a suit of features which allow for a greater range of customizability for customers in terms of item selection.&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;This is the full free source code of our solution, however the backend and API is proprietary and can be obtained via paid license.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is included:&lt;/h2&gt; &#xA;&lt;p&gt;Our solution contains three separate modules. These include the admin panel, the delivery app and the rider app. Below, the capabilities of all three modules have been listed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The admin panel receives the orders that can be placed via the customer app. It also allows managing the restaurant’s orders as well as the riders’ accounts.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The customer app allows for customers to choose their specific selections and customize their order before placing it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The rider app can accept the orders and also allows for location based zoning as well as the ability to locate customer’s address via google map’s API integration.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Analytics dashboard for the mobile app&lt;/li&gt; &#xA; &lt;li&gt;Payment integration with Paypal and Stripe&lt;/li&gt; &#xA; &lt;li&gt;Order tracking feature&lt;/li&gt; &#xA; &lt;li&gt;Email Integration e.g for order confirmation etc.&lt;/li&gt; &#xA; &lt;li&gt;Ability to provide ratings and reviews&lt;/li&gt; &#xA; &lt;li&gt;Finding address using GPS integration&lt;/li&gt; &#xA; &lt;li&gt;Facebook and Google authentication integration&lt;/li&gt; &#xA; &lt;li&gt;Mobile responsive dashboard&lt;/li&gt; &#xA; &lt;li&gt;Multi-Language support using localization&lt;/li&gt; &#xA; &lt;li&gt;Separate rider app for order management&lt;/li&gt; &#xA; &lt;li&gt;Multiple variations of food items&lt;/li&gt; &#xA; &lt;li&gt;Push notifications for both mobile and web&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;As we’ve mentioned above, the solution includes three separate modules. To setup these modules, follow the steps below:&lt;/p&gt; &#xA;&lt;p&gt;To run the module, you need to have nodejs installed on your machine. Once nodejs is installed, go to the directory and enter the following commands&lt;/p&gt; &#xA;&lt;p&gt;The required credentials and keys have been set already. You can setup your own keys and credentials&lt;/p&gt; &#xA;&lt;p&gt;The version of nodejs should be between 14.0 to 16.0&lt;/p&gt; &#xA;&lt;p&gt;-&lt;a href=&#34;https://enatega.com/singlevendor-documentation/&#34;&gt;Link to Video tutorial/demonstration of Setup&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Customer Menu&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Customer Categories&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Customer Items&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ninjas-Code-official/Enatega-Restaurant-Solution/main/contributingGuides/screenshots/customer1.jpeg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ninjas-Code-official/Enatega-Restaurant-Solution/main/contributingGuides/screenshots/customer2.jpeg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ninjas-Code-official/Enatega-Restaurant-Solution/main/contributingGuides/screenshots/customer3.jpeg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Rider Menu&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Rider Orders&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Rider Items Details&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ninjas-Code-official/Enatega-Restaurant-Solution/main/contributingGuides/screenshots/rider1.jpeg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ninjas-Code-official/Enatega-Restaurant-Solution/main/contributingGuides/screenshots/rider2.jpeg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ninjas-Code-official/Enatega-Restaurant-Solution/main/contributingGuides/screenshots/rider3.jpeg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Stats Overview&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;User Table&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Food Items Editing&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ninjas-Code-official/Enatega-Restaurant-Solution/main/contributingGuides/screenshots/admin1.jpeg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ninjas-Code-official/Enatega-Restaurant-Solution/main/contributingGuides/screenshots/admin2.jpeg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ninjas-Code-official/Enatega-Restaurant-Solution/main/contributingGuides/screenshots/admin3.jpeg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;High Level Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ninjas-Code-official/Enatega-Restaurant-Solution/main/contributingGuides/screenshots/HighArchitectDiagram.png&#34; alt=&#34;High Level Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User Mobile App communicates with both API Server and &lt;a href=&#34;https://amplitude.com/&#34;&gt;Amplitudes&lt;/a&gt; analytics dashboard&lt;/li&gt; &#xA; &lt;li&gt;Web dashboard communicates with only API Server&lt;/li&gt; &#xA; &lt;li&gt;Rider App communicates with API Server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prerequisites:&lt;/h3&gt; &#xA;&lt;h5&gt;App Ids for Mobile App in app.json&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Facebook Scheme&lt;/li&gt; &#xA; &lt;li&gt;Facebook App Id&lt;/li&gt; &#xA; &lt;li&gt;Facebook Display Name&lt;/li&gt; &#xA; &lt;li&gt;iOS Client Id Google&lt;/li&gt; &#xA; &lt;li&gt;Android Id Google&lt;/li&gt; &#xA; &lt;li&gt;Amplitude Api Key&lt;/li&gt; &#xA; &lt;li&gt;server url&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Set credentials in API in file helpers/config.js and helpers/credentials.js&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email User Name&lt;/li&gt; &#xA; &lt;li&gt;Password For Email&lt;/li&gt; &#xA; &lt;li&gt;Mongo User&lt;/li&gt; &#xA; &lt;li&gt;Mongo Password&lt;/li&gt; &#xA; &lt;li&gt;Mongo DB Name&lt;/li&gt; &#xA; &lt;li&gt;Reset Password Link&lt;/li&gt; &#xA; &lt;li&gt;Admin User name&lt;/li&gt; &#xA; &lt;li&gt;Admin Password&lt;/li&gt; &#xA; &lt;li&gt;User Id&lt;/li&gt; &#xA; &lt;li&gt;Name&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Set credentials in Admin Dashboard in file src/index.js&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Firebase Api Key&lt;/li&gt; &#xA; &lt;li&gt;Auth Domain&lt;/li&gt; &#xA; &lt;li&gt;Database Url&lt;/li&gt; &#xA; &lt;li&gt;Project Id&lt;/li&gt; &#xA; &lt;li&gt;Storage Buck&lt;/li&gt; &#xA; &lt;li&gt;Messaging Sender Id&lt;/li&gt; &#xA; &lt;li&gt;App Id&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;NOTE: Email provider has been only been tested for gmail accounts&lt;/h5&gt; &#xA;&lt;h2&gt;Technologies:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://expo.dev/&#34;&gt;Expo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactnavigation.org/&#34;&gt;React Navigation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apollographql.com/&#34;&gt;Apollo GraphQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/&#34;&gt;ReactJS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;NodeJS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amplitude.com/&#34;&gt;Amplitude&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactnative.dev/&#34;&gt;React Native&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactrouter.com/&#34;&gt;React Router&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphql.org/&#34;&gt;GraphQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://expressjs.com/&#34;&gt;ExpressJS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactstrap.github.io/&#34;&gt;React Strap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.enatega.vendor&#34;&gt;Customer App Android&lt;/a&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.enatega.vendor&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/551004/29770692-a20975c6-8bc6-11e7-8ab0-1cde275496e0.png&#34; alt=&#34;Customer App Android&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://apps.apple.com/pk/app/enatega/id1493209281&#34;&gt;Customer App iOS&lt;/a&gt; &lt;a href=&#34;https://apps.apple.com/pk/app/enatega/id1493209281&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/551004/29770691-a2082ff4-8bc6-11e7-89a6-964cd405ea8e.png&#34; alt=&#34;Customer App iOS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.enatega.rider&#34;&gt;Rider App Android&lt;/a&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.enatega.rider&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/551004/29770692-a20975c6-8bc6-11e7-8ab0-1cde275496e0.png&#34; alt=&#34;Rider App Android&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://apps.apple.com/pk/app/enatega-rider-app/id1493291047&#34;&gt;Rider App iOS&lt;/a&gt; &lt;a href=&#34;https://apps.apple.com/pk/app/enatega-rider-app/id1493291047&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/551004/29770691-a2082ff4-8bc6-11e7-89a6-964cd405ea8e.png&#34; alt=&#34;Rider App iOS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://inspiring-kirch-8454fc.netlify.app/&#34;&gt;Admin Dashboard&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation and Product Demo Video:&lt;/h2&gt; &#xA;&lt;p&gt;Find the link for the complete documentation of the Enatega Single Vendor Solution &lt;a href=&#34;https://enatega.com/singlevendor-documentation/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to see demo video of the product please check out the link over &lt;a href=&#34;https://www.youtube.com/watch?v=AWbdt9GX1t4&amp;amp;t=3s&amp;amp;ab_channel=NinjasCode&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing:&lt;/h2&gt; &#xA;&lt;p&gt;Enatega Restuarant Solution is an open source project. We welcome contributions of all kinds including documentation, bug fixes, feature requests, and code. Please read our &lt;a href=&#34;https://raw.githubusercontent.com/Ninjas-Code-official/Enatega-Restaurant-Solution/main/contributingGuides/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; for more information on how you can contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Get the Latest News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/enatega&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/EnategaA&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.instagram.com/enatega.nb/&#34;&gt;Instagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/company/14583783/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer:&lt;/h2&gt; &#xA;&lt;p&gt;The frontend source code for our solution is completely open source. However, the API and backend is proprietary and can be accessed via a paid license. For further information, contact us on the channels provided below.&lt;/p&gt; &#xA;&lt;h2&gt;Contact Us:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:sales@ninjascode.com&#34;&gt;sales@ninjascode.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>HeiSir2014/M3U8-Downloader</title>
    <updated>2023-07-10T01:38:20Z</updated>
    <id>tag:github.com,2023-07-10:/HeiSir2014/M3U8-Downloader</id>
    <link href="https://github.com/HeiSir2014/M3U8-Downloader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;M3U8-Downloader 支持多线程、断点续传、加密视频下载缓存。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/heisir2014/M3U8-Downloader/M3U8-Downloader-Build?style=flat-square&#34; alt=&#34;M3U8-Downloader-Build&#34;&gt; &lt;a href=&#34;https://github.com/HeiSir2014/M3U8-Downloader/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/heisir2014/m3u8-downloader?style=flat-square&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HeiSir2014/M3U8-Downloader/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/heisir2014/m3u8-downloader/total?style=flat-square&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;M3U8-Downloader &lt;a href=&#34;https://raw.githubusercontent.com/HeiSir2014/M3U8-Downloader/master/#%E4%B8%8B%E8%BD%BD%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%8C%85&#34;&gt;直接下载&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;M3U8-Downloader是基于Electron框架开发的一款可以下载、播放HLS视频流的APP，功能特点如下：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;功能&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;支持&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;HLS协议点播源&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;自定义Http协议头下载&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;自定义KEY和IV解密&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;本地M3U8文件下载&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;M3U8 直播源&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;标准 AES-128-CBC加密&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;标准 AES-196-CBC加密&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;标准 AES-256-CBC加密&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;非标准 AES-*-CBC加密&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;ㄨ(可定制)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;网页嗅探视频源&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;img width=&#34;739&#34; src=&#34;https://github.com/HeiSir2014/M3U8-Downloader/raw/master/resource/HLSDownloadShow-3-1.gif?raw=true&#34; alt=&#34;M3U8-Downloader&#34;&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;功能规划&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;flowchart LR&#xA;    A1(&#34;M3U8-Downloader&#34;) ---&amp;gt; B1(&#34;MP4、M3U8、MPD下载&#34;)&#xA;    B1 ---&amp;gt; C1(自定义 文件名)&#xA;    B1 ---&amp;gt; C2(自定义 Http Header)&#xA;    C2 ---&amp;gt; D1(&#34;Referer、Cookies、User-Agent&#34;)&#xA;    B1 ---&amp;gt; C3(自定义 AES Key)&#xA;    B1 ---&amp;gt; C4(多码率选择)&#xA;    B1 ---&amp;gt; C5(HTTP代理)&#xA;    &#xA;    A1 ---&amp;gt; B2(&#34;MP4、M3U8、MPD批量下载&#34;)&#xA;    A1 ---&amp;gt; B3(&#34;TS文件合并&#34;)&#xA;    A1 ---&amp;gt; B4(&#34;浏览器资源嗅探&#34;)&#xA;    B4 ---&amp;gt; C6(&#34;FLV、MP4、MP3、WAV&#34;)&#xA;    B4 ---&amp;gt; C7(&#34;HLS(M3U8、TS)&#34;)&#xA;    B4 ---&amp;gt; C8(&#34;DASH(MPD)&#34;)&#xA;    B4 ---&amp;gt; C12(模拟多终端)&#xA;    A1 ---&amp;gt; B5(&#34;Settings&#34;)&#xA;    B5 ---&amp;gt; C9(存储路径)&#xA;    B5 ---&amp;gt; C10(设置代理)&#xA;    B5 ---&amp;gt; C11(日志查看)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2021/03/28/Ca5yhFQeTmG69DK.png&#34; alt=&#34;mermaid-diagram-20210328004859&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;获取M3U8视频地址&lt;/h1&gt; &#xA;&lt;p&gt;在chrome浏览器打开视频网页，按下F12,页签点击到Network页面，在Filter框里输入&#34;m3u8&#34;,然后按F5刷新页面，如果网页里的视频使用的是HLS源，就可以在这里捕获到视频流地址，然后选中右键 Copy -&amp;gt; Copy Link Address. 提供m3u8源地址，下载并无损转码Mp4文件&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://player.bilibili.com/player.html?aid=498666070&amp;amp;bvid=BV1QK411n7VJ&amp;amp;cid=206827525&amp;amp;page=1&#34;&gt;自定义头添加-视频教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;下载可执行包&lt;/h1&gt; &#xA;&lt;h2&gt;前往百度网盘下载&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;链接：https://pan.baidu.com/s/14zaMkxgfTC0HSge-Ze6EpQ &#xA;提取码：m3u8 &#xA;复制这段内容后打开百度网盘手机App，操作更方便哦--来自百度网盘超级会员V1的分享&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Github 下载&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/HeiSir2014/M3U8-Downloader/releases&#34;&gt;Releases下载&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h1&gt;运行源码&lt;/h1&gt; &#xA;&lt;h3&gt;NodeJS开发环境搭建&lt;/h3&gt; &#xA;&lt;p&gt;安装NodeJs最新版，&lt;a href=&#34;http://nodejs.cn/download/&#34;&gt;NodeJs Download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Clone 代码&lt;/h3&gt; &#xA;&lt;p&gt;在任意文件夹下新建一个文件夹存放代码，并执行以下命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd newdir&#xA;&#xA;git clone https://github.com/HeiSir2014/M3U8-Downloader.git .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Yarn 环境安装&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install yarn -g&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Package 依赖安装&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ffmpeg-static 安装超时，可以尝试使用镜像:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FFMPEG_BINARIES_URL=https://cdn.npmmirror.com/binaries/ffmpeg-static yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;运行M3U8-Downloader&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;打包发布&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;//windows 平台打包&#xA;yarn pack-win&#xA;&#xA;//mac 平台打包&#xA;yarn pack-mac&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Enjoy it&lt;/h3&gt; &#xA;&lt;h3&gt;赞赏&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tools.heisir.cn/HLSDownload/2019/07/08/02/&#34;&gt;赞赏链接&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>threadsjs/threads.js</title>
    <updated>2023-07-10T01:38:20Z</updated>
    <id>tag:github.com,2023-07-10:/threadsjs/threads.js</id>
    <link href="https://github.com/threadsjs/threads.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Node.js library for the Threads API&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;threads.js&lt;/h1&gt; &#xA; &lt;p&gt;thread.js is a Node.js library that allows you to interact with the Threads API&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@threadsjs/threads.js&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@threadsjs/threads.js.svg?color=green&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@threadsjs/threads.js&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@threadsjs/threads.js.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://isitmaintained.com/project/threadsjs/threads.js&#34; title=&#34;Average time to resolve an issue&#34;&gt;&lt;img src=&#34;http://isitmaintained.com/badge/resolution/threadsjs/threads.js.svg?sanitize=true&#34; alt=&#34;Average time to resolve an issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://isitmaintained.com/project/threadsjs/threads.js&#34; title=&#34;Percentage of issues still open&#34;&gt;&lt;img src=&#34;http://isitmaintained.com/badge/open/threadsjs/threads.js.svg?sanitize=true&#34; alt=&#34;Percentage of issues still open&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/threadsjs/threads.js/main/#features&#34;&gt;Features&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/threadsjs/threads.js/main/#installation-and-updating&#34;&gt;Installation and updating&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/threadsjs/threads.js/main/#usage&#34;&gt;Usage&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/threadsjs/threads.js/main/#methods&#34;&gt;Methods&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Object-oriented&lt;/li&gt; &#xA; &lt;li&gt;Performant&lt;/li&gt; &#xA; &lt;li&gt;Authenticated&lt;/li&gt; &#xA; &lt;li&gt;100% coverage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation and updating&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install @threadsjs/threads.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { getToken, Client } = require(&#39;@threadsjs/threads.js&#39;);&#xA;&#xA;(async () =&amp;gt; {&#xA;&#x9;const token = await getToken(&#39;username&#39;, &#39;password&#39;);&#xA;&#x9;const client = new Client({ token });&#xA;&#xA;&#x9;await client.users.fetch(&#39;25025320&#39;).then(user =&amp;gt; {&#xA;&#x9;&#x9;console.log(user);&#xA;&#x9;});&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Methods&lt;/h2&gt; &#xA;&lt;h3&gt;client.users.fetch&lt;/h3&gt; &#xA;&lt;p&gt;In the parameters, pass the userId of the user whose information you want to get.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.users.fetch(1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;client.users.follow&lt;/h3&gt; &#xA;&lt;p&gt;Pass the userId of the user you want to subscribe to in the parameters&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.users.follow(1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;client.users.search&lt;/h3&gt; &#xA;&lt;p&gt;Pass the query as the first parameter, and the number of objects in the response as the second parameter (by default - 30)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.users.search(&#34;zuck&#34;, 10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;client.users.followers&lt;/h3&gt; &#xA;&lt;p&gt;In the parameters, pass the userId of the user whose followers you want to get.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.users.followers(1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;client.users.following&lt;/h3&gt; &#xA;&lt;p&gt;In the parameters, pass the userId of the user whose followings you want to get.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.users.following(1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;client.feeds.fetchThreads&lt;/h3&gt; &#xA;&lt;p&gt;In the parameters, pass the userId of the user whose threads you want to get.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.feeds.fetchThreads(1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;client.feeds.fetchReplies&lt;/h3&gt; &#xA;&lt;p&gt;In the parameters, pass the userId of the user whose replies you want to get.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.feeds.fetchReplies(1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;client.feeds.recommended&lt;/h3&gt; &#xA;&lt;p&gt;Getting a list of recommendations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.feeds.recommended()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;client.posts.fetch&lt;/h3&gt; &#xA;&lt;p&gt;In the parameters pass the id of the post you want to get information about&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.posts.fetch(&#34;aAaAAAaaa&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;client.posts.likers&lt;/h3&gt; &#xA;&lt;p&gt;In the parameters pass the id of the post whose likes you want to get&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.posts.likers(&#34;aAaAAAaaa&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;client.posts.create&lt;/h3&gt; &#xA;&lt;p&gt;The method is used to create a thread. Pass the text of the thread as the first parameter, and the user id as the second&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.posts.create(&#34;Hello world!&#34;, 1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;client.posts.reply&lt;/h3&gt; &#xA;&lt;p&gt;The method is used to create reply to a thread. Pass the text of the reply as the first parameter, the user id as the second, and post id as the third&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.posts.reply(&#34;Hello world!&#34;, 1, &#34;aAaAAAaaa&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;client.posts.delete&lt;/h3&gt; &#xA;&lt;p&gt;The method is used to delete a thread. Pass the post id as the first parameter, and the user id as the second&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.posts.delete(&#34;aAaAAAaaa&#34;, 1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;client.posts.like&lt;/h3&gt; &#xA;&lt;p&gt;The method is used to like a thread. Pass the post id as the first parameter, and the user id as the second&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await client.posts.like(&#34;aAaAAAaaa&#34;, 1)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>