<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-08T01:36:11Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>c121914yu/FastGPT</title>
    <updated>2023-04-08T01:36:11Z</updated>
    <id>tag:github.com,2023-04-08:/c121914yu/FastGPT</id>
    <link href="https://github.com/c121914yu/FastGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个快速使用chatGPT的平台。支持自定义 prompt 管理。支持构建专属知识库&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fast GPT&lt;/h1&gt; &#xA;&lt;p&gt;Fast GPT 允许你使用自己的 openai API KEY 来快速的调用 openai 接口，包括 GPT3 及其微调方法，以及最新的 gpt3.5 接口。&lt;/p&gt; &#xA;&lt;h2&gt;初始化&lt;/h2&gt; &#xA;&lt;p&gt;复制 .env.template 成 .env.local ，填写核心参数&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;AXIOS_PROXY_HOST=axios代理地址，目前 openai 接口都需要走代理，本机的话就填 127.0.0.1&#xA;AXIOS_PROXY_PORT=代理端口&#xA;MONGODB_URI=mongo数据库地址&#xA;MY_MAIL=发送验证码邮箱&#xA;MAILE_CODE=邮箱秘钥（代理里设置的是QQ邮箱，不知道怎么找这个 code 的，可以百度搜&#34;nodemailer发送邮件&#34;）&#xA;TOKEN_KEY=随便填一个，用于生成和校验 token&#xA;OPENAIKEY=openai的key&#xA;REDIS_URL=redis的地址&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;部署&lt;/h2&gt; &#xA;&lt;h3&gt;docker 模式&lt;/h3&gt; &#xA;&lt;p&gt;请准备好 docker， mongo，代理, 和 nginx。 镜像走本机的代理，所以用 network=host，port 改成代理的端口，clash 一般都是 7890。&lt;/p&gt; &#xA;&lt;h4&gt;docker 打包&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t imageName:tag .&#xA;docker push imageName:tag&#xA;# 或者直接拉镜像，见下方&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;服务器拉取镜像和运行&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;# docker-compose&#xA;version: &#34;3.3&#34;&#xA;services:&#xA;  fast-gpt:&#xA;    image: c121914yu/fast-gpt:latest&#xA;    environment:&#xA;      AXIOS_PROXY_HOST: 127.0.0.1&#xA;      AXIOS_PROXY_PORT: 7890&#xA;      MY_MAIL: &#xA;      MAILE_CODE: &#xA;      TOKEN_KEY: &#xA;      MONGODB_URI: &#xA;      OPENAIKEY: &#xA;      REDIS_URL: &#xA;    network_mode: host&#xA;    restart: always&#xA;    container_name: fast-gpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash&#xA;# 拉取最新镜像&#xA;docker-compose pull&#xA;docker-compose up -d&#xA;&#xA;echo &#34;Docker Compose 重新拉取镜像完成！&#34;&#xA;&#xA;# 删除本地旧镜像&#xA;images=$(docker images --format &#34;{{.ID}} {{.Repository}}&#34; | grep fast-gpt)&#xA;&#xA;# 将镜像 ID 和名称放入数组中&#xA;IFS=$&#39;\n&#39; read -rd &#39;&#39; -a image_array &amp;lt;&amp;lt;&amp;lt;&#34;$images&#34;&#xA;&#xA;# 遍历数组并删除所有旧的镜像&#xA;for ((i=1; i&amp;lt;${#image_array[@]}; i++))&#xA;do&#xA;    image=${image_array[$i]}&#xA;    image_id=${image%% *}&#xA;    docker rmi $image_id&#xA;done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;软件教程：docker 安装&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 安装docker&#xA;curl -sSL https://get.daocloud.io/docker | sh&#xA;sudo systemctl start docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;软件教程：mongo 安装&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull mongo:6.0.4&#xA;docker stop mongo&#xA;docker rm mongo&#xA;docker run -d --name mongo \&#xA;    -e MONGO_INITDB_ROOT_USERNAME= \&#xA;    -e MONGO_INITDB_ROOT_PASSWORD= \&#xA;    -v /root/service/mongo:/data/db \&#xA;    mongo:6.0.4&#xA;&#xA;# 检查 mongo 运行情况, 有成功的 logs 代表访问成功&#xA;docker logs mongo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;软件教程: clash 代理&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 下载包&#xA;curl https://glados.rocks/tools/clash-linux.zip -o clash.zip &#xA;# 解压&#xA;unzip clash.zip&#xA;# 下载终端配置⽂件（改成自己配置文件路径）&#xA;curl https://update.glados-config.com/clash/98980/8f30944/70870/glados-terminal.yaml &amp;gt; config.yaml&#xA;# 赋予运行权限&#xA;chmod +x ./clash-linux-amd64-v1.10.0 &#xA;# 记得配置端口变量：&#xA;export ALL_PROXY=socks5://127.0.0.1:7891&#xA;export http_proxy=http://127.0.0.1:7890&#xA;export https_proxy=http://127.0.0.1:7890&#xA;export HTTP_PROXY=http://127.0.0.1:7890&#xA;export HTTPS_PROXY=http://127.0.0.1:7890&#xA;&#xA;# 运行脚本: 删除clash - 到 clash 目录 - 删除缓存 - 执行运行&#xA;# 会生成一个 nohup.out 文件，可以看到 clash 的 logs&#xA;OLD_PROCESS=$(pgrep clash)&#xA;if [ ! -z &#34;$OLD_PROCESS&#34; ]; then&#xA;  echo &#34;Killing old process: $OLD_PROCESS&#34;&#xA;  kill $OLD_PROCESS&#xA;fi&#xA;sleep 2&#xA;cd  **/clash&#xA;rm -f ./nohup.out || true&#xA;rm -f ./cache.db || true&#xA;nohup ./clash-linux-amd64-v1.10.0  -d ./ &amp;amp;&#xA;echo &#34;Restart clash&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;软件教程：Nginx&lt;/h4&gt; &#xA;&lt;p&gt;...没写，这个百度吧。&lt;/p&gt; &#xA;&lt;h4&gt;redis&lt;/h4&gt; &#xA;&lt;p&gt;安装&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash&#xA;docker pull redis/redis-stack:6.2.6-v6&#xA;docker stop fast-gpt-redis-stack&#xA;docker rm fast-gpt-redis-stack&#xA;&#xA;docker run -d --name fast-gpt-redis-stack \&#xA;    -v /redis/data:/data \&#xA;    -v /etc/localtime:/etc/localtime:ro \&#xA;    -v /redis.conf:/redis-stack.conf \&#xA;    -e REDIS_ARGS=&#34;--requirepass 1111111&#34;\&#xA;    -p 8102:6379 \&#xA;    -p 8103:8001 \&#xA;    --restart unless-stopped \&#xA;    redis/redis-stack:6.2.6-v6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# /redis.conf&#xA;# 开启aop持久化&#xA;appendonly yes&#xA;#default: 持久化文件&#xA;appendfilename &#34;appendonly.aof&#34;&#xA;#default: 每秒同步一次&#xA;appendfsync everysec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 添加索引&#xA;FT.CREATE idx:model:data:hash ON HASH PREFIX 1 model:data: SCHEMA modelId TAG userId TAG status TAG q TEXT text TEXT vector VECTOR FLAT 6 DIM 1536 DISTANCE_METRIC COSINE TYPE FLOAT32&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Cohee1207/SillyTavern</title>
    <updated>2023-04-08T01:36:11Z</updated>
    <id>tag:github.com,2023-04-08:/Cohee1207/SillyTavern</id>
    <link href="https://github.com/Cohee1207/SillyTavern" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TavernAI for nerds&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SillyTavern&lt;/h1&gt; &#xA;&lt;h2&gt;Based on fork of TavernAI 1.2.8&lt;/h2&gt; &#xA;&lt;h3&gt;Brought to you by Cohee and RossAscends&lt;/h3&gt; &#xA;&lt;h3&gt;What is SillyTavern or TavernAI?&lt;/h3&gt; &#xA;&lt;p&gt;Tavern is a user interface you can install on your computer (and Android phones) that allows you to interact text generation AIs and chat/roleplay with characters you or the community create.&lt;/p&gt; &#xA;&lt;p&gt;SillyTavern is a fork of TavernAI 1.2.8 which is under more active development, and has added many major features. At this point they can be thought of as completely independent programs.&lt;/p&gt; &#xA;&lt;h3&gt;What do I need other than Tavern?&lt;/h3&gt; &#xA;&lt;p&gt;On its own Tavern is useless, as it&#39;s just a user interface. You have to have access to an AI system backend that can act as the roleplay character. There are various supported backends: OpenAPI API (GPT), KoboldAI (either running locally or on Google Colab), and more.&lt;/p&gt; &#xA;&lt;h3&gt;I&#39;m new to all this. I just want to have a good time easily. What is the best AI backend to use?&lt;/h3&gt; &#xA;&lt;p&gt;The most advanced/intelligent AI backend for roleplaying is to pay for OpenAI&#39;s GPT API. It&#39;s also among the easiest to use. Objectively, GPT is streets ahead of all other backends. However, OpenAI log all your activity, and your account MAY be banned in the future if you violate their policies (e.g. on adult content). However, there are no reports of anyone being banned yet. People who value privacy more tend to run a self-hosted AI backend like KoboldAI. Self-hosted backends do not log, but they are much less capable at roleplaying.&lt;/p&gt; &#xA;&lt;h3&gt;Do I need a powerful PC to run Tavern?&lt;/h3&gt; &#xA;&lt;p&gt;Since Tavern is only a user interface, it has tiny hardware requirements, it will run on anything. It&#39;s the AI system backend that needs to be powerful.&lt;/p&gt; &#xA;&lt;h3&gt;I want to try self-hosted easily. Got a Google Colab?&lt;/h3&gt; &#xA;&lt;p&gt;Try on Colab (runs KoboldAI backend and TavernAI Extras server alongside): &lt;a target=&#34;_blank&#34; href=&#34;https://colab.research.google.com/github/Cohee1207/SillyTavern/blob/main/colab/GPU.ipynb&#34;&gt; &lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/Cohee1207/SillyTavern/blob/main/colab/GPU.ipynb&#34;&gt;https://colab.research.google.com/github/Cohee1207/SillyTavern/blob/main/colab/GPU.ipynb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If that didn&#39;t work, try the legacy link:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/Cohee1207/TavernAI-extras/blob/main/colab/GPU.ipynb&#34;&gt;https://colab.research.google.com/github/Cohee1207/TavernAI-extras/blob/main/colab/GPU.ipynb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mobile support&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;This fork can be ran natively on Android phones using Termux. Please refer to this guide by ArroganceComplex#2659:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rentry.org/TAI_Termux&#34;&gt;https://rentry.org/TAI_Termux&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;This version includes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A heavily modified TavernAI 1.2.8 (more than 50% of code rewritten or optimized)&lt;/li&gt; &#xA; &lt;li&gt;Swipes&lt;/li&gt; &#xA; &lt;li&gt;Group chats&lt;/li&gt; &#xA; &lt;li&gt;Chat bookmarks (duplicates the current in its curent state)&lt;/li&gt; &#xA; &lt;li&gt;Advanced KoboldAI generation settings&lt;/li&gt; &#xA; &lt;li&gt;World Info support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oobabooga/text-generation-webui&#34;&gt;Oobabooga&#39;s TextGen WebUI&lt;/a&gt; API connection&lt;/li&gt; &#xA; &lt;li&gt;Soft prompts selector for KoboldAI&lt;/li&gt; &#xA; &lt;li&gt;Prompt generation formatting tweaking&lt;/li&gt; &#xA; &lt;li&gt;Extensibility support via &lt;a href=&#34;https://github.com/Cohee1207/TavernAI-extras&#34;&gt;SillyLossy&#39;s TAI-extras&lt;/a&gt; plugins &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Character emotional expressions&lt;/li&gt; &#xA;   &lt;li&gt;Auto-Summary of the chat history&lt;/li&gt; &#xA;   &lt;li&gt;Sending images to chat, and the AI interpreting the content.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;UI Extensions 🚀&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Required &lt;a href=&#34;https://github.com/Cohee1207/TavernAI-extras#modules&#34; target=&#34;_blank&#34;&gt;Extra Modules&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Screenshot&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Image Captioning&lt;/td&gt; &#xA;   &lt;td&gt;Send a cute picture to your bot!&lt;br&gt;&lt;br&gt;Picture select option will appear beside &#34;Message send&#34; button.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;caption&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/18619528/224161576-ddfc51cd-995e-44ec-bf2d-d2477d603f0c.png&#34; style=&#34;max-width:200px&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Character Expressions&lt;/td&gt; &#xA;   &lt;td&gt;See your character reacting to your messages!&lt;br&gt;&lt;br&gt;&lt;strong&gt;You need to provide your own character images!&lt;/strong&gt;&lt;br&gt;&lt;br&gt;1. Create a folder in TavernAI called &lt;code&gt;public/characters/&amp;lt;name&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is a name of your character.&lt;br&gt;2. For base emotion classification model, put six PNG files there with the following names: &lt;code&gt;joy.png&lt;/code&gt;, &lt;code&gt;anger.png&lt;/code&gt;, &lt;code&gt;fear.png&lt;/code&gt;, &lt;code&gt;love.png&lt;/code&gt;, &lt;code&gt;sadness.png&lt;/code&gt;, &lt;code&gt;surprise.png&lt;/code&gt;. Other models may provide another options.&lt;br&gt;3. Images only display in desktop mode.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;classify&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img style=&#34;max-width:200px&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/18619528/223765089-34968217-6862-47e0-85da-7357370f8de6.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Memory&lt;/td&gt; &#xA;   &lt;td&gt;Chatbot long-term memory simulation using automatic message context summarization.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;summarize&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img style=&#34;max-width:200px&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/18619528/223766279-88a46481-1fa6-40c5-9724-6cdd6f587233.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;D&amp;amp;D Dice&lt;/td&gt; &#xA;   &lt;td&gt;A set of 7 classic D&amp;amp;D dice for all your dice rolling needs.&lt;br&gt;&lt;br&gt;&lt;em&gt;I used to roll the dice.&lt;br&gt;Feel the fear in my enemies&#39; eyes&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img style=&#34;max-width:200px&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/18619528/226199925-a066c6fc-745e-4a2b-9203-1cbffa481b14.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Author&#39;s Note&lt;/td&gt; &#xA;   &lt;td&gt;Built-in extension that allows you to append notes that will be added to the context and steer the story and character in a specific direction. Because it&#39;s sent after the character description, it has a lot of weight. Thanks Ali឵#2222 for pitching the idea!&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/128647114/230311637-d809cd9b-af66-4dd1-a310-7a27e847c011.png&#34; alt=&#34;image&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;UI/CSS/Quality of Life tweaks by RossAscends&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Mobile-friendly page design&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;HotKeys&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ctrl+Up = Connect to API&lt;/li&gt; &#xA;   &lt;li&gt;Ctrl+Left = view locally stored variables (in the browser console window)&lt;/li&gt; &#xA;   &lt;li&gt;Ctrl+Enter = Regenerate last AI response.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;User Name Changes and Character Deletion no longer force the page to refresh.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Toggle option to automatically connect to API on page load.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Toggle option to automatically load the most recently viewed character on page load.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Better Token Counter - works on unsaved characters, and shows both permanent and temporary tokens.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Better Past Chats View&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;New Chat filenames are saved in a readable format of &#34;(character) - (when it was created)&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Chat preview increased from 40 character to 300.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now, by default the settings panel will close when you click away from it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clicking the Lock on the nav panel will hold the panel open, and this setting be remembered across sessions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Nav panel status of open or closed will also be saved across sessions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;mobile UI optimized for iOS, and supports saving a shortcut to iOS homescreen and opening in fullscreen mode.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;NOTE: This branch is intended for local install purposes, and has not been tested on a colab or other cloud notebook service.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;install &lt;a href=&#34;https://nodejs.org/en&#34;&gt;NodeJS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;download the zip from this github repo&lt;/li&gt; &#xA; &lt;li&gt;unzip it into a folder of your choice&lt;/li&gt; &#xA; &lt;li&gt;run start.bat via double clicking or in a command line.&lt;/li&gt; &#xA; &lt;li&gt;Once the server has prepared everything for you, it will open a tab in your browser.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Remote connections&lt;/h2&gt; &#xA;&lt;p&gt;Most often this is for people who want use TAI on their mobile phones while at home. If you want to enable other devices to connect to your TAI server, open &#39;config.conf&#39; in a text editor, and change:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;const whitelistMode = true;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;const whitelistMode = false;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Save the file. Restart your TAI server.&lt;/p&gt; &#xA;&lt;p&gt;You will now be able to connect from other devices.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer: Anyone else who knows your IP address and TAI port number will be able to as well&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;To connect over wifi you&#39;ll need your PC&#39;s local wifi IP address&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(For Windows: windows button &amp;gt; type &#39;cmd.exe&#39; in the search bar&amp;gt; type &#39;ipconfig&#39; in the console, hit Enter &amp;gt; &#34;IPv4&#34; listing) if you want other people on the internet to connect, and check &lt;a href=&#34;https://whatismyipaddress.com/&#34;&gt;here&lt;/a&gt; for &#39;IPv4&#39;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance issues?&lt;/h2&gt; &#xA;&lt;p&gt;Try enabling the Fast UI mode on User settings panel.&lt;/p&gt; &#xA;&lt;h2&gt;Questions or suggestions?&lt;/h2&gt; &#xA;&lt;p&gt;Contact us on Discord: Cohee#1207 or RossAscends#1779&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;img width=&#34;400&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/18619528/228649245-8061c60f-63dc-488e-9325-f151b7a3ec2d.png&#34;&gt; &#xA;&lt;img width=&#34;400&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/18619528/228649856-fbdeef05-d727-4d5a-be80-266cbbc6b811.png&#34;&gt; &#xA;&lt;h2&gt;License and credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TAI Base by Humi: Unknown license&lt;/li&gt; &#xA; &lt;li&gt;Cohee&#39;s TAI mod: Public domain&lt;/li&gt; &#xA; &lt;li&gt;RossAscends&#39; additions: Public domain&lt;/li&gt; &#xA; &lt;li&gt;Portions of CncAnon&#39;s TavernAITurbo mod: Unknown license&lt;/li&gt; &#xA; &lt;li&gt;Thanks Pygmalion University for being awesome testers and suggesting cool features!&lt;/li&gt; &#xA; &lt;li&gt;Thanks oobabooga for compiling presets for TextGen&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>LayerZero-Labs/solidity-examples</title>
    <updated>2023-04-08T01:36:11Z</updated>
    <id>tag:github.com,2023-04-08:/LayerZero-Labs/solidity-examples</id>
    <link href="https://github.com/LayerZero-Labs/solidity-examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;example contracts&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;LayerZero&#34; src=&#34;https://raw.githubusercontent.com/LayerZero-Labs/solidity-examples/main/resources/LayerZeroLogo.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;LayerZero Omnichain Contract Examples&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Formal audit(s) (May 21, 2022) can be found in /audit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install &amp;amp; Run tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn install&#xA;npx hardhat test &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The code in the &lt;code&gt;/contracts&lt;/code&gt; folder demonstrates LayerZero behaviours.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NonblockingLzApp&lt;/code&gt; is a great contract to extend. Take a look at how &lt;code&gt;OmniCounter&lt;/code&gt; overrides &lt;code&gt;_nonblockingLzReceive&lt;/code&gt; and &lt;code&gt;_LzReceive&lt;/code&gt; to easily handle messaging. There are also example for &lt;code&gt;OFT&lt;/code&gt; and &lt;code&gt;ONFT&lt;/code&gt; which illustrate erc20 and erc721 cross chain functionality.&lt;/li&gt; &#xA; &lt;li&gt;Always audit your own code and test extensively on &lt;code&gt;testnet&lt;/code&gt; before going to mainnet 🙏&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The examples below use two chains, however you could substitute any LayerZero supported chain!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;OmnichainFungibleToken (OFT)&lt;/h1&gt; &#xA;&lt;h2&gt;About OFTV2&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;NOTE: the OFTV2 uses uint64 to encode value transfer for compatability of aptos and solana. &#xA;&#xA;The deployer is expected to set a lower decimal points like 6 or 8. &#xA;&#xA;If the decimal point is 18, then uint64 can only represent approximately 18 tokens (uint64.max ~= 18 * 10^18).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploy Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add a .env file (to the root project directory) with your MNEMONIC=&#34;&#34; and fund your wallet in order to deploy!&lt;/li&gt; &#xA; &lt;li&gt;Follow any of the tutorials below&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;OFTV2.sol - an omnichain ERC20&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;WARNING: &lt;strong&gt;You must perform the setTrustedRemote() (step 2).&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Deploy two contracts:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat --network goerli deploy --tags ExampleOFTV2&#xA;npx hardhat --network fuji deploy --tags ExampleOFTV2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Set the &#34;trusted remotes&#34; (ie: your contracts) so each of them can receive messages from one another, and &lt;code&gt;only&lt;/code&gt; one another.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat --network goerli setTrustedRemote --target-network fuji --contract ExampleOFTV2&#xA;npx hardhat --network fuji setTrustedRemote --target-network goerli --contract ExampleOFTV2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Send tokens from goerli to fuji&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat --network goerli oftv2Send --target-network fuji --qty 42 --contract ExampleOFTV2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pro-tip: Check the ERC20 transactions tab of the destination chain block explorer and await your tokens!&lt;/p&gt; &#xA;&lt;h1&gt;OmnichainNonFungibleToken721 (ONFT721)&lt;/h1&gt; &#xA;&lt;p&gt;This ONFT contract allows minting of &lt;code&gt;nftId&lt;/code&gt;s on separate chains. To ensure two chains can not mint the same &lt;code&gt;nfId&lt;/code&gt; each contract on each chain is only allowed to mint&lt;code&gt;nftIds&lt;/code&gt; in certain ranges. Check &lt;code&gt;constants/onftArgs.json&lt;/code&gt; for the specific test configuration used in this demo.&lt;/p&gt; &#xA;&lt;h2&gt;UniversalONFT.sol&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;WARNING: &lt;strong&gt;You must perform the setTrustedRemote() (step 2).&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Deploy two contracts:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt; npx hardhat --network bsc-testnet deploy --tags ExampleUniversalONFT721&#xA; npx hardhat --network fuji deploy --tags ExampleUniversalONFT721&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Set the &#34;trusted remotes&#34;, so each contract can send &amp;amp; receive messages from one another, and &lt;code&gt;only&lt;/code&gt; one another.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat --network bsc-testnet setTrustedRemote --target-network fuji --contract ExampleUniversalONFT721&#xA;npx hardhat --network fuji setTrustedRemote --target-network bsc-testnet --contract ExampleUniversalONFT721&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Set the min gas required on the destination&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat --network bsc-testnet setMinDstGas --target-network fuji --contract ExampleUniversalONFT721 --packet-type 1 --min-gas 100000&#xA;npx hardhat --network fuji setMinDstGas --target-network bsc-testnet --contract ExampleUniversalONFT721 --packet-type 1 --min-gas 100000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Mint an NFT on each chain!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat --network bsc-testnet onftMint --contract ExampleUniversalONFT721&#xA;npx hardhat --network fuji onftMint --contract ExampleUniversalONFT721&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;[Optional] Show the token owner(s)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat --network bsc-testnet ownerOf --token-id 1 --contract ExampleUniversalONFT721&#xA;npx hardhat --network fuji ownerOf --token-id 11 --contract ExampleUniversalONFT721&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Send ONFT across chains&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat --network bsc-testnet onftSend --target-network fuji --token-id 1 --contract ExampleUniversalONFT721&#xA;npx hardhat --network fuji onftSend --target-network bsc-testnet --token-id 11 --contract ExampleUniversalONFT721 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Verify your token no longer exists in your wallet on the source chain &amp;amp; wait for it to reach the destination side.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat --network bsc-testnet ownerOf --token-id 1 --contract ExampleUniversalONFT721&#xA;npx hardhat --network fuji ownerOf --token-id 1 --contract ExampleUniversalONFT721&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;OmniCounter.sol&lt;/h1&gt; &#xA;&lt;p&gt;OmniCounter is a simple contract with a counter. You can only &lt;em&gt;remotely&lt;/em&gt; increment the counter!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Deploy both OmniCounters:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx hardhat --network bsc-testnet deploy --tags OmniCounter&#xA;npx hardhat --network fuji deploy --tags OmniCounter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Set the remote addresses, so each contract can receive messages&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat --network bsc-testnet setTrustedRemote --target-network fuji --contract OmniCounter&#xA;npx hardhat --network fuji setTrustedRemote --target-network bsc-testnet --contract OmniCounter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Send a cross chain message from &lt;code&gt;bsc-testnet&lt;/code&gt; to &lt;code&gt;fuji&lt;/code&gt; !&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat --network bsc-testnet incrementCounter --target-network fuji&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally use this command in a separate terminal to watch the counter increment in real-time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx hardhat --network fuji ocPoll    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Check your setTrustedRemote&#39;s are wired up correctly&lt;/h1&gt; &#xA;&lt;p&gt;Just use our checkWireUpAll task to check if your contracts are wired up correctly. You can use it on the example contracts deployed above.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;ExampleBasedOFT and ExampleOFT&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat checkWireUpAll --e testnet --contract ExampleOFT --proxy-contract ExampleBasedOFT --proxy-chain goerli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;UniversalONFT&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat checkWireUpAll --e testnet --contract ExampleUniversalONFT721&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;OmniCounter&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;npx hardhat checkWireUpAll --e testnet --contract OmniCounter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;See some examples in &lt;code&gt;/contracts&lt;/code&gt; 🙌&lt;/h3&gt; &#xA;&lt;p&gt;Many of the example contracts make use of LayerZeroEndpointMock.sol which is a nice way to test LayerZero locally!&lt;/p&gt; &#xA;&lt;h3&gt;For further reading, and a list of endpoint ids and deployed LayerZero contract addresses please take a look at the Gitbook here: &lt;a href=&#34;https://layerzero.gitbook.io/&#34;&gt;https://layerzero.gitbook.io/&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;See testnet and mainnet chainIds and addresses, and the format for connecting contracts on different chains:&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LayerZero-Labs/set-trusted-remotes&#34;&gt;https://github.com/LayerZero-Labs/set-trusted-remotes&lt;/a&gt; &lt;a href=&#34;https://layerzero.gitbook.io/docs/technical-reference/testnet/testnet-addresses&#34;&gt;https://layerzero.gitbook.io/docs/technical-reference/testnet/testnet-addresses&lt;/a&gt; &lt;a href=&#34;https://layerzero.gitbook.io/docs/technical-reference/mainnet/supported-chain-ids&#34;&gt;https://layerzero.gitbook.io/docs/technical-reference/mainnet/supported-chain-ids&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Most recently tested with node version &lt;code&gt;16.13.1&lt;/code&gt;&lt;/h2&gt;</summary>
  </entry>
</feed>