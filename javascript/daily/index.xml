<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-16T01:36:57Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>therealgliz/blooket-hacks</title>
    <updated>2022-09-16T01:36:57Z</updated>
    <id>tag:github.com,2022-09-16:/therealgliz/blooket-hacks</id>
    <link href="https://github.com/therealgliz/blooket-hacks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Multiple game hacks to use so the game become easier to play!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;blooket-hack&lt;/h1&gt; &#xA;&lt;p&gt;Hell i&#39;m actually gliz who created the blooket hacks. I got the repo from the guy who was impersonating me.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This repo will not be updated at all. If you have any questions join the discord server below I&#39;ll be answering them.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;discord server: &lt;a href=&#34;https://discord.gg/Nj9Zs5VtFp&#34;&gt;https://discord.gg/Nj9Zs5VtFp&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Proof thats it me: &lt;img src=&#34;https://user-images.githubusercontent.com/108590774/177013795-80b0e338-fa58-4eba-837f-340bab0c4e9a.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contact&lt;/h1&gt; &#xA;&lt;p&gt;if you want to contact me just dm me on twitter &lt;a href=&#34;https://twitter.com/glizuwu&#34;&gt;https://twitter.com/glizuwu&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SBoudrias/Inquirer.js</title>
    <updated>2022-09-16T01:36:57Z</updated>
    <id>tag:github.com,2022-09-16:/SBoudrias/Inquirer.js</id>
    <link href="https://github.com/SBoudrias/Inquirer.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of common interactive command line user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;img width=&#34;75px&#34; height=&#34;75px&#34; align=&#34;right&#34; alt=&#34;Inquirer Logo&#34; src=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/assets/inquirer_readme.svg?sanitize=true&#34; title=&#34;Inquirer.js&#34;&gt; &#xA;&lt;h1&gt;Inquirer.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://badge.fury.io/js/inquirer&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/inquirer.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/SBoudrias/Inquirer.js&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/SBoudrias/Inquirer.js/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FSBoudrias%2FInquirer.js?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FSBoudrias%2FInquirer.js.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A collection of common interactive command line user interfaces.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#documentation&#34;&gt;Documentation&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#methods&#34;&gt;Methods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#objects&#34;&gt;Objects&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#questions&#34;&gt;Questions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#answers&#34;&gt;Answers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#separator&#34;&gt;Separator&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#prompt&#34;&gt;Prompt Types&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#layouts&#34;&gt;User Interfaces and Layouts&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#reactive&#34;&gt;Reactive Interface&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#issues&#34;&gt;Known issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#news&#34;&gt;News&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#plugins&#34;&gt;Plugins&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Goal and Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;Inquirer.js&lt;/code&gt;&lt;/strong&gt; strives to be an easily embeddable and beautiful command line interface for &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; (and perhaps the &#34;CLI &lt;a href=&#34;https://en.wikipedia.org/wiki/Citizen_Kane&#34;&gt;Xanadu&lt;/a&gt;&#34;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;Inquirer.js&lt;/code&gt;&lt;/strong&gt; should ease the process of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;providing &lt;em&gt;error feedback&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;asking questions&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;parsing&lt;/em&gt; input&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;validating&lt;/em&gt; answers&lt;/li&gt; &#xA; &lt;li&gt;managing &lt;em&gt;hierarchical prompts&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;Inquirer.js&lt;/code&gt;&lt;/strong&gt; provides the user interface and the inquiry session flow. If you&#39;re searching for a full blown command line program utility, then check out &lt;a href=&#34;https://github.com/visionmedia/commander.js&#34;&gt;commander&lt;/a&gt;, &lt;a href=&#34;https://github.com/dthree/vorpal&#34;&gt;vorpal&lt;/a&gt; or &lt;a href=&#34;https://github.com/leo/args&#34;&gt;args&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a name=&#34;installation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install --save inquirer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import inquirer from &#39;inquirer&#39;;&#xA;&#xA;inquirer&#xA;  .prompt([&#xA;    /* Pass your questions in here */&#xA;  ])&#xA;  .then((answers) =&amp;gt; {&#xA;    // Use user feedback for... whatever!!&#xA;  })&#xA;  .catch((error) =&amp;gt; {&#xA;    if (error.isTtyError) {&#xA;      // Prompt couldn&#39;t be rendered in the current environment&#xA;    } else {&#xA;      // Something else went wrong&#xA;    }&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Inquirer v9 and higher are native esm modules, this mean you cannot use the commonjs syntax &lt;code&gt;require(&#39;inquirer&#39;)&lt;/code&gt; anymore. If you want to learn more about using native esm in Node, I&#39;d recommend reading &lt;a href=&#34;https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c&#34;&gt;the following guide&lt;/a&gt;. Alternatively, you can rely on an older version until you&#39;re ready to upgrade your environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install --save inquirer@^8.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will then allow import inquirer with the commonjs &lt;code&gt;require&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const inquirer = require(&#39;inquirer&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;examples&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Examples (Run it and see it)&lt;/h3&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/tree/master/packages/inquirer/examples&#34;&gt;&lt;code&gt;packages/inquirer/examples/&lt;/code&gt;&lt;/a&gt; folder for code and interface examples.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;node packages/inquirer/examples/pizza.js&#xA;node packages/inquirer/examples/checkbox.js&#xA;# etc...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Methods&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a name=&#34;methods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;inquirer.prompt(questions, answers) -&amp;gt; promise&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Launch the prompt interface (inquiry session)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;questions&lt;/strong&gt; (Array) containing &lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#question&#34;&gt;Question Object&lt;/a&gt; (using the &lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#reactive-interface&#34;&gt;reactive interface&lt;/a&gt;, you can also pass a &lt;code&gt;Rx.Observable&lt;/code&gt; instance)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;answers&lt;/strong&gt; (object) contains values of already answered questions. Inquirer will avoid asking answers already provided here. Defaults &lt;code&gt;{}&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;returns a &lt;strong&gt;Promise&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;inquirer.registerPrompt(name, prompt)&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Register prompt plugins under &lt;code&gt;name&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;name&lt;/strong&gt; (string) name of the this new prompt. (used for question &lt;code&gt;type&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;prompt&lt;/strong&gt; (object) the prompt object itself (the plugin)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;inquirer.createPromptModule() -&amp;gt; prompt function&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Create a self contained inquirer module. If you don&#39;t want to affect other libraries that also rely on inquirer when you overwrite or add new prompt types.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const prompt = inquirer.createPromptModule();&#xA;&#xA;prompt(questions).then(/* ... */);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Objects&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a name=&#34;objects&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Question&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a name=&#34;questions&#34;&gt;&lt;/a&gt; A question object is a &lt;code&gt;hash&lt;/code&gt; containing question related values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: (String) Type of the prompt. Defaults: &lt;code&gt;input&lt;/code&gt; - Possible values: &lt;code&gt;input&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;confirm&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;rawlist&lt;/code&gt;, &lt;code&gt;expand&lt;/code&gt;, &lt;code&gt;checkbox&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;editor&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: (String) The name to use when storing the answer in the answers hash. If the name contains periods, it will define a path in the answers hash.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: (String|Function) The question to print. If defined as a function, the first parameter will be the current inquirer session answers. Defaults to the value of &lt;code&gt;name&lt;/code&gt; (followed by a colon).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;default&lt;/strong&gt;: (String|Number|Boolean|Array|Function) Default value(s) to use if nothing is entered, or a function that returns the default value(s). If defined as a function, the first parameter will be the current inquirer session answers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;choices&lt;/strong&gt;: (Array|Function) Choices array or a function returning a choices array. If defined as a function, the first parameter will be the current inquirer session answers. Array values can be simple &lt;code&gt;numbers&lt;/code&gt;, &lt;code&gt;strings&lt;/code&gt;, or &lt;code&gt;objects&lt;/code&gt; containing a &lt;code&gt;name&lt;/code&gt; (to display in list), a &lt;code&gt;value&lt;/code&gt; (to save in the answers hash), and a &lt;code&gt;short&lt;/code&gt; (to display after selection) properties. The choices array can also contain &lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#separator&#34;&gt;a &lt;code&gt;Separator&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;validate&lt;/strong&gt;: (Function) Receive the user input and answers hash. Should return &lt;code&gt;true&lt;/code&gt; if the value is valid, and an error message (&lt;code&gt;String&lt;/code&gt;) otherwise. If &lt;code&gt;false&lt;/code&gt; is returned, a default error message is provided.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;filter&lt;/strong&gt;: (Function) Receive the user input and answers hash. Returns the filtered value to be used inside the program. The value returned will be added to the &lt;em&gt;Answers&lt;/em&gt; hash.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;transformer&lt;/strong&gt;: (Function) Receive the user input, answers hash and option flags, and return a transformed value to display to the user. The transformation only impacts what is shown while editing. It does not modify the answers hash.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;when&lt;/strong&gt;: (Function, Boolean) Receive the current user answers hash and should return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending on whether or not this question should be asked. The value can also be a simple boolean.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;pageSize&lt;/strong&gt;: (Number) Change the number of lines that will be rendered when using &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;rawList&lt;/code&gt;, &lt;code&gt;expand&lt;/code&gt; or &lt;code&gt;checkbox&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;prefix&lt;/strong&gt;: (String) Change the default &lt;em&gt;prefix&lt;/em&gt; message.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;suffix&lt;/strong&gt;: (String) Change the default &lt;em&gt;suffix&lt;/em&gt; message.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;askAnswered&lt;/strong&gt;: (Boolean) Force to prompt the question if the answer already exists.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;loop&lt;/strong&gt;: (Boolean) Enable list looping. Defaults: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;waitUserInput&lt;/strong&gt;: (Boolean) Flag to enable/disable wait for user input before opening system editor - Defaults: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;default&lt;/code&gt;, &lt;code&gt;choices&lt;/code&gt;(if defined as functions), &lt;code&gt;validate&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;when&lt;/code&gt; functions can be called asynchronously. Either return a promise or use &lt;code&gt;this.async()&lt;/code&gt; to get a callback you&#39;ll call with the final value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;{&#xA;  /* Preferred way: with promise */&#xA;  filter() {&#xA;    return new Promise(/* etc... */);&#xA;  },&#xA;&#xA;  /* Legacy way: with this.async */&#xA;  validate: function (input) {&#xA;    // Declare function as asynchronous, and save the done callback&#xA;    const done = this.async();&#xA;&#xA;    // Do async stuff&#xA;    setTimeout(function() {&#xA;      if (typeof input !== &#39;number&#39;) {&#xA;        // Pass the return value in the done callback&#xA;        done(&#39;You need to provide a number&#39;);&#xA;        return;&#xA;      }&#xA;      // Pass the return value in the done callback&#xA;      done(null, true);&#xA;    }, 3000);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Answers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a name=&#34;answers&#34;&gt;&lt;/a&gt; A key/value hash containing the client answers in each prompt.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Key&lt;/strong&gt; The &lt;code&gt;name&lt;/code&gt; property of the &lt;em&gt;question&lt;/em&gt; object&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Value&lt;/strong&gt; (Depends on the prompt) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;confirm&lt;/code&gt;: (Boolean)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;input&lt;/code&gt; : User input (filtered if &lt;code&gt;filter&lt;/code&gt; is defined) (String)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;number&lt;/code&gt;: User input (filtered if &lt;code&gt;filter&lt;/code&gt; is defined) (Number)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;rawlist&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt; : Selected choice value (or name if no value specified) (String)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Separator&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a name=&#34;separator&#34;&gt;&lt;/a&gt; A separator can be added to any &lt;code&gt;choices&lt;/code&gt; array:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;// In the question object&#xA;choices: [ &#34;Choice A&#34;, new inquirer.Separator(), &#34;choice B&#34; ]&#xA;&#xA;// Which&#39;ll be displayed this way&#xA;[?] What do you want to do?&#xA; &amp;gt; Order a pizza&#xA;   Make a reservation&#xA;   --------&#xA;   Ask opening hours&#xA;   Talk to the receptionist&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The constructor takes a facultative &lt;code&gt;String&lt;/code&gt; value that&#39;ll be use as the separator. If omitted, the separator will be &lt;code&gt;--------&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Separator instances have a property &lt;code&gt;type&lt;/code&gt; equal to &lt;code&gt;separator&lt;/code&gt;. This should allow tools façading Inquirer interface from detecting separator types in lists.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;prompt&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Prompt types&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;: &lt;em&gt;allowed options written inside square brackets (&lt;code&gt;[]&lt;/code&gt;) are optional. Others are required.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;List - &lt;code&gt;{type: &#39;list&#39;}&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Take &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;choices&lt;/code&gt;[, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;] properties. (Note: &lt;code&gt;default&lt;/code&gt; must be set to the &lt;code&gt;index&lt;/code&gt; or &lt;code&gt;value&lt;/code&gt; of one of the entries in &lt;code&gt;choices&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/list.svg?sanitize=true&#34; alt=&#34;List prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Raw List - &lt;code&gt;{type: &#39;rawlist&#39;}&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Take &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;choices&lt;/code&gt;[, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;] properties. (Note: &lt;code&gt;default&lt;/code&gt; must be set to the &lt;code&gt;index&lt;/code&gt; of one of the entries in &lt;code&gt;choices&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/rawlist.svg?sanitize=true&#34; alt=&#34;Raw list prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Expand - &lt;code&gt;{type: &#39;expand&#39;}&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Take &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;choices&lt;/code&gt;[, &lt;code&gt;default&lt;/code&gt;] properties. Note: &lt;code&gt;default&lt;/code&gt; must be the &lt;code&gt;index&lt;/code&gt; of the desired default selection of the array. If &lt;code&gt;default&lt;/code&gt; key not provided, then &lt;code&gt;help&lt;/code&gt; will be used as default choice&lt;/p&gt; &#xA;&lt;p&gt;Note that the &lt;code&gt;choices&lt;/code&gt; object will take an extra parameter called &lt;code&gt;key&lt;/code&gt; for the &lt;code&gt;expand&lt;/code&gt; prompt. This parameter must be a single (lowercased) character. The &lt;code&gt;h&lt;/code&gt; option is added by the prompt and shouldn&#39;t be defined by the user.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;code&gt;examples/expand.js&lt;/code&gt; for a running example.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/expand-y.svg?sanitize=true&#34; alt=&#34;Expand prompt closed&#34;&gt; &lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/expand-d.svg?sanitize=true&#34; alt=&#34;Expand prompt expanded&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Checkbox - &lt;code&gt;{type: &#39;checkbox&#39;}&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Take &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;choices&lt;/code&gt;[, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;validate&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;] properties. &lt;code&gt;default&lt;/code&gt; is expected to be an Array of the checked choices value.&lt;/p&gt; &#xA;&lt;p&gt;Choices marked as &lt;code&gt;{checked: true}&lt;/code&gt; will be checked by default.&lt;/p&gt; &#xA;&lt;p&gt;Choices whose property &lt;code&gt;disabled&lt;/code&gt; is truthy will be unselectable. If &lt;code&gt;disabled&lt;/code&gt; is a string, then the string will be outputted next to the disabled choice, otherwise it&#39;ll default to &lt;code&gt;&#34;Disabled&#34;&lt;/code&gt;. The &lt;code&gt;disabled&lt;/code&gt; property can also be a synchronous function receiving the current answers as argument and returning a boolean or a string.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/checkbox.svg?sanitize=true&#34; alt=&#34;Checkbox prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Confirm - &lt;code&gt;{type: &#39;confirm&#39;}&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Take &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, [&lt;code&gt;default&lt;/code&gt;] properties. &lt;code&gt;default&lt;/code&gt; is expected to be a boolean if used.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/confirm.svg?sanitize=true&#34; alt=&#34;Confirm prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Input - &lt;code&gt;{type: &#39;input&#39;}&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Take &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;[, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;validate&lt;/code&gt;, &lt;code&gt;transformer&lt;/code&gt;] properties.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/input.svg?sanitize=true&#34; alt=&#34;Input prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Input - &lt;code&gt;{type: &#39;number&#39;}&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Take &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;[, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;validate&lt;/code&gt;, &lt;code&gt;transformer&lt;/code&gt;] properties.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Password - &lt;code&gt;{type: &#39;password&#39;}&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Take &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;mask&lt;/code&gt;,[, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;validate&lt;/code&gt;] properties.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/password.svg?sanitize=true&#34; alt=&#34;Password prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;mask&lt;/code&gt; is required to hide the actual user input.&lt;/p&gt; &#xA;&lt;h4&gt;Editor - &lt;code&gt;{type: &#39;editor&#39;}&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Take &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;[, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;validate&lt;/code&gt;, &lt;code&gt;postfix&lt;/code&gt;, &lt;code&gt;waitUserInput&lt;/code&gt;] properties&lt;/p&gt; &#xA;&lt;p&gt;Launches an instance of the users preferred editor on a temporary file. Once the user exits their editor, the contents of the temporary file are read in as the result. The editor to use is determined by reading the $VISUAL or $EDITOR environment variables. If neither of those are present, notepad (on Windows) or vim (Linux or Mac) is used.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;postfix&lt;/code&gt; property is useful if you want to provide an extension.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;layouts&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Use in Non-Interactive Environments&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;prompt()&lt;/code&gt; requires that it is run in an interactive environment. (I.e. &lt;a href=&#34;https://nodejs.org/docs/latest-v12.x/api/process.html#process_a_note_on_process_i_o&#34;&gt;One where &lt;code&gt;process.stdin.isTTY&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;). If &lt;code&gt;prompt()&lt;/code&gt; is invoked outside of such an environment, then &lt;code&gt;prompt()&lt;/code&gt; will return a rejected promise with an error. For convenience, the error will have a &lt;code&gt;isTtyError&lt;/code&gt; property to programmatically indicate the cause.&lt;/p&gt; &#xA;&lt;h2&gt;User Interfaces and layouts&lt;/h2&gt; &#xA;&lt;p&gt;Along with the prompts, Inquirer offers some basic text UI.&lt;/p&gt; &#xA;&lt;h4&gt;Bottom Bar - &lt;code&gt;inquirer.ui.BottomBar&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This UI present a fixed text at the bottom of a free text zone. This is useful to keep a message to the bottom of the screen while outputting command outputs on the higher section.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const ui = new inquirer.ui.BottomBar();&#xA;&#xA;// pipe a Stream to the log zone&#xA;outputStream.pipe(ui.log);&#xA;&#xA;// Or simply write output&#xA;ui.log.write(&#39;something just happened.&#39;);&#xA;ui.log.write(&#39;Almost over, standby!&#39;);&#xA;&#xA;// During processing, update the bottom bar content to display a loader&#xA;// or output a progress bar, etc&#xA;ui.updateBottomBar(&#39;new bottom bar content&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;reactive&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reactive interface&lt;/h2&gt; &#xA;&lt;p&gt;Internally, Inquirer uses the &lt;a href=&#34;https://github.com/ReactiveX/rxjs&#34;&gt;JS reactive extension&lt;/a&gt; to handle events and async flows.&lt;/p&gt; &#xA;&lt;p&gt;This mean you can take advantage of this feature to provide more advanced flows. For example, you can dynamically add questions to be asked:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const prompts = new Rx.Subject();&#xA;inquirer.prompt(prompts);&#xA;&#xA;// At some point in the future, push new questions&#xA;prompts.next({&#xA;  /* question... */&#xA;});&#xA;prompts.next({&#xA;  /* question... */&#xA;});&#xA;&#xA;// When you&#39;re done&#xA;prompts.complete();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And using the return value &lt;code&gt;process&lt;/code&gt; property, you can access more fine grained callbacks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;inquirer.prompt(prompts).ui.process.subscribe(onEachAnswer, onError, onComplete);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support (OS Terminals)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;support&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You should expect mostly good support for the CLI below. This does not mean we won&#39;t look at issues found on other command line - feel free to report any!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mac OS&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Terminal.app&lt;/li&gt; &#xA;   &lt;li&gt;iTerm&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows (&lt;a href=&#34;https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/#issues&#34;&gt;Known issues&lt;/a&gt;)&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://conemu.github.io/&#34;&gt;ConEmu&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;cmd.exe&lt;/li&gt; &#xA;   &lt;li&gt;Powershell&lt;/li&gt; &#xA;   &lt;li&gt;Cygwin&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux (Ubuntu, openSUSE, Arch Linux, etc)&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;gnome-terminal (Terminal GNOME)&lt;/li&gt; &#xA;   &lt;li&gt;konsole&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Running Inquirer together with network streams in Windows platform inside some terminals can result in process hang. Workaround: run inside another terminal. Please refer to the &lt;a href=&#34;https://github.com/nodejs/node/issues/21771&#34;&gt;https://github.com/nodejs/node/issues/21771&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Calling a node script that uses Inquirer from grunt-exec can cause the program to crash. To fix this, add to your grunt-exec config &lt;code&gt;stdio: &#39;inherit&#39;&lt;/code&gt;. Please refer to &lt;a href=&#34;https://github.com/jharding/grunt-exec/issues/85&#34;&gt;https://github.com/jharding/grunt-exec/issues/85&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;News on the march (Release notes)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;news&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/releases&#34;&gt;GitHub releases section for the changelog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;contributing&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unit test&lt;/strong&gt; Unit test are written in &lt;a href=&#34;https://mochajs.org/&#34;&gt;Mocha&lt;/a&gt;. Please add a unit test for every new feature or bug fix. &lt;code&gt;npm test&lt;/code&gt; to run the test suite.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt; Add documentation for every API change. Feel free to send typo fixes and better docs!&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re looking to offer good support for multiple prompts and environments. If you want to help, we&#39;d like to keep a list of testers for each terminal/OS so we can contact you and get feedback before release. Let us know if you want to be added to the list (just tweet to &lt;a href=&#34;https://twitter.com/Vaxilart&#34;&gt;@vaxilart&lt;/a&gt;) or just add your name to &lt;a href=&#34;https://github.com/SBoudrias/Inquirer.js/wiki/Testers&#34;&gt;the wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2022 Simon Boudrias (twitter: &lt;a href=&#34;https://twitter.com/Vaxilart&#34;&gt;@vaxilart&lt;/a&gt;) Licensed under the MIT license.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;plugins&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Prompts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mokkabonna/inquirer-autocomplete-prompt&#34;&gt;&lt;strong&gt;autocomplete&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Presents a list of options as the user types, compatible with other packages such as fuzzy (for search)&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://github.com/mokkabonna/inquirer-autocomplete-prompt/raw/master/inquirer.gif&#34; alt=&#34;autocomplete prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/faressoft/inquirer-checkbox-plus-prompt&#34;&gt;&lt;strong&gt;checkbox-plus&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Checkbox list with autocomplete and other additions&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://github.com/faressoft/inquirer-checkbox-plus-prompt/raw/master/demo.gif&#34; alt=&#34;checkbox-plus&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/haversnail/inquirer-date-prompt&#34;&gt;&lt;strong&gt;inquirer-date-prompt&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Customizable date/time selector with localization support&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://github.com/haversnail/inquirer-date-prompt/raw/master/examples/demo.gif&#34; alt=&#34;Date Prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/DerekTBrown/inquirer-datepicker-prompt&#34;&gt;&lt;strong&gt;datetime&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Customizable date/time selector using both number pad and arrow keys&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://github.com/DerekTBrown/inquirer-datepicker-prompt/raw/master/example/datetime-prompt.png&#34; alt=&#34;Datetime Prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/adam-golab/inquirer-select-line&#34;&gt;&lt;strong&gt;inquirer-select-line&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Prompt for selecting index in array where add new element&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://media.giphy.com/media/xUA7b1MxpngddUvdHW/giphy.gif&#34; alt=&#34;inquirer-select-line gif&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sullof/inquirer-command-prompt&#34;&gt;&lt;strong&gt;command&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Simple prompt with command history and dynamic autocomplete&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/adelsz/inquirer-fuzzy-path&#34;&gt;&lt;strong&gt;inquirer-fuzzy-path&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Prompt for fuzzy file/directory selection.&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/adelsz/inquirer-fuzzy-path/master/recording.gif&#34; alt=&#34;inquirer-fuzzy-path&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tannerntannern/inquirer-emoji&#34;&gt;&lt;strong&gt;inquirer-emoji&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Prompt for inputting emojis.&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://github.com/tannerntannern/inquirer-emoji/raw/master/demo.gif&#34; alt=&#34;inquirer-emoji&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LitoMore/inquirer-chalk-pipe&#34;&gt;&lt;strong&gt;inquirer-chalk-pipe&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Prompt for input chalk-pipe style strings&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://github.com/LitoMore/inquirer-chalk-pipe/raw/master/screenshot.gif&#34; alt=&#34;inquirer-chalk-pipe&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/clinyong/inquirer-search-checkbox&#34;&gt;&lt;strong&gt;inquirer-search-checkbox&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Searchable Inquirer checkbox&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/robin-rpr/inquirer-search-list&#34;&gt;&lt;strong&gt;inquirer-search-list&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Searchable Inquirer list&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://github.com/robin-rpr/inquirer-search-list/raw/master/preview.gif&#34; alt=&#34;inquirer-search-list&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/olistic/inquirer-prompt-suggest&#34;&gt;&lt;strong&gt;inquirer-prompt-suggest&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Inquirer prompt for your less creative users.&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/5600126/40391192-d4f3d6d0-5ded-11e8-932f-4b75b642c09e.gif&#34; alt=&#34;inquirer-prompt-suggest&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HQarroum/inquirer-s3&#34;&gt;&lt;strong&gt;inquirer-s3&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; An S3 object selector for Inquirer.&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://github.com/HQarroum/inquirer-s3/raw/master/docs/inquirer-screenshot.png&#34; alt=&#34;inquirer-s3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yaodingyd/inquirer-autosubmit-prompt&#34;&gt;&lt;strong&gt;inquirer-autosubmit-prompt&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Auto submit based on your current input, saving one extra enter&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/anc95/inquirer-file-tree-selection&#34;&gt;&lt;strong&gt;inquirer-file-tree-selection-prompt&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Inquirer prompt for to select a file or directory in file tree&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://github.com/anc95/inquirer-file-tree-selection/raw/master/example/screenshot.gif&#34; alt=&#34;inquirer-file-tree-selection-prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/insightfuls/inquirer-tree-prompt&#34;&gt;&lt;strong&gt;inquirer-tree-prompt&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Inquirer prompt to select from a tree&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://github.com/insightfuls/inquirer-tree-prompt/raw/main/example/screenshot.gif&#34; alt=&#34;inquirer-tree-prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/eduardoboucas/inquirer-table-prompt&#34;&gt;&lt;strong&gt;inquirer-table-prompt&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; A table-like prompt for Inquirer.&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/eduardoboucas/inquirer-table-prompt/master/screen-capture.gif&#34; alt=&#34;inquirer-table-prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lnquy065/inquirer-interrupted-prompt&#34;&gt;&lt;strong&gt;inquirer-interrupted-prompt&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Turning any existing inquirer and its plugin prompts into prompts that can be interrupted with a custom key.&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lnquy065/inquirer-interrupted-prompt/master/example/demo-menu.gif&#34; alt=&#34;inquirer-interrupted-prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/leonzalion/inquirer-press-to-continue&#34;&gt;&lt;strong&gt;inquirer-press-to-continue&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; A &#34;press any key to continue&#34; prompt for Inquirer.js&lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/leonzalion/inquirer-press-to-continue/main/assets/demo.gif&#34; alt=&#34;inquirer-press-to-continue&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>KingRan/KR</title>
    <updated>2022-09-16T01:36:57Z</updated>
    <id>tag:github.com,2022-09-16:/KingRan/KR</id>
    <link href="https://github.com/KingRan/KR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;前排置顶&lt;/h1&gt; &#xA;&lt;h2&gt;注意：拉取本库即代表遵守本库规则。可以选择禁用，否则请立即删除。&lt;/h2&gt; &#xA;&lt;h1&gt;前言(必看)&lt;/h1&gt; &#xA;&lt;h2&gt;频道：&lt;a href=&#34;https://t.me/KingRan521&#34;&gt;https://t.me/KingRan521&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;君子慎独，不欺暗室， 卑以自牧，含章可贞。&lt;/p&gt; &#xA;&lt;p&gt;大丈夫立于天地之间， 当仰天地浩然正气， 行光明磊落之事。&lt;/p&gt; &#xA;&lt;p&gt;克己，慎独，守心，明性。&lt;/p&gt; &#xA;&lt;p&gt;以克人之心克己， 以容己之心容人。&lt;/p&gt; &#xA;&lt;p&gt;言尽于此，不想解释也不想回答！！！&lt;/p&gt; &#xA;&lt;p&gt;建议不要使用本库。免生是非！！！&lt;/p&gt; &#xA;&lt;p&gt;建议不要使用本库。免生是非！！！&lt;/p&gt; &#xA;&lt;p&gt;建议不要使用本库。免生是非！！！&lt;/p&gt; &#xA;&lt;h4&gt;无互助池，无需配置互助码，账号之间内部互助。&lt;/h4&gt; &#xA;&lt;h3&gt;目前大部分脚本均为加密脚本。&lt;/h3&gt; &#xA;&lt;h4&gt;另外涉及开卡均有部分加密。&lt;/h4&gt; &#xA;&lt;h3&gt;拉取(js py ts)青龙 config.sh 文件中修改&lt;/h3&gt; &#xA;&lt;p&gt;ql repo命令拉取脚本时需要拉取的文件后缀，直接写文件后缀名即可&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;RepoFileExtensions=&#34;js py ts&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;腾讯云活动：&lt;/h3&gt; &#xA;&lt;p&gt;2核2G4M/40RMB/一年，仅限新用户，一个实名可以注册3个新用户账号&lt;/p&gt; &#xA;&lt;p&gt;抢购地址：&lt;a href=&#34;https://sourl.cn/RFwHRZ&#34;&gt;https://sourl.cn/RFwHRZ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;取关店铺和商品 使用说明（待完善）&lt;/h3&gt; &#xA;&lt;p&gt;通过设置变量&lt;code&gt;UN_SUBSCRIBES&lt;/code&gt;来进行&lt;code&gt;商品一次性取消数量&lt;/code&gt;, &lt;code&gt;店铺一次性取消数量&lt;/code&gt;, &lt;code&gt;商品取关忽略列表&lt;/code&gt;, &lt;code&gt;店铺取关忽略列表&lt;/code&gt;四项内容的自定义设置，以&#39;&amp;amp;&#39;、回车或&#39;\n&#39;隔开。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;设定项&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;示例&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;商品取消数/次&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;默认20，为0不取消&lt;/td&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;店铺取消数/次&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;默认20，为0不取消&lt;/td&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;商品取关忽略列表&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;JSON数组&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;按商品详情页的商品编号设置&lt;/td&gt; &#xA;   &lt;td&gt;[&#34;100016814096&#34;, &#34;100009667851&#34;]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;店铺取关忽略列表&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;JSON数组&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;按店铺名关键字&lt;/td&gt; &#xA;   &lt;td&gt;[&#34;华硕&#34;, &#34;丽台京东自营旗舰店&#34;]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>