<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-04T01:32:07Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pysunday/rs-reverse</title>
    <updated>2024-01-04T01:32:07Z</updated>
    <id>tag:github.com,2024-01-04:/pysunday/rs-reverse</id>
    <link href="https://github.com/pysunday/rs-reverse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;瑞数,rs,rsvmp,瑞数逆向,逆向,瑞数反爬虫,website reverse engineering&lt;/p&gt;&lt;hr&gt;&lt;p&gt;这个项目是瑞数加密的逆向研究，代码开发基于网站链接：&lt;code&gt;https://wcjs.sbj.cnipa.gov.cn/sgtmi&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;研究包括动态代码生成原理及动态cookie生成原理。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;点赞是我坚持的动力，希望该研究也能给一样好奇瑞数原理的人答疑解惑。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;0. 声明&lt;/h2&gt; &#xA;&lt;p&gt;该项目下代码仅用于个人学习、研究或欣赏。通过使用该仓库相关代码产生的风险与仓库代码作者无关。&lt;/p&gt; &#xA;&lt;p&gt;该瑞数cookie生成过程中的算法逆向仍存在以下问题：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;预先设置好的配置项，参见：&lt;a href=&#34;https://github.com/pysunday/rs-reverse/raw/main/src/handler/Cookie.js#L32&#34;&gt;代码中config的值&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;代码中&lt;code&gt;getSubThree&lt;/code&gt;方法中的&lt;a href=&#34;https://github.com/pysunday/rs-reverse/raw/main/src/handler/Cookie.js#L115&#34;&gt;数字46228&lt;/a&gt;为作者代码格式化且代码修改后运行代码计算的值;&lt;/li&gt; &#xA; &lt;li&gt;代码中&lt;code&gt;getSubOne&lt;/code&gt;方法中的&lt;a href=&#34;https://github.com/pysunday/rs-reverse/raw/main/src/handler/Cookie.js#L89&#34;&gt;&lt;code&gt;_random(500, 1000)&lt;/code&gt;&lt;/a&gt;为作者电脑运行计算的大概值，此值与浏览器运行环境有关(如电脑配置等);&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;1. 博客文章&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://howduudu.tech/#/blog/article/1699807978000&#34;&gt;瑞数vmp-代码格式化后无法正常运行原因分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://howduudu.tech/#/blog/article/1701276778000&#34;&gt;瑞数vmp-动态代码生成原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://howduudu.tech/#/blog/article/1702313578000&#34;&gt;补环境-document.all的c++方案&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;2. 瑞数算法还原&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;npx rs-reverse *&lt;/code&gt;与在当前目录下运行&lt;code&gt;node main.js *&lt;/code&gt;相对应&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2.1. makecode子命令&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;体验命令：&lt;code&gt;npx rs-reverse makecode&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;执行子命令&lt;code&gt;makecode&lt;/code&gt;生成动态代码, 可以传入包含&lt;code&gt;$_ts.nsd&lt;/code&gt;和&lt;code&gt;$_ts.cd&lt;/code&gt;的文本文件或者直接给url让程序自己去拿。&lt;/p&gt; &#xA;&lt;p&gt;如运行：&lt;code&gt;npx rs-reverse makecode -u http://wcjs.sbj.cnipa.gov.cn/sgtmi&lt;/code&gt;，后生成三个文件：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;动态代码文件&lt;code&gt;output/dynamic-code.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$_ts&lt;/code&gt;文件&lt;code&gt;output/input_ts.json&lt;/code&gt;和&lt;code&gt;output/output_ts.json&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt; $ npx rs-reverse makecode -h&#xA; rs-reverse makecode&#xA;&#xA;生成动态代码&#xA;&#xA;Options:&#xA;  -h             显示帮助信息                                          [boolean]&#xA;  -f, --file     含有nsd, cd值的json文件                                [string]&#xA;  -u, --url      瑞数返回204状态码的请求地址                            [string]&#xA;  -v, --version  显示版本号                                            [boolean]&#xA;&#xA;Examples:&#xA;  rs-reverse makecode -f example/codes/1-$_ts.json&#xA;  rs-reverse makecode -u http://url/path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;调用示例：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; $ npx rs-reverse makecode&#xA;&#xA;  输入ts：./output/output_ts.js&#xA;  输出ts：./output/output_ts.js&#xA;  动态代码：./output/dynamic_code.js/input_ts.json&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.2. makecookie子命令&lt;/h3&gt; &#xA;&lt;p&gt;执行子命令&lt;code&gt;makecookie&lt;/code&gt;生成动态代码, 可以传入包含&lt;code&gt;$_ts.nsd&lt;/code&gt;和&lt;code&gt;$_ts.cd&lt;/code&gt;的文本文件或者直接给url让程序自己去拿, 命令示例：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;npx方式：&lt;code&gt;npx rs-reverse makecookie&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;文件方式：&lt;code&gt;node main.js makecookie&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;该命令首先会执行&lt;code&gt;makecode&lt;/code&gt;子命令拿到完整的&lt;code&gt;$_ts&lt;/code&gt;值，再运行makecookie算法生成cookie。&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;makecookie&lt;/code&gt;命令与&lt;code&gt;makecode&lt;/code&gt;使用方式类似：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt; $ npx rs-reverse makecookie -h&#xA;rs-reverse makecookie&#xA;&#xA;生成动态代码&#xA;&#xA;Options:&#xA;  -h             显示帮助信息                                          [boolean]&#xA;  -f, --file     含有nsd, cd值的json文件                                [string]&#xA;  -u, --url      瑞数返回204状态码的请求地址                            [string]&#xA;  -v, --version  显示版本号                                            [boolean]&#xA;&#xA;Examples:&#xA;  rs-reverse makecookie -f example/codes/1-$_ts.json&#xA;  rs-reverse makecookie -u http://url/path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;调用示例：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; $ npx rs-reverse makecookie&#xA;&#xA;  Cookie值: 06F5jRMo1hoEoEPOKmB6eAcYaJeWGRuYthzufuuJ4tkmcCMZLbouHGcYIm462aiARAwGlJIvr6M_vbi1K3kaer3n0ZE459rr3eKe8U.xTOaCdVxik6TW2XIle7cmudenUkPfU4UaEGoqOl8nAv38f_Qb_g6kZMpHn51J2qsIdscBqGgjQvcwWPFWk2r9SHbAJbRganpjSeTH1PksisGcKwHCFbHsXqYX1jAW672tcssl&#xA;  Cookie长: 236&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.3. exec子命令&lt;/h3&gt; &#xA;&lt;p&gt;runcode子命令用于开发中或者演示时使用。命令示例：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;npx方式：&lt;code&gt;npx rs-reverse exec -c &#39;gv.cp2&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;文件方式：&lt;code&gt;node main.js exec -c &#39;gv.cp2&#39;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt; $ npx rs-reverse exec -h&#xA;rs-reverse exec&#xA;&#xA;直接运行代码，用于开发及演示时使用&#xA;&#xA;Options:&#xA;  -h             显示帮助信息                                          [boolean]&#xA;  -l, --level    日志打印等级，参考log4js，默认为info                   [string]&#xA;  -c, --code     要运行的代码，如：gv.cp2，即打印cp2的值     [string] [required]&#xA;  -v, --version  显示版本号                                            [boolean]&#xA;&#xA;Examples:&#xA;  rs-reverse exec -c &#39;code string&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;调用示例：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; $ npm rs-reverse exec -c &#39;+ascii2string(gv.keys[21])&#39;&#xA;&#xA;  输入：+ascii2string(gv.keys[21])&#xA;  输出：1718026159&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3. 手动获取动态代码和$_ts的方法&lt;/h2&gt; &#xA;&lt;p&gt;目录&lt;code&gt;example/codes/&lt;/code&gt;下的文件为手动保存，用于验证代码功能，如运行：&lt;code&gt;npm run test&lt;/code&gt;后会比对程序生成的动态代码与&lt;code&gt;$_ts&lt;/code&gt;文件是否与相关静态文件文本内容一致。&lt;/p&gt; &#xA;&lt;p&gt;当然也可以自己手动拿动态代码和$_ts以验证程序是否还有效，可以通过控制台拿到相关文本：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;在文件中&lt;code&gt;http://wcjs.sbj.cnipa.gov.cn/c5rxzYrjRT2h/cCdzB9ZjDFks.294cc83.js&lt;/code&gt;找到代码&lt;code&gt;_$_q.call(_$gP, _$_y)&lt;/code&gt;并打入断点(文件找不到可以通过其它两种方法定位);&lt;/li&gt; &#xA; &lt;li&gt;找到如第一条的js文件，搜索&lt;code&gt;.call(&lt;/code&gt;找到调用方法;&lt;/li&gt; &#xA; &lt;li&gt;通过代理cookie变动的方式打断点通过堆栈找到调用方法。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;断点后复制相关文本：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;拿到动态代码：&lt;code&gt;copy(_$_y)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;拿到&lt;code&gt;$_ts&lt;/code&gt;: &lt;code&gt;console.log(JSON.stringify(window.$_ts))&lt;/code&gt;，这里有点蒙，可以用&lt;code&gt;JSON.stringify(window.$_ts)&lt;/code&gt;或者&lt;code&gt;copy(JSON.stringify(window.$_ts))&lt;/code&gt;试试&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;初始的&lt;code&gt;$_ts&lt;/code&gt;可以在这个文件入口处打断点获取。&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>