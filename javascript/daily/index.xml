<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-07T01:31:02Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stripe-samples/accept-a-payment</title>
    <updated>2024-09-07T01:31:02Z</updated>
    <id>tag:github.com,2024-09-07:/stripe-samples/accept-a-payment</id>
    <link href="https://github.com/stripe-samples/accept-a-payment" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learn how to accept a payment from customers around the world with a variety of payment methods.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Accept a payment&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Learn how to securely accept payments online.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository includes examples of 3 types of integration.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe-samples/accept-a-payment/main/prebuilt-checkout-page&#34;&gt;Prebuilt Checkout page&lt;/a&gt; (&lt;a href=&#34;https://stripe.com/docs/payments/accept-a-payment?ui=checkout&#34;&gt;docs&lt;/a&gt;)&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe-samples/accept-a-payment/main/payment-element&#34;&gt;Payment Element&lt;/a&gt; (&lt;a href=&#34;https://stripe.com/docs/payments/accept-a-payment?platform=web&amp;amp;ui=elements&#34;&gt;docs&lt;/a&gt;)&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe-samples/accept-a-payment/main/custom-payment-flow&#34;&gt;Custom payment flow&lt;/a&gt; (&lt;a href=&#34;https://stripe.com/docs/payments/accept-card-payments?platform=web&amp;amp;ui=elements&#34;&gt;docs&lt;/a&gt;)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Lower complexity.&lt;/td&gt; &#xA;   &lt;td&gt;Moderate complexity.&lt;/td&gt; &#xA;   &lt;td&gt;Higher complexity.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Customize logo, images, and colors.&lt;/td&gt; &#xA;   &lt;td&gt;Customize components with &lt;a href=&#34;https://stripe.com/docs/stripe-js/appearance-api&#34;&gt;Appearance API&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Customize all components with CSS.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add payment method types with a single line change.&lt;/td&gt; &#xA;   &lt;td&gt;Add payment methods with a single line change.&lt;/td&gt; &#xA;   &lt;td&gt;Implement each payment method type as a custom integration.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Built-in support for Apple Pay, and Google Pay.&lt;/td&gt; &#xA;   &lt;td&gt;Built-in support for Apple Pay and Google Pay.&lt;/td&gt; &#xA;   &lt;td&gt;Integrate Apple Pay and Google Pay with extra code.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Redirect to Stripe hosted page.&lt;/td&gt; &#xA;   &lt;td&gt;Customers stay on your site, but payment completion triggers a redirect.&lt;/td&gt; &#xA;   &lt;td&gt;Customers stay on your site.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Small refactor to collect recurring payments.&lt;/td&gt; &#xA;   &lt;td&gt;Large refactor to collect recurring payments.&lt;/td&gt; &#xA;   &lt;td&gt;Large refactor to collect recurring payments.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Input validation and error handling built in.&lt;/td&gt; &#xA;   &lt;td&gt;Input validation built-in but you must implement error handling.&lt;/td&gt; &#xA;   &lt;td&gt;Implement your own input validation and error handling.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Localized in 25+ languages.&lt;/td&gt; &#xA;   &lt;td&gt;Localized in 25+ languages.&lt;/td&gt; &#xA;   &lt;td&gt;Implement your own localization.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Automate calculation and collection of sales tax, VAT and GST with one line of code.&lt;/td&gt; &#xA;   &lt;td&gt;Calculate tax using the &lt;a href=&#34;https://stripe.com/docs/tax/custom&#34;&gt;Tax API&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Calculate tax using the &lt;a href=&#34;https://stripe.com/docs/tax/custom&#34;&gt;Tax API&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Payment Method Type Support&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Payment Method Type&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe-samples/accept-a-payment/main/prebuilt-checkout-page&#34;&gt;Prebuilt Checkout page&lt;/a&gt; (&lt;a href=&#34;https://stripe.com/docs/payments/accept-a-payment?ui=checkout&#34;&gt;docs&lt;/a&gt;)&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe-samples/accept-a-payment/main/payment-element&#34;&gt;Payment Element&lt;/a&gt; (&lt;a href=&#34;https://stripe.com/docs/payments/accept-a-payment?platform=web&amp;amp;ui=elements&#34;&gt;docs&lt;/a&gt;)&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe-samples/accept-a-payment/main/custom-payment-flow&#34;&gt;Custom payment flow&lt;/a&gt; (&lt;a href=&#34;https://stripe.com/docs/payments/accept-card-payments?platform=web&amp;amp;ui=elements&#34;&gt;docs&lt;/a&gt;)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ACH Credit Transfer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ACH Debit&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Afterpay/Clearpay&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alipay&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Pay&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bacs Direct Debit&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bancontact&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BECS Direct Debit&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Boleto&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cards&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EPS&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FPX&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;giropay&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Google Pay&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GrabPay&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iDEAL&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Klarna&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Link&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Multibanco&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OXXO&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Przelewy24 (P24)&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SEPA Direct Debit&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sofort&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WeChat Pay&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The recommended way to use this Stripe Sample is with the &lt;a href=&#34;https://stripe.com/docs/stripe-cli#install&#34;&gt;Stripe CLI&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;stripe samples create accept-a-payment&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also clone the repository, but there is a bit more manual setup work to configure the &lt;code&gt;.env&lt;/code&gt; environment variable file in the server directory.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll find more detailed instructions for each integration type in the relevant READMEs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe-samples/accept-a-payment/main/prebuilt-checkout-page/README.md&#34;&gt;Prebuilt Checkout page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe-samples/accept-a-payment/main/payment-element/README.md&#34;&gt;Payment Element&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stripe-samples/accept-a-payment/main/custom-payment-flow/README.md&#34;&gt;Custom payment flow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Q: Why did you pick these frameworks?&lt;/p&gt; &#xA;&lt;p&gt;A: We chose the most minimal framework to convey the key Stripe calls and concepts you need to understand. These demos are meant as an educational tool that helps you roadmap how to integrate Stripe within your own system independent of the framework.&lt;/p&gt; &#xA;&lt;h2&gt;Get support&lt;/h2&gt; &#xA;&lt;p&gt;If you found a bug or want to suggest a new [feature/use case/sample], please &lt;a href=&#34;https://raw.githubusercontent.com/stripe-samples/issues&#34;&gt;file an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have questions, comments, or need help with code, we&#39;re here to help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;on &lt;a href=&#34;https://stripe.com/go/developer-chat&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;on Twitter at &lt;a href=&#34;https://twitter.com/StripeDev&#34;&gt;@StripeDev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;on Stack Overflow at the &lt;a href=&#34;https://stackoverflow.com/tags/stripe-payments/info&#34;&gt;stripe-payments&lt;/a&gt; tag&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sign up to &lt;a href=&#34;https://go.stripe.global/dev-digest&#34;&gt;stay updated with developer news&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/stripe-samples/accept-a-payment/main/TESTING.md&#34;&gt;TESTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running samples with Dev Containers or Codespaces&lt;/h2&gt; &#xA;&lt;p&gt;We provide &lt;a href=&#34;https://containers.dev/&#34;&gt;Dev Container&lt;/a&gt; configurations for most of the sample apps for web. For the Visual Studio Code example, by hitting &lt;code&gt;Reopen in Containers&lt;/code&gt; in the Command Pallete and choosing a sample from the options prompted, dedicated Docker containers for the sample will be automatically created.&lt;/p&gt; &#xA;&lt;p&gt;You can also try these samples even without installing Docker on your machine by using &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;. A sample app codespace can be created by clicking &#34;New with options...&#34; below and choosing a sample app from the Dev container configuration select box. &lt;strong&gt;Note that in this case, you would be charged for usage of GitHub Codespaces.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/stripe-samples/accept-a-payment/assets/43346/9db4688c-a71d-4624-80f1-4b79c5cae44d&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Running server app samples&lt;/h3&gt; &#xA;&lt;p&gt;After launching the environment, a couple of setup steps would be needed to launch the web app. For the NodeJS (&lt;code&gt;custom-payment-flow-server-node&lt;/code&gt;) example:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Export the required environment variables &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;export STRIPE_PUBLISHABLE_KEY=XXXX&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;export STRIPE_SECRET_KEY=XXXX&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;export PRICE=XXXX&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the dependencies and run the web server. For NodeJS example, &lt;code&gt;npm install &amp;amp;&amp;amp; npm run start&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can also run some tests for the server app by the following steps. This example is a little hacky as we need to use SSH to run a test command in another container (&lt;code&gt;runner&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;ssh-keygen&lt;/code&gt; and &lt;code&gt;chmod 600 ~/.ssh/*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Login to the test runner service with &lt;code&gt;ssh runner&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Move to the working dir with &lt;code&gt;cd /work&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Export the required environment variables &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;export $(cat .devcontainer/.env | xargs)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;export STRIPE_PUBLISHABLE_KEY=XXXX&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;export STRIPE_SECRET_KEY=XXXX&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;export PRICE=XXXX&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run tests like &lt;code&gt;bundle exec rspec spec/custom_payment_flow_server_spec.rb &lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Running client app samples&lt;/h3&gt; &#xA;&lt;p&gt;After launching the environment, a couple of setup steps would be needed to launch the app. For the Create React App (&lt;code&gt;custom-payment-flow-client-react-cra&lt;/code&gt;) example:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Export the required environment variables &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;export STRIPE_PUBLISHABLE_KEY=XXXX&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;export STRIPE_SECRET_KEY=XXXX&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;export PRICE=XXXX&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the dependencies and run the node web server by running &lt;code&gt;cd ../../server/node &amp;amp;&amp;amp; npm install &amp;amp;&amp;amp; npm run start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;In another terminal, install the dependencies and run the client app by running &lt;code&gt;npm install &amp;amp;&amp;amp; npm start&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;📝&lt;/span&gt; You might want to set &lt;code&gt;server.hmr.port&lt;/code&gt; to &lt;code&gt;443&lt;/code&gt; in &lt;code&gt;vite.config.js&lt;/code&gt; (&lt;a href=&#34;https://github.com/vitejs/vite/issues/4259&#34;&gt;related issue&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/cjav_dev&#34;&gt;@cjav_dev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/thorwebdev&#34;&gt;@thorwebdev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aliriaz-stripe&#34;&gt;@aliriaz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/charlesw_dev&#34;&gt;@charlesw&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/stripe-samples/accept-a-payment/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=stripe-samples/accept-a-payment&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Made with &lt;a href=&#34;https://contrib.rocks&#34;&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>KaTeX/KaTeX</title>
    <updated>2024-09-07T01:31:02Z</updated>
    <id>tag:github.com,2024-09-07:/KaTeX/KaTeX</id>
    <link href="https://github.com/KaTeX/KaTeX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast math typesetting for the web.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://katex.org/&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://katex.org/img/katex-logo.svg&#34;&gt; &#xA;   &lt;img alt=&#34;KaTeX&#34; width=&#34;130&#34; src=&#34;https://katex.org/img/katex-logo-black.svg?sanitize=true&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/katex&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/katex.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/semantic-release/semantic-release&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&#34; alt=&#34;semantic-release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/KaTeX/KaTeX/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/KaTeX/KaTeX/workflows/CI/badge.svg?branch=main&amp;amp;event=push&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/KaTeX/KaTeX&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/KaTeX/KaTeX/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/KaTeX/KaTeX/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discussions-join-brightgreen&#34; alt=&#34;Discussions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jsdelivr.com/package/npm/katex&#34;&gt;&lt;img src=&#34;https://data.jsdelivr.com/v1/package/npm/katex/badge?style=rounded&#34; alt=&#34;jsDelivr&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.badgesize.io/https://unpkg.com/katex/dist/katex.min.js?compression=gzip&#34; alt=&#34;katex.min.js size&#34;&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/KaTeX/KaTeX&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&#34; alt=&#34;Gitpod ready-to-code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/katex&#34;&gt;&lt;img src=&#34;https://opencollective.com/katex/all/badge.svg?label=financial+contributors&#34; alt=&#34;Financial Contributors on Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast:&lt;/strong&gt; KaTeX renders its math synchronously and doesn&#39;t need to reflow the page. See how it compares to a competitor in &lt;a href=&#34;https://www.intmath.com/cg5/katex-mathjax-comparison.php&#34;&gt;this speed test&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Print quality:&lt;/strong&gt; KaTeX&#39;s layout is based on Donald Knuth&#39;s TeX, the gold standard for math typesetting.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Self contained:&lt;/strong&gt; KaTeX has no dependencies and can easily be bundled with your website resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Server side rendering:&lt;/strong&gt; KaTeX produces the same output regardless of browser or environment, so you can pre-render expressions using Node.js and send them as plain HTML.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;KaTeX is compatible with all major browsers, including Chrome, Safari, Firefox, Opera, Edge, and IE 11.&lt;/p&gt; &#xA;&lt;p&gt;KaTeX supports much (but not all) of LaTeX and many LaTeX packages. See the &lt;a href=&#34;https://katex.org/docs/supported.html&#34;&gt;list of supported functions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Try out KaTeX &lt;a href=&#34;https://katex.org/#demo&#34;&gt;on the demo page&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Starter template&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;!-- KaTeX requires the use of the HTML5 doctype. Without it, KaTeX may not render properly --&amp;gt;&#xA;&amp;lt;html&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/katex@0.16.11/dist/katex.min.css&#34; integrity=&#34;sha384-nB0miv6/jRmo5UMMR1wu3Gz6NLsoTkbqJghGIsx//Rlm+ZU03BU6SQNC66uf4l5+&#34; crossorigin=&#34;anonymous&#34;&amp;gt;&#xA;&#xA;    &amp;lt;!-- The loading of KaTeX is deferred to speed up page rendering --&amp;gt;&#xA;    &amp;lt;script defer src=&#34;https://cdn.jsdelivr.net/npm/katex@0.16.11/dist/katex.min.js&#34; integrity=&#34;sha384-7zkQWkzuo3B5mTepMUcHkMB5jZaolc2xDwL6VFqjFALcbeS9Ggm/Yr2r3Dy4lfFg&#34; crossorigin=&#34;anonymous&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&#xA;    &amp;lt;!-- To automatically render math in text elements, include the auto-render extension: --&amp;gt;&#xA;    &amp;lt;script defer src=&#34;https://cdn.jsdelivr.net/npm/katex@0.16.11/dist/contrib/auto-render.min.js&#34; integrity=&#34;sha384-43gviWU0YVjaDtb/GhzOouOXtZMP/7XUzwPTstBeZFe/+rCMvRwr4yROQP43s0Xk&#34; crossorigin=&#34;anonymous&#34;&#xA;        onload=&#34;renderMathInElement(document.body);&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  ...&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also &lt;a href=&#34;https://github.com/KaTeX/KaTeX/releases&#34;&gt;download KaTeX&lt;/a&gt; and host it yourself.&lt;/p&gt; &#xA;&lt;p&gt;For details on how to configure auto-render extension, refer to &lt;a href=&#34;https://katex.org/docs/autorender.html&#34;&gt;the documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;p&gt;Call &lt;code&gt;katex.render&lt;/code&gt; to render a TeX expression directly into a DOM element. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;katex.render(&#34;c = \\pm\\sqrt{a^2 + b^2}&#34;, element, {&#xA;    throwOnError: false&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Call &lt;code&gt;katex.renderToString&lt;/code&gt; to generate an HTML string of the rendered math, e.g., for server-side rendering. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var html = katex.renderToString(&#34;c = \\pm\\sqrt{a^2 + b^2}&#34;, {&#xA;    throwOnError: false&#xA;});&#xA;// &#39;&amp;lt;span class=&#34;katex&#34;&amp;gt;...&amp;lt;/span&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure to include the CSS and font files in both cases. If you are doing all rendering on the server, there is no need to include the JavaScript on the client.&lt;/p&gt; &#xA;&lt;p&gt;The examples above use the &lt;code&gt;throwOnError: false&lt;/code&gt; option, which renders invalid inputs as the TeX source code in red (by default), with the error message as hover text. For other available options, see the &lt;a href=&#34;https://katex.org/docs/api.html&#34;&gt;API documentation&lt;/a&gt;, &lt;a href=&#34;https://katex.org/docs/options.html&#34;&gt;options documentation&lt;/a&gt;, and &lt;a href=&#34;https://katex.org/docs/error.html&#34;&gt;handling errors documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Demo and Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Learn more about using KaTeX &lt;a href=&#34;https://katex.org&#34;&gt;on the website&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;h3&gt;Code Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute code. If you&#39;d like to help, see &lt;a href=&#34;https://raw.githubusercontent.com/KaTeX/KaTeX/main/CONTRIBUTING.md&#34;&gt;our guide to contributing code&lt;/a&gt;. &lt;a href=&#34;https://github.com/KaTeX/KaTeX/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contributors-svg.opencollective.com/katex/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;Code contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Financial Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Become a financial contributor and help us sustain our community.&lt;/p&gt; &#xA;&lt;h4&gt;Individuals&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/katex&#34;&gt;&lt;img src=&#34;https://opencollective.com/katex/individuals.svg?width=890&#34; alt=&#34;Contribute on Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Organizations&lt;/h4&gt; &#xA;&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/katex/organization/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/katex/organization/0/avatar.svg?sanitize=true&#34; alt=&#34;Organization 1&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/katex/organization/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/katex/organization/1/avatar.svg?sanitize=true&#34; alt=&#34;Organization 2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/katex/organization/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/katex/organization/2/avatar.svg?sanitize=true&#34; alt=&#34;Organization 3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/katex/organization/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/katex/organization/3/avatar.svg?sanitize=true&#34; alt=&#34;Organization 4&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/katex/organization/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/katex/organization/4/avatar.svg?sanitize=true&#34; alt=&#34;Organization 5&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/katex/organization/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/katex/organization/5/avatar.svg?sanitize=true&#34; alt=&#34;Organization 6&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/katex/organization/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/katex/organization/6/avatar.svg?sanitize=true&#34; alt=&#34;Organization 7&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/katex/organization/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/katex/organization/7/avatar.svg?sanitize=true&#34; alt=&#34;Organization 8&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/katex/organization/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/katex/organization/8/avatar.svg?sanitize=true&#34; alt=&#34;Organization 9&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/katex/organization/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/katex/organization/9/avatar.svg?sanitize=true&#34; alt=&#34;Organization 10&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;KaTeX is licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>