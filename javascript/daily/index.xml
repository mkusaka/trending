<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-23T01:31:53Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>koaning/drawdata</title>
    <updated>2025-01-23T01:31:53Z</updated>
    <id>tag:github.com,2025-01-23:/koaning/drawdata</id>
    <link href="https://github.com/koaning/drawdata" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Draw datasets from within Jupyter.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/koaning/drawdata/main/imgs/logo.png&#34; width=&#34;125&#34; height=&#34;125&#34; align=&#34;right&#34; style=&#34;z-index: 9999;&#34;&gt; &#xA;&lt;h3&gt;drawdata&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;Just draw some data and get on with your day.&#34;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This small Python library contains Jupyter widgets that allow you to draw a dataset in a Jupyter notebook. This should be very useful when teaching machine learning algorithms.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/koaning/drawdata/main/imgs/widget.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The project uses &lt;a href=&#34;https://anywidget.dev/&#34;&gt;anywidget&lt;/a&gt; under the hood so our tools should work in Jupyter, VSCode and Colab. That also means that you get a proper widget that can interact with &lt;a href=&#34;https://ipywidgets.readthedocs.io/en/stable/&#34;&gt;ipywidgets&lt;/a&gt; natively. &lt;a href=&#34;https://www.youtube.com/watch?v=STPv0jSAQEk&#34;&gt;Here&lt;/a&gt; is an example where updating a drawing triggers a new scikit-learn model to train (&lt;a href=&#34;https://github.com/probabl-ai/youtube-appendix/raw/main/04-drawing-data/notebook.ipynb&#34;&gt;code&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/koaning/drawdata/main/imgs/update.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can really get creative with this in a notebook, so feel free to give it a spin!&lt;/p&gt; &#xA;&lt;h4&gt;Installation&lt;/h4&gt; &#xA;&lt;p&gt;Installation occurs via pip.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m pip install drawdata&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To read the data, &lt;code&gt;polars&lt;/code&gt; is useful, but this library also suppots &lt;code&gt;pandas&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m pip install pandas polars&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Usage: &lt;code&gt;ScatterWidget&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;You can load the scatter widget to start drawing immediately.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from drawdata import ScatterWidget&#xA;&#xA;widget = ScatterWidget()&#xA;widget&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the dataset that you&#39;ve just drawn you can do so via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Get the drawn data as a list of dictionaries&#xA;widget.data&#xA;&#xA;# Get the drawn data as a dataframe&#xA;widget.data_as_pandas&#xA;widget.data_as_polars&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re eager to do scikit-learn stuff with your drawn data you may appreciate this property instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;X, y = widget.data_as_X_y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The assumption for this property is that if you&#39;ve used multiple colors that you&#39;re interested in doing classification and if you&#39;ve only drawn one color you&#39;re interested in regression. In the case of regression &lt;code&gt;y&lt;/code&gt; will refer to the y-axis.&lt;/p&gt; &#xA;&lt;h4&gt;Usage: &lt;code&gt;BarWidget&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from drawdata import BarWidget&#xA;&#xA;widget = BarWidget(collection_names=[&#34;usage&#34;, &#34;sunshine&#34;], n_bins=24)&#xA;widget&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/16c936c8-d310-4fa1-9057-6fb870d43db8&#34; alt=&#34;CleanShot_2024-12-01_at_21 19 19&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Shoutout&lt;/h4&gt; &#xA;&lt;p&gt;This project was originally part of my work over at &lt;a href=&#34;https://calmcode.io/labs/drawdata&#34;&gt;calmcode labs&lt;/a&gt; but my employer &lt;a href=&#34;https://probabl.ai&#34;&gt;probabl&lt;/a&gt; has been very supportive and has allowed me to work on this project during my working hours. This was super cool and I wanted to make sure I recognise them for it.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34; width=&#34;100%&#34; dir=&#34;auto&#34;&gt; &lt;a href=&#34;https://calmcode.io&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/koaning/drawdata/main/imgs/calmcode-logo.webp&#34; width=&#34;50%&#34; align=&#34;left&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://probabl.ai&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/koaning/drawdata/main/imgs/probabl.png&#34; width=&#34;40%&#34; align=&#34;right&#34;&gt; &lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Old Features&lt;/h3&gt; &#xA;&lt;p&gt;The original implementation of our widget would use an iframe to load a site in order to be able to draw from a Jupyter notebook. This works, but requires more manual effort, only works with &lt;code&gt;pandas&lt;/code&gt; via the clipboard feature and needs an internet connection. Here&#39;s what that widget looks like:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/koaning/drawdata/main/imgs/gif.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It will be kept around, but the way forward for this library is to build on top of anywidget.&lt;/p&gt; &#xA;&lt;h4&gt;Old Feature Usage&lt;/h4&gt; &#xA;&lt;p&gt;When you run this from jupyter, you should load in an iframe.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from drawdata import draw_scatter&#xA;&#xA;draw_scatter()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you&#39;re done drawing you can copy the data to the clipboard. After this you can use pandas to read the clipboard to get your drawn data into a dataframe.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd &#xA;pd.read_clipboard(sep=&#34;,&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>