<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-11T02:33:03Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lmsqueezy/nextjs-billing</title>
    <updated>2023-11-11T02:33:03Z</updated>
    <id>tag:github.com,2023-11-11:/lmsqueezy/nextjs-billing</id>
    <link href="https://github.com/lmsqueezy/nextjs-billing" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Next.js billing app with Lemon Squeezy&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lemon Squeezy Next.js Demo app&lt;/h1&gt; &#xA;&lt;p&gt;This Next.js demo app can be used as a base for building subscription-based SaaS apps.&lt;/p&gt; &#xA;&lt;p&gt;Just clone this repo and build your app alongside the ready-made auth and billing!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lemonsqueezy.com&#34;&gt;Lemon Squeezy&lt;/a&gt; for billing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://next-auth.js.org&#34;&gt;NextAuth.js&lt;/a&gt; for auth&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io&#34;&gt;Prisma&lt;/a&gt; ORM&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com&#34;&gt;Tailwind CSS&lt;/a&gt; for styling&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://resend.com&#34;&gt;Resend&lt;/a&gt; for auth emails&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Customer Portal vs Full billing section&lt;/h2&gt; &#xA;&lt;p&gt;This demo app comes with two versions of Lemon Squeezy billing.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The first option uses &lt;a href=&#34;https://docs.lemonsqueezy.com/help/online-store/customer-portal&#34;&gt;Lemon Squeezy&#39;s Customer Portal&lt;/a&gt; for managing subscriptions. It shows a &#34;Manage subscription&#34; button, which links out to the no-code Customer Portal where customers can manage their subscriptions, billing methods and view invoices.&lt;br&gt; This option uses the &lt;code&gt;PortalSubscriptionComponent&lt;/code&gt; component in &lt;code&gt;billing/page.jsx&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The second option is a more native billing section inside the app, with options for pausing, cancelling, updating plans and updating payment method. This option is more seamless inside your application and uses the &lt;a href=&#34;https://github.com/lmsqueezy/lemonsqueezy.js&#34;&gt;Lemon Squeezy SDK&lt;/a&gt; to make changes to subscriptions.&lt;br&gt; This option uses the &lt;code&gt;SubscriptionComponent&lt;/code&gt; component in &lt;code&gt;billing/page.jsx&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Note that both options require webhooks so that the underlying subscription data in the application is always up-to-date. A way to ingest webhooks is included in the app.&lt;/p&gt; &#xA;&lt;h2&gt;How to set up a test version of the app&lt;/h2&gt; &#xA;&lt;p&gt;First, fork this repo and set up a project locally on your computer.&lt;/p&gt; &#xA;&lt;p&gt;Next, you need a Lemon Squeezy account and store. If you don&#39;t have one already, sign up at &lt;a href=&#34;https://app.lemonsqueezy.com/register&#34;&gt;app.lemonsqueezy.com/register&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once you have created a store, make sure you&#39;re in Test mode, then go to &lt;a href=&#34;https://app.lemonsqueezy.com/settings/api&#34;&gt;Settings &amp;gt; API&lt;/a&gt; and create a new API key. Copy the key and paste it into &lt;code&gt;.env.example&lt;/code&gt; file where it says &lt;code&gt;LEMONSQUEEZY_API_KEY=&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will also need the store ID from Lemon Squeezy for &lt;code&gt;LEMONSQUEEZY_STORE_ID&lt;/code&gt;, which you can find in the list at &lt;a href=&#34;https://app.lemonsqueezy.com/settings/stores&#34;&gt;Settings &amp;gt; Stores&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are also a few other environment variables, which are all listed in &lt;code&gt;.env.example&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;DATABASE_URL&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;RESEND_API_KEY&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EMAIL_FROM_DEFAULT&lt;/code&gt; - The email address you send emails from&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NEXT_PUBLIC_EMAIL_FROM_DEFAULT&lt;/code&gt; - Same as &lt;code&gt;EMAIL_FROM_DEFAULT&lt;/code&gt;. &lt;a href=&#34;https://nextjs.org/docs/pages/building-your-application/configuring/environment-variables#bundling-environment-variables-for-the-browser&#34;&gt;Read about browser variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NEXT_PUBLIC_ROOT_DOMAIN&lt;/code&gt; - The root domain of your site eg localhost:3000 or mydomain.com. &lt;a href=&#34;https://nextjs.org/docs/pages/building-your-application/configuring/environment-variables#bundling-environment-variables-for-the-browser&#34;&gt;Read about browser variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NEXTAUTH_URL&lt;/code&gt; - The URL of your site eg &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; or &lt;a href=&#34;https://mydomain.com&#34;&gt;https://mydomain.com&lt;/a&gt;. &lt;a href=&#34;https://next-auth.js.org/configuration/options&#34;&gt;Read more&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NEXTAUTH_SECRET&lt;/code&gt; - A secret used for auth. &lt;a href=&#34;https://next-auth.js.org/configuration/options&#34;&gt;Read more&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When you&#39;re done, rename the file &lt;code&gt;.env&lt;/code&gt; so your app can read it.&lt;/p&gt; &#xA;&lt;p&gt;Now, to get the code working on your computer or server, run &lt;code&gt;npm install&lt;/code&gt; and then &lt;code&gt;npm run dev&lt;/code&gt; to get the local server running.&lt;/p&gt; &#xA;&lt;p&gt;Your site will load at &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to set up webhooks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is a required step.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For your app to receive data from Lemon Squeezy, you need to set up webhooks in your Lemon Squeezy store at &lt;a href=&#34;https://app.lemonsqueezy.com/settings/webhooks&#34;&gt;Settings &amp;gt; Webhooks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you create a webhook, you should check at least these two events:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;subscription_created&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;subscription_updated&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This app demo only processes these two events, but they are enough to get a billing system in place. You could, for example, extend the app to handle successful payment events to list invoices in your billing system (by subscribing to &lt;code&gt;subscription_payment_success&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The webhook endpoint in your app is &lt;code&gt;/billing/webhook&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In the webhook form you need to add a signing secret. Add the same value you use in the form in the &lt;code&gt;LEMONSQUEEZY_WEBHOOK_SECRET&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;h3&gt;How to work with webhooks locally&lt;/h3&gt; &#xA;&lt;p&gt;Your local app will need to be able to receive webhook events, which means creating a web-accessible URL for your development project. This is not available when running your site on its local server without some sort of tunnel.&lt;/p&gt; &#xA;&lt;p&gt;An easy way to set one up is using a service like &lt;a href=&#34;https://ngrok.com/&#34;&gt;ngrok&lt;/a&gt; or an app like &lt;a href=&#34;https://www.localcan.com/&#34;&gt;LocalCan&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once you are provided a URL by these services, simply add use that in your webhook settings form (make sure you add the path &lt;code&gt;/billing/webhook&lt;/code&gt; to the end of the tunnel URL).&lt;/p&gt; &#xA;&lt;h2&gt;How to go live&lt;/h2&gt; &#xA;&lt;p&gt;There are a few things to update in your code to go live.&lt;/p&gt; &#xA;&lt;p&gt;You need to switch out of live mode in your Lemon Squeezy store and add a new live mode API key. Add this API key as an environment variable in your live server, using the same name &lt;code&gt;LEMONSQUEEZY_API_KEY&lt;/code&gt;. Your store ID remains the same in both test and live mode, so add that to your server environment variables, as you did for your development site.&lt;/p&gt; &#xA;&lt;p&gt;You also need to create a new webhook in your live store. Make sure you add the signing secret into the &lt;code&gt;LEMONSQUEEZY_WEBHOOK_SECRET&lt;/code&gt; variable on your server.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>safak/nextadmin</title>
    <updated>2023-11-11T02:33:03Z</updated>
    <id>tag:github.com,2023-11-11:/safak/nextadmin</id>
    <link href="https://github.com/safak/nextadmin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is a &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; project bootstrapped with &lt;a href=&#34;https://github.com/vercel/next.js/tree/canary/packages/create-next-app&#34;&gt;&lt;code&gt;create-next-app&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;First, run the development server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;# or&#xA;yarn dev&#xA;# or&#xA;pnpm dev&#xA;# or&#xA;bun dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt; &#xA;&lt;p&gt;You can start editing the page by modifying &lt;code&gt;app/page.js&lt;/code&gt;. The page auto-updates as you edit the file.&lt;/p&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://nextjs.org/docs/basic-features/font-optimization&#34;&gt;&lt;code&gt;next/font&lt;/code&gt;&lt;/a&gt; to automatically optimize and load Inter, a custom Google Font.&lt;/p&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about Next.js, take a look at the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs&#34;&gt;Next.js Documentation&lt;/a&gt; - learn about Next.js features and API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/learn&#34;&gt;Learn Next.js&lt;/a&gt; - an interactive Next.js tutorial.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can check out &lt;a href=&#34;https://github.com/vercel/next.js/&#34;&gt;the Next.js GitHub repository&lt;/a&gt; - your feedback and contributions are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Deploy on Vercel&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to deploy your Next.js app is to use the &lt;a href=&#34;https://vercel.com/new?utm_medium=default-template&amp;amp;filter=next.js&amp;amp;utm_source=create-next-app&amp;amp;utm_campaign=create-next-app-readme&#34;&gt;Vercel Platform&lt;/a&gt; from the creators of Next.js.&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://nextjs.org/docs/deployment&#34;&gt;Next.js deployment documentation&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>playcanvas/engine</title>
    <updated>2023-11-11T02:33:03Z</updated>
    <id>tag:github.com,2023-11-11:/playcanvas/engine</id>
    <link href="https://github.com/playcanvas/engine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast and lightweight JavaScript game engine built on WebGL and glTF&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;200&#34; src=&#34;https://s3-eu-west-1.amazonaws.com/static.playcanvas.com/platform/images/logo/playcanvas-logo-medium.png&#34;&gt; &#xA; &lt;h1&gt;PlayCanvas WebGL Game Engine&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://developer.playcanvas.com&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://playcanvas.github.io&#34;&gt;Examples&lt;/a&gt; | &lt;a href=&#34;https://forum.playcanvas.com&#34;&gt;Forum&lt;/a&gt; | &lt;a href=&#34;https://blog.playcanvas.com&#34;&gt;Blog&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;PlayCanvas is an open-source game engine. It uses HTML5 and WebGL to run games and other interactive 3D content in any mobile or desktop browser.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/playcanvas&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/playcanvas&#34; alt=&#34;NPM version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bundlephobia.com/result?p=playcanvas&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/playcanvas&#34; alt=&#34;Minzipped size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/playcanvas/engine/context:javascript&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/javascript/g/playcanvas/engine.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: JavaScript&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://isitmaintained.com/project/playcanvas/engine&#34;&gt;&lt;img src=&#34;https://isitmaintained.com/badge/resolution/playcanvas/engine.svg?sanitize=true&#34; alt=&#34;Average time to resolve an issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://isitmaintained.com/project/playcanvas/engine&#34;&gt;&lt;img src=&#34;https://isitmaintained.com/badge/open/playcanvas/engine.svg?sanitize=true&#34; alt=&#34;Percentage of issues still open&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=playcanvas&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/playcanvas.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/playcanvas/engine/raw/dev/README.md&#34;&gt;English&lt;/a&gt; &lt;a href=&#34;https://github.com/playcanvas/engine/raw/dev/README-zh.md&#34;&gt;中文&lt;/a&gt; &lt;a href=&#34;https://github.com/playcanvas/engine/raw/dev/README-ja.md&#34;&gt;日本語&lt;/a&gt; &lt;a href=&#34;https://github.com/playcanvas/engine/raw/dev/README-kr.md&#34;&gt;한글&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h2&gt;Project Showcase&lt;/h2&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/playcanvas/awesome-playcanvas#awesome-playcanvas-&#34;&gt;Many games and apps&lt;/a&gt; have been published using the PlayCanvas engine. Here is a small selection:&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://playcanv.as/p/MflWvdTW/&#34;&gt;&lt;img src=&#34;https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/14705/319531/O4J4VU-image-25.jpg&#34; alt=&#34;Seemore&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://playcanv.as/p/44MRmJRU/&#34;&gt;&lt;img src=&#34;https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/14928/440410/98554E-image-25.jpg&#34; alt=&#34;After The Flood&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://playcanv.as/p/LpmXGUe6/&#34;&gt;&lt;img src=&#34;https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/14928/349824/U88HJQ-image-25.jpg&#34; alt=&#34;Casino&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://playcanv.as/p/JtL2iqIH/&#34;&gt;&lt;img src=&#34;https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/4763/TKYXB8-image-25.jpg&#34; alt=&#34;Swooop&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://playcanv.as/p/JERg21J8/&#34;&gt;&lt;img src=&#34;https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/415995/10A5A9-image-25.jpg&#34; alt=&#34;dev Archer&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://playcanv.as/p/2OlkUaxF/&#34;&gt;&lt;img src=&#34;https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/8/375389/23PRTL-image-25.jpg&#34; alt=&#34;Flappy Bird&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://playcanv.as/p/RqJJ9oU9/&#34;&gt;&lt;img src=&#34;https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/347824/7ULQ3Y-image-25.jpg&#34; alt=&#34;Car&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://playcanv.as/p/SA7hVBLt/&#34;&gt;&lt;img src=&#34;https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/333626/BGQN9H-image-25.jpg&#34; alt=&#34;Star-Lord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://playcanv.as/p/ZV4PW6wr/&#34;&gt;&lt;img src=&#34;https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/4373/625081/6AB32D-image-25.jpg&#34; alt=&#34;Global Illumination&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;You can see more games on the &lt;a href=&#34;https://playcanvas.com/explore&#34;&gt;PlayCanvas website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Users&lt;/h2&gt; &#xA;&lt;p&gt;PlayCanvas is used by leading companies in video games, advertising and visualization such as:&lt;br&gt; &lt;strong&gt;Animech, Arm, BMW, Disney, Facebook, Famobi, Funday Factory, IGT, King, Miniclip, Leapfrog, Mojiworks, Mozilla, Nickelodeon, Nordeus, NOWWA, PikPok, PlaySide Studios, Polaris, Product Madness, Samsung, Snap, Spry Fox, Zeptolab, Zynga&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;PlayCanvas is a fully featured game engine.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🧊 &lt;strong&gt;Graphics&lt;/strong&gt; - Advanced 2D + 3D graphics engine built on WebGL 1 &amp;amp; 2.&lt;/li&gt; &#xA; &lt;li&gt;🏃 &lt;strong&gt;Animation&lt;/strong&gt; - Powerful state-based animations for characters and arbitrary scene properties&lt;/li&gt; &#xA; &lt;li&gt;⚛️ &lt;strong&gt;Physics&lt;/strong&gt; - Full integration with 3D rigid-body physics engine &lt;a href=&#34;https://github.com/kripken/ammo.js&#34;&gt;ammo.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🎮 &lt;strong&gt;Input&lt;/strong&gt; - Mouse, keyboard, touch, gamepad and VR controller APIs&lt;/li&gt; &#xA; &lt;li&gt;🔊 &lt;strong&gt;Sound&lt;/strong&gt; - 3D positional sounds built on the Web Audio API&lt;/li&gt; &#xA; &lt;li&gt;📦 &lt;strong&gt;Assets&lt;/strong&gt; - Asynchronous streaming system built on &lt;a href=&#34;https://www.khronos.org/gltf/&#34;&gt;glTF 2.0&lt;/a&gt;, &lt;a href=&#34;https://google.github.io/draco/&#34;&gt;Draco&lt;/a&gt; and &lt;a href=&#34;https://github.com/BinomialLLC/basis_universal&#34;&gt;Basis&lt;/a&gt; compression&lt;/li&gt; &#xA; &lt;li&gt;📜 &lt;strong&gt;Scripts&lt;/strong&gt; - Write game behaviors in Typescript or JavaScript&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a super-simple Hello World example - a spinning cube!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html&amp;gt;&#xA;&amp;lt;head&amp;gt;&#xA;    &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;&#xA;    &amp;lt;title&amp;gt;PlayCanvas Hello Cube&amp;lt;/title&amp;gt;&#xA;    &amp;lt;meta name=&#39;viewport&#39; content=&#39;width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no&#39; /&amp;gt;&#xA;    &amp;lt;style&amp;gt;&#xA;        body {&#xA;            margin: 0;&#xA;            overflow: hidden;&#xA;        }&#xA;    &amp;lt;/style&amp;gt;&#xA;    &amp;lt;script src=&#39;https://code.playcanvas.com/playcanvas-stable.min.js&#39;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;/head&amp;gt;&#xA;&amp;lt;body&amp;gt;&#xA;    &amp;lt;canvas id=&#39;application&#39;&amp;gt;&amp;lt;/canvas&amp;gt;&#xA;    &amp;lt;script&amp;gt;&#xA;        // create a PlayCanvas application&#xA;        const canvas = document.getElementById(&#39;application&#39;);&#xA;        const app = new pc.Application(canvas);&#xA;&#xA;        // fill the available space at full resolution&#xA;        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);&#xA;        app.setCanvasResolution(pc.RESOLUTION_AUTO);&#xA;&#xA;        // ensure canvas is resized when window changes size&#xA;        window.addEventListener(&#39;resize&#39;, () =&amp;gt; app.resizeCanvas());&#xA;&#xA;        // create box entity&#xA;        const box = new pc.Entity(&#39;cube&#39;);&#xA;        box.addComponent(&#39;model&#39;, {&#xA;            type: &#39;box&#39;&#xA;        });&#xA;        app.root.addChild(box);&#xA;&#xA;        // create camera entity&#xA;        const camera = new pc.Entity(&#39;camera&#39;);&#xA;        camera.addComponent(&#39;camera&#39;, {&#xA;            clearColor: new pc.Color(0.1, 0.1, 0.1)&#xA;        });&#xA;        app.root.addChild(camera);&#xA;        camera.setPosition(0, 0, 3);&#xA;&#xA;        // create directional light entity&#xA;        const light = new pc.Entity(&#39;light&#39;);&#xA;        light.addComponent(&#39;light&#39;);&#xA;        app.root.addChild(light);&#xA;        light.setEulerAngles(45, 0, 0);&#xA;&#xA;        // rotate the box according to the delta time since the last frame&#xA;        app.on(&#39;update&#39;, dt =&amp;gt; box.rotate(10 * dt, 20 * dt, 30 * dt));&#xA;&#xA;        app.start();&#xA;    &amp;lt;/script&amp;gt;&#xA;&amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Want to play with the code yourself? Edit it on &lt;a href=&#34;https://codepen.io/playcanvas/pen/NPbxMj&#34;&gt;CodePen&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;p&gt;Ensure you have &lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt; installed. Then, install all of the required Node.js dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can run various build options:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Outputs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;npm run build&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build release, min, debug and profiler engines&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;build\playcanvas[.min/.dbg/.prf].[mjs/js]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;npm run build:es5&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build release, min, debug and profiler engines for es5 only&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;build\playcanvas[.min/.dbg/.prf].js&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;npm run build:release&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build release engine for es5 and es6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;build\playcanvas.[mjs/js]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;npm run build:types&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build engine Typescript bindings&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;build\playcanvas.d.ts&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;npm run docs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build engine &lt;a href=&#34;https://developer.playcanvas.com/en/api/&#34;&gt;API reference docs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Pre-built versions of the engine are also available.&lt;/p&gt; &#xA;&lt;p&gt;Latest development release (head revision of dev branch):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.playcanvas.com/playcanvas-latest.js&#34;&gt;https://code.playcanvas.com/playcanvas-latest.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.playcanvas.com/playcanvas-latest.min.js&#34;&gt;https://code.playcanvas.com/playcanvas-latest.min.js&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Latest stable release:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.playcanvas.com/playcanvas-stable.js&#34;&gt;https://code.playcanvas.com/playcanvas-stable.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.playcanvas.com/playcanvas-stable.min.js&#34;&gt;https://code.playcanvas.com/playcanvas-stable.min.js&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Specific engine versions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.playcanvas.com/playcanvas-1.38.4.js&#34;&gt;https://code.playcanvas.com/playcanvas-1.38.4.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.playcanvas.com/playcanvas-1.38.4.min.js&#34;&gt;https://code.playcanvas.com/playcanvas-1.38.4.min.js&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Generate Source Maps&lt;/h3&gt; &#xA;&lt;p&gt;To build the source map to allow for easier engine debugging, you can add &lt;code&gt;-- -m&lt;/code&gt; to any engine build command. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run build -- -m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will output to &lt;code&gt;build/playcanvas.js.map&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;PlayCanvas Editor&lt;/h2&gt; &#xA;&lt;p&gt;The PlayCanvas Engine is an open source engine which you can use to create HTML5 apps/games. In addition to the engine, we also make the &lt;a href=&#34;https://playcanvas.com/&#34;&gt;PlayCanvas Editor&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/playcanvas/editor&#34;&gt;&lt;img src=&#34;https://github.com/playcanvas/editor/raw/main/images/editor.png?raw=true&#34; alt=&#34;Editor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For Editor related bugs and issues, please refer to the &lt;a href=&#34;https://github.com/playcanvas/editor&#34;&gt;Editor&#39;s repo&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>