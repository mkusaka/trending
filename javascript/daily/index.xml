<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-30T01:31:33Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>levinunnink/html-form-to-google-sheet</title>
    <updated>2023-08-30T01:31:33Z</updated>
    <id>tag:github.com,2023-08-30:/levinunnink/html-form-to-google-sheet</id>
    <link href="https://github.com/levinunnink/html-form-to-google-sheet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;How to submit HTML forms to Google Sheets. (Updated for 2023 Script Editor)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Submit a HTML form to Google Sheets&lt;/h1&gt; &#xA;&lt;p&gt;How to submit a simple HTML form to a Google Sheet using only HTML and JavaScript. &lt;em&gt;Updated for Google Script Editor 2022 Version.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This example shows how to set up a mailing list form that sends data to Google Sheets but you can use it for any sort of data.&lt;/p&gt; &#xA;&lt;h3&gt;1. Set up a Google Sheet&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://sheets.google.com&#34;&gt;Google Sheets&lt;/a&gt; and create a new sheet. This is where we&#39;ll store the form data.&lt;/li&gt; &#xA; &lt;li&gt;Set the following headers in the first row:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;A&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;B&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;C&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;...&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Date&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Email&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Name&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;2. Create a Google App Script&lt;/h3&gt; &#xA;&lt;img src=&#34;https://sheetmonkey.io/img/guides/1-app-script.gif?ts=1&#34; width=&#34;450&#34;&gt; &#xA;&lt;p&gt;Click on &lt;code&gt;Extensions -&amp;gt; Apps Script&lt;/code&gt;. This will open new Google Script. Rename it to something like &lt;em&gt;&#34;Mailing List&#34;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://sheetmonkey.io/img/guides/2-script-editor.png&#34; width=&#34;450&#34;&gt; &#xA;&lt;p&gt;Replace the &lt;code&gt;myFunction() { ...&lt;/code&gt; section with the following code snippet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Original code from https://github.com/jamiewilson/form-to-google-sheets&#xA;// Updated for 2021 and ES6 standards&#xA;&#xA;const sheetName = &#39;Sheet1&#39;&#xA;const scriptProp = PropertiesService.getScriptProperties()&#xA;&#xA;function initialSetup () {&#xA;  const activeSpreadsheet = SpreadsheetApp.getActiveSpreadsheet()&#xA;  scriptProp.setProperty(&#39;key&#39;, activeSpreadsheet.getId())&#xA;}&#xA;&#xA;function doPost (e) {&#xA;  const lock = LockService.getScriptLock()&#xA;  lock.tryLock(10000)&#xA;&#xA;  try {&#xA;    const doc = SpreadsheetApp.openById(scriptProp.getProperty(&#39;key&#39;))&#xA;    const sheet = doc.getSheetByName(sheetName)&#xA;&#xA;    const headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0]&#xA;    const nextRow = sheet.getLastRow() + 1&#xA;&#xA;    const newRow = headers.map(function(header) {&#xA;      return header === &#39;Date&#39; ? new Date() : e.parameter[header]&#xA;    })&#xA;&#xA;    sheet.getRange(nextRow, 1, 1, newRow.length).setValues([newRow])&#xA;&#xA;    return ContentService&#xA;      .createTextOutput(JSON.stringify({ &#39;result&#39;: &#39;success&#39;, &#39;row&#39;: nextRow }))&#xA;      .setMimeType(ContentService.MimeType.JSON)&#xA;  }&#xA;&#xA;  catch (e) {&#xA;    return ContentService&#xA;      .createTextOutput(JSON.stringify({ &#39;result&#39;: &#39;error&#39;, &#39;error&#39;: e }))&#xA;      .setMimeType(ContentService.MimeType.JSON)&#xA;  }&#xA;&#xA;  finally {&#xA;    lock.releaseLock()&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Save the project before moving on to the next step.&lt;/p&gt; &#xA;&lt;h3&gt;3. Run the initialSetup function&lt;/h3&gt; &#xA;&lt;img src=&#34;https://sheetmonkey.io/img/guides/3-initial-setup.png&#34; width=&#34;450&#34;&gt; &#xA;&lt;p&gt;You should see a modal asking for permissions. Click &lt;code&gt;Review permissions&lt;/code&gt; and continue to the next screen.&lt;/p&gt; &#xA;&lt;p&gt;Because this script has not been reviewed by Google, it will generate a warning before you can continue. You must click the &#34;Go to Mailing List (Unsafe)&#34; for the script to have the correct permissions to update your form.&lt;/p&gt; &#xA;&lt;img src=&#34;https://sheetmonkey.io/img/guides/5-warning.png&#34; width=&#34;450&#34;&gt; &#xA;&lt;p&gt;After giving the script the correct permissions, you should see the following output in the script editor console:&lt;/p&gt; &#xA;&lt;img src=&#34;https://sheetmonkey.io/img/guides/6-success.png&#34; width=&#34;450&#34;&gt; &#xA;&lt;p&gt;Now your script has the correct permissions to continue to the next step.&lt;/p&gt; &#xA;&lt;h3&gt;4. Add a trigger for the script&lt;/h3&gt; &#xA;&lt;img src=&#34;https://sheetmonkey.io/img/guides/7-triggers.png&#34; width=&#34;450&#34;&gt; &#xA;&lt;p&gt;Select the project &#34;Triggers&#34; from the sidebar and then click the &lt;code&gt;Add Trigger&lt;/code&gt; button.&lt;/p&gt; &#xA;&lt;p&gt;In the window that appears, select the following options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Choose which function to run: &lt;code&gt;doPost&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Choose which deployment should run: &lt;code&gt;Head&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select event source: &lt;code&gt;From spreadsheet&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select event type: &lt;code&gt;On form submit&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://sheetmonkey.io/img/guides/8-trigger-config.png&#34; width=&#34;450&#34;&gt; &#xA;&lt;p&gt;Then select &#34;Save&#34;.&lt;/p&gt; &#xA;&lt;h3&gt;5. Publish the project&lt;/h3&gt; &#xA;&lt;p&gt;Now your project is ready to publish. Select the &lt;code&gt;Deploy&lt;/code&gt; button and &lt;code&gt;New Deployment&lt;/code&gt; from the drop-down.&lt;/p&gt; &#xA;&lt;img src=&#34;https://sheetmonkey.io/img/guides/9-deploy.gif&#34; width=&#34;450&#34;&gt; &#xA;&lt;p&gt;Click the &#34;Select type&#34; icon and select &lt;code&gt;Web app&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In the form that appears, select the following options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Description: &lt;code&gt;Mailing List Form&lt;/code&gt; (This can be anything that you want. Just make it descriptive.)&lt;/li&gt; &#xA; &lt;li&gt;Web app â†’ Execute As: &lt;code&gt;Me&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Web app â†’ Who has access: &lt;code&gt;Anyone&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then click &lt;code&gt;Deploy&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Copy and save the web app URL before moving on to the next step.&lt;/p&gt; &#xA;&lt;h3&gt;6. Configure your HTML form&lt;/h3&gt; &#xA;&lt;p&gt;Create a HTML form like the following, replacing &lt;code&gt;YOUR_WEBAPP_URL&lt;/code&gt; with the URL you saved from the previous step.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;form &#xA;  method=&#34;POST&#34; &#xA;  action=&#34;YOUR_WEBAPP_URL&#34;&#xA;&amp;gt;&#xA;  &amp;lt;input name=&#34;Email&#34; type=&#34;email&#34; placeholder=&#34;Email&#34; required&amp;gt;&#xA;  &amp;lt;input name=&#34;Name&#34; type=&#34;text&#34; placeholder=&#34;Name&#34; required&amp;gt;&#xA;  &amp;lt;button type=&#34;submit&#34;&amp;gt;Send&amp;lt;/button&amp;gt;&#xA;&amp;lt;/form&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now when you submit this form from any location, the data will be saved in the Google Sheet. ðŸ¥³&lt;/p&gt; &#xA;&lt;img src=&#34;https://sheetmonkey.io/img/guides/10-working-form.gif&#34; width=&#34;450&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Please note:&lt;/strong&gt; The input names are &lt;em&gt;case sensitive&lt;/em&gt;. They must match the same casing as the script. More here: &lt;a href=&#34;https://github.com/levinunnink/html-form-to-google-sheet/issues/3#issuecomment-1054464935&#34;&gt;https://github.com/levinunnink/html-form-to-google-sheet/issues/3#issuecomment-1054464935&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: If you want to intercept the submit event so the user isn&#39;t redirected to the webapp, &lt;a href=&#34;https://codepen.io/levinunnink-the-bashful/pen/YzxPyoG?editors=0010&#34;&gt;you can do this by attaching a JavaScript event listener to the form submission and creating the &lt;code&gt;POST&lt;/code&gt; request yourself&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Issues?&lt;/h2&gt; &#xA;&lt;p&gt;If you want to submit your HTML forms to Google Sheets without using App scripts, try a free service like &lt;a href=&#34;https://sheetmonkey.io&#34;&gt;Sheet Monkey&lt;/a&gt;, which allows you to do submit forms to Google Sheets without any backend code.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to the following articles and projects that inspired this guide&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@dmccoy/how-to-submit-an-html-form-to-google-sheets-without-google-forms-b833952cc175&#34;&gt;https://medium.com/@dmccoy/how-to-submit-an-html-form-to-google-sheets-without-google-forms-b833952cc175&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jamiewilson/form-to-google-sheets&#34;&gt;https://github.com/jamiewilson/form-to-google-sheets&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>tensorflow/tfjs-examples</title>
    <updated>2023-08-30T01:31:33Z</updated>
    <id>tag:github.com,2023-08-30:/tensorflow/tfjs-examples</id>
    <link href="https://github.com/tensorflow/tfjs-examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Examples built with TensorFlow.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TensorFlow.js Examples&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a set of examples implemented in &lt;a href=&#34;http://js.tensorflow.org&#34;&gt;TensorFlow.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Each example directory is standalone so the directory can be copied to another project.&lt;/p&gt; &#xA;&lt;h1&gt;Overview of Examples&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example name&lt;/th&gt; &#xA;   &lt;th&gt;Demo link&lt;/th&gt; &#xA;   &lt;th&gt;Input data type&lt;/th&gt; &#xA;   &lt;th&gt;Task type&lt;/th&gt; &#xA;   &lt;th&gt;Model type&lt;/th&gt; &#xA;   &lt;th&gt;Training&lt;/th&gt; &#xA;   &lt;th&gt;Inference&lt;/th&gt; &#xA;   &lt;th&gt;API type&lt;/th&gt; &#xA;   &lt;th&gt;Save-load operations&lt;/th&gt; &#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/abalone-node&#34;&gt;abalone-node&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Numeric&lt;/td&gt; &#xA;   &lt;td&gt;Loading data from local file and training in Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Multilayer perceptron&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;Saving to filesystem and loading in Node.js&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/addition-rnn&#34;&gt;addition-rnn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/addition-rnn/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Text&lt;/td&gt; &#xA;   &lt;td&gt;Sequence-to-sequence&lt;/td&gt; &#xA;   &lt;td&gt;RNN: SimpleRNN, GRU and LSTM&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/addition-rnn-webworker&#34;&gt;addition-rnn-webworker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Text&lt;/td&gt; &#xA;   &lt;td&gt;Sequence-to-sequence&lt;/td&gt; &#xA;   &lt;td&gt;RNN: SimpleRNN, GRU and LSTM&lt;/td&gt; &#xA;   &lt;td&gt;Browser: Web Worker&lt;/td&gt; &#xA;   &lt;td&gt;Browser: Web Worker&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/angular-predictive-prefetching&#34;&gt;angular-predictive-prefetching&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Numeric&lt;/td&gt; &#xA;   &lt;td&gt;Multiclass predictor&lt;/td&gt; &#xA;   &lt;td&gt;DNN&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Browser: Service Worker&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/baseball-node&#34;&gt;baseball-node&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Numeric&lt;/td&gt; &#xA;   &lt;td&gt;Multiclass classification&lt;/td&gt; &#xA;   &lt;td&gt;Multilayer perceptron&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/boston-housing&#34;&gt;boston-housing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/boston-housing/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Numeric&lt;/td&gt; &#xA;   &lt;td&gt;Regression&lt;/td&gt; &#xA;   &lt;td&gt;Multilayer perceptron&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/cart-pole&#34;&gt;cart-pole&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/cart-pole/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reinforcement learning&lt;/td&gt; &#xA;   &lt;td&gt;Policy gradient&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;IndexedDB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/chrome-extension&#34;&gt;chrome-extension&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;(Deploying TF.js in Chrome extension)&lt;/td&gt; &#xA;   &lt;td&gt;Convnet&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/custom-layer&#34;&gt;custom-layer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/custom-layer/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(Defining a custom Layer subtype)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/data-csv&#34;&gt;data-csv&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/data-csv/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Building a tf.data.Dataset from a remote CSV&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/data-generator&#34;&gt;data-generator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/data-generator/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Building a tf.data.Dataset using a generator&lt;/td&gt; &#xA;   &lt;td&gt;Regression&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/date-conversion-attention&#34;&gt;date-conversion-attention&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/date-conversion-attention/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Text&lt;/td&gt; &#xA;   &lt;td&gt;Text-to-text conversion&lt;/td&gt; &#xA;   &lt;td&gt;Attention mechanism, RNN&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Browser and Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;Saving to filesystem and loading in browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/electron&#34;&gt;electron&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;(Deploying TF.js in Electron-based desktop apps)&lt;/td&gt; &#xA;   &lt;td&gt;Convnet&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/fashion-mnist-vae&#34;&gt;fashion-mnist-vae&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;Generative&lt;/td&gt; &#xA;   &lt;td&gt;Variational autoencoder (VAE)&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;Export trained model from tfjs-node and load it in browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/interactive-visualizers&#34;&gt;interactive-visualizers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;Multiclass classification, object detection, segmentation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/iris&#34;&gt;iris&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/iris/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Numeric&lt;/td&gt; &#xA;   &lt;td&gt;Multiclass classification&lt;/td&gt; &#xA;   &lt;td&gt;Multilayer perceptron&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/iris-fitDataset&#34;&gt;iris-fitDataset&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/iris-fitDataset/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Numeric&lt;/td&gt; &#xA;   &lt;td&gt;Multiclass classification&lt;/td&gt; &#xA;   &lt;td&gt;Multilayer perceptron&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/jena-weather&#34;&gt;jena-weather&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/jena-weather/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sequence&lt;/td&gt; &#xA;   &lt;td&gt;Sequence-to-prediction&lt;/td&gt; &#xA;   &lt;td&gt;MLP and RNNs&lt;/td&gt; &#xA;   &lt;td&gt;Browser and Node&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/lstm-text-generation&#34;&gt;lstm-text-generation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/lstm-text-generation/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Text&lt;/td&gt; &#xA;   &lt;td&gt;Sequence prediction&lt;/td&gt; &#xA;   &lt;td&gt;RNN: LSTM&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;IndexedDB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/mnist&#34;&gt;mnist&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/mnist/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;Multiclass classification&lt;/td&gt; &#xA;   &lt;td&gt;Convolutional neural network&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/mnist-acgan&#34;&gt;mnist-acgan&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/mnist-acgan/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;Generative Adversarial Network (GAN)&lt;/td&gt; &#xA;   &lt;td&gt;Convolutional neural network; GAN&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;Saving to filesystem from Node.js and loading it in the browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/mnist-core&#34;&gt;mnist-core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/mnist-core/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;Multiclass classification&lt;/td&gt; &#xA;   &lt;td&gt;Convolutional neural network&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Core (Ops)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/mnist-node&#34;&gt;mnist-node&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;Multiclass classification&lt;/td&gt; &#xA;   &lt;td&gt;Convolutional neural network&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;Saving to filesystem&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/mnist-transfer-cnn&#34;&gt;mnist-transfer-cnn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/mnist-transfer-cnn/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;Multiclass classification (transfer learning)&lt;/td&gt; &#xA;   &lt;td&gt;Convolutional neural network&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;Loading pretrained model&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/mobilenet&#34;&gt;mobilenet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/mobilenet/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;Multiclass classification&lt;/td&gt; &#xA;   &lt;td&gt;Convolutional neural network&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;Loading pretrained model&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/polynomial-regression&#34;&gt;polynomial-regression&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/polynomial-regression/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Numeric&lt;/td&gt; &#xA;   &lt;td&gt;Regression&lt;/td&gt; &#xA;   &lt;td&gt;Shallow neural network&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/polynomial-regression-core&#34;&gt;polynomial-regression-core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/polynomial-regression-core/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Numeric&lt;/td&gt; &#xA;   &lt;td&gt;Regression&lt;/td&gt; &#xA;   &lt;td&gt;Shallow neural network&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Core (Ops)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/quantization&#34;&gt;quantization&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Various&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates the effect of post-training weight quantization&lt;/td&gt; &#xA;   &lt;td&gt;Various&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/sentiment&#34;&gt;sentiment&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/sentiment/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Text&lt;/td&gt; &#xA;   &lt;td&gt;Sequence-to-binary-prediction&lt;/td&gt; &#xA;   &lt;td&gt;LSTM, 1D convnet&lt;/td&gt; &#xA;   &lt;td&gt;Node.js or Python&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;Load model from Keras and tfjs-node&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/simple-object-detection&#34;&gt;simple-object-detection&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/simple-object-detection/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;Object detection&lt;/td&gt; &#xA;   &lt;td&gt;Convolutional neural network (transfer learning)&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;Export trained model from tfjs-node and load it in browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/snake-dqn&#34;&gt;snake-dqn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/snake-dqn/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reinforcement learning&lt;/td&gt; &#xA;   &lt;td&gt;Deep Q-Network (DQN)&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;Export trained model from tfjs-node and load it in browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/translation&#34;&gt;translation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/translation/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Text&lt;/td&gt; &#xA;   &lt;td&gt;Sequence-to-sequence&lt;/td&gt; &#xA;   &lt;td&gt;LSTM encoder and decoder&lt;/td&gt; &#xA;   &lt;td&gt;Node.js or Python&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;Load model converted from Keras&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/tsne-mnist-canvas&#34;&gt;tsne-mnist-canvas&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dimension reduction and data visualization&lt;/td&gt; &#xA;   &lt;td&gt;tSNE&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Core (Ops)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/webcam-transfer-learning&#34;&gt;webcam-transfer-learning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/webcam-transfer-learning/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;Multiclass classification (transfer learning)&lt;/td&gt; &#xA;   &lt;td&gt;Convolutional neural network&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;Loading pretrained model&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs-examples/master/website-phishing&#34;&gt;website-phishing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://storage.googleapis.com/tfjs-examples/website-phishing/dist/index.html&#34;&gt;ðŸ”—&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Numeric&lt;/td&gt; &#xA;   &lt;td&gt;Binary classification&lt;/td&gt; &#xA;   &lt;td&gt;Multilayer perceptron&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Browser&lt;/td&gt; &#xA;   &lt;td&gt;Layers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;Except for &lt;code&gt;getting_started&lt;/code&gt;, all the examples require the following dependencies to be installed.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js version 8.9 or higher&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.npmjs.com/cli/npm&#34;&gt;NPM cli&lt;/a&gt; OR &lt;a href=&#34;https://yarnpkg.com/en/&#34;&gt;Yarn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to build an example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;cd&lt;/code&gt; into the directory&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;code&gt;yarn&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd mnist-core&#xA;yarn&#xA;yarn watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd mnist-core&#xA;npm install&#xA;npm run watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Details&lt;/h3&gt; &#xA;&lt;p&gt;The convention is that each example contains two scripts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;yarn watch&lt;/code&gt; or &lt;code&gt;npm run watch&lt;/code&gt;: starts a local development HTTP server which watches the filesystem for changes so you can edit the code (JS or HTML) and see changes when you refresh the page immediately.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;yarn build&lt;/code&gt; or &lt;code&gt;npm run build&lt;/code&gt;: generates a &lt;code&gt;dist/&lt;/code&gt; folder which contains the build artifacts and can be used for deployment.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute an example, please reach out to us on &lt;a href=&#34;https://github.com/tensorflow/tfjs/issues&#34;&gt;Github issues&lt;/a&gt; before sending us a pull request as we are trying to keep this set of examples small and highly curated.&lt;/p&gt; &#xA;&lt;h3&gt;Running Presubmit Tests&lt;/h3&gt; &#xA;&lt;p&gt;Before you send a pull request, it is a good idea to run the presubmit tests and make sure they all pass. To do that, execute the following commands in the root directory of tfjs-examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn&#xA;yarn presubmit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;yarn presubmit&lt;/code&gt; command executes the unit tests and lint checks of all the exapmles that contain the &lt;code&gt;yarn test&lt;/code&gt; and/or &lt;code&gt;yarn lint&lt;/code&gt; scripts. You may also run the tests for individual exampls by cd&#39;ing into their respective subdirectory and executing &lt;code&gt;yarn&lt;/code&gt;, followed by &lt;code&gt;yarn test&lt;/code&gt; and/or &lt;code&gt;yarn lint&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>