<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-29T01:38:48Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PBI-David/Deneb-Showcase</title>
    <updated>2023-03-29T01:38:48Z</updated>
    <id>tag:github.com,2023-03-29:/PBI-David/Deneb-Showcase</id>
    <link href="https://github.com/PBI-David/Deneb-Showcase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Deneb-Showcase&lt;/h1&gt; &#xA;&lt;p&gt;This is a collection of advanced dataviz examples using &lt;a href=&#34;https://vega.github.io/vega/&#34;&gt;Vega&lt;/a&gt;, &lt;a href=&#34;https://vega.github.io/vega-lite/&#34;&gt;Vega-Lite&lt;/a&gt;, &lt;a href=&#34;https://deneb-viz.github.io/&#34;&gt;Deneb&lt;/a&gt; and &lt;a href=&#34;https://powerbi.microsoft.com/en-us/&#34;&gt;Power BI&lt;/a&gt;.&amp;nbsp;All the work is original and where this has been inspired by the work of others, I have pointed this out.&lt;/p&gt; &#xA;&lt;h2&gt;Bank Failure Bubble Chart&lt;/h2&gt; &#xA;&lt;p&gt;I thought it would be interesting to plot the recent bank failures (as reported and managed by FDIC) against those from 2008.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tinyurl.com/5n7k37jj&#34;&gt;Online editor (absolute)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tinyurl.com/4pue7knb&#34;&gt;Online editor (inflation adjusted)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Bank%20Failure%20Bubble%20Chart/thumbnail1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Calendar Heatmap&lt;/h2&gt; &#xA;&lt;p&gt;A template for a multi-year calendar using Vega-Lite.&lt;/p&gt; &#xA;&lt;p&gt;Inspired by the &lt;a href=&#34;https://observablehq.com/@d3/calendar&#34;&gt;amazing Mike Bostock.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tinyurl.com/yetw5em6&#34;&gt;Online Editor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Calendar%20Heatmap/Thumbnail.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Covid Map&lt;/h2&gt; &#xA;&lt;p&gt;An animated map using Vega showing the spread of Covid-19 across the UK using data from &lt;a href=&#34;https://coronavirus.data.gov.uk/&#34;&gt;https://coronavirus.data.gov.uk/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Topojson can be a bit tricky to get working in the certified Deneb visual (no loading from external sources) but the .pbix below shows this can be done by embedding the topojson inline.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tinyurl.com/3mykjcst&#34;&gt;Online Editor&lt;/a&gt; (click to start)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Covid%20Map/Thumbnail.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Deneb Bubble Text&lt;/h2&gt; &#xA;&lt;p&gt;A fun animation showing transition between different words using Vega. Text co-ordinates were genenerated using P5.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lnkd.in/e_Nk6sAB&#34;&gt;Online Editor&lt;/a&gt; (click to start)&lt;/p&gt; &#xA;&lt;p&gt;Inspired by the amazing Daniel Shiffman at &lt;a href=&#34;https://thecodingtrain.com/&#34;&gt;The Coding Train.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Deneb%20Bubble%20Text/Thumbnail.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Fireworks&lt;/h2&gt; &#xA;&lt;p&gt;An experiment using Vega to create a firework simulation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lnkd.in/e3TVGm-z&#34;&gt;Online Editor&lt;/a&gt; (click to start)&lt;/p&gt; &#xA;&lt;p&gt;Inspired by the amazing Daniel Shiffman at &lt;a href=&#34;https://thecodingtrain.com/&#34;&gt;The Coding Train.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Fireworks/Thumbnail.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Gantt Chart&lt;/h2&gt; &#xA;&lt;p&gt;A Gantt chart implemented in Vega.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tinyurl.com/bddxbv4f&#34;&gt;Online Editor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Gantt%20Chart/Thumbnail.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Pancake Spider Chart&lt;/h2&gt; &#xA;&lt;p&gt;A faceted spider chart which was my winning submission to a competition using a BBC Good Food pancake recipe dataset and built with Deneb, Vega and PowerBI. In Vega, each axis can have its own scale which is essential for comparing different dimensions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tinyurl.com/2p96jvfy&#34;&gt;Online Editor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Pancake%20Spider%20Chart/Thumbnail.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Parliament Chart&lt;/h2&gt; &#xA;&lt;p&gt;A parliament chart created using Vega.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tinyurl.com/ysy8w2ve&#34;&gt;Online Editor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Inspired by the amazing &lt;a href=&#34;https://www.flerlagetwins.com/&#34;&gt;Flerlage Twins&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Parliament%20Chart/Thumbnail.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;S&amp;amp;P Beeswarm Chart&lt;/h2&gt; &#xA;&lt;p&gt;An animated beeswarm chart of the S&amp;amp;P performance from 07/07/21 - 06/07/22 made using Vega. The result can be quite hypnotic! Data was sourced from Yahoo Finance and scraped using Power Automate Desktop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lnkd.in/euc8TSrd&#34;&gt;Online Editor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/S%26P%20Beeswarm%20Chart/Thumbnail.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sankey Chart&lt;/h2&gt; &#xA;&lt;p&gt;Sankey charts (allvuial charts) are great for visualising a business process or simplifying a complex data flow like Microsoft’s FY23 Q2 income statement.&lt;/p&gt; &#xA;&lt;p&gt;It is very configurable and I’ve tried to account for as many edge cases I can think of.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lnkd.in/eTpuaNa6&#34;&gt;Online Editor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Inspired by:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.sankeyart.com/sankeys/public/142/&#34;&gt;https://www.sankeyart.com/sankeys/public/142/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Sankey%20Chart/Thumbnail.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Starfield&lt;/h2&gt; &#xA;&lt;p&gt;A fun experiment using Vega to create a starfield simulation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vega.github.io/editor/#/url/vega/N4IgJAzgxgFgpgWwIYgFwhgF0wBwqgegIDc4BzJAOjIEtMYBXAI0poHsDp5kTykSArJQBWENgDsQAGhAB3GgBN6aAQAZVM+DTJYV6mTiQKFNcWTQaQTJFADWZAE5sG4hWisAbG7ekgFSTBRUAG1QcSQEOHcxBgcoKJliJA8GOAg0YIBdGUwHJHEIADM2BwQM0EwATxwo9Ag4AEdU8XjfCECHTDQARhl2thw0AGZ9EHa4QdRekCR09EUQAF8pCurakGLShi9fWfcAD184fZwHdzzXNgQACgBKACoAJgBabqWVkCqa902EbZQZHt0JUjiczugLgorncnq93qtvuhfv9dnMQAAvUGndz+TAMBCUCD7AAEAD5no9iQAyKm4-GEkkAHkpNOJdIJEEqZIp1NpAXpnOJzN5xKgznEmDgDjJxNUAH52ZR0a9UI91PDPmsfiU-jtAWiiVjwX5+QT9gRFeinurlgj1si9TMDSCZMdsehFZULaaldbVBqvvadSj9e4cIdXWCcT70QBeWNq+WKomoRXhgNapHBx1AkA4F0gN3Gy3xxMKn2c1M+-NLTKLbJjbThDxzUIgcKRc4uXxJFK1QrJeoyCTlQukCVoqAeGh2XwMHC49YAQgc3frtvbEXWYpckrOiWSqTQieHkhCoDg48wczt7kwNEi+8+MCc2A8tVUyxA88XXfENJ3CUpVJbo5UAvdiVeYlVRtD5LzgCc0FvD0mA8KcZx8L8fwCdZE1res+igZI0lHDt1n2aBiN8QN3GncQ4CQJ8oWQUwkMbMhm3cYJXikbpMneEALjIdZ5CUGANTI9xKko99qMzEA6IYpiriQVjUFACAm2SLieL4gShPWLQdC6DdJLqGh0QSTVEQU0wlN8JwXDcVBclSGRxBnftBzgGRLKcNBXJ8vwVLU4INETBsDIybp9FUOsG2QBxbFbMIt2iDp0hyeTOQQJg2A8XxCicMp1JNQJomcOIoi-BCxQUWpQGwyU2MOUrChoOAPGcsYIzGIjZPQCj+uqmQQTajquuiAsZPWaThoEzTLLYmbogsqz2s67rMS-CAYCQRFQF7I90CgGg4lkr92o8ArSqOkSYDoEbPjYfL70mDStJusr8SWRY-o+MyxlyBjkrkmzV1kmQiquNjcSCMZKtaGqWjYeq2KahqQFa0ANsm9B00IqjBpWr8xpxibuprQmBpAOaqK-fZHjY3HusNanyJJ0amfGzapraebgU5oGnFsTG7vcWQHuanbcjYUWAHVFGUW7Dw-SgBC-AYbDoMmQHF1BVEoAAOP6-rrIA/view&#34;&gt;Online Editor&lt;/a&gt; (click to start)&lt;/p&gt; &#xA;&lt;p&gt;Inspired by the amazing Daniel Shiffman at &lt;a href=&#34;https://thecodingtrain.com/&#34;&gt;The Coding Train.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Starfield/Thumbnail.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Unit Charts&lt;/h2&gt; &#xA;&lt;p&gt;Unit charts can be an engaging and eye catching tool to have in an analyst’s toolbox. Here&#39;s two created using Vega and Vega-Lite&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lnkd.in/eXiFJbmY&#34;&gt;Online Editor 1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lnkd.in/e35HC8uK&#34;&gt;Online Editor 2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Unit%20Charts/Thumbnail.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Variance Chart&lt;/h2&gt; &#xA;&lt;p&gt;A useful variance chart created using Vega-Lite showing actuals, forecasts (or budgets), absolute variance and percentage variance.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tinyurl.com/bdzhh3de&#34;&gt;Online Editor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Variance%20Chart/Thumbnail.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Waffle Charts&lt;/h2&gt; &#xA;&lt;p&gt;Waffle charts break a lot of dataviz best practices but sometimes, you just need a striking visual to make the numbers stand out and pop in a report. They can also be ideal for infographics.&lt;/p&gt; &#xA;&lt;p&gt;As well as the faceted percentage example below, I have also included versions for faceted absolute, stacked absolute and stacked percentage as each have their place.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tinyurl.com/a8mkk6x4&#34;&gt;Online Editor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/PBI-David/Deneb-Showcase/raw/main/Waffle%20Charts/Thumbnail.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>WTFAcademy/WTF-Ethers</title>
    <updated>2023-03-29T01:38:48Z</updated>
    <id>tag:github.com,2023-03-29:/WTFAcademy/WTF-Ethers</id>
    <link href="https://github.com/WTFAcademy/WTF-Ethers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;我最近在重新学ethers.js，巩固一下细节，也写一个“WTF Ethers.js极简入门”，供小白们使用，每周更新1-3讲。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WTFAcademy/WTF-Ethers/main/img/logo_ethers.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;WTF Ethers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AmazingAng/WTFSolidity&#34;&gt;WTF Solidity极简教程&lt;/a&gt;姊妹篇，由&lt;a href=&#34;https://wtf.academy&#34;&gt;WTF Academy&lt;/a&gt;社群荣誉出品。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我们最近在重新学ethers.js，巩固一下细节，也写一个“WTF Ether.js极简入门”，供小白们使用，每周更新1-3讲。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;路线图根据本仓库star数量来定：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;64 &lt;span&gt;⭐&lt;/span&gt; 建立社群：&lt;a href=&#34;https://discord.gg/5akcruXrsk&#34;&gt;discord&lt;/a&gt; | &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSe4KGT8Sh6sJ7hedQRuIYirOoZK_85miz3dw7vA1-YjodgJ-A/viewform&#34;&gt;微信群&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;128 &lt;span&gt;⭐&lt;/span&gt; 出进阶内容&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;256 &lt;span&gt;⭐&lt;/span&gt; 发课程认证&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;VScode运行&lt;/h3&gt; &#xA;&lt;p&gt;需要安装&lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;VSCode&lt;/a&gt;和&lt;a href=&#34;https://nodejs.org/zh-cn/download/&#34;&gt;Node.js&lt;/a&gt;，然后运行：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install&#xA;node 01_HelloVitalik/HelloVitalik.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;在线编辑器运行&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;javascript&lt;/code&gt;在线编辑平台：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://replit.com/&#34;&gt;replit.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://playcode.io&#34;&gt;playcode.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;入门&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;第1讲：HelloVitalik（6行代码）&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/01_HelloVitalik&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/01_HelloVitalik/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第2讲：Provider 提供器&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/02_Provider&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/02_Provider/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第3讲：读取合约信息&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/03_ReadContract&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/03_ReadContract/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第4讲：发送ETH&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/04_SendETH&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/04_SendETH/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第5讲：合约交互&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/05_WriteContract&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/05_WriteContract/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第6讲：部署合约&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/06_DeployContract&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/06_DeployContract/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第7讲：检索事件&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/07_Event&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/07_Event/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第8讲：合约监听&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/08_ContractListener&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/08_ContractListener/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第9讲：事件过滤&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/09_EventFilter&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/09_EventFilter/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第10讲：单位转换&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/10_Units&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/10_Units/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;h2&gt;进阶&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;第11讲：CallStatic&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/11_CallStatic&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/11_CallStatic/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第12讲：识别ERC721&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/12_ERC721Check&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/12_ERC721Check/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第13讲：编码calldata&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/13_EncodeCalldata&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/13_EncodeCalldata/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第14讲：批量生成钱包&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/14_HDwallet&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/14_HDwallet/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第15讲：批量转账&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/15_MultiTransfer&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/15_MultiTransfer/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第16讲：批量归集&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/16_MultiCollect&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/16_MultiCollect/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第17讲：MerkleTree脚本&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/17_MerkleTree&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/17_MerkleTree/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第18讲：数字签名脚本&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/18_Signature&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/18_Signature/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第19讲：监听Mempool&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/19_Mempool&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/19_Mempool/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第20讲：解码交易数据&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/20_DecodeTx&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/20_DecodeTx/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;h2&gt;应用&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;第21讲：靓号生成器&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/21_VanityAddress&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/21_VanityAddress/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第22讲：读取任意数据&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/22_ReadAnyData&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/22_ReadAnyData/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第23讲：抢先交易脚本&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/23_Frontrun&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/23_Frontrun/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第24讲：识别ERC20&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/24_ERC20Check&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/24_ERC20Check/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;第25讲：Flashbots&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/25_Flashbots&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/25_Flashbots/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;h2&gt;工具&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;ET01：连接钱包&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/ET01_Metamask&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/ET01_Metamask/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ET02：钱包签名登录&lt;/strong&gt;：【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/ET02_SignInWithEthereum&#34;&gt;代码&lt;/a&gt;】 【&lt;a href=&#34;https://github.com/WTFAcademy/WTFEthers/raw/main/ET02_SignInWithEthereum/readme.md&#34;&gt;教程&lt;/a&gt;】&lt;/p&gt; &#xA;&lt;h2&gt;WTF Ethers贡献者&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h4 align=&#34;center&#34;&gt; 贡献者是WTF学院的基石 &lt;/h4&gt; &#xA; &lt;a href=&#34;https://github.com/WTFAcademy/WTF-Ethers/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=WTFAcademy/WTF-Ethers&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>knex/knex</title>
    <updated>2023-03-29T01:38:48Z</updated>
    <id>tag:github.com,2023-03-29:/knex/knex</id>
    <link href="https://github.com/knex/knex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A query builder for PostgreSQL, MySQL, CockroachDB, SQL Server, SQLite3 and Oracle, designed to be flexible, portable, and fun to use.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://knex.github.io/documentation/&#34;&gt;knex.js&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://npmjs.org/package/knex&#34;&gt;&lt;img src=&#34;http://img.shields.io/npm/v/knex.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmjs.org/package/knex&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/knex.svg?sanitize=true&#34; alt=&#34;npm downloads&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/knex/knex/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://coveralls.io/r/knex/knex?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/knex/knex/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://libraries.io/npm/knex&#34;&gt;&lt;img src=&#34;https://img.shields.io/librariesio/github/knex/knex&#34; alt=&#34;Dependencies Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/tgriesser/knex&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/tgriesser/knex.svg?sanitize=true&#34; alt=&#34;Gitter chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/knex/knex/context:javascript&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/javascript/g/knex/knex.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language Grade: JavaScript&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;A SQL query builder that is &lt;em&gt;flexible&lt;/em&gt;, &lt;em&gt;portable&lt;/em&gt;, and &lt;em&gt;fun&lt;/em&gt; to use!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A batteries-included, multi-dialect (PostgreSQL, MySQL, CockroachDB, MSSQL, SQLite3, Oracle (including Oracle Wallet Authentication)) query builder for Node.js, featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://knex.github.io/documentation/#Transactions&#34;&gt;transactions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://knex.github.io/documentation/#Installation-pooling&#34;&gt;connection pooling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://knex.github.io/documentation/#Interfaces-Streams&#34;&gt;streaming queries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;both a &lt;a href=&#34;https://knex.github.io/documentation/#Interfaces-Promises&#34;&gt;promise&lt;/a&gt; and &lt;a href=&#34;https://knex.github.io/documentation/#Interfaces-Callbacks&#34;&gt;callback&lt;/a&gt; API&lt;/li&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://github.com/knex/knex/actions&#34;&gt;thorough test suite&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Node.js versions 12+ are supported.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Take a look at the &lt;a href=&#34;https://knex.github.io/documentation&#34;&gt;full documentation&lt;/a&gt; to get started!&lt;/li&gt; &#xA; &lt;li&gt;Browse the &lt;a href=&#34;https://github.com/knex/knex/raw/master/ECOSYSTEM.md&#34;&gt;list of plugins and tools&lt;/a&gt; built for knex&lt;/li&gt; &#xA; &lt;li&gt;Check out our &lt;a href=&#34;https://github.com/knex/knex/wiki/Recipes&#34;&gt;recipes wiki&lt;/a&gt; to search for solutions to some specific problems&lt;/li&gt; &#xA; &lt;li&gt;In case of upgrading from an older version, see &lt;a href=&#34;https://github.com/knex/knex/raw/master/UPGRADING.md&#34;&gt;migration guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can report bugs and discuss features on the &lt;a href=&#34;https://github.com/knex/knex/issues&#34;&gt;GitHub issues page&lt;/a&gt; or send tweets to &lt;a href=&#34;http://twitter.com/kibertoad&#34;&gt;@kibertoad&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For support and questions, join our &lt;a href=&#34;https://gitter.im/tgriesser/knex&#34;&gt;Gitter channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For knex-based Object Relational Mapper, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Vincit/objection.js&#34;&gt;https://github.com/Vincit/objection.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mikro-orm/mikro-orm&#34;&gt;https://github.com/mikro-orm/mikro-orm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bookshelfjs.org&#34;&gt;https://bookshelfjs.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To see the SQL that Knex will generate for a given query, you can use &lt;a href=&#34;https://michaelavila.com/knex-querylab/&#34;&gt;Knex Query Lab&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;We have several examples &lt;a href=&#34;http://knexjs.org&#34;&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const knex = require(&#39;knex&#39;)({&#xA;  client: &#39;sqlite3&#39;,&#xA;  connection: {&#xA;    filename: &#39;./data.db&#39;,&#xA;  },&#xA;});&#xA;&#xA;try {&#xA;&#xA;  // Create a table&#xA;  await knex.schema&#xA;    .createTable(&#39;users&#39;, table =&amp;gt; {&#xA;      table.increments(&#39;id&#39;);&#xA;      table.string(&#39;user_name&#39;);&#xA;    })&#xA;    // ...and another&#xA;    .createTable(&#39;accounts&#39;, table =&amp;gt; {&#xA;      table.increments(&#39;id&#39;);&#xA;      table.string(&#39;account_name&#39;);&#xA;      table&#xA;        .integer(&#39;user_id&#39;)&#xA;        .unsigned()&#xA;        .references(&#39;users.id&#39;);&#xA;    })&#xA;&#xA;  // Then query the table...&#xA;  const insertedRows = await knex(&#39;users&#39;).insert({ user_name: &#39;Tim&#39; })&#xA;&#xA;  // ...and using the insert id, insert into the other table.&#xA;  await knex(&#39;accounts&#39;).insert({ account_name: &#39;knex&#39;, user_id: insertedRows[0] })&#xA;&#xA;  // Query both of the rows.&#xA;  const selectedRows = await knex(&#39;users&#39;)&#xA;    .join(&#39;accounts&#39;, &#39;users.id&#39;, &#39;accounts.user_id&#39;)&#xA;    .select(&#39;users.user_name as user&#39;, &#39;accounts.account_name as account&#39;)&#xA;&#xA;  // map over the results&#xA;  const enrichedRows = selectedRows.map(row =&amp;gt; ({ ...row, active: true }))&#xA;&#xA;  // Finally, add a catch statement&#xA;} catch(e) {&#xA;  console.error(e);&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TypeScript example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { Knex, knex } from &#39;knex&#39;&#xA;&#xA;interface User {&#xA;  id: number;&#xA;  age: number;&#xA;  name: string;&#xA;  active: boolean;&#xA;  departmentId: number;&#xA;}&#xA;&#xA;const config: Knex.Config = {&#xA;  client: &#39;sqlite3&#39;,&#xA;  connection: {&#xA;    filename: &#39;./data.db&#39;,&#xA;  },&#xA;};&#xA;&#xA;const knexInstance = knex(config);&#xA;&#xA;try {&#xA;  const users = await knex&amp;lt;User&amp;gt;(&#39;users&#39;).select(&#39;id&#39;, &#39;age&#39;);&#xA;} catch (err) {&#xA;  // error handling&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage as ESM module&lt;/h2&gt; &#xA;&lt;p&gt;If you are launching your Node application with &lt;code&gt;--experimental-modules&lt;/code&gt;, &lt;code&gt;knex.mjs&lt;/code&gt; should be picked up automatically and named ESM import should work out-of-the-box. Otherwise, if you want to use named imports, you&#39;ll have to import knex like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { knex } from &#39;knex/knex.mjs&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also just do the default import:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import knex from &#39;knex&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are not using TypeScript and would like the IntelliSense of your IDE to work correctly, it is recommended to set the type explicitly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/**&#xA; * @type {Knex}&#xA; */&#xA;const database = knex({&#xA;    client: &#39;mysql&#39;,&#xA;    connection: {&#xA;      host : &#39;127.0.0.1&#39;,&#xA;      user : &#39;your_database_user&#39;,&#xA;      password : &#39;your_database_password&#39;,&#xA;      database : &#39;myapp_test&#39;&#xA;    }&#xA;  });&#xA;database.migrate.latest();&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>