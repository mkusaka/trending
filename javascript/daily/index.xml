<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-04T01:32:09Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>OIRNOIR/WebM-Maker-Thing-Idk</title>
    <updated>2022-08-04T01:32:09Z</updated>
    <id>tag:github.com,2022-08-04:/OIRNOIR/WebM-Maker-Thing-Idk</id>
    <link href="https://github.com/OIRNOIR/WebM-Maker-Thing-Idk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a simple tool to allow you to create WebM files with changing aspect ratios.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WackyWebM&lt;/h1&gt; &#xA;&lt;p&gt;WackyWebM is a tool that allows you to create WebM video files with changing aspect ratios.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re having issues, want to share your custom modes, or learn from the community join the Discord at the bottom of this readme.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://node.js.org&#34;&gt;NodeJS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ffmpeg.org&#34;&gt;FFmpeg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;FFprobe&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;NodeJS&lt;/h3&gt; &#xA;&lt;p&gt;To begin installation, you must install NodeJS first. You can find the NodeJS download &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;After that, if prompted to restart, it is recommended to do so.&lt;/p&gt; &#xA;&lt;h3&gt;FFmpeg&lt;/h3&gt; &#xA;&lt;p&gt;After installing NodeJS, you need to download FFmpeg next. To install FFmpeg you need to go to &lt;a href=&#34;https://ffmpeg.org&#34;&gt;this&lt;/a&gt; link and select the green Download button. Unzip the folder, move it to your downloads and then rename it to &#34;ffmpeg&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Right click the unzipped folder, select &#34;Cut&#34;, direct to This PC, enter your C: drive and paste the ffmpeg folder in there.&lt;/p&gt; &#xA;&lt;p&gt;After moving the ffmpeg folder into your C: drive, open Command Prompt with administrator and run this: setx /m PATH &#34;C:\ffmpeg\bin;%PATH%&#34; (If, for some reason, you are unable to run Command Prompt with administrator permissions, you can hit the windows key, then type &#34;edit environment variables for your account&#34; and hit enter, then you need to click &#34;Path&#34;, then click &#34;Edit,&#34; then you click &#34;New&#34; and paste in &#34;C:\ffmpeg\bin&#34; and then make sure to click &#34;Ok&#34; in both windows).&lt;/p&gt; &#xA;&lt;p&gt;Now, type in &#34;ffmpeg&#34; to the command prompt. If you get an error, you need to log out and log back in, run ffmpeg inside of the command prompt window once more, and if you do not get an error you&#39;re all set. If you still get an error, you can try restarting your computer, and typing &#34;ffmpeg&#34; into the command prompt again. If it still doesn&#39;t work, you can get help in #support in &lt;a href=&#34;https://discord.gg/TmyJfq49AP&#34;&gt;this&lt;/a&gt; discord server.&lt;/p&gt; &#xA;&lt;h2&gt;How to Run&lt;/h2&gt; &#xA;&lt;p&gt;Once you&#39;ve downloaded the WackyWebM folder by going to the GitHub repository and selecting the green &#34;Code&#34; button, then clicking &#34;Download ZIP&#34;&lt;/p&gt; &#xA;&lt;p&gt;Once the ZIP is fully installed, you need to extract the folder inside. After doing this, you are set.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;node wackywebm.js [mode] &amp;lt;file&amp;gt;&lt;/code&gt; to use WackyWebM without running the run.bat.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re on windows, you can simply double-click run.bat, as long as it&#39;s in the same folder as wackywebm.js.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re on MacOS or Linux, you can run run.sh. You may have to give it permission to execute with chmod +x run.sh.&lt;/p&gt; &#xA;&lt;p&gt;You can also tweak the script to taste if you want to adjust how your file is generated.&lt;/p&gt; &#xA;&lt;p&gt;You can also change the bitrate of the output file by tweaking -b (Default is 1M, which means 1 MB/s. If the file is too large, consider lowering this value.)&lt;/p&gt; &#xA;&lt;h2&gt;Modes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Bounce&lt;/code&gt; (Default): The video bounces up and down.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Shutter&lt;/code&gt;: The video bounces left to right.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Sporadic&lt;/code&gt;: The video glitches and wobbles randomly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Shrink&lt;/code&gt;: The video shrinks vertically until it&#39;s just one pixel thin.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;AudioBounce&lt;/code&gt;: The video&#39;s vertical height changes relative to the current audio level verses the highest within the video.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;AudioShutter&lt;/code&gt;: The video&#39;s horizontal width changes relative to the current audio level verses the highest within the video.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Jumpscare&lt;/code&gt;: The video shrinks down small, then gets big at the specified frame.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Keyframes&lt;/code&gt;: The video&#39;s height and width change based on a number of keyframes outlined in the file given as an argument. The format is as follows: Every line consists of 3 or 4 comma-seperated values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;first, the time in the video of the keyframe; either one integer representing seconds, or two, seperated by any one of the characters ., : or -, where the first still represents seconds, and the second represents frames.&lt;/li&gt; &#xA; &lt;li&gt;next, the width, then the height at that keyframe (in pixels)&lt;/li&gt; &#xA; &lt;li&gt;finally, the interpolation with which to advance towards the next keyframe (currently, only &lt;code&gt;linear&lt;/code&gt; is supported.) If this is not given (and the line only has 3 fields), linear is assumed by default.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Lines that start either in a &lt;code&gt;#&lt;/code&gt; character, or are entirely empty, are ignored and may be used as comments.&lt;/p&gt; &#xA;&lt;p&gt;If it isn&#39;t overwritten, an implicit keyframe at 0 frames into the video is added with linear interpolation and the video&#39;s original size.&lt;br&gt; To use this mode, add -k with the path to your csv file.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, any 2 modes can be combined using a + symbol, like Bounce+Shutter. If one only specifies width, and one only specifies height, then those respective values are used. If there is a conflict, the value from the latter of the 2 modes is used (so Shrink+Bounce would result in the same effect as just Bounce)&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter bugs, issues, or have recommendations, feel free to join the Discord &lt;a href=&#34;https://discord.gg/TmyJfq49AP&#34;&gt;here.&lt;/a&gt;&lt;a href=&#34;https://discord.gg/EdrqJ6AMKF&#34;&gt;&lt;img src=&#34;https://invidget.switchblade.xyz/EdrqJ6AMKF&#34; alt=&#34;Discord Invite Widget&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>padloc/padloc</title>
    <updated>2022-08-04T01:32:09Z</updated>
    <id>tag:github.com,2022-08-04:/padloc/padloc</id>
    <link href="https://github.com/padloc/padloc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern, open source password manager for individuals and teams.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Padloc&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/padloc/padloc/actions?workflow=Run+Tests&#34;&gt;&lt;img src=&#34;https://github.com/padloc/padloc/workflows/Run%20Tests/badge.svg?branch=main&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simple, secure password and data management for individuals and teams.&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This repo is split into multiple packages:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/core&#34;&gt;@padloc/core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Core Logic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/app&#34;&gt;@padloc/app&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web-based UI components&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/server&#34;&gt;@padloc/server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Backend Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/pwa&#34;&gt;@padloc/pwa&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Web Client, a &lt;a href=&#34;https://developers.google.com/web/progressive-web-apps&#34;&gt;Progressive Web App&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/locale&#34;&gt;@padloc/locale&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Package containing translations and other localization-related things&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/electron&#34;&gt;@padloc/electron&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Desktop App, built with Electron&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/cordova&#34;&gt;@padloc/cordova&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cordova project for building iOS and Android app.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/tauri&#34;&gt;@padloc/tauri&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cross-platform native app, powered by &lt;a href=&#34;https://github.com/tauri-apps/tauri&#34;&gt;Tauri&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/extension&#34;&gt;@padloc/extension&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Padloc browser extension&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;As you can see in the &lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/#about&#34;&gt;About&lt;/a&gt; section, there are lots of different components to play with! But at a minimum, in order to set up and use your own instance of Padloc you&#39;ll need to install and configure the &lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/server&#34;&gt;Server&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/pwa&#34;&gt;Web Client&lt;/a&gt;. In practice, there a few different ways to do this, but if you just want to install and test Padloc locally, doing so is really quite easy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git@github.com:padloc/padloc.git&#xA;cd padloc&#xA;npm ci&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The web client is now available at &lt;code&gt;http://localhost:8080&lt;/code&gt;!&lt;/p&gt; &#xA;&lt;p&gt;In-depth guides on how to host your own &#34;productive&#34; version of Padloc and how to build and distribute your own versions of the desktop and mobile apps are coming soon!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;All kinds of contributions are welcome!&lt;/p&gt; &#xA;&lt;p&gt;If you want to &lt;strong&gt;report a bug or have a feature request&lt;/strong&gt;, please &lt;a href=&#34;https://github.com/padloc/padloc/issues&#34;&gt;create an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you &lt;strong&gt;have question, feedback or would just like to chat&lt;/strong&gt;, head over to the &lt;a href=&#34;https://github.com/padloc/padloc/discussions&#34;&gt;discussions&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;If you want to &lt;strong&gt;contribute to Padloc directly&lt;/strong&gt; by implementing a new feature or fixing an existing issue, feel free to &lt;a href=&#34;https://github.com/padloc/padloc/pulls&#34;&gt;create a pull request&lt;/a&gt;! However if you plan to work on anything non-trivial, please do talk to us first, either by commenting on an existing issue, creating a new issue or by pinging us in the dissusions section!&lt;/p&gt; &#xA;&lt;p&gt;To learn how to get started working on Padloc, refer to the &lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/#development&#34;&gt;Development&lt;/a&gt; section of the readme.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;For a security design overview, check out the &lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/security.md&#34;&gt;security whitepaper&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;Setting up your dev environment for working with Padloc is as simple as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git@github.com:padloc/padloc.git&#xA;cd padloc&#xA;npm ci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This may take a minute, so maybe grab a cup of ☕️.&lt;/p&gt; &#xA;&lt;h3&gt;Dev Mode&lt;/h3&gt; &#xA;&lt;p&gt;To start &#34;dev mode&#34;, simply run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;from the root of the project. This will start the backend server (by default listening on port &lt;code&gt;3000&lt;/code&gt;), as well as the PWA (available on &lt;code&gt;http://localhost:8080&lt;/code&gt;) by default.&lt;/p&gt; &#xA;&lt;p&gt;The server and PWA port can be changed vie the &lt;code&gt;PL_TRANSPORT_HTTP_PORT&lt;/code&gt; and &lt;code&gt;PL_PWA_PORT&lt;/code&gt; environvent variables, respectively. For more configuration options, check out the &lt;strong&gt;Conguration&lt;/strong&gt; section of the &lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/server#configuration&#34;&gt;server&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/packages/pwa#configuration&#34;&gt;pwa&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Formatting&lt;/h3&gt; &#xA;&lt;p&gt;This project is formatted with &lt;a href=&#34;https://prettier.io/&#34;&gt;Prettier&lt;/a&gt;. To re-format all files using our &lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/.prettierrc.json&#34;&gt;.prettierrc.json&lt;/a&gt; specification, run the following from the root of the project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run format&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To simply check whether everything is formatted correctly, you can use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run format:check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;To run unit tests, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Cypress end-to-end tests can be run via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run test:e2e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to start cypress tests in &#34;dev mode&#34;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ssh&#34;&gt;npm run test:e2e:dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Adding / removing dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Since this is a monorepo consisting of multiple packages, adding/removing to/from a single package can be less than straightforward. The following commands are meant to make this easier.&lt;/p&gt; &#xA;&lt;p&gt;To add a dependency to a package, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;scope=[package_name] npm run add [dependency]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to remove one:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;scope=[package_name] npm run remove [dependency]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, here is how you would add &lt;code&gt;typescript&lt;/code&gt; to the &lt;code&gt;@padloc/server&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;scope=server npm run add typescript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We&#39;re trying to keep the number and size of third-party dependencies to a minumum, so before you add a dependency, please think twice if it is really needed! Pull requests with unnecessary dependencies will very likely be rejected.&lt;/p&gt; &#xA;&lt;h3&gt;Updating The Version&lt;/h3&gt; &#xA;&lt;p&gt;The Padloc project consists of many different subpackages. To simplify versioning, we use a global version for all them. This means that when releasing a new version, the version of all subpackages needs to be updated, regardless of whether there have been changes in them or not. To update the global version accross the project, you can use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run version [semver_version]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deployment / Publishing&lt;/h3&gt; &#xA;&lt;p&gt;Padloc has a lot of different components that all need to be built/released/published in different ways. To manage this complexitiy, we have compiled all deployment steps for all components in a single Github Workflow. To release a new version, simply:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/#updating-the-version&#34;&gt;Update project version&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Commit and push.&lt;/li&gt; &#xA; &lt;li&gt;Run the &lt;a href=&#34;https://github.com/padloc/padloc/actions?workflow=Publish+Release&#34;&gt;Publish Release&lt;/a&gt; action.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;This software is published under the &lt;a href=&#34;https://raw.githubusercontent.com/padloc/padloc/main/LICENSE&#34;&gt;GNU Affero General Public License&lt;/a&gt;. If you wish to acquire a commercial license, please contact us as &lt;a href=&#34;mailto:sales@padloc.app?subject=Padloc%20Commercial%20License&#34;&gt;sales@padloc.app&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pwndoc/pwndoc</title>
    <updated>2022-08-04T01:32:09Z</updated>
    <id>tag:github.com,2022-08-04:/pwndoc/pwndoc</id>
    <link href="https://github.com/pwndoc/pwndoc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pentest Report Generator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PwnDoc&lt;/h1&gt; &#xA;&lt;p&gt;PwnDoc is a pentest reporting application making it simple and easy to write your findings and generate a customizable Docx report.&lt;br&gt; The main goal is to have more time to &lt;strong&gt;Pwn&lt;/strong&gt; and less time to &lt;strong&gt;Doc&lt;/strong&gt; by mutualizing data like vulnerabilities between users.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pwndoc.github.io/pwndoc/#/installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pwndoc.github.io/pwndoc/#/data&#34;&gt;Data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pwndoc.github.io/pwndoc/#/vulnerabilities&#34;&gt;Vulnerabilities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pwndoc.github.io/pwndoc/#/audits&#34;&gt;Audits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pwndoc.github.io/pwndoc/#/docxtemplate&#34;&gt;Templating&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multiple Language support&lt;/li&gt; &#xA; &lt;li&gt;Multiple Data support&lt;/li&gt; &#xA; &lt;li&gt;Great Customization &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Manage reusable Audit and Vulnerability Data&lt;/li&gt; &#xA;   &lt;li&gt;Create Custom Sections&lt;/li&gt; &#xA;   &lt;li&gt;Add custom fields to Vulnerabilities&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Vulnerabilities Management&lt;/li&gt; &#xA; &lt;li&gt;Multi-User reporting&lt;/li&gt; &#xA; &lt;li&gt;Docx Report Generation&lt;/li&gt; &#xA; &lt;li&gt;Docx Template customization&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Demos&lt;/h1&gt; &#xA;&lt;h4&gt;Multi-User reporting&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pwndoc/pwndoc/master/demos/shared_audit_demo.gif&#34; alt=&#34;Shared Audit demo gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Finding edition&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pwndoc/pwndoc/master/demos/audit_finding_demo.gif&#34; alt=&#34;Finding edit demo gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Vulnerability management workflow&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pwndoc/pwndoc/master/demos/create_and_update_finding.gif&#34; alt=&#34;Create and update demo gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Donate&lt;/h1&gt; &#xA;&lt;p&gt;If you would like to help me and sponsor this project&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/yeln4ts&#34;&gt;&lt;span&gt;❤️&lt;/span&gt; Sponsor Me&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or you can send me some crypto love&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Bitcoin&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Ethereum&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4255028/160478210-ddc3b0ec-6eeb-4112-b1f0-ff1a4ee7c074.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4255028/160478210-ddc3b0ec-6eeb-4112-b1f0-ff1a4ee7c074.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;BTC address: &lt;code&gt;bc1q6z2n99effsmla5mj4ctk3ya6nd76truf6qfe7y&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ETH address: &lt;code&gt;0xB76cd48CD6C098DE85928e125b44057D3B372821&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Sponsors&lt;/h1&gt; &#xA;&lt;p&gt;Thank you for your support&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.on-x.com&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4255028/160469615-51ae233b-38d3-4e05-adaf-0ad8633e101f.png&#34; height=&#34;50&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/relaxedricky&#34;&gt;&lt;img src=&#34;https://github.com/relaxedricky.png&#34; height=&#34;50&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/belane&#34;&gt;&lt;img src=&#34;https://github.com/belane.png&#34; height=&#34;50&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>