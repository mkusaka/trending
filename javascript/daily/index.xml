<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-20T01:34:01Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>eslint/eslint</title>
    <updated>2022-11-20T01:34:01Z</updated>
    <id>tag:github.com,2022-11-20:/eslint/eslint</id>
    <link href="https://github.com/eslint/eslint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Find and fix problems in your JavaScript code.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/eslint&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/eslint.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/eslint&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/eslint.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/eslint/eslint/actions&#34;&gt;&lt;img src=&#34;https://github.com/eslint/eslint/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://opencollective.com/eslint&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/backers/eslint&#34; alt=&#34;Open Collective Backers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/eslint&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/sponsors/eslint&#34; alt=&#34;Open Collective Sponsors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/user?screen_name=geteslint&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/geteslint?label=Follow&amp;amp;style=social&#34; alt=&#34;Follow us on Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ESLint&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://eslint.org&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://eslint.org/docs/user-guide/configuring&#34;&gt;Configuring&lt;/a&gt; | &lt;a href=&#34;https://eslint.org/docs/rules/&#34;&gt;Rules&lt;/a&gt; | &lt;a href=&#34;https://eslint.org/docs/developer-guide/contributing&#34;&gt;Contributing&lt;/a&gt; | &lt;a href=&#34;https://eslint.org/docs/developer-guide/contributing/reporting-bugs&#34;&gt;Reporting Bugs&lt;/a&gt; | &lt;a href=&#34;https://eslint.org/conduct&#34;&gt;Code of Conduct&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/geteslint&#34;&gt;Twitter&lt;/a&gt; | &lt;a href=&#34;https://groups.google.com/group/eslint&#34;&gt;Mailing List&lt;/a&gt; | &lt;a href=&#34;https://eslint.org/chat&#34;&gt;Chat Room&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ESLint uses &lt;a href=&#34;https://github.com/eslint/espree&#34;&gt;Espree&lt;/a&gt; for JavaScript parsing.&lt;/li&gt; &#xA; &lt;li&gt;ESLint uses an AST to evaluate patterns in code.&lt;/li&gt; &#xA; &lt;li&gt;ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#installation-and-usage&#34;&gt;Installation and Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#code-of-conduct&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#filing-issues&#34;&gt;Filing Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#faq&#34;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#security-policy&#34;&gt;Security Policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#semantic-versioning-policy&#34;&gt;Semantic Versioning Policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#stylistic-rule-updates&#34;&gt;Stylistic Rule Updates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#team&#34;&gt;Team&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eslint/eslint/main/#technology-sponsors&#34;&gt;Technology Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;installation-and-usage&#34;&gt;&lt;/a&gt;Installation and Usage&lt;/h2&gt; &#xA;&lt;p&gt;Prerequisites: &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; (&lt;code&gt;^12.22.0&lt;/code&gt;, &lt;code&gt;^14.17.0&lt;/code&gt;, or &lt;code&gt;&amp;gt;=16.0.0&lt;/code&gt;) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)&lt;/p&gt; &#xA;&lt;p&gt;You can install and configure ESLint using this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm init @eslint/config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After that, you can run ESLint on any file or directory like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./node_modules/.bin/eslint yourfile.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;configuration&#34;&gt;&lt;/a&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;After running &lt;code&gt;npm init @eslint/config&lt;/code&gt;, you&#39;ll have a &lt;code&gt;.eslintrc&lt;/code&gt; file in your directory. In it, you&#39;ll see some rules configured like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;rules&#34;: {&#xA;        &#34;semi&#34;: [&#34;error&#34;, &#34;always&#34;],&#xA;        &#34;quotes&#34;: [&#34;error&#34;, &#34;double&#34;]&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The names &lt;code&gt;&#34;semi&#34;&lt;/code&gt; and &lt;code&gt;&#34;quotes&#34;&lt;/code&gt; are the names of &lt;a href=&#34;https://eslint.org/docs/rules&#34;&gt;rules&lt;/a&gt; in ESLint. The first value is the error level of the rule and can be one of these values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&#34;off&#34;&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; - turn the rule off&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&#34;warn&#34;&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; - turn the rule on as a warning (doesn&#39;t affect exit code)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&#34;error&#34;&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt; - turn the rule on as an error (exit code will be 1)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the &lt;a href=&#34;https://eslint.org/docs/user-guide/configuring&#34;&gt;configuration docs&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;code-of-conduct&#34;&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;ESLint adheres to the &lt;a href=&#34;https://eslint.org/conduct&#34;&gt;JS Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;filing-issues&#34;&gt;&lt;/a&gt;Filing Issues&lt;/h2&gt; &#xA;&lt;p&gt;Before filing an issue, please be sure to read the guidelines for what you&#39;re reporting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eslint.org/docs/developer-guide/contributing/reporting-bugs&#34;&gt;Bug Report&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eslint.org/docs/developer-guide/contributing/new-rules&#34;&gt;Propose a New Rule&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eslint.org/docs/developer-guide/contributing/rule-changes&#34;&gt;Proposing a Rule Change&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eslint.org/docs/developer-guide/contributing/changes&#34;&gt;Request a Change&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;faq&#34;&gt;&lt;/a&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;h3&gt;I&#39;m using JSCS, should I migrate to ESLint?&lt;/h3&gt; &#xA;&lt;p&gt;Yes. &lt;a href=&#34;https://eslint.org/blog/2016/07/jscs-end-of-life&#34;&gt;JSCS has reached end of life&lt;/a&gt; and is no longer supported.&lt;/p&gt; &#xA;&lt;p&gt;We have prepared a &lt;a href=&#34;https://eslint.org/docs/user-guide/migrating-from-jscs&#34;&gt;migration guide&lt;/a&gt; to help you convert your JSCS settings to an ESLint configuration.&lt;/p&gt; &#xA;&lt;p&gt;We are now at or near 100% compatibility with JSCS. If you try ESLint and believe we are not yet compatible with a JSCS rule/configuration, please create an issue (mentioning that it is a JSCS compatibility issue) and we will evaluate it as per our normal process.&lt;/p&gt; &#xA;&lt;h3&gt;Does Prettier replace ESLint?&lt;/h3&gt; &#xA;&lt;p&gt;No, ESLint does both traditional linting (looking for problematic patterns) and style checking (enforcement of conventions). You can use ESLint for everything, or you can combine both using Prettier to format your code and ESLint to catch possible errors.&lt;/p&gt; &#xA;&lt;h3&gt;Why can&#39;t ESLint find my plugins?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure your plugins (and ESLint) are both in your project&#39;s &lt;code&gt;package.json&lt;/code&gt; as devDependencies (or dependencies, if your project uses ESLint at runtime).&lt;/li&gt; &#xA; &lt;li&gt;Make sure you have run &lt;code&gt;npm install&lt;/code&gt; and all your dependencies are installed.&lt;/li&gt; &#xA; &lt;li&gt;Make sure your plugins&#39; peerDependencies have been installed as well. You can use &lt;code&gt;npm view eslint-plugin-myplugin peerDependencies&lt;/code&gt; to see what peer dependencies &lt;code&gt;eslint-plugin-myplugin&lt;/code&gt; has.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Does ESLint support JSX?&lt;/h3&gt; &#xA;&lt;p&gt;Yes, ESLint natively supports parsing JSX syntax (this must be enabled in &lt;a href=&#34;https://eslint.org/docs/user-guide/configuring&#34;&gt;configuration&lt;/a&gt;). Please note that supporting JSX syntax &lt;em&gt;is not&lt;/em&gt; the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn&#39;t recognize. We recommend using &lt;a href=&#34;https://www.npmjs.com/package/eslint-plugin-react&#34;&gt;eslint-plugin-react&lt;/a&gt; if you are using React and want React semantics.&lt;/p&gt; &#xA;&lt;h3&gt;What ECMAScript versions does ESLint support?&lt;/h3&gt; &#xA;&lt;p&gt;ESLint has full support for ECMAScript 3, 5 (default), 2015, 2016, 2017, 2018, 2019, 2020, 2021 and 2022. You can set your desired ECMAScript syntax (and other settings, like global variables or your target environments) through &lt;a href=&#34;https://eslint.org/docs/user-guide/configuring&#34;&gt;configuration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;What about experimental features?&lt;/h3&gt; &#xA;&lt;p&gt;ESLint&#39;s parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis.&lt;/p&gt; &#xA;&lt;p&gt;In other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and/or rule plugins. If you are using Babel, you can use &lt;a href=&#34;https://www.npmjs.com/package/@babel/eslint-parser&#34;&gt;@babel/eslint-parser&lt;/a&gt; and &lt;a href=&#34;https://www.npmjs.com/package/@babel/eslint-plugin&#34;&gt;@babel/eslint-plugin&lt;/a&gt; to use any option available in Babel.&lt;/p&gt; &#xA;&lt;p&gt;Once a language feature has been adopted into the ECMAScript standard (stage 4 according to the &lt;a href=&#34;https://tc39.github.io/process-document/&#34;&gt;TC39 process&lt;/a&gt;), we will accept issues and pull requests related to the new feature, subject to our &lt;a href=&#34;https://eslint.org/docs/developer-guide/contributing&#34;&gt;contributing guidelines&lt;/a&gt;. Until then, please use the appropriate parser and plugin(s) for your experimental feature.&lt;/p&gt; &#xA;&lt;h3&gt;Where to ask for help?&lt;/h3&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://groups.google.com/group/eslint&#34;&gt;Mailing List&lt;/a&gt; or &lt;a href=&#34;https://eslint.org/chat&#34;&gt;Chatroom&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Why doesn&#39;t ESLint lock dependency versions?&lt;/h3&gt; &#xA;&lt;p&gt;Lock files like &lt;code&gt;package-lock.json&lt;/code&gt; are helpful for deployed applications. They ensure that dependencies are consistent between environments and across deployments.&lt;/p&gt; &#xA;&lt;p&gt;Packages like &lt;code&gt;eslint&lt;/code&gt; that get published to the npm registry do not include lock files. &lt;code&gt;npm install eslint&lt;/code&gt; as a user will respect version constraints in ESLint&#39;s &lt;code&gt;package.json&lt;/code&gt;. ESLint and its dependencies will be included in the user&#39;s lock file if one exists, but ESLint&#39;s own lock file would not be used.&lt;/p&gt; &#xA;&lt;p&gt;We intentionally don&#39;t lock dependency versions so that we have the latest compatible dependency versions in development and CI that our users get when installing ESLint in a project.&lt;/p&gt; &#xA;&lt;p&gt;The Twilio blog has a &lt;a href=&#34;https://www.twilio.com/blog/lockfiles-nodejs&#34;&gt;deeper dive&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;releases&#34;&gt;&lt;/a&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;We have scheduled releases every two weeks on Friday or Saturday. You can follow a &lt;a href=&#34;https://github.com/eslint/eslint/issues?q=is%3Aopen+is%3Aissue+label%3Arelease&#34;&gt;release issue&lt;/a&gt; for updates about the scheduling of any particular release.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;security-policy&#34;&gt;&lt;/a&gt;Security Policy&lt;/h2&gt; &#xA;&lt;p&gt;ESLint takes security seriously. We work hard to ensure that ESLint is safe for everyone and that security issues are addressed quickly and responsibly. Read the full &lt;a href=&#34;https://github.com/eslint/.github/raw/master/SECURITY.md&#34;&gt;security policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;semantic-versioning-policy&#34;&gt;&lt;/a&gt;Semantic Versioning Policy&lt;/h2&gt; &#xA;&lt;p&gt;ESLint follows &lt;a href=&#34;https://semver.org&#34;&gt;semantic versioning&lt;/a&gt;. However, due to the nature of ESLint as a code quality tool, it&#39;s not always clear when a minor or major version bump occurs. To help clarify this for everyone, we&#39;ve defined the following semantic versioning policy for ESLint:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Patch release (intended to not break your lint build) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A bug fix in a rule that results in ESLint reporting fewer linting errors.&lt;/li&gt; &#xA;   &lt;li&gt;A bug fix to the CLI or core (including formatters).&lt;/li&gt; &#xA;   &lt;li&gt;Improvements to documentation.&lt;/li&gt; &#xA;   &lt;li&gt;Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.&lt;/li&gt; &#xA;   &lt;li&gt;Re-releasing after a failed release (i.e., publishing a release that doesn&#39;t work for anyone).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Minor release (might break your lint build) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A bug fix in a rule that results in ESLint reporting more linting errors.&lt;/li&gt; &#xA;   &lt;li&gt;A new rule is created.&lt;/li&gt; &#xA;   &lt;li&gt;A new option to an existing rule that does not result in ESLint reporting more linting errors by default.&lt;/li&gt; &#xA;   &lt;li&gt;A new addition to an existing rule to support a newly-added language feature (within the last 12 months) that will result in ESLint reporting more linting errors by default.&lt;/li&gt; &#xA;   &lt;li&gt;An existing rule is deprecated.&lt;/li&gt; &#xA;   &lt;li&gt;A new CLI capability is created.&lt;/li&gt; &#xA;   &lt;li&gt;New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.).&lt;/li&gt; &#xA;   &lt;li&gt;A new formatter is created.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;eslint:recommended&lt;/code&gt; is updated and will result in strictly fewer linting errors (e.g., rule removals).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Major release (likely to break your lint build) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;eslint:recommended&lt;/code&gt; is updated and may result in new linting errors (e.g., rule additions, most rule option updates).&lt;/li&gt; &#xA;   &lt;li&gt;A new option to an existing rule that results in ESLint reporting more linting errors by default.&lt;/li&gt; &#xA;   &lt;li&gt;An existing formatter is removed.&lt;/li&gt; &#xA;   &lt;li&gt;Part of the public API is removed or changed in an incompatible way. The public API includes: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Rule schemas&lt;/li&gt; &#xA;     &lt;li&gt;Configuration schema&lt;/li&gt; &#xA;     &lt;li&gt;Command-line options&lt;/li&gt; &#xA;     &lt;li&gt;Node.js API&lt;/li&gt; &#xA;     &lt;li&gt;Rule, formatter, parser, plugin APIs&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;According to our policy, any minor update may report more linting errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde (&lt;code&gt;~&lt;/code&gt;) in &lt;code&gt;package.json&lt;/code&gt; e.g. &lt;code&gt;&#34;eslint&#34;: &#34;~3.1.0&#34;&lt;/code&gt; to guarantee the results of your builds.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;stylistic-rule-updates&#34;&gt;&lt;/a&gt;Stylistic Rule Updates&lt;/h2&gt; &#xA;&lt;p&gt;Stylistic rules are frozen according to &lt;a href=&#34;https://eslint.org/blog/2020/05/changes-to-rules-policies&#34;&gt;our policy&lt;/a&gt; on how we evaluate new rules and rule changes. This means:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bug fixes&lt;/strong&gt;: We will still fix bugs in stylistic rules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;New ECMAScript features&lt;/strong&gt;: We will also make sure stylistic rules are compatible with new ECMAScript features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;New options&lt;/strong&gt;: We will &lt;strong&gt;not&lt;/strong&gt; add any new options to stylistic rules unless an option is the only way to fix a bug or support a newly-added ECMAScript feature.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;license&#34;&gt;&lt;/a&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;team&#34;&gt;&lt;/a&gt;Team&lt;/h2&gt; &#xA;&lt;p&gt;These folks keep the project moving and are resources for help.&lt;/p&gt; &#xA;&lt;!-- NOTE: This section is autogenerated. Do not manually edit.--&gt; &#xA;&lt;!--teamstart--&gt; &#xA;&lt;h3&gt;Technical Steering Committee (TSC)&lt;/h3&gt; &#xA;&lt;p&gt;The people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained.&lt;/p&gt; &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;11%&#34;&gt; &lt;a href=&#34;https://github.com/nzakas&#34;&gt; &lt;img src=&#34;https://github.com/nzakas.png?s=75&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;br&gt; Nicholas C. Zakas &lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;11%&#34;&gt; &lt;a href=&#34;https://github.com/btmills&#34;&gt; &lt;img src=&#34;https://github.com/btmills.png?s=75&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;br&gt; Brandon Mills &lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;11%&#34;&gt; &lt;a href=&#34;https://github.com/mdjermanovic&#34;&gt; &lt;img src=&#34;https://github.com/mdjermanovic.png?s=75&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;br&gt; Milos Djermanovic &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Reviewers&lt;/h3&gt; &#xA;&lt;p&gt;The people who review and implement new features.&lt;/p&gt; &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;11%&#34;&gt; &lt;a href=&#34;https://github.com/aladdin-add&#34;&gt; &lt;img src=&#34;https://github.com/aladdin-add.png?s=75&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;br&gt; 唯然 &lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;11%&#34;&gt; &lt;a href=&#34;https://github.com/snitin315&#34;&gt; &lt;img src=&#34;https://github.com/snitin315.png?s=75&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;br&gt; Nitin Kumar &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Committers&lt;/h3&gt; &#xA;&lt;p&gt;The people who review and fix bugs and help triage issues.&lt;/p&gt; &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;11%&#34;&gt; &lt;a href=&#34;https://github.com/brettz9&#34;&gt; &lt;img src=&#34;https://github.com/brettz9.png?s=75&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;br&gt; Brett Zamir &lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;11%&#34;&gt; &lt;a href=&#34;https://github.com/bmish&#34;&gt; &lt;img src=&#34;https://github.com/bmish.png?s=75&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;br&gt; Bryan Mishkin &lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;11%&#34;&gt; &lt;a href=&#34;https://github.com/SaraSoueidan&#34;&gt; &lt;img src=&#34;https://github.com/SaraSoueidan.png?s=75&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;br&gt; Sara Soueidan &lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;11%&#34;&gt; &lt;a href=&#34;https://github.com/g-plane&#34;&gt; &lt;img src=&#34;https://github.com/g-plane.png?s=75&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;br&gt; Pig Fang &lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;11%&#34;&gt; &lt;a href=&#34;https://github.com/anikethsaha&#34;&gt; &lt;img src=&#34;https://github.com/anikethsaha.png?s=75&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;br&gt; Anix &lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;11%&#34;&gt; &lt;a href=&#34;https://github.com/yeonjuan&#34;&gt; &lt;img src=&#34;https://github.com/yeonjuan.png?s=75&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;br&gt; YeonJuan &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!--teamend--&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;sponsors&#34;&gt;&lt;/a&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;The following companies, organizations, and individuals support ESLint&#39;s ongoing maintenance and development. &lt;a href=&#34;https://opencollective.com/eslint&#34;&gt;Become a Sponsor&lt;/a&gt; to get your logo on our README and website.&lt;/p&gt; &#xA;&lt;!-- NOTE: This section is autogenerated. Do not manually edit.--&gt; &#xA;&lt;!--sponsorsstart--&gt; &#xA;&lt;h3&gt;Platinum Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://automattic.com&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/automattic/d0ef3e1/logo.png&#34; alt=&#34;Automattic&#34; height=&#34;undefined&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3&gt;Gold Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.salesforce.com&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/salesforce/ca8f997/logo.png&#34; alt=&#34;Salesforce&#34; height=&#34;96&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.airbnb.com/&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/airbnb/d327d66/logo.png&#34; alt=&#34;Airbnb&#34; height=&#34;96&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://americanexpress.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3853301?v=4&#34; alt=&#34;American Express&#34; height=&#34;96&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3&gt;Silver Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://liftoff.io/&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/liftoff/5c4fa84/logo.png&#34; alt=&#34;Liftoff&#34; height=&#34;64&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3&gt;Bronze Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://launchdarkly.com&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/launchdarkly/574bb9e/logo.png&#34; alt=&#34;launchdarkly&#34; height=&#34;32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nx.dev&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/nx/0efbe42/logo.png&#34; alt=&#34;Nx (by Nrwl)&#34; height=&#34;32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.crosswordsolver.org/anagram-solver/&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/anagram-solver/2666271/logo.png&#34; alt=&#34;Anagram Solver&#34; height=&#34;32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.vpsserver.com&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/vpsservercom/logo.png&#34; alt=&#34;VPS&#34; height=&#34;32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://icons8.com&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/icons8/7fa1641/logo.png&#34; alt=&#34;Icons8: free icons, photos, illustrations, and music&#34; height=&#34;32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/discordapp/f9645d9/logo.png&#34; alt=&#34;Discord&#34; height=&#34;32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://themeisle.com&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/themeisle/d5592fe/logo.png&#34; alt=&#34;ThemeIsle&#34; height=&#34;32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.ignitionapp.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5753491?v=4&#34; alt=&#34;Ignition&#34; height=&#34;32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://herocoders.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/37549774?v=4&#34; alt=&#34;HeroCoders&#34; height=&#34;32&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!--sponsorsend--&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;technology-sponsors&#34;&gt;&lt;/a&gt;Technology Sponsors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Site search (&lt;a href=&#34;https://eslint.org&#34;&gt;eslint.org&lt;/a&gt;) is sponsored by &lt;a href=&#34;https://www.algolia.com&#34;&gt;Algolia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hosting for (&lt;a href=&#34;https://eslint.org&#34;&gt;eslint.org&lt;/a&gt;) is sponsored by &lt;a href=&#34;https://www.netlify.com&#34;&gt;Netlify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Password management is sponsored by &lt;a href=&#34;https://www.1password.com&#34;&gt;1Password&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>gildas-lormeau/SingleFile</title>
    <updated>2022-11-20T01:34:01Z</updated>
    <id>tag:github.com,2022-11-20:/gildas-lormeau/SingleFile</id>
    <link href="https://github.com/gildas-lormeau/SingleFile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Web Extension and CLI tool for saving a faithful copy of an entire web page in a single HTML file&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SingleFile&lt;/h1&gt; &#xA;&lt;p&gt;SingleFile is a Web Extension (and a CLI tool) compatible with Chrome, Firefox (Desktop and Mobile), Microsoft Edge, Safari, Vivaldi, Brave, Waterfox, Yandex browser, and Opera. It helps you to save a complete web page into a single HTML file.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#additional-notes&#34;&gt;Additional notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#release-notes&#34;&gt;Release notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#known-issues&#34;&gt;Known issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#troubleshooting-unknown-issues&#34;&gt;Troubleshooting unknown issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#command-line-interface-singlefile-cli&#34;&gt;Command Line Interface (SingleFile CLI)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#integration-with-user-scripts&#34;&gt;Integration with user scripts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#singlefilez&#34;&gt;SingleFileZ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#file-format-comparison&#34;&gt;File format comparison&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#projects-usingcompatible-with-singlefile&#34;&gt;Projects using/compatible with SingleFile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#privacy-policy&#34;&gt;Privacy policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#icons&#34;&gt;Icons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#code-derived-from-third-party-projects&#34;&gt;Code derived from third party projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gildas-lormeau/SingleFile/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/396787/156664907-cc458e35-f41b-45ca-91eb-372213812b44.mp4&#34;&gt;https://user-images.githubusercontent.com/396787/156664907-cc458e35-f41b-45ca-91eb-372213812b44.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;SingleFile can be installed on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Firefox: &lt;a href=&#34;https://addons.mozilla.org/firefox/addon/single-file&#34;&gt;https://addons.mozilla.org/firefox/addon/single-file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chrome: &lt;a href=&#34;https://chrome.google.com/extensions/detail/mpiodijhokgodhhofbcjdecpffjipkle&#34;&gt;https://chrome.google.com/extensions/detail/mpiodijhokgodhhofbcjdecpffjipkle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Safari: &lt;a href=&#34;https://apps.apple.com/us/app/singlefile-for-safari/id6444322545&#34;&gt;https://apps.apple.com/us/app/singlefile-for-safari/id6444322545&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Edge: &lt;a href=&#34;https://microsoftedge.microsoft.com/addons/detail/efnbkdcfmcmnhlkaijjjmhjjgladedno&#34;&gt;https://microsoftedge.microsoft.com/addons/detail/efnbkdcfmcmnhlkaijjjmhjjgladedno&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Firefox for Android Nightly by following this procedure: &lt;a href=&#34;https://blog.mozilla.org/addons/2020/09/29/expanded-extension-support-in-firefox-for-android-nightly/&#34;&gt;https://blog.mozilla.org/addons/2020/09/29/expanded-extension-support-in-firefox-for-android-nightly/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also download the zip file (&lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/archive/master.zip&#34;&gt;https://github.com/gildas-lormeau/SingleFile/archive/master.zip&lt;/a&gt;) of the project and install it manually by unzipping it somewhere on your disk and following these instructions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Firefox: &lt;a href=&#34;https://extensionworkshop.com/documentation/develop/temporary-installation-in-firefox/&#34;&gt;https://extensionworkshop.com/documentation/develop/temporary-installation-in-firefox/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chrome: &lt;a href=&#34;https://developer.chrome.com/docs/extensions/mv3/getstarted/development-basics/#load-unpacked&#34;&gt;https://developer.chrome.com/docs/extensions/mv3/getstarted/development-basics/#load-unpacked&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Edge: &lt;a href=&#34;https://docs.microsoft.com/en-us/microsoft-edge/extensions-chromium/getting-started/extension-sideloading&#34;&gt;https://docs.microsoft.com/en-us/microsoft-edge/extensions-chromium/getting-started/extension-sideloading&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Safari: &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile-Safari-Extension&#34;&gt;https://github.com/gildas-lormeau/SingleFile-Safari-Extension&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click on the SingleFile button in the extension toolbar to save the page.&lt;/li&gt; &#xA; &lt;li&gt;You can click again on the button to cancel the action when processing a page.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the context menu by right-clicking the SingleFile button in the extension toolbar or on the webpage. It allows you to save: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the current tab,&lt;/li&gt; &#xA;   &lt;li&gt;the selected content,&lt;/li&gt; &#xA;   &lt;li&gt;the selected frame.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also process multiple tabs in one click and save: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the selected tabs,&lt;/li&gt; &#xA;   &lt;li&gt;the unpinned tabs,&lt;/li&gt; &#xA;   &lt;li&gt;all the tabs.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Select &#34;Annotate and save the page...&#34; in the context menu to: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;highlight text,&lt;/li&gt; &#xA;   &lt;li&gt;add notes,&lt;/li&gt; &#xA;   &lt;li&gt;remove content.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The context menu also allows you to activate the auto-save of: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the current tab,&lt;/li&gt; &#xA;   &lt;li&gt;the unpinned tabs,&lt;/li&gt; &#xA;   &lt;li&gt;all the tabs.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;With auto-save active, pages are automatically saved every time after being loaded (or before being unloaded if not).&lt;/li&gt; &#xA; &lt;li&gt;Right-click on the SingleFile button and select &#34;Manage extension&#34; (Firefox) / &#34;Options&#34; (Chrome) to open the options page.&lt;/li&gt; &#xA; &lt;li&gt;Enable the option &#34;Destination &amp;gt; save to Google Drive&#34; or &#34;Destination &amp;gt; upload to GitHub&#34; to upload pages to Google Drive or GitHub respectively.&lt;/li&gt; &#xA; &lt;li&gt;Enable the option &#34;Misc. &amp;gt; add proof of existence&#34; to prove the existence of saved pages by linking the SHA256 of the pages into the blockchain.&lt;/li&gt; &#xA; &lt;li&gt;You can use the customizable shortkey Ctrl+Shift+Y to save the current tab or the selected tabs. Go to about:addons and select &#34;Manage extension shortcuts&#34; in the cogwheel menu to change it in Firefox. Go to chrome://extensions/shortcuts to change it in Chrome.&lt;/li&gt; &#xA; &lt;li&gt;The default save folder is the download folder configured in your browser, cf. about:addons in Firefox and chrome://settings in Chrome.&lt;/li&gt; &#xA; &lt;li&gt;See the extension help in the options page for more detailed information about the options and technical notes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/raw/master/faq.md&#34;&gt;https://github.com/gildas-lormeau/SingleFile/blob/master/faq.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release notes&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://addons.mozilla.org/firefox/addon/single-file/versions/&#34;&gt;https://addons.mozilla.org/firefox/addon/single-file/versions/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All browsers: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For security reasons, you cannot save pages hosted on &lt;a href=&#34;https://chrome.google.com&#34;&gt;https://chrome.google.com&lt;/a&gt;, &lt;a href=&#34;https://addons.mozilla.org&#34;&gt;https://addons.mozilla.org&lt;/a&gt; and some other Mozilla domains. When this happens, 🛇 is displayed on top of the SingleFile icon.&lt;/li&gt; &#xA;   &lt;li&gt;For &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image&#34;&gt;security reasons&lt;/a&gt;, SingleFile is sometimes unable to save the image representation of &lt;a href=&#34;https://developer.mozilla.org/docs/Web/HTML/Element/canvas&#34;&gt;canvas&lt;/a&gt; and snapshots of &lt;a href=&#34;https://developer.mozilla.org/docs/Web/HTML/Element/video&#34;&gt;video&lt;/a&gt; elements.&lt;/li&gt; &#xA;   &lt;li&gt;The last saved path cannot be remembered by default. To circumvent this limitation, disable the option &#34;Misc &amp;gt; save pages in background&#34;.&lt;/li&gt; &#xA;   &lt;li&gt;The following characters are replaced with &lt;code&gt;_&lt;/code&gt; in file names: &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;&#34;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Chromium-based browsers: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You must enable the option &#34;Allow access to file URLs&#34; in the extension page to display the infobar when viewing a saved page, and to save or to annotate a page stored on the filesystem.&lt;/li&gt; &#xA;   &lt;li&gt;If the file name of a saved page looks like &#34;56833935-156b-4d8c-a00f-19599c6513d3.html&#34;, disable the option &#34;Misc &amp;gt; save pages in background&#34;. Reinstalling the browser may also fix this issue. You can find more info about this bug &lt;a href=&#34;https://bugs.chromium.org/p/chromium/issues/detail?id=892133&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Disabling the option &#34;File name &amp;gt; open the &#34;Save as&#34; dialog to confirm the file name&#34; will work if and only if the option &#34;Ask where to save each file before downloading&#34; is disabled in chrome://settings/downloads.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Firefox: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The &#34;File name &amp;gt; file name conflict resolution&#34; option does not work if set to &#34;prompt for a name&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Sometimes, SingleFile is unable to save the contents of sandboxed iframes because of &lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1411641&#34;&gt;this bug&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;When processing a page from the filesystem, external resources (e.g. images, stylesheets, fonts etc.) will not be embedded into the saved page. You can find more info about this bug &lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1644488&#34;&gt;here&lt;/a&gt;. This bug has been closed by Mozilla as &#34;WontFix&#34;. But there is a simple workaround proposed &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/issues/7#issuecomment-618980153&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Waterfox Classic &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;User interface elements displayed in the page (progress bar, logs panel) won&#39;t be displayed unless &lt;code&gt;dom.webcomponents.enabled&lt;/code&gt; is enabled in &lt;code&gt;about:config&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;When opening pages saved with the option &#34;Images &amp;gt; group duplicate images together&#34; enabled, some duplicate images might not displayed. It is recommended to disable this option.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting unknown issues&lt;/h2&gt; &#xA;&lt;p&gt;Please follow these steps if you find an unknown issue:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Save the page in incognito.&lt;/li&gt; &#xA; &lt;li&gt;If saving page in incognito did not fix the issue, reset SingleFile options.&lt;/li&gt; &#xA; &lt;li&gt;If resetting options did not fix the issue, restart the browser.&lt;/li&gt; &#xA; &lt;li&gt;If restarting the browser did not fix the issue, try to disable all other extensions to see if there is a conflict.&lt;/li&gt; &#xA; &lt;li&gt;If there is a conflict then try to determine against which extension(s).&lt;/li&gt; &#xA; &lt;li&gt;Please report the issue with a short description on how to reproduce it here: &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/issues&#34;&gt;https://github.com/gildas-lormeau/SingleFile/issues&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Command Line Interface (SingleFile CLI)&lt;/h2&gt; &#xA;&lt;p&gt;You can save web pages to HTML from the command line interface. See here for more info: &lt;a href=&#34;https://github.com/gildas-lormeau/single-file-cli&#34;&gt;https://github.com/gildas-lormeau/single-file-cli&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Integration with user scripts&lt;/h2&gt; &#xA;&lt;p&gt;You can execute a user script just before (and after) SingleFile saves a page. For more info, see &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/wiki/How-to-execute-a-user-script-before-a-page-is-saved&#34;&gt;https://github.com/gildas-lormeau/SingleFile/wiki/How-to-execute-a-user-script-before-a-page-is-saved&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;SingleFileZ&lt;/h2&gt; &#xA;&lt;p&gt;SingleFileZ is a fork of SingleFile that allows you to save a webpage as a self-extracting HTML file. This HTML file is also a valid ZIP file which contains the resources (images, fonts, stylesheets and frames) of the saved page. This ZIP file can be unzipped on the filesystem in order, for example, to view the page in a browser that would not support pages saved with SingleFileZ.&lt;/p&gt; &#xA;&lt;p&gt;More info here: &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFileZ&#34;&gt;https://github.com/gildas-lormeau/SingleFileZ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;File format comparison&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;HTML (SingleFile)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;HTML (SingleFileZ)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MAFF&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MHTML&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Webarchive (Safari)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;HTML+folder&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pages are saved as a single file&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HTML and styles are minified&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Unused HTML and styles are removed from files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Binary resources are not encoded in base 64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Files are compressed&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Files can be viewed without installing any extension&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓¹&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓²&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓³&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Files can be viewed without running JavaScript&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Files can be unzipped to extract resources and view pages&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n/a&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Files contains the text of the page (plain or formatted) which can be indexed&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓⁴&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Footnotes:&lt;/p&gt; &#xA;&lt;p&gt;¹ A switch must be passed from the command line in Chromium-based browsers, and an option must be enabled in Safari.&lt;/p&gt; &#xA;&lt;p&gt;² Only in Chromium-based browsers, and Internet Explorer.&lt;/p&gt; &#xA;&lt;p&gt;³ Only in Safari.&lt;/p&gt; &#xA;&lt;p&gt;⁴ An option must be enabled in the extension.&lt;/p&gt; &#xA;&lt;h2&gt;Projects using/compatible with SingleFile&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ArchiveBox - Open-source self-hosted web archiving: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox&#34;&gt;https://github.com/ArchiveBox/ArchiveBox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;htmls-to-datasette - Tool to index HTML files into a Sqlite database: &lt;a href=&#34;https://github.com/pjamar/htmls-to-datasette&#34;&gt;https://github.com/pjamar/htmls-to-datasette&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;obsidian-html-plugin - Plugin for reading HTML pages in Obsidian: &lt;a href=&#34;https://github.com/nuthrash/obsidian-html-plugin&#34;&gt;https://github.com/nuthrash/obsidian-html-plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Petal Cite Web Importer - Browser extension to save PDFs and capture web pages in Petal Cite: &lt;a href=&#34;https://github.com/ks-collab/cite-extension&#34;&gt;https://github.com/ks-collab/cite-extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;singlefile2trilium - Tool to save faithful copy of a web page as a Trilium note with SingleFile: &lt;a href=&#34;https://github.com/nil0x42/singlefile2trilium&#34;&gt;https://github.com/nil0x42/singlefile2trilium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SingleFileMacOS - Integration of SingleFile in a swift application using webkit: &lt;a href=&#34;https://github.com/captaindavepdx/SingleFileMacOS&#34;&gt;https://github.com/captaindavepdx/SingleFileMacOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zotero Connector - Browser extension for Zotero, a tool to help you collect, organize, cite, and share your research sources: &lt;a href=&#34;https://github.com/zotero/zotero-connectors&#34;&gt;https://github.com/zotero/zotero-connectors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Privacy Policy&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile/raw/master/privacy.md&#34;&gt;https://github.com/gildas-lormeau/SingleFile/blob/master/privacy.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chinese translation done by yfdyh000 (&lt;a href=&#34;https://github.com/yfdyh000&#34;&gt;https://github.com/yfdyh000&lt;/a&gt;), KrasnayaPloshchad (&lt;a href=&#34;https://github.com/KrasnayaPloshchad&#34;&gt;https://github.com/KrasnayaPloshchad&lt;/a&gt;), frostblazergit (&lt;a href=&#34;https://github.com/frostblazergit&#34;&gt;https://github.com/frostblazergit&lt;/a&gt;), dnknn (&lt;a href=&#34;https://github.com/dnknn&#34;&gt;https://github.com/dnknn&lt;/a&gt;), lqzhgood (&lt;a href=&#34;https://github.com/lqzhgood&#34;&gt;https://github.com/lqzhgood&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Traditional Chinese translation done by frostblazergit (&lt;a href=&#34;https://github.com/frostblazergit&#34;&gt;https://github.com/frostblazergit&lt;/a&gt;), lqzhgood (&lt;a href=&#34;https://github.com/lqzhgood&#34;&gt;https://github.com/lqzhgood&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;German translation done by womotroll (&lt;a href=&#34;https://github.com/womotroll&#34;&gt;https://github.com/womotroll&lt;/a&gt;), bannmann (&lt;a href=&#34;https://github.com/bannmann&#34;&gt;https://github.com/bannmann&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Italian translation done by Fastbyte01 (&lt;a href=&#34;https://github.com/Fastbyte01&#34;&gt;https://github.com/Fastbyte01&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Japanese translation done by Shitennouji（四天王寺) (&lt;a href=&#34;https://github.com/Shitennouji&#34;&gt;https://github.com/Shitennouji&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Polish translation done by xesarni (&lt;a href=&#34;https://github.com/xesarni&#34;&gt;https://github.com/xesarni&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Portuguese-Brazilian translation done by @mezysinc&lt;/li&gt; &#xA; &lt;li&gt;Russian translation done by rstp14, kramola-RU (&lt;a href=&#34;https://github.com/kramola-RU&#34;&gt;https://github.com/kramola-RU&lt;/a&gt;), solokot (&lt;a href=&#34;https://github.com/solokot&#34;&gt;https://github.com/solokot&lt;/a&gt;), TotalCaesar659 (&lt;a href=&#34;https://github.com/TotalCaesar659&#34;&gt;https://github.com/TotalCaesar659&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Ukrainian translation done by perdolka (&lt;a href=&#34;https://github.com/perdolka&#34;&gt;https://github.com/perdolka&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Spanish translation done by strel (&lt;a href=&#34;https://github.com/strel&#34;&gt;https://github.com/strel&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code derived from third party projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;csstree: &lt;a href=&#34;https://github.com/csstree/csstree&#34;&gt;https://github.com/csstree/csstree&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;postcss-media-query-parser: &lt;a href=&#34;https://github.com/dryoma/postcss-media-query-parser&#34;&gt;https://github.com/dryoma/postcss-media-query-parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;postcss-selector-parser: &lt;a href=&#34;https://github.com/postcss/postcss-selector-parser&#34;&gt;https://github.com/postcss/postcss-selector-parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;UglifyCSS: &lt;a href=&#34;https://github.com/fmarcia/UglifyCSS&#34;&gt;https://github.com/fmarcia/UglifyCSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;parse-srcset: &lt;a href=&#34;https://github.com/albell/parse-srcset&#34;&gt;https://github.com/albell/parse-srcset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;parse-css-font: &lt;a href=&#34;https://github.com/jedmao/parse-css-font&#34;&gt;https://github.com/jedmao/parse-css-font&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Readability: &lt;a href=&#34;https://github.com/mozilla/readability&#34;&gt;https://github.com/mozilla/readability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;whatwg-mimetype: &lt;a href=&#34;https://github.com/jsdom/whatwg-mimetype&#34;&gt;https://github.com/jsdom/whatwg-mimetype&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Icons&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Icon made by &lt;a href=&#34;https://www.flaticon.com/authors/kiranshastry&#34;&gt;Kiranshastry&lt;/a&gt; from &lt;a href=&#34;https://www.flaticon.com/&#34;&gt;Flaticon&lt;/a&gt; is licensed by &lt;a href=&#34;http://creativecommons.org/licenses/by/3.0/&#34;&gt;CC 3.0 BY&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;SingleFile is licensed under AGPL. Code derived from third-party projects is licensed under MIT. Please contact me at gildas.lormeau &amp;lt;at&amp;gt; gmail.com if you are interested in licensing the SingleFile code for a commercial service or product.&lt;/p&gt; &#xA;&lt;p&gt;Suggestions are welcome :)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>twitterdev/Twitter-API-v2-sample-code</title>
    <updated>2022-11-20T01:34:01Z</updated>
    <id>tag:github.com,2022-11-20:/twitterdev/Twitter-API-v2-sample-code</id>
    <link href="https://github.com/twitterdev/Twitter-API-v2-sample-code" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample code for the Twitter API v2 endpoints&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Twitter API v2 sample code &lt;a href=&#34;https://developer.twitter.com/en/docs/twitter-api&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Ftwbadges.glitch.me%2Fbadges%2Fv2&#34; alt=&#34;v2&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Sample code for the Twitter API v2 endpoints. Individual API features have folders where you can find examples of usage in several coding languages (Java, Node.js, Python, R, and Ruby).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/twitter-api/getting-started/about-twitter-api&#34;&gt;Twitter API Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Twitter API Essential Access (&lt;a href=&#34;https://t.co/signup&#34;&gt;sign up here&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;A Project and an App created &lt;a href=&#34;https://developer.twitter.com/en/portal/dashboard&#34;&gt;in the dashboard&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using the code samples&lt;/h2&gt; &#xA;&lt;p&gt;In order to run the samples in this repository you will need to set up some environment variables. You can find your credentials and bearer token in the App inside of your Project in the &lt;a href=&#34;https://developer.twitter.com/en/portal/projects-and-apps&#34;&gt;dashboard of the developer portal&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For OAuth 1.0a samples, you will need to export your consumer key and secret in your terminal. Be sure to replace &lt;code&gt;&amp;lt;your_consumer_key&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;your_consumer_secret&amp;gt;&lt;/code&gt; with your own credentials without the &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export CONSUMER_KEY=&#39;&amp;lt;your_consumer_key&amp;gt;&#39;&#xA;export CONSUMER_SECRET=&#39;&amp;lt;your_consumer_secret&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For samples which use bearer token authentication, you will need to export the bearer token. Be sure to replace &lt;code&gt;&amp;lt;your_bearer_token&amp;gt;&lt;/code&gt; with your own bearer token without the &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export BEARER_TOKEN=&#39;&amp;lt;your_bearer_token&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Language-specific requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Java environment set up&lt;/h3&gt; &#xA;&lt;p&gt;If you use Homebrew, you can install a Java runtime using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew cask install java&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will also need to download the relevant JAR files referenced in the individual samples in order to build and run the code. If you use an IDE, it may be able to do this automatically for you.&lt;/p&gt; &#xA;&lt;h3&gt;JavaScript (Node.js) environment set up&lt;/h3&gt; &#xA;&lt;p&gt;You will need to have Node.js installed to run this code. All Node.js examples use &lt;code&gt;needle&lt;/code&gt; as the HTTP client, which needs to be npm installed. For OAuth with user context requests, you&#39;ll need to install the &lt;code&gt;got&lt;/code&gt; and &lt;code&gt;oauth-1.0a&lt;/code&gt; packages.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install needle&#xA;npm install got&#xA;npm install oauth-1.0a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Python environment set up&lt;/h3&gt; &#xA;&lt;p&gt;You will need to have Python 3 installed to run this code. The Python samples use &lt;code&gt;requests==2.24.0&lt;/code&gt; which uses &lt;code&gt;requests-oauthlib==1.3.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;(Optionally) It is common and recommended not to install required package globally, but locally under project subfolder using &lt;code&gt;venv&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m venv venv&#xA;source venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install these packages as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install requests&#xA;pip install requests-oauthlib&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ruby environment set up&lt;/h3&gt; &#xA;&lt;p&gt;You will need to have Ruby (recommended: &amp;gt;= 2.0.0) installed in order to run the code. The Ruby examples use &lt;code&gt;typhoeus&lt;/code&gt; as the HTTP client, which needs to be gem installed. For OAuth with user context requests, you&#39;ll also need to install the &lt;code&gt;oauth&lt;/code&gt; gem (see below).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gem install typhoeus&#xA;gem install oauth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Additional resources&lt;/h2&gt; &#xA;&lt;p&gt;We maintain a &lt;a href=&#34;https://getpostman.com&#34;&gt;Postman&lt;/a&gt; Collection which you can use for exercising individual API endpoints.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tutorials/postman-getting-started&#34;&gt;Using Postman with the Twitter API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.co/twitter-api-postman&#34;&gt;Twitter API v2 on the Postman website&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For general questions related to the API and features, please use the v2 section of our &lt;a href=&#34;https://twittercommunity.com/c/twitter-api/twitter-api-v2/65&#34;&gt;developer community forums&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If there&#39;s an bug or issue with the sample code itself, please create a &lt;a href=&#34;https://github.com/twitterdev/Twitter-API-v2-sample-code/issues&#34;&gt;new issue&lt;/a&gt; here on GitHub.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome pull requests that add meaningful additions to these code samples, particularly for languages that are not yet represented here.&lt;/p&gt; &#xA;&lt;p&gt;We feel that a welcoming community is important and we ask that you follow Twitter&#39;s &lt;a href=&#34;https://github.com/twitter/.github/raw/main/code-of-conduct.md&#34;&gt;Open Source Code of Conduct&lt;/a&gt; in all interactions with the community.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2021 Twitter, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0: &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>