<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-02T01:34:19Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>thevahidal/soul</title>
    <updated>2022-11-02T01:34:19Z</updated>
    <id>tag:github.com,2022-11-02:/thevahidal/soul</id>
    <link href="https://github.com/thevahidal/soul" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A SQLite RESTful server&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/thevahidal/soul/main/docs/logo.png&#34; height=&#34;150px&#34; style=&#34;&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; A SQLite RESTful server &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install Soul CLI with npm&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  npm install -g soul-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Soul is command line tool, after installing it, Run &lt;code&gt;soul -d sqlite.db -p 8000&lt;/code&gt; and it&#39;ll start a RESTful API on &lt;a href=&#34;http://localhost:8000&#34;&gt;localhost:8000&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Usage: soul [options]&#xA;&#xA;&#xA;Options:&#xA;      --version             Show version number                        [boolean]&#xA;  -d, --database            SQLite database file or :memory: [string] [required]&#xA;  -p, --port                Port to listen on                           [number]&#xA;  -r, --rate-limit-enabled  Enable rate limiting                       [boolean]&#xA;      --help                Show help                                  [boolean]&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then to test Soul is working run the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl http://localhost:8000/api/tables&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It should return a list of the tables inside &lt;code&gt;sqlite.db&lt;/code&gt; database.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;API documentation is available while the project is running at &lt;a href=&#34;http://localhost:8000/api/docs&#34;&gt;http://localhost:8000/api/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/thevahidal/soul # Clone project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Core API&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd core # Move into the core directory&#xA;&#xA;cp .env.sample .env # Duplicate sample environment variables&#xA;nano .env # Update the environment variables&#xA;&#xA;npm install # Install dependencies&#xA;npm run dev # Start the dev server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Studio&lt;/h3&gt; &#xA;&lt;p&gt;Make sure that Soul Core API is up and running and then&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd studio # Move into the studio directory&#xA;&#xA;cp .env.sample .env # Duplicate sample environment variables&#xA;nano .env # Update the environment variables&#xA;&#xA;npm install # Install dependencies&#xA;npm run dev # Start the dev server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are always welcome!&lt;/p&gt; &#xA;&lt;p&gt;See &lt;code&gt;contributing.md&lt;/code&gt; for ways to get started and please adhere to &lt;code&gt;code of conduct&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/thevahidal&#34;&gt;@thevahidal&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>youzan/vant-weapp</title>
    <updated>2022-11-02T01:34:19Z</updated>
    <id>tag:github.com,2022-11-02:/youzan/vant-weapp</id>
    <link href="https://github.com/youzan/vant-weapp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;轻量、可靠的小程序 UI 组件库&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;logo&#34; src=&#34;https://img.yzcdn.cn/vant/logo.png&#34; width=&#34;120&#34; style=&#34;margin-bottom: 10px;&#34;&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;轻量、可靠的小程序 UI 组件库&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/@vant/weapp.svg?style=for-the-badge&#34; alt=&#34;npm version&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?style=for-the-badge&amp;amp;color=#4fc08d&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dt/@vant/weapp.svg?style=for-the-badge&amp;amp;color=#4fc08d&#34; alt=&#34;downloads&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/@vant/weapp.svg?style=for-the-badge&amp;amp;color=#4fc08d&#34; alt=&#34;downloads&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 🔥 &lt;a href=&#34;https://vant-contrib.gitee.io/vant-weapp&#34;&gt;文档网站（国内）&lt;/a&gt; &amp;nbsp; 🌈 &lt;a href=&#34;https://vant-ui.github.io/vant-weapp&#34;&gt;文档网站（GitHub）&lt;/a&gt; &amp;nbsp; 🚀 &lt;a href=&#34;https://github.com/vant-ui/vant&#34; target=&#34;_blank&#34;&gt;Vue 版&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;介绍&lt;/h3&gt; &#xA;&lt;p&gt;Vant 是一个&lt;strong&gt;轻量、可靠的移动端组件库&lt;/strong&gt;，于 2017 年开源。&lt;/p&gt; &#xA;&lt;p&gt;目前 Vant 官方提供了 &lt;a href=&#34;https://vant-contrib.gitee.io/vant/v2&#34;&gt;Vue 2 版本&lt;/a&gt;、&lt;a href=&#34;https://vant-contrib.gitee.io/vant&#34;&gt;Vue 3 版本&lt;/a&gt;和&lt;a href=&#34;http://vant-contrib.gitee.io/vant-weapp&#34;&gt;微信小程序版本&lt;/a&gt;，并由社区团队维护 &lt;a href=&#34;https://github.com/3lang3/react-vant&#34;&gt;React 版本&lt;/a&gt;和&lt;a href=&#34;https://github.com/ant-move/Vant-Aliapp&#34;&gt;支付宝小程序版本&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;预览&lt;/h2&gt; &#xA;&lt;p&gt;扫描下方小程序二维码，体验组件库示例：&lt;/p&gt; &#xA;&lt;img src=&#34;https://img.yzcdn.cn/vant-weapp/qrcode-201808101114.jpg&#34; width=&#34;200&#34; height=&#34;200&#34; style=&#34;margin-top: 10px;&#34;&gt; &#xA;&lt;h2&gt;使用之前&lt;/h2&gt; &#xA;&lt;p&gt;使用 Vant Weapp 前，请确保你已经学习过微信官方的 &lt;a href=&#34;https://developers.weixin.qq.com/miniprogram/dev/framework/&#34;&gt;小程序简易教程&lt;/a&gt; 和 &lt;a href=&#34;https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/&#34;&gt;自定义组件介绍&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;安装&lt;/h2&gt; &#xA;&lt;h3&gt;方式一. 通过 npm 安装 (推荐)&lt;/h3&gt; &#xA;&lt;p&gt;小程序已经支持使用 npm 安装第三方包，详见 &lt;a href=&#34;https://developers.weixin.qq.com/miniprogram/dev/devtools/npm.html?search-key=npm&#34;&gt;npm 支持&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 通过 npm 安装&#xA;npm i @vant/weapp -S --production&#xA;&#xA;# 通过 yarn 安装&#xA;yarn add @vant/weapp --production&#xA;&#xA;# 安装 0.x 版本&#xA;npm i vant-weapp -S --production&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;方式二. 下载代码&lt;/h3&gt; &#xA;&lt;p&gt;直接通过 git 下载 Vant Weapp 源代码，并将 &lt;code&gt;dist&lt;/code&gt; 目录拷贝到自己的项目中。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/vant-ui/vant-weapp.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;使用组件&lt;/h2&gt; &#xA;&lt;p&gt;以按钮组件为例，只需要在 json 文件中引入按钮对应的自定义组件即可&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;usingComponents&#34;: {&#xA;    &#34;van-button&#34;: &#34;/path/to/vant-weapp/dist/button/index&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;接着就可以在 wxml 中直接使用组件&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;van-button type=&#34;primary&#34;&amp;gt;按钮&amp;lt;/van-button&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;在开发者工具中预览&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 安装项目依赖&#xA;npm install&#xA;&#xA;# 执行组件编译&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;打开&lt;a href=&#34;https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html&#34;&gt;微信开发者工具&lt;/a&gt;，把&lt;code&gt;vant-weapp/example&lt;/code&gt;目录添加进去就可以预览示例了。&lt;/p&gt; &#xA;&lt;p&gt;PS：关于 &lt;code&gt;van-area&lt;/code&gt; Area 省市区选择组件，地区数据初始化可以直接在云开发环境中导入&lt;code&gt;vant-weapp/example/database_area.JSON&lt;/code&gt; 文件使用。&lt;/p&gt; &#xA;&lt;h2&gt;基础库版本&lt;/h2&gt; &#xA;&lt;p&gt;Vant Weapp 最低支持到小程序基础库 2.6.5 版本。&lt;/p&gt; &#xA;&lt;h2&gt;链接&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vant-ui/vant-weapp/issues&#34;&gt;意见反馈&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vant-contrib.gitee.io/vant/#/zh-CN/design&#34;&gt;设计资源&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vant-contrib.gitee.io/vant-weapp/#/changelog&#34;&gt;更新日志&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vant-ui/vant-demo&#34;&gt;官方示例&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;核心团队&lt;/h2&gt; &#xA;&lt;p&gt;以下是 Vant 和 Vant Weapp 的核心贡献者们：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/chenjiahan/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7237365?s=80&amp;amp;v=4&#34; alt=&#34;chenjiahan&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cookfront/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4829465?s=80&amp;amp;v=4&#34; alt=&#34;cookfront&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/w91/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2599455?s=80&amp;amp;v=4&#34; alt=&#34;w91&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/pangxie1991/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5961240?s=80&amp;amp;v=4&#34; alt=&#34;pangxie1991&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rex-zsd/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/8767877?s=80&amp;amp;v=4&#34; alt=&#34;rex-zsd&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nemo-shen/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/13480805?s=80&amp;amp;v=4&#34; alt=&#34;nemo-shen&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Lindysen/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/33708359?s=80&amp;amp;v=4&#34; alt=&#34;Lindysen&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/JakeLaoyu/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/16181940?s=80&amp;amp;v=4&#34; alt=&#34;nemo-shen&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/chenjiahan/&#34;&gt;chenjiahan&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cookfront/&#34;&gt;cookfront&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/w91/&#34;&gt;wangnaiyi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/pangxie1991/&#34;&gt;pangxie&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rex-zsd/&#34;&gt;rex-zsd&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nemo-shen/&#34;&gt;nemo-shen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Lindysen/&#34;&gt;Lindysen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/JakeLaoyu/&#34;&gt;JakeLaoyu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;贡献者们&lt;/h2&gt; &#xA;&lt;p&gt;感谢以下小伙伴们为 Vant Weapp 发展做出的贡献：&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/vant-ui/vant-weapp/graphs/contributors&#34;&gt; &lt;img src=&#34;https://opencollective.com/vant-weapp/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;contributors&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;开源协议&lt;/h2&gt; &#xA;&lt;p&gt;本项目基于 &lt;a href=&#34;https://zh.wikipedia.org/wiki/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89&#34;&gt;MIT&lt;/a&gt;协议，请自由地享受和参与开源。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aquasecurity/cloudsploit</title>
    <updated>2022-11-02T01:34:19Z</updated>
    <id>tag:github.com,2022-11-02:/aquasecurity/cloudsploit</id>
    <link href="https://github.com/aquasecurity/cloudsploit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloud Security Posture Management (CSPM)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://cloud.aquasec.com/signup&#34;&gt;&lt;img src=&#34;https://cloudsploit.com/images/logos/cloudsploit_by_aqua_2021.png&#34; height=&#34;130&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.com/aquasecurity/cloudsploit&#34;&gt;&lt;img src=&#34;https://travis-ci.com/aquasecurity/cloudsploit.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CloudSploit by Aqua - Cloud Security Scans&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cloud.aquasec.com/signup&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/console.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Generic&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/aquasecurity/cloudsploit.git&#xA;$ cd cloudsploit&#xA;$ npm install&#xA;$ ./index.js -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/aquasecurity/cloudsploit.git&#xA;$ cd cloudsploit&#xA;$ docker build . -t cloudsploit:0.0.1&#xA;$ docker run cloudsploit:0.0.1 -h&#xA;$ docker run -e AWS_ACCESS_KEY_ID=XX -e AWS_SECRET_ACCESS_KEY=YY cloudsploit:0.0.1 --compliance=pci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#background&#34;&gt;Background&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#deployment-options&#34;&gt;Deployment Options&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#self-hosted&#34;&gt;Self-Hosted&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#hosted-at-aqua-wave&#34;&gt;Hosted at Aqua Wave&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/aws.md#cloud-provider-configuration&#34;&gt;Amazon Web Services&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/azure.md#cloud-provider-configuration&#34;&gt;Microsoft Azure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/gcp.md#cloud-provider-configuration&#34;&gt;Google Cloud Platform&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/oracle.md#cloud-provider-configuration&#34;&gt;Oracle Cloud Infrastructure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#cloudsploit-config-file&#34;&gt;CloudSploit Config File&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#credential-files&#34;&gt;Credential Files&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#aws&#34;&gt;AWS&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#azure&#34;&gt;Azure&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#gcp&#34;&gt;GCP&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#oracle-oci&#34;&gt;Oracle OCI&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#environment-variables&#34;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#running&#34;&gt;Running&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#cli-options&#34;&gt;CLI Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#compliance&#34;&gt;Compliance&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#hipaa&#34;&gt;HIPAA&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#pci&#34;&gt;PCI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#cis-benchmarks&#34;&gt;CIS Benchmarks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#output-formats&#34;&gt;Output Formats&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#console-output&#34;&gt;Console Output&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#ignoring-passing-results&#34;&gt;Ignoring Passing Results&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#csv&#34;&gt;CSV&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#junit-xml&#34;&gt;JUnit XML&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#collection-output&#34;&gt;Collection Output&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#suppressions&#34;&gt;Suppressions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#running-a-single-plugin&#34;&gt;Running a Single Plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#writing-a-plugin&#34;&gt;Writing a Plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#other-notes&#34;&gt;Other Notes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;CloudSploit by Aqua is an open-source project designed to allow detection of security risks in cloud infrastructure accounts, including: Amazon Web Services (AWS), Microsoft Azure, Google Cloud Platform (GCP), Oracle Cloud Infrastructure (OCI), and GitHub. These scripts are designed to return a series of potential misconfigurations and security risks.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment Options&lt;/h2&gt; &#xA;&lt;p&gt;CloudSploit is available in two deployment options:&lt;/p&gt; &#xA;&lt;h3&gt;Self-Hosted&lt;/h3&gt; &#xA;&lt;p&gt;Follow the instructions below to deploy the open-source version of CloudSploit on your machine in just a few simple steps.&lt;/p&gt; &#xA;&lt;h3&gt;Hosted at Aqua Wave&lt;/h3&gt; &#xA;&lt;p&gt;A commercial version of CloudSploit hosted at Aqua Wave. Try &lt;a href=&#34;https://cloud.aquasec.com/signup&#34;&gt;Aqua Wave&lt;/a&gt; today!&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Ensure that NodeJS is installed. If not, install it from &lt;a href=&#34;https://nodejs.org/download/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:cloudsploit/scans.git&#xA;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;CloudSploit requires read-only permission to your cloud account. Follow the guides below to provision this access:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/aws.md#cloud-provider-configuration&#34;&gt;Amazon Web Services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/azure.md#cloud-provider-configuration&#34;&gt;Microsoft Azure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/gcp.md#cloud-provider-configuration&#34;&gt;Google Cloud Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/oracle.md#cloud-provider-configuration&#34;&gt;Oracle Cloud Infrastructure&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For AWS, you can run CloudSploit directly and it will detect credentials using the default &lt;a href=&#34;https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CredentialProviderChain.html&#34;&gt;AWS credential chain&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;CloudSploit Config File&lt;/h3&gt; &#xA;&lt;p&gt;The CloudSploit config file allows you to pass cloud provider credentials by:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;A JSON file on your file system&lt;/li&gt; &#xA; &lt;li&gt;Environment variables&lt;/li&gt; &#xA; &lt;li&gt;Hard-coding (not recommended)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Start by copying the example config file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cp config_example.js config.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Edit the config file by uncommenting the relevant sections for the cloud provider you are testing. Each cloud has both a &lt;code&gt;credential_file&lt;/code&gt; option, as well as inline options. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;azure: {&#xA;    // OPTION 1: If using a credential JSON file, enter the path below&#xA;    // credential_file: &#39;/path/to/file.json&#39;,&#xA;    // OPTION 2: If using hard-coded credentials, enter them below&#xA;    // application_id: process.env.AZURE_APPLICATION_ID || &#39;&#39;,&#xA;    // key_value: process.env.AZURE_KEY_VALUE || &#39;&#39;,&#xA;    // directory_id: process.env.AZURE_DIRECTORY_ID || &#39;&#39;,&#xA;    // subscription_id: process.env.AZURE_SUBSCRIPTION_ID || &#39;&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Credential Files&lt;/h3&gt; &#xA;&lt;p&gt;If you use the &lt;code&gt;credential_file&lt;/code&gt; option, point to a file in your file system that follows the correct format for the cloud you are using.&lt;/p&gt; &#xA;&lt;h4&gt;AWS&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;accessKeyId&#34;: &#34;YOURACCESSKEY&#34;,&#xA;  &#34;secretAccessKey&#34;: &#34;YOURSECRETKEY&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Azure&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;ApplicationID&#34;: &#34;YOURAZUREAPPLICATIONID&#34;,&#xA;  &#34;KeyValue&#34;: &#34;YOURAZUREKEYVALUE&#34;,&#xA;  &#34;DirectoryID&#34;: &#34;YOURAZUREDIRECTORYID&#34;,&#xA;  &#34;SubscriptionID&#34;: &#34;YOURAZURESUBSCRIPTIONID&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;GCP&lt;/h4&gt; &#xA;&lt;p&gt;Note: For GCP, you &lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/gcp.md&#34;&gt;generate a JSON file&lt;/a&gt; directly from the GCP console, which you should not edit.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;type&#34;: &#34;service_account&#34;,&#xA;    &#34;project&#34;: &#34;GCPPROJECTNAME&#34;,&#xA;    &#34;client_email&#34;: &#34;GCPCLIENTEMAIL&#34;,&#xA;    &#34;private_key&#34;: &#34;GCPPRIVATEKEY&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Oracle OCI&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;tenancyId&#34;: &#34;YOURORACLETENANCYID&#34;,&#xA;  &#34;compartmentId&#34;: &#34;YOURORACLECOMPARTMENTID&#34;,&#xA;  &#34;userId&#34;: &#34;YOURORACLEUSERID&#34;,&#xA;  &#34;keyFingerprint&#34;: &#34;YOURORACLEKEYFINGERPRINT&#34;,&#xA;  &#34;keyValue&#34;: &#34;YOURORACLEKEYVALUE&#34;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Environment Variables&lt;/h3&gt; &#xA;&lt;p&gt;CloudSploit supports passing environment variables, but you must first uncomment the section of your &lt;code&gt;config.js&lt;/code&gt; file relevant to the cloud provider being scanned.&lt;/p&gt; &#xA;&lt;p&gt;You can then pass the variables listed in each section. For example, for AWS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  access_key: process.env.AWS_ACCESS_KEY_ID || &#39;&#39;,&#xA;  secret_access_key: process.env.AWS_SECRET_ACCESS_KEY || &#39;&#39;,&#xA;  session_token: process.env.AWS_SESSION_TOKEN || &#39;&#39;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;To run a standard scan, showing all outputs and results, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CLI Options&lt;/h2&gt; &#xA;&lt;p&gt;CloudSploit supports many options to customize the run time. Some popular options include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AWS GovCloud support: &lt;code&gt;--govcloud&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;AWS China support: &lt;code&gt;--china&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Save the raw cloud provider response data: &lt;code&gt;--collection=file.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ignore passing (OK) results: &lt;code&gt;--ignore-ok&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Exit with a non-zero code if non-passing results are found: &lt;code&gt;--exit-code&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This is a good option for CI/CD systems&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Change the output from a table to raw text: &lt;code&gt;--console=text&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/#output-formates&#34;&gt;Output Formats&lt;/a&gt; below for more output options.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click for a full list of options&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;$ ./index.js -h&#xA;&#xA;  _____ _                 _  _____       _       _ _&#xA;  / ____| |               | |/ ____|     | |     (_) |&#xA;| |    | | ___  _   _  __| | (___  _ __ | | ___  _| |_&#xA;| |    | |/ _ \| | | |/ _` |\___ \| &#39;_ \| |/ _ \| | __|&#xA;| |____| | (_) | |_| | (_| |____) | |_) | | (_) | | |_&#xA;  \_____|_|\___/ \__,_|\__,_|_____/| .__/|_|\___/|_|\__|&#xA;                                  | |&#xA;                                  |_|&#xA;&#xA;  CloudSploit by Aqua Security, Ltd.&#xA;  Cloud security auditing for AWS, Azure, GCP, Oracle, and GitHub&#xA;&#xA;usage: index.js [-h] --config CONFIG [--compliance {hipaa,cis,cis1,cis2,pci}] [--plugin PLUGIN] [--govcloud] [--china] [--csv CSV] [--json JSON] [--junit JUNIT]&#xA;                [--table] [--console {none,text,table}] [--collection COLLECTION] [--ignore-ok] [--exit-code] [--skip-paginate] [--suppress SUPPRESS]&#xA;&#xA;optional arguments:&#xA;  -h, --help            show this help message and exit&#xA;  --config CONFIG&#xA;                        The path to a cloud provider credentials file.&#xA;  --compliance {hipaa,cis,cis1,cis2,pci}&#xA;                        Compliance mode. Only return results applicable to the selected program.&#xA;  --plugin PLUGIN       A specific plugin to run. If none provided, all plugins will be run. Obtain from the exports.js file. E.g. acmValidation&#xA;  --govcloud            AWS only. Enables GovCloud mode.&#xA;  --china               AWS only. Enables AWS China mode.&#xA;  --csv CSV             Output: CSV file&#xA;  --json JSON           Output: JSON file&#xA;  --junit JUNIT         Output: Junit file&#xA;  --table               Output: table&#xA;  --console {none,text,table}&#xA;                        Console output format. Default: table&#xA;  --collection COLLECTION&#xA;                        Output: full collection JSON as file&#xA;  --ignore-ok           Ignore passing (OK) results&#xA;  --exit-code           Exits with a non-zero status code if non-passing results are found&#xA;  --skip-paginate       AWS only. Skips pagination (for debugging).&#xA;  --suppress SUPPRESS   Suppress results matching the provided Regex. Format: pluginId:region:resourceId&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Compliance&lt;/h2&gt; &#xA;&lt;p&gt;CloudSploit supports mapping of its plugins to particular compliance policies. To run the compliance scan, use the &lt;code&gt;--compliance&lt;/code&gt; flag. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js --compliance=hipaa&#xA;$ ./index.js --compliance=pci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multiple compliance modes can be run at the same time:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js --compliance=cis1 --compliance=cis2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CloudSploit currently supports the following compliance mappings:&lt;/p&gt; &#xA;&lt;h3&gt;HIPAA&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js --compliance=hipaa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HIPAA scans map CloudSploit plugins to the Health Insurance Portability and Accountability Act of 1996.&lt;/p&gt; &#xA;&lt;h3&gt;PCI&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js --compliance=pci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PCI scans map CloudSploit plugins to the Payment Card Industry Data Security Standard.&lt;/p&gt; &#xA;&lt;h3&gt;CIS Benchmarks&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js --compliance=cis&#xA;$ ./index.js --compliance=cis1&#xA;$ ./index.js --compliance=cis2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CIS Benchmarks are supported, both for Level 1 and Level 2 controls. Passing &lt;code&gt;--compliance=cis&lt;/code&gt; will run both level 1 and level 2 controls.&lt;/p&gt; &#xA;&lt;h2&gt;Output Formats&lt;/h2&gt; &#xA;&lt;p&gt;CloudSploit supports output in several formats for consumption by other tools. If you do not specify otherwise, CloudSploit writes output to standard output (the console) as a table.&lt;/p&gt; &#xA;&lt;p&gt;Note: You can pass multiple output formats and combine options for further customization. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Print a table to the console and save a CSV file&#xA;$ ./index.js --csv=file.csv --console=table&#xA;&#xA;# Print text to the console and save a JSON and JUnit file while ignoring passing results&#xA;$ ./index.js --json=file.json --junit=file.xml --console=text --ignore-ok&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Console Output&lt;/h3&gt; &#xA;&lt;p&gt;By default, CloudSploit results are printed to the console in a table format (with colors). You can override this and use plain text instead, by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js --console=text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can suppress the console output entirely by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js --console=none&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ignoring Passing Results&lt;/h3&gt; &#xA;&lt;p&gt;You can ignore results from output that return an OK status by passing a &lt;code&gt;--ignore-ok&lt;/code&gt; commandline argument.&lt;/p&gt; &#xA;&lt;h3&gt;CSV&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js --csv=file.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JSON&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js --json=file.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JUnit XML&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js --junit=file.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Collection Output&lt;/h3&gt; &#xA;&lt;p&gt;CloudSploit saves the data queried from the cloud provider APIs in JSON format, which can be saved alongside other files for debugging or historical purposes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js --collection=file.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Suppressions&lt;/h2&gt; &#xA;&lt;p&gt;Results can be suppressed by passing the &lt;code&gt;--suppress&lt;/code&gt; flag (multiple options are supported) with the following format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--suppress pluginId:region:resourceId&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Suppress all results for the acmValidation plugin&#xA;$ ./index.js --suppress acmValidation:*:*&#xA;&#xA;# Suppress all us-east-1 region results&#xA;$ ./index.js --suppress *:us-east-1:*&#xA;&#xA;# Suppress all results matching the regex &#34;certificate/*&#34; in all regions for all plugins&#xA;$ ./index.js --suppress *:*:certificate/*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running a Single Plugin&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;--plugin&lt;/code&gt; flag can be used if you only wish to run one plugin.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./index.js --plugin acmValidation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;CloudSploit works in two phases. First, it queries the cloud infrastructure APIs for various metadata about your account, namely the &#34;collection&#34; phase. Once all the necessary data is collected, the result is passed to the &#34;scanning&#34; phase. The scan uses the collected data to search for potential misconfigurations, risks, and other security issues, which are the resulting output.&lt;/p&gt; &#xA;&lt;h2&gt;Writing a Plugin&lt;/h2&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/.github/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/writing-plugins.md&#34;&gt;complete guide&lt;/a&gt; to writing CloudSploit plugins.&lt;/p&gt; &#xA;&lt;h2&gt;Writing a remediation&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;--remediate&lt;/code&gt; flag can be used if you want to run remediation for the plugins mentioned as part of this argument. This takes a list of plugin names. Please see our &lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/writing-remediation.md&#34;&gt;developing remediation guide&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Other Notes&lt;/h2&gt; &#xA;&lt;p&gt;For other details about the Aqua Wave SaaS product, AWS security policies, and more, &lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/cloudsploit/master/docs/notes.md&#34;&gt;click here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>