<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-10T01:39:09Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>UI-Lovelace-Minimalist/UI</title>
    <updated>2023-01-10T01:39:09Z</updated>
    <id>tag:github.com,2023-01-10:/UI-Lovelace-Minimalist/UI</id>
    <link href="https://github.com/UI-Lovelace-Minimalist/UI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;UI-Lovelace-Minimalist is a &#34;theme&#34; for HomeAssistant&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UI-Lovelace-Minimalist&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/TPXg9b7GfR&#34;&gt;&lt;img src=&#34;https://badgen.net/discord/online-members/TPXg9b7GfR&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/UI-Lovelace-Minimalist/UI&#34; alt=&#34;Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Flauwbier.nl%2Fhacs%2Fui_lovelace_minimalist&#34; alt=&#34;hacs installs&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/UI-Lovelace-Minimalist/UI/total&#34; alt=&#34;Downloads&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s kind of hard to explain what this is, so let&#39;s call it a &#34;theme&#34; (in quotation marks). But one thing is for sure, it is very nice! Taking the exceptional work of tben as a basis, this repository is aimed to ease installation and maintenance of his wonderful work. You can use this interpretation of a SmartHomeUI more or less like a theme in HomeAssistant.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/UI-Lovelace-Minimalist/UI/main/docs/assets/img/example_home.png&#34; width=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/UI-Lovelace-Minimalist/UI/main/docs/assets/img/example_temperature.png&#34; width=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/UI-Lovelace-Minimalist/UI/main/docs/assets/img/example_consumption.png&#34; width=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/UI-Lovelace-Minimalist/UI/main/docs/assets/img/example_localisation.png&#34; width=&#34;200&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Wiki for documentation&lt;/h2&gt; &#xA;&lt;p&gt;We have setup an extensive Wiki for our documentation. It is more comfortable for you to read and for us to handle, than this file and gives our documentation the right framework to grow. Take a look here: &lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/&#34;&gt;https://ui-lovelace-minimalist.github.io/UI/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Table of content from the WIKI &lt;br&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th style=&#34;width: 33%;&#34;&gt;Setup&lt;/th&gt; &#xA;   &lt;th style=&#34;width: 33%;&#34;&gt;Usage&lt;/th&gt; &#xA;   &lt;th style=&#34;width: 33%;&#34;&gt;Development&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;vertical-align: top;&#34;&gt; &lt;p&gt;We have provided different guides to help you install and update this &#34;theme&#34;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td style=&#34;vertical-align: top;&#34;&gt; &lt;p&gt;These usage guides give you a deeper knowledge about this &#34;theme&#34;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td style=&#34;vertical-align: top;&#34;&gt; &lt;p&gt;This is our developer corner&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;vertical-align: top;&#34;&gt; &lt;p&gt; &lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/setup/download/&#34;&gt;»&amp;nbsp;Download&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/setup/installation/&#34;&gt;»&amp;nbsp;Installation&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/setup/configuration/&#34;&gt;»&amp;nbsp;Configuration&lt;/a&gt;&lt;br&gt; &lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td style=&#34;vertical-align: top;&#34;&gt; &lt;p&gt; &lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/usage/cards/card_battery/&#34;&gt;»&amp;nbsp;Cards&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/usage/chips/chip_alarm/&#34;&gt;»&amp;nbsp;Chips&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/UI-Lovelace-Minimalist/UI/main/https//ui-lovelace-minimalist.github.io/UI/usage/popups/popup_light/&#34;&gt;»&amp;nbsp;Popups&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/usage/custom_cards/custom_card_bar_card/&#34;&gt;»&amp;nbsp;Custom-Cards&lt;/a&gt;&lt;br&gt; &lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td style=&#34;vertical-align: top;&#34;&gt; &lt;p&gt; &lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/development/card_style_guide/&#34;&gt;»&amp;nbsp;Card Style Guide&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/development/docs_style_guide/&#34;&gt;»&amp;nbsp;Docs Style Guide&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/development/custom_cards/&#34;&gt;»&amp;nbsp;Custom-Cards&lt;/a&gt;&lt;br&gt; &lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation and update&lt;/h2&gt; &#xA;&lt;p&gt;We can offer you in-depth instructions for installation, as well as for future updates or from a previous version. Check our WIKI for more info:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/setup/download/&#34;&gt;Download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/setup/installation/&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/setup/configuration/&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;List of templates&lt;/h2&gt; &#xA;&lt;p&gt;The actual version of this &#34;theme&#34; has 20 different cards, seven chips and other templates bundled into the download. We&#39;re sorry, but the list wouldn&#39;t fit into this readme. &lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/usage/cards/card_battery/&#34;&gt;Please see this page, where you can find an extensive list of templates with code examples, screenshots and explanation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Custom cards&lt;/h2&gt; &#xA;&lt;p&gt;The same goes for our &lt;code&gt;custom_cards&lt;/code&gt;. As the number grows, the list would be to big for this readme, so we provide you with an overview page with pictures, code examples and additional information. &lt;a href=&#34;https://ui-lovelace-minimalist.github.io/UI/usage/custom_cards/custom_card_bar_card/&#34;&gt;Find the list here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Credits &amp;amp; Contributors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This design was made by &lt;a href=&#34;https://community.home-assistant.io/u/tben/summary&#34;&gt;tben&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A lot of inspiration is taken from &lt;a href=&#34;https://www.behance.net/gallery/88433905/Redesign-Smart-Home&#34;&gt;7ahang’s work&lt;/a&gt; found on Behance.&lt;/li&gt; &#xA; &lt;li&gt;Contributions from others in the HomeAssistant forum thread, you can find it here.&lt;/li&gt; &#xA; &lt;li&gt;The technical part is realised mostly by taking advantage of the great work RomRaider did with his &lt;a href=&#34;https://github.com/custom-cards/button-card&#34;&gt;button-card&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Code refactor, cleanup and maintenance by &lt;a href=&#34;https://github.com/schumijo&#34;&gt;schumijo&lt;/a&gt; and &lt;a href=&#34;https://github.com/Paddy0174&#34;&gt;paddy0174&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/CM000n&#34;&gt;CM000n&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dwainscheeren&#34;&gt;dwainscheeren&lt;/a&gt; for his inspiration to deliver themes via HACS.&lt;/li&gt; &#xA; &lt;li&gt;Wiki by &lt;a href=&#34;https://github.com/Paddy0174&#34;&gt;paddy0174&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Special thanks to clemalex and &lt;a href=&#34;https://github.com/schumijo&#34;&gt;schumijo&lt;/a&gt;for contributing their cards to the main repository.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stokkie90&#34;&gt;stokkie90&lt;/a&gt; for implementing most of the HACS functionalities.&lt;/li&gt; &#xA; &lt;li&gt;And of course &lt;a href=&#34;https://github.com/UI-Lovelace-Minimalist/UI/graphs/contributors&#34;&gt;all the others&lt;/a&gt; who cannot be named here due to space limitations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;❤️ Thank you so much for helping to keep this UI awesome&lt;/p&gt; &#xA;&lt;h3&gt;Contributions&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a living project and all input is very welcome! If you configured and designed a card, that you would like to share, please feel free to do so! We are happy to include your contribution so others can use it as well! This project uses pre-commit for consistent and clean code. If possible, please make sure that you also use pre-commit for local development before creating a pull request.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>jucasoliveira/terminalGPT</title>
    <updated>2023-01-10T01:39:09Z</updated>
    <id>tag:github.com,2023-01-10:/jucasoliveira/terminalGPT</id>
    <link href="https://github.com/jucasoliveira/terminalGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Get GPT like chatGPT on your terminal&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;200&#34; alt=&#34;TerminalGPT logo&#34; src=&#34;https://user-images.githubusercontent.com/11979969/211214696-7519a871-4981-44a8-8c2d-a1d187839126.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;80&#34; alt=&#34;TerminalGPT logo&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/jucasoliveira/terminalGPT/pr.yml&#34;&gt; &lt;img width=&#34;100&#34; alt=&#34;TerminalGPT logo&#34; src=&#34;https://img.shields.io/npm/dt/terminalgpt&#34;&gt; &lt;img width=&#34;100&#34; alt=&#34;TerminalGPT logo&#34; src=&#34;https://img.shields.io/github/contributors/jucasoliveira/terminalGPT&#34;&gt; &lt;img width=&#34;100&#34; alt=&#34;TerminalGPT logo&#34; src=&#34;https://img.shields.io/github/package-json/v/jucasoliveira/terminalGPT&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Get GPT like chatGPT on your terminal &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/11979969/210746185-69722c94-b073-4863-82bc-b662236c8305.png&#34; alt=&#34;Screenshot 2023-01-05 at 09 24 10&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.producthunt.com/posts/terminalgpt?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-terminalgpt&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=373888&amp;amp;theme=light&#34; alt=&#34;terminalGPT - Use OpenAi like chatGPT, on your terminal | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Pre-requisite&lt;/h1&gt; &#xA;&lt;p&gt;You&#39;ll need to have your own &lt;code&gt;OpenAi&lt;/code&gt; apikey to operate this package.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;https://beta.openai.com/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select you profile menu and go to &lt;code&gt;Manage API Keys&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;code&gt;+ Create new secret key&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy generated key&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Get Started&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt; npx terminalgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Run&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx terminalgpt chat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ps.: If it is your first time running it, it will ask for open AI key , &lt;code&gt;paste generated key from pre-requisite steps&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Changing engine and temperature&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx terminalgpt chat --engine &#34;text-davinci-002&#34; --temperature 0.7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;😎 Contribute your first spec in &amp;lt; 3 minutes&lt;/h2&gt; &#xA;&lt;p&gt;Use the steps below:&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &lt;a href=&#34;https://github.com/jucasoliveira/terminalGPT/fork&#34;&gt;here&lt;/a&gt; to fork this repo.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone your forked repo and create an example spec&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Replace `YOUR_GITHUB_USERNAME` with your own github username&#xA;git clone https://github.com/YOUR_GITHUB_USERNAME/terminalGPT.git terminalGPT&#xA;cd terminalGPT&#xA;&#xA;# Add jucasoliveira/terminalGPT as a remote&#xA;git remote add upstream https://github.com/jucasoliveira/terminalGPT.git&#xA;&#xA;# Install packages&#xA;npm install&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On your terminal and type &lt;code&gt;npm run dev&lt;/code&gt;. Your terminalGPT will start. 😊&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt;</summary>
  </entry>
  <entry>
    <title>LLK/scratch-gui</title>
    <updated>2023-01-10T01:39:09Z</updated>
    <id>tag:github.com,2023-01-10:/LLK/scratch-gui</id>
    <link href="https://github.com/LLK/scratch-gui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Graphical User Interface for creating and running Scratch 3.0 projects.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;scratch-gui&lt;/h1&gt; &#xA;&lt;h4&gt;Scratch GUI is a set of React components that comprise the interface for creating and running Scratch 3.0 projects&lt;/h4&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This requires you to have Git and Node.js installed.&lt;/p&gt; &#xA;&lt;p&gt;In your own node environment/application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install https://github.com/LLK/scratch-gui.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to edit/play yourself:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/LLK/scratch-gui.git&#xA;cd scratch-gui&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;You may want to add &lt;code&gt;--depth=1&lt;/code&gt; to the &lt;code&gt;git clone&lt;/code&gt; command because there are some &lt;a href=&#34;https://github.com/LLK/scratch-gui/issues/5140&#34;&gt;large files in the git repository history&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Running the project requires Node.js to be installed.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;Open a Command Prompt or Terminal in the repository and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then go to &lt;a href=&#34;http://localhost:8601/&#34;&gt;http://localhost:8601/&lt;/a&gt; - the playground outputs the default GUI component&lt;/p&gt; &#xA;&lt;h2&gt;Developing alongside other Scratch repositories&lt;/h2&gt; &#xA;&lt;h3&gt;Getting another repo to point to this code&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to develop &lt;code&gt;scratch-gui&lt;/code&gt; alongside other scratch repositories that depend on it, you may wish to have the other repositories use your local &lt;code&gt;scratch-gui&lt;/code&gt; build instead of fetching the current production version of the scratch-gui that is found by default using &lt;code&gt;npm install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how to link your local &lt;code&gt;scratch-gui&lt;/code&gt; code to another project&#39;s &lt;code&gt;node_modules/scratch-gui&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Configuration&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;In your local &lt;code&gt;scratch-gui&lt;/code&gt; repository&#39;s top level:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Make sure you have run &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Build the &lt;code&gt;dist&lt;/code&gt; directory by running &lt;code&gt;BUILD_MODE=dist npm run build&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Establish a link to this repository by running &lt;code&gt;npm link&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From the top level of each repository (such as &lt;code&gt;scratch-www&lt;/code&gt;) that depends on &lt;code&gt;scratch-gui&lt;/code&gt;:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Make sure you have run &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;npm link scratch-gui&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Build or run the repository&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Using &lt;code&gt;npm run watch&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Instead of &lt;code&gt;BUILD_MODE=dist npm run build&lt;/code&gt;, you can use &lt;code&gt;BUILD_MODE=dist npm run watch&lt;/code&gt; instead. This will watch for changes to your &lt;code&gt;scratch-gui&lt;/code&gt; code, and automatically rebuild when there are changes. Sometimes this has been unreliable; if you are having problems, try going back to &lt;code&gt;BUILD_MODE=dist npm run build&lt;/code&gt; until you resolve them.&lt;/p&gt; &#xA;&lt;h4&gt;Oh no! It didn&#39;t work!&lt;/h4&gt; &#xA;&lt;p&gt;If you can&#39;t get linking to work right, try:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow the recipe above step by step and don&#39;t change the order. It is especially important to run &lt;code&gt;npm install&lt;/code&gt; &lt;em&gt;before&lt;/em&gt; &lt;code&gt;npm link&lt;/code&gt; as installing after the linking will reset the linking.&lt;/li&gt; &#xA; &lt;li&gt;Make sure the repositories are siblings on your machine&#39;s file tree, like &lt;code&gt;.../.../MY_SCRATCH_DEV_DIRECTORY/scratch-gui/&lt;/code&gt; and &lt;code&gt;.../.../MY_SCRATCH_DEV_DIRECTORY/scratch-www/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Consistent node.js version: If you have multiple Terminal tabs or windows open for the different Scratch repositories, make sure to use the same node version in all of them.&lt;/li&gt; &#xA; &lt;li&gt;If nothing else works, unlink the repositories by running &lt;code&gt;npm unlink&lt;/code&gt; in both, and start over.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;You may want to review the documentation for &lt;a href=&#34;https://facebook.github.io/jest/docs/en/api.html&#34;&gt;Jest&lt;/a&gt; and &lt;a href=&#34;http://airbnb.io/enzyme/docs/api/&#34;&gt;Enzyme&lt;/a&gt; as you write your tests.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://facebook.github.io/jest/docs/en/cli.html#content&#34;&gt;jest cli docs&lt;/a&gt; for more options.&lt;/p&gt; &#xA;&lt;h3&gt;Running tests&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;NOTE: If you&#39;re a Windows user, please run these scripts in Windows &lt;code&gt;cmd.exe&lt;/code&gt; instead of Git Bash/MINGW64.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before running any tests, make sure you have run &lt;code&gt;npm install&lt;/code&gt; from this (scratch-gui) repository&#39;s top level.&lt;/p&gt; &#xA;&lt;h4&gt;Main testing command&lt;/h4&gt; &#xA;&lt;p&gt;To run linter, unit tests, build, and integration tests, all at once:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Running unit tests&lt;/h4&gt; &#xA;&lt;p&gt;To run unit tests in isolation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run test:unit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run unit tests in watch mode (watches for code changes and continuously runs tests):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run test:unit -- --watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run a single file of integration tests (in this example, the &lt;code&gt;button&lt;/code&gt; tests):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$(npm bin)/jest --runInBand test/unit/components/button.test.jsx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Running integration tests&lt;/h4&gt; &#xA;&lt;p&gt;Integration tests use a headless browser to manipulate the actual HTML and javascript that the repo produces. You will not see this activity (though you can hear it when sounds are played!).&lt;/p&gt; &#xA;&lt;p&gt;Note that integration tests require you to first create a build that can be loaded in a browser:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you can run all integration tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run test:integration&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, you can run a single file of integration tests (in this example, the &lt;code&gt;backpack&lt;/code&gt; tests):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$(npm bin)/jest --runInBand test/integration/backpack.test.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to watch the browser as it runs the test, rather than running headless, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;USE_HEADLESS=no $(npm bin)/jest --runInBand test/integration/backpack.test.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Ignoring optional dependencies&lt;/h3&gt; &#xA;&lt;p&gt;When running &lt;code&gt;npm install&lt;/code&gt;, you can get warnings about optional dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm WARN optional Skipping failed optional dependency /chokidar/fsevents:&#xA;npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.2.7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can suppress them by adding the &lt;code&gt;no-optional&lt;/code&gt; switch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install --no-optional&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Further reading: &lt;a href=&#34;https://stackoverflow.com/questions/36725181/not-compatible-with-your-operating-system-or-architecture-fsevents1-0-11&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Resolving dependencies&lt;/h3&gt; &#xA;&lt;p&gt;When installing for the first time, you can get warnings that need to be resolved:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm WARN eslint-config-scratch@5.0.0 requires a peer of babel-eslint@^8.0.1 but none was installed.&#xA;npm WARN eslint-config-scratch@5.0.0 requires a peer of eslint@^4.0 but none was installed.&#xA;npm WARN scratch-paint@0.2.0-prerelease.20190318170811 requires a peer of react-intl-redux@^0.7 but none was installed.&#xA;npm WARN scratch-paint@0.2.0-prerelease.20190318170811 requires a peer of react-responsive@^4 but none was installed.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can check which versions are available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm view react-intl-redux@0.* version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need to install the required version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install  --no-optional --save-dev react-intl-redux@^0.7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The dependency itself might have more missing dependencies, which will show up like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;user@machine:~/sources/scratch/scratch-gui (491-translatable-library-objects)$ npm install  --no-optional --save-dev react-intl-redux@^0.7&#xA;scratch-gui@0.1.0 /media/cuideigin/Linux/sources/scratch/scratch-gui&#xA;├── react-intl-redux@0.7.0&#xA;└── UNMET PEER DEPENDENCY react-responsive@5.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need to install those as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install  --no-optional --save-dev react-responsive@^5.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Further reading: &lt;a href=&#34;https://stackoverflow.com/questions/46602286/npm-requires-a-peer-of-but-all-peers-are-in-package-json-and-node-modules&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If you run into npm install errors, try these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;run &lt;code&gt;npm cache clean --force&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the node_modules directory&lt;/li&gt; &#xA; &lt;li&gt;Delete package-lock.json&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;npm install&lt;/code&gt; again&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Publishing to GitHub Pages&lt;/h2&gt; &#xA;&lt;p&gt;You can publish the GUI to github.io so that others on the Internet can view it. &lt;a href=&#34;https://github.com/LLK/scratch-gui/wiki/Publishing-to-GitHub-Pages&#34;&gt;Read the wiki for a step-by-step guide.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Understanding the project state machine&lt;/h2&gt; &#xA;&lt;p&gt;Since so much code throughout scratch-gui depends on the state of the project, which goes through many different phases of loading, displaying and saving, we created a &#34;finite state machine&#34; to make it clear which state it is in at any moment. This is contained in the file src/reducers/project-state.js .&lt;/p&gt; &#xA;&lt;p&gt;It can be hard to understand the code in src/reducers/project-state.js . There are several types of data and functions used, which relate to each other:&lt;/p&gt; &#xA;&lt;h3&gt;Loading states&lt;/h3&gt; &#xA;&lt;p&gt;These include state constant strings like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NOT_LOADED&lt;/code&gt; (the default state),&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ERROR&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FETCHING_WITH_ID&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LOADING_VM_WITH_ID&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;REMIXING&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SHOWING_WITH_ID&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SHOWING_WITHOUT_ID&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Transitions&lt;/h3&gt; &#xA;&lt;p&gt;These are names for the action which causes a state change. Some examples are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;START_FETCHING_NEW&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DONE_FETCHING_WITH_ID&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DONE_LOADING_VM_WITH_ID&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SET_PROJECT_ID&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;START_AUTO_UPDATING&lt;/code&gt;,&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How transitions relate to loading states&lt;/h3&gt; &#xA;&lt;p&gt;Like this diagram of the project state machine shows, various transition actions can move us from one loading state to another:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LLK/scratch-gui/develop/docs/project_state_diagram.svg?sanitize=true&#34; alt=&#34;Project state diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: for clarity, the diagram above excludes states and transitions relating to error handling.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;Here&#39;s an example of how states transition.&lt;/p&gt; &#xA;&lt;p&gt;Suppose a user clicks on a project, and the page starts to load with URL &lt;a href=&#34;https://scratch.mit.edu/projects/123456&#34;&gt;https://scratch.mit.edu/projects/123456&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s what will happen in the project state machine:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LLK/scratch-gui/develop/docs/project_state_example.png&#34; alt=&#34;Project state example&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;When the app first mounts, the project state is &lt;code&gt;NOT_LOADED&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;SET_PROJECT_ID&lt;/code&gt; redux action is dispatched (from src/lib/project-fetcher-hoc.jsx), with &lt;code&gt;projectId&lt;/code&gt; set to &lt;code&gt;123456&lt;/code&gt;. This transitions the state from &lt;code&gt;NOT_LOADED&lt;/code&gt; to &lt;code&gt;FETCHING_WITH_ID&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;FETCHING_WITH_ID&lt;/code&gt; state. In src/lib/project-fetcher-hoc.jsx, the &lt;code&gt;projectId&lt;/code&gt; value &lt;code&gt;123456&lt;/code&gt; is used to request the data for that project from the server.&lt;/li&gt; &#xA; &lt;li&gt;When the server responds with the data, src/lib/project-fetcher-hoc.jsx dispatches the &lt;code&gt;DONE_FETCHING_WITH_ID&lt;/code&gt; action, with &lt;code&gt;projectData&lt;/code&gt; set. This transitions the state from &lt;code&gt;FETCHING_WITH_ID&lt;/code&gt; to &lt;code&gt;LOADING_VM_WITH_ID&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;LOADING_VM_WITH_ID&lt;/code&gt; state. In src/lib/vm-manager-hoc.jsx, we load the &lt;code&gt;projectData&lt;/code&gt; into Scratch&#39;s virtual machine (&#34;the vm&#34;).&lt;/li&gt; &#xA; &lt;li&gt;When loading is done, src/lib/vm-manager-hoc.jsx dispatches the &lt;code&gt;DONE_LOADING_VM_WITH_ID&lt;/code&gt; action. This transitions the state from &lt;code&gt;LOADING_VM_WITH_ID&lt;/code&gt; to &lt;code&gt;SHOWING_WITH_ID&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;SHOWING_WITH_ID&lt;/code&gt; state. Now the project appears normally and is playable and editable.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;We provide &lt;a href=&#34;https://scratch.mit.edu&#34;&gt;Scratch&lt;/a&gt; free of charge, and want to keep it that way! Please consider making a &lt;a href=&#34;https://www.scratchfoundation.org/donate&#34;&gt;donation&lt;/a&gt; to support our continued engineering, design, community, and resource development efforts. Donations of any size are appreciated. Thank you!&lt;/p&gt;</summary>
  </entry>
</feed>