<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-01T01:35:21Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DominikDoom/a1111-sd-webui-tagcomplete</title>
    <updated>2022-11-01T01:35:21Z</updated>
    <id>tag:github.com,2022-11-01:/DominikDoom/a1111-sd-webui-tagcomplete</id>
    <link href="https://github.com/DominikDoom/a1111-sd-webui-tagcomplete" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Booru style tag autocompletion for AUTOMATIC1111&#39;s Stable Diffusion web UI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Booru tag autocompletion for A1111&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/DominikDoom/a1111-sd-webui-tagcomplete/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/DominikDoom/a1111-sd-webui-tagcomplete&#34; alt=&#34;GitHub release (latest SemVer)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DominikDoom/a1111-sd-webui-tagcomplete/main/README_ZH.md&#34;&gt;中文文档&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This custom script serves as a drop-in extension for the popular &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui&#34;&gt;AUTOMATIC1111 web UI&lt;/a&gt; for Stable Diffusion.&lt;/p&gt; &#xA;&lt;p&gt;It displays autocompletion hints for recognized tags from &#34;image booru&#34; boards such as Danbooru, which are primarily used for browsing Anime-style illustrations. Since some Stable Diffusion models were trained using this information, for example &lt;a href=&#34;https://github.com/harubaru/waifu-diffusion&#34;&gt;Waifu Diffusion&lt;/a&gt;, using exact tags in prompts can often improve composition and help to achieve a wanted look.&lt;/p&gt; &#xA;&lt;p&gt;I created this script as a convenience tool since it reduces the need of switching back and forth between the web UI and a booru site to copy-paste tags.&lt;/p&gt; &#xA;&lt;p&gt;You can either clone / download the files manually as described &lt;a href=&#34;https://raw.githubusercontent.com/DominikDoom/a1111-sd-webui-tagcomplete/main/#installation&#34;&gt;below&lt;/a&gt;, or use a pre-packaged version from &lt;a href=&#34;https://github.com/DominikDoom/a1111-sd-webui-tagcomplete/releases&#34;&gt;Releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Common Problems &amp;amp; Known Issues:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The browser might cache old versions of the script, config, or embedding/wildcard lists. Try hitting &lt;code&gt;CTRL+F5&lt;/code&gt; to clear the cache.&lt;/li&gt; &#xA; &lt;li&gt;If &lt;code&gt;replaceUnderscores&lt;/code&gt; is active, the script will currently only partly replace edited tags containing multiple words in brackets. For example, editing &lt;code&gt;atago (azur lane)&lt;/code&gt;, it would be replaced with e.g. &lt;code&gt;taihou (azur lane), lane)&lt;/code&gt;, since the script currently doesn&#39;t see the second part of the bracket as the same tag. So in those cases you should delete the old tag beforehand.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Wildcard &amp;amp; Embedding support&lt;/h3&gt; &#xA;&lt;p&gt;Autocompletion also works with wildcard files used by &lt;a href=&#34;https://github.com/jtkelm2/stable-diffusion-webui-1/raw/master/scripts/wildcards.py&#34;&gt;this script&lt;/a&gt; of the same name (demo video further down). This enables you to either insert categories to be replaced by the script, or even replace them with the actual wildcard file content in the same step. Wildcards are searched for in every extension folder as well as the &lt;code&gt;scripts/wildcards&lt;/code&gt; folder to support legacy versions. This means that you can combine wildcards from multiple extensions. Nested folders are also supported if you have grouped your wildcards in that way.&lt;/p&gt; &#xA;&lt;p&gt;It also scans the embeddings folder and displays completion hints for the names of all .pt and .bin files inside if you start typing &lt;code&gt;&amp;lt;&lt;/code&gt;. Note that some normal tags also use &amp;lt; in Kaomoji (like &#34;&amp;gt;_&amp;lt;&#34; for example), so the results will contain both.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;Demo video (with keyboard navigation):&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/34448969/195344430-2b5f9945-b98b-4943-9fbc-82cf633321b1.mp4&#34;&gt;https://user-images.githubusercontent.com/34448969/195344430-2b5f9945-b98b-4943-9fbc-82cf633321b1.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wildcard script support:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/34448969/195632461-49d226ae-d393-453d-8f04-1e44b073234c.mp4&#34;&gt;https://user-images.githubusercontent.com/34448969/195632461-49d226ae-d393-453d-8f04-1e44b073234c.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dark and Light mode supported, including tag colors:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/34448969/195177127-f63949f8-271d-4767-bccd-f1b5e818a7f8.png&#34; alt=&#34;tagtypes&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/34448969/195180061-ceebcc25-9e4c-424f-b0c9-ba8e8f4f17f4.png&#34; alt=&#34;tagtypes_light&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;As an extension (recommended)&lt;/h3&gt; &#xA;&lt;p&gt;Either clone the repo into your extensions folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone &#34;https://github.com/DominikDoom/a1111-sd-webui-tagcomplete.git&#34; extensions/tag-autocomplete&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(The second argument specifies the name of the folder, you can choose whatever you like).&lt;/p&gt; &#xA;&lt;p&gt;Or create a folder there manually and place the &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;scripts&lt;/code&gt; and &lt;code&gt;tags&lt;/code&gt; folders in it.&lt;/p&gt; &#xA;&lt;h3&gt;In the root folder (old)&lt;/h3&gt; &#xA;&lt;p&gt;Copy the &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;scripts&lt;/code&gt; and &lt;code&gt;tags&lt;/code&gt; folder into your web UI installation root. It will run automatically the next time the web UI is started.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;In both configurations, the tags folder contains &lt;code&gt;config.json&lt;/code&gt; and the tag data the script uses for autocompletion. By default, Danbooru and e621 tags are included. After scanning for embeddings and wildcards, the script will also create a &lt;code&gt;temp&lt;/code&gt; directory here which lists the found files so they can be accessed in the browser side of the script. You can delete the temp folder without consequences as it will be recreated on the next startup.&lt;/p&gt; &#xA;&lt;h3&gt;Important:&lt;/h3&gt; &#xA;&lt;p&gt;The script needs &lt;strong&gt;all three folders&lt;/strong&gt; to work properly.&lt;/p&gt; &#xA;&lt;h2&gt;Config&lt;/h2&gt; &#xA;&lt;p&gt;The config contains the following settings and defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;tagFile&#34;: &#34;danbooru.csv&#34;,&#xA;&#x9;&#34;activeIn&#34;: {&#xA;&#x9;&#x9;&#34;txt2img&#34;: true,&#xA;&#x9;&#x9;&#34;img2img&#34;: true,&#xA;&#x9;&#x9;&#34;negativePrompts&#34;: true&#xA;&#x9;},&#xA;&#x9;&#34;maxResults&#34;: 5,&#xA;&#x9;&#34;resultStepLength&#34;: 500,&#xA;&#x9;&#34;showAllResults&#34;: false,&#xA;&#x9;&#34;useLeftRightArrowKeys&#34;: false,&#xA;&#x9;&#34;replaceUnderscores&#34;: true,&#xA;&#x9;&#34;escapeParentheses&#34;: true,&#xA;&#x9;&#34;useWildcards&#34;: true,&#xA;&#x9;&#34;useEmbeddings&#34;: true,&#xA;&#x9;&#34;translation&#34;: {&#xA;&#x9;&#x9;&#34;searchByTranslation&#34;: true,&#xA;&#x9;&#x9;&#34;onlyShowTranslation&#34;: false&#xA;&#x9;},&#xA;&#x9;&#34;extra&#34;: {&#xA;&#x9;&#x9;&#34;extraFile&#34;: &#34;&#34;,&#xA;&#x9;&#x9;&#34;onlyTranslationExtraFile&#34;: false&#xA;&#x9;},&#xA;&#x9;&#34;colors&#34;: {&#xA;&#x9;&#x9;&#34;danbooru&#34;: {&#xA;&#x9;&#x9;&#x9;&#34;0&#34;: [&#34;lightblue&#34;, &#34;dodgerblue&#34;],&#xA;&#x9;&#x9;&#x9;&#34;1&#34;: [&#34;indianred&#34;, &#34;firebrick&#34;],&#xA;&#x9;&#x9;&#x9;&#34;3&#34;: [&#34;violet&#34;, &#34;darkorchid&#34;],&#xA;&#x9;&#x9;&#x9;&#34;4&#34;: [&#34;lightgreen&#34;, &#34;darkgreen&#34;],&#xA;&#x9;&#x9;&#x9;&#34;5&#34;: [&#34;orange&#34;, &#34;darkorange&#34;]&#xA;&#x9;&#x9;},&#xA;&#x9;&#x9;&#34;e621&#34;: {&#xA;&#x9;&#x9;&#x9;&#34;-1&#34;: [&#34;red&#34;, &#34;maroon&#34;],&#xA;&#x9;&#x9;&#x9;&#34;0&#34;: [&#34;lightblue&#34;, &#34;dodgerblue&#34;],&#xA;&#x9;&#x9;&#x9;&#34;1&#34;: [&#34;gold&#34;, &#34;goldenrod&#34;],&#xA;&#x9;&#x9;&#x9;&#34;3&#34;: [&#34;violet&#34;, &#34;darkorchid&#34;],&#xA;&#x9;&#x9;&#x9;&#34;4&#34;: [&#34;lightgreen&#34;, &#34;darkgreen&#34;],&#xA;&#x9;&#x9;&#x9;&#34;5&#34;: [&#34;tomato&#34;, &#34;darksalmon&#34;],&#xA;&#x9;&#x9;&#x9;&#34;6&#34;: [&#34;red&#34;, &#34;maroon&#34;],&#xA;&#x9;&#x9;&#x9;&#34;7&#34;: [&#34;whitesmoke&#34;, &#34;black&#34;],&#xA;&#x9;&#x9;&#x9;&#34;8&#34;: [&#34;seagreen&#34;, &#34;darkseagreen&#34;]&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Setting&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tagFile&lt;/td&gt; &#xA;   &lt;td&gt;Specifies the tag file to use. You can provide a custom tag database of your liking, but since the script was developed with Danbooru tags in mind, it might not work properly with other configurations.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;activeIn&lt;/td&gt; &#xA;   &lt;td&gt;Allows to selectively (de)activate the script for txt2img, img2img, and the negative prompts for both.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;maxResults&lt;/td&gt; &#xA;   &lt;td&gt;How many results to show max. For the default tag set, the results are ordered by occurence count. For embeddings and wildcards it will show all results in a scrollable list.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;resultStepLength&lt;/td&gt; &#xA;   &lt;td&gt;Allows to load results in smaller batches of the specified size for better performance in long lists or if showAllResults is true.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;showAllResults&lt;/td&gt; &#xA;   &lt;td&gt;If true, will ignore maxResults and show all results in a scrollable list. &lt;strong&gt;Warning:&lt;/strong&gt; can lag your browser for long lists.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;useLeftRightArrowKeys&lt;/td&gt; &#xA;   &lt;td&gt;If true, left and right arrows will select the first/last result in the popup instead of moving the cursor in the textbox.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;replaceUnderscores&lt;/td&gt; &#xA;   &lt;td&gt;If true, undescores are replaced with spaces on clicking a tag. Might work better for some models.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;escapeParentheses&lt;/td&gt; &#xA;   &lt;td&gt;If true, escapes tags containing () so they don&#39;t contribute to the web UI&#39;s prompt weighting functionality.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;useWildcards&lt;/td&gt; &#xA;   &lt;td&gt;Used to toggle the wildcard completion functionality.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;useEmbeddings&lt;/td&gt; &#xA;   &lt;td&gt;Used to toggle the embedding completion functionality.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;translation&lt;/td&gt; &#xA;   &lt;td&gt;Options for translating tags. More info in the section below.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;extras&lt;/td&gt; &#xA;   &lt;td&gt;Options for additional tag files / translations. More info in the section below.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;colors&lt;/td&gt; &#xA;   &lt;td&gt;Contains customizable colors for the tag types, you can add new ones here for custom tag files (same name as filename, without the .csv). The first value is for dark, the second for light mode. Color names and hex codes should both work.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Translations &amp;amp; Extra tags&lt;/h3&gt; &#xA;&lt;p&gt;With the recent update it is now possible to add translations to the tags. These will be searchable / shown according to the settings in &lt;code&gt;config.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;searchByTranslation&lt;/code&gt; - Whether to search for the translated term as well or only the English tag.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onlyShowTranslation&lt;/code&gt; - Replaces the English tag with its translation if it has one. Only for displaying, the inserted text at the end is still the English tag.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example with full and partial chinese tag sets:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/34448969/196175839-8aaacb26-5c90-48e3-be65-647a0b444ead.png&#34; alt=&#34;translation&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/34448969/196176233-76d4cb5f-16cf-4800-a69b-adb64a79ca8b.png&#34; alt=&#34;translation_mixed&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Translations can be added in multiple ways, which is where the &#34;Extra&#34; file comes into play.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Directly in the main tag file. Simply add a third value, separated by comma, containing the translation for the tag in that row.&lt;/li&gt; &#xA; &lt;li&gt;As an extra file containing only the translated tag rows (so still including the english Tag name and tag type). Will be matched to the English tags in the main file based on the name &amp;amp; type, so might be slow for large translation files.&lt;/li&gt; &#xA; &lt;li&gt;As an extra file with &lt;code&gt;onlyTranslationExtraFile&lt;/code&gt; true. With this configuration, the extra file has to include &lt;em&gt;only&lt;/em&gt; the translation itself. That means it is purely index based, assigning the translations to the main tags is really fast but also needs the lines to match (including empty lines). If the order or amount in the main file changes, the translations will potentially not match anymore.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;So your CSV values would look like this for each method:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;1&lt;/th&gt; &#xA;   &lt;th&gt;2&lt;/th&gt; &#xA;   &lt;th&gt;3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Main file&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tag,0,translation&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tag,0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tag,0&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Extra file&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tag,0,translation&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;translation&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Methods 1 &amp;amp; 2 can also be mixed, in which case translations in the extra file will have priority over those in the main file if they translate the same tag.&lt;/p&gt; &#xA;&lt;p&gt;The extra files can also be used to just add new / custom tags not included in the main set, provided &lt;code&gt;onlyTranslationExtraFile&lt;/code&gt; is false. If an extra tag doesn&#39;t match any existing tag, it will be added to the list as a new tag instead.&lt;/p&gt; &#xA;&lt;h2&gt;CSV tag data&lt;/h2&gt; &#xA;&lt;p&gt;The script expects a CSV file with tags saved in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csv&#34;&gt;1girl,0&#xA;solo,0&#xA;highres,5&#xA;long_hair,0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notably, it does not expect column names in the first row. The first value needs to be the tag name, while the second value specifies the tag type. An optional third value will be interpreted as a translation as described in the section above. The numbering system follows the &lt;a href=&#34;https://danbooru.donmai.us/wiki_pages/api%3Atags&#34;&gt;tag API docs&lt;/a&gt; of Danbooru:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;General&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Artist&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Copyright&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Character&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Meta&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;or of e621:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-1&lt;/td&gt; &#xA;   &lt;td&gt;Invalid&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;General&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Artist&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Copyright&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Character&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Species&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Invalid&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;Meta&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;Lore&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The tag type is used for coloring entries in the result list.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>adrianhajdin/project_web3_battle_game</title>
    <updated>2022-11-01T01:35:21Z</updated>
    <id>tag:github.com,2022-11-01:/adrianhajdin/project_web3_battle_game</id>
    <link href="https://github.com/adrianhajdin/project_web3_battle_game" rel="alternate"></link>
    <summary type="html">&lt;p&gt;With a stunning design, interactive gameplay, smart wallet pairing, live interaction with smart contracts, and, most importantly, the ability to battle other players in real-time, AvaxGods is the best and the only Web3 battle-style online multiplayer card game that you can currently find on YouTube.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Avax Gods - Online Multiplayer Web3 NFT Card Game&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.ibb.co/4P2C08x/image.png&#34; alt=&#34;Gameplay&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Launch your development career with project-based coaching on &lt;a href=&#34;https://www.jsmastery.pro&#34;&gt;JS Mastery Pro&lt;/a&gt;.&lt;/h3&gt; &#xA;&lt;h2&gt;Instructions on setting up the Web3 part of the project&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;&lt;code&gt;cd web3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npx hardhat&lt;/code&gt; -&amp;gt; y → typescript → enter → enter&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install @openzeppelin/contracts dotenv @nomiclabs/hardhat-ethers&lt;/code&gt; + Hardhat packages &lt;code&gt;npm install --save-dev &#34;hardhat@^2.12.0&#34; &#34;@nomicfoundation/hardhat-toolbox@^2.0.0&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://chrome.google.com/webstore/detail/core/agoakfejjabomempkjlepdflaleeobhb&#34;&gt;Core&lt;/a&gt;, a Metamask smart wallet alternative built for Avalanche dApps&lt;/li&gt; &#xA; &lt;li&gt;Turn on the testnet mode by: opening up the Core extension -&amp;gt; click the hamburger menu on the top left -&amp;gt; go to advanced -&amp;gt; turn on the testnet mode&lt;/li&gt; &#xA; &lt;li&gt;Fund your wallet from the &lt;a href=&#34;https://faucet.avax.network/&#34;&gt;Avax Faucet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;.env&lt;/code&gt; file and specify a PRIVATE_KEY variable.&lt;/li&gt; &#xA; &lt;li&gt;To get to the private key, do the following steps:&lt;/li&gt; &#xA; &lt;li&gt;Open up the Core extension -&amp;gt; click the hamburger menu on the top left -&amp;gt; go to security and privacy -&amp;gt; click show recovery phase -&amp;gt; enter your password -&amp;gt; copy the phrase -&amp;gt; go to &lt;a href=&#34;https://wallet.avax.network/&#34;&gt;wallet.avax.network&lt;/a&gt; -&amp;gt; click access wallet -&amp;gt; choose mnemonic key phrase -&amp;gt; paste what the words we’ve copied from Core -&amp;gt; on the sidebar click manage keys -&amp;gt; view c-chain private key -&amp;gt; copy -&amp;gt; paste it in the .env file&lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;hardhat.config.ts&lt;/code&gt; file from the GitHub gist down in the description&lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;deploy.ts&lt;/code&gt; script from the GitHub gist down in the description&lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;AvaxGods.sol&lt;/code&gt; smart contract code from the GitHub gist down in the description&lt;/li&gt; &#xA; &lt;li&gt;Compile the contract by running the &lt;code&gt;npx hardhat compile&lt;/code&gt; command&lt;/li&gt; &#xA; &lt;li&gt;Deploy the smart contract on the Fuji test network by running the &lt;code&gt;npx hardhat run scripts/deploy.ts --network fuji&lt;/code&gt; command Move the &lt;code&gt;/artifacts/contracts/AVAXGods.json&lt;/code&gt; file to the &lt;code&gt;/contract&lt;/code&gt; folder on the frontend Copy the address of the deployed contract from the terminal and paste it into the &lt;code&gt;/contract/index.js&lt;/code&gt; file of the frontend application&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>expressjs/express</title>
    <updated>2022-11-01T01:35:21Z</updated>
    <id>tag:github.com,2022-11-01:/expressjs/express</id>
    <link href="https://github.com/expressjs/express" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast, unopinionated, minimalist web framework for node.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;http://expressjs.com/&#34;&gt;&lt;img src=&#34;https://i.cloudup.com/zfY6lL7eFa-3000x3000.png&#34; alt=&#34;Express Logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fast, unopinionated, minimalist web framework for &lt;a href=&#34;http://nodejs.org&#34;&gt;Node.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://npmjs.org/package/express&#34;&gt;&lt;img src=&#34;https://badgen.net/npm/v/express&#34; alt=&#34;NPM Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagephobia.com/result?p=express&#34;&gt;&lt;img src=&#34;https://badgen.net/packagephobia/install/express&#34; alt=&#34;NPM Install Size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmcharts.com/compare/express?minimal=true&#34;&gt;&lt;img src=&#34;https://badgen.net/npm/dm/express&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const express = require(&#39;express&#39;)&#xA;const app = express()&#xA;&#xA;app.get(&#39;/&#39;, function (req, res) {&#xA;  res.send(&#39;Hello World&#39;)&#xA;})&#xA;&#xA;app.listen(3000)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This is a &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt; module available through the &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm registry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Before installing, &lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;download and install Node.js&lt;/a&gt;. Node.js 0.10 or higher is required.&lt;/p&gt; &#xA;&lt;p&gt;If this is a brand new project, make sure to create a &lt;code&gt;package.json&lt;/code&gt; first with the &lt;a href=&#34;https://docs.npmjs.com/creating-a-package-json-file&#34;&gt;&lt;code&gt;npm init&lt;/code&gt; command&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Installation is done using the &lt;a href=&#34;https://docs.npmjs.com/getting-started/installing-npm-packages-locally&#34;&gt;&lt;code&gt;npm install&lt;/code&gt; command&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm install express&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;http://expressjs.com/en/starter/installing.html&#34;&gt;our installing guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Robust routing&lt;/li&gt; &#xA; &lt;li&gt;Focus on high performance&lt;/li&gt; &#xA; &lt;li&gt;Super-high test coverage&lt;/li&gt; &#xA; &lt;li&gt;HTTP helpers (redirection, caching, etc)&lt;/li&gt; &#xA; &lt;li&gt;View system supporting 14+ template engines&lt;/li&gt; &#xA; &lt;li&gt;Content negotiation&lt;/li&gt; &#xA; &lt;li&gt;Executable for generating applications quickly&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docs &amp;amp; Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://expressjs.com/&#34;&gt;Website and Documentation&lt;/a&gt; - [&lt;a href=&#34;https://github.com/expressjs/expressjs.com&#34;&gt;website repo&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.libera.chat/#express&#34;&gt;#express&lt;/a&gt; on &lt;a href=&#34;https://libera.chat&#34;&gt;Libera Chat&lt;/a&gt; IRC&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/expressjs&#34;&gt;GitHub Organization&lt;/a&gt; for Official Middleware &amp;amp; Modules&lt;/li&gt; &#xA; &lt;li&gt;Visit the &lt;a href=&#34;https://github.com/expressjs/express/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/group/express-js&#34;&gt;Google Group&lt;/a&gt; for discussion&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitter.im/expressjs/express&#34;&gt;Gitter&lt;/a&gt; for support and discussion&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;PROTIP&lt;/strong&gt; Be sure to read &lt;a href=&#34;https://github.com/expressjs/express/wiki/Migrating-from-3.x-to-4.x&#34;&gt;Migrating from 3.x to 4.x&lt;/a&gt; as well as &lt;a href=&#34;https://github.com/expressjs/express/wiki/New-features-in-4.x&#34;&gt;New features in 4.x&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The quickest way to get started with express is to utilize the executable &lt;a href=&#34;https://github.com/expressjs/generator&#34;&gt;&lt;code&gt;express(1)&lt;/code&gt;&lt;/a&gt; to generate an application as shown below:&lt;/p&gt; &#xA;&lt;p&gt;Install the executable. The executable&#39;s major version will match Express&#39;s:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm install -g express-generator@4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create the app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ express /tmp/foo &amp;amp;&amp;amp; cd /tmp/foo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the website at: &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;The Express philosophy is to provide small, robust tooling for HTTP servers, making it a great solution for single page applications, websites, hybrids, or public HTTP APIs.&lt;/p&gt; &#xA;&lt;p&gt;Express does not force you to use any specific ORM or template engine. With support for over 14 template engines via &lt;a href=&#34;https://github.com/tj/consolidate.js&#34;&gt;Consolidate.js&lt;/a&gt;, you can quickly craft your perfect framework.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;To view the examples, clone the Express repo and install the dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ git clone git://github.com/expressjs/express.git --depth 1&#xA;$ cd express&#xA;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run whichever example you want:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ node examples/content-negotiation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/expressjs/express/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://badgen.net/github/checks/expressjs/express/master?label=linux&#34; alt=&#34;Linux Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/dougwilson/express&#34;&gt;&lt;img src=&#34;https://badgen.net/appveyor/ci/dougwilson/express/master?label=windows&#34; alt=&#34;Windows Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/r/expressjs/express?branch=master&#34;&gt;&lt;img src=&#34;https://badgen.net/coveralls/c/github/expressjs/express/master&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Express.js project welcomes all constructive contributions. Contributions take many forms, from code for bug fixes and enhancements, to additions and fixes to documentation, additional tests, triaging incoming pull requests and issues, and more!&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/Contributing.md&#34;&gt;Contributing Guide&lt;/a&gt; for more technical details on contributing.&lt;/p&gt; &#xA;&lt;h3&gt;Security Issues&lt;/h3&gt; &#xA;&lt;p&gt;If you discover a security vulnerability in Express, please see &lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/Security.md&#34;&gt;Security Policies and Procedures&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Running Tests&lt;/h3&gt; &#xA;&lt;p&gt;To run the test suite, first install the dependencies, then run &lt;code&gt;npm test&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm install&#xA;$ npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;People&lt;/h2&gt; &#xA;&lt;p&gt;The original author of Express is &lt;a href=&#34;https://github.com/tj&#34;&gt;TJ Holowaychuk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The current lead maintainer is &lt;a href=&#34;https://github.com/dougwilson&#34;&gt;Douglas Christopher Wilson&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/expressjs/express/graphs/contributors&#34;&gt;List of all contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/expressjs/express/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>