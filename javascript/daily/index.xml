<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-31T01:36:48Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>daodao97/chatdoc</title>
    <updated>2023-03-31T01:36:48Z</updated>
    <id>tag:github.com,2023-03-31:/daodao97/chatdoc</id>
    <link href="https://github.com/daodao97/chatdoc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chat with your doc by openai&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatDoc&lt;/h1&gt; &#xA;&lt;p&gt;一个使用 &lt;code&gt;openai&lt;/code&gt; 与文档对话的例子, 目前支持的文档类型 &lt;code&gt;.pdf&lt;/code&gt;, &lt;code&gt;.epub&lt;/code&gt;, &lt;code&gt;.md&lt;/code&gt;, &lt;code&gt;.txt&lt;/code&gt;, &lt;code&gt;.docx&lt;/code&gt;, &lt;code&gt;web&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/daodao97/chatdoc/master/preview.png&#34; alt=&#34;preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;启动后端&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# my local python version 3.9.7&#xA;cd server&#xA;./start {OPEN_AI_KEY}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;启动前端&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# my local node version v16.11.0&#xA;cd client&#xA;./start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 请先替换 docker-compose.yml 中的 OPEN_AI_KEY&#xA;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>tailwindlabs/prettier-plugin-tailwindcss</title>
    <updated>2023-03-31T01:36:48Z</updated>
    <id>tag:github.com,2023-03-31:/tailwindlabs/prettier-plugin-tailwindcss</id>
    <link href="https://github.com/tailwindlabs/prettier-plugin-tailwindcss" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Prettier plugin for Tailwind CSS that automatically sorts classes based on our recommended class order.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg&#34; alt=&#34;prettier-plugin-tailwindcss&#34;&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://prettier.io/&#34;&gt;Prettier&lt;/a&gt; plugin for Tailwind CSS v3.0+ that automatically sorts classes based on &lt;a href=&#34;https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted&#34;&gt;our recommended class order&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To get started, just install &lt;code&gt;prettier-plugin-tailwindcss&lt;/code&gt; as a dev-dependency:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install -D prettier prettier-plugin-tailwindcss&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// prettier.config.js&#xA;module.exports = {&#xA;  plugins: [require(&#39;prettier-plugin-tailwindcss&#39;)],&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resolving your Tailwind configuration&lt;/h2&gt; &#xA;&lt;p&gt;To ensure that the class sorting is taking into consideration any of your project&#39;s Tailwind customizations, it needs access to your &lt;a href=&#34;https://tailwindcss.com/docs/configuration&#34;&gt;Tailwind configuration file&lt;/a&gt; (&lt;code&gt;tailwind.config.js&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;By default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the &lt;code&gt;tailwindConfig&lt;/code&gt; option in your Prettier configuration.&lt;/p&gt; &#xA;&lt;p&gt;Note that paths are resolved relative to the Prettier configuration file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// prettier.config.js&#xA;module.exports = {&#xA;  tailwindConfig: &#39;./styles/tailwind.config.js&#39;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility with other Prettier plugins&lt;/h2&gt; &#xA;&lt;p&gt;This plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we&#39;ve added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;@prettier/plugin-php&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@prettier/plugin-pug&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@shopify/prettier-plugin-liquid&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@ianvs/prettier-plugin-sort-imports&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@trivago/prettier-plugin-sort-imports&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prettier-plugin-astro&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prettier-plugin-css-order&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prettier-plugin-import-sort&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prettier-plugin-jsdoc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prettier-plugin-organize-attributes&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prettier-plugin-organize-imports&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prettier-plugin-style-order&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prettier-plugin-svelte&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prettier-plugin-twig-melody&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;One limitation with this approach is that &lt;code&gt;prettier-plugin-tailwindcss&lt;/code&gt; &lt;em&gt;must&lt;/em&gt; be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the &lt;code&gt;pluginSearchDirs&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt; and then listing each of your Prettier plugins in the &lt;code&gt;plugins&lt;/code&gt; array:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json5&#34;&gt;// .prettierrc&#xA;{&#xA;  // ..&#xA;  &#34;plugins&#34;: [&#xA;    &#34;prettier-plugin-svelte&#34;,&#xA;    &#34;prettier-plugin-organize-imports&#34;,&#xA;    &#34;prettier-plugin-tailwindcss&#34; // MUST come last&#xA;  ],&#xA;  &#34;pluginSearchDirs&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>waylybaye/opencat.app</title>
    <updated>2023-03-31T01:36:48Z</updated>
    <id>tag:github.com,2023-03-31:/waylybaye/opencat.app</id>
    <link href="https://github.com/waylybaye/opencat.app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;https://opencat.app&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is a starter template for &lt;a href=&#34;https://nextjs.org/learn&#34;&gt;Learn Next.js&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>