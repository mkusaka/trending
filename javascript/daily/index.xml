<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-28T01:38:02Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nasa/openmct</title>
    <updated>2022-07-28T01:38:02Z</updated>
    <id>tag:github.com,2022-07-28:/nasa/openmct</id>
    <link href="https://github.com/nasa/openmct" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A web based mission control framework.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open MCT &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/nasa/openmct/context:javascript&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/javascript/g/nasa/openmct.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: JavaScript&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/nasa/openmct&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/nasa/openmct/branch/master/graph/badge.svg?token=7DQIipp3ej&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://percy.io/b2e34b17/openmct&#34;&gt;&lt;img src=&#34;https://percy.io/static/images/percy-badge.svg?sanitize=true&#34; alt=&#34;This project is using Percy.io for visual regression testing.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/openmct&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/openmct.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Open MCT (Open Mission Control Technologies) is a next-generation mission control framework for visualization of data on desktop and mobile devices. It is developed at NASA&#39;s Ames Research Center, and is being used by NASA for data analysis of spacecraft missions, as well as planning and operation of experimental rover systems. As a generalizable and open source framework, Open MCT could be used as the basis for building applications for planning, operation, and analysis of any systems producing telemetry data.&lt;/p&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://nasa.github.io/openmct/&#34;&gt;Official Site&lt;/a&gt; and &lt;a href=&#34;https://nasa.github.io/openmct/getting-started/&#34;&gt;Getting Started Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;ve created something amazing with Open MCT, showcase your work in our GitHub Discussions &lt;a href=&#34;https://github.com/nasa/openmct/discussions/categories/show-and-tell&#34;&gt;Show and Tell&lt;/a&gt; section. We love seeing unique and wonderful implementations of Open MCT!&lt;/p&gt; &#xA;&lt;h2&gt;See Open MCT in Action&lt;/h2&gt; &#xA;&lt;p&gt;Try Open MCT now with our &lt;a href=&#34;https://openmct-demo.herokuapp.com/&#34;&gt;live demo&lt;/a&gt;. &lt;img src=&#34;https://nasa.github.io/openmct/static/res/images/Open-MCT.Browse.Layout.Mars-Weather-1.jpg&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building and Running Open MCT Locally&lt;/h2&gt; &#xA;&lt;p&gt;Building and running Open MCT in your local dev environment is very easy. Be sure you have &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt; and &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; installed, then follow the directions below. Need additional information? Check out the &lt;a href=&#34;https://nasa.github.io/openmct/getting-started/&#34;&gt;Getting Started&lt;/a&gt; page on our website. (These instructions assume you are installing as a non-root user; developers have &lt;a href=&#34;https://github.com/nasa/openmct/issues/1151&#34;&gt;reported issues&lt;/a&gt; running these steps with root privileges.)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the source code&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;git clone https://github.com/nasa/openmct.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install development dependencies. Note: Check the package.json engine for our tested and supported node versions.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run a local development server&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open MCT is now running, and can be accessed by pointing a web browser at &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation is available on the &lt;a href=&#34;https://nasa.github.io/openmct/documentation/&#34;&gt;Open MCT website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;The clearest examples for developing Open MCT plugins are in the &lt;a href=&#34;https://github.com/nasa/openmct-tutorial&#34;&gt;tutorials&lt;/a&gt; provided in our documentation.&lt;/p&gt; &#xA;&lt;p&gt;We want Open MCT to be as easy to use, install, run, and develop for as possible, and your feedback will help us get there! Feedback can be provided via &lt;a href=&#34;https://github.com/nasa/openmct/issues/new/choose&#34;&gt;GitHub issues&lt;/a&gt;, &lt;a href=&#34;https://github.com/nasa/openmct/discussions&#34;&gt;Starting a GitHub Discussion&lt;/a&gt;, or by emailing us at &lt;a href=&#34;mailto:arc-dl-openmct@mail.nasa.gov&#34;&gt;arc-dl-openmct@mail.nasa.gov&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building Applications With Open MCT&lt;/h2&gt; &#xA;&lt;p&gt;Open MCT is built using &lt;a href=&#34;http://npmjs.com/&#34;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://webpack.js.org/&#34;&gt;&lt;code&gt;webpack&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See our documentation for a guide on &lt;a href=&#34;https://github.com/nasa/openmct/raw/master/API.md#starting-an-open-mct-application&#34;&gt;building Applications with Open MCT&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;This is a fast moving project and we do our best to test and support the widest possible range of browsers, operating systems, and nodejs APIs. We have a published list of support available in our package.json&#39;s &lt;code&gt;browserslist&lt;/code&gt; key.&lt;/p&gt; &#xA;&lt;p&gt;If you encounter an issue with a particular browser, OS, or nodejs API, please file a &lt;a href=&#34;https://github.com/nasa/openmct/issues/new/choose&#34;&gt;GitHub issue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Open MCT can be extended via plugins that make calls to the Open MCT API. A plugin is a group of software components (including source code and resources such as images and HTML templates) that is intended to be added or removed as a single unit.&lt;/p&gt; &#xA;&lt;p&gt;As well as providing an extension mechanism, most of the core Open MCT codebase is also written as plugins.&lt;/p&gt; &#xA;&lt;p&gt;For information on writing plugins, please see &lt;a href=&#34;https://github.com/nasa/openmct/raw/master/API.md#plugins&#34;&gt;our API documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;Our automated test coverage comes in the form of unit, e2e, visual, performance, and security tests.&lt;/p&gt; &#xA;&lt;h3&gt;Unit Tests&lt;/h3&gt; &#xA;&lt;p&gt;Unit Tests are written for &lt;a href=&#34;https://jasmine.github.io/api/edge/global&#34;&gt;Jasmine&lt;/a&gt; and run by &lt;a href=&#34;http://karma-runner.github.io&#34;&gt;Karma&lt;/a&gt;. To run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;npm test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The test suite is configured to load any scripts ending with &lt;code&gt;Spec.js&lt;/code&gt; found in the &lt;code&gt;src&lt;/code&gt; hierarchy. Full configuration details are found in &lt;code&gt;karma.conf.js&lt;/code&gt;. By convention, unit test scripts should be located alongside the units that they test; for example, &lt;code&gt;src/foo/Bar.js&lt;/code&gt; would be tested by &lt;code&gt;src/foo/BarSpec.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;e2e, Visual, and Performance tests&lt;/h3&gt; &#xA;&lt;p&gt;The e2e, Visual, and Performance tests are written for playwright and run by playwright&#39;s new test runner &lt;a href=&#34;https://playwright.dev/&#34;&gt;@playwright/test&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run the e2e tests which are part of every commit:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;npm run test:e2e:stable&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run the visual test suite:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;npm run test:e2e:visual&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run the performance tests:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;npm run test:perf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The test suite is configured to all tests localed in &lt;code&gt;e2e/tests/&lt;/code&gt; ending in &lt;code&gt;*.e2e.spec.js&lt;/code&gt;. For more about the e2e test suite, please see the &lt;a href=&#34;https://raw.githubusercontent.com/nasa/openmct/master/e2e/README.md&#34;&gt;README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Security Tests&lt;/h3&gt; &#xA;&lt;p&gt;Each commit is analyzed for known security vulnerabilities using &lt;a href=&#34;https://codeql.github.com/docs/codeql-language-guides/codeql-library-for-javascript/&#34;&gt;CodeQL&lt;/a&gt; and our overall security report is available on &lt;a href=&#34;https://lgtm.com/projects/g/nasa/openmct/&#34;&gt;LGTM&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Test Reporting and Code Coverage&lt;/h3&gt; &#xA;&lt;p&gt;Each test suite generates a report in CircleCI. For a complete overview of testing functionality, please see our &lt;a href=&#34;https://app.circleci.com/insights/github/nasa/openmct/workflows/the-nightly/overview?branch=master&amp;amp;reporting-window=last-30-days&#34;&gt;Circle CI Test Insights Dashboard&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Our code coverage is generated during the runtime of our unit, e2e, and visual tests. The combination of those reports is published to &lt;a href=&#34;https://app.codecov.io/gh/nasa/openmct/&#34;&gt;codecov.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Glossary&lt;/h1&gt; &#xA;&lt;p&gt;Certain terms are used throughout Open MCT with consistent meanings or conventions. Any deviations from the below are issues and should be addressed (either by updating this glossary or changing code to reflect correct usage.) Other developer documentation, particularly in-line documentation, may presume an understanding of these terms.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;plugin&lt;/em&gt;: A plugin is a removable, reusable grouping of software elements. The application is composed of plugins.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;composition&lt;/em&gt;: In the context of a domain object, this refers to the set of other domain objects that compose or are contained by that object. A domain object&#39;s composition is the set of domain objects that should appear immediately beneath it in a tree hierarchy. A domain object&#39;s composition is described in its model as an array of id&#39;s; its composition capability provides a means to retrieve the actual domain object instances associated with these identifiers asynchronously.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;description&lt;/em&gt;: When used as an object property, this refers to the human-readable description of a thing; usually a single sentence or short paragraph. (Most often used in the context of extensions, domain object models, or other similar application-specific objects.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;domain object&lt;/em&gt;: A meaningful object to the user; a distinct thing in the work support by Open MCT. Anything that appears in the left-hand tree is a domain object.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;identifier&lt;/em&gt;: A tuple consisting of a namespace and a key, which together uniquely identifies a domain object.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;model&lt;/em&gt;: The persistent state associated with a domain object. A domain object&#39;s model is a JavaScript object which can be converted to JSON without losing information (that is, it contains no methods.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;name&lt;/em&gt;: When used as an object property, this refers to the human-readable name for a thing. (Most often used in the context of extensions, domain object models, or other similar application-specific objects.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;navigation&lt;/em&gt;: Refers to the current state of the application with respect to the user&#39;s expressed interest in a specific domain object; e.g. when a user clicks on a domain object in the tree, they are &lt;em&gt;navigating&lt;/em&gt; to it, and it is thereafter considered the &lt;em&gt;navigated&lt;/em&gt; object (until the user makes another such choice.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;namespace&lt;/em&gt;: A name used to identify a persistence store. A running open MCT application could potentially use multiple persistence stores, with the&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open MCT v2.0.0&lt;/h2&gt; &#xA;&lt;p&gt;Support for our legacy bundle-based API, and the libraries that it was built on (like Angular 1.x), have now been removed entirely from this repository.&lt;/p&gt; &#xA;&lt;p&gt;For now if you have an Open MCT application that makes use of the legacy API, &lt;a href=&#34;https://github.com/nasa/openmct-legacy-plugin&#34;&gt;a plugin&lt;/a&gt; is provided that bootstraps the legacy bundling mechanism and API. This plugin will not be maintained over the long term however, and the legacy support plugin will not be tested for compatibility with future versions of Open MCT. It is provided for convenience only.&lt;/p&gt; &#xA;&lt;h3&gt;How do I know if I am using legacy API?&lt;/h3&gt; &#xA;&lt;p&gt;You might still be using legacy API if your source code&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contains files named bundle.js, or bundle.json,&lt;/li&gt; &#xA; &lt;li&gt;Makes calls to &lt;code&gt;openmct.$injector()&lt;/code&gt;, or &lt;code&gt;openmct.$angular&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;Makes calls to &lt;code&gt;openmct.legacyRegistry&lt;/code&gt;, &lt;code&gt;openmct.legacyExtension&lt;/code&gt;, or &lt;code&gt;openmct.legacyBundle&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What should I do if I am using legacy API?&lt;/h3&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://nasa.github.io/openmct/documentation/&#34;&gt;the modern Open MCT API&lt;/a&gt;. Post any questions to the &lt;a href=&#34;https://github.com/nasa/openmct/discussions&#34;&gt;Discussions section&lt;/a&gt; of the Open MCT GitHub repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/monaco-editor</title>
    <updated>2022-07-28T01:38:02Z</updated>
    <id>tag:github.com,2022-07-28:/microsoft/monaco-editor</id>
    <link href="https://github.com/microsoft/monaco-editor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A browser based code editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Monaco Editor&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/ms/monaco-editor/_build/latest?definitionId=3&#34;&gt;&lt;img src=&#34;https://dev.azure.com/ms/monaco-editor/_apis/build/status/microsoft.monaco-editor?label=website&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Monaco Editor is the code editor which powers &lt;a href=&#34;https://github.com/microsoft/vscode&#34;&gt;VS Code&lt;/a&gt;, with the features better described &lt;a href=&#34;https://code.visualstudio.com/docs/editor/editingevolved&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please note that this repository contains no source code for the code editor, it only contains the scripts to package everything together and ship the &lt;code&gt;monaco-editor&lt;/code&gt; npm module.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5047891/94183711-290c0780-fea3-11ea-90e3-c88ff9d21bd6.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Try it out&lt;/h2&gt; &#xA;&lt;p&gt;Try the editor out &lt;a href=&#34;https://microsoft.github.io/monaco-editor/index.html&#34;&gt;on our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm install monaco-editor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will get:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;inside &lt;code&gt;esm&lt;/code&gt;: ESM version of the editor (compatible with e.g. webpack)&lt;/li&gt; &#xA; &lt;li&gt;inside &lt;code&gt;dev&lt;/code&gt;: AMD bundled, not minified&lt;/li&gt; &#xA; &lt;li&gt;inside &lt;code&gt;min&lt;/code&gt;: AMD bundled, and minified&lt;/li&gt; &#xA; &lt;li&gt;inside &lt;code&gt;min-maps&lt;/code&gt;: source maps for &lt;code&gt;min&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;monaco.d.ts&lt;/code&gt;: this specifies the API of the editor (this is what is actually versioned, everything else is considered private and might break with any release).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is recommended to develop against the &lt;code&gt;dev&lt;/code&gt; version, and in production to use the &lt;code&gt;min&lt;/code&gt; version.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Learn how to integrate the editor with these &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/monaco-editor/main/samples/&#34;&gt;complete samples&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/monaco-editor/main/docs/integrate-amd.md&#34;&gt;Integrate the AMD version&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/monaco-editor/main/docs/integrate-esm.md&#34;&gt;Integrate the ESM version&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Learn how to use the editor API and try out your own customizations in the &lt;a href=&#34;https://microsoft.github.io/monaco-editor/playground.html&#34;&gt;playground&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Explore the &lt;a href=&#34;https://microsoft.github.io/monaco-editor/api/index.html&#34;&gt;API docs&lt;/a&gt; or read them straight from &lt;a href=&#34;https://github.com/microsoft/monaco-editor/raw/main/website/typedoc/monaco.d.ts&#34;&gt;&lt;code&gt;monaco.d.ts&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Read &lt;a href=&#34;https://github.com/microsoft/monaco-editor/wiki/Accessibility-Guide-for-Integrators&#34;&gt;this guide&lt;/a&gt; to ensure the editor is accessible to all your users!&lt;/li&gt; &#xA; &lt;li&gt;Create a Monarch tokenizer for a new programming language &lt;a href=&#34;https://microsoft.github.io/monaco-editor/monarch.html&#34;&gt;in the Monarch playground&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ask questions on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/monaco-editor&#34;&gt;StackOverflow&lt;/a&gt;! Search open and closed issues, there are a lot of tips in there!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Create &lt;a href=&#34;https://github.com/microsoft/monaco-editor/issues&#34;&gt;issues&lt;/a&gt; in this repository for anything related to the Monaco Editor. Always mention &lt;strong&gt;the version&lt;/strong&gt; of the editor when creating issues and &lt;strong&gt;the browser&lt;/strong&gt; you&#39;re having trouble in. Please search for existing issues to avoid duplicates.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;❓ &lt;strong&gt;What is the relationship between VS Code and the Monaco Editor?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Monaco Editor is generated straight from VS Code&#39;s sources with some shims around services the code needs to make it run in a web browser outside of its home.&lt;/p&gt; &#xA;&lt;p&gt;❓ &lt;strong&gt;What is the relationship between VS Code&#39;s version and the Monaco Editor&#39;s version?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;None. The Monaco Editor is a library and it reflects directly the source code.&lt;/p&gt; &#xA;&lt;p&gt;❓ &lt;strong&gt;I&#39;ve written an extension for VS Code, will it work on the Monaco Editor in a browser?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;No.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: If the extension is fully based on the &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/&#34;&gt;LSP&lt;/a&gt; and if the language server is authored in JavaScript, then it would be possible.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;❓ &lt;strong&gt;Why all these web workers and why should I care?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Language services create web workers to compute heavy stuff outside of the UI thread. They cost hardly anything in terms of resource overhead and you shouldn&#39;t worry too much about them, as long as you get them to work (see above the cross-domain case).&lt;/p&gt; &#xA;&lt;p&gt;❓ &lt;strong&gt;What is this &lt;code&gt;loader.js&lt;/code&gt;? Can I use &lt;code&gt;require.js&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is an AMD loader that we use in VS Code. Yes.&lt;/p&gt; &#xA;&lt;p&gt;❓ &lt;strong&gt;I see the warning &#34;Could not create web worker&#34;. What should I do?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;HTML5 does not allow pages loaded on &lt;code&gt;file://&lt;/code&gt; to create web workers. Please load the editor with a web server on &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; schemes.&lt;/p&gt; &#xA;&lt;p&gt;❓ &lt;strong&gt;Is the editor supported in mobile browsers or mobile web app frameworks?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;No.&lt;/p&gt; &#xA;&lt;p&gt;❓ &lt;strong&gt;Why doesn&#39;t the editor support TextMate grammars?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please see &lt;a href=&#34;https://github.com/bolinfest/monaco-tm&#34;&gt;https://github.com/bolinfest/monaco-tm&lt;/a&gt; which puts together &lt;code&gt;monaco-editor&lt;/code&gt;, &lt;code&gt;vscode-oniguruma&lt;/code&gt; and &lt;code&gt;vscode-textmate&lt;/code&gt; to get TM grammar support in the editor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;❓ &lt;strong&gt;What about IE 11 support?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Monaco Editor no longer supports IE 11. The last version that was tested on IE 11 is &lt;code&gt;0.18.1&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development setup&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/monaco-editor/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://github.com/microsoft/monaco-editor/raw/main/LICENSE.txt&#34;&gt;MIT&lt;/a&gt; License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>odoo/odoo</title>
    <updated>2022-07-28T01:38:02Z</updated>
    <id>tag:github.com,2022-07-28:/odoo/odoo</id>
    <link href="https://github.com/odoo/odoo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Odoo. Open Source Apps To Grow Your Business.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://runbot.odoo.com/runbot&#34;&gt;&lt;img src=&#34;https://runbot.odoo.com/runbot/badge/flat/1/master.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.odoo.com/documentation/15.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/master-docs-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&#34; alt=&#34;Tech Doc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.odoo.com/forum/help-1&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/master-help-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&#34; alt=&#34;Help&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nightly.odoo.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/master-nightly-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&#34; alt=&#34;Nightly Builds&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Odoo&lt;/h2&gt; &#xA;&lt;p&gt;Odoo is a suite of web based open source business apps.&lt;/p&gt; &#xA;&lt;p&gt;The main Odoo Apps include an &lt;a href=&#34;https://www.odoo.com/page/crm&#34;&gt;Open Source CRM&lt;/a&gt;, &lt;a href=&#34;https://www.odoo.com/app/website&#34;&gt;Website Builder&lt;/a&gt;, &lt;a href=&#34;https://www.odoo.com/app/ecommerce&#34;&gt;eCommerce&lt;/a&gt;, &lt;a href=&#34;https://www.odoo.com/app/inventory&#34;&gt;Warehouse Management&lt;/a&gt;, &lt;a href=&#34;https://www.odoo.com/app/project&#34;&gt;Project Management&lt;/a&gt;, &lt;a href=&#34;https://www.odoo.com/app/accounting&#34;&gt;Billing &amp;amp; Accounting&lt;/a&gt;, &lt;a href=&#34;https://www.odoo.com/app/point-of-sale-shop&#34;&gt;Point of Sale&lt;/a&gt;, &lt;a href=&#34;https://www.odoo.com/app/employees&#34;&gt;Human Resources&lt;/a&gt;, &lt;a href=&#34;https://www.odoo.com/app/social-marketing&#34;&gt;Marketing&lt;/a&gt;, &lt;a href=&#34;https://www.odoo.com/app/manufacturing&#34;&gt;Manufacturing&lt;/a&gt;, &lt;a href=&#34;https://www.odoo.com/&#34;&gt;...&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Odoo Apps can be used as stand-alone applications, but they also integrate seamlessly so you get a full-featured &lt;a href=&#34;https://www.odoo.com&#34;&gt;Open Source ERP&lt;/a&gt; when you install several Apps.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started with Odoo&lt;/h2&gt; &#xA;&lt;p&gt;For a standard installation please follow the &lt;a href=&#34;https://www.odoo.com/documentation/15.0/administration/install.html&#34;&gt;Setup instructions&lt;/a&gt; from the documentation.&lt;/p&gt; &#xA;&lt;p&gt;To learn the software, we recommend the &lt;a href=&#34;https://www.odoo.com/slides&#34;&gt;Odoo eLearning&lt;/a&gt;, or &lt;a href=&#34;https://www.odoo.com/page/scale-up-business-game&#34;&gt;Scale-up&lt;/a&gt;, the &lt;a href=&#34;https://www.odoo.com/page/scale-up-business-game&#34;&gt;business game&lt;/a&gt;. Developers can start with &lt;a href=&#34;https://www.odoo.com/documentation/15.0/developer/howtos.html&#34;&gt;the developer tutorials&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>