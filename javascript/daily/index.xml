<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-26T01:39:13Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>atralice/Curso.Prep.Henry</title>
    <updated>2022-08-26T01:39:13Z</updated>
    <id>tag:github.com,2022-08-26:/atralice/Curso.Prep.Henry</id>
    <link href="https://github.com/atralice/Curso.Prep.Henry" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Curso de Preparación para Ingresar a Henry.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/logo.png&#34; height=&#34;70px&#34;&gt; &#xA;&lt;h2&gt;Introducción&lt;/h2&gt; &#xA;&lt;h1&gt;Modulo 0 - Prep&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/00-PrimerosPasos&#34;&gt;00 - Primeros Pasos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/01-Git&#34;&gt;01 - Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/02-JS-I&#34;&gt;02 - I - Introducción a Javascript: Variables, tipos de datos y funciones&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/03-JS-II&#34;&gt;03 - II- Flujos de control, operadores de comparación, bucles for&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/04-JS-III&#34;&gt;04 - III - continuación de bucles for y Arrays&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/05-JS-IV&#34;&gt;05 - IV - Objetos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/06-JS-V&#34;&gt;06 - V - Clases y prototype&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/07-JS-VI&#34;&gt;07 - VI - Callbacks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/08-HTML&#34;&gt;08 - HTML&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/09-CSS-Positioning&#34;&gt;09 - CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Henry Challenge =&amp;gt; &lt;a href=&#34;https://challenge.prep.soyhenry.com/&#34;&gt;Inscribite acá para rendir&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Conceptos:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/JS-conceptos/Statements-Expressions/&#34;&gt;Expressions vs Statements&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Clases de Repaso (Henry Heroes)&lt;/h2&gt; &#xA;&lt;p&gt;Estudiantes mas avanzados de la carrera resuelven los ejercicios en vivo en formato webinar. &lt;a href=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vQwV-pEgWuxqI1B3pdVI0lbeqPB0a6LHPk6-DQlifDdX9Rue_Ul4YTOxoOg-hhofv6U0f32OoXOU2Wf/pubhtml&#34;&gt;Acá podes&lt;/a&gt; ver el calendario de las clases y las grabaciones.&lt;/p&gt; &#xA;&lt;h2&gt;Homeworks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANTE:&lt;/strong&gt; Para ejecutar los tests de cada homework tenes que pararte en la carpeta donde clonaste tu repo (es decir la carpeta donde está este &lt;code&gt;README.md&lt;/code&gt;) y ejecutar el siguiente comando:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Esto instalará todas las dependencias necesarias (lo tenés que hacer una sóla vez), una vez terminado y cada vez que quieras ver cuantos tests pasaste ejecutá:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm test {nombre del homework}.test.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Por ejemplo, para ejecutar los tests del homework 02, ejecutar: &lt;code&gt;npm test JSII.test.js&lt;/code&gt; el del homework 01: &lt;code&gt;npm test JSI.test.js&lt;/code&gt; y así.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;No todos los homeworks tiene tests, está detallado en la descripción de cada uno.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;La Carrera&lt;/h1&gt; &#xA;&lt;p&gt;Si querés saber más sobre la carrera, mirá este video:&lt;/p&gt; &amp;lt;iframe src=&#34;https://player.vimeo.com/video/426051769&#34; width=&#34;640&#34; height=&#34;360&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; fullscreen&#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;</summary>
  </entry>
  <entry>
    <title>leon-ai/leon</title>
    <updated>2022-08-26T01:39:13Z</updated>
    <id>tag:github.com,2022-08-26:/leon-ai/leon</id>
    <link href="https://github.com/leon-ai/leon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🧠 Leon is your open-source personal assistant.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://getleon.ai&#34;&gt;&lt;img width=&#34;800&#34; src=&#34;https://getleon.ai/img/hero-animation.gif&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://getleon.ai&#34;&gt;&lt;img width=&#34;96&#34; src=&#34;https://getleon.ai/img/logo.svg?sanitize=true&#34; alt=&#34;Leon&#34;&gt;&lt;/a&gt;&lt;br&gt; Leon &lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt;&lt;em&gt;Your open-source personal assistant.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/leon-ai/leon/raw/develop/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?label=License&amp;amp;style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/leon-ai/leon/raw/develop/.github/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/leon-ai/leon/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/leon-ai/leon/actions/workflows/build.yml/badge.svg?branch=develop&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/leon-ai/leon/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/leon-ai/leon/actions/workflows/tests.yml/badge.svg?branch=develop&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/leon-ai/leon/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/leon-ai/leon/actions/workflows/lint.yml/badge.svg?branch=develop&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://discord.gg/MNQqqKg&#34;&gt;&lt;img src=&#34;https://svgshare.com/i/V09.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://getleon.ai&#34;&gt;Website&lt;/a&gt; :: &lt;a href=&#34;https://docs.getleon.ai&#34;&gt;Documentation&lt;/a&gt; :: &lt;a href=&#34;http://roadmap.getleon.ai&#34;&gt;Roadmap&lt;/a&gt; :: &lt;a href=&#34;https://github.com/leon-ai/leon/raw/develop/.github/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; :: &lt;a href=&#34;https://blog.getleon.ai/the-story-behind-leon/&#34;&gt;Story&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;📢 Notice 📢&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://blog.getleon.ai/a-much-better-nlp-and-future-1-0-0-beta-7/&#34;&gt;&lt;img width=&#34;400&#34; src=&#34;https://blog.getleon.ai/static/a62ac28a01cb6898e299dced40875a68/c1b63/beta-7.png&#34;&gt;&lt;/a&gt; &lt;br&gt; Many exciting things are coming up, hence no new documentation and test are going to be written until the official release of Leon. Feel free to &lt;a href=&#34;https://discord.gg/MNQqqKg&#34;&gt;&lt;b&gt;join us on Discord&lt;/b&gt;&lt;/a&gt; to know more and to read the &lt;a href=&#34;https://blog.getleon.ai/a-much-better-nlp-and-future-1-0-0-beta-7/&#34;&gt;&lt;b&gt;&#34;A Much Better NLP and Future&#34; blog post&lt;/b&gt;&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;br&gt;&#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;👋 Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Leon&lt;/strong&gt; is an &lt;strong&gt;open-source personal assistant&lt;/strong&gt; who can live &lt;strong&gt;on your server&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;He &lt;strong&gt;does stuff&lt;/strong&gt; when you &lt;strong&gt;ask him to&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can &lt;strong&gt;talk to him&lt;/strong&gt; and he can &lt;strong&gt;talk to you&lt;/strong&gt;. You can also &lt;strong&gt;text him&lt;/strong&gt; and he can also &lt;strong&gt;text you&lt;/strong&gt;. If you want to, Leon can communicate with you by being &lt;strong&gt;offline to protect your privacy&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Why?&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;If you are a developer (or not), you may want to build many things that could help in your daily life. Instead of building a dedicated project for each of those ideas, Leon can help you with his Skills structure.&lt;/li&gt; &#xA;  &lt;li&gt;With this generic structure, everyone can create their own skills and share them with others. Therefore there is only one core (to rule them all).&lt;/li&gt; &#xA;  &lt;li&gt;Leon uses AI concepts, which is cool.&lt;/li&gt; &#xA;  &lt;li&gt;Privacy matters, you can configure Leon to talk with him offline. You can already text with him without any third party services.&lt;/li&gt; &#xA;  &lt;li&gt;Open source is great.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;What is this repository for?&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This repository contains the following nodes of Leon:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;The server&lt;/li&gt; &#xA;  &lt;li&gt;Skills&lt;/li&gt; &#xA;  &lt;li&gt;The web app&lt;/li&gt; &#xA;  &lt;li&gt;The hotword node&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;What is Leon able to do?&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Today, the most interesting part is about his core and the way he can scale up. He is pretty young but can easily scale to have new features (skills). You can find what he is able to do by browsing the &lt;a href=&#34;https://github.com/leon-ai/leon/tree/develop/packages&#34;&gt;packages list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Sounds good for you? Then let&#39;s get started!&lt;/p&gt; &#xA;&lt;h2&gt;☁️ Try with a Single-Click&lt;/h2&gt; &#xA;&lt;p&gt;Gitpod will automatically setup an environment and run an instance for you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/leon-ai/leon&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; &amp;gt;= 16&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://npmjs.com/&#34;&gt;npm&lt;/a&gt; &amp;gt;= 8&lt;/li&gt; &#xA; &lt;li&gt;Supported OSes: Linux, macOS and Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To install these prerequisites, you can follow the &lt;a href=&#34;https://docs.getleon.ai/how-to/&#34;&gt;How To section&lt;/a&gt; of the documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Install the Leon CLI&#xA;npm install --global @leon-ai/cli&#xA;&#xA;# Install Leon (stable branch)&#xA;leon create birth&#xA;# OR install from the develop branch: leon create birth --develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Check the setup went well&#xA;leon check&#xA;&#xA;# Run&#xA;leon start&#xA;&#xA;# Go to http://localhost:1337&#xA;# Hooray! Leon is running&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Install Leon&#xA;leon create birth --docker&#xA;&#xA;# Run&#xA;leon start&#xA;&#xA;# Go to http://localhost:1337&#xA;# Hooray! Leon is running&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📚 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For full documentation, visit &lt;a href=&#34;https://docs.getleon.ai&#34;&gt;docs.getleon.ai&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📺 Video&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=p7GRGiicO1c&#34;&gt;Watch a demo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🧭 Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;To know what is going on, follow &lt;a href=&#34;http://roadmap.getleon.ai&#34;&gt;roadmap.getleon.ai&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;❤️ Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you have an idea for improving Leon, do not hesitate.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Leon needs open source to live&lt;/strong&gt;, the more skills he has, the more skillful he becomes.&lt;/p&gt; &#xA;&lt;h2&gt;📖 The Story Behind Leon&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll find a write-up on this &lt;a href=&#34;https://blog.getleon.ai/the-story-behind-leon/&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🔔 Stay Tuned&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/grenlouis&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://newsletter.getleon.ai/subscription/form&#34;&gt;Newsletter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.getleon.ai&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leon-ai/leon/issues&#34;&gt;GitHub issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCW6mk6j6nQUzFYY97r47emQ&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/search?f=live&amp;amp;q=%23LeonAI%20(from%3Agrenlouis%20OR%20from%3Alouistiti_fr)&amp;amp;src=typed_query&#34;&gt;#LeonAI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👨 Author&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Louis Grenard&lt;/strong&gt; (&lt;a href=&#34;https://twitter.com/grenlouis&#34;&gt;@grenlouis&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;👍 Sponsors&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;middle&#34; width=&#34;128&#34;&gt; &lt;a href=&#34;https://github.com/phareal&#34;&gt; &lt;img src=&#34;https://github.com/phareal.png?size=128&#34;&gt; phareal &lt;/a&gt;&lt;br&gt; &lt;sub&gt;&lt;sup&gt;30 USD / month&lt;/sup&gt;&lt;/sub&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;middle&#34; width=&#34;128&#34;&gt; &lt;a href=&#34;https://antmedia.io/?utm_source=github&amp;amp;utm_medium=banner&amp;amp;utm_campaign=opensource&amp;amp;utm_id=1&#34;&gt; &lt;img src=&#34;https://github.com/ant-media.png?size=128&#34;&gt; Ant Media &lt;/a&gt;&lt;br&gt; &lt;sub&gt;&lt;sup&gt;17 USD / month&lt;/sup&gt;&lt;/sub&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;middle&#34; width=&#34;128&#34;&gt; &lt;a href=&#34;https://github.com/KeithIMyers&#34;&gt; &lt;img src=&#34;https://github.com/KeithIMyers.png?size=128&#34;&gt; Keith Myers &lt;/a&gt;&lt;br&gt; &lt;sub&gt;&lt;sup&gt;10 USD / month&lt;/sup&gt;&lt;/sub&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;middle&#34; width=&#34;128&#34;&gt; &lt;a href=&#34;http://sponsor.getleon.ai/&#34;&gt; You? &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can also contribute by &lt;a href=&#34;http://sponsor.getleon.ai&#34;&gt;sponsoring Leon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please note that I dedicate most of my free time to Leon.&lt;/p&gt; &#xA;&lt;p&gt;By sponsoring the project you make the project sustainable and faster to develop features.&lt;/p&gt; &#xA;&lt;p&gt;The focus is not only limited to the activity you see on GitHub but also a lot of thinking about the direction of the project. Which is naturally related to the overall design, architecture, vision, learning process and so on...&lt;/p&gt; &#xA;&lt;h3&gt;Special Thanks&lt;/h3&gt; &#xA;&lt;a href=&#34;https://www.aoz.studio&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1731544/153794939-c42f1b10-a15d-4e82-b448-dc95bfe85b1c.png&#34; alt=&#34;AOZ Studio&#34; width=&#34;64&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://vercel.com/?utm_source=leon-ai&amp;amp;utm_campaign=oss&#34;&gt; &lt;img src=&#34;https://i.imgur.com/S5olXWh.png&#34; alt=&#34;Vercel&#34; width=&#34;128&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;📝 License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/leon-ai/leon/raw/develop/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2019-present, Louis Grenard &lt;a href=&#34;mailto:louis@getleon.ai&#34;&gt;louis@getleon.ai&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cheers!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f379.png&#34; alt=&#34;Cheers!&#34; title=&#34;Cheers!&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>in28minutes/spring-microservices-v2</title>
    <updated>2022-08-26T01:39:13Z</updated>
    <id>tag:github.com,2022-08-26:/in28minutes/spring-microservices-v2</id>
    <link href="https://github.com/in28minutes/spring-microservices-v2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;V2 of our most popular course - Microservices + Spring Boot + Spring Cloud + Docker + Kubernetes - https://www.udemy.com/course/microservices-with-spring-boot-and-spring-cloud/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Spring Microservices - V2 - REST + Microservices + Spring Boot + Spring Cloud + Docker + Kubernetes&lt;/h1&gt; &#xA;&lt;h4&gt;V2 of our most popular course - REST + Microservices + Spring Cloud + Docker + Kubernetes&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/microservices-with-spring-boot-and-spring-cloud/&#34;&gt;&lt;img src=&#34;https://www.springboottutorial.com/images/Course-Master-Microservices-with-Spring-Boot-and-Spring-Cloud.png&#34; alt=&#34;Image&#34; title=&#34;Master Microservices with Spring Boot and Spring Cloud&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Learn how to create awesome Microservices and RESTful web services with Spring and Spring Boot.&lt;/p&gt; &#xA;&lt;p&gt;Updates&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jan 2021: Docker and Kubernetes added to the course!&lt;/li&gt; &#xA; &lt;li&gt;Aug 2022: REST API V2 recorded with Spring Boot 3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Launch MySQL as Docker Container&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --detach --env MYSQL_ROOT_PASSWORD=dummypassword --env MYSQL_USER=social-media-user --env MYSQL_PASSWORD=dummypassword --env MYSQL_DATABASE=social-media-database --name mysql --publish 3306:3306 mysql:8-oracle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installing Tools&lt;/h2&gt; &#xA;&lt;h3&gt;Our Recommendations&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;strong&gt;latest version&lt;/strong&gt; of Java&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;strong&gt;latest version&lt;/strong&gt; of &#34;Eclipse IDE for Enterprise Java Developers&#34;&lt;/li&gt; &#xA; &lt;li&gt;Remember: Spring Boot 3+ works only with Java 17+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing Java&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows - &lt;a href=&#34;https://www.youtube.com/watch?v=I0SBRWVS0ok&#34;&gt;https://www.youtube.com/watch?v=I0SBRWVS0ok&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Linux - &lt;a href=&#34;https://www.youtube.com/watch?v=mHvFpyHK97A&#34;&gt;https://www.youtube.com/watch?v=mHvFpyHK97A&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mac - &lt;a href=&#34;https://www.youtube.com/watch?v=U3kTdMPlgsY&#34;&gt;https://www.youtube.com/watch?v=U3kTdMPlgsY&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Troubleshooting&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Troubleshooting Java Installation - &lt;a href=&#34;https://www.youtube.com/watch?v=UI_PabQ1YB0&#34;&gt;https://www.youtube.com/watch?v=UI_PabQ1YB0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing Eclipse&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows - &lt;a href=&#34;https://www.youtube.com/watch?v=toY06tsME-M&#34;&gt;https://www.youtube.com/watch?v=toY06tsME-M&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Others - &lt;a href=&#34;https://www.youtube.com/watch?v=XveQ9Gq41UM&#34;&gt;https://www.youtube.com/watch?v=XveQ9Gq41UM&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Troubleshooting&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configuring Java in Eclipse - &lt;a href=&#34;https://www.youtube.com/watch?v=8i0r_fcE3L0&#34;&gt;https://www.youtube.com/watch?v=8i0r_fcE3L0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What will you learn?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Spring Boot 2.4.x+ &amp;amp; Spring Cloud 2020.x+ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Service Registry using Eureka Naming Server&lt;/li&gt; &#xA;   &lt;li&gt;Load Balancing with Spring Cloud LoadBalancer (replacing Ribbon)&lt;/li&gt; &#xA;   &lt;li&gt;API Gateway with Spring Cloud Gateway (instead of Zuul)&lt;/li&gt; &#xA;   &lt;li&gt;Circuit Breaker with Resilience4j (instead of Hystrix)&lt;/li&gt; &#xA;   &lt;li&gt;Distributed Tracing with Zipkin&lt;/li&gt; &#xA;   &lt;li&gt;Asynchronous Communication using Rabbit MQ&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Microservices with Spring Cloud - V2&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 01 - Setting up Limits Microservice&lt;/li&gt; &#xA; &lt;li&gt;Step 02 - Creating a hard coded limits service&lt;/li&gt; &#xA; &lt;li&gt;Step 03 - Enhance limits service to pick up configuration from application properties&lt;/li&gt; &#xA; &lt;li&gt;Step 04 - Setting up Spring Cloud Config Server&lt;/li&gt; &#xA; &lt;li&gt;Step 05 - Installing Git and Creating Local Git Repository&lt;/li&gt; &#xA; &lt;li&gt;Step 06 - Connect Spring Cloud Config Server to Local Git Repository&lt;/li&gt; &#xA; &lt;li&gt;Step 07 - Connect Limits Service to Spring Cloud Config Server&lt;/li&gt; &#xA; &lt;li&gt;Step 08 - Configuring Profiles for Limits Service&lt;/li&gt; &#xA; &lt;li&gt;Step 09 - Introduction to Currency Conversion and Currency Exchange Microservices&lt;/li&gt; &#xA; &lt;li&gt;Step 10 - Setting up Currency Exchange Microservice&lt;/li&gt; &#xA; &lt;li&gt;Step 11 - Create a simple hard coded currency exchange service&lt;/li&gt; &#xA; &lt;li&gt;Step 12 - Setting up Dynamic Port in the the Response&lt;/li&gt; &#xA; &lt;li&gt;Step 13 - Configure JPA and Initialized Data&lt;/li&gt; &#xA; &lt;li&gt;Step 14 - Create a JPA Repository&lt;/li&gt; &#xA; &lt;li&gt;Step 15 - Setting up Currency Conversion Microservice&lt;/li&gt; &#xA; &lt;li&gt;Step 16 - Creating a service for currency conversion&lt;/li&gt; &#xA; &lt;li&gt;Step 17 - Invoking Currency Exchange Microservice from Currency Conversion Microservice&lt;/li&gt; &#xA; &lt;li&gt;Step 18 - Using Feign REST Client for Service Invocation&lt;/li&gt; &#xA; &lt;li&gt;Step 19 - Understand Naming Server and Setting up Eureka Naming Server&lt;/li&gt; &#xA; &lt;li&gt;Step 20 - Connect Currency Conversion Microservice &amp;amp; Currency Exchange Microservice to Eureka&lt;/li&gt; &#xA; &lt;li&gt;Step 21 - Load Balancing with Eureka, Feign &amp;amp; Spring Cloud LoadBalancer&lt;/li&gt; &#xA; &lt;li&gt;Step 22 - Setting up Spring Cloud API Gateway&lt;/li&gt; &#xA; &lt;li&gt;Step 23 - Enabling Discovery Locator with Eureka for Spring Cloud Gateway&lt;/li&gt; &#xA; &lt;li&gt;Step 24 - Exploring Routes with Spring Cloud Gateway&lt;/li&gt; &#xA; &lt;li&gt;Step 25 - Implementing Spring Cloud Gateway Logging Filter&lt;/li&gt; &#xA; &lt;li&gt;Step 26 - Getting started with Circuit Breaker - Resilience4j&lt;/li&gt; &#xA; &lt;li&gt;Step 27 - Playing with Resilience4j - Retry and Fallback Methods&lt;/li&gt; &#xA; &lt;li&gt;Step 28 - Playing with Circuit Breaker Features of Resilience4j&lt;/li&gt; &#xA; &lt;li&gt;Step 29 - Exploring Rate Limiting and BulkHead Features of Resilience4j&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Docker with Microservices using Spring Boot and Spring Cloud - V2&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 00 - Match made in Heaven - Docker and Microservices&lt;/li&gt; &#xA; &lt;li&gt;Step 01 - Installing Docker - Docker&lt;/li&gt; &#xA; &lt;li&gt;Step 02 - Your First Docker Usecase - Deploy a Spring Boot Application&lt;/li&gt; &#xA; &lt;li&gt;Step 03 - Important Docker Concepts - Registry, Repository, Tag, Image and Container&lt;/li&gt; &#xA; &lt;li&gt;Step 04 - Playing with Docker Images and Containers&lt;/li&gt; &#xA; &lt;li&gt;Step 05 - Understanding Docker Architecture - Docker Client, Docker Engine&lt;/li&gt; &#xA; &lt;li&gt;Step 06 - Why is Docker Popular&lt;/li&gt; &#xA; &lt;li&gt;Step 07 - Playing with Docker Images&lt;/li&gt; &#xA; &lt;li&gt;Step 08 - Playing with Docker Containers&lt;/li&gt; &#xA; &lt;li&gt;Step 09 - Playing with Docker Commands - stats, system&lt;/li&gt; &#xA; &lt;li&gt;Step 10 - Introduction to Distributed Tracing&lt;/li&gt; &#xA; &lt;li&gt;Step 11 - Launching Zipkin Container using Docker&lt;/li&gt; &#xA; &lt;li&gt;Step 12 - Connecting Currency Exchange Microservice with Zipkin&lt;/li&gt; &#xA; &lt;li&gt;Step 13 - Connecting Currency Conversion Microservice and API Gateway with Zipkin&lt;/li&gt; &#xA; &lt;li&gt;Step 14 - Getting Setup with Microservices for Creating Container Images&lt;/li&gt; &#xA; &lt;li&gt;Step 15 - Creating Container Image for Currency Exchange Microservice&lt;/li&gt; &#xA; &lt;li&gt;Step 16 - Getting Started with Docker Compose - Currency Exchange Microservice&lt;/li&gt; &#xA; &lt;li&gt;Step 17 - Running Eureka Naming Server with Docker Compose&lt;/li&gt; &#xA; &lt;li&gt;Step 18 - Running Currency Conversion Microservice with Docker Compose&lt;/li&gt; &#xA; &lt;li&gt;Step 19 - Running Spring Cloud API Gateway with Docker Compose&lt;/li&gt; &#xA; &lt;li&gt;Step 20 - Running Zipkin with Docker Compose&lt;/li&gt; &#xA; &lt;li&gt;Step 21 - Running Zipkin and RabbitMQ with Docker Compose&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Kubernetes with Microservices using Docker, Spring Boot and Spring Cloud - V2&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 00 - Docker, Kubernetes and Microservices - Made for each other&lt;/li&gt; &#xA; &lt;li&gt;Step 01 - Getting Started with Docker, Kubernetes and Google Kubernetes Engine&lt;/li&gt; &#xA; &lt;li&gt;Step 02 - Creating Google Cloud Account&lt;/li&gt; &#xA; &lt;li&gt;Step 03 - Creating Kubernetes Cluster with Google Kubernete Engine (GKE)&lt;/li&gt; &#xA; &lt;li&gt;Step 04 - Review Kubernetes Cluster and Learn Few Fun Facts about Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Step 05 - Deploy Your First Spring Boot Application to Kubernetes Cluster&lt;/li&gt; &#xA; &lt;li&gt;Step 06 - Quick Look at Kubernetes Concepts - Pods, Replica Sets and Deployment&lt;/li&gt; &#xA; &lt;li&gt;Step 07 - Understanding Pods in Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Step 08 - Understanding ReplicaSets in Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Step 09 - Understanding Deployment in Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Step 10 - Quick Review of Kubernetes Concepts - Pods, Replica Sets and Deployment&lt;/li&gt; &#xA; &lt;li&gt;Step 11 - Understanding Services in Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Step 12 - Quick Review of GKE on Google Cloud Console&lt;/li&gt; &#xA; &lt;li&gt;Step 13 - Understanding Kubernetes Architecture - Master Node and Nodes&lt;/li&gt; &#xA; &lt;li&gt;Step 14 - Setup Currency Exchange &amp;amp; Currency Conversion Microservices - K8S versions&lt;/li&gt; &#xA; &lt;li&gt;Step 15 - Create Container images for Currency Exchange &amp;amp; Currency Conversion Microservices&lt;/li&gt; &#xA; &lt;li&gt;Step 16 - Deploy Microservices to Kubernetes &amp;amp; Understand Service Discovery&lt;/li&gt; &#xA; &lt;li&gt;Step 17 - Creating Declarative Configuration Kubernetes YAML for Microservices&lt;/li&gt; &#xA; &lt;li&gt;Step 18 - Clean up Kubernetes YAML for Microservices&lt;/li&gt; &#xA; &lt;li&gt;Step 19 - Enable Logging and Tracing APIs in Google Cloud Platform&lt;/li&gt; &#xA; &lt;li&gt;Step 20 - Deploying Microservices using Kubernetes YAML Configuration&lt;/li&gt; &#xA; &lt;li&gt;Step 21 - Playing with Kubernetes Declarative YAML Configuration&lt;/li&gt; &#xA; &lt;li&gt;Step 22 - Creating Environment Variables to enable Microservice Communication&lt;/li&gt; &#xA; &lt;li&gt;Step 23 - Understanding Centralized Configuration in Kubernetes - Config Maps&lt;/li&gt; &#xA; &lt;li&gt;Step 24 - Exploring Centralized Logging and Monitoring in GKE&lt;/li&gt; &#xA; &lt;li&gt;Step 25 - Exploring Microservices Deployments with Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Step 26 - Configuring Liveness and Readiness Probes for Microservices with K8S&lt;/li&gt; &#xA; &lt;li&gt;Step 27 - Autoscaling Microservices with Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Step 28 - Delete Kubernetes Cluster and Thank You!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;URLS&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:8080/limits&#34;&gt;http://localhost:8080/limits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:8888/limits-service/default&#34;&gt;http://localhost:8888/limits-service/default&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Diagrams&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;digraph architecture {&#xA;  rankdir=LR;&#xA;node[shape=component]&#xA;node[shape=record]&#xA;node[style=filled,color=&#34;#59C8DE&#34;]&#xA;node[style=filled,color=&#34;#59C8DE&#34;];&#xA;&#xA;Microservice1 -&amp;gt; Microservice2 -&amp;gt; Microservice3 -&amp;gt; Microservice4 -&amp;gt; Microservice5&#xA;&#xA;&#xA;}&#xA;&#xA;digraph architecture {&#xA;  rankdir=TB;&#xA;node[shape=component]&#xA;node[shape=record]&#xA;node[style=filled,color=&#34;#59C8DE&#34;]&#xA;node[style=filled,color=&#34;#59C8DE&#34;];&#xA;&#xA;Microservice1 -&amp;gt; Microservice2 -&amp;gt; Microservice3&#xA;&#xA;{rank=same; Microservice1, A1, A2};&#xA;{rank=same; Microservice2, B1, B2, B3, B4};&#xA;{rank=same; Microservice3, C1};&#xA;&#xA;}&#xA;&#xA;digraph architecture {&#xA;  rankdir=TB;&#xA;node[shape=component]&#xA;node[shape=record]&#xA;node[style=filled,color=&#34;#59C8DE&#34;]&#xA;{rank=same; MovieService, CustomerService, ReviewService, BookingService, FareCalculationService};&#xA;node[style=filled,color=&#34;#59C8DE&#34;];&#xA;DB1,DB2,DB3,DB4,DB5[shape=cylinder]&#xA;&#xA;  MovieService-&amp;gt;DB1;&#xA;  CustomerService-&amp;gt;DB2;&#xA;ReviewService-&amp;gt;DB3;&#xA;BookingService -&amp;gt;DB4;&#xA;FareCalculationService -&amp;gt;DB5;&#xA;&#xA;&#xA;}&#xA;&#xA;digraph architecture {&#xA;  rankdir=TB;&#xA;rankdir=TB;&#xA;node[shape=component]&#xA;node[shape=record]&#xA;node[style=filled,color=&#34;#59C8DE&#34;]&#xA;{rank=same; MovieApplication};&#xA;LARGEDB[shape=cylinder];&#xA;  MovieApplication-&amp;gt;LARGEDB;&#xA;&#xA;}&#xA;&#xA;digraph architecture {&#xA;rankdir = TB;&#xA;node[shape=component]&#xA;node[shape=record]&#xA;node[style=filled,color=&#34;#59C8DE&#34;]&#xA;//node [style=filled,color=&#34;#D14D28&#34;]&#xA;Git[shape=cylinder]&#xA;{rank=same; LimitsService,MicroserviceX,MicroserviceY};&#xA;LimitsService -&amp;gt; SpringCloudConfigServer&#xA;MicroserviceX -&amp;gt; SpringCloudConfigServer&#xA;MicroserviceY -&amp;gt; SpringCloudConfigServer&#xA;SpringCloudConfigServer -&amp;gt; Git&#xA;LimitsService[label=&amp;lt;Limits Microservice&amp;gt;]&#xA;MicroserviceX[label=&amp;lt;Microservice X&amp;gt;]&#xA;MicroserviceY[label=&amp;lt;Microservice Y&amp;gt;]&#xA;SpringCloudConfigServer[label=&amp;lt;Spring Cloud Config Server&amp;gt;]&#xA;Git[label=&amp;lt;Git Repo&amp;gt;]&#xA;&#xA;}&#xA;&#xA;&#xA;digraph architecture {&#xA;rankdir = TB;&#xA;node[shape=component]&#xA;node[shape=record]&#xA;node[style=filled,color=&#34;#59C8DE&#34;];&#xA;//node [style=filled,color=&#34;#D14D28&#34;]&#xA;  CurrencyCalculationService -&amp;gt; CurrencyExchangeService;&#xA;  &#xA;  CurrencyExchangeService-&amp;gt;Database;&#xA;Database[shape=cylinder]&#xA;CurrencyCalculationService[label=&amp;lt;Currency Conversion Microservice&amp;gt;];&#xA;CurrencyExchangeService[label=&amp;lt;Currency Exchange Microservice&amp;gt;];&#xA;CurrencyCalculationService, CurrencyExchangeService[shape=recordfs]&#xA;{rank=same; CurrencyCalculationService, CurrencyExchangeService};&#xA;  CurrencyCalculationService[label=&amp;lt;Currency Conversion Microservice&amp;gt;];&#xA;CurrencyExchangeService[label=&amp;lt;Currency Exchange Microservice&amp;gt;];&#xA;&#xA;}&#xA;&#xA;&#xA;Microservices-Environments&#xA;~~~~~~~~~~~~~~~~~~~~~~~~~~~`&#xA;digraph architecture {&#xA;  rankdir=LR;&#xA;&#xA;node[shape=component]&#xA;node[shape=record]&#xA;node[style=filled,color=&#34;#59C8DE&#34;];&#xA;&#xA;&#xA;  CurrencyCalculationService -&amp;gt; CurrencyExchangeService -&amp;gt; MicroserviceX&#xA;&#xA;  subgraph CurrencyCalculationService {&#xA;      {rank=same; CurrencyCalculationService,CCDEV,CCQA,CCSTAGE, CCPROD};&#xA;  }&#xA; &#xA;  subgraph CurrencyExchangeService {&#xA;      CurrencyExchangeService;&#xA;      {rank=same; CurrencyExchangeService,CEDEV,CEQA, CESTAGE, CEPROD};&#xA;  }&#xA;  &#xA;  subgraph MicroserviceX {&#xA;      CurrencyExchangeService;&#xA;      {rank=same; MicroserviceX,LSDEV,LSQA, LSSTAGE, LSPROD};&#xA;  }&#xA; &#xA;  CCDEV,CEDEV,LSDEV[label=&amp;lt;DEV&amp;gt;,width=1]&#xA;  CCQA,CEQA,LSQA[label=&amp;lt;QA&amp;gt;,width=1]&#xA;  CCSTAGE,CESTAGE,LSSTAGE[label=&amp;lt;STAGE&amp;gt;,width=1]&#xA;  CCPROD,CEPROD,LSPROD[label=&amp;lt;PROD&amp;gt;,width=1]&#xA;  CurrencyCalculationService[label=&amp;lt;Currency Conversion Microservice&amp;gt;];&#xA;CurrencyExchangeService[label=&amp;lt;Currency Exchange Microservice&amp;gt;];&#xA;MicroserviceX[label=&amp;lt;Microservice X&amp;gt;]&#xA;&#xA;}&#xA;&#xA;NAMINGSERVER&#xA;#######################&#xA;digraph architecture {&#xA;rankdir = TB;&#xA;node[shape=component]&#xA;node[shape=record]&#xA;node[style=filled,color=&#34;#59C8DE&#34;];&#xA;&#xA;{rank=same; CurrencyCalculationService, CurrencyExchangeService};&#xA;CurrencyExchangeService -&amp;gt; NamingServer;&#xA;CurrencyCalculationService -&amp;gt; NamingServer;&#xA;MicroserviceX -&amp;gt; NamingServer&#xA;  CurrencyCalculationService[label=&amp;lt;Currency Conversion Microservice&amp;gt;];&#xA;CurrencyExchangeService[label=&amp;lt;Currency Exchange Microservice&amp;gt;];&#xA;MicroserviceX[label=&amp;lt;Microservice X&amp;gt;]&#xA;NamingServer[label=&amp;lt;Naming Server or Service Registry&amp;gt;]&#xA;}&#xA;&#xA;ClientSideLoadBalancing&#xA;#######################&#xA;digraph architecture {&#xA;rankdir = TB;&#xA;node[shape=component]&#xA;node[shape=&#34;rect&#34;]&#xA;node[style=filled,color=&#34;#59C8DE&#34;];&#xA;&#xA;{rank=same; CurrencyExchangeService1, CurrencyExchangeService2, CurrencyExchangeService3};&#xA;{rank=same; LoadBalancer, NamingServer };&#xA;LoadBalancer -&amp;gt; CurrencyExchangeService1&#xA;LoadBalancer -&amp;gt; CurrencyExchangeService2&#xA;LoadBalancer -&amp;gt; CurrencyExchangeService3&#xA;CurrencyCalculationService -&amp;gt; LoadBalancer&#xA;LoadBalancer -&amp;gt; NamingServer&#xA;CurrencyCalculationService[label=&amp;lt;Currency Conversion Microservice&amp;gt;];&#xA;CurrencyExchangeService1[label=&amp;lt;Currency Exchange - Instance 1&amp;gt;];&#xA;CurrencyExchangeService2[label=&amp;lt;Currency Exchange - Instance 2&amp;gt;];&#xA;CurrencyExchangeService3[label=&amp;lt;Currency Exchange - Instance 3&amp;gt;];&#xA;LoadBalancer[label=&amp;lt;Load Balancer&amp;gt;]&#xA;NamingServer[label=&amp;lt;Naming Server&amp;gt;]&#xA;}&#xA;&#xA;ZipkinDistributedTracingServer&#xA;###############################&#xA;digraph architecture {&#xA;rankdir = TB;&#xA;node[shape=component]&#xA;node[shape=&#34;rect&#34;]&#xA;node[style=filled,color=&#34;#59C8DE&#34;];&#xA;&#xA;Database[shape=cylinder]&#xA;{rank=same; APIGateway, CurrencyCalculationService, CurrencyExchangeService};&#xA;APIGateway -&amp;gt; CurrencyCalculationService -&amp;gt; CurrencyExchangeService&#xA;CurrencyExchangeService -&amp;gt; ZipkinDistributedTracingServer&#xA;CurrencyCalculationService -&amp;gt; ZipkinDistributedTracingServer;&#xA;APIGateway -&amp;gt; ZipkinDistributedTracingServer&#xA;ZipkinDistributedTracingServer -&amp;gt; Database&#xA;&#xA;CurrencyCalculationService[label=&amp;lt;Currency Conversion Microservice&amp;gt;];&#xA;CurrencyExchangeService[label=&amp;lt;Currency Exchange Microservice&amp;gt;];&#xA;APIGateway[label=&amp;lt;API Gateway&amp;gt;];&#xA;ZipkinDistributedTracingServer[label=&amp;lt;Distributed Tracing Server&amp;gt;];&#xA;}&#xA;&#xA;&#xA;digraph architecture {&#xA;rankdir = TB;&#xA;node[shape=component]&#xA;node[shape=&#34;rect&#34;]&#xA;node[style=filled,color=&#34;#59C8DE&#34;];&#xA;&#xA;Database[shape=cylinder]&#xA;RabbitMQ[shape=underline,style=unfilled,color=&#34;#000000&#34;]&#xA;{rank=same; APIGateway, CurrencyCalculationService, CurrencyExchangeService};&#xA;APIGateway -&amp;gt; CurrencyCalculationService -&amp;gt; CurrencyExchangeService&#xA;CurrencyExchangeService -&amp;gt; RabbitMQ&#xA;CurrencyCalculationService -&amp;gt; RabbitMQ;&#xA;APIGateway -&amp;gt; RabbitMQ&#xA;RabbitMQ -&amp;gt; ZipkinDistributedTracingServer&#xA;ZipkinDistributedTracingServer -&amp;gt; Database&#xA;&#xA;  CurrencyCalculationService[label=&amp;lt;Currency Conversion Microservice&amp;gt;];&#xA;CurrencyExchangeService[label=&amp;lt;Currency Exchange Microservice&amp;gt;];&#xA;APIGateway[label=&amp;lt;API Gateway&amp;gt;];&#xA;RabbitMQ[label=&amp;lt;Rabbit MQ&amp;gt;];&#xA;ZipkinDistributedTracingServer[label=&amp;lt;Distributed Tracing Server&amp;gt;];&#xA;}&#xA;&#xA;CurrencyExchangeMicroserviceDeployment&#xA;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~``&#xA;digraph architecture {&#xA;rankdir = TB;&#xA;&#xA;node[shape=component]&#xA;node[shape=record]&#xA;node[style=filled,color=&#34;#59C8DE&#34;];&#xA;&#xA;{rank=same; DEV, QA, STAGE, PROD};&#xA;&#xA;DEV -&amp;gt; DEV1&#xA;&#xA;QA -&amp;gt; QA1&#xA;QA -&amp;gt; QA2&#xA;&#xA;STAGE -&amp;gt; STAGE1&#xA;&#xA;PROD -&amp;gt; PROD1&#xA;PROD -&amp;gt; PROD2&#xA;PROD -&amp;gt; PROD3&#xA;PROD -&amp;gt; PROD4&#xA;&#xA;}&#xA;&#xA;CurrencyConversionMicroserviceDeployment&#xA;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~``&#xA;digraph architecture {&#xA;rankdir = TB;&#xA;node[shape=component]&#xA;node[shape=record]&#xA;node[style=filled,color=&#34;#59C8DE&#34;];&#xA;&#xA;{rank=same; DEV, QA, STAGE, PROD};&#xA;&#xA;DEV -&amp;gt; DEV1&#xA;&#xA;QA -&amp;gt; QA1&#xA;QA -&amp;gt; QA2&#xA;&#xA;STAGE -&amp;gt; STAGE1&#xA;&#xA;PROD -&amp;gt; PROD1&#xA;&#xA;}&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Refer our TroubleShooting Guide - &lt;a href=&#34;https://github.com/in28minutes/in28minutes-initiatives/tree/master/The-in28Minutes-TroubleshootingGuide-And-FAQ&#34;&gt;https://github.com/in28minutes/in28minutes-initiatives/tree/master/The-in28Minutes-TroubleshootingGuide-And-FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Youtube Playlists - 500+ Videos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/user/rithustutorials/playlists?view=1&amp;amp;sort=lad&amp;amp;flow=list&#34;&gt;Click here - 30+ Playlists with 500+ Videos on Spring, Spring Boot, REST, Microservices and the Cloud&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Keep Learning in28Minutes&lt;/h2&gt; &#xA;&lt;p&gt;in28Minutes is creating amazing solutions for you to learn Spring Boot, Full Stack and the Cloud - Docker, Kubernetes, AWS, React, Angular etc. - &lt;a href=&#34;https://github.com/in28minutes/learn&#34;&gt;Check out all our courses here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/in28minutes/in28Minutes-Course-Roadmap/raw/master/in28MinutesLearningRoadmap-July2019.png&#34; alt=&#34;in28MinutesLearningRoadmap-July2019.png&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>