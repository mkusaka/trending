<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-07T01:32:57Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lorenSchmidt/fractal_cell_noise</title>
    <updated>2022-12-07T01:32:57Z</updated>
    <id>tag:github.com,2022-12-07:/lorenSchmidt/fractal_cell_noise</id>
    <link href="https://github.com/lorenSchmidt/fractal_cell_noise" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a fractal noise algorithm most closely related to cellular noise algorithms such as worley noise&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;octavia noise&lt;/h1&gt; &#xA;&lt;p&gt;a fractal noise algorithm named after a very nice cat&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lorenSchmidt/fractal_cell_noise/main/twelve_octaves.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;this is functionally similar to well known fractal noise algorithms such as value noise, perlin noise, or simplex noise, but does not exhibit the same grid artifacts. it&#39;s useful for situations which benefit from organic feature placement or very natural slope distribution (when using perlin or value noise in slope-intensive applications, grid artifacts can be a problem).&lt;/p&gt; &#xA;&lt;p&gt;this is most closely related to cellular noise algorithms such as worley noise.&lt;/p&gt; &#xA;&lt;h2&gt;parameters&lt;/h2&gt; &#xA;&lt;p&gt;this has the parameters you&#39;d expect from perlin or value noise: octaves and amplitude ratio (aka roughness or persistence). because the structure of it is so different, it also has several other tuning parameters which can yield interesting textural effects.&lt;/p&gt; &#xA;&lt;h3&gt;octaves&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lorenSchmidt/fractal_cell_noise/main/octaves.png&#34; alt=&#34;Screenshot&#34;&gt; like perlin or value noise, this adds successively finer features via additional layers of noise. this affects speed- it&#39;s linearly slower the more octaves are combined. right to left: one octave, six, twelve.&lt;/p&gt; &#xA;&lt;h3&gt;amplitude ratio&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lorenSchmidt/fractal_cell_noise/main/amplitude_ratio.png&#34; alt=&#34;Screenshot&#34;&gt; this is also known as roughness or persistence. this governs how the octaves are combined. finer octaves have this height relative to the next size up. left to right: 3/8, 1/2, 5/8. lower values will allow the lower frequencies to define the texture, while higher favor the finer details. 1/2 is default, which will yield an amplitude series of 1, 1/2, 1/4, 1/8, 1/16...&lt;/p&gt; &#xA;&lt;h3&gt;softness&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lorenSchmidt/fractal_cell_noise/main/softness.png&#34; alt=&#34;Screenshot&#34;&gt; 0-1. this governs the falloff used for each sample point. the default is 1, which is as continuous as possible. lower softness values can result in steeper, more defined grains, pits, or spires.&lt;/p&gt; &#xA;&lt;h3&gt;samples&lt;/h3&gt; &#xA;&lt;p&gt;space is partitioned into squares. this controls how many samples are placed within each. the radius of each sample is 1, relative to square edge length, so coverage is high, and they overlap significantly with neighboring squares. 2-4 samples will give you decent coverage unless the softness is very low. the algorithm is linearly slower the more samples are placed.&lt;/p&gt; &#xA;&lt;h3&gt;bias, range&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lorenSchmidt/fractal_cell_noise/main/bias_range.png&#34; alt=&#34;Screenshot&#34;&gt; these parameters set the height of each sample. bias is the base value, and range is a random spread above and below it. 0 range will make every sample be exactly the same height. left to right: -1 bias, range 0, 1 bias, range 0, 0 bias, range 1&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wong2/chat-gpt-google-extension</title>
    <updated>2022-12-07T01:32:57Z</updated>
    <id>tag:github.com,2022-12-07:/wong2/chat-gpt-google-extension</id>
    <link href="https://github.com/wong2/chat-gpt-google-extension" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A browser extension to display ChatGPT response alongside Google Search results&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT for Google&lt;/h1&gt; &#xA;&lt;p&gt;A browser extension to display ChatGPT response alongside Google Search results, supports Chrome/Edge/Firefox&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/chatgpt-for-google?utm_source=badge-featured&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=369975&amp;amp;theme=light&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wong2/chat-gpt-google-extension/main/screenshot.jpg?raw=true&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Install to Chrome/Edge&lt;/h3&gt; &#xA;&lt;h4&gt;Install from Chrome Web Store (Preferred)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/chatgpt-for-google/jgjaeacdkonaoafenlfkkkmbaopkbilf&#34;&gt;https://chrome.google.com/webstore/detail/chatgpt-for-google/jgjaeacdkonaoafenlfkkkmbaopkbilf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Local Install&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download &lt;code&gt;chrome.zip&lt;/code&gt; from &lt;a href=&#34;https://github.com/wong2/chat-gpt-google-extension/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unzip the file&lt;/li&gt; &#xA; &lt;li&gt;In Chrome/Edge go to the extensions page (&lt;code&gt;chrome://extensions&lt;/code&gt; or &lt;code&gt;edge://extensions&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Enable Developer Mode.&lt;/li&gt; &#xA; &lt;li&gt;Drag the unzipped folder anywhere on the page to import it (do not delete the folder afterwards).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Install to Firefox&lt;/h3&gt; &#xA;&lt;h4&gt;Install from Mozilla Add-on Store (Preferred)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/addon/chatgpt-for-google/&#34;&gt;https://addons.mozilla.org/addon/chatgpt-for-google/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Local Install&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download &lt;code&gt;firefox.zip&lt;/code&gt; from &lt;a href=&#34;https://github.com/wong2/chat-gpt-google-extension/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unzip the file&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;about:debugging&lt;/code&gt;, click &#34;This Firefox&#34; on the sidebar&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Load Temporary Add-on&#34; button, then select any file in the unzipped folder&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Build from source&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA; &lt;li&gt;Install dependencies with &lt;code&gt;npm&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./build.sh&lt;/code&gt; for Chrome, &lt;code&gt;./build.sh firefox&lt;/code&gt; for Firefox&lt;/li&gt; &#xA; &lt;li&gt;Load the &lt;code&gt;build&lt;/code&gt; directory to your browser&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;This project is inspired by &lt;a href=&#34;https://github.com/ZohaibAhmed/ChatGPT-Google&#34;&gt;ZohaibAhmed/ChatGPT-Google&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ZohaibAhmed/ChatGPT-Google</title>
    <updated>2022-12-07T01:32:57Z</updated>
    <id>tag:github.com,2022-12-07:/ZohaibAhmed/ChatGPT-Google</id>
    <link href="https://github.com/ZohaibAhmed/ChatGPT-Google" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chrome Extension that Integrates ChatGPT (Unofficial) into Google Search&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZohaibAhmed/ChatGPT-Google/main/images/gptvsgoogle.png&#34; alt=&#34;GPT vs Google&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ChatGPT-Google&lt;/h1&gt; &#xA;&lt;p&gt;Chrome Extension that Integrates ChatGPT (Unofficial) into Google Search&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unofficial ChatGPT API (&lt;a href=&#34;https://github.com/ZohaibAhmed/chatgpt-api&#34;&gt;https://github.com/ZohaibAhmed/chatgpt-api&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Chrome Extension Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA; &lt;li&gt;Go to chrome://extensions/&lt;/li&gt; &#xA; &lt;li&gt;Enable Developer Mode&lt;/li&gt; &#xA; &lt;li&gt;Click on Load Unpacked&lt;/li&gt; &#xA; &lt;li&gt;Select the folder where you cloned this repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you have the ChatGPT API running (follow instructions here: &lt;a href=&#34;https://github.com/ZohaibAhmed/chatgpt-api&#34;&gt;https://github.com/ZohaibAhmed/chatgpt-api&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Go to Google Search and type in your query&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>