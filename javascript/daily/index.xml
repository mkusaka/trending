<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-29T01:31:05Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>txstc55/ugly-avatar</title>
    <updated>2024-03-29T01:31:05Z</updated>
    <id>tag:github.com,2024-03-29:/txstc55/ugly-avatar</id>
    <link href="https://github.com/txstc55/ugly-avatar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ugly-face&lt;/h1&gt; &#xA;&lt;p&gt;This project is under Attribution-NonCommercial 4.0 International License. This means no commercial use for the project. I thought about this for a time. If you want to use this as part of your website that needs an avatar generator, you are free to use it. If you however, buid an app solely on this code as your main project, I am highly against that practice. I don&#39;t want to have the frustration of &#34;oh someone copied my code and made money with it&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Project setup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compiles and hot-reloads for development&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compiles and minifies for production&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customize configuration&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://cli.vuejs.org/config/&#34;&gt;Configuration Reference&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>danni-cool/wechatbot-webhook</title>
    <updated>2024-03-29T01:31:05Z</updated>
    <id>tag:github.com,2024-03-29:/danni-cool/wechatbot-webhook</id>
    <link href="https://github.com/danni-cool/wechatbot-webhook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;http 请求驱动的微信机器人&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/danni-cool/danni-cool@cdn/image/wechatbot-webhook.png&#34; width=&#34;500&#34; height=&#34;251&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/danni-cool/wechatbot-webhook/release.yml&#34; alt=&#34;GitHub Workflow Status (with event)&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/wechatbot-webhook?label=npm/downloads&#34; alt=&#34;npm dowloads&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/dannicool/docker-wechatbot-webhook&#34; alt=&#34;Docker Pulls&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/danni-cool/wechatbot-webhook&#34; alt=&#34;GitHub release (with filter)&#34;&gt; &lt;a href=&#34;https://discord.gg/qBF9VsBdc8&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1165844612473172088?logo=Discord&amp;amp;link=https%3A%2F%2Fdiscord.gg%qBF9VsBdc8&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/repository/docker/dannicool/docker-wechatbot-webhook/general&#34;&gt;🚢 Docker 镜像&lt;/a&gt; | &lt;a href=&#34;https://www.npmjs.com/package/wechatbot-webhook&#34;&gt;📦 NPM包&lt;/a&gt;｜&lt;a href=&#34;https://github.com/danni-cool/wechatbot-webhook/issues/72&#34;&gt;🔍 FAQ&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;一个小小的微信机器人webhook，帮你抹平了很多自己开发的障碍，基于 http 请求&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Caution] 当前版本基于web协议，其支持的功能有限，也不完美，除了bug修补和稳定性功能外，不再接收新的 feature request，后续精力会放到 windows 分支上，感兴趣的可以点个 watch 👀&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;web协议&lt;/th&gt; &#xA;   &lt;th&gt;windows协议&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;目前可用性&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;代码分支&lt;/td&gt; &#xA;   &lt;td&gt;main&lt;/td&gt; &#xA;   &lt;td&gt;windows&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Docker Tag&lt;/td&gt; &#xA;   &lt;td&gt;latest&lt;/td&gt; &#xA;   &lt;td&gt;windows&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&amp;lt;发送消息&amp;gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ 单条 / 多条 / 群发&lt;/td&gt; &#xA;   &lt;td&gt;✅ 单条 / 多条 / 群发&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;发文字&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;发图片&lt;/td&gt; &#xA;   &lt;td&gt;✅ 本地图片 / url图片解析&lt;/td&gt; &#xA;   &lt;td&gt;✅ 本地图片 / url图片解析&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;发视频（mp4)&lt;/td&gt; &#xA;   &lt;td&gt;✅ 本地视频 / url视频解析&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;发文件&lt;/td&gt; &#xA;   &lt;td&gt;✅ 本地文件 / url文件解析&lt;/td&gt; &#xA;   &lt;td&gt;✅ 本地文件 / url文件解析&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&amp;lt;接收消息&amp;gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;接收文字&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;接收语音&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;接收图片&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;接收视频&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;接收文件&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;接收公众号推文链接&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;接收系统通知&lt;/td&gt; &#xA;   &lt;td&gt;✅ 上线通知 / 掉线通知 / 异常通知&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danni-cool/wechatbot-webhook/main/#33-%E8%8E%B7%E5%8F%96%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%8E%A5%E5%8F%A3&#34;&gt;头像获取&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danni-cool/wechatbot-webhook/main/#%E8%BF%94%E5%9B%9E%E5%80%BC-response-%E7%BB%93%E6%9E%84%E5%8F%AF%E9%80%89&#34;&gt;快捷回复&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&amp;lt;群管理&amp;gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&amp;lt;好友管理&amp;gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;接收好友申请&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;通过好友申请&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;获取联系人列表&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&amp;lt;其他功能&amp;gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;非掉线自动登录&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;API 鉴权&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://n8n.io/&#34;&gt;n8n&lt;/a&gt; 无缝接入&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;支持docker部署&lt;/td&gt; &#xA;   &lt;td&gt;✅ arm64 / amd64&lt;/td&gt; &#xA;   &lt;td&gt;✅ amd64&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;日志文件导出&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;⚠️ 特别说明：&lt;/h3&gt; &#xA;&lt;p&gt;以上提到的功能 ✅ 为已实现，受限于微信协议限制，不同协议支持功能也是不同的，并不是所有功能都可以对接，例如：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;企业微信消息的收发 &lt;a href=&#34;https://github.com/danni-cool/wechatbot-webhook/issues/142&#34;&gt;#142&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;发送语音消息 / 分享音乐 / 公众号等在 features 中未提到的功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 一分钟 Demo&lt;/h2&gt; &#xA;&lt;h3&gt;1. 运行 &amp;amp; 扫码&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx wechatbot-webhook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;除非掉线，默认记住上次登录，换帐号请运行以下命令 &lt;code&gt;npx wechatbot-webhook -r&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;2. 复制推消息 api&lt;/h3&gt; &#xA;&lt;p&gt;从命令行中复制推消息api，例如 &lt;a href=&#34;http://localhost:3001/webhook/msg/v2?token=%5BYOUR_PERSONAL_TOKEN%5D&#34;&gt;http://localhost:3001/webhook/msg/v2?token=[YOUR_PERSONAL_TOKEN]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/danni-cool/danni-cool@cdn/image/wechatbot-demo.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. 使用以下结构发消息&lt;/h3&gt; &#xA;&lt;p&gt;新开个终端试试以下 curl，to、token 字段值换成你要值&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location &#39;http://localhost:3001/webhook/msg/v2?token=[YOUR_PERSONAL_TOKEN]&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data &#39;{ &#34;to&#34;: &#34;测试昵称&#34;, data: { &#34;content&#34;: &#34;Hello World!&#34; }}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔧 开发&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] 包管理器迁移已至 pnpm，安装依赖请使用它，以支持一些不定时的临时包修补（patches）和加速依赖安装&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;⛰️ 部署 Deploy（推荐）&lt;/h2&gt; &#xA;&lt;h4&gt;1.使用 docker 部署&lt;/h4&gt; &#xA;&lt;h5&gt;拉取最新镜像&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull dannicool/docker-wechatbot-webhook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;docker 部署&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 启动容器并映射日志目录，日志按天维度生成，e.g: app.2024-01-01.log&#xA;docker run -d --name wxBotWebhook -p 3001:3001 \&#xA;-v ~/wxBot_logs:/app/log \&#xA;dannicool/docker-wechatbot-webhook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;使用 compose 部署 (可选)&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -O docker-compose.yml https://cdn.jsdelivr.net/gh/danni-cool/wechatbot-webhook@main/docker-compose.yml &amp;amp;&amp;amp; docker-compose down &amp;amp;&amp;amp; docker-compose -p wx_bot_webhook up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2.登录&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker logs -f wxBotWebhook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;找到二维码登录地址，图下 url 部分，浏览器访问，扫码登录wx&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://localhost:3001/login?token=%5BYOUR_PERSONAL_TOKEN%5D&#34;&gt;https://localhost:3001/login?token=[YOUR_PERSONAL_TOKEN]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;可选 env 参数&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Tips：需要增加参数使用 -e，多行用 \ 隔开，例如 -e RECVD_MSG_API=&#34;&lt;a href=&#34;https://example.com/your/url&#34;&gt;https://example.com/your/url&lt;/a&gt;&#34; \&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;功能&lt;/th&gt; &#xA;   &lt;th&gt;变量&lt;/th&gt; &#xA;   &lt;th&gt;备注&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;日志级别&lt;/td&gt; &#xA;   &lt;td&gt;LOG_LEVEL=info&lt;/td&gt; &#xA;   &lt;td&gt;日志级别，默认 info，只影响当前日志输出，详细输出考虑使用 debug。无论该值如何变化，日志文件总是记录debug级别的日志&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;收消息 API&lt;/td&gt; &#xA;   &lt;td&gt;RECVD_MSG_API=&lt;a href=&#34;https://example.com/your/url&#34;&gt;https://example.com/your/url&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;如果想自己处理收到消息的逻辑，比如根据消息联动，填上你的处理逻辑 url&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;收消息 API 接受自己发的消息&lt;/td&gt; &#xA;   &lt;td&gt;ACCEPT_RECVD_MSG_MYSELF=false&lt;/td&gt; &#xA;   &lt;td&gt;RECVD_MSG_API 是否接收来自自己发的消息（设置为true，即接收, 默认false）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;自定义登录 API token&lt;/td&gt; &#xA;   &lt;td&gt;LOGIN_API_TOKEN=abcdefg123&lt;/td&gt; &#xA;   &lt;td&gt;你也可以自定义一个自己的登录令牌，不配置的话，默认会生成一个&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;禁用自动登录&lt;/td&gt; &#xA;   &lt;td&gt;DISABLE_AUTO_LOGIN=true&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;非微信踢下线账号，可以依靠当前登录的session免登&lt;/strong&gt;, 如果想每次都扫码登陆，则增加该条配置&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🛠️ API&lt;/h2&gt; &#xA;&lt;h3&gt;1. 推消息 API&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;v2版本接口增加了群发功能，v1 版本接口请移步 &lt;a href=&#34;https://raw.githubusercontent.com/danni-cool/wechatbot-webhook/main/docs/legacy-api.md&#34;&gt;legacy-api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Url：&lt;a href=&#34;http://localhost:3001/webhook/msg/v2?token=%5BYOUR_PERSONAL_TOKEN%5D&#34;&gt;http://localhost:3001/webhook/msg/v2?token=[YOUR_PERSONAL_TOKEN]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Methods: &lt;code&gt;POST&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;ContentType: &lt;code&gt;application/json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Body: 格式见下面表格&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;payload&lt;/code&gt; 结构&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;发文字或文件外链, 外链会解析成图片或者文件&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;参数&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;数据类型&lt;/th&gt; &#xA;   &lt;th&gt;默认值&lt;/th&gt; &#xA;   &lt;th&gt;可否为空&lt;/th&gt; &#xA;   &lt;th&gt;可选参数&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;to&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;消息接收方&lt;/strong&gt;，传入&lt;code&gt;String&lt;/code&gt; 默认是发给昵称（群名同理）, 传入&lt;code&gt;Object&lt;/code&gt; 结构支持发给备注过的人，比如：&lt;code&gt;{alias: &#39;备注名&#39;}&lt;/code&gt;，群名不支持备注名&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt; &lt;code&gt;Object&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isRoom&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;是否发给群消息&lt;/strong&gt;，这个参数决定了找人的时候找的是群还是人，因为昵称其实和群名相同在技术处理上&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt; &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;data&lt;/td&gt; &#xA;   &lt;td&gt;消息体结构,见下方 &lt;code&gt;payload.data&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Object&lt;/code&gt; &lt;code&gt;Array&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt; &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;&lt;code&gt;payload.data&lt;/code&gt; 结构&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;参数&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;数据类型&lt;/th&gt; &#xA;   &lt;th&gt;默认值&lt;/th&gt; &#xA;   &lt;th&gt;可否为空&lt;/th&gt; &#xA;   &lt;th&gt;可选参数&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;type&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;消息类型&lt;/strong&gt;, 字段留空解析为纯文本&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt; &lt;code&gt;text&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text&lt;/code&gt; &lt;code&gt;fileUrl&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;content&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;消息内容&lt;/strong&gt;，如果希望发多个Url并解析，type 指定为 fileUrl 同时，content 里填 url 以英文逗号分隔&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Example（curl）&lt;/h4&gt; &#xA;&lt;h5&gt;发单条消息&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location &#39;http://localhost:3001/webhook/msg/v2?token=[YOUR_PERSONAL_TOKEN]&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data &#39;{&#xA;    &#34;to&#34;: &#34;testUser&#34;,&#xA;    &#34;data&#34;: { &#34;content&#34;: &#34;你好👋&#34; }&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;发文件 url 同时支持修改成目标文件名&lt;/h5&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;有些情况下，直接发送 url 文件名可能不是我们想要的，给 url 拼接 query 参数 &lt;code&gt;$alias&lt;/code&gt; 可用于指定发送给目标的文件名（注意：别名不做文件转换）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location &#39;http://localhost:3001/webhook/msg/v2?token=[YOUR_PERSONAL_TOKEN]&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data &#39;{&#xA;    &#34;to&#34;: &#34;testUser&#34;,&#xA;    &#34;data&#34;: { &#xA;      &#34;type&#34;: &#34;fileUrl&#34; , &#xA;      &#34;content&#34;: &#34;https://download.samplelib.com/jpeg/sample-clouds-400x300.jpg?$alias=cloud.jpg&#34; &#xA;    }&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;发给群消息&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location &#39;http://localhost:3001/webhook/msg/v2?token=[YOUR_PERSONAL_TOKEN]&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data &#39;{&#xA;    &#34;to&#34;: &#34;testGroup&#34;,&#xA;    &#34;isRoom&#34;: true,&#xA;    &#34;data&#34;: { &#34;type&#34;: &#34;fileUrl&#34; , &#34;content&#34;: &#34;https://download.samplelib.com/jpeg/sample-clouds-400x300.jpg&#34; },&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;同一对象多条消息(群消息同理)&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location &#39;http://localhost:3001/webhook/msg/v2?token=[YOUR_PERSONAL_TOKEN]&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data &#39;{&#xA;    &#34;to&#34;: &#34;testUser&#34;,&#xA;    &#34;data&#34;: [&#xA;        {&#xA;            &#34;type&#34;: &#34;text&#34;,&#xA;            &#34;content&#34;: &#34;你好👋&#34;&#xA;        },&#xA;        {&#xA;            &#34;type&#34;: &#34;fileUrl&#34;,&#xA;            &#34;content&#34;: &#34;https://samplelib.com/lib/preview/mp3/sample-3s.mp3&#34;&#xA;        }&#xA;    ]&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;群发消息&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location &#39;http://localhost:3001/webhook/msg/v2?token=[YOUR_PERSONAL_TOKEN]&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data &#39;[&#xA;    {&#xA;        &#34;to&#34;: &#34;testUser1&#34;,&#xA;        &#34;data&#34;: {&#xA;            &#34;content&#34;: &#34;你好👋&#34;&#xA;        }&#xA;    },&#xA;    {&#xA;        &#34;to&#34;: &#34;testUser2&#34;,&#xA;        &#34;data&#34;: [&#xA;          {&#xA;            &#34;content&#34;: &#34;你好👋&#34;&#xA;          },&#xA;          {&#xA;            &#34;content&#34;: &#34;近况如何？&#34;&#xA;          }&#xA;        ]&#xA;    }&#xA;]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;返回值 &lt;code&gt;response&lt;/code&gt; 结构&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;success&lt;/code&gt;&lt;/strong&gt;: 消息发送成功与否，群发消息即使部份发送成功也会返回 &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;message&lt;/code&gt;&lt;/strong&gt;: 出错时提示的消息 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;消息发送成功: Message sent successfully&lt;/li&gt; &#xA;   &lt;li&gt;参数校验不通过: Some params is not valid, sending task is suspend...&lt;/li&gt; &#xA;   &lt;li&gt;消息都发送失败: All Messages [number] sent failed...&lt;/li&gt; &#xA;   &lt;li&gt;部份发送成功: Part of the message sent successfully...&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;task&lt;/code&gt;&lt;/strong&gt;: 发送任务详细信息 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;task.successCount&lt;/code&gt;: 发送成功条数&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;task.totalCount&lt;/code&gt;: 总消息条数&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;task.failedCount&lt;/code&gt;: 发送失败条数&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;task.reject&lt;/code&gt;: 因为参数校验不通过的参数和 error 提示&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;task.sentFailed&lt;/code&gt;: 因为发送失败和 error 提示&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;task.notFound&lt;/code&gt;: 因为未找到用户或者群和 error 提示&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;确保消息单次发送一致性，某一条参数校验失败会终止所有消息发送任务&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;success&#34;: true,&#xA;    &#34;message&#34;: &#34;&#34;,&#xA;    &#34;task&#34;: {&#xA;        &#34;successCount&#34;: 0,&#xA;        &#34;totalCount&#34;: 0,&#xA;        &#34;failedCount&#34;: 0,&#xA;        &#34;reject&#34;: [],&#xA;        &#34;sentFailed&#34;: [],&#xA;        &#34;notFound&#34;: []&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;读文件发送&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;读文件暂时只支持单条发送&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Url：&lt;a href=&#34;http://localhost:3001/webhook/msg?token=%5BYOUR_PERSONAL_TOKEN%5D&#34;&gt;http://localhost:3001/webhook/msg?token=[YOUR_PERSONAL_TOKEN]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Methods: &lt;code&gt;POST&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;ContentType: &lt;code&gt;multipart/form-data&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;FormData: 格式见下面表格&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;code&gt;payload&lt;/code&gt; 结构&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;参数&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;数据类型&lt;/th&gt; &#xA;   &lt;th&gt;默认值&lt;/th&gt; &#xA;   &lt;th&gt;可否为空&lt;/th&gt; &#xA;   &lt;th&gt;可选值&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;to&lt;/td&gt; &#xA;   &lt;td&gt;消息接收方，传入&lt;code&gt;String&lt;/code&gt; 默认是发给昵称（群名同理）, 传入 Json String 结构支持发给备注过的人，比如：&#34;{alias: &#39;备注名&#39;}&#34;，群名不支持备注名称&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isRoom&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;是否发的群消息&lt;/strong&gt;，formData纯文本只能使用 &lt;code&gt;String&lt;/code&gt; 类型，&lt;code&gt;1&lt;/code&gt;代表是，&lt;code&gt;0&lt;/code&gt;代表否，&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt; &lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;content&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;文件&lt;/strong&gt;，本地文件一次只能发一个，多个文件手动调用多次&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h5&gt;Curl&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location --request POST &#39;http://localhost:3001/webhook/msg?token=[YOUR_PERSONAL_TOKEN]&#39; \&#xA;--form &#39;to=testGroup&#39; \&#xA;--form content=@&#34;$HOME/demo.jpg&#34; \&#xA;--form &#39;isRoom=1&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;返回值 &lt;code&gt;response&lt;/code&gt; 结构&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;success&#34;: true,&#xA;  &#34;message&#34;: &#34;Message sent successfully&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. 收消息 API&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;payload&lt;/code&gt; 结构&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Methods: &lt;code&gt;POST&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;ContentType: &lt;code&gt;multipart/form-data&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Form格式如下&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;formData&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;数据类型&lt;/th&gt; &#xA;   &lt;th&gt;可选值&lt;/th&gt; &#xA;   &lt;th&gt;示例&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;type&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;div&gt;&#xA;     功能类型&#xA;    &lt;/div&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;✅ 文字(text)&lt;/li&gt;&#xA;     &lt;li&gt;✅ 链接卡片(urlLink)&lt;/li&gt;&#xA;     &lt;li&gt;✅ 图片(file)&lt;/li&gt;&#xA;     &lt;li&gt;✅ 视频(file)&lt;/li&gt;&#xA;     &lt;li&gt;✅ 附件(file)&lt;/li&gt; &#xA;     &lt;li&gt;✅ 语音(file)&lt;/li&gt;&#xA;     &lt;li&gt;✅ 添加好友邀请(friendship)&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &lt;div&gt;&#xA;     其他类型&#xA;    &lt;/div&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;未实现的消息类型(unknown)&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &lt;div&gt;&#xA;     系统类型&#xA;    &lt;/div&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;✅ 登录(system_event_login)&lt;/li&gt;&#xA;     &lt;li&gt;✅ 登出(system_event_logout)&lt;/li&gt;&#xA;     &lt;li&gt;✅ 异常报错(system_event_error)&lt;/li&gt;&#xA;     &lt;li&gt;✅ 快捷回复后消息推送状态通知(system_event_push_notify)&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text&lt;/code&gt; &lt;code&gt;file&lt;/code&gt; &lt;code&gt;urlLink&lt;/code&gt; &lt;code&gt;friendship&lt;/code&gt; &lt;code&gt;unknown&lt;/code&gt; &lt;code&gt;system_event_login&lt;/code&gt; &lt;code&gt;system_event_logout&lt;/code&gt; &lt;code&gt;system_event_error&lt;/code&gt; &lt;code&gt;system_event_push_notify&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;content&lt;/td&gt; &#xA;   &lt;td&gt;传输的内容, 文本或传输的文件共用这个字段，结构映射请看示例&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt; &lt;code&gt;Binary&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danni-cool/wechatbot-webhook/main/docs/recvdApi.example.md#formdatacontent&#34;&gt;示例&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;source&lt;/td&gt; &#xA;   &lt;td&gt;消息的相关发送方数据, JSON String&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/danni-cool/wechatbot-webhook/main/docs/recvdApi.example.md#formdatasource&#34;&gt;示例&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isMentioned&lt;/td&gt; &#xA;   &lt;td&gt;该消息是@我的消息 &lt;a href=&#34;https://github.com/danni-cool/wechatbot-webhook/issues/38&#34;&gt;#38&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt; &lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isMsgFromSelf&lt;/td&gt; &#xA;   &lt;td&gt;是否是来自自己的消息 &lt;a href=&#34;https://github.com/danni-cool/wechatbot-webhook/issues/159&#34;&gt;#159&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt; &lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;服务端处理 formData 一般需要对应的处理程序，假设你已经完成这一步，你将得到以下 request&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  {&#xA;    &#34;type&#34;: &#34;text&#34;,&#xA;    &#34;content&#34;: &#34;你好&#34;,&#xA;    &#34;source&#34;: &#34;{\&#34;room\&#34;:\&#34;\&#34;,\&#34;to\&#34;:{\&#34;_events\&#34;:{},\&#34;_eventsCount\&#34;:0,\&#34;id\&#34;:\&#34;@f387910fa45\&#34;,\&#34;payload\&#34;:{\&#34;alias\&#34;:\&#34;\&#34;,\&#34;avatar\&#34;:\&#34;/cgi-bin/mmwebwx-bin/webwxgeticon?seq=1302335654&amp;amp;username=@f38bfd1e0567910fa45&amp;amp;skey=@crypaafc30\&#34;,\&#34;friend\&#34;:false,\&#34;gender\&#34;:1,\&#34;id\&#34;:\&#34;@f38bfd1e10fa45\&#34;,\&#34;name\&#34;:\&#34;ch.\&#34;,\&#34;phone\&#34;:[],\&#34;star\&#34;:false,\&#34;type\&#34;:1}},\&#34;from\&#34;:{\&#34;_events\&#34;:{},\&#34;_eventsCount\&#34;:0,\&#34;id\&#34;:\&#34;@6b5111dcc269b6901fbb58\&#34;,\&#34;payload\&#34;:{\&#34;address\&#34;:\&#34;\&#34;,\&#34;alias\&#34;:\&#34;\&#34;,\&#34;avatar\&#34;:\&#34;/cgi-bin/mmwebwx-bin/webwxgeticon?seq=123234564&amp;amp;username=@6b5dbb58&amp;amp;skey=@crypt_ec356afc30\&#34;,\&#34;city\&#34;:\&#34;Mars\&#34;,\&#34;friend\&#34;:false,\&#34;gender\&#34;:1,\&#34;id\&#34;:\&#34;@6b5dbd3facb58\&#34;,\&#34;name\&#34;:\&#34;Daniel\&#34;,\&#34;phone\&#34;:[],\&#34;province\&#34;:\&#34;Earth\&#34;,\&#34;signature\&#34;:\&#34;\&#34;,\&#34;star\&#34;:false,\&#34;weixin\&#34;:\&#34;\&#34;,\&#34;type\&#34;:1}}}&#34;,&#xA;    &#34;isMentioned&#34;: &#34;0&#34;,&#xA;    &#34;isMsgFromSelf&#34;: &#34;0&#34;,&#xA;    &#34;isSystemEvent&#34;: &#34;0&#34; // 考虑废弃，请使用type类型判断系统消息&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;收消息 api curl示例(直接导入postman调试）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-curl&#34;&gt;curl --location &#39;https://your.recvdapi.com&#39; \&#xA;--form &#39;type=&#34;file&#34;&#39; \&#xA;--form &#39;content=@&#34;/Users/Downloads/13482835.jpeg&#34;&#39; \&#xA;--form &#39;source=&#34;{\\\&#34;room\\\&#34;:\\\&#34;\\\&#34;,\\\&#34;to\\\&#34;:{\\\&#34;_events\\\&#34;:{},\\\&#34;_eventsCount\\\&#34;:0,\\\&#34;id\\\&#34;:\\\&#34;@f387910fa45\\\&#34;,\\\&#34;payload\\\&#34;:{\\\&#34;alias\\\&#34;:\\\&#34;\\\&#34;,\\\&#34;avatar\\\&#34;:\\\&#34;/cgi-bin/mmwebwx-bin/webwxgeticon?seq=1302335654&amp;amp;username=@f38bfd1e0567910fa45&amp;amp;skey=@crypaafc30\\\&#34;,\\\&#34;friend\\\&#34;:false,\\\&#34;gender\\\&#34;:1,\\\&#34;id\\\&#34;:\\\&#34;@f38bfd1e10fa45\\\&#34;,\\\&#34;name\\\&#34;:\\\&#34;ch.\\\&#34;,\\\&#34;phone\\\&#34;:[],\\\&#34;star\\\&#34;:false,\\\&#34;type\\\&#34;:1}},\\\&#34;from\\\&#34;:{\\\&#34;_events\\\&#34;:{},\\\&#34;_eventsCount\\\&#34;:0,\\\&#34;id\\\&#34;:\\\&#34;@6b5111dcc269b6901fbb58\\\&#34;,\\\&#34;payload\\\&#34;:{\\\&#34;address\\\&#34;:\\\&#34;\\\&#34;,\\\&#34;alias\\\&#34;:\\\&#34;\\\&#34;,\\\&#34;avatar\\\&#34;:\\\&#34;/cgi-bin/mmwebwx-bin/webwxgeticon?seq=123234564&amp;amp;username=@6b5dbb58&amp;amp;skey=@crypt_ec356afc30\\\&#34;,\\\&#34;city\\\&#34;:\\\&#34;Mars\\\&#34;,\\\&#34;friend\\\&#34;:false,\\\&#34;gender\\\&#34;:1,\\\&#34;id\\\&#34;:\\\&#34;@6b5dbd3facb58\\\&#34;,\\\&#34;name\\\&#34;:\\\&#34;Daniel\\\&#34;,\\\&#34;phone\\\&#34;:[],\\\&#34;province\\\&#34;:\\\&#34;Earth\\\&#34;,\\\&#34;signature\\\&#34;:\\\&#34;\\\&#34;,\\\&#34;star\\\&#34;:false,\\\&#34;weixin\\\&#34;:\\\&#34;\\\&#34;,\\\&#34;type\\\&#34;:1}}}&#34;&#39; \&#xA;--form &#39;isMentioned=&#34;0&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;返回值 &lt;code&gt;response&lt;/code&gt; 结构（可选）&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果期望用 &lt;code&gt;RECVD_MSG_API&lt;/code&gt; 收消息后立即回复(&lt;strong&gt;快捷回复&lt;/strong&gt;)，请按以下结构返回返回值，无返回值则不会回复消息&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ContentType: &lt;code&gt;json&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;参数&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;数据类型&lt;/th&gt; &#xA;   &lt;th&gt;默认值&lt;/th&gt; &#xA;   &lt;th&gt;可否为空&lt;/th&gt; &#xA;   &lt;th&gt;可选参数&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;success&lt;/td&gt; &#xA;   &lt;td&gt;该条请求成功与否，返回 false 或者无该字段，不会处理回复，&lt;strong&gt;有一些特殊消息也通过这个字段控制，比如加好友邀请，返回 &lt;code&gt;true&lt;/code&gt; 则会通过好友请求&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt; &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;data&lt;/td&gt; &#xA;   &lt;td&gt;如果需要回复消息的话，需要定义data字段&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Object&lt;/code&gt; &lt;code&gt;Object Array&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;&lt;code&gt;response.data&lt;/code&gt; 结构&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;参数&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;数据类型&lt;/th&gt; &#xA;   &lt;th&gt;默认值&lt;/th&gt; &#xA;   &lt;th&gt;可否为空&lt;/th&gt; &#xA;   &lt;th&gt;可选参数&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;type&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;消息类型&lt;/strong&gt;，该字段不填默认当文本类型传输&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text&lt;/code&gt; &lt;code&gt;fileUrl&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;content&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;消息内容&lt;/strong&gt;，如果希望发多个Url并解析，type 指定为 fileUrl 同时，content 里填 url 以英文逗号分隔&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;如果回复单条消息&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt; {&#xA;    &#34;success&#34;: true,&#xA;    &#34;data&#34;: {&#xA;      &#34;type&#34;: &#34;text&#34;,&#xA;      &#34;content&#34;: &#34;hello world！&#34;&#xA;    }&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;组合回复多条消息&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt; {&#xA;    &#34;success&#34;: true,&#xA;    &#34;data&#34;: [&#xA;      {&#xA;        &#34;type&#34;: &#34;text&#34;,&#xA;        &#34;content&#34;: &#34;hello world！&#34;&#xA;      },&#xA;      {&#xA;        &#34;type&#34;: &#34;fileUrl&#34;,&#xA;        &#34;content&#34;: &#34;https://samplelib.com/lib/preview/mp3/sample-3s.mp3&#34;&#xA;      }&#xA;    ]&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. 其他API&lt;/h3&gt; &#xA;&lt;h4&gt;token 配置说明&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;除了在 docker 启动时配置token，在默认缺省 token 的情况，会默认生成一个写入 &lt;code&gt;.env&lt;/code&gt; 文件中&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;3.1 获取登录二维码接口&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;地址&lt;/strong&gt;：&lt;code&gt;/login&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;methods&lt;/strong&gt;: &lt;code&gt;GET&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;query&lt;/strong&gt;: token&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;status&lt;/strong&gt;: &lt;code&gt;200&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;example&lt;/strong&gt;: &lt;a href=&#34;http://localhost:3001/login?token=%5BYOUR_PERSONAL_TOKEN%5D&#34;&gt;http://localhost:3001/login?token=[YOUR_PERSONAL_TOKEN]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;登录成功&lt;/h5&gt; &#xA;&lt;p&gt;返回 json 包含当前用户&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;success&#34;:true,&#34;message&#34;:&#34;Contact&amp;lt;TestUser&amp;gt;is already login&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;登录失败&lt;/h5&gt; &#xA;&lt;p&gt;展示微信登录扫码页面&lt;/p&gt; &#xA;&lt;h4&gt;3.2 健康检测接口&lt;/h4&gt; &#xA;&lt;p&gt;可以主动轮询该接口，检查服务是否正常运行&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;地址&lt;/strong&gt;：&lt;code&gt;/healthz&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;methods&lt;/strong&gt;: &lt;code&gt;GET&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;query&lt;/strong&gt;: token&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;status&lt;/strong&gt;: &lt;code&gt;200&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;example&lt;/strong&gt;: &lt;a href=&#34;http://localhost:3001/healthz?token=%5BYOUR_PERSONAL_TOKEN%5D&#34;&gt;http://localhost:3001/healthz?token=[YOUR_PERSONAL_TOKEN]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;微信已登录, 返回纯文本 &lt;code&gt;healthy&lt;/code&gt;，否则返回 &lt;code&gt;unHealthy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;3.3 获取静态资源接口&lt;/h4&gt; &#xA;&lt;p&gt;从 2.8.0 版本开始，可以通过本接口访问到头像等静态资源，具体见 &lt;a href=&#34;https://raw.githubusercontent.com/danni-cool/wechatbot-webhook/main/docs/recvdApi.example.md#2-formdatasource-string&#34;&gt;recvd_api 数据结构示例的 avatar 字段&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;注意所有上报 recvd_api 的静态资源地址不会默认带上 token, 需要自己拼接，否则会返回 401 错误, 请确保自己微信已登录，需要通过登录态去获取资源&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;地址&lt;/strong&gt;：&lt;code&gt;/resouces&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;methods&lt;/strong&gt;: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;query&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;token: 登录token&lt;/li&gt; &#xA;   &lt;li&gt;media: encode过的相对路径，比如 &lt;code&gt;/avatar/1234567890.jpg&lt;/code&gt; encode为 &lt;code&gt;avatar%2F1234567890.jpg&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;status&lt;/strong&gt;: &lt;code&gt;200&lt;/code&gt; &lt;code&gt;404&lt;/code&gt; &lt;code&gt;401&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;example&lt;/strong&gt;：&lt;a href=&#34;http://localhost:3001/resouces?media=%2Fcgi-bin%2Fmmwebwx-bin%2Fwebwxgetheadimg%3Fseq%3D83460%26username%3D%40%4086815a%26skey%3D&amp;amp;token=%5BYOUR_PERSONAL_TOKEN%5D&#34;&gt;http://localhost:3001/resouces?media=%2Fcgi-bin%2Fmmwebwx-bin%2Fwebwxgetheadimg%3Fseq%3D83460%26username%3D%40%4086815a%26skey%3D&amp;amp;token=[YOUR_PERSONAL_TOKEN]&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;status: &lt;code&gt;200&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;成功获取资源, 返回静态资源文件&lt;/p&gt; &#xA;&lt;h5&gt;status: &lt;code&gt;404&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;获取资源失败&lt;/p&gt; &#xA;&lt;h5&gt;status: &lt;code&gt;401&lt;/code&gt; 未携带登录token&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;success&#34;:false, &#34;message&#34;:&#34;Unauthorized: Access is denied due to invalid credentials.&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;status: &lt;code&gt;401&lt;/code&gt; 微信登录态已过期&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;   &#34;success&#34;: false, &#34;message&#34;: &#34;you must login first&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🌟 Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#danni-cool/wechatbot-webhook&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=danni-cool/wechatbot-webhook&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all our contributors!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/danni-cool/wechatbot-webhook/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=danni-cool/wechatbot-webhook&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;⏫ 更新日志&lt;/h2&gt; &#xA;&lt;p&gt;更新内容参见 &lt;a href=&#34;https://github.com/danni-cool/docker-wechat-roomBot/raw/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>