<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-01T01:37:02Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vfarid/v2ray-worker-sub</title>
    <updated>2023-04-01T01:37:02Z</updated>
    <id>tag:github.com,2023-04-01:/vfarid/v2ray-worker-sub</id>
    <link href="https://github.com/vfarid/v2ray-worker-sub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Cloudflare&#39;s Worker script to gather free v2ray configs and mix them with worker in order to make them work over filtered networks.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;v2ray-worker-sub&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>gt732/FortiGPT</title>
    <updated>2023-04-01T01:37:02Z</updated>
    <id>tag:github.com,2023-04-01:/gt732/FortiGPT</id>
    <link href="https://github.com/gt732/FortiGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FortiGPT Troubleshooting Assistant is a web app that helps network administrators troubleshoot common networking issues using natural language processing. This app uses the FortiGate API and SSH to gather debug commands and sends them to the ChatGPT API for analysis.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FortiGPT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/benUs5x.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;FortiGPT Troubleshooting Assistant is a web app that helps network administrators troubleshoot common networking issues using natural language processing. This app uses the FortiGate API and SSH to gather debug commands and sends them to the ChatGPT API for analysis. The app then provides troubleshooting advice based on the analysis results.&lt;/p&gt; &#xA;&lt;h1&gt;Tested on Fortigate 7.2.4 VM&lt;/h1&gt; &#xA;&lt;h2&gt;The app uses ReactJS for frontend and NodeJS/Express for backend&lt;/h2&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To use FortiGPT Troubleshooting Assistant, simply select a problem category (e.g. VPN issues) from the sidebar menu, and choose the problem type. The app will gather the debug output from your FortiGate firewall and send it to the ChatGPT API for analysis. The app will then provide you with troubleshooting advice based on the analysis results. If you are not happy with the response from chatGPT you can modify the prompts used in the server folder and rebuild the docker image.&lt;/p&gt; &#xA;&lt;h2&gt;Categories currently available&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;System - Fortiguard, High Memory, High CPU&lt;/li&gt; &#xA; &lt;li&gt;Connectivity - Packet Flow&lt;/li&gt; &#xA; &lt;li&gt;Routing - BGP Down&lt;/li&gt; &#xA; &lt;li&gt;VPN - VPN Down&lt;/li&gt; &#xA; &lt;li&gt;Network - Interfaces&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Future Development&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If the community expresses interest in this tool, I will incorporate additional categories and problem types.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;FortiGPT Troubleshooting Assistant requires no dependencies to be installed. Instead, it can be run as a Docker container.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To run FortiGPT Troubleshooting Assistant, simply follow the steps below:&lt;/p&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;Run the docker command to download the image and simply browse to the container&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run \&#xA;  -p 5005:5005 \&#xA;  -e OPENAI_API_KEY=your-api-key \&#xA;  gt732/fortigpt-react&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Login Screen&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/0iEmaGU.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;VPN Phase1 pre-share key mis-match &lt;img src=&#34;https://i.imgur.com/gew7aza.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Debug Flow &lt;img src=&#34;https://i.imgur.com/BErqcs5.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;BGP Down &lt;img src=&#34;https://i.imgur.com/0k5XH4i.png&#34; alt=&#34;alt test&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! To contribute to FortiGPT Troubleshooting Assistant, simply fork the GitHub repository and submit a pull request with your changes.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;FortiGPT Troubleshooting Assistant is licensed under the MIT license. See LICENSE for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Tungchaphet/Chino-chan-Bot</title>
    <updated>2023-04-01T01:37:02Z</updated>
    <id>tag:github.com,2023-04-01:/Tungchaphet/Chino-chan-Bot</id>
    <link href="https://github.com/Tungchaphet/Chino-chan-Bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bot Messenger được tích hợp ChatGPT.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;1. Lưu ý:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tôi không chịu trách nhiệm cho tất cả những gì bạn dùng code của tôi để làm những việc sai trái trên Facebook. Xin hãy tôn trọng mọi người trên cộng đồng Facebook.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2. Những thứ cần có:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1 tài khoản &lt;a href=&#34;https://www.facebook.com/&#34;&gt;Facebook&lt;/a&gt; để làm bot. Nếu bạn chỉ muốn để test thì dùng &lt;a href=&#34;https://www.facebook.com/whitehat/accounts/&#34;&gt;Facebook Whitehat Account&lt;/a&gt; để tránh bị ban account nhé.&lt;/li&gt; &#xA; &lt;li&gt;Nếu bạn chưa tải Node.JS thì bạn có thể tải nó &lt;a href=&#34;https://www.nodejs.org/&#34;&gt;ở đây&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3. Cách tạo:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone source code hoặc tải về từ GitHub:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/Tungchaphet/Chino-chan-Bot.git&#xA;cd Chino-chan-Bot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tải các thư viện npm cần thiết:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Đặt token OpenAI của bạn vào file &lt;strong&gt;config.js&lt;/strong&gt;. Bạn có thể vào &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;đây&lt;/a&gt; để tạo API Key nhé.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// ./config/config.js&#xA;const config = {&#xA;    prefix: &#39;/&#39;, // Bạn có thể thay prefix ở đây nhé.&#xA;    openaikey: &#39;&#39;, // Đưa token OpenAI của bạn vô đây&#xA;    cache: new NodeCache({&#xA;        checkperiod: 10000,&#xA;        deleteOnExpire: true&#xA;    }),&#xA;    ratelimit: new Map(),&#xA;    commands: new Map(),&#xA;    aliases: new Map()&#xA;}&#xA;&#xA;module.exports = config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy và paste json cookies tài khoản của bạn vô file &lt;strong&gt;fbstate.json&lt;/strong&gt; nằm trong folder &lt;strong&gt;config&lt;/strong&gt;. Lấy cookies tài khoản bằng cách sử dụng chrome extension &lt;a href=&#34;https://github.com/c3cbot/c3c-fbstate&#34;&gt;c3c-fbstate&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Chạy bot:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Và khi terminal của bạn xuất hiện &lt;strong&gt;&lt;em&gt;username&lt;/em&gt; đã online.&lt;/strong&gt; thì bạn đã thành công rồi đấy, chúc bạn may mắn :3&lt;/p&gt; &#xA;&lt;h2&gt;4. Những lệnh của bot:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prefix mặc định của bot là: &lt;strong&gt;/&lt;/strong&gt;. Bạn có thể thay prefix bạn muốn trong &lt;strong&gt;config.js&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;/ask [message]&lt;/strong&gt;: Để nói chuyện với bot (ChatGPT). Ví dụ: &lt;em&gt;/ask ChatGPT là cái gì?&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;/roll [number]&lt;/strong&gt;: Ra số ngẫu nhiên với số tối đa là &lt;em&gt;[number]&lt;/em&gt;. Ví dụ: &lt;em&gt;/roll 300&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;/ping&lt;/strong&gt;: Kiểm tra độ trễ của bot. Độ trễ có thể sai do đồng hồ máy bạn.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;/uptime&lt;/strong&gt;: Xem thời gian chạy của bot.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>