<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-18T01:33:45Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>GavinLonDigital/HuntTheAceJSGame</title>
    <updated>2022-12-18T01:33:45Z</updated>
    <id>tag:github.com,2022-12-18:/GavinLonDigital/HuntTheAceJSGame</id>
    <link href="https://github.com/GavinLonDigital/HuntTheAceJSGame" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>Sansekai/Wa-OpenAI</title>
    <updated>2022-12-18T01:33:45Z</updated>
    <id>tag:github.com,2022-12-18:/Sansekai/Wa-OpenAI</id>
    <link href="https://github.com/Sansekai/Wa-OpenAI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WhatsApp Bot OpenAI NodeJS Using Library Baileys&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WaBot-Broadcast&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;WhatsApp Bot Broadcast NodeJS Using Library &lt;a href=&#34;https://github.com/adiwajshing/Baileys&#34;&gt;Baileys&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;BACA DULU&lt;/h2&gt; &#xA;&lt;p&gt;Terdapat 2 tipe yaitu menggunakan command dan tanpa menggunakan command (auto chat).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jika ingin menggunakan command silahkan ganti kata &lt;code&gt;true&lt;/code&gt; menjadi &lt;code&gt;false&lt;/code&gt; di file &lt;a href=&#34;https://github.com/Sansekai/Wa-OpenAI/raw/586dbf2e7bb182b3a649d560e50ef44911fb4db8/key.json#L3&#34;&gt;key.json&lt;/a&gt;&lt;br&gt;Untuk commandnya menggunakan &lt;code&gt;.ai&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jika tidak ingin menggunakan command (auto chat) silahkan ganti kata &lt;code&gt;false&lt;/code&gt; menjadi &lt;code&gt;true&lt;/code&gt; di file &lt;a href=&#34;https://github.com/Sansekai/Wa-OpenAI/raw/586dbf2e7bb182b3a649d560e50ef44911fb4db8/key.json#L3&#34;&gt;key.json&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get &amp;amp; Change OpenAI ApiKey&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jika limit ApiKey OpenAI sudah habis silahkan buat apikey yang barunya &lt;a href=&#34;https://beta.openai.com/account/api-keys&#34;&gt;Disini&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ganti ApiKey OpenAI pada file &lt;a href=&#34;https://github.com/Sansekai/Wa-OpenAI/raw/586dbf2e7bb182b3a649d560e50ef44911fb4db8/key.json#L2&#34;&gt;key.json&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Install on RDP/Windows ✅&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;NodeJS&lt;/a&gt; dan &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git Bash&lt;/a&gt; terlebih dahulu&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/Sansekai/Wa-OpenAI&#xA;$ cd Wa-OpenAI&#xA;$ npm install&#xA;$ node index.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Install on Termux ✅&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Silahkan install manual &lt;code&gt;node_modules&lt;/code&gt; terlebih dahulu, karena di termux saat install otomatis melalui &lt;code&gt;npm install&lt;/code&gt; terjadi error. &lt;br&gt;Link &lt;code&gt;node_modules&lt;/code&gt;: &lt;a href=&#34;https://drive.google.com/file/d/1gKGjseRirX6mQ5LOFULpmnDs7q3Svm8y/view?usp=sharing&#34;&gt;Klik Disini&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pkg install git nodejs -y&#xA;$ git clone https://github.com/Sansekai/Wa-OpenAI&#xA;$ cd Wa-OpenAI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sesusah menginstall file node_modules, silahkan extract file &lt;code&gt;node_modules.zip&lt;/code&gt; dan taruh di folder Wa-OpenAI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node index.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://saweria.co/Sansekai&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/26188697/180601310-e82c63e4-412b-4c36-b7b5-7ba713c80380.png&#34; alt=&#34;Donate For Yusril&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Sansekai/Wa-OpenAI/raw/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2022 M Yusril&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aa342138039/JD-SHOPPER</title>
    <updated>2022-12-18T01:33:45Z</updated>
    <id>tag:github.com,2022-12-18:/aa342138039/JD-SHOPPER</id>
    <link href="https://github.com/aa342138039/JD-SHOPPER" rel="alternate"></link>
    <summary type="html">&lt;p&gt;京东自动下单 (自动登录,指定时间预约商品,商品补货监控,自动加购物车,自动下单)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JD_SHOPPER &lt;img src=&#34;https://raw.githubusercontent.com/aa342138039/JD-SHOPPER/master/Docs/img/shopper.svg?sanitize=true&#34; width=&#34;50px&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.python.org/download/releases/3.4.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.4+-blue.svg?sanitize=true&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tychxn/jd-assistant&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/status-stable-green.svg?sanitize=true&#34; alt=&#34;status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/aa342138039/JD-SHOPPER/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL-blue.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tychxn/jd-assistant&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/star%2C%20issue-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;star, issue&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;京东抢购助手&lt;/p&gt; &#xA;&lt;p&gt;1.缺货上架自动加购物车下单&lt;/p&gt; &#xA;&lt;p&gt;2.定时加购物车下单&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aa342138039/JD-SHOPPER/master/Docs/img/banner.jpg&#34; alt=&#34;操作界面&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;主要功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;开箱即用的软件（仅windows）&lt;/li&gt; &#xA; &lt;li&gt;web操作界面（跨平台）&lt;/li&gt; &#xA; &lt;li&gt;登陆京东商城（&lt;a href=&#34;http://www.jd.com/&#34;&gt;www.jd.com&lt;/a&gt;） &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;手机扫码登录&lt;/li&gt; &#xA;   &lt;li&gt;保存/加载登录cookies (可验证cookies是否过期)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;商品查询操作 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;提供完整的&lt;a href=&#34;https://raw.githubusercontent.com/aa342138039/JD-SHOPPER/master/area_id/&#34;&gt;&lt;code&gt;地址⇔ID&lt;/code&gt;&lt;/a&gt;对应关系&lt;/li&gt; &#xA;   &lt;li&gt;根据商品ID和地址ID查询库存&lt;/li&gt; &#xA;   &lt;li&gt;根据商品ID查询价格&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;购物车操作 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;清空/添加购物车 (无货商品也可以加入购物车，预约商品无法加入)&lt;/li&gt; &#xA;   &lt;li&gt;获取购物车商品详情&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;订单操作 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;获取订单结算页面信息 (商品详情, 应付总额, 收货地址, 收货人等)&lt;/li&gt; &#xA;   &lt;li&gt;提交订单（使用默认地址）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;其他 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;商品预约&lt;/li&gt; &#xA;   &lt;li&gt;用户信息查询&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;近期更新&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aa342138039/JD-SHOPPER/master/Docs/change-log.md&#34;&gt;查看详细日志&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;v1.0.0&lt;/h3&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://gitee.com/yanwen0614&#34;&gt;&lt;em&gt;@FlameGate&lt;/em&gt;&lt;/a&gt; 对本项目的贡献&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修复了windows平台下的兼容性问题&lt;/li&gt; &#xA; &lt;li&gt;修复了网络波动带来的递归调用问题&lt;/li&gt; &#xA; &lt;li&gt;默认host从 &lt;em&gt;&#39;0.0.0.0&#39;&lt;/em&gt; 迁移到 &lt;em&gt;&#39;localhost&#39;&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;v1.0.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修复了字体和图标显示错误的问题&lt;/li&gt; &#xA; &lt;li&gt;对本地GUI程序进行了初步配置&lt;/li&gt; &#xA; &lt;li&gt;对readme以及文档结构进行修改&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;v1.1.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;上线windows开箱即用exe程序&lt;/li&gt; &#xA; &lt;li&gt;修复windows web ui显示bug&lt;/li&gt; &#xA; &lt;li&gt;更新readme自行打包方法&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;即将到来&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;上线价格低于设定值自动下单功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;特别声明:&lt;/h2&gt; &#xA;&lt;p&gt;使用本仓库之前&lt;strong&gt;必须阅读&lt;/strong&gt; -- &lt;a href=&#34;https://raw.githubusercontent.com/aa342138039/JD-SHOPPER/master/Docs/notice.md&#34;&gt;&lt;em&gt;使用须知&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;您使用或者复制了本仓库且本人制作的任何代码或项目，则视为&lt;code&gt;已接受&lt;/code&gt;此声明，请仔细阅读&lt;/strong&gt;&lt;/em&gt;&lt;br&gt; &lt;em&gt;&lt;strong&gt;您在本声明未发出之时点使用或者复制了本仓库且本人制作的任何代码或项目且此时还在使用，则视为&lt;code&gt;已接受&lt;/code&gt;此声明，请仔细阅读&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;h3&gt;通过 &lt;em&gt;windows程序&lt;/em&gt; 运行&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://gitee.com/louisyoungx/JD-SHOPPER/attach_files/888014/download/jd-shopper.zip&#34;&gt;点我直接下载程序压缩包&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;到release界面下载jd-shopper.zip包&lt;/li&gt; &#xA; &lt;li&gt;解压后在jd-shopper目录找到jd-shopper.exe文件&lt;/li&gt; &#xA; &lt;li&gt;点击运行，或者右键生成快捷方式后运行&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;通过 &lt;em&gt;源代码&lt;/em&gt; 运行&lt;/h3&gt; &#xA;&lt;h4&gt;运行环境&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;Python 3&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;第三方库&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.python-requests.org/en/master/&#34;&gt;Requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.crummy.com/software/BeautifulSoup/bs4/doc/&#34;&gt;Beautiful Soup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lxml.de&#34;&gt;lxml&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;安装：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install -r pack_requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tips:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果国内安装第三方库比较慢，可以使用以下指令进行清华源加速：&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install -r pack_requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;如果安装错误也可尝试&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install requests lxml bs4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;em&gt;web&lt;/em&gt;界面 - 使用教程&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;推荐 &lt;strong&gt;Chrome&lt;/strong&gt; 浏览器&lt;/li&gt; &#xA; &lt;li&gt;到 &lt;em&gt;/TEST/area_id/&lt;/em&gt; 目录下查询你所在地的地区标识ID&lt;/li&gt; &#xA; &lt;li&gt;如果你的账户有&lt;strong&gt;京豆京券余额&lt;/strong&gt;，请到 &lt;em&gt;/Config/config.ini&lt;/em&gt; 设置密码，或者换个账号运行&lt;/li&gt; &#xA; &lt;li&gt;命令行运行服务&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python3 runserver.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;浏览器打开 &lt;a href=&#34;http://localhost:12021/&#34;&gt;http://localhost:12021/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;&lt;em&gt;命令行&lt;/em&gt; - 使用教程&lt;/h3&gt; &#xA;&lt;h4&gt;1. 新版的web界面并不稳定，也许命令行更适合&lt;/h4&gt; &#xA;&lt;h4&gt;2. 网页扫码登录，或者账号密码登录&lt;/h4&gt; &#xA;&lt;h4&gt;3. 填写config.ini配置信息&lt;/h4&gt; &#xA;&lt;p&gt;(1)&lt;code&gt;eid&lt;/code&gt;和&lt;code&gt;fp&lt;/code&gt;找个普通商品随便下单,然后抓包就能看到,这两个值可以填固定的&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;随便找一个商品下单，然后进入结算页面，打开浏览器的调试窗口，切换到控制台Tab页，在控制台中输入变量&lt;code&gt;_JdTdudfp&lt;/code&gt;，即可从输出的Json中获取&lt;code&gt;eid&lt;/code&gt;和&lt;code&gt;fp&lt;/code&gt;。&lt;br&gt; 不会的话参考作者3的👉 &lt;a href=&#34;https://github.com/tychxn/jd-assistant/wiki/1.-%E4%BA%AC%E4%B8%9C%E6%8A%A2%E8%B4%AD%E5%8A%A9%E6%89%8B%E7%94%A8%E6%B3%95&#34;&gt;使用教程请参看Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;不会的同学也可以打开目录下的get_eid_fp.html文件，不过有概率失败&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;(2)&lt;code&gt;sku_id&lt;/code&gt;,&lt;code&gt;DEFAULT_USER_AGENT&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;sku_id&lt;/code&gt;已经按照Xbox Series S的填好。 &lt;code&gt;cookies_string&lt;/code&gt; 现在已经不需要填写了 &lt;code&gt;DEFAULT_USER_AGENT&lt;/code&gt; 可以用默认的。谷歌浏览器也可以浏览器地址栏中输入about:version 查看&lt;code&gt;USER_AGENT&lt;/code&gt;替换&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;(3)配置一下时间&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;现在不强制要求同步最新时间了，程序会自动同步京东时间&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;但要是电脑时间快慢了好几个小时，最好还是同步一下吧&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;以上都是必须的.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;tips： 在程序开始运行后，会检测本地时间与京东服务器时间，输出的差值为本地时间-京东服务器时间，即-50为本地时间比京东服务器时间慢50ms。 本代码的执行的抢购时间以本地电脑/服务器时间为准&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;(4)修改抢购件数&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;代码中默认抢购件数为2 具体修改为：在config.ini文件&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;(5) &lt;strong&gt;特别提示！&lt;/strong&gt; &lt;em&gt;不止一个人卡在这个问题，如果不注意至少花两个小时调试debug&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果你的账户中有可用的京券（注意不是东券）或 在上次购买订单中使用了京豆， 那么京东可能会在下单时自动选择京券支付 或 自动勾选京豆支付。 此时下单会要求输入六位数字的支付密码。请在config.ini配置你的支付密码，如 123456 。&lt;/p&gt; &#xA; &lt;p&gt;显著特点是添加购物车能成功，但一到订单结算页面就报错，基本就是这个原因！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;4.运行main.py&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python3 main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;根据提示选择相应功能即可&lt;/p&gt; &#xA;&lt;h4&gt;5.抢购结果确认&lt;/h4&gt; &#xA;&lt;p&gt;抢购是否成功通常在程序开始的一分钟内可见分晓！&lt;br&gt; 搜索日志，出现“抢购成功，订单号xxxxx&#34;，代表成功抢到了，务必半小时内支付订单！程序暂时不支持自动停止，需要手动STOP！&lt;br&gt; 若两分钟还未抢购成功，基本上就是没抢到！程序暂时不支持自动停止，需要手动STOP！&lt;/p&gt; &#xA;&lt;h2&gt;自行打包可执行文件&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;本方法依赖 &lt;strong&gt;PyInstaller&lt;/strong&gt;，也可采用其他模块进行打包 打包入口在runserver.py&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;修改Config/config.ini文件&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[GUI]&#xA;START_USING=TRUE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;安装打包依赖&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install GUI/pack_requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;使用 PyInstaller 进行打包&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python GUI/packing.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;生成可执行文件在 dist/目录中&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;h5&gt;作者-1 &lt;a href=&#34;https://github.com/zhou-xiaojun/jd_mask&#34;&gt;https://github.com/zhou-xiaojun/jd_mask&lt;/a&gt; 的开源项目&lt;/h5&gt; &#xA;&lt;h5&gt;作者-2 &lt;a href=&#34;https://github.com/wlwwu/jd_maotai&#34;&gt;https://github.com/wlwwu/jd_maotai&lt;/a&gt; 的开源项目&lt;/h5&gt; &#xA;&lt;h5&gt;作者-3 &lt;a href=&#34;https://github.com/andyzys/jd_seckill&#34;&gt;https://github.com/andyzys/jd_seckill&lt;/a&gt; 的开源项目&lt;/h5&gt; &#xA;&lt;h5&gt;作者-4 &lt;a href=&#34;https://github.com/tychxn/jd-assistant&#34;&gt;https://github.com/tychxn/jd-assistant&lt;/a&gt; 的开源项目&lt;/h5&gt; &#xA;&lt;h5&gt;作者-5 &lt;a href=&#34;https://gitee.com/iszhangk/jd_robot&#34;&gt;https://gitee.com/iszhangk/jd_robot&lt;/a&gt; 的开源项目&lt;/h5&gt;</summary>
  </entry>
</feed>