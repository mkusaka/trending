<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-04T01:36:32Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>blueagler/DeepL-Crack</title>
    <updated>2023-08-04T01:36:32Z</updated>
    <id>tag:github.com,2023-08-04:/blueagler/DeepL-Crack</id>
    <link href="https://github.com/blueagler/DeepL-Crack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bypass 5,000 characters, Remove edit restriction, Use DeepL Pro Account Cookies/DeepL Api Free Token to translate, Unlock Formal/informal tone, Randomize fingerprint&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DeepL Crack (Chromium Extension)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/blueagler/DeepL-Crack?style=flat&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;This project is for research only. You should delete it within 24 hours. All tokens come from the internet. The author is not responsible for any action you take in using it.&lt;/h2&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/61572188/221816073-67c11553-1387-43a1-803c-bbc0692333d7.mov&#34;&gt;https://user-images.githubusercontent.com/61572188/221816073-67c11553-1387-43a1-803c-bbc0692333d7.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bypass the free translator&#39;s limit of 5,000 characters&lt;/li&gt; &#xA; &lt;li&gt;Remove edit restriction (available for docx, doc, ppt, pptx, pdf)&lt;/li&gt; &#xA; &lt;li&gt;Remove DeepL Pro Banner for docx, doc, ppt, pptx files&lt;/li&gt; &#xA; &lt;li&gt;Use DeepL Pro Account Cookies/DeepL Api Free Token to translate (This can help you bypass frequency limitations of web api)&lt;/li&gt; &#xA; &lt;li&gt;Unlock Formal/informal tone&lt;/li&gt; &#xA; &lt;li&gt;Clean cookie and randomnize User Agent&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;DeepL may ban your IP due to high frequency of requests to web api. There are 2 solutions:&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Use DeepL Pro Account Cookies/DeepL Api Free Token to translate.&lt;/li&gt; &#xA;  &lt;li&gt;First, Use a proxy to change IP. Then, click clean cookie button.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;File translation quota and maximum upload size of 5 MB are not cracked due to server verification.&lt;/h3&gt; &#xA; &lt;h3&gt;Edge users should disable Advanced Security for deepl.com so that this extension can unlock PDF.&lt;/h3&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation tutorial&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://github.com/blueagler/DeepL-Crack/releases&#34;&gt;release page&lt;/a&gt; and download the latest version (e.g. DeepL Crack v1.1.8.zip)&lt;/li&gt; &#xA; &lt;li&gt;Decompress this zip file&lt;/li&gt; &#xA; &lt;li&gt;Go to Chrome&#39;s plug-in settings page&lt;/li&gt; &#xA; &lt;li&gt;Enable developer mode&lt;/li&gt; &#xA; &lt;li&gt;Click to load the decompressed plug-in&lt;/li&gt; &#xA; &lt;li&gt;Select the decompressed folder&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;This extension is made with Preact and material-ui. It hijacks XMLHttpRequest. It use WebAssembly to unlock PDF files.&lt;/p&gt; &#xA;&lt;h2&gt;Support me:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/blueagler&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; height=&#34;50&#34; align=&#34;right&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/blueagler/blueagler/raw/main/assets/wechat_reward_code.JPG&#34; height=&#34;400&#34;&gt; &lt;img src=&#34;https://github.com/blueagler/blueagler/raw/main/assets/alipay_reward_code.JPG&#34; height=&#34;400&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Telegram Channel &amp;amp; Group&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/DeepL_Crack_Announcement&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/61572188/221822226-47c6469b-06b6-4151-9ad6-36a3da10b2b7.jpg&#34; width=&#34;300px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/DeepL_Crack&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/61572188/221823275-8ff3b6a7-cf00-438e-800a-050bd96bdadc.jpg&#34; width=&#34;300px&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tl-open-source/tl-rtc-file</title>
    <updated>2023-08-04T01:36:32Z</updated>
    <id>tag:github.com,2023-08-04:/tl-open-source/tl-rtc-file</id>
    <link href="https://github.com/tl-open-source/tl-rtc-file" rel="alternate"></link>
    <summary type="html">&lt;p&gt;webrtc file transfer tool，p2p网页在线文件传输，跨终端，不限平台，内网不限速，支持私有部署，支持多文件拖拽发送，支持本地屏幕录制，远程屏幕共享，远程音视频通话，密码房间，直播，oss云存储，中继服务设置，webrtc检测，统计，文字传输，公共聊天，远程画板，丰富的后台管理，实时执行日志展示，机器人告警通知等功能&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tl-rtc-file-tool 【始于文件传输，不止于文件传输】&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://webrtc.org.cn/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/webrtc-p2p-blue&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iamtsm/tl-rtc-file/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code-simple-green&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iamtsm/tl-rtc-file/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/large%20file-support-green&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iamtsm/tl-rtc-file/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/deployment-private-yellow&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iamtsm/tl-rtc-file/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-unlimited-coral&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;背景 ： 20年毕设的题目相关整理出来的&lt;/h4&gt; &#xA;&lt;h4&gt;简介 ：（tl webrtc datachannel filetools）用webrt在web端传输文件，支持传输超大文件。&lt;/h4&gt; &#xA;&lt;h4&gt;优点 ： 分片传输，跨终端，不限平台，方便使用，内网不限速，支持私有部署，支持多文件拖拽发送&lt;/h4&gt; &#xA;&lt;h4&gt;扩展 ： 扩展了许多丰富的小功能，如本地屏幕录制，远程屏幕共享，远程音视频通话，密码房间，直播，oss云存储，中继服务设置，webrtc检测，统计，文字传输，公共聊天，远程画板，丰富的后台管理，实时执行日志展示，机器人告警通知等功能... 等等&lt;/h4&gt; &#xA;&lt;h4&gt;体验 ： &lt;a href=&#34;https://im.iamtsm.cn/file&#34;&gt;https://im.iamtsm.cn/file&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;qq交流群 : 624214498&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;准备 (必须步骤)&lt;/h2&gt; &#xA;&lt;p&gt;安装node-14.21.x或14.21.x以上，npm后进入项目目录运行下面命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;`cd svr/`&#xA;&#xA;`npm install`&#xA;&#xA;首次运行/自行开发页面，需要启动下面两个命令之一&#xA;&#xA;`npm run build:dev` (打包监听文件改动打包min) 或者  `npm run build:pro` 打包min&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;配置websocket (必须步骤)&lt;/h2&gt; &#xA;&lt;p&gt;修改cfg.json中相应ws配置，或者wss配置&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;ws&#34;: {&#xA;    &#34;port&#34;: 8444,                                       #socket 端口&#xA;    &#34;host&#34;: &#34;ws://域名 或者 ip:port 或者 域名:port&#34;,       #socket ip  局域网ip/公网ip, 局域网ip只能在局域网访问，公网ip可在公网访问&#xA;},&#xA;&#34;wss&#34; : {&#xA;    &#34;port&#34;: 8444,                                       #socket 端口&#xA;    &#34;host&#34;: &#34;wss://域名 或者 ip:port 或者 域名:port&#34;,      #socket ip  局域网ip/公网ip, 局域网ip只能在局域网访问，公网ip可在公网访问&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;常见情况示例 :&lt;/p&gt; &#xA;&lt;p&gt;比如你是用ip(10.x.x.x)的形式部署socket服务，那么host就为&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ws://10.x.x.x:8444 或者 wss://10.x.x.x:8444&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果你有域名，并且配置了代理，比如a.test.com转发到本地socket服务的8444端口，那么host就为&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ws://a.test.com 或者 wss://a.test.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果你有域名，但是没有转发到具体的端口，比如有b.test.com:8444访问的是socket服务的8444端口，那么host就为&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ws://b.test.com:8444 或者 wss://b.test.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;启动 (必须步骤)&lt;/h2&gt; &#xA;&lt;p&gt;启动以下两个服务, 选一种模式启动即可&lt;/p&gt; &#xA;&lt;p&gt;http模式&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;api服务: `npm run lapi`&#xA;&#xA;socket服务 : `npm run lsocket`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;https模式&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;api服务: `npm run sapi`&#xA;&#xA;socket服务 : `npm run ssocket`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;配置数据库 (非必须步骤)&lt;/h2&gt; &#xA;&lt;p&gt;修改cfg.json中相应数据库配置&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;db&#34;: {&#xA;    &#34;open&#34;: false, #是否开启数据库, 默认关闭&#xA;    &#34;mysql&#34;: {&#xA;        &#34;host&#34;: &#34;host地址&#34;,&#xA;        &#34;port&#34;: 3306,&#xA;        &#34;dbName&#34;: &#34;数据库名称&#34;,&#xA;        &#34;user&#34;: &#34;用户名&#34;,&#xA;        &#34;password&#34;: &#34;密码&#34;,&#xA;        &#34;other&#34;: {&#xA;            &#34;sequelize&#34;: {&#xA;                &#34;dialect&#34;: &#34;mysql&#34;,&#xA;                &#34;host&#34;: &#34;host地址&#34;,&#xA;                &#34;port&#34;: 3306,&#xA;                &#34;logging&#34;: false,&#xA;                &#34;pool&#34;: {&#xA;                    &#34;max&#34;: 5,&#xA;                    &#34;min&#34;: 0,&#xA;                    &#34;acquire&#34;: 30000,&#xA;                    &#34;idle&#34;: 10000&#xA;                },&#xA;                &#34;timezone&#34;: &#34;+08:00&#34;,&#xA;                &#34;define&#34;: {&#xA;                    &#34;freezeTableName&#34;: true,&#xA;                    &#34;underscored&#34;: true,&#xA;                    &#34;charset&#34;: &#34;utf8&#34;,&#xA;                    &#34;collate&#34;: &#34;utf8_general_ci&#34;,&#xA;                    &#34;timestamps&#34;: false,&#xA;                    &#34;paranoid&#34;: true&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;配置turnserver (局域网非必须步骤，公网必须步骤)&lt;/h2&gt; &#xA;&lt;p&gt;ubuntu示例:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;安装coturn  `sudo apt-get install coturn`&#xA;&#xA;项目提供了一份配置文件模板在 : `conf/turn/turnserver.conf`&#xA;&#xA;修改配置文件后复制一份  `cp conf/turn/turnserver.conf /etc/turnserver.conf`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;示例用户和密码: tlrtcfile&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;生成用户 (turnadmin生成密码)  `turnadmin -k -u tlrtcfile -r 你的域名`&#xA;或者 (自定义密码)  `turnadmin -a -u tlrtcfile -p tlrtcfile -r 你的域名`&#xA;启动turnserver  `turnserver -c /etc/turnserver.conf`&#xA;&#xA;可参考示例模板 : `bin/turnStart.sh`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker (非必须步骤)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;修改local.env中的配置信息或者按需配置conf.json中的ws, 或者wss (需要填容器的ip，端口信息)&#xA;&#xA;docker-compose up -d&#xA;&#xA;访问 : http://localhost:9092 或者 http://本机ip:9092&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;管理后台 (非必须步骤)&lt;/h2&gt; &#xA;&lt;p&gt;前提 ： 需要开启数据库配置&lt;/p&gt; &#xA;&lt;p&gt;修改cfg.json中的manage的room和password，默认房间号和密码都是tlrtcfile&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;访问 : http://localhost:9092 或者 http://本机ip:9092&#xA;&#xA;输入配置的房间号，输入密码，即可进入管理后台&#xA;&#xA;&#34;manage&#34;: {&#xA;&#x9;&#34;room&#34;: &#34;tlrtcfile&#34;,&#xA;&#x9;&#34;password&#34;: &#34;tlrtcfile&#34;&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;企微通知 (非必须步骤)&lt;/h2&gt; &#xA;&lt;p&gt;修改cfg.json中的notify的qiwei数组，填入企业微信机器人的key即可&lt;/p&gt; &#xA;&lt;p&gt;normal : 正常通知, error : 系统报错通知&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;notify&#34;: {&#xA;    &#34;open&#34;: true,  #是否开启企业微信通知&#xA;    &#34;qiwei&#34;: {&#xA;        &#34;normal&#34; : [&#xA;            &#34;key1&#34;,&#xA;            &#34;key2&#34;&#xA;        ],&#xA;        &#34;error&#34; : [&#xA;            &#34;key3&#34;,&#xA;            &#34;key4&#34;&#xA;        ]&#xA;    }&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;OSS云存储 (非必须步骤)&lt;/h2&gt; &#xA;&lt;p&gt;修改cfg.json中的oss&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;oss&#34;: {&#xA;&#x9;&#34;seafile&#34;: {&#xA;&#x9;&#x9;&#34;repoid&#34;: &#34;&#34;,&#xA;&#x9;&#x9;&#34;host&#34;: &#34;&#34;,&#xA;&#x9;&#x9;&#34;username&#34;: &#34;帐号&#34;,&#xA;&#x9;&#x9;&#34;password&#34;: &#34;密码&#34;&#xA;&#x9;},&#xA;&#x9;&#34;alyun&#34;: {&#xA;&#x9;&#x9;&#34;AccessKey&#34;: &#34;&#34;,&#xA;&#x9;&#x9;&#34;SecretKey&#34;: &#34;&#34;,&#xA;&#x9;&#x9;&#34;bucket&#34;: &#34;tl-rtc-file&#34;&#xA;&#x9;},&#xA;&#x9;&#34;txyun&#34;: {&#xA;&#x9;&#x9;&#34;AccessKey&#34;: &#34;&#34;,&#xA;&#x9;&#x9;&#34;SecretKey&#34;: &#34;&#34;,&#xA;&#x9;&#x9;&#34;bucket&#34;: &#34;tl-rtc-file&#34;&#xA;&#x9;},&#xA;&#x9;&#34;qiniuyun&#34;: {&#xA;&#x9;&#x9;&#34;AccessKey&#34;: &#34;&#34;,&#xA;&#x9;&#x9;&#34;SecretKey&#34;: &#34;&#34;,&#xA;&#x9;&#x9;&#34;bucket&#34;: &#34;tl-rtc-file&#34;&#xA;&#x9;}&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Chat-GPT (非必须步骤)&lt;/h2&gt; &#xA;&lt;p&gt;修改cfg.json中的openai.apiKeys，填写你自己openai账号生成的apiKey&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;openai&#34;: {&#xA;&#x9;&#34;apiKeys&#34;: [&#xA;&#x9;&#x9;&#xA;&#x9;]&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;概述图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tl-open-source/tl-rtc-file/master/doc/tl-rtc-file-tool.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;h3&gt;MIT License Copyright (c) 2022 iamtsm&lt;/h3&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tl-open-source/tl-rtc-file/master/DISCLAIMER.md&#34;&gt;免责声明&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sindresorhus/ora</title>
    <updated>2023-08-04T01:36:32Z</updated>
    <id>tag:github.com,2023-08-04:/sindresorhus/ora</id>
    <link href="https://github.com/sindresorhus/ora" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Elegant terminal spinner&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ora&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Elegant terminal spinner&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/sindresorhus/ora/main/screenshot.svg?sanitize=true&#34; width=&#34;500&#34;&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install ora&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import ora from &#39;ora&#39;;&#xA;&#xA;const spinner = ora(&#39;Loading unicorns&#39;).start();&#xA;&#xA;setTimeout(() =&amp;gt; {&#xA;&#x9;spinner.color = &#39;yellow&#39;;&#xA;&#x9;spinner.text = &#39;Loading rainbows&#39;;&#xA;}, 1000);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;h3&gt;ora(text)&lt;/h3&gt; &#xA;&lt;h3&gt;ora(options)&lt;/h3&gt; &#xA;&lt;p&gt;If a string is provided, it is treated as a shortcut for &lt;a href=&#34;https://raw.githubusercontent.com/sindresorhus/ora/main/#text&#34;&gt;&lt;code&gt;options.text&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;options&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;text&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Text to display after the spinner.&lt;/p&gt; &#xA;&lt;h5&gt;prefixText&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;string | () =&amp;gt; string&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Text or a function that returns text to display before the spinner. No prefix text will be displayed if set to an empty string.&lt;/p&gt; &#xA;&lt;h5&gt;suffixText&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;string | () =&amp;gt; string&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Text or a function that returns text to display after the spinner text. No suffix text will be displayed if set to an empty string.&lt;/p&gt; &#xA;&lt;h5&gt;spinner&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;string | object&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;&#39;dots&#39;&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/sindresorhus/ora/main/screenshot-spinner.gif&#34; width=&#34;14&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Name of one of the &lt;a href=&#34;https://raw.githubusercontent.com/sindresorhus/ora/main/#spinners&#34;&gt;provided spinners&lt;/a&gt;. See &lt;code&gt;example.js&lt;/code&gt; in this repo if you want to test out different spinners. On Windows, it will always use the &lt;code&gt;line&lt;/code&gt; spinner as the Windows command-line doesn&#39;t have proper Unicode support.&lt;/p&gt; &#xA;&lt;p&gt;Or an object like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{&#xA;&#x9;interval: 80, // Optional&#xA;&#x9;frames: [&#39;-&#39;, &#39;+&#39;, &#39;-&#39;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;color&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;string&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;&#39;cyan&#39;&lt;/code&gt;&lt;br&gt; Values: &lt;code&gt;&#39;black&#39; | &#39;red&#39; | &#39;green&#39; | &#39;yellow&#39; | &#39;blue&#39; | &#39;magenta&#39; | &#39;cyan&#39; | &#39;white&#39; | &#39;gray&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The color of the spinner.&lt;/p&gt; &#xA;&lt;h5&gt;hideCursor&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Set to &lt;code&gt;false&lt;/code&gt; to stop Ora from hiding the cursor.&lt;/p&gt; &#xA;&lt;h5&gt;indent&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;number&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Indent the spinner with the given number of spaces.&lt;/p&gt; &#xA;&lt;h5&gt;interval&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;number&lt;/code&gt;&lt;br&gt; Default: Provided by the spinner or &lt;code&gt;100&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Interval between each frame.&lt;/p&gt; &#xA;&lt;p&gt;Spinners provide their own recommended interval, so you don&#39;t really need to specify this.&lt;/p&gt; &#xA;&lt;h5&gt;stream&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;stream.Writable&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;process.stderr&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Stream to write the output.&lt;/p&gt; &#xA;&lt;p&gt;You could for example set this to &lt;code&gt;process.stdout&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;h5&gt;isEnabled&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Force enable/disable the spinner. If not specified, the spinner will be enabled if the &lt;code&gt;stream&lt;/code&gt; is being run inside a TTY context (not spawned or piped) and/or not in a CI environment.&lt;/p&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;{isEnabled: false}&lt;/code&gt; doesn&#39;t mean it won&#39;t output anything. It just means it won&#39;t output the spinner, colors, and other ansi escape codes. It will still log text.&lt;/p&gt; &#xA;&lt;h5&gt;isSilent&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Disable the spinner and all log text. All output is suppressed and &lt;code&gt;isEnabled&lt;/code&gt; will be considered &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;discardStdin&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Discard stdin input (except Ctrl+C) while running if it&#39;s TTY. This prevents the spinner from twitching on input, outputting broken lines on &lt;kbd&gt;Enter&lt;/kbd&gt; key presses, and prevents buffering of input while the spinner is running.&lt;/p&gt; &#xA;&lt;p&gt;This has no effect on Windows as there is no good way to implement discarding stdin properly there.&lt;/p&gt; &#xA;&lt;h3&gt;Instance&lt;/h3&gt; &#xA;&lt;h4&gt;.text &lt;sup&gt;get/set&lt;/sup&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Change the text after the spinner.&lt;/p&gt; &#xA;&lt;h4&gt;.prefixText &lt;sup&gt;get/set&lt;/sup&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Change the text before the spinner.&lt;/p&gt; &#xA;&lt;p&gt;No prefix text will be displayed if set to an empty string.&lt;/p&gt; &#xA;&lt;h4&gt;.suffixText &lt;sup&gt;get/set&lt;/sup&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Change the text after the spinner text.&lt;/p&gt; &#xA;&lt;p&gt;No suffix text will be displayed if set to an empty string.&lt;/p&gt; &#xA;&lt;h4&gt;.color &lt;sup&gt;get/set&lt;/sup&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Change the spinner color.&lt;/p&gt; &#xA;&lt;h4&gt;.spinner &lt;sup&gt;get/set&lt;/sup&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Change the spinner.&lt;/p&gt; &#xA;&lt;h4&gt;.indent &lt;sup&gt;get/set&lt;/sup&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Change the spinner indent.&lt;/p&gt; &#xA;&lt;h4&gt;.isSpinning &lt;sup&gt;get&lt;/sup&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A boolean of whether the instance is currently spinning.&lt;/p&gt; &#xA;&lt;h4&gt;.interval &lt;sup&gt;get&lt;/sup&gt;&lt;/h4&gt; &#xA;&lt;p&gt;The interval between each frame.&lt;/p&gt; &#xA;&lt;p&gt;The interval is decided by the chosen spinner.&lt;/p&gt; &#xA;&lt;h4&gt;.start(text?)&lt;/h4&gt; &#xA;&lt;p&gt;Start the spinner. Returns the instance. Set the current text if &lt;code&gt;text&lt;/code&gt; is provided.&lt;/p&gt; &#xA;&lt;h4&gt;.stop()&lt;/h4&gt; &#xA;&lt;p&gt;Stop and clear the spinner. Returns the instance.&lt;/p&gt; &#xA;&lt;h4&gt;.succeed(text?)&lt;/h4&gt; &#xA;&lt;p&gt;Stop the spinner, change it to a green &lt;code&gt;✔&lt;/code&gt; and persist the current text, or &lt;code&gt;text&lt;/code&gt; if provided. Returns the instance. See the GIF below.&lt;/p&gt; &#xA;&lt;h4&gt;.fail(text?)&lt;/h4&gt; &#xA;&lt;p&gt;Stop the spinner, change it to a red &lt;code&gt;✖&lt;/code&gt; and persist the current text, or &lt;code&gt;text&lt;/code&gt; if provided. Returns the instance. See the GIF below.&lt;/p&gt; &#xA;&lt;h4&gt;.warn(text?)&lt;/h4&gt; &#xA;&lt;p&gt;Stop the spinner, change it to a yellow &lt;code&gt;⚠&lt;/code&gt; and persist the current text, or &lt;code&gt;text&lt;/code&gt; if provided. Returns the instance.&lt;/p&gt; &#xA;&lt;h4&gt;.info(text?)&lt;/h4&gt; &#xA;&lt;p&gt;Stop the spinner, change it to a blue &lt;code&gt;ℹ&lt;/code&gt; and persist the current text, or &lt;code&gt;text&lt;/code&gt; if provided. Returns the instance.&lt;/p&gt; &#xA;&lt;h4&gt;.stopAndPersist(options?)&lt;/h4&gt; &#xA;&lt;p&gt;Stop the spinner and change the symbol or text. Returns the instance. See the GIF below.&lt;/p&gt; &#xA;&lt;h5&gt;options&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h6&gt;symbol&lt;/h6&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;string&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;&#39; &#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Symbol to replace the spinner with.&lt;/p&gt; &#xA;&lt;h6&gt;text&lt;/h6&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;string&lt;/code&gt;&lt;br&gt; Default: Current &lt;code&gt;&#39;text&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Text to be persisted after the symbol.&lt;/p&gt; &#xA;&lt;h6&gt;prefixText&lt;/h6&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;string&lt;/code&gt;&lt;br&gt; Default: Current &lt;code&gt;prefixText&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Text to be persisted before the symbol. No prefix text will be displayed if set to an empty string.&lt;/p&gt; &#xA;&lt;h6&gt;suffixText&lt;/h6&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;string&lt;/code&gt;&lt;br&gt; Default: Current &lt;code&gt;suffixText&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Text to be persisted after the text after the symbol. No suffix text will be displayed if set to an empty string.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/sindresorhus/ora/main/screenshot-2.gif&#34; width=&#34;480&#34;&gt; &#xA;&lt;h4&gt;.clear()&lt;/h4&gt; &#xA;&lt;p&gt;Clear the spinner. Returns the instance.&lt;/p&gt; &#xA;&lt;h4&gt;.render()&lt;/h4&gt; &#xA;&lt;p&gt;Manually render a new frame. Returns the instance.&lt;/p&gt; &#xA;&lt;h4&gt;.frame()&lt;/h4&gt; &#xA;&lt;p&gt;Get a new frame.&lt;/p&gt; &#xA;&lt;h3&gt;oraPromise(action, text)&lt;/h3&gt; &#xA;&lt;h3&gt;oraPromise(action, options)&lt;/h3&gt; &#xA;&lt;p&gt;Starts a spinner for a promise or promise-returning function. The spinner is stopped with &lt;code&gt;.succeed()&lt;/code&gt; if the promise fulfills or with &lt;code&gt;.fail()&lt;/code&gt; if it rejects. Returns the promise.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import {oraPromise} from &#39;ora&#39;;&#xA;&#xA;await oraPromise(somePromise);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;action&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Promise | ((spinner: ora.Ora) =&amp;gt; Promise)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;options&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;All of the &lt;a href=&#34;https://raw.githubusercontent.com/sindresorhus/ora/main/#options&#34;&gt;options&lt;/a&gt; plus the following:&lt;/p&gt; &#xA;&lt;h5&gt;successText&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;string | ((result: T) =&amp;gt; string) | undefined&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The new text of the spinner when the promise is resolved.&lt;/p&gt; &#xA;&lt;p&gt;Keeps the existing text if &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;failText&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;string | ((error: Error) =&amp;gt; string) | undefined&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The new text of the spinner when the promise is rejected.&lt;/p&gt; &#xA;&lt;p&gt;Keeps the existing text if &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;spinners&lt;/h3&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Record&amp;lt;string, Spinner&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;All &lt;a href=&#34;https://github.com/sindresorhus/cli-spinners/raw/main/spinners.json&#34;&gt;provided spinners&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;How do I change the color of the text?&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://github.com/chalk/chalk&#34;&gt;Chalk&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import ora from &#39;ora&#39;;&#xA;import chalk from &#39;chalk&#39;;&#xA;&#xA;const spinner = ora(`Loading ${chalk.red(&#39;unicorns&#39;)}`).start();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Why does the spinner freeze?&lt;/h3&gt; &#xA;&lt;p&gt;JavaScript is single-threaded, so synchronous operations blocks the thread, including the spinner animation. Prefer asynchronous operations whenever possible.&lt;/p&gt; &#xA;&lt;h2&gt;Related&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/cli-spinners&#34;&gt;cli-spinners&lt;/a&gt; - Spinners for use in the terminal&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SamVerschueren/listr&#34;&gt;listr&lt;/a&gt; - Terminal task list&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kiliankoe/CLISpinner&#34;&gt;CLISpinner&lt;/a&gt; - Terminal spinner library for Swift&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ManrajGrover/halo&#34;&gt;halo&lt;/a&gt; - Python port&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FGRibreau/spinners&#34;&gt;spinners&lt;/a&gt; - Terminal spinners for Rust&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joeycozza/marquee-ora&#34;&gt;marquee-ora&lt;/a&gt; - Scrolling marquee spinner for Ora&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/briandowns/spinner&#34;&gt;briandowns/spinner&lt;/a&gt; - Terminal spinner/progress indicator for Go&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tj/go-spin&#34;&gt;tj/go-spin&lt;/a&gt; - Terminal spinner package for Go&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://observablehq.com/@victordidenko/ora&#34;&gt;observablehq.com/@victordidenko/ora&lt;/a&gt; - Ora port to Observable notebooks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jcarpanelli/spinnies&#34;&gt;spinnies&lt;/a&gt; - Terminal multi-spinner library for Node.js&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HarryPeach/kia&#34;&gt;kia&lt;/a&gt; - Simple terminal spinners for Deno 🦕&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>