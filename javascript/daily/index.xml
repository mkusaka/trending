<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-30T01:33:06Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hotheadhacker/no-as-a-service</title>
    <updated>2025-07-30T01:33:06Z</updated>
    <id>tag:github.com,2025-07-30:/hotheadhacker/no-as-a-service</id>
    <link href="https://github.com/hotheadhacker/no-as-a-service" rel="alternate"></link>
    <summary type="html">&lt;p&gt;No-as-a-Service (NaaS) is a simple API that returns a random rejection reason. Use it when you need a realistic excuse, a fun ‚Äúno,‚Äù or want to simulate being turned down in style.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;‚ùå No-as-a-Service&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hotheadhacker/no-as-a-service/main/assets/imgs/naas-with-no-logo-bunny.png&#34; width=&#34;70%&#34; alt=&#34;No-as-a-Service Banner&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Ever needed a graceful way to say ‚Äúno‚Äù?&lt;br&gt; This tiny API returns random, generic, creative, and sometimes hilarious rejection reasons ‚Äî perfectly suited for any scenario: personal, professional, student life, dev life, or just because.&lt;/p&gt; &#xA;&lt;p&gt;Built for humans, excuses, and humor.&lt;/p&gt; &#xA;&lt;!-- GitAds Sponsorship Badge --&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://docs.gitads.dev/&#34;&gt; &lt;img src=&#34;https://gitads.dev/assets/images/sponsor/camos/camo-3.png&#34; alt=&#34;Sponsored by GitAds&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; This project is &lt;strong&gt;sponsored by &lt;a href=&#34;https://docs.gitads.dev/docs/getting-started/publishers&#34;&gt;GitAds&lt;/a&gt;&lt;/strong&gt;.&lt;br&gt; You can get your GitHub repository sponsored too ‚Äî &lt;a href=&#34;https://docs.gitads.dev/docs/getting-started/publishers&#34;&gt;create your account now&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üöÄ API Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Base URL&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://naas.isalman.dev/no&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Method:&lt;/strong&gt; &lt;code&gt;GET&lt;/code&gt;&lt;br&gt; &lt;strong&gt;Rate Limit:&lt;/strong&gt; &lt;code&gt;120 requests per minute per IP&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üîÑ Example Request&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-http&#34;&gt;GET /no&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;‚úÖ Example Response&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;reason&#34;: &#34;This feels like something Future Me would yell at Present Me for agreeing to.&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use it in apps, bots, landing pages, Slack integrations, rejection letters, or wherever you need a polite (or witty) no.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Self-Hosting&lt;/h2&gt; &#xA;&lt;p&gt;Want to run it yourself? It‚Äôs lightweight and simple.&lt;/p&gt; &#xA;&lt;h3&gt;1. Clone this repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/hotheadhacker/no-as-a-service.git&#xA;cd no-as-a-service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Install dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Start the server&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The API will be live at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://localhost:3000/no&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also change the port using an environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PORT=5000 npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üìÅ Project Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;no-as-service/&#xA;‚îú‚îÄ‚îÄ index.js            # Express API&#xA;‚îú‚îÄ‚îÄ reasons.json        # 1000+ universal rejection reasons&#xA;‚îú‚îÄ‚îÄ package.json&#xA;‚îú‚îÄ‚îÄ .devcontainer.json  # VS Code / Github devcontainer setup&#xA;‚îî‚îÄ‚îÄ README.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üì¶ package.json&lt;/h2&gt; &#xA;&lt;p&gt;For reference, here‚Äôs the package config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;name&#34;: &#34;no-as-service&#34;,&#xA;  &#34;version&#34;: &#34;1.0.0&#34;,&#xA;  &#34;description&#34;: &#34;A lightweight API that returns random rejection or no reasons.&#34;,&#xA;  &#34;main&#34;: &#34;index.js&#34;,&#xA;  &#34;scripts&#34;: {&#xA;    &#34;start&#34;: &#34;node index.js&#34;&#xA;  },&#xA;  &#34;author&#34;: &#34;hotheadhacker&#34;,&#xA;  &#34;license&#34;: &#34;MIT&#34;,&#xA;  &#34;dependencies&#34;: {&#xA;    &#34;express&#34;: &#34;^4.18.2&#34;,&#xA;    &#34;express-rate-limit&#34;: &#34;^7.0.0&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;‚öì Devcontainer&lt;/h2&gt; &#xA;&lt;p&gt;If you open this repo in Github Codespaces, it will automatically use &lt;code&gt;.devcontainer.json&lt;/code&gt; to set up your environment. If you open it in VSCode, it will ask you if you want to reopen it in a container.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Projects Using No-as-a-Service&lt;/h2&gt; &#xA;&lt;p&gt;Here are some projects and websites that creatively integrate &lt;a href=&#34;https://naas.isalman.dev/no&#34;&gt;no-as-a-service&lt;/a&gt; to deliver humorous or programmatic &#34;no&#34; responses:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ZAZPRO/no-as-a-service-rust&#34;&gt;no-as-a-service-rust&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; Rust implementation of this project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://csg-admins.de&#34;&gt;CSG Admins&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; A system administration and gaming service hub using no-as-a-service to provide playful negative responses across some admin panels and commands.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.funnyanswers.lol/no&#34;&gt;FunnyAnswers - /no endpoint&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; A humor-focused API playground that includes a mirror or wrapper for no-as-a-service, perfect for developers exploring fun HTTP-based responses.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/timeuz/frases-aleatorias&#34;&gt;Gerador de Frases Aleat√≥rias (pt-BR)&lt;/a&gt;&lt;/strong&gt; Uma reinterpreta√ß√£o em Python com frases em portugu√™s, frontend e novas categorias.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/omar-jarid/NoAsAnApp&#34;&gt;NoAsAnApp&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; A simple native Android app calling no-as-a-service to provide negative responses.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/YOUR_REPO&#34;&gt;Your Project Here?&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; If you&#39;re using no-as-a-service in your project, open a pull request to be featured here!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Want to use no-as-a-service in your own project? Check out the usage section in this README and start returning &lt;strong&gt;&#34;no&#34;&lt;/strong&gt; like a pro.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üë§ Author&lt;/h2&gt; &#xA;&lt;p&gt;Created with creative stubbornness by &lt;a href=&#34;https://github.com/hotheadhacker&#34;&gt;hotheadhacker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üìÑ License&lt;/h2&gt; &#xA;&lt;p&gt;MIT ‚Äî do whatever, just don‚Äôt say yes when you should say no.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zumerlab/snapdom</title>
    <updated>2025-07-30T01:33:06Z</updated>
    <id>tag:github.com,2025-07-30:/zumerlab/snapdom</id>
    <link href="https://github.com/zumerlab/snapdom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;snapDOM captures HTML elements to images with exceptional speed and accuracy.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;snapDOM&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://zumerlab.github.io/snapdom&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zumerlab/snapdom/main/docs/assets/hero.png&#34; width=&#34;80%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/@zumer/snapdom&#34;&gt; &lt;img alt=&#34;NPM version&#34; src=&#34;https://img.shields.io/npm/v/@zumer/snapdom?style=flat-square&amp;amp;label=Version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/zumerlab/snapdom/graphs/contributors&#34;&gt; &lt;img alt=&#34;GitHub contributors&#34; src=&#34;https://img.shields.io/github/contributors/zumerlab/snapdom?style=flat-square&amp;amp;label=Contributors&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/zumerlab/snapdom/stargazers&#34;&gt; &lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/zumerlab/snapdom?style=flat-square&amp;amp;label=Stars&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/zumerlab/snapdom/network/members&#34;&gt; &lt;img alt=&#34;GitHub forks&#34; src=&#34;https://img.shields.io/github/forks/zumerlab/snapdom?style=flat-square&amp;amp;label=Forks&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/tinchox5&#34;&gt; &lt;img alt=&#34;Sponsor tinchox5&#34; src=&#34;https://img.shields.io/github/sponsors/tinchox5?style=flat-square&amp;amp;label=Sponsor&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/zumerlab/snapdom/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/github/license/zumerlab/snapdom?style=flat-square&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;snapDOM&lt;/strong&gt; is a fast and accurate DOM-to-image capture tool built for &lt;strong&gt;Zumly&lt;/strong&gt;, a zoom-based view transition framework.&lt;/p&gt; &#xA;&lt;p&gt;It captures any HTML element as a scalable SVG image, preserving styles, fonts, background images, pseudo-elements, and even shadow DOM. It also supports export to raster image formats and canvas.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üì∏ Full DOM capture&lt;/li&gt; &#xA; &lt;li&gt;üé® Embedded styles, pseudo-elements, and fonts&lt;/li&gt; &#xA; &lt;li&gt;üñºÔ∏è Export to SVG, PNG, JPG, WebP, or &lt;code&gt;canvas&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚ö° Ultra fast, no dependencies&lt;/li&gt; &#xA; &lt;li&gt;üì¶ 100% based on standard Web APIs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zumerlab.github.io/snapdom/&#34;&gt;https://zumerlab.github.io/snapdom/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;NPM / Yarn&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm i @zumer/snapdom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add @zumer/snapdom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CDN&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/@zumer/snapdom/dist/snapdom.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Script tag (local)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;snapdom.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ES Module&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { snapdom } from &#39;./snapdom.mjs&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Module via CDN&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&#34;module&#34;&amp;gt;&#xA;  import { snapdom } from &#39;https://cdn.jsdelivr.net/npm/@zumer/snapdom/dist/snapdom.mjs&#39;;&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic usage&lt;/h2&gt; &#xA;&lt;h3&gt;Reusable capture&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const el = document.querySelector(&#39;#target&#39;);&#xA;const result = await snapdom(el, { scale: 2 });&#xA;&#xA;const img = await result.toPng();&#xA;document.body.appendChild(img);&#xA;&#xA;await result.download({ format: &#39;jpg&#39;, filename: &#39;my-capture&#39; });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;One-step shortcuts&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const el = document.querySelector(&#39;#target&#39;);&#xA;const png = await snapdom.toPng(el);&#xA;document.body.appendChild(png);&#xA;&#xA;const blob = await snapdom.toBlob(el);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;snapdom(el, options?)&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Returns an object with reusable export methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{&#xA;  url: string;&#xA;  toRaw(): string;&#xA;  toImg(): Promise&amp;lt;HTMLImageElement&amp;gt;;&#xA;  toCanvas(): Promise&amp;lt;HTMLCanvasElement&amp;gt;;&#xA;  toBlob(options?): Promise&amp;lt;Blob&amp;gt;;&#xA;  toPng(options?): Promise&amp;lt;HTMLImageElement&amp;gt;;&#xA;  toJpg(options?): Promise&amp;lt;HTMLImageElement&amp;gt;;&#xA;  toWebp(options?): Promise&amp;lt;HTMLImageElement&amp;gt;;&#xA;  download(options?): Promise&amp;lt;void&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Shortcut methods&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;snapdom.toImg(el, options?)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Returns an &lt;code&gt;HTMLImageElement&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;snapdom.toCanvas(el, options?) &lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Returns a &lt;code&gt;Canvas&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;snapdom.toBlob(el, options?)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Returns an SVG &lt;code&gt;Blob&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;snapdom.toPng(el, options?)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Returns a PNG image&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;snapdom.toJpg(el, options?)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Returns a JPG image&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;snapdom.toWebp(el, options?)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Returns a WebP image&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;snapdom.download(el, options?) &lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Triggers download in specified format&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;p&gt;All capture methods accept an &lt;code&gt;options&lt;/code&gt; object:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Option&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;compress&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Removes redundant styles&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;fast&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Skips idle delay for faster results&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;embedFonts&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Inlines fonts (icon fonts always embedded)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;scale&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Output scale multiplier&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dpr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;devicePixelRatio&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Device pixel ratio&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;width&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Output specific width size&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;height&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Output specific height size&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;backgroundColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;#fff&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fallback color for JPG/WebP&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;quality&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quality for JPG/WebP (0 to 1)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;useProxy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;&#39;&#39;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a proxy for handling CORS images as fallback&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;type&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;svg&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Select &lt;code&gt;png&lt;/code&gt;, &lt;code&gt;jpg&lt;/code&gt;, &lt;code&gt;webp&lt;/code&gt; Blob type&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;exclude&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string[]&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;CSS selectors for elements to exclude&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;function&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Custom filter function ie &lt;code&gt;(el) =&amp;gt; !el.classList.contains(&#39;hidden&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Setting custom dimensions with width and height options&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; options to generate an image with specific dimensions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Fixed width (proportional height)&lt;/strong&gt; Sets a specific width while maintaining the aspect ratio. Height adjusts proportionally.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const result = await snapdom(element, {&#xA;  width: 400 // Outputs a 400px-wide image with auto-scaled height&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Fixed height (proportional width)&lt;/strong&gt; Sets a specific height while maintaining the aspect ratio. Width adjusts proportionally.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const result = await snapdom(element, {&#xA;  height: 200 // Outputs a 200px-tall image with auto-scaled width&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Fixed width and height (may distort image)&lt;/strong&gt; Forces exact dimensions, potentially distorting the image if the aspect ratio differs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const result = await snapdom(element, {&#xA;  width: 800,  // Outputs an 800px √ó 200px image (may stretch/squish content)&#xA;  height: 200&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If &lt;code&gt;scale&lt;/code&gt; is different from 1, it takes priority over width and height. Example: &lt;code&gt;{ scale: 3, width: 500 }&lt;/code&gt; ignores width and scales the image 3x instead.&lt;/p&gt; &#xA;&lt;h3&gt;Cross-Origin Images&lt;/h3&gt; &#xA;&lt;p&gt;By default, snapDOM loads images with &lt;code&gt;crossOrigin=&#34;anonymous&#34;&lt;/code&gt; or &lt;code&gt;crossOrigin=&#34;use-credentials&#34;&lt;/code&gt;. In case fails to get the images, &lt;code&gt;useProxy&lt;/code&gt; can be used to deal with CORS images:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const result = await snapdom(element, {&#xA;  useProxy: &#39;your/proxy/&#39; //Example: &#39;https://corsproxy.io/?url=&#39; or &#39;https://api.allorigins.win/raw?url=&#39;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download options&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{&#xA;  format?: &#34;svg&#34; | &#34;png&#34; | &#34;jpg&#34; | &#34;jpeg&#34; | &#34;webp&#34;; // default: &#34;png&#34;&#xA;  filename?: string;         // default: &#34;capture&#34;&#xA;  backgroundColor?: string;  // optional override&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;preCache()&lt;/code&gt; ‚Äì Optional helper&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;preCache()&lt;/code&gt; function can be used to load external resources (like images and fonts) in advance. It is specially useful when the element to capture is big and complex.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { preCache } from &#39;@zumer/snapdom&#39;;&#xA;&#xA;await preCache(document.body);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { snapdom, preCache } from &#39;./snapdom.mjs&#39;;&#xA;    window.addEventListener(&#39;load&#39;, async () =&amp;gt; {&#xA;    await preCache();&#xA;    console.log(&#39;üì¶ Resources preloaded&#39;);&#xA;    });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Options for &lt;code&gt;preCache()&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;embedFonts&lt;/code&gt; &lt;em&gt;(boolean, default: true)&lt;/em&gt; ‚Äî Inlines non-icon fonts during preload.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;useProxy&lt;/code&gt; &lt;em&gt;(string)&lt;/em&gt; ‚Äî Proxy for handling CORS images as fallback.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Captures &lt;strong&gt;shadow DOM&lt;/strong&gt; and Web Components&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;code&gt;::before&lt;/code&gt;, &lt;code&gt;::after&lt;/code&gt; and &lt;code&gt;::first-letter&lt;/code&gt; pseudo-elements&lt;/li&gt; &#xA; &lt;li&gt;Inlines background images and fonts&lt;/li&gt; &#xA; &lt;li&gt;Handles &lt;strong&gt;Font Awesome&lt;/strong&gt;, &lt;strong&gt;Material Icons&lt;/strong&gt;, and more&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;data-capture=&#34;exclude&#34;&lt;/code&gt; to ignore an element&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;data-capture=&#34;placeholder&#34;&lt;/code&gt; with &lt;code&gt;data-placeholder-text&lt;/code&gt; for masked replacements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;External images should be CORS-accessible (use &lt;code&gt;useProxy&lt;/code&gt; option for handling CORS denied)&lt;/li&gt; &#xA; &lt;li&gt;Iframes are not supported&lt;/li&gt; &#xA; &lt;li&gt;When WebP format is used on Safari, it will fallback to PNG rendering.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@font-face&lt;/code&gt; CSS rule is well supported, but if need to use JS &lt;code&gt;FontFace()&lt;/code&gt;, see this workaround &lt;a href=&#34;https://github.com/zumerlab/snapdom/issues/43&#34;&gt;&lt;code&gt;#43&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ö° Performance Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;Snapdom has received &lt;strong&gt;significant performance improvements&lt;/strong&gt; since version &lt;code&gt;v1.8.0&lt;/code&gt;. The following benchmarks compare:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Snapdom (current)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Snapdom v1.8.0&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;html2canvas&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;html-to-image&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Simple elements&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Scenario&lt;/th&gt; &#xA;   &lt;th&gt;Snapdom (current)&lt;/th&gt; &#xA;   &lt;th&gt;Snapdom v1.8.0&lt;/th&gt; &#xA;   &lt;th&gt;html2canvas&lt;/th&gt; &#xA;   &lt;th&gt;html-to-image&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Small (200√ó100)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.4 ms&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1.2 ms&lt;/td&gt; &#xA;   &lt;td&gt;70.3 ms&lt;/td&gt; &#xA;   &lt;td&gt;3.6 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Modal (400√ó300)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.4 ms&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1.1 ms&lt;/td&gt; &#xA;   &lt;td&gt;68.8 ms&lt;/td&gt; &#xA;   &lt;td&gt;3.6 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Page View (1200√ó800)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.4 ms&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1.0 ms&lt;/td&gt; &#xA;   &lt;td&gt;100.5 ms&lt;/td&gt; &#xA;   &lt;td&gt;3.4 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Large Scroll (2000√ó1500)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.4 ms&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1.0 ms&lt;/td&gt; &#xA;   &lt;td&gt;153.1 ms&lt;/td&gt; &#xA;   &lt;td&gt;3.4 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Very Large (4000√ó2000)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.4 ms&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1.0 ms&lt;/td&gt; &#xA;   &lt;td&gt;278.9 ms&lt;/td&gt; &#xA;   &lt;td&gt;4.3 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Complex elements&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Scenario&lt;/th&gt; &#xA;   &lt;th&gt;Snapdom (current)&lt;/th&gt; &#xA;   &lt;th&gt;Snapdom v1.8.0&lt;/th&gt; &#xA;   &lt;th&gt;html2canvas&lt;/th&gt; &#xA;   &lt;th&gt;html-to-image&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Small (200√ó100)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;1.1 ms&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3.2 ms&lt;/td&gt; &#xA;   &lt;td&gt;76.0 ms&lt;/td&gt; &#xA;   &lt;td&gt;15.3 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Modal (400√ó300)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;4.5 ms&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;14.0 ms&lt;/td&gt; &#xA;   &lt;td&gt;133.2 ms&lt;/td&gt; &#xA;   &lt;td&gt;55.4 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Page View (1200√ó800)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;32.9 ms&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;113.6 ms&lt;/td&gt; &#xA;   &lt;td&gt;303.4 ms&lt;/td&gt; &#xA;   &lt;td&gt;369.1 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Large Scroll (2000√ó1500)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;133.9 ms&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;387.4 ms&lt;/td&gt; &#xA;   &lt;td&gt;594.4 ms&lt;/td&gt; &#xA;   &lt;td&gt;1,163.0 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Very Large (4000√ó2000)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;364.0 ms&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1,200.4 ms&lt;/td&gt; &#xA;   &lt;td&gt;1,380.8 ms&lt;/td&gt; &#xA;   &lt;td&gt;3,023.9 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Summary&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Snapdom (current) is &lt;strong&gt;2√ó‚Äì6√ó faster&lt;/strong&gt; than &lt;code&gt;v1.8.0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Up to &lt;strong&gt;150√ó faster&lt;/strong&gt; than &lt;code&gt;html2canvas&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Up to &lt;strong&gt;8√ó faster&lt;/strong&gt; than &lt;code&gt;html-to-image&lt;/code&gt; in large scenarios&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;sub&gt;Benchmarks run in Chromium using Vitest.&lt;br&gt; Hardware: MacBook Air 2018.&lt;br&gt; ‚ö†Ô∏è Performance may vary depending on device.&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Run the benchmarks&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/zumerlab/snapdom.git&#xA;cd snapdom&#xA;npm install&#xA;npm run test:benchmark&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To contribute or build snapDOM locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Clone the repository&#xA;git clone https://github.com/zumerlab/snapdom.git&#xA;cd snapdom&#xA;&#xA;# Switch to dev branch&#xA;git checkout dev&#xA;&#xA;# Install dependencies&#xA;npm install&#xA;&#xA;# Compile the library (ESM, CJS, and minified versions)&#xA;npm run compile&#xA;&#xA;# Install playwright browsers (necessary for running tests)&#xA;npx playwright install&#xA;&#xA;# Run tests&#xA;npm test&#xA;&#xA;# Run Benchmarks&#xA;npm run test:benchmark&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The main entry point is in &lt;code&gt;src/&lt;/code&gt;, and output bundles are generated in the &lt;code&gt;dist/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;For detailed contribution guidelines, please see &lt;a href=&#34;https://github.com/zumerlab/snapdom/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors üôå&lt;/h2&gt; &#xA;&lt;!-- CONTRIBUTORS:START --&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/tinchox5&#34; title=&#34;tinchox5&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11557901?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;tinchox5&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tarwin&#34; title=&#34;tarwin&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/646149?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;tarwin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/17biubiu&#34; title=&#34;17biubiu&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/13295895?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;17biubiu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/av01d&#34; title=&#34;av01d&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6247646?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;av01d&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pedrocateexte&#34; title=&#34;pedrocateexte&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/207524750?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;pedrocateexte&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/domialex&#34; title=&#34;domialex&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4694217?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;domialex&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/elliots&#34; title=&#34;elliots&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/622455?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;elliots&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jswhisperer&#34; title=&#34;jswhisperer&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1177690?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;jswhisperer&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sharuzzaman&#34; title=&#34;sharuzzaman&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7421941?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;sharuzzaman&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/simon1uo&#34; title=&#34;simon1uo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/60037549?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;simon1uo&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/titoBouzout&#34; title=&#34;titoBouzout&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/64156?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;titoBouzout&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jhbae200&#34; title=&#34;jhbae200&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20170610?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;jhbae200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/miusuncle&#34; title=&#34;miusuncle&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7549857?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;miusuncle&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rbbydotdev&#34; title=&#34;rbbydotdev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/101137670?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;rbbydotdev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kohaiy&#34; title=&#34;kohaiy&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15622127?v=4&amp;amp;s=100&#34; style=&#34;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&#34; alt=&#34;kohaiy&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;!-- CONTRIBUTORS:END --&gt; &#xA;&lt;h2&gt;üíñ Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://github.com/megaphonecolin&#34;&gt;@megaphonecolin&lt;/a&gt; for supporting this project!&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to support this project too, you can &lt;a href=&#34;https://github.com/sponsors/tinchox5&#34;&gt;become a sponsor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT ¬© Zumerlab&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>eoao/cloud-mail</title>
    <updated>2025-07-30T01:33:06Z</updated>
    <id>tag:github.com,2025-07-30:/eoao/cloud-mail</id>
    <link href="https://github.com/eoao/cloud-mail" rel="alternate"></link>
    <summary type="html">&lt;p&gt;cloudflare email ÈÇÆÁÆ± ‰∏¥Êó∂ÈÇÆÁÆ± ÈÇÆ‰ª∂ÂèëÈÄÅ mail&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/doc/demo/logo.png&#34; width=&#34;80px&#34;&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Cloud Mail&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h4&gt;‰ΩøÁî®Vue3ÂºÄÂèëÁöÑÂìçÂ∫îÂºèÁÆÄÁ∫¶ÈÇÆÁÆ±ÊúçÂä°ÔºåÊîØÊåÅÈÇÆ‰ª∂ÂèëÈÄÅÈôÑ‰ª∂Êî∂ÂèëÔºåÂèØ‰ª•ÈÉ®ÁΩ≤Âà∞Cloudflare‰∫ëÂπ≥Âè∞ÂÆûÁé∞ÂÖçË¥πÁôΩÂ´ñüéâ&lt;/h4&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;span&gt;ÁÆÄ‰Ωì‰∏≠Êñá | &lt;a href=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/README-en.md&#34; style=&#34;margin-left: 5px&#34;&gt;English &lt;/a&gt;&lt;/span&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;È°πÁõÆÁÆÄ‰ªã&lt;/h2&gt; &#xA;&lt;p&gt;Âè™ÈúÄË¶Å‰∏Ä‰∏™ÂüüÂêçÔºåÂ∞±ÂèØ‰ª•ÂàõÂª∫Â§ö‰∏™‰∏çÂêåÁöÑÈÇÆÁÆ±ÔºåÁ±ª‰ººÂêÑÂ§ßÈÇÆÁÆ±Âπ≥Âè∞ QQÈÇÆÁÆ±ÔºåË∞∑Ê≠åÈÇÆÁÆ±Á≠âÔºåÊú¨È°πÁõÆ‰ΩøÁî®Cloud flareÈÉ®ÁΩ≤ÔºåResendÊé®ÈÄÅÈÇÆ‰ª∂ÔºåÊó†ÈúÄÊúçÂä°Âô®Ë¥πÁî®ÔºåÊê≠Âª∫Â±û‰∫éËá™Â∑±ÁöÑÈÇÆÁÆ±ÊúçÂä°&lt;/p&gt; &#xA;&lt;h2&gt;È°πÁõÆÂ±ïÁ§∫&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://skymail.ink&#34;&gt;&lt;strong&gt;üëâ Âú®Á∫øÊºîÁ§∫&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://doc.skymail.ink&#34;&gt;&lt;strong&gt;üëâ Â∞èÁôΩ‰øùÂßÜÊïôÁ®ã-ÁïåÈù¢ÈÉ®ÁΩ≤&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/doc/demo/demo1.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/doc/demo/demo2.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/doc/demo/demo3.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/doc/demo/demo4.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/doc/demo/demo5.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/doc/demo/demo6.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/doc/demo/demo7.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/doc/demo/demo8.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;ÂäüËÉΩ‰ªãÁªç&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üí∞ÂÖçË¥πÁôΩÂ´ñ&lt;/strong&gt;ÔºöÊó†ÈúÄÊúçÂä°Âô®ÔºåÈÉ®ÁΩ≤Âà∞Cloudflare Workers ÂÖçË¥π‰ΩøÁî®Ôºå‰∏çË¶ÅÈí±&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üíªÂìçÂ∫îÂºèËÆæËÆ°&lt;/strong&gt;ÔºöÂìçÂ∫îÂºèÂ∏ÉÂ±ÄËá™Âä®ÈÄÇÈÖçPCÂíåÂ§ßÈÉ®ÂàÜÊâãÊú∫Á´ØÊµèËßàÂô®&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üìßÈÇÆ‰ª∂ÂèëÈÄÅ&lt;/strong&gt;ÔºöÈõÜÊàêresendÂèëÈÄÅÈÇÆ‰ª∂ÔºåÊîØÊåÅÁæ§ÂèëÔºåÂÜÖÂµåÂõæÁâáÂíåÈôÑ‰ª∂ÂèëÈÄÅÔºåÂèëÈÄÅÁä∂ÊÄÅÊü•Áúã&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üõ°Ô∏èÁÆ°ÁêÜÂëòÂäüËÉΩ&lt;/strong&gt;ÔºöÂèØ‰ª•ÂØπÁî®Êà∑ÔºåÈÇÆ‰ª∂ËøõË°åÁÆ°ÁêÜÔºåRABCÊùÉÈôêÊéßÂà∂ÂØπÂäüËÉΩÂèä‰ΩøÁî®ËµÑÊ∫êÈôêÂà∂&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üîÄÂ§öÂè∑Ê®°Âºè&lt;/strong&gt;ÔºöÂºÄÂêØÂêé‰∏Ä‰∏™Áî®Êà∑ÂèØ‰ª•Ê∑ªÂä†Â§ö‰∏™ÈÇÆÁÆ±ÔºåÈªòËÆ§‰∏ÄÁî®Êà∑‰∏ÄÈÇÆÁÆ±ÔºåÁ±ª‰ººÂêÑÂ§ßÈÇÆÁÆ±Âπ≥Âè∞&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üì¶ÈôÑ‰ª∂Êî∂Âèë&lt;/strong&gt;ÔºöÊîØÊåÅÊî∂ÂèëÈôÑ‰ª∂Ôºå‰ΩøÁî®R2ÂØπË±°Â≠òÂÇ®‰øùÂ≠òÂíå‰∏ãËΩΩÊñá‰ª∂&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üîîÈÇÆ‰ª∂Êé®ÈÄÅ&lt;/strong&gt;ÔºöÊé•Êî∂ÈÇÆ‰ª∂ÂêéÂèØ‰ª•ËΩ¨ÂèëÂà∞TGÊú∫Âô®‰∫∫ÊàñÂÖ∂‰ªñÊúçÂä°ÂïÜÈÇÆÁÆ±&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üìàÊï∞ÊçÆÂèØËßÜÂåñ&lt;/strong&gt;Ôºö‰ΩøÁî®echartsÂØπÁ≥ªÁªüÊï∞ÊçÆËØ¶ÊÉÖÔºåÁî®Êà∑ÈÇÆ‰ª∂Â¢ûÈïøÂèØËßÜÂåñÊòæÁ§∫&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;‚≠êÊòüÊ†áÈÇÆ‰ª∂&lt;/strong&gt;ÔºöÊ†áËÆ∞ÈáçË¶ÅÈÇÆ‰ª∂Ôºå‰ª•‰æøÂø´ÈÄüÊü•ÈòÖ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üé®‰∏™ÊÄßÂåñËÆæÁΩÆ&lt;/strong&gt;ÔºöÂèØ‰ª•Ëá™ÂÆö‰πâÁΩëÁ´ôÊ†áÈ¢òÔºåÁôªÂΩïËÉåÊôØÔºåÈÄèÊòéÂ∫¶&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;‚öôÔ∏èÂäüËÉΩËÆæÁΩÆ&lt;/strong&gt;ÔºöÂèØ‰ª•ÂØπÊ≥®ÂÜåÔºåÈÇÆ‰ª∂ÂèëÈÄÅÔºåÊ∑ªÂä†Á≠âÂäüËÉΩÂÖ≥Èó≠ÂíåÂºÄÂêØÔºåËÆæ‰∏∫ÁßÅ‰∫∫Á´ôÁÇπ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ü§ñ‰∫∫Êú∫È™åËØÅ&lt;/strong&gt;ÔºöÈõÜÊàêTurnstile‰∫∫Êú∫È™åËØÅÔºåÈò≤Ê≠¢‰∫∫Êú∫ÊâπÈáèÊ≥®ÂÜå&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;üìúÊõ¥Â§öÂäüËÉΩ&lt;/strong&gt;ÔºöÊ≠£Âú®ÂºÄÂèë‰∏≠...&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÊäÄÊúØÊ†à&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ê°ÜÊû∂&lt;/strong&gt;Ôºö&lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue3&lt;/a&gt; + &lt;a href=&#34;https://element-plus.org/&#34;&gt;Element Plus&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;WebÊ°ÜÊû∂&lt;/strong&gt;Ôºö&lt;a href=&#34;https://hono.dev/&#34;&gt;Hono&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ORMÔºö&lt;/strong&gt;&lt;a href=&#34;https://orm.drizzle.team/&#34;&gt;Drizzle&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Âπ≥Âè∞Ôºö&lt;/strong&gt; &lt;a href=&#34;https://developers.cloudflare.com/workers/&#34;&gt;Cloudflare workers&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ÈÇÆ‰ª∂Êé®ÈÄÅÔºö&lt;/strong&gt; &lt;a href=&#34;https://resend.com/&#34;&gt;Resend&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ÁºìÂ≠ò&lt;/strong&gt;Ôºö&lt;a href=&#34;https://developers.cloudflare.com/kv/&#34;&gt;Cloudflare KV&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Êï∞ÊçÆÂ∫ì&lt;/strong&gt;Ôºö&lt;a href=&#34;https://developers.cloudflare.com/d1/&#34;&gt;Cloudflare D1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Êñá‰ª∂Â≠òÂÇ®&lt;/strong&gt;Ôºö&lt;a href=&#34;https://developers.cloudflare.com/r2/&#34;&gt;Cloudflare R2&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‰ΩøÁî®ÊïôÁ®ã&lt;/h2&gt; &#xA;&lt;h3&gt;ÁéØÂ¢ÉË¶ÅÊ±Ç&lt;/h3&gt; &#xA;&lt;p&gt;Nodejs v18.20 +&lt;/p&gt; &#xA;&lt;p&gt;Cloudflare Ë¥¶Âè∑ (ÈúÄË¶ÅÁªëÂÆöÂüüÂêç)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ÂÖãÈöÜÈ°πÁõÆÂà∞Êú¨Âú∞&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/eoao/cloud-mail #ÊãâÂèñ‰ª£Á†Å&#xA;cd cloud-mail/mail-worker #ËøõÂÖ•workerÁõÆÂΩï&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;ÂÆâË£Ö‰æùËµñ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;È°πÁõÆÈÖçÁΩÆ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;mail-worker/wrangler.toml&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[d1_databases]]&#xA;binding = &#34;db&#34;&#x9;&#x9;&#x9;#d1Êï∞ÊçÆÂ∫ìÁªëÂÆöÂêçÈªòËÆ§‰∏çÂèØ‰øÆÊîπ&#xA;database_name = &#34;&#34;&#x9;&#x9;#d1Êï∞ÊçÆÂ∫ìÂêçÂ≠ó&#xA;database_id = &#34;&#34;&#x9;&#x9;#d1Êï∞ÊçÆÂ∫ìid&#xA;&#xA;[[kv_namespaces]]&#xA;binding = &#34;kv&#34;&#x9;&#x9;&#x9;#kvÁªëÂÆöÂêçÈªòËÆ§‰∏çÂèØ‰øÆÊîπ&#xA;id = &#34;&#34;&#x9;&#x9;&#x9;        #kvÊï∞ÊçÆÂ∫ìid&#xA;&#xA;&#xA;[[r2_buckets]]&#xA;binding = &#34;r2&#34;                  #r2ÂØπË±°Â≠òÂÇ®ÁªëÂÆöÂêçÈªòËÆ§‰∏çÂèØ‰øÆÊîπ&#xA;bucket_name = &#34;&#34;&#x9;        #r2ÂØπË±°Â≠òÂÇ®Ê°∂ÁöÑÂêçÂ≠ó&#xA;&#x9;&#xA;&#xA;[assets]&#xA;binding = &#34;assets&#34;&#x9;&#x9;#ÈùôÊÄÅËµÑÊ∫êÁªëÂÆöÂêçÈªòËÆ§‰∏çÂèØ‰øÆÊîπ&#xA;directory = &#34;./dist&#34;&#x9;        #ÂâçÁ´ØvueÈ°πÁõÆÊâìÂåÖÁöÑÈùôÊÄÅËµÑÊ∫êÂ≠òÊîæ‰ΩçÁΩÆ,ÈªòËÆ§dist&#xA;&#xA;[vars]&#xA;orm_log = false&#xA;domain = []&#x9;&#x9;&#x9;#ÈÇÆ‰ª∂ÂüüÂêçÂèØ‰ª•ÈÖçÁΩÆÂ§ö‰∏™Á§∫‰æã: [&#34;example1.com&#34;,&#34;example2.com&#34;]&#xA;admin = &#34;&#34;&#x9;&#x9;        #ÁÆ°ÁêÜÂëòÁöÑÈÇÆÁÆ± Á§∫‰æã: &#34;admin@example.com&#34;&#xA;jwt_secret = &#34;&#34;&#x9;&#x9;&#x9;#ÁôªÂΩïË∫´‰ªΩ‰ª§ÁâåÁöÑÂØÜÈí•,Èöè‰æøÂ°´‰∏Ä‰∏≤Â≠óÁ¨¶‰∏≤&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;ËøúÁ®ãÈÉ®ÁΩ≤&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Âú® Cloudflare ÊéßÂà∂Âè∞ÂàõÂª∫KVÔºåD1Êï∞ÊçÆÂ∫ìÔºåR2ÂØπË±°Â≠òÂÇ®&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Âú®È°πÁõÆÁõÆÂΩï &lt;code&gt;mail-worker/wrangler.toml&lt;/code&gt; ÈÖçÁΩÆÊñá‰ª∂‰∏≠ÈÖçÁΩÆÂØπÂ∫îÁéØÂ¢ÉÂèòÈáèÔºå‰ª•ÂèäÂàõÂª∫ÁöÑÊï∞ÊçÆÂ∫ìidÂíåÂêçÁß∞&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ÊâßË°åËøúÁ®ãÈÉ®ÁΩ≤ÂëΩ‰ª§&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm run deploy &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Âú®Cloudflare‚ÜíË¥¶Êà∑‰∏ªÈ°µ‚Üí‰Ω†ÁöÑÂüüÂêç‚ÜíÁîµÂ≠êÈÇÆ‰ª∂‚ÜíÁîµÂ≠êÈÇÆ‰ª∂Ë∑ØÁî±‚ÜíË∑ØÁî±ËßÑÂàô‚ÜíCatch-allÂú∞ÂùÄÔºåÁºñËæëÂèëÈÄÅÂà∞worker&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ÊµèËßàÂô®ËæìÂÖ• &lt;code&gt;https://‰Ω†ÁöÑÈ°πÁõÆÂüüÂêç/api/init/‰Ω†ÁöÑjwt_secret&lt;/code&gt; ÂàùÂßãÂåñÊàñÊõ¥Êñ∞ d1ÂíåkvÊï∞ÊçÆÂ∫ì&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ÈÉ®ÁΩ≤ÂÆåÊàêÁôªÂΩïÁΩëÁ´ôÔºå‰ΩøÁî®ÁÆ°ÁêÜÂëòË¥¶Âè∑ÂèØ‰ª•Âú®ËÆæÁΩÆÈ°µÈù¢Ê∑ªÂä†ÈÖçÁΩÆ R2ÂüüÂêç TurnstileÂØÜÈí• Á≠â&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/doc/github-action.md&#34;&gt;üëâ ‰ΩøÁî® Github Action ÈÉ®ÁΩ≤&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Êú¨Âú∞ËøêË°å&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Êú¨Âú∞ËøêË°åÔºåÊï∞ÊçÆÂ∫ìÔºåÂØπË±°Â≠òÂÇ®‰ºöËá™Âä®ÂÆâË£ÖÔºåÊó†ÈúÄÂàõÂª∫ÔºåÊï∞ÊçÆÂ∫ìÊï∞ÊçÆ‰øùÂ≠òÂú® &lt;code&gt;mail-worker/.wrangler&lt;/code&gt; Êñá‰ª∂Â§π&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm run dev &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ÊµèËßàÂô®ËæìÂÖ• &lt;code&gt;http://127.0.0.1:8787/api/init/‰Ω†ÁöÑjwt_secret&lt;/code&gt; ÂàùÂßãÂåñd1ÂíåkvÊï∞ÊçÆÂ∫ì&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Êú¨Âú∞ËøêË°åÈ°πÁõÆËÆæÁΩÆÈ°µÈù¢r2ÂüüÂêçÂèØËÆæÁΩÆ‰∏∫ &lt;code&gt;http://127.0.0.1:8787/api/file&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;ÈÇÆ‰ª∂ÂèëÈÄÅ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Âú® resend ÂÆòÁΩëÊ≥®ÂÜåÂêéÔºåÁÇπÂáªÂ∑¶‰æß Domains Ê∑ªÂä†Âπ∂È™åËØÅ‰Ω†ÁöÑÂüüÂêçÔºåÁ≠âÂæÖÈ™åËØÅÂÆåÊàê&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ÁÇπÂáªÂ∑¶‰æß Api Keys ÂàõÂª∫Á´ãapi keyÔºå Â§çÂà∂tokenÂõûÂà∞È°πÁõÆÁΩëÁ´ôËÆæÁΩÆÈ°µÈù¢Ê∑ªÂä† resend token&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ÁÇπÂáªÂ∑¶‰æß Webhooks Ê∑ªÂä†ÂõûË∞ÉÂú∞ÂùÄ &lt;code&gt;https://‰Ω†ÁöÑÈ°πÁõÆÂüüÂêç/api/webhooks&lt;/code&gt;&lt;/p&gt; &lt;p&gt;ÂãæÈÄâ‚úÖ (email.bounced email.complained email.delivered email.delivery_delayed)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;È°πÁõÆÊõ¥Êñ∞&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Êõ¥Êñ∞ÂêéÈúÄË¶ÅÊâßË°å &lt;code&gt;https://‰Ω†ÁöÑÈ°πÁõÆÂüüÂêç/api/init/‰Ω†ÁöÑjwt_secret&lt;/code&gt; Êù•ÂêåÊ≠•Êï∞ÊçÆÂ∫ìÁªìÊûÑ&lt;/p&gt; &#xA;&lt;h2&gt;ËµûÂä©&lt;/h2&gt; &#xA;&lt;a href=&#34;https://support.skymail.ink&#34;&gt; &lt;img width=&#34;170px&#34; src=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/doc/images/support.png&#34; alt=&#34;&#34;&gt; &lt;/a&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;ÁâπÂà´ËµûÂä©ÂïÜ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dartnode.com&#34;&gt;DartNode&lt;/a&gt;ÔºöÊèê‰æõ‰∫ëËÆ°ÁÆóÊúçÂä°ËµÑÊ∫êÊîØÊåÅ&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dartnode.com&#34; title=&#34;Powered by DartNode - Free VPS for Open Source&#34;&gt;&lt;img src=&#34;https://dartnode.com/branding/DN-Open-Source-sm.png&#34; alt=&#34;Powered by DartNode&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ËÆ∏ÂèØËØÅ&lt;/h2&gt; &#xA;&lt;p&gt;Êú¨È°πÁõÆÈááÁî® &lt;a href=&#34;https://raw.githubusercontent.com/eoao/cloud-mail/main/LICENSE&#34;&gt;MIT&lt;/a&gt; ËÆ∏ÂèØËØÅ&lt;/p&gt; &#xA;&lt;h2&gt;‰∫§ÊµÅ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/cloud_mail_tg&#34;&gt;Telegram&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>