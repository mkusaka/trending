<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-28T01:31:25Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>browserslist/browserslist</title>
    <updated>2024-12-28T01:31:25Z</updated>
    <id>tag:github.com,2024-12-28:/browserslist/browserslist</id>
    <link href="https://github.com/browserslist/browserslist" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü¶î Share target browsers between different front-end tools, like Autoprefixer, Stylelint and babel-preset-env&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Browserslist &lt;a href=&#34;https://cultofmartians.com/done.html&#34;&gt;&lt;img src=&#34;https://cultofmartians.com/assets/badges/badge.svg?sanitize=true&#34; alt=&#34;Cult Of Martians&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img width=&#34;120&#34; height=&#34;120&#34; alt=&#34;Browserslist logo by Anton Popov&#34; src=&#34;https://browsersl.ist/logo.svg?sanitize=true&#34; align=&#34;right&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The config to share target browsers and Node.js versions between different front-end tools. It is used in:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/postcss/autoprefixer&#34;&gt;Autoprefixer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/babel/babel/tree/master/packages/babel-preset-env&#34;&gt;Babel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/csstools/postcss-plugins/tree/main/plugin-packs/postcss-preset-env&#34;&gt;postcss-preset-env&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amilajack/eslint-plugin-compat&#34;&gt;eslint-plugin-compat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ismay/stylelint-no-unsupported-browser-features&#34;&gt;stylelint-no-unsupported-browser-features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/csstools/postcss-normalize&#34;&gt;postcss-normalize&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ElemeFE/obsolete-webpack-plugin&#34;&gt;obsolete-webpack-plugin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All tools will find target browsers automatically, when&amp;nbsp;you&amp;nbsp;add&amp;nbsp;the&amp;nbsp;following to &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;browserslist&#34;: [&#xA;    &#34;defaults and fully supports es6-module&#34;,&#xA;    &#34;maintained node versions&#34;&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or in &lt;code&gt;.browserslistrc&lt;/code&gt; config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# Browsers that we support&#xA;&#xA;defaults and fully supports es6-module&#xA;maintained node versions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Developers set their version lists using queries like &lt;code&gt;last 2 versions&lt;/code&gt; to be free from updating versions manually. Browserslist&amp;nbsp;will&amp;nbsp;use &lt;a href=&#34;https://github.com/ben-eb/caniuse-lite&#34;&gt;&lt;code&gt;caniuse-lite&lt;/code&gt;&lt;/a&gt; with&amp;nbsp;&lt;a href=&#34;https://caniuse.com/&#34;&gt;Can I Use&lt;/a&gt; data for this queries.&lt;/p&gt; &#xA;&lt;p&gt;You can check how config works at our playground: &lt;a href=&#34;https://browsersl.ist/&#34;&gt;&lt;code&gt;browsersl.ist&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://browsersl.ist/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/img/screenshot.webp&#34; alt=&#34;browsersl.ist website&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://evilmartians.com/?utm_source=browserslist&#34;&gt;&lt;img src=&#34;https://evilmartians.com/badges/sponsored-by-evil-martians.svg?sanitize=true&#34; alt=&#34;Sponsored by Evil Martians&#34; width=&#34;236&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&#xA; &lt;a href=&#34;https://cube.dev/?ref=eco-browserslist-github&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/986756/154330861-d79ab8ec-aacb-4af8-9e17-1b28f1eccb01.svg?sanitize=true&#34; alt=&#34;Supported by Cube&#34; width=&#34;227&#34; height=&#34;46&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#tools&#34;&gt;Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#best-practices&#34;&gt;Best Practices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#queries&#34;&gt;Queries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#config-file&#34;&gt;Config File&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#shareable-configs&#34;&gt;Shareable Configs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#configuring-for-different-environments&#34;&gt;Configuring for Different Environments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#custom-usage-data&#34;&gt;Custom Usage Data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#js-api&#34;&gt;JS API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#environment-variables&#34;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#cache&#34;&gt;Cache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#security-contact&#34;&gt;Security Contact&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#for-enterprise&#34;&gt;For Enterprise&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Browserslist needs your support. We are accepting donations &lt;a href=&#34;https://opencollective.com/browserslist&#34;&gt;at Open Collective&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.springernature.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/19343/227742503-cf7fc2b3-9cc4-481c-97b8-68414d762fda.png&#34; alt=&#34;Sponsored by Springer Nature Technology&#34; width=&#34;154&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://workleap.com/&#34;&gt;&lt;img src=&#34;https://workleap.com/wp-content/uploads/2023/05/workleap-logo.svg?sanitize=true&#34; alt=&#34;Sponsored by Workleap&#34; width=&#34;154&#34; height=&#34;40&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;h3&gt;Analyze your Browserslist Config&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npx browserslist&lt;/code&gt; in your project directory to see project‚Äôs target browsers. This CLI tool is built-in and available in&amp;nbsp;any project with Autoprefixer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/browserslist/lint/&#34;&gt;&lt;code&gt;browserslist-lint&lt;/code&gt;&lt;/a&gt; checks your config for popular mistakes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Update &lt;code&gt;caniuse-lite&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/browserslist/update-db&#34;&gt;&lt;code&gt;update-browserslist-db&lt;/code&gt;&lt;/a&gt; is a CLI tool to update browsers DB for queries like &lt;code&gt;last 2 version&lt;/code&gt; or &lt;code&gt;&amp;gt;1%&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/c2corg/browserslist-update-action&#34;&gt;&lt;code&gt;browserslist-update-action&lt;/code&gt;&lt;/a&gt; is a GitHub Action to automatically run &lt;code&gt;update-browserslist-db&lt;/code&gt; and proposes a pull request to merge updates.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Show ‚ÄúWe do not support your browser‚Äù Banner&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/browserslist/browserslist-useragent-regexp&#34;&gt;&lt;code&gt;browserslist-useragent-regexp&lt;/code&gt;&lt;/a&gt; compiles Browserslist query to a RegExp to test browser useragent.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/browserslist/browserslist-useragent-ruby&#34;&gt;&lt;code&gt;browserslist-useragent-ruby&lt;/code&gt;&lt;/a&gt; is a Ruby library to check browser by user agent string to match Browserslist.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Get Statistics for &lt;code&gt;&amp;gt;5% in my stats&lt;/code&gt;:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/browserslist/browserslist-ga&#34;&gt;&lt;code&gt;browserslist-ga&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/browserslist/browserslist-ga-export&#34;&gt;&lt;code&gt;browserslist-ga-export&lt;/code&gt;&lt;/a&gt; download your website browsers statistics to&amp;nbsp;use&amp;nbsp;it&amp;nbsp;in &lt;code&gt;&amp;gt; 0.5% in my stats&lt;/code&gt; query.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/syntactic-salt/browserslist-new-relic&#34;&gt;&lt;code&gt;browserslist-new-relic&lt;/code&gt;&lt;/a&gt; generates a custom usage data file for Browserslist&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xeroxinteractive/browserslist-adobe-analytics&#34;&gt;&lt;code&gt;browserslist-adobe-analytics&lt;/code&gt;&lt;/a&gt; uses Adobe Analytics data to target browsers from your New Relic Browser data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Others&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/g-plane/browserslist-rs&#34;&gt;&lt;code&gt;browserslist-rs&lt;/code&gt;&lt;/a&gt; is a Browserslist port to Rust.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xeroxinteractive/browserslist-browserstack&#34;&gt;&lt;code&gt;browserslist-browserstack&lt;/code&gt;&lt;/a&gt; runs BrowserStack tests for all browsers in Browserslist config.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Text Editors&lt;/h3&gt; &#xA;&lt;p&gt;These extensions will add syntax highlighting for &lt;code&gt;.browserslistrc&lt;/code&gt; files.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=webben.browserslist&#34;&gt;VS Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/browserslist/vim-browserslist&#34;&gt;Vim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/plugin/16139-browserslist&#34;&gt;WebStorm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Best Practices&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;There is a &lt;code&gt;defaults&lt;/code&gt; query, which gives a reasonable configuration for most users:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;browserslist&#34;: [&#xA;    &#34;defaults&#34;&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to change the default set of browsers, we recommend including &lt;code&gt;last 2 versions, not dead, &amp;gt; 0.2%&lt;/code&gt;. This is because &lt;code&gt;last n versions&lt;/code&gt; on its own does not add popular old versions, while only using a percentage of usage numbers above &lt;code&gt;0.2%&lt;/code&gt; will in the long run make popular browsers even more popular. We might run into a monopoly and stagnation situation, as we had with Internet Explorer 6. Please use this setting with caution.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select browsers directly (&lt;code&gt;last 2 Chrome versions&lt;/code&gt;) only if you are making a web app for a kiosk with one browser. There&amp;nbsp;are a lot of browsers on the market. If you are making general web app you should respect browsers diversity.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Don‚Äôt remove browsers just because you don‚Äôt know them. Opera Mini has 100 million users in Africa and it is more popular in the global market than Microsoft Edge. Chinese QQ Browsers has more market share than Firefox and desktop Safari combined.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Queries&lt;/h2&gt; &#xA;&lt;p&gt;Browserslist will use browsers and Node.js versions query from one of these sources:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;.browserslistrc&lt;/code&gt; config file in current or parent directories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;browserslist&lt;/code&gt; key in &lt;code&gt;package.json&lt;/code&gt; file in current or parent directories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;browserslist&lt;/code&gt; config file in current or parent directories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BROWSERSLIST&lt;/code&gt; environment variable.&lt;/li&gt; &#xA; &lt;li&gt;If the above methods did not produce a valid result Browserslist will use defaults: &lt;code&gt;&amp;gt; 0.5%, last 2 versions, Firefox ESR, not dead&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Query Composition&lt;/h3&gt; &#xA;&lt;p&gt;An &lt;code&gt;or&lt;/code&gt; combiner can use the keyword &lt;code&gt;or&lt;/code&gt; as well as &lt;code&gt;,&lt;/code&gt;. &lt;code&gt;last 1 version or &amp;gt; 1%&lt;/code&gt; is equal to &lt;code&gt;last 1 version, &amp;gt; 1%&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;and&lt;/code&gt; query combinations are also supported to perform an intersection of all the previous queries: &lt;code&gt;last 1 version or chrome &amp;gt; 75 and &amp;gt; 1%&lt;/code&gt; will select (&lt;code&gt;browser last version&lt;/code&gt; or &lt;code&gt;Chrome since 76&lt;/code&gt;) and &lt;code&gt;more than 1% marketshare&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are 3 different ways to combine queries as depicted below. First you start with a single query and then we combine the&amp;nbsp;queries to get our final list.&lt;/p&gt; &#xA;&lt;p&gt;Obviously you can &lt;em&gt;not&lt;/em&gt; start with a &lt;code&gt;not&lt;/code&gt; combiner, since there is no left-hand side query to&amp;nbsp;combine&amp;nbsp;it&amp;nbsp;with. The left-hand is always resolved as &lt;code&gt;and&lt;/code&gt; combiner even if &lt;code&gt;or&lt;/code&gt; is used (this is an API implementation specificity).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Query combiner type&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Illustration&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;or&lt;/code&gt;/&lt;code&gt;,&lt;/code&gt; combiner &lt;br&gt; (union)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/img/union.svg?sanitize=true&#34; alt=&#34;Union of queries&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;gt; .5% or last 2 versions&lt;/code&gt; &lt;br&gt; &lt;code&gt;&amp;gt; .5%, last 2 versions&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;and&lt;/code&gt; combiner &lt;br&gt; (intersection)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/img/intersection.svg?sanitize=true&#34; alt=&#34;intersection of queries&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;gt; .5% and last 2 versions&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;not&lt;/code&gt; combiner &lt;br&gt; (relative complement)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/img/complement.svg?sanitize=true&#34; alt=&#34;Relative complement of queries&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;These three are equivalent to one another: &lt;br&gt; &lt;code&gt;&amp;gt; .5% and not last 2 versions&lt;/code&gt; &lt;br&gt; &lt;code&gt;&amp;gt; .5% or not last 2 versions&lt;/code&gt; &lt;br&gt; &lt;code&gt;&amp;gt; .5%, not last 2 versions&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;A quick way to test your query is to do &lt;code&gt;npx browserslist &#39;&amp;gt; 0.3%, not dead&#39;&lt;/code&gt; in your terminal.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Full List&lt;/h3&gt; &#xA;&lt;p&gt;You can specify the browser and Node.js versions by queries (case insensitive):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;defaults&lt;/code&gt;: Browserslist‚Äôs default browsers (&lt;code&gt;&amp;gt; 0.5%, last 2 versions, Firefox ESR, not dead&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;By usage statistics: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;&amp;gt; 5%&lt;/code&gt;: browsers versions selected by global usage statistics. &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;lt;=&lt;/code&gt; work too.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&amp;gt; 5% in US&lt;/code&gt;: uses USA usage statistics. It accepts &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements&#34;&gt;two-letter country code&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&amp;gt; 5% in alt-AS&lt;/code&gt;: uses Asia region usage statistics. List of all region codes can be found at &lt;a href=&#34;https://github.com/ben-eb/caniuse-lite/tree/main/data/regions&#34;&gt;&lt;code&gt;caniuse-lite/data/regions&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&amp;gt; 5% in my stats&lt;/code&gt;: uses &lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#custom-usage-data&#34;&gt;custom usage data&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&amp;gt; 5% in browserslist-config-mycompany stats&lt;/code&gt;: uses &lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#custom-usage-data&#34;&gt;custom usage data&lt;/a&gt; from &lt;code&gt;browserslist-config-mycompany/browserslist-stats.json&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cover 99.5%&lt;/code&gt;: most popular browsers that provide coverage.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cover 99.5% in US&lt;/code&gt;: same as above, with &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements&#34;&gt;two-letter country code&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cover 99.5% in my stats&lt;/code&gt;: uses &lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/#custom-usage-data&#34;&gt;custom usage data&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Last versions: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;last 2 versions&lt;/code&gt;: the last 2 versions for &lt;em&gt;each&lt;/em&gt; browser.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;last 2 Chrome versions&lt;/code&gt;: the last 2 versions of Chrome browser.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;last 2 major versions&lt;/code&gt; or &lt;code&gt;last 2 iOS major versions&lt;/code&gt;: all minor/patch releases of last 2 major versions.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dead&lt;/code&gt;: browsers without official support or updates for 24 months. Right now it is &lt;code&gt;IE 11&lt;/code&gt;, &lt;code&gt;IE_Mob 11&lt;/code&gt;, &lt;code&gt;BlackBerry 10&lt;/code&gt;, &lt;code&gt;BlackBerry 7&lt;/code&gt;, &lt;code&gt;Samsung 4&lt;/code&gt;, &lt;code&gt;OperaMobile 12.1&lt;/code&gt; and all versions of &lt;code&gt;Baidu&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Node.js versions: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;node 10&lt;/code&gt; and &lt;code&gt;node 10.4&lt;/code&gt;: selects latest Node.js &lt;code&gt;10.x.x&lt;/code&gt; or &lt;code&gt;10.4.x&lt;/code&gt; release.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;last 2 node versions&lt;/code&gt;: select 2 latest Node.js releases.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;last 2 node major versions&lt;/code&gt;: select 2 latest major-version Node.js releases.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;current node&lt;/code&gt;: Node.js version used by Browserslist right now.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;maintained node versions&lt;/code&gt;: all Node.js versions, which are &lt;a href=&#34;https://github.com/nodejs/Release&#34;&gt;still maintained&lt;/a&gt; by Node.js Foundation.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Browsers versions: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;iOS 7&lt;/code&gt;: the iOS browser version 7 directly. Note, that &lt;code&gt;op_mini&lt;/code&gt; has special version &lt;code&gt;all&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Firefox &amp;gt; 20&lt;/code&gt;: versions of Firefox newer than 20. &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;lt;=&lt;/code&gt; work too. It also works with Node.js.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ie 6-8&lt;/code&gt;: selects an inclusive range of versions.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Firefox ESR&lt;/code&gt;: the latest &lt;a href=&#34;https://support.mozilla.org/en-US/kb/choosing-firefox-update-channel&#34;&gt;Firefox Extended Support Release&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;PhantomJS 2.1&lt;/code&gt; and &lt;code&gt;PhantomJS 1.9&lt;/code&gt;: selects Safari versions similar to PhantomJS runtime.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extends browserslist-config-mycompany&lt;/code&gt;: take queries from &lt;code&gt;browserslist-config-mycompany&lt;/code&gt; npm package.&lt;/li&gt; &#xA; &lt;li&gt;By browser support:&lt;br&gt; In these example queries &lt;code&gt;es6&lt;/code&gt; and &lt;code&gt;es6-module&lt;/code&gt; are the the &lt;code&gt;feat&lt;/code&gt; parameter from the URL of the &lt;a href=&#34;https://caniuse.com/&#34;&gt;Can I Use&lt;/a&gt; page. A list of all available features can be found at &lt;a href=&#34;https://github.com/ben-eb/caniuse-lite/tree/main/data/features&#34;&gt;&lt;code&gt;caniuse-lite/data/features&lt;/code&gt;&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;fully supports es6&lt;/code&gt;: browsers with full support for specific features. For example, &lt;code&gt;fully supports css-grid&lt;/code&gt; will omit Edge 12-15, as those browser versions are marked as &lt;a href=&#34;https://caniuse.com/css-grid&#34;&gt;having partial support&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;partially supports es6-module&lt;/code&gt; or &lt;code&gt;supports es6-module&lt;/code&gt;: browsers with full or partial support for specific features. For example, &lt;code&gt;partially supports css-grid&lt;/code&gt; will include Edge 12-15 support, as those browser versions are marked as &lt;a href=&#34;https://caniuse.com/css-grid&#34;&gt;having partial support&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;browserslist config&lt;/code&gt;: the browsers defined in Browserslist config. Useful in Differential Serving to modify user‚Äôs config like &lt;code&gt;browserslist config and fully supports es6-module&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;since 2015&lt;/code&gt; or &lt;code&gt;last 2 years&lt;/code&gt;: all versions released since year 2015 (also &lt;code&gt;since 2015-03&lt;/code&gt; and &lt;code&gt;since 2015-03-10&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unreleased versions&lt;/code&gt; or &lt;code&gt;unreleased Chrome versions&lt;/code&gt;: alpha and beta versions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;not ie &amp;lt;= 8&lt;/code&gt;: exclude IE 8 and lower from previous queries.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can add &lt;code&gt;not &lt;/code&gt; to any query.&lt;/p&gt; &#xA;&lt;h3&gt;Grammar Definition&lt;/h3&gt; &#xA;&lt;p&gt;There is a &lt;a href=&#34;https://raw.githubusercontent.com/browserslist/browserslist/main/grammar.w3c-ebnf&#34;&gt;grammar specification&lt;/a&gt; about the query syntax, which may be helpful if you&#39;re implementing a parser or something else.&lt;/p&gt; &#xA;&lt;h3&gt;Debug&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;npx browserslist&lt;/code&gt; in a project directory to see which browsers were selected by your queries.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npx browserslist&#xA;and_chr 61&#xA;and_ff 56&#xA;and_qq 1.2&#xA;and_uc 11.4&#xA;android 56&#xA;baidu 7.12&#xA;bb 10&#xA;chrome 62&#xA;edge 16&#xA;firefox 56&#xA;ios_saf 11&#xA;opera 48&#xA;safari 11&#xA;samsung 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Browsers&lt;/h3&gt; &#xA;&lt;p&gt;The following table maps browser names &amp;amp; their target devices into identifiers used by browserslist.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Browser Name&lt;/th&gt; &#xA;   &lt;th&gt;Desktop&lt;/th&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;   &lt;th&gt;Other Mobile&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android (WebView)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Android&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Baidu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Baidu&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BlackBerry&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;BlackBerry&lt;/code&gt;&amp;nbsp;&lt;code&gt;bb&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chrome&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Chrome&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ChromeAndroid&lt;/code&gt;&amp;nbsp;&lt;code&gt;and_chr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚Ü™Ô∏é &lt;code&gt;ios_saf&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Edge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Edge&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚Ü™Ô∏é &lt;code&gt;and_chr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚Ü™Ô∏é &lt;code&gt;ios_saf&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Electron&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Electron&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Firefox&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Firefox&lt;/code&gt;&amp;nbsp;&lt;code&gt;ff&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;FirefoxAndroid&lt;/code&gt;&amp;nbsp;&lt;code&gt;and_ff&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚Ü™Ô∏é &lt;code&gt;ios_saf&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Internet Explorer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Explorer&lt;/code&gt;&amp;nbsp;&lt;code&gt;ie&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ie_mob&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://medium.com/design-at-kai/what-you-didnt-know-about-kaios-browser-53937ea1636&#34;&gt;KaiOS Browser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;kaios&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Opera&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Opera&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;op_mob&lt;/code&gt; &lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚Ü™Ô∏é &lt;code&gt;ios_saf&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Opera_Mini&#34;&gt;Opera Mini&lt;/a&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;OperaMini&lt;/code&gt; &lt;code&gt;op_mini&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/QQ_browser&#34;&gt;QQ browser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;and_qq&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Safari&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Safari&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;iOS&lt;/code&gt; &lt;code&gt;ios_saf&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Samsung Internet&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Samsung&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/UC_Browser&#34;&gt;UC Browser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;UCAndroid&lt;/code&gt;&amp;nbsp;&lt;code&gt;and_uc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;‚Ü™Ô∏é name&lt;/code&gt; implies that the browser uses the same engine captured by &lt;code&gt;name&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;sup&gt;1&lt;/sup&gt; &lt;a href=&#34;https://github.com/Fyrd/caniuse/issues/5602#issuecomment-792385127&#34;&gt;Opera Mobile ‚âà Chrome Android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;sup&gt;2&lt;/sup&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/WebKit&#34;&gt;All iOS browsers use WebKit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;sup&gt;3&lt;/sup&gt; Opera Mini has 2 modes ‚ÄúExtreme‚Äù and ‚ÄúHigh‚Äù for data saving. &lt;code&gt;op_mini&lt;/code&gt; targets at the ‚ÄúExtreme‚Äù one. ‚ÄúHigh‚Äù is compatible with the normal Opera Mobile.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Config File&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you want to reduce config files in project root, you can specify browsers in &lt;code&gt;package.json&lt;/code&gt; with &lt;code&gt;browserslist&lt;/code&gt; key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;private&#34;: true,&#xA;  &#34;dependencies&#34;: {&#xA;    &#34;autoprefixer&#34;: &#34;^6.5.4&#34;&#xA;  },&#xA;  &#34;browserslist&#34;: [&#xA;    &#34;last 1 version&#34;,&#xA;    &#34;&amp;gt; 1%&#34;,&#xA;    &#34;not dead&#34;&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;.browserslistrc&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Separated Browserslist config should be named &lt;code&gt;.browserslistrc&lt;/code&gt; and have browsers queries split by a new line. Each line is combined with the &lt;code&gt;or&lt;/code&gt; combiner. Comments&amp;nbsp;starts&amp;nbsp;with&amp;nbsp;&lt;code&gt;#&lt;/code&gt;&amp;nbsp;symbol:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# Browsers that we support&#xA;&#xA;last 1 version&#xA;&amp;gt; 1%&#xA;not dead # no browsers without security updates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Browserslist will check config in every directory in &lt;code&gt;path&lt;/code&gt;. So, if tool process &lt;code&gt;app/styles/main.css&lt;/code&gt;, you can put config to root, &lt;code&gt;app/&lt;/code&gt; or &lt;code&gt;app/styles&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can specify direct path in &lt;code&gt;BROWSERSLIST_CONFIG&lt;/code&gt; environment variables.&lt;/p&gt; &#xA;&lt;h2&gt;Shareable Configs&lt;/h2&gt; &#xA;&lt;p&gt;You can use the following query to reference an exported Browserslist config from another package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;browserslist&#34;: [&#xA;    &#34;extends browserslist-config-mycompany&#34;&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For security reasons, external configuration only supports packages that have the &lt;code&gt;browserslist-config-&lt;/code&gt; prefix. npm scoped packages are also supported, by naming or prefixing the module with &lt;code&gt;@scope/browserslist-config&lt;/code&gt;, such as &lt;code&gt;@scope/browserslist-config&lt;/code&gt; or &lt;code&gt;@scope/browserslist-config-mycompany&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If&amp;nbsp;you&amp;nbsp;don‚Äôt&amp;nbsp;accept Browserslist queries from users, you can disable the validation by using the or &lt;code&gt;BROWSERSLIST_DANGEROUS_EXTEND&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;BROWSERSLIST_DANGEROUS_EXTEND=1 npx webpack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Because this uses &lt;code&gt;npm&lt;/code&gt;&#39;s resolution, you can also reference specific files in a package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;browserslist&#34;: [&#xA;    &#34;extends browserslist-config-mycompany/desktop&#34;,&#xA;    &#34;extends browserslist-config-mycompany/mobile&#34;&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When writing a shared Browserslist package, just export an array. &lt;code&gt;browserslist-config-mycompany/index.js&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;module.exports = [&#xA;  &#39;last 1 version&#39;,&#xA;  &#39;&amp;gt; 1%&#39;,&#xA;  &#39;not dead&#39;&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also include a &lt;code&gt;browserslist-stats.json&lt;/code&gt; file as part of your shareable config at the root and query it using &lt;code&gt;&amp;gt; 5% in browserslist-config-mycompany stats&lt;/code&gt;. It uses the same format as &lt;code&gt;extends&lt;/code&gt; and the &lt;code&gt;dangerousExtend&lt;/code&gt; property as above.&lt;/p&gt; &#xA;&lt;p&gt;You can export configs for different environments and select environment by &lt;code&gt;BROWSERSLIST_ENV&lt;/code&gt; or &lt;code&gt;env&lt;/code&gt; option in your tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;module.exports = {&#xA;  development: [&#xA;    &#39;last 1 version&#39;&#xA;  ],&#xA;  production: [&#xA;    &#39;last 1 version&#39;,&#xA;    &#39;&amp;gt; 1%&#39;,&#xA;    &#39;not dead&#39;&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuring for Different Environments&lt;/h2&gt; &#xA;&lt;p&gt;You can also specify different browser queries for various environments. Browserslist will choose query according to&amp;nbsp;&lt;code&gt;BROWSERSLIST_ENV&lt;/code&gt; or &lt;code&gt;NODE_ENV&lt;/code&gt; variables. If none of them is declared, Browserslist will firstly look for &lt;code&gt;production&lt;/code&gt; queries and then use defaults.&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;  &#34;browserslist&#34;: {&#xA;    &#34;production&#34;: [&#xA;      &#34;&amp;gt; 1%&#34;,&#xA;      &#34;not dead&#34;&#xA;    ],&#xA;    &#34;modern&#34;: [&#xA;      &#34;last 1 chrome version&#34;,&#xA;      &#34;last 1 firefox version&#34;&#xA;    ],&#xA;    &#34;ssr&#34;: [&#xA;      &#34;node 12&#34;&#xA;    ]&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In &lt;code&gt;.browserslistrc&lt;/code&gt; config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[production]&#xA;&amp;gt; 1%&#xA;not dead&#xA;&#xA;[modern]&#xA;last 1 chrome version&#xA;last 1 firefox version&#xA;&#xA;[ssr]&#xA;node 12&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Custom Usage Data&lt;/h2&gt; &#xA;&lt;p&gt;If you have a website, you can query against the usage statistics of your site. &lt;a href=&#34;https://github.com/browserslist/browserslist-ga&#34;&gt;&lt;code&gt;browserslist-ga&lt;/code&gt;&lt;/a&gt; will ask access to Google Analytics and then generate &lt;code&gt;browserslist-stats.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx browserslist-ga&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can use &lt;a href=&#34;https://github.com/browserslist/browserslist-ga-export&#34;&gt;&lt;code&gt;browserslist-ga-export&lt;/code&gt;&lt;/a&gt; to convert Google Analytics data without giving a password for Google account.&lt;/p&gt; &#xA;&lt;p&gt;You can generate usage statistics file by any other method. File format should be like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{&#xA;  &#34;ie&#34;: {&#xA;    &#34;6&#34;: 0.01,&#xA;    &#34;7&#34;: 0.4,&#xA;    &#34;8&#34;: 1.5&#xA;  },&#xA;  &#34;chrome&#34;: {&#xA;    ‚Ä¶&#xA;  },&#xA;  ‚Ä¶&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that you can query against your custom usage data while also querying against global or regional data. For&amp;nbsp;example,&amp;nbsp;the query &lt;code&gt;&amp;gt; 1% in my stats, &amp;gt; 5% in US, 10%&lt;/code&gt; is permitted.&lt;/p&gt; &#xA;&lt;h2&gt;JS API&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const browserslist = require(&#39;browserslist&#39;)&#xA;&#xA;// Your CSS/JS build tool code&#xA;function process (source, opts) {&#xA;  const browsers = browserslist(opts.overrideBrowserslist, {&#xA;    stats: opts.stats,&#xA;    path:  opts.file,&#xA;    env:   opts.env&#xA;  })&#xA;  // Your code to add features for selected browsers&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Queries can be a string &lt;code&gt;&#34;&amp;gt; 1%, not dead&#34;&lt;/code&gt; or an array &lt;code&gt;[&#39;&amp;gt; 1%&#39;, &#39;not dead&#39;]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If a query is missing, Browserslist will look for a config file. You can provide a &lt;code&gt;path&lt;/code&gt; option (that&amp;nbsp;can&amp;nbsp;be&amp;nbsp;a&amp;nbsp;file) to&amp;nbsp;find&amp;nbsp;the&amp;nbsp;config&amp;nbsp;file relatively to it.&lt;/p&gt; &#xA;&lt;p&gt;Options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;path&lt;/code&gt;: file or a directory path to look for config file. Default is &lt;code&gt;.&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;env&lt;/code&gt;: what environment section use from config. Default is &lt;code&gt;production&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stats&lt;/code&gt;: custom usage statistics data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;config&lt;/code&gt;: path to config if you want to set it manually.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ignoreUnknownVersions&lt;/code&gt;: do not throw on direct query (like &lt;code&gt;ie 12&lt;/code&gt;). Default is &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dangerousExtend&lt;/code&gt;: Disable security checks for &lt;code&gt;extend&lt;/code&gt; query. Default is &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;throwOnMissing&lt;/code&gt;: throw an error if env is not found. Default is &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mobileToDesktop&lt;/code&gt;: Use desktop browsers if Can I Use doesn‚Äôt have data about this mobile version. Can I Use has only data about latest versions of mobile browsers. By default, &lt;code&gt;last 2 and_ff versions&lt;/code&gt; returns &lt;code&gt;and_ff 90&lt;/code&gt; and with this option it returns &lt;code&gt;and_ff 91, and_ff 90&lt;/code&gt;. This option may lead to unknown browser version error (in example Can I Use doesn‚Äôt have data for &lt;code&gt;and_ff 91&lt;/code&gt; yet). Default is &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For non-JS environment and debug purpose you can use CLI tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;browserslist &#34;&amp;gt; 1%, not dead&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can get total users coverage for selected browsers by JS API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;browserslist.coverage(browserslist(&#39;&amp;gt; 1%&#39;))&#xA;//=&amp;gt; 81.4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;browserslist.coverage(browserslist(&#39;&amp;gt; 1% in US&#39;), &#39;US&#39;)&#xA;//=&amp;gt; 83.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;browserslist.coverage(browserslist(&#39;&amp;gt; 1% in my stats&#39;), &#39;my stats&#39;)&#xA;//=&amp;gt; 83.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;browserslist.coverage(browserslist(&#39;&amp;gt; 1% in my stats&#39;, { stats }), stats)&#xA;//=&amp;gt; 82.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or by CLI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ browserslist --coverage &#34;&amp;gt; 1%&#34;&#xA;These browsers account for 81.4% of all users globally&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ browserslist --coverage=US &#34;&amp;gt; 1% in US&#34;&#xA;These browsers account for 83.1% of all users in the US&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ browserslist --coverage &#34;&amp;gt; 1% in my stats&#34;&#xA;These browsers account for 83.1% of all users in custom statistics&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ browserslist --coverage &#34;&amp;gt; 1% in my stats&#34; --stats=./stats.json&#xA;These browsers account for 83.1% of all users in custom statistics&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Environment Variables&lt;/h2&gt; &#xA;&lt;p&gt;If a tool uses Browserslist inside, you can change the Browserslist settings with &lt;a href=&#34;https://en.wikipedia.org/wiki/Environment_variable&#34;&gt;environment variables&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST&lt;/code&gt; with browsers queries.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;BROWSERSLIST=&#34;&amp;gt; 5%&#34; npx webpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST_CONFIG&lt;/code&gt; with path to config file.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;BROWSERSLIST_CONFIG=./config/browserslist npx webpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST_ENV&lt;/code&gt; with environments string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;BROWSERSLIST_ENV=&#34;development&#34; npx webpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST_STATS&lt;/code&gt; with path to the custom usage data for &lt;code&gt;&amp;gt; 1% in my stats&lt;/code&gt; query.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;BROWSERSLIST_STATS=./config/usage_data.json npx webpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST_DISABLE_CACHE&lt;/code&gt; if you want to disable config reading cache.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;BROWSERSLIST_DISABLE_CACHE=1 npx webpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST_DANGEROUS_EXTEND&lt;/code&gt; to disable security shareable config name check.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;BROWSERSLIST_DANGEROUS_EXTEND=1 npx webpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST_ROOT_PATH&lt;/code&gt; to prevent reading files above this path.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;BROWSERSLIST_ROOT_PATH=. npx webpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;browserslist.coverage()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Return browsers market coverage.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const browsers = browserslist(&#39;&amp;gt; 1% in US&#39;)&#xA;browserslist.coverage(browsers, &#39;US&#39;) //=&amp;gt; 83.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;browserslist.loadConfig()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;It is like calling &lt;code&gt;browserslist()&lt;/code&gt;, but it returns config‚Äôs queries, not browsers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;browserslist.loadConfig({ path: process.cwd() }) ?? browserslist.defaults&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;browserslist.defaults&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;An array with default queries.&lt;/p&gt; &#xA;&lt;h2&gt;Cache&lt;/h2&gt; &#xA;&lt;p&gt;Browserslist caches the configuration it reads from &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;browserslist&lt;/code&gt; files, as well as knowledge about the existence of files, for the duration of the hosting process.&lt;/p&gt; &#xA;&lt;p&gt;To clear these caches, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;browserslist.clearCaches()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To disable the caching altogether, set the &lt;code&gt;BROWSERSLIST_DISABLE_CACHE&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;h2&gt;Security Contact&lt;/h2&gt; &#xA;&lt;p&gt;To report a security vulnerability, please use the &lt;a href=&#34;https://tidelift.com/security&#34;&gt;Tidelift security contact&lt;/a&gt;. Tidelift will coordinate the fix and disclosure.&lt;/p&gt; &#xA;&lt;h2&gt;For Enterprise&lt;/h2&gt; &#xA;&lt;p&gt;Available as part of the Tidelift Subscription.&lt;/p&gt; &#xA;&lt;p&gt;The maintainers of &lt;code&gt;browserslist&lt;/code&gt; and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. &lt;a href=&#34;https://tidelift.com/subscription/pkg/npm-browserslist?utm_source=npm-browserslist&amp;amp;utm_medium=referral&amp;amp;utm_campaign=enterprise&amp;amp;utm_term=repo&#34;&gt;Learn more.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Browsers Data Updating&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/browserslist/update-db#readme&#34;&gt;&lt;code&gt;update-browserslist-db&lt;/code&gt; docs&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ruby/setup-ruby</title>
    <updated>2024-12-28T01:31:25Z</updated>
    <id>tag:github.com,2024-12-28:/ruby/setup-ruby</id>
    <link href="https://github.com/ruby/setup-ruby" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An action to download a prebuilt Ruby and add it to the PATH in 5 seconds&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;setup-ruby&lt;/h1&gt; &#xA;&lt;p&gt;This action downloads a prebuilt ruby and adds it to the &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is very efficient and takes about 5 seconds to download, extract and add the given Ruby to the &lt;code&gt;PATH&lt;/code&gt;. No extra packages need to be installed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Prefer &lt;code&gt;ruby/setup-ruby@v1&lt;/code&gt;. If you pin to a commit or release, only the Ruby versions available at the time of the commit will be available, and you will need to update it to use newer Ruby versions, see &lt;a href=&#34;https://raw.githubusercontent.com/ruby/setup-ruby/master/#versioning&#34;&gt;Versioning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Supported Versions&lt;/h3&gt; &#xA;&lt;p&gt;This action currently supports these versions of MRI, JRuby and TruffleRuby:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Interpreter&lt;/th&gt; &#xA;   &lt;th&gt;Versions&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ruby&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1.9.3, 2.0.0, 2.1.9, 2.2, all versions from 2.3.0 until 3.4.1, head, debug, mingw, mswin, ucrt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jruby&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;9.1.17.0 - 9.4.9.0, head&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;truffleruby&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;19.3.0 - 24.1.1, head&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;truffleruby+graalvm&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;21.2.0 - 24.1.1, head&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;code&gt;ruby-debug&lt;/code&gt; is the same as &lt;code&gt;ruby-head&lt;/code&gt; but with assertions enabled (&lt;code&gt;-DRUBY_DEBUG=1&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ruby-asan&lt;/code&gt; is the same as &lt;code&gt;ruby-head&lt;/code&gt; but with AddressSanitizer (ASan) enabled, helpful for finding memory issues in native extensions. Native extensions are automatically compiled with AddressSanitizer when using &lt;code&gt;ruby-asan&lt;/code&gt;. &lt;code&gt;ruby-asan&lt;/code&gt; is currently only available on &lt;code&gt;ubuntu-24.04&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Regarding Windows ruby master builds, &lt;code&gt;mingw&lt;/code&gt; is a MSYS2/MinGW build, &lt;code&gt;head&lt;/code&gt; &amp;amp; &lt;code&gt;ucrt&lt;/code&gt; are MSYS2/UCRT64 builds, and &lt;code&gt;mswin&lt;/code&gt; is a MSVC/VS 2022 build.&lt;/p&gt; &#xA;&lt;p&gt;Preview and RC versions of Ruby might be available too on Ubuntu and macOS (not on Windows). However, it is recommended to test against &lt;code&gt;ruby-head&lt;/code&gt; rather than previews, as it provides more useful feedback for the Ruby core team and for upcoming changes.&lt;/p&gt; &#xA;&lt;p&gt;Only release versions published by &lt;a href=&#34;https://rubyinstaller.org/downloads/archives/&#34;&gt;RubyInstaller&lt;/a&gt; are available on Windows. Due to that, Ruby 2.2 resolves to 2.2.6 on Windows and 2.2.10 on other platforms. Ruby 2.3 on Windows only has builds for 2.3.0, 2.3.1 and 2.3.3.&lt;/p&gt; &#xA;&lt;p&gt;Note that Ruby ‚â§ 2.4 and the OpenSSL version it needs (1.0.2) are both end-of-life, which means Ruby ‚â§ 2.4 is unmaintained and considered insecure.&lt;/p&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;p&gt;The action works on these &lt;a href=&#34;https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources&#34;&gt;GitHub-hosted runners&lt;/a&gt; images. Runner images not listed below are not supported yet. &lt;code&gt;$OS-latest&lt;/code&gt; just alias to one of these images.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Operating System&lt;/th&gt; &#xA;   &lt;th&gt;Supported&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ubuntu-20.04&lt;/code&gt;, &lt;code&gt;ubuntu-22.04&lt;/code&gt;, &lt;code&gt;ubuntu-24.04&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;macos-13&lt;/code&gt; and newer versions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;windows-2019&lt;/code&gt;, &lt;code&gt;windows-2022&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The prebuilt releases are generated by &lt;a href=&#34;https://github.com/ruby/ruby-builder&#34;&gt;ruby-builder&lt;/a&gt; and on Windows by &lt;a href=&#34;https://github.com/oneclick/rubyinstaller2&#34;&gt;RubyInstaller2&lt;/a&gt;. The &lt;code&gt;mingw&lt;/code&gt;, &lt;code&gt;ucrt&lt;/code&gt; and &lt;code&gt;mswin&lt;/code&gt; builds are generated by &lt;a href=&#34;https://github.com/MSP-Greg/ruby-loco&#34;&gt;ruby-loco&lt;/a&gt;. &lt;code&gt;ruby-head&lt;/code&gt; is generated by &lt;a href=&#34;https://github.com/ruby/ruby-dev-builder&#34;&gt;ruby-dev-builder&lt;/a&gt;, &lt;code&gt;jruby-head&lt;/code&gt; is generated by &lt;a href=&#34;https://github.com/ruby/jruby-dev-builder&#34;&gt;jruby-dev-builder&lt;/a&gt;, &lt;code&gt;truffleruby-head&lt;/code&gt; and &lt;code&gt;truffleruby+graalvm-head&lt;/code&gt; are generated by &lt;a href=&#34;https://github.com/ruby/truffleruby-dev-builder&#34;&gt;truffleruby-dev-builder&lt;/a&gt;. The full list of available Ruby versions can be seen in &lt;a href=&#34;https://raw.githubusercontent.com/ruby/setup-ruby/master/ruby-builder-versions.json&#34;&gt;ruby-builder-versions.json&lt;/a&gt; for Ubuntu and macOS (although some combinations are not available, see &lt;a href=&#34;https://github.com/ruby/ruby-builder/releases/tag/toolcache&#34;&gt;the full list&lt;/a&gt;) and in &lt;a href=&#34;https://raw.githubusercontent.com/ruby/setup-ruby/master/windows-versions.json&#34;&gt;windows-versions.json&lt;/a&gt; for Windows.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Single Job&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: My workflow&#xA;on: [push, pull_request]&#xA;jobs:&#xA;  test:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;    - uses: actions/checkout@v4&#xA;    - uses: ruby/setup-ruby@v1&#xA;      with:&#xA;        ruby-version: &#39;3.3&#39; # Not needed with a `.ruby-version` or `.tool-versions`&#xA;        bundler-cache: true # runs &#39;bundle install&#39; and caches installed gems automatically&#xA;    - run: bundle exec rake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Matrix of Ruby Versions&lt;/h3&gt; &#xA;&lt;p&gt;This matrix tests all stable releases and &lt;code&gt;head&lt;/code&gt; versions of MRI, JRuby and TruffleRuby on Ubuntu and macOS.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: My workflow&#xA;on: [push, pull_request]&#xA;jobs:&#xA;  test:&#xA;    strategy:&#xA;      fail-fast: false&#xA;      matrix:&#xA;        os: [ubuntu-latest, macos-latest]&#xA;        # Due to https://github.com/actions/runner/issues/849, we have to use quotes for &#39;3.0&#39;&#xA;        ruby: [&#39;2.7&#39;, &#39;3.0&#39;, &#39;3.1&#39;, &#39;3.2&#39;, &#39;3.3&#39;, head, jruby, jruby-head, truffleruby, truffleruby-head]&#xA;    runs-on: ${{ matrix.os }}&#xA;    steps:&#xA;    - uses: actions/checkout@v4&#xA;    - uses: ruby/setup-ruby@v1&#xA;      with:&#xA;        ruby-version: ${{ matrix.ruby }}&#xA;        bundler-cache: true # runs &#39;bundle install&#39; and caches installed gems automatically&#xA;    - run: bundle exec rake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Matrix of Gemfiles&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: My workflow&#xA;on: [push, pull_request]&#xA;jobs:&#xA;  test:&#xA;    strategy:&#xA;      fail-fast: false&#xA;      matrix:&#xA;        gemfile: [ rails5, rails6 ]&#xA;    runs-on: ubuntu-latest&#xA;    env: # $BUNDLE_GEMFILE must be set at the job level, so it is set for all steps&#xA;      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile&#xA;    steps:&#xA;      - uses: actions/checkout@v4&#xA;      - uses: ruby/setup-ruby@v1&#xA;        with:&#xA;          ruby-version: &#39;3.3&#39;&#xA;          bundler-cache: true # runs &#39;bundle install&#39; and caches installed gems automatically&#xA;      - run: bundle exec rake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the GitHub Actions documentation for more details about the &lt;a href=&#34;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions&#34;&gt;workflow syntax&lt;/a&gt; and the &lt;a href=&#34;https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions&#34;&gt;condition and expression syntax&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Supported Version Syntax&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;engine-version like &lt;code&gt;ruby-2.6.5&lt;/code&gt; and &lt;code&gt;truffleruby-19.3.0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;short version like &lt;code&gt;&#39;2.6&#39;&lt;/code&gt;, automatically using the latest release matching that version (&lt;code&gt;2.6.10&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;version only like &lt;code&gt;&#39;2.6.5&#39;&lt;/code&gt;, assumes MRI for the engine&lt;/li&gt; &#xA; &lt;li&gt;engine only like &lt;code&gt;ruby&lt;/code&gt; and &lt;code&gt;truffleruby&lt;/code&gt;, uses the latest stable release of that implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.ruby-version&lt;/code&gt; reads from the project&#39;s &lt;code&gt;.ruby-version&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.tool-versions&lt;/code&gt; reads from the project&#39;s &lt;code&gt;.tool-versions&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;If the &lt;code&gt;ruby-version&lt;/code&gt; input is not specified, &lt;code&gt;.ruby-version&lt;/code&gt; is tried first, followed by &lt;code&gt;.tool-versions&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Working Directory&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;working-directory&lt;/code&gt; input can be set to resolve &lt;code&gt;.ruby-version&lt;/code&gt;, &lt;code&gt;.tool-versions&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt; if they are not at the root of the repository, see &lt;a href=&#34;https://raw.githubusercontent.com/ruby/setup-ruby/master/action.yml&#34;&gt;action.yml&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;RubyGems&lt;/h3&gt; &#xA;&lt;p&gt;By default, the default RubyGems version that comes with each Ruby is used. However, users can optionally customize the RubyGems version that they want by setting the &lt;code&gt;rubygems&lt;/code&gt; input.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ruby/setup-ruby/master/action.yml&#34;&gt;action.yml&lt;/a&gt; for more details about the &lt;code&gt;rubygems&lt;/code&gt; input.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re running into &lt;code&gt;ArgumentError: wrong number of arguments (given 4, expected 1)&lt;/code&gt; errors with a stacktrace including Psych and RubyGems entries, you should be able to fix them by setting &lt;code&gt;rubygems: 3.0.0&lt;/code&gt; or higher.&lt;/p&gt; &#xA;&lt;h3&gt;Bundler&lt;/h3&gt; &#xA;&lt;p&gt;By default, Bundler is installed as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If there is a &lt;code&gt;Gemfile.lock&lt;/code&gt; file (or &lt;code&gt;$BUNDLE_GEMFILE.lock&lt;/code&gt; or &lt;code&gt;gems.locked&lt;/code&gt;) with a &lt;code&gt;BUNDLED WITH&lt;/code&gt; section, that version of Bundler will be installed and used.&lt;/li&gt; &#xA; &lt;li&gt;If the Ruby ships with Bundler 2.2+ (as a default gem), that version is used.&lt;/li&gt; &#xA; &lt;li&gt;Otherwise, the latest compatible Bundler version is installed (Bundler 2 on Ruby &amp;gt;= 2.3, Bundler 1 on Ruby &amp;lt; 2.3).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This behavior can be customized, see &lt;a href=&#34;https://raw.githubusercontent.com/ruby/setup-ruby/master/action.yml&#34;&gt;action.yml&lt;/a&gt; for more details about the &lt;code&gt;bundler&lt;/code&gt; input.&lt;/p&gt; &#xA;&lt;h3&gt;Caching &lt;code&gt;bundle install&lt;/code&gt; automatically&lt;/h3&gt; &#xA;&lt;p&gt;This action provides a way to automatically run &lt;code&gt;bundle install&lt;/code&gt; and cache the result:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    - uses: ruby/setup-ruby@v1&#xA;      with:&#xA;        bundler-cache: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that any step doing &lt;code&gt;bundle install&lt;/code&gt; (for the root &lt;code&gt;Gemfile&lt;/code&gt;) or &lt;code&gt;gem install bundler&lt;/code&gt; can be removed with &lt;code&gt;bundler-cache: true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This caching speeds up installing gems significantly and avoids too many requests to RubyGems.org.&lt;br&gt; It needs a &lt;code&gt;Gemfile&lt;/code&gt; (or &lt;code&gt;$BUNDLE_GEMFILE&lt;/code&gt; or &lt;code&gt;gems.rb&lt;/code&gt;) under the &lt;a href=&#34;https://raw.githubusercontent.com/ruby/setup-ruby/master/#working-directory&#34;&gt;&lt;code&gt;working-directory&lt;/code&gt;&lt;/a&gt;.&lt;br&gt; If there is a &lt;code&gt;Gemfile.lock&lt;/code&gt; (or &lt;code&gt;$BUNDLE_GEMFILE.lock&lt;/code&gt; or &lt;code&gt;gems.locked&lt;/code&gt;), &lt;code&gt;bundle config --local deployment true&lt;/code&gt; is used.&lt;/p&gt; &#xA;&lt;p&gt;To use a &lt;code&gt;Gemfile&lt;/code&gt; which is not at the root or has a different name, set &lt;code&gt;BUNDLE_GEMFILE&lt;/code&gt; in the &lt;code&gt;env&lt;/code&gt; at the job level as shown in the &lt;a href=&#34;https://raw.githubusercontent.com/ruby/setup-ruby/master/#matrix-of-gemfiles&#34;&gt;example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;bundle config&lt;/h4&gt; &#xA;&lt;p&gt;When using &lt;code&gt;bundler-cache: true&lt;/code&gt; you might notice there is no good place to run &lt;code&gt;bundle config ...&lt;/code&gt; commands. These can be replaced by &lt;code&gt;BUNDLE_*&lt;/code&gt; environment variables, which are also faster. They should be set in the &lt;code&gt;env&lt;/code&gt; at the job level as shown in the &lt;a href=&#34;https://raw.githubusercontent.com/ruby/setup-ruby/master/#matrix-of-gemfiles&#34;&gt;example&lt;/a&gt;. To find the correct the environment variable name, see the &lt;a href=&#34;https://bundler.io/man/bundle-config.1.html&#34;&gt;Bundler docs&lt;/a&gt; or look at &lt;code&gt;.bundle/config&lt;/code&gt; after running &lt;code&gt;bundle config --local KEY VALUE&lt;/code&gt; locally. You might need to &lt;code&gt;&#34;&lt;/code&gt;-quote the environment variable name in YAML if it has unusual characters like &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To perform caching, this action will use &lt;code&gt;bundle config --local path $PWD/vendor/bundle&lt;/code&gt;.&lt;br&gt; Therefore, the Bundler &lt;code&gt;path&lt;/code&gt; should not be changed in your workflow for the cache to work (no &lt;code&gt;bundle config path&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h4&gt;How it Works&lt;/h4&gt; &#xA;&lt;p&gt;When there is no lockfile, one is generated with &lt;code&gt;bundle lock&lt;/code&gt;, which is the same as &lt;code&gt;bundle install&lt;/code&gt; would do first before actually fetching any gem. In other words, it works exactly like &lt;code&gt;bundle install&lt;/code&gt;. The hash of the generated lockfile is then used for caching, which is the only correct approach.&lt;/p&gt; &#xA;&lt;h4&gt;Dealing with a corrupted cache&lt;/h4&gt; &#xA;&lt;p&gt;In some rare scenarios (like using gems with C extensions whose functionality depends on libraries found on the system at the time of the gem&#39;s build) it may be necessary to ignore contents of the cache and get and build all the gems anew. In order to achieve this, set the &lt;code&gt;cache-version&lt;/code&gt; option to any value other than &lt;code&gt;0&lt;/code&gt; (or change it to a new unique value if you have already used it before.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    - uses: ruby/setup-ruby@v1&#xA;      with:&#xA;        bundler-cache: true&#xA;        cache-version: 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Caching &lt;code&gt;bundle install&lt;/code&gt; manually&lt;/h4&gt; &#xA;&lt;p&gt;It is also possible to cache gems manually, but this is not recommended because it is verbose and &lt;em&gt;very difficult&lt;/em&gt; to do correctly. There are many concerns which means using &lt;code&gt;actions/cache&lt;/code&gt; is never enough for caching gems (e.g., incomplete cache key, cleaning old gems when restoring from another key, correctly hashing the lockfile if not checked in, OS versions, ABI compatibility for &lt;code&gt;ruby-head&lt;/code&gt;, etc). So, please use &lt;code&gt;bundler-cache: true&lt;/code&gt; instead and report any issue.&lt;/p&gt; &#xA;&lt;h2&gt;Windows&lt;/h2&gt; &#xA;&lt;p&gt;Note that running CI on Windows can be quite challenging if you are not very familiar with Windows. It is recommended to first get your build working on Ubuntu and macOS before trying Windows.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use Bundler 2.2.18+ on Windows (older versions have &lt;a href=&#34;https://github.com/ruby/setup-ruby/issues/209#issuecomment-889064123&#34;&gt;bugs&lt;/a&gt;) by not setting the &lt;code&gt;bundler:&lt;/code&gt; input and ensuring there is no &lt;code&gt;BUNDLED WITH 1.x.y&lt;/code&gt; in a checked-in &lt;code&gt;Gemfile.lock&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The default shell on Windows is not Bash but &lt;a href=&#34;https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#using-a-specific-shell&#34;&gt;PowerShell&lt;/a&gt;. This can lead issues such as multi-line scripts &lt;a href=&#34;https://github.com/ruby/setup-ruby/issues/13&#34;&gt;not working as expected&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;PATH&lt;/code&gt; contains &lt;a href=&#34;https://github.com/ruby/setup-ruby/issues/19&#34;&gt;multiple compiler toolchains&lt;/a&gt;. Use &lt;code&gt;where.exe&lt;/code&gt; to debug which tool is used.&lt;/li&gt; &#xA; &lt;li&gt;For Ruby ‚â• 2.4, MSYS2 is prepended to the &lt;code&gt;Path&lt;/code&gt;, similar to what RubyInstaller2 does.&lt;/li&gt; &#xA; &lt;li&gt;For Ruby &amp;lt; 2.4, the DevKit MSYS tools are installed and prepended to the &lt;code&gt;Path&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use JRuby 9.2.20+ on Windows (older versions have &lt;a href=&#34;https://github.com/ruby/setup-ruby/issues/18#issuecomment-889072695&#34;&gt;bugs&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;JRuby on Windows has multiple issues (&lt;a href=&#34;https://github.com/jruby/jruby/issues/7106&#34;&gt;jruby/jruby#7106&lt;/a&gt;, &lt;a href=&#34;https://github.com/jruby/jruby/issues/7182&#34;&gt;jruby/jruby#7182&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;When compiling extension code, note that the packages required to build Ruby are included when using Windows 2022, but that Windows 2019 does not include all of them, and may require installing package(s). This can be done with &lt;a href=&#34;https://github.com/ruby/setup-ruby-pkgs&#34;&gt;setup-ruby-pkgs&lt;/a&gt; or via MSYS2&#39;s pacman. These packages may be required when installing or updating Ruby std-lib extension gems.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;It is highly recommended to use &lt;code&gt;ruby/setup-ruby@v1&lt;/code&gt; for the version of this action. This will provide the best experience by automatically getting bug fixes, new Ruby versions and new features.&lt;/p&gt; &#xA;&lt;p&gt;If you instead choose a specific version (v1.2.3) or a commit sha, there will be no automatic bug fixes and it will be your responsibility to update every time the action no longer works. Make sure to always use the latest release before reporting an issue on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;This action follows semantic versioning with a moving &lt;code&gt;v1&lt;/code&gt; branch. This follows the &lt;a href=&#34;https://github.com/actions/toolkit/raw/master/docs/action-versioning.md&#34;&gt;recommendations&lt;/a&gt; of GitHub Actions.&lt;/p&gt; &#xA;&lt;h2&gt;Using self-hosted runners&lt;/h2&gt; &#xA;&lt;p&gt;This action might work with &lt;a href=&#34;https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners&#34;&gt;self-hosted runners&lt;/a&gt; if the &lt;a href=&#34;https://github.com/actions/runner-images&#34;&gt;Runner Image&lt;/a&gt; is very similar to the ones used by GitHub runners. Notably:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure to use the same operating system and version.&lt;/li&gt; &#xA; &lt;li&gt;Make sure to use the same version of libssl.&lt;/li&gt; &#xA; &lt;li&gt;Make sure that the operating system has &lt;code&gt;libyaml-0&lt;/code&gt; and &lt;a href=&#34;https://stackoverflow.com/questions/26555902/ruby-v-dyld-library-not-loaded-usr-local-lib-libgmp-10-dylib&#34;&gt;&lt;code&gt;libgmp&lt;/code&gt;&lt;/a&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;The default tool cache directory (&lt;code&gt;/opt/hostedtoolcache&lt;/code&gt; on Linux, &lt;code&gt;/Users/runner/hostedtoolcache&lt;/code&gt; on macOS, &lt;code&gt;C:/hostedtoolcache/windows&lt;/code&gt; on Windows) must be writable by the &lt;code&gt;runner&lt;/code&gt; user. This is necessary since the Ruby builds embed the install path when built and cannot be moved around.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/home/runner&lt;/code&gt; must be writable by the &lt;code&gt;runner&lt;/code&gt; user.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In other cases, you will need to install Ruby in the runner tool cache as shown by the action when it detects that case (run it so it will show you where to install Ruby). You could of course also not use this action and e.g. use Ruby from a system package or use a Docker image instead.&lt;/p&gt; &#xA;&lt;p&gt;See also the &lt;a href=&#34;https://raw.githubusercontent.com/ruby/setup-ruby/master/action.yml&#34;&gt;&lt;code&gt;self-hosted:&lt;/code&gt; input&lt;/a&gt;. You can set it to &lt;code&gt;true&lt;/code&gt; if you want to use custom-built Rubies in your self-hosted toolcache instead of prebuild Rubies.&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;This action used to be at &lt;code&gt;eregon/use-ruby-action&lt;/code&gt; and was moved to the &lt;code&gt;ruby&lt;/code&gt; organization. Please &lt;a href=&#34;https://github.com/ruby/setup-ruby/releases/tag/v1.13.0&#34;&gt;update&lt;/a&gt; if you are using &lt;code&gt;eregon/use-ruby-action&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;The current maintainer of this action is @eregon. Most of the Windows logic is based on work by MSP-Greg. Many thanks to MSP-Greg and Lars Kanis for the help with Ruby Installer.&lt;/p&gt;</summary>
  </entry>
</feed>