<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-24T01:28:51Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mschwarzmueller/nextjs-complete-guide-course-resources</title>
    <updated>2024-04-24T01:28:51Z</updated>
    <id>tag:github.com,2024-04-24:/mschwarzmueller/nextjs-complete-guide-course-resources</id>
    <link href="https://github.com/mschwarzmueller/nextjs-complete-guide-course-resources" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Course resources for my &#34;NextJS - The Complete Guide&#34; course (https://acad.link/nextjs)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NextJS - The Complete Guide Course Resources&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains course resources (code snapshots, attachments, slides) for my &lt;a href=&#34;https://acad.link/nextjs&#34;&gt;&#34;NextJS - The Complete Guide&#34; course&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How To Use&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mschwarzmueller/nextjs-complete-guide-course-resources/main/attachments/&#34;&gt;/attachments&lt;/a&gt; contains lecture-specific attachments (which are directly attached to course lectures)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mschwarzmueller/nextjs-complete-guide-course-resources/main/code/&#34;&gt;/code&lt;/a&gt; contains multiple code snapshots for each course section - you can use those to compare your code to mine (to find + fix errors)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mschwarzmueller/nextjs-complete-guide-course-resources/main/other/&#34;&gt;/other&lt;/a&gt; contains other resources like course slides&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I&#39;m currently updating the course. This repository contains the resources for the new content (e.g., for the new &#34;NextJS Essentials&#34; section which uses NextJS&#39; &#34;App Router&#34;).&lt;/p&gt; &#xA;&lt;p&gt;You find the resources for the &#34;old course&#34; (which covers the &#34;Pages Router&#34;) &lt;a href=&#34;https://github.com/mschwarzmueller/nextjs-course-code&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wukko/cobalt</title>
    <updated>2024-04-24T01:28:51Z</updated>
    <id>tag:github.com,2024-04-24:/wukko/cobalt</id>
    <link href="https://github.com/wukko/cobalt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;save what you love&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cobalt&lt;/h1&gt; &#xA;&lt;p&gt;best way to save what you love: &lt;a href=&#34;https://cobalt.tools/&#34;&gt;cobalt.tools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wukko/cobalt/current/src/front/icons/pattern.png&#34; alt=&#34;cobalt logo with repeated logo (double arrow) pattern background&#34; title=&#34;cobalt logo with repeated logo (double arrow) pattern background&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;what&#39;s cobalt?&lt;/h2&gt; &#xA;&lt;p&gt;cobalt is a media downloader that doesn&#39;t piss you off. it&#39;s fast, friendly, and doesn&#39;t have any bullshit that modern web is filled with: &lt;em&gt;&lt;strong&gt;no ads, trackers, or invasive analytics&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;paste the link, get the file, move on. it&#39;s that simple. just how it should be.&lt;/p&gt; &#xA;&lt;h2&gt;supported services&lt;/h2&gt; &#xA;&lt;p&gt;this list is not final and keeps expanding over time. if support for a service you want is missing, create an issue (or a pull request 👀).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;service&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;video + audio&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;only audio&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;only video&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;metadata&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;rich file names&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bilibili.com &amp;amp; bilibili.tv&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dailymotion&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;instagram posts &amp;amp; stories&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;instagram reels&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ok video&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;pinterest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;reddit&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rutube&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;soundcloud&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;streamable&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tiktok&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tumblr&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;twitch clips&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;twitter/x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;vimeo&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;vine archive&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;vk videos &amp;amp; clips&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;youtube videos, shorts &amp;amp; music&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;emoji&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;meaning&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;impossible/unreasonable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;not supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;additional notes or features (per service)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;service&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;notes or features&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;instagram&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;supports photos, videos, and stories. lets you pick what to save from multi-media posts.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;pinterest&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;supports videos and stories.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;reddit&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;supports gifs and videos.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;soundcloud&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;supports private links.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tiktok&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;supports videos with or without watermark, images from slideshow without watermark, and full (original) audios.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;twitter/x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;lets you pick what to save from multi-media posts. may not be 100% reliable due to current management.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;vimeo&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audio downloads are only available for dash.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;youtube&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;supports videos, music, and shorts. 8K, 4K, HDR, VR, and high FPS videos. rich metadata &amp;amp; dubs. h264/av1/vp9 codecs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;cobalt api&lt;/h2&gt; &#xA;&lt;p&gt;cobalt has an open api that you can use in your projects &lt;em&gt;for free~&lt;/em&gt;. it&#39;s easy and straightforward to use, &lt;a href=&#34;https://raw.githubusercontent.com/wukko/cobalt/current/docs/api.md&#34;&gt;check out the docs&lt;/a&gt; to learn how to use it.&lt;/p&gt; &#xA;&lt;p&gt;✅ you can use the main api instance (&lt;a href=&#34;https://co.wuk.sh/&#34;&gt;co.wuk.sh&lt;/a&gt;) in your &lt;strong&gt;personal&lt;/strong&gt; projects.&lt;br&gt; ❌ you cannot use the free api commercially (anywhere that&#39;s gated behind paywalls or ads). host your own instance for this.&lt;/p&gt; &#xA;&lt;p&gt;we reserve the right to restrict abusive/excessive access to the main instance api.&lt;/p&gt; &#xA;&lt;h2&gt;how to run your own instance&lt;/h2&gt; &#xA;&lt;p&gt;if you want to run your own instance for whatever purpose, &lt;a href=&#34;https://raw.githubusercontent.com/wukko/cobalt/current/docs/run-an-instance.md&#34;&gt;follow this guide&lt;/a&gt;.&lt;br&gt; it&#39;s &lt;em&gt;highly&lt;/em&gt; recommended to use a docker compose method unless you run for developing/debugging purposes.&lt;/p&gt; &#xA;&lt;h2&gt;sponsors&lt;/h2&gt; &#xA;&lt;p&gt;cobalt is sponsored by &lt;a href=&#34;https://royalehosting.net/&#34;&gt;royalehosting.net&lt;/a&gt;, all main instances are currently hosted on their network :)&lt;/p&gt; &#xA;&lt;h2&gt;ethics and disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;cobalt is a tool for easing content downloads from internet and takes &lt;em&gt;&lt;strong&gt;zero liability&lt;/strong&gt;&lt;/em&gt;. you are responsible for what you download, how you use and distribute that content. please be mindful when using content of others and always credit original creators. fair use and credits benefit everyone.&lt;/p&gt; &#xA;&lt;p&gt;cobalt is &lt;em&gt;&lt;strong&gt;NOT&lt;/strong&gt;&lt;/em&gt; a piracy tool and cannot be used as such. it can only download free, publicly accessible content. such content can be easily downloaded through any browser&#39;s dev tools. pressing one button is easier, so i made a convenient, ad-less tool for such repeated actions.&lt;/p&gt; &#xA;&lt;h2&gt;cobalt license&lt;/h2&gt; &#xA;&lt;p&gt;cobalt code is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/wukko/cobalt/current/LICENSE&#34;&gt;AGPL-3.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;cobalt branding, mascots, and other related assets included in the repo are &lt;em&gt;&lt;strong&gt;copyrighted&lt;/strong&gt;&lt;/em&gt; and not covered by the AGPL-3.0 license. you &lt;em&gt;&lt;strong&gt;cannot&lt;/strong&gt;&lt;/em&gt; use them under same terms.&lt;/p&gt; &#xA;&lt;p&gt;you are allowed to host an &lt;em&gt;&lt;strong&gt;unmodified&lt;/strong&gt;&lt;/em&gt; instance of cobalt with branding, but this &lt;em&gt;&lt;strong&gt;does not&lt;/strong&gt;&lt;/em&gt; give you permission to use it anywhere else, or make derivatives of it in any way.&lt;/p&gt; &#xA;&lt;h3&gt;notes:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;mascots and other assets are a part of the branding.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;when making an alternative version of the project, please replace or remove all branding (including the name).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;you &lt;strong&gt;must&lt;/strong&gt; link the original repo when using any parts of code (such as using separate processing modules in your project) or forking the project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;if you make a modified version of cobalt, the codebase &lt;strong&gt;must&lt;/strong&gt; be published under the same license (according to AGPL-3.0).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3rd party licenses&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/fluentui-emoji&#34;&gt;Fluent Emoji by Microsoft&lt;/a&gt; (used in cobalt) is under &lt;a href=&#34;https://github.com/microsoft/fluentui-emoji/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt; license.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fonts.google.com/noto/specimen/Noto+Sans+Mono/&#34;&gt;Noto Sans Mono&lt;/a&gt; fonts (used in cobalt) are licensed under the &lt;a href=&#34;https://fonts.google.com/noto/specimen/Noto+Sans+Mono/about&#34;&gt;OFL&lt;/a&gt; license.&lt;/li&gt; &#xA; &lt;li&gt;many update banners were taken from &lt;a href=&#34;https://tenor.com/&#34;&gt;tenor.com&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;acknowledgements&lt;/h2&gt; &#xA;&lt;h3&gt;ffmpeg&lt;/h3&gt; &#xA;&lt;p&gt;cobalt heavily relies on ffmpeg for converting and merging media files. it&#39;s an absolutely amazing piece of software offered for anyone for free, yet doesn&#39;t receive as much credit as it should.&lt;/p&gt; &#xA;&lt;p&gt;you can &lt;a href=&#34;https://ffmpeg.org/donations.html&#34;&gt;support ffmpeg here&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h4&gt;ffmpeg-static&lt;/h4&gt; &#xA;&lt;p&gt;we use &lt;a href=&#34;https://github.com/eugeneware/ffmpeg-static&#34;&gt;ffmpeg-static&lt;/a&gt; to get binaries for ffmpeg depending on the platform.&lt;/p&gt; &#xA;&lt;p&gt;you can support the developer via various methods listed on their github page! (linked above)&lt;/p&gt; &#xA;&lt;h3&gt;youtube.js&lt;/h3&gt; &#xA;&lt;p&gt;cobalt relies on &lt;a href=&#34;https://github.com/LuanRT/YouTube.js&#34;&gt;youtube.js&lt;/a&gt; for interacting with the innertube api, it wouldn&#39;t have been possible without it.&lt;/p&gt; &#xA;&lt;p&gt;you can support the developer via various methods listed on their github page! (linked above)&lt;/p&gt; &#xA;&lt;h3&gt;many others&lt;/h3&gt; &#xA;&lt;p&gt;cobalt also depends on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/content-disposition-header&#34;&gt;content-disposition-header&lt;/a&gt; to simplify the provision of &lt;code&gt;content-disposition&lt;/code&gt; headers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/cors&#34;&gt;cors&lt;/a&gt; to manage cross-origin resource sharing within expressjs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/dotenv&#34;&gt;dotenv&lt;/a&gt; to load environment variables from the &lt;code&gt;.env&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/esbuild&#34;&gt;esbuild&lt;/a&gt; to minify the frontend files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/express&#34;&gt;express&lt;/a&gt; as the backbone of cobalt servers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/express-rate-limit&#34;&gt;express-rate-limit&lt;/a&gt; to rate limit api endpoints.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/hls-parser&#34;&gt;hls-parser&lt;/a&gt; to parse &lt;code&gt;m3u8&lt;/code&gt; playlists for certain services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/ipaddr.js&#34;&gt;ipaddr.js&lt;/a&gt; to parse ip addresses (for rate limiting).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/nanoid&#34;&gt;nanoid&lt;/a&gt; to generate unique (temporary) identifiers for each requested stream.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/node-cache&#34;&gt;node-cache&lt;/a&gt; to cache stream info in server ram for a limited amount of time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/psl&#34;&gt;psl&lt;/a&gt; as the domain name parser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/set-cookie-parser&#34;&gt;set-cookie-parser&lt;/a&gt; to parse cookies that cobalt receives from certain services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/undici&#34;&gt;undici&lt;/a&gt; for making http requests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/url-pattern&#34;&gt;url-pattern&lt;/a&gt; to match provided links with supported patterns.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;...and many other packages that these packages rely on.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OpenDroneMap/WebODM</title>
    <updated>2024-04-24T01:28:51Z</updated>
    <id>tag:github.com,2024-04-24:/OpenDroneMap/WebODM</id>
    <link href="https://github.com/OpenDroneMap/WebODM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;User-friendly, commercial-grade software for processing aerial imagery. 🛩&lt;/p&gt;&lt;hr&gt;&lt;img alt=&#34;WebODM&#34; src=&#34;https://user-images.githubusercontent.com/1951843/34074943-8f057c3c-e287-11e7-924d-3ccafa60c43a.png&#34; width=&#34;180&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/OpenDroneMap/WebODM/build-and-publish.yml?branch=master&#34; alt=&#34;Build Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/OpenDroneMap/WebODM&#34; alt=&#34;Version&#34;&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/webodm/&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/webodm/-/svg-badge.svg?sanitize=true&#34; alt=&#34;Translated&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A user-friendly, commercial grade software for drone image processing. Generate georeferenced maps, point clouds, elevation models and textured 3D models from aerial images. It supports multiple engines for processing, currently &lt;a href=&#34;https://github.com/OpenDroneMap/ODM&#34;&gt;ODM&lt;/a&gt; and &lt;a href=&#34;https://github.com/OpenDroneMap/NodeMICMAC/&#34;&gt;MicMac&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1951843/174504753-6869e56e-7b65-4775-bb23-6c1dc256575c.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#manage-processing-nodes&#34;&gt;Manage Processing Nodes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#enable-micmac&#34;&gt;Enable MicMac&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#enable-ssl&#34;&gt;Enable SSL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#where-are-my-files-stored&#34;&gt;Where Are My Files Stored?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#common-troubleshooting&#34;&gt;Common Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#backup-and-restore&#34;&gt;Backup and Restore&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#reset-password&#34;&gt;Reset Password&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#manage-plugins&#34;&gt;Manage Plugins&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#update&#34;&gt;Update&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#recommended-machine-specs&#34;&gt;Recommended Machine Specs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#customizing-and-extending&#34;&gt;Customizing and Extending&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#api-docs&#34;&gt;API Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#getting-help&#34;&gt;Getting Help&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#support-the-project&#34;&gt;Support the Project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#translations&#34;&gt;Translations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#become-a-contributor&#34;&gt;Become a Contributor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#architecture-overview&#34;&gt;Architecture Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#run-the-docker-version-as-a-linux-service&#34;&gt;Run the docker version as a Linux Service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#run-it-natively&#34;&gt;Run it natively&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#run-it-on-the-cloud-google-compute-amazon-aws&#34;&gt;Run it on the cloud (Google Compute, Amazon AWS)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1951843/174504771-b0bcfd29-3960-41f7-8d44-103b63050bd5.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1951843/174504773-f8d8febb-7a45-4d9c-89b6-7d2404c5b8fd.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Windows and macOS users can purchase an automated &lt;a href=&#34;https://www.opendronemap.org/webodm/download#installer&#34;&gt;installer&lt;/a&gt;, which makes the installation process easier.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s also a cloud-hosted version of WebODM available from &lt;a href=&#34;https://webodm.net&#34;&gt;webodm.net&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To install WebODM manually on your machine:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the following applications:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker-compose&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Python&lt;/li&gt; &#xA;   &lt;li&gt;Pip&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows users should install &lt;a href=&#34;https://hub.docker.com/editions/community/docker-ce-desktop-windows&#34;&gt;Docker Desktop&lt;/a&gt; and 1) make sure Linux containers are enabled (Switch to Linux Containers...), 2) give Docker enough CPUs (default 2) and RAM (&amp;gt;4Gb, 16Gb better but leave some for Windows) by going to Settings -- Advanced, and 3) select where on your hard drive you want virtual hard drives to reside (Settings -- Advanced -- Images &amp;amp; Volumes).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From the Docker Quickstart Terminal or Git Bash (Windows), or from the command line (Mac / Linux), type:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/OpenDroneMap/WebODM --config core.autocrlf=input --depth 1&#xA;cd WebODM&#xA;./webodm.sh start &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you face any issues at the last step on Linux, make sure your user is part of the docker group:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo usermod -aG docker $USER&#xA;exit&#xA;(restart shell by logging out and then back-in)&#xA;./webodm.sh start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open a Web Browser to &lt;code&gt;http://localhost:8000&lt;/code&gt; (unless you are on Windows using Docker Toolbox, see below)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Docker Toolbox users need to find the IP of their docker machine by running this command from the Docker Quickstart Terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-machine ip&#xA;192.168.1.100 (your output will be different)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The address to connect to would then be: &lt;code&gt;http://192.168.1.100:8000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To stop WebODM press CTRL+C or run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./webodm.sh stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update WebODM to the latest version use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./webodm.sh update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manage Processing Nodes&lt;/h3&gt; &#xA;&lt;p&gt;WebODM can be linked to one or more processing nodes that speak the &lt;a href=&#34;https://github.com/OpenDroneMap/NodeODM/raw/master/docs/index.adoc&#34;&gt;NodeODM API&lt;/a&gt;, such as &lt;a href=&#34;https://github.com/OpenDroneMap/NodeODM&#34;&gt;NodeODM&lt;/a&gt;, &lt;a href=&#34;https://github.com/OpenDroneMap/NodeMICMAC/&#34;&gt;NodeMICMAC&lt;/a&gt; or &lt;a href=&#34;https://github.com/OpenDroneMap/ClusterODM&#34;&gt;ClusterODM&lt;/a&gt;. The default configuration includes a &#34;node-odm-1&#34; processing node which runs on the same machine as WebODM, just to help you get started. As you become more familiar with WebODM, you might want to install processing nodes on separate machines.&lt;/p&gt; &#xA;&lt;p&gt;Adding more processing nodes will allow you to run multiple jobs in parallel.&lt;/p&gt; &#xA;&lt;p&gt;You can also setup a &lt;a href=&#34;https://github.com/OpenDroneMap/ClusterODM&#34;&gt;ClusterODM&lt;/a&gt; node to run a single task across multiple machines with &lt;a href=&#34;https://docs.opendronemap.org/large/?highlight=distributed#getting-started-with-distributed-split-merge&#34;&gt;distributed split-merge&lt;/a&gt; and process dozen of thousands of images more quickly, with less memory.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t need the default &#34;node-odm-1&#34; node, simply pass &lt;code&gt;--default-nodes 0&lt;/code&gt; flag when starting WebODM:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;./webodm.sh restart --default-nodes 0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then from the web interface simply manually remove the &#34;node-odm-1&#34; node.&lt;/p&gt; &#xA;&lt;h3&gt;Enable MicMac&lt;/h3&gt; &#xA;&lt;p&gt;WebODM can use &lt;a href=&#34;https://github.com/OpenDroneMap/micmac&#34;&gt;MicMac&lt;/a&gt; as a processing engine via &lt;a href=&#34;https://github.com/OpenDroneMap/NodeMICMAC/&#34;&gt;NodeMICMAC&lt;/a&gt;. To add MicMac, simply run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;./webodm.sh restart --with-micmac&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will create a &#34;node-micmac-1&#34; processing node on the same machine running WebODM. Please note that NodeMICMAC is in active development and is currently experimental. If you find issues, please &lt;a href=&#34;https://github.com/OpenDroneMap/NodeMICMAC/issues&#34;&gt;report them&lt;/a&gt; on the NodeMICMAC repository.&lt;/p&gt; &#xA;&lt;h3&gt;Enable SSL&lt;/h3&gt; &#xA;&lt;p&gt;WebODM has the ability to automatically request and install a SSL certificate via &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let’s Encrypt&lt;/a&gt;, or you can manually specify your own key/certificate pair.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Setup your DNS record (webodm.myorg.com --&amp;gt; IP of server).&lt;/li&gt; &#xA; &lt;li&gt;Make sure port 80 and 443 are open.&lt;/li&gt; &#xA; &lt;li&gt;Run the following:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./webodm.sh restart --ssl --hostname webodm.myorg.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! The certificate will automatically renew when needed.&lt;/p&gt; &#xA;&lt;p&gt;If you want to specify your own key/certificate pair, simply pass the &lt;code&gt;--ssl-key&lt;/code&gt; and &lt;code&gt;--ssl-cert&lt;/code&gt; option to &lt;code&gt;./webodm.sh&lt;/code&gt;. See &lt;code&gt;./webodm.sh --help&lt;/code&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;Note! You cannot pass an IP address to the hostname parameter! You need a DNS record setup.&lt;/p&gt; &#xA;&lt;h3&gt;Where Are My Files Stored?&lt;/h3&gt; &#xA;&lt;p&gt;When using Docker, all processing results are stored in a docker volume and are not available on the host filesystem. There are two specific docker volumes of interest:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Media (called webodm_appmedia): This is where all files related to a project and task are stored.&lt;/li&gt; &#xA; &lt;li&gt;Postgres DB (called webodm_dbdata): This is what Postgres database uses to store its data.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more information on how these two volumes are used and in which containers, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;For various reasons such as ease of backup/restore, if you want to store your files on the host filesystem instead of a docker volume, you need to pass a path via the &lt;code&gt;--media-dir&lt;/code&gt; and/or the &lt;code&gt;--db-dir&lt;/code&gt; options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./webodm.sh restart --media-dir /home/user/webodm_data --db-dir /home/user/webodm_db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that existing task results will not be available after the change. Refer to the &lt;a href=&#34;https://docs.docker.com/engine/tutorials/dockervolumes/#backup-restore-or-migrate-data-volumes&#34;&gt;Migrate Data Volumes&lt;/a&gt; section of the Docker documentation for information on migrating existing task results.&lt;/p&gt; &#xA;&lt;h3&gt;Common Troubleshooting&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Symptoms&lt;/th&gt; &#xA;   &lt;th&gt;Possible Solutions&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Run out of memory&lt;/td&gt; &#xA;   &lt;td&gt;Make sure that your Docker environment has enough RAM allocated: &lt;a href=&#34;http://stackoverflow.com/a/39720010&#34;&gt;MacOS Instructions&lt;/a&gt;, &lt;a href=&#34;https://docs.docker.com/docker-for-windows/#advanced&#34;&gt;Windows Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;While starting WebODM you get: &lt;code&gt;&#39;WaitNamedPipe&#39;,&#39;The system cannot find the file specified.&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1. Make sure you have enabled VT-x virtualization in the BIOS.&lt;br&gt;2. Try to downgrade your version of Python to 2.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;On Windows, docker-compose fails with &lt;code&gt;Failed to execute the script docker-compose&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Make sure you have enabled VT-x virtualization in the BIOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cannot access WebODM using Microsoft Edge on Windows 10&lt;/td&gt; &#xA;   &lt;td&gt;Try to tweak your internet properties according to &lt;a href=&#34;http://www.hanselman.com/blog/FixedMicrosoftEdgeCantSeeOrOpenVirtualBoxhostedLocalWebSites.aspx&#34;&gt;these instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Getting a &lt;code&gt;No space left on device&lt;/code&gt; error, but hard drive has enough space left&lt;/td&gt; &#xA;   &lt;td&gt;Docker on Windows by default will allocate only 20GB of space to the default docker-machine. You need to increase that amount. See &lt;a href=&#34;http://support.divio.com/local-development/docker/managing-disk-space-in-your-docker-vm&#34;&gt;this link&lt;/a&gt; and &lt;a href=&#34;https://www.howtogeek.com/124622/how-to-enlarge-a-virtual-machines-disk-in-virtualbox-or-vmware/&#34;&gt;this link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cannot start WebODM via &lt;code&gt;./webodm.sh start&lt;/code&gt;, error messages are different at each retry&lt;/td&gt; &#xA;   &lt;td&gt;You could be running out of memory. Make sure you have enough RAM available. 2GB should be the recommended minimum, unless you know what you are doing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;While running WebODM with Docker Toolbox (VirtualBox) you cannot access WebODM from another computer in the same network.&lt;/td&gt; &#xA;   &lt;td&gt;As Administrator, run &lt;code&gt;cmd.exe&lt;/code&gt; and then type &lt;code&gt;&#34;C:\Program Files\Oracle\VirtualBox\VBoxManage.exe&#34; controlvm &#34;default&#34; natpf1 &#34;rule-name,tcp,,8000,,8000&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;On Windows, the storage space shown on the WebODM diagnostic page is not the same as what is actually set in Docker&#39;s settings.&lt;/td&gt; &#xA;   &lt;td&gt;From Hyper-V Manager, right-click “DockerDesktopVM”, go to Edit Disk, then choose to expand the disk and match the maximum size to the settings specified in the docker settings. Upon making the changes, restart docker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Images Missing from Lightning Assets&lt;/h4&gt; &#xA;&lt;p&gt;When you use Lightning to process your task, you will need to download all assets to your local instance of WebODM. The all assets zip does &lt;em&gt;not&lt;/em&gt; contain the images which were used to create the orthomosaic. This means that, although you can visualise the cameras layer in your local WebODM, when you click on a particular camera icon the image will not be shown.&lt;/p&gt; &#xA;&lt;p&gt;The fix if you are using WebODM with Docker is as follows (instructions are for MacOS host):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Ensure that you have a directory which contains all of the images for the task and only the images;&lt;/li&gt; &#xA; &lt;li&gt;Open Docker Desktop and navigate to Containers. Identify your WebODM instance and navigate to the container that is named &lt;code&gt;worker&lt;/code&gt;. You will need the Container ID. This is a hash which is listed under the container name. Click to copy the Container ID using the copy icon next to it.&lt;/li&gt; &#xA; &lt;li&gt;Open Terminal and enter &lt;code&gt;docker cp &amp;lt;sourcedirectory&amp;gt;/. &amp;lt;dockercontainerID&amp;gt;:/webodm/app/media/project/&amp;lt;projectID&amp;gt;/task/&amp;lt;taskID&amp;gt;&lt;/code&gt;. Paste the Container ID to replace the location titled &lt;code&gt;&amp;lt;dockercontainerID&amp;gt;&lt;/code&gt;. Enter the full directory path for your images to replace &lt;code&gt;&amp;lt;sourcedirectory&amp;gt;&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Go back to Docker Desktop and navigate to Volumes in the side bar. Click on the volume called &lt;code&gt;webodm_appmedia&lt;/code&gt;, click on &lt;code&gt;project&lt;/code&gt;, identify the correct project and click on it, click on &lt;code&gt;task&lt;/code&gt; and identify the correct task.&lt;/li&gt; &#xA; &lt;li&gt;From Docker Desktop substitute the correct &lt;code&gt;&amp;lt;projectID&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;taskID&amp;gt;&lt;/code&gt; into the command in Terminal;&lt;/li&gt; &#xA; &lt;li&gt;Execute the newly edited command in Terminal. You will see a series of progress messages and your images will be copied to Docker;&lt;/li&gt; &#xA; &lt;li&gt;Navigate to your project in your local instance of WebODM;&lt;/li&gt; &#xA; &lt;li&gt;Open the Map and turn on the Cameras layer (top left);&lt;/li&gt; &#xA; &lt;li&gt;Click on a Camera icon and the relevant image will be shown&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Have you had other issues? Please &lt;a href=&#34;https://github.com/OpenDroneMap/WebODM/issues/new&#34;&gt;report them&lt;/a&gt; so that we can include them in this document.&lt;/p&gt; &#xA;&lt;h3&gt;Backup and Restore&lt;/h3&gt; &#xA;&lt;p&gt;If you want to move WebODM to another system, you just need to transfer the docker volumes (unless you are storing your files on the file system).&lt;/p&gt; &#xA;&lt;p&gt;On the old system:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -v backup&#xA;docker run --rm --volume webodm_dbdata:/temp --volume `pwd`/backup:/backup ubuntu tar cvf /backup/dbdata.tar /temp&#xA;docker run --rm --volume webodm_appmedia:/temp --volume `pwd`/backup:/backup ubuntu tar cvf /backup/appmedia.tar /temp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your backup files will be stored in the newly created &lt;code&gt;backup&lt;/code&gt; directory. Transfer the &lt;code&gt;backup&lt;/code&gt; directory to the new system, then on the new system:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls backup # --&amp;gt; appmedia.tar  dbdata.tar&#xA;./webodm.sh down # Make sure WebODM is down&#xA;docker run --rm --volume webodm_dbdata:/temp --volume `pwd`/backup:/backup ubuntu bash -c &#34;rm -fr /temp/* &amp;amp;&amp;amp; tar xvf /backup/dbdata.tar&#34;&#xA;docker run --rm --volume webodm_appmedia:/temp --volume `pwd`/backup:/backup ubuntu bash -c &#34;rm -fr /temp/* &amp;amp;&amp;amp; tar xvf /backup/appmedia.tar&#34;&#xA;./webodm.sh start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In case when recovery .tar is missed, or corrupted you can conduct &lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/contrib/Hard_Recovery_Guide.md&#34;&gt;Hard Recovery&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Reset Password&lt;/h3&gt; &#xA;&lt;p&gt;If you forgot the password you picked the first time you logged into WebODM, to reset it just type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./webodm.sh start &amp;amp;&amp;amp; ./webodm.sh resetadminpassword newpass&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The password will be reset to &lt;code&gt;newpass&lt;/code&gt;. The command will also tell you what username you chose.&lt;/p&gt; &#xA;&lt;h3&gt;Manage Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Plugins can be enabled and disabled from the user interface. Simply go to Administration -- Plugins.&lt;/p&gt; &#xA;&lt;h3&gt;Update&lt;/h3&gt; &#xA;&lt;p&gt;If you use docker, updating is as simple as running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./webodm.sh update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are running WebODM &lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#run-it-natively&#34;&gt;natively&lt;/a&gt;, these commands should do it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /webodm&#xA;sudo su odm # Only in case you are running WebODM with a different user&#xA;git pull origin master&#xA;source python3-venv/bin/activate # If you are running a virtualenv&#xA;npm install&#xA;pip install -r requirements.txt&#xA;webpack --mode production&#xA;python manage.py collectstatic --noinput&#xA;python manage.py migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Recommended Machine Specs&lt;/h2&gt; &#xA;&lt;p&gt;To run a standalone installation of WebODM (the user interface), including the processing component (NodeODM), we recommend at a minimum:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;100 GB free disk space&lt;/li&gt; &#xA; &lt;li&gt;16 GB RAM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Don&#39;t expect to process more than a few hundred images with these specifications. To process larger datasets, add more RAM linearly to the number of images you want to process. A CPU with more cores will speed up processing, but can increase memory usage. GPU acceleration is also supported. To make use of your CUDA-compatible graphics card, make sure to pass &lt;code&gt;--gpu&lt;/code&gt; when starting WebODM. You need the nvidia-docker installed in this case, see &lt;a href=&#34;https://github.com/NVIDIA/nvidia-docker&#34;&gt;https://github.com/NVIDIA/nvidia-docker&lt;/a&gt; and &lt;a href=&#34;https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker&#34;&gt;https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker&lt;/a&gt; for information on docker/NVIDIA setup.&lt;/p&gt; &#xA;&lt;p&gt;WebODM runs best on Linux, but works well on Windows and Mac too. If you are technically inclined, you can get WebODM to run natively on all three platforms.&lt;/p&gt; &#xA;&lt;p&gt;WebODM by itself is just a user interface (see &lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#odm-nodeodm-webodm-what&#34;&gt;below&lt;/a&gt;) and does not require many resources. WebODM can be loaded on a machine with just 1 or 2 GB of RAM and work fine without NodeODM. You can then use a processing service such as the &lt;a href=&#34;https://webodm.net&#34;&gt;lightning network&lt;/a&gt; or run NodeODM on a separate, more powerful machine.&lt;/p&gt; &#xA;&lt;h2&gt;Customizing and Extending&lt;/h2&gt; &#xA;&lt;p&gt;Small customizations such as changing the application colors, name, logo, or adding custom CSS/HTML/Javascript can be performed directly from the Customize -- Brand/Theme panels within WebODM. No need to fork or change the code.&lt;/p&gt; &#xA;&lt;p&gt;More advanced customizations can be achieved by writing &lt;a href=&#34;https://github.com/OpenDroneMap/WebODM/tree/master/coreplugins&#34;&gt;plugins&lt;/a&gt;. This is the preferred way to add new functionality to WebODM since it requires less effort than maintaining a separate fork. The plugin system features server-side &lt;a href=&#34;https://github.com/OpenDroneMap/WebODM/raw/master/app/plugins/signals.py&#34;&gt;signals&lt;/a&gt; that can be used to be notified of various events, a ES6/React build system, a dynamic &lt;a href=&#34;https://github.com/OpenDroneMap/WebODM/tree/master/app/static/app/js/classes/plugins&#34;&gt;client-side API&lt;/a&gt; for adding elements to the UI, a built-in data store, an async task runner, a GRASS engine, hooks to add menu items and functions to rapidly inject CSS, Javascript and Django views.&lt;/p&gt; &#xA;&lt;p&gt;For plugins, the best source of documentation currently is to look at existing &lt;a href=&#34;https://github.com/OpenDroneMap/WebODM/tree/master/coreplugins&#34;&gt;code&lt;/a&gt;. If a particular hook / entrypoint for your plugin does not yet exist, &lt;a href=&#34;https://github.com/OpenDroneMap/WebODM/issues&#34;&gt;request it&lt;/a&gt;. We are adding hooks and entrypoints as we go.&lt;/p&gt; &#xA;&lt;p&gt;To create a plugin simply copy the &lt;code&gt;plugins/test&lt;/code&gt; plugin into a new directory (for example, &lt;code&gt;plugins/myplugin&lt;/code&gt;), then modify &lt;code&gt;manifest.json&lt;/code&gt;, &lt;code&gt;plugin.py&lt;/code&gt; and issue a &lt;code&gt;./webodm.sh restart&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;API Docs&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;http://docs.webodm.org&#34;&gt;API documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;We follow a bottom-up approach to decide what new features are added to WebODM. User feedback guides us in the decision making process and we collect such feedback via &lt;a href=&#34;https://github.com/OpenDroneMap/WebODM/issues?q=is%3Aopen+is%3Aissue+label%3Aimprovements&#34;&gt;improvement requests&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t see a feature that you want? &lt;a href=&#34;https://github.com/OpenDroneMap/WebODM/issues&#34;&gt;Open a feature request&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/CONTRIBUTING.md&#34;&gt;help us build it&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Sometimes we also prioritize work that has received financial backing. If your organization is in the position to financially support the development of a particular feature, &lt;a href=&#34;https://community.opendronemap.org&#34;&gt;get in touch&lt;/a&gt; and we&#39;ll make it happen.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;We have several channels of communication for people to ask questions and to get involved with the community:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://community.opendronemap.org/c/webodm&#34;&gt;OpenDroneMap Community Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenDroneMap/WebODM/issues&#34;&gt;Report Issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We also have a &lt;a href=&#34;https://gitter.im/OpenDroneMap/web-development&#34;&gt;Gitter Chat&lt;/a&gt;, but the preferred way to communicate is via the &lt;a href=&#34;http://community.opendronemap.org/c/webodm&#34;&gt;OpenDroneMap Community Forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support the Project&lt;/h2&gt; &#xA;&lt;p&gt;There are many ways to contribute back to the project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Help us test new and existing features and report &lt;a href=&#34;https://www.github.com/OpenDroneMap/WebODM/issues&#34;&gt;bugs&lt;/a&gt; and &lt;a href=&#34;http://community.opendronemap.org/c/webodm&#34;&gt;feedback&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://community.opendronemap.org/c/datasets&#34;&gt;Share&lt;/a&gt; your aerial datasets.&lt;/li&gt; &#xA; &lt;li&gt;Help answer questions on the community &lt;a href=&#34;http://community.opendronemap.org/c/webodm&#34;&gt;forum&lt;/a&gt; and &lt;a href=&#34;https://gitter.im/OpenDroneMap/web-development&#34;&gt;chat&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;⭐️ us on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;Help us &lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/#translations&#34;&gt;translate&lt;/a&gt; WebODM in your language.&lt;/li&gt; &#xA; &lt;li&gt;Help us classify &lt;a href=&#34;https://github.com/OpenDroneMap/ODMSemantic3D&#34;&gt;point cloud datasets&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Spread the word about WebODM and OpenDroneMap on social media.&lt;/li&gt; &#xA; &lt;li&gt;While we don&#39;t accept donations, you can purchase an &lt;a href=&#34;https://webodm.org/download#installer&#34;&gt;installer&lt;/a&gt;, a &lt;a href=&#34;https://odmbook.com/&#34;&gt;book&lt;/a&gt; or a &lt;a href=&#34;https://github.com/users/pierotofy/sponsorship&#34;&gt;sponsor package&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You can &lt;a href=&#34;https://fund.webodm.org&#34;&gt;pledge funds&lt;/a&gt; for getting new features built and bug fixed.&lt;/li&gt; &#xA; &lt;li&gt;Become a contributor 🤘&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s easy to translate WebODM in a different language!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://hosted.weblate.org/engage/webodm/&#34;&gt;https://hosted.weblate.org/engage/webodm/&lt;/a&gt; and register an account (it&#39;s free)&lt;/li&gt; &#xA; &lt;li&gt;Pick a language to translate, or &lt;a href=&#34;https://hosted.weblate.org/new-lang/webodm/webodm/&#34;&gt;start a new translation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start translating! It&#39;s that easy.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to preview your translation work, start WebODM in developer mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./webodm.sh restart --dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then edit the &lt;a href=&#34;https://github.com/OpenDroneMap/WebODM/raw/master/LOCALES&#34;&gt;LOCALES&lt;/a&gt; file to include your translation locale code. Finally, visit the &lt;code&gt;Developer Tools&lt;/code&gt; panel from WebODM&#39;s dashboard and press the &lt;code&gt;Download and Replace Translation Files&lt;/code&gt; button:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1951843/102927263-a294a100-4464-11eb-956e-888b73dc5b94.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The latest translation files from weblate.org will be downloaded and applied to the installation of WebODM.&lt;/p&gt; &#xA;&lt;h2&gt;Become a Contributor&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to get started is to take a look at our list of &lt;a href=&#34;https://github.com/OpenDroneMap/WebODM/labels/help%20wanted&#34;&gt;outstanding issues&lt;/a&gt; and pick one. You can also fix/improve something entirely new based on your experience with WebODM. All ideas are considered and people of all skill levels are welcome to contribute.&lt;/p&gt; &#xA;&lt;p&gt;You don&#39;t necessarily need to be a developer to become a contributor. We can use your help to write better documentation and improve the user interface texts and visuals.&lt;/p&gt; &#xA;&lt;p&gt;If you know how to code, we primarily use Python (Django), Javascript (React), HTML and SCSS. See the &lt;a href=&#34;http://docs.webodm.org/#development-quickstart&#34;&gt;Development Quickstart&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; documents for more information.&lt;/p&gt; &#xA;&lt;p&gt;To make a contribution, you will need to open a pull request (&lt;a href=&#34;https://github.com/Roshanjossey/first-contributions#fork-this-repository&#34;&gt;here&#39;s how&lt;/a&gt;). To make changes to WebODM, make a clone of the repository and run &lt;code&gt;./webodm.sh start --dev&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have questions visit us on the &lt;a href=&#34;http://community.opendronemap.org/c/webodm&#34;&gt;forum&lt;/a&gt; and we&#39;ll be happy to help you out with your first contribution.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture Overview&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/OpenDroneMap/&#34;&gt;OpenDroneMap project&lt;/a&gt; is composed of several components.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenDroneMap/ODM&#34;&gt;ODM&lt;/a&gt; is a command line toolkit that processes aerial images. Users comfortable with the command line are probably OK using this component alone.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenDroneMap/NodeODM&#34;&gt;NodeODM&lt;/a&gt; is a lightweight interface and API (Application Program Interface) built directly on top of &lt;a href=&#34;https://github.com/OpenDroneMap/ODM&#34;&gt;ODM&lt;/a&gt;. Users not comfortable with the command line can use this interface to process aerial images and developers can use the API to build applications. Features such as user authentication, map displays, etc. are not provided.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenDroneMap/WebODM&#34;&gt;WebODM&lt;/a&gt; adds more features such as user authentication, map displays, 3D displays, a higher level API and the ability to orchestrate multiple processing nodes (run jobs in parallel). Processing nodes are simply servers running &lt;a href=&#34;https://github.com/OpenDroneMap/NodeODM&#34;&gt;NodeODM&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1951843/25567386/5aeec7aa-2dba-11e7-9169-aca97b70db79.png&#34; alt=&#34;webodm&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;WebODM is built with scalability and performance in mind. While the default setup places all databases and applications on the same machine, users can separate its components for increased performance (ex. place a Celery worker on a separate machine for running background tasks).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1951843/36916884-3a269a7a-1e23-11e8-997a-a57cd6ca7950.png&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A few things to note:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We use Celery workers to do background tasks such as resizing images and processing task results, but we use an ad-hoc scheduling mechanism to communicate with NodeODM (which processes the orthophotos, 3D models, etc.). The choice to use two separate systems for task scheduling is due to the flexibility that an ad-hoc mechanism gives us for certain operations (capture task output, persistent data and ability to restart tasks mid-way, communication via REST calls, etc.).&lt;/li&gt; &#xA; &lt;li&gt;If loaded on multiple machines, Celery workers should all share their &lt;code&gt;app/media&lt;/code&gt; directory with the Django application (via network shares). You can manage workers via &lt;code&gt;./worker.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run the docker version as a Linux Service&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to run the docker version with auto start/monitoring/stop, etc, as a systemd style Linux Service, a systemd unit file is included in the service folder of the repo.&lt;/p&gt; &#xA;&lt;p&gt;This should work on any Linux OS capable of running WebODM, and using a SystemD based service daemon (such as Ubuntu 16.04 server for example).&lt;/p&gt; &#xA;&lt;p&gt;This has only been tested on Ubuntu 16.04 server and Red Hat Enterprise Linux 9.&lt;/p&gt; &#xA;&lt;p&gt;The following pre-requisites are required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Requires odm user&lt;/li&gt; &#xA; &lt;li&gt;Requires docker installed via system (ubuntu: &lt;code&gt;sudo apt-get install docker.io&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Requires &#39;screen&#39; package to be installed&lt;/li&gt; &#xA; &lt;li&gt;Requires odm user member of docker group&lt;/li&gt; &#xA; &lt;li&gt;Required WebODM directory checked out/cloned to /opt/WebODM&lt;/li&gt; &#xA; &lt;li&gt;Requires that /opt/WebODM is recursively owned by odm:odm&lt;/li&gt; &#xA; &lt;li&gt;Requires that a Python 3 environment is used at /opt/WebODM/python3-venv&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If all pre-requisites have been met, and repository is checked out/cloned to /opt/WebODM folder, then you can use the following steps to enable and manage the service:&lt;/p&gt; &#xA;&lt;p&gt;First, to install the service, and enable the services to run at startup from now on:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl enable /opt/WebODM/service/webodm-docker.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To manually start/stop the service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl stop webodm-docker&#xA;sudo systemctl start webodm-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To manually check service status:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl status webodm-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the adventurous, the repository can be put anyplace you like by editing the ./WebODM/service/webodm-docker.service file before enabling the service the reflect your repository location, and modifying the systemctl enable command to that directiory.&lt;/p&gt; &#xA;&lt;h2&gt;Run it natively&lt;/h2&gt; &#xA;&lt;p&gt;WebODM can run natively on Windows, MacOS and Linux. We don&#39;t recommend to run WebODM natively (using docker is easier), but it&#39;s possible.&lt;/p&gt; &#xA;&lt;p&gt;Ubuntu 16.04 LTS users can refer to &lt;a href=&#34;https://raw.githubusercontent.com/OpenDroneMap/WebODM/master/contrib/ubuntu_1604_install.sh&#34;&gt;this community script&lt;/a&gt; to install WebODM natively on a new machine.&lt;/p&gt; &#xA;&lt;p&gt;To run WebODM, you will need to install:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PostgreSQL (&amp;gt;= 9.5)&lt;/li&gt; &#xA; &lt;li&gt;PostGIS 2.3&lt;/li&gt; &#xA; &lt;li&gt;Python 3.6&lt;/li&gt; &#xA; &lt;li&gt;GDAL (&amp;gt;= 3)&lt;/li&gt; &#xA; &lt;li&gt;Node.js (&amp;gt;= 6.0)&lt;/li&gt; &#xA; &lt;li&gt;Nginx (Linux/MacOS) - OR - Apache + mod_wsgi or Waitress (Windows)&lt;/li&gt; &#xA; &lt;li&gt;Redis (&amp;gt;= 2.6)&lt;/li&gt; &#xA; &lt;li&gt;GRASS GIS (&amp;gt;= 7.8)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On Linux, make sure you have:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get install binutils libproj-dev gdal-bin nginx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows use the &lt;a href=&#34;https://trac.osgeo.org/osgeo4w/&#34;&gt;OSGeo4W&lt;/a&gt; installer to install GDAL. MacOS users can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install postgres postgis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then these steps should be sufficient to get you up and running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --depth 1 https://github.com/OpenDroneMap/WebODM&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;WebODM/webodm/local_settings.py&lt;/code&gt; file containing your database settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;DATABASES = {&#xA;    &#39;default&#39;: {&#xA;        &#39;ENGINE&#39;: &#39;django.contrib.gis.db.backends.postgis&#39;,&#xA;        &#39;NAME&#39;: &#39;webodm_dev&#39;,&#xA;        &#39;USER&#39;: &#39;postgres&#39;,&#xA;        &#39;PASSWORD&#39;: &#39;postgres&#39;,&#xA;        &#39;HOST&#39;: &#39;localhost&#39;,&#xA;        &#39;PORT&#39;: &#39;5432&#39;,&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From psql or &lt;a href=&#34;https://www.pgadmin.org&#34;&gt;pgadmin&lt;/a&gt;, connect to PostgreSQL, create a new database (name it &lt;code&gt;webodm_dev&lt;/code&gt;), connect to it and set the &lt;a href=&#34;http://postgis.net/docs/manual-2.2/postgis_enable_outdb_rasters.html&#34;&gt;postgis.enable_outdb_rasters&lt;/a&gt; and &lt;a href=&#34;http://postgis.net/docs/postgis_gdal_enabled_drivers.html&#34;&gt;postgis.gdal_enabled_drivers&lt;/a&gt; settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;ALTER SYSTEM SET postgis.enable_outdb_rasters TO True;&#xA;ALTER SYSTEM SET postgis.gdal_enabled_drivers TO &#39;GTiff&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the redis broker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;redis-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;sudo npm install -g webpack&#xA;sudo npm install -g webpack-cli&#xA;npm install&#xA;webpack --mode production&#xA;python manage.py collectstatic --noinput&#xA;chmod +x start.sh &amp;amp;&amp;amp; ./start.sh --no-gunicorn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, start at least one celery worker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./worker.sh start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;start.sh&lt;/code&gt; script will use Django&#39;s built-in server if you pass the &lt;code&gt;--no-gunicorn&lt;/code&gt; parameter. This is good for testing, but bad for production.&lt;/p&gt; &#xA;&lt;p&gt;In production, if you have nginx installed, modify the configuration file in &lt;code&gt;nginx/nginx.conf&lt;/code&gt; to match your system&#39;s configuration and just run &lt;code&gt;start.sh&lt;/code&gt; without parameters.&lt;/p&gt; &#xA;&lt;p&gt;Windows users should refer to &lt;a href=&#34;https://docs.djangoproject.com/en/1.11/howto/deployment/wsgi/modwsgi/&#34;&gt;this guide&lt;/a&gt; to install Apache + mod_wsgi and run gunicorn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gunicorn webodm.wsgi --bind 0.0.0.0:8000 --preload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are getting a &lt;code&gt;rt_raster_gdal_warp: Could not create GDAL transformation object for output dataset creation&lt;/code&gt;, make sure that your PostGIS installation has PROJ support:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT PostGIS_Full_Version();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also need to set the environment variable PROJSO to the .so or .dll projection library your PostGIS is using. This just needs to have the name of the file. So for example on Windows, you would in Control Panel -&amp;gt; System -&amp;gt; Environment Variables add a system variable called PROJSO and set it to libproj.dll (if you are using proj 4.6.1). You&#39;ll have to restart your PostgreSQL service/daemon after this change. &lt;a href=&#34;http://postgis.net/docs/manual-2.0/RT_ST_Transform.html&#34;&gt;http://postgis.net/docs/manual-2.0/RT_ST_Transform.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are using Windows and are unable to go past the &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; command because of an error regarding zlib and Pillow, manually edit the &lt;code&gt;requirements.txt&lt;/code&gt; file, remove the Pillow requirement and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;easy_install pillow&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows make sure that all of your PATH environment variables are set properly. These commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python --version&#xA;pip --version&#xA;npm --version&#xA;gdalinfo --version&#xA;redis-server --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Should all work without errors.&lt;/p&gt; &#xA;&lt;h2&gt;Run it on the cloud (Google Compute, Amazon AWS)&lt;/h2&gt; &#xA;&lt;p&gt;12 steps, to have WebODM running on a cloud instance.&lt;/p&gt; &#xA;&lt;p&gt;These steps are for Google Cloud, but can also be used for Amazon AWS, and other cloud platforms with small modifications:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Launch a Google Cloud instance of Ubuntu 18.0 LTS.&lt;/li&gt; &#xA; &lt;li&gt;Open the SSH terminal - Google offers SSH via the website.&lt;/li&gt; &#xA; &lt;li&gt;Run sudo apt-get update&lt;/li&gt; &#xA; &lt;li&gt;Run sudo apt-get upgrade&lt;/li&gt; &#xA; &lt;li&gt;Run sudo apt-get install docker-compose&lt;/li&gt; &#xA; &lt;li&gt;Run sudo apt-get install python-pip&lt;/li&gt; &#xA; &lt;li&gt;Run git clone &lt;a href=&#34;https://github.com/OpenDroneMap/WebODM&#34;&gt;https://github.com/OpenDroneMap/WebODM&lt;/a&gt; --config core.autocrlf=input --depth 1&lt;/li&gt; &#xA; &lt;li&gt;cd WebODM (Linux is case sensitive)&lt;/li&gt; &#xA; &lt;li&gt;sudo ./webodm.sh start&lt;/li&gt; &#xA; &lt;li&gt;You now can access webodm via the public IP address for your google instance. Remember the default port of 8000.&lt;/li&gt; &#xA; &lt;li&gt;Check that your instance&#39;s firewall is allowing inbound TCP connections on port 8000! If you forget this step you will not be able to connect to WebODM.&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;a href=&#34;http://GooglepublicIPaddressforyourinstance:8000&#34;&gt;http://GooglepublicIPaddressforyourinstance:8000&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To setup the firewall on Google Cloud, open the instance, on the middle of the instance settings page find NIC0. Open it, and then add the TCP Port 8000 for ingress, and egress on the Firewall.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;WebODM is licensed under the terms of the &lt;a href=&#34;https://github.com/OpenDroneMap/WebODM/raw/master/LICENSE.md&#34;&gt;GNU Affero General Public License v3.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Trademark&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/OpenDroneMap/documents/raw/master/TRADEMARK.md&#34;&gt;Trademark Guidelines&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>