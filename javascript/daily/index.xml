<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-12T01:33:20Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mattboldt/typed.js</title>
    <updated>2022-12-12T01:33:20Z</updated>
    <id>tag:github.com,2022-12-12:/mattboldt/typed.js</id>
    <link href="https://github.com/mattboldt/typed.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A JavaScript Typing Animation Library&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/mattboldt/typed.js&#34;&gt;&lt;img src=&#34;https://travis-ci.org/mattboldt/typed.js.svg?branch=typed-2.0&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/mattboldt/typed.js&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/mattboldt/typed.js/badges/gpa.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/mattboldt/typed.js.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/npm/dt/typed.js.svg&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dt/typed.js.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/mattboldt/typed.js/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mattboldt/typed.js/master/logo-cropped.png&#34; width=&#34;450px&#34; title=&#34;Typed.js&#34;&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;http://www.mattboldt.com/demos/typed-js/&#34;&gt;Live Demo&lt;/a&gt; | &lt;a href=&#34;http://mattboldt.github.io/typed.js/&#34;&gt;View All Demos&lt;/a&gt; | &lt;a href=&#34;http://mattboldt.github.io/typed.js/docs&#34;&gt;View Full Docs&lt;/a&gt; | &lt;a href=&#34;http://www.mattboldt.com&#34;&gt;mattboldt.com&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Typed.js is a library that types. Enter in any string, and watch it type at the speed you&#39;ve set, backspace what it&#39;s typed, and begin a new sentence for however many strings you&#39;ve set.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h4&gt;Choose One&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install typed.js&#xA;yarn add typed.js&#xA;bower install typed.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;CDN&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/typed.js@2.0.12&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Setup&lt;/h4&gt; &#xA;&lt;p&gt;This is really all you need to get going.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Can also be included with a regular script tag&#xA;import Typed from &#39;typed.js&#39;;&#xA;&#xA;var options = {&#xA;  strings: [&#39;&amp;lt;i&amp;gt;First&amp;lt;/i&amp;gt; sentence.&#39;, &#39;&amp;amp;amp; a second sentence.&#39;],&#xA;  typeSpeed: 40&#xA;};&#xA;&#xA;var typed = new Typed(&#39;.element&#39;, options);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use with ReactJS&lt;/h3&gt; &#xA;&lt;p&gt;Hook-based function component: &lt;a href=&#34;https://jsfiddle.net/mattboldt/60h9an7y/&#34;&gt;https://jsfiddle.net/mattboldt/60h9an7y/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Class component: &lt;a href=&#34;https://jsfiddle.net/mattboldt/ovat9jmp/&#34;&gt;https://jsfiddle.net/mattboldt/ovat9jmp/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Use with Vue.js&lt;/h3&gt; &#xA;&lt;p&gt;Check out the Vue.js component: &lt;a href=&#34;https://github.com/Orlandster/vue-typed-js&#34;&gt;https://github.com/Orlandster/vue-typed-js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Use it as WebComponent&lt;/h3&gt; &#xA;&lt;p&gt;Check out the WebComponent: &lt;a href=&#34;https://github.com/Orlandster/wc-typed-js&#34;&gt;https://github.com/Orlandster/wc-typed-js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Wonderful sites that have used (or are using) Typed.js&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/features/package-registry&#34;&gt;https://github.com/features/package-registry&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://slack.com/&#34;&gt;https://slack.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://envato.com/&#34;&gt;https://envato.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gorails.com/&#34;&gt;https://gorails.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://productmap.co/&#34;&gt;https://productmap.co/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.typed.com/&#34;&gt;https://www.typed.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apeiron.io&#34;&gt;https://apeiron.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://git.market/&#34;&gt;https://git.market/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://commando.io/&#34;&gt;https://commando.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://testdouble.com/agency.html&#34;&gt;http://testdouble.com/agency.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.capitalfactory.com/&#34;&gt;https://www.capitalfactory.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.maxcdn.com/&#34;&gt;http://www.maxcdn.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.powerauth.com/&#34;&gt;https://www.powerauth.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Strings from static HTML (SEO Friendly)&lt;/h3&gt; &#xA;&lt;p&gt;Rather than using the &lt;code&gt;strings&lt;/code&gt; array to insert strings, you can place an HTML &lt;code&gt;div&lt;/code&gt; on the page and read from it. This allows bots and search engines, as well as users with JavaScript disabled, to see your text on the page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;script&amp;gt;&#xA;  var typed = new Typed(&#39;#typed&#39;, {&#xA;    stringsElement: &#39;#typed-strings&#39;&#xA;  });&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div id=&#34;typed-strings&#34;&amp;gt;&#xA;  &amp;lt;p&amp;gt;Typed.js is a &amp;lt;strong&amp;gt;JavaScript&amp;lt;/strong&amp;gt; library.&amp;lt;/p&amp;gt;&#xA;  &amp;lt;p&amp;gt;It &amp;lt;em&amp;gt;types&amp;lt;/em&amp;gt; out sentences.&amp;lt;/p&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&amp;lt;span id=&#34;typed&#34;&amp;gt;&amp;lt;/span&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Type Pausing&lt;/h3&gt; &#xA;&lt;p&gt;You can pause in the middle of a string for a given amount of time by including an escape character.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var typed = new Typed(&#39;.element&#39;, {&#xA;  // Waits 1000ms after typing &#34;First&#34;&#xA;  strings: [&#39;First ^1000 sentence.&#39;, &#39;Second sentence.&#39;]&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Smart Backspacing&lt;/h3&gt; &#xA;&lt;p&gt;In the following example, this would only backspace the words after &#34;This is a&#34;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var typed = new Typed(&#39;.element&#39;, {&#xA;  strings: [&#39;This is a JavaScript library&#39;, &#39;This is an ES6 module&#39;],&#xA;  smartBackspace: true // Default value&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bulk Typing&lt;/h3&gt; &#xA;&lt;p&gt;The following example would emulate how a terminal acts when typing a command and seeing its result.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var typed = new Typed(&#39;.element&#39;, {&#xA;  strings: [&#39;git push --force ^1000\n `pushed to origin with option force`&#39;]&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CSS&lt;/h3&gt; &#xA;&lt;p&gt;CSS animations are built upon initialization in JavaScript. But, you can customize them at your will! These classes are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/* Cursor */&#xA;.typed-cursor {&#xA;}&#xA;&#xA;/* If fade out option is set */&#xA;.typed-fade-out {&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var typed = new Typed(&#39;.element&#39;, {&#xA;  /**&#xA;   * @property {array} strings strings to be typed&#xA;   * @property {string} stringsElement ID of element containing string children&#xA;   */&#xA;  strings: [&#xA;    &#39;These are the default values...&#39;,&#xA;    &#39;You know what you should do?&#39;,&#xA;    &#39;Use your own!&#39;,&#xA;    &#39;Have a great day!&#39;&#xA;  ],&#xA;  stringsElement: null,&#xA;&#xA;  /**&#xA;   * @property {number} typeSpeed type speed in milliseconds&#xA;   */&#xA;  typeSpeed: 0,&#xA;&#xA;  /**&#xA;   * @property {number} startDelay time before typing starts in milliseconds&#xA;   */&#xA;  startDelay: 0,&#xA;&#xA;  /**&#xA;   * @property {number} backSpeed backspacing speed in milliseconds&#xA;   */&#xA;  backSpeed: 0,&#xA;&#xA;  /**&#xA;   * @property {boolean} smartBackspace only backspace what doesn&#39;t match the previous string&#xA;   */&#xA;  smartBackspace: true,&#xA;&#xA;  /**&#xA;   * @property {boolean} shuffle shuffle the strings&#xA;   */&#xA;  shuffle: false,&#xA;&#xA;  /**&#xA;   * @property {number} backDelay time before backspacing in milliseconds&#xA;   */&#xA;  backDelay: 700,&#xA;&#xA;  /**&#xA;   * @property {boolean} fadeOut Fade out instead of backspace&#xA;   * @property {string} fadeOutClass css class for fade animation&#xA;   * @property {boolean} fadeOutDelay Fade out delay in milliseconds&#xA;   */&#xA;  fadeOut: false,&#xA;  fadeOutClass: &#39;typed-fade-out&#39;,&#xA;  fadeOutDelay: 500,&#xA;&#xA;  /**&#xA;   * @property {boolean} loop loop strings&#xA;   * @property {number} loopCount amount of loops&#xA;   */&#xA;  loop: false,&#xA;  loopCount: Infinity,&#xA;&#xA;  /**&#xA;   * @property {boolean} showCursor show cursor&#xA;   * @property {string} cursorChar character for cursor&#xA;   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML &amp;lt;head&amp;gt;&#xA;   */&#xA;  showCursor: true,&#xA;  cursorChar: &#39;|&#39;,&#xA;  autoInsertCss: true,&#xA;&#xA;  /**&#xA;   * @property {string} attr attribute for typing&#xA;   * Ex: input placeholder, value, or just HTML text&#xA;   */&#xA;  attr: null,&#xA;&#xA;  /**&#xA;   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input&#xA;   */&#xA;  bindInputFocusEvents: false,&#xA;&#xA;  /**&#xA;   * @property {string} contentType &#39;html&#39; or &#39;null&#39; for plaintext&#xA;   */&#xA;  contentType: &#39;html&#39;,&#xA;&#xA;  /**&#xA;   * Before it begins typing&#xA;   * @param {Typed} self&#xA;   */&#xA;  onBegin: (self) =&amp;gt; {},&#xA;&#xA;  /**&#xA;   * All typing is complete&#xA;   * @param {Typed} self&#xA;   */&#xA;  onComplete: (self) =&amp;gt; {},&#xA;&#xA;  /**&#xA;   * Before each string is typed&#xA;   * @param {number} arrayPos&#xA;   * @param {Typed} self&#xA;   */&#xA;  preStringTyped: (arrayPos, self) =&amp;gt; {},&#xA;&#xA;  /**&#xA;   * After each string is typed&#xA;   * @param {number} arrayPos&#xA;   * @param {Typed} self&#xA;   */&#xA;  onStringTyped: (arrayPos, self) =&amp;gt; {},&#xA;&#xA;  /**&#xA;   * During looping, after last string is typed&#xA;   * @param {Typed} self&#xA;   */&#xA;  onLastStringBackspaced: (self) =&amp;gt; {},&#xA;&#xA;  /**&#xA;   * Typing has been stopped&#xA;   * @param {number} arrayPos&#xA;   * @param {Typed} self&#xA;   */&#xA;  onTypingPaused: (arrayPos, self) =&amp;gt; {},&#xA;&#xA;  /**&#xA;   * Typing has been started after being stopped&#xA;   * @param {number} arrayPos&#xA;   * @param {Typed} self&#xA;   */&#xA;  onTypingResumed: (arrayPos, self) =&amp;gt; {},&#xA;&#xA;  /**&#xA;   * After reset&#xA;   * @param {Typed} self&#xA;   */&#xA;  onReset: (self) =&amp;gt; {},&#xA;&#xA;  /**&#xA;   * After stop&#xA;   * @param {number} arrayPos&#xA;   * @param {Typed} self&#xA;   */&#xA;  onStop: (arrayPos, self) =&amp;gt; {},&#xA;&#xA;  /**&#xA;   * After start&#xA;   * @param {number} arrayPos&#xA;   * @param {Typed} self&#xA;   */&#xA;  onStart: (arrayPos, self) =&amp;gt; {},&#xA;&#xA;  /**&#xA;   * After destroy&#xA;   * @param {Typed} self&#xA;   */&#xA;  onDestroy: (self) =&amp;gt; {}&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mattboldt/typed.js/master/.github/CONTRIBUTING.md&#34;&gt;View Contribution Guidelines&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;end&lt;/h2&gt; &#xA;&lt;p&gt;Thanks for checking this out. If you have any questions, I&#39;ll be on &lt;a href=&#34;https://twitter.com/atmattb&#34;&gt;Twitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using this, let me know! I&#39;d love to see it.&lt;/p&gt; &#xA;&lt;p&gt;It would also be great if you mentioned me or my website somewhere. &lt;a href=&#34;http://www.mattboldt.com&#34;&gt;www.mattboldt.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>manga-download/hakuneko</title>
    <updated>2022-12-12T01:33:20Z</updated>
    <id>tag:github.com,2022-12-12:/manga-download/hakuneko</id>
    <link href="https://github.com/manga-download/hakuneko" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Manga &amp; Anime Downloader for Linux, Windows &amp; MacOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HakuNeko&lt;/h1&gt; &#xA;&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt; &#xA; &lt;div id=&#34;toctitle&#34;&gt;&#xA;  Table of Contents&#xA; &lt;/div&gt; &#xA; &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/manga-download/hakuneko/master/#_download&#34;&gt;1. Download&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/manga-download/hakuneko/master/#_status&#34;&gt;2. Status&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/manga-download/hakuneko/master/#_introduction&#34;&gt;3. Introduction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/manga-download/hakuneko/master/#_development&#34;&gt;4. Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/div&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;hr&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;🏡 Website : &lt;a href=&#34;https://hakuneko.download&#34; class=&#34;bare&#34;&gt;https://hakuneko.download&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://discord.gg/A5d3NDf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://hakuneko.download/assets/images/discord-small.png&#34; alt=&#34;discord small&#34; title=&#34;Join us on discord&#34;&gt;&lt;/a&gt;&lt;/span&gt; Discord : &lt;a href=&#34;https://discord.gg/A5d3NDf&#34; class=&#34;bare&#34;&gt;https://discord.gg/A5d3NDf&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect2&#34;&gt; &#xA; &lt;h3 id=&#34;_download&#34;&gt;1. Download&lt;/h3&gt; &#xA; &lt;div class=&#34;paragraph&#34;&gt; &#xA;  &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/manga-download/hakuneko/releases/latest&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/manga-download/hakuneko/latest/total?label=HakuNeko%20%28Stable%29&amp;amp;logo=github&#34; alt=&#34;total?label=HakuNeko%20%28Stable%29&amp;amp;logo=github&#34; title=&#34;Download the latest stable release of HakuNeko&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/manga-download/hakuneko/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads-pre/manga-download/hakuneko/latest/total?color=blue&amp;amp;label=HakuNeko%20%28Nightly%29&amp;amp;logo=azure-devops&#34; alt=&#34;total?color=blue&amp;amp;label=HakuNeko%20%28Nightly%29&amp;amp;logo=azure devops&#34; title=&#34;Download the latest pre-release (nightly build) of HakuNeko&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://community.chocolatey.org/packages/hakunekonightly&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://img.shields.io/chocolatey/dt/hakunekonightly?color=blue&amp;amp;label=Chocolatey%20package&#34; alt=&#34;hakunekonightly?color=blue&amp;amp;label=Chocolatey%20package&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA; &lt;/div&gt; &#xA; &lt;div class=&#34;paragraph&#34;&gt; &#xA;  &lt;p&gt;Yes, the download section comes first, because this is what most users are looking for anyway. You can download and run the installer/archive for your operating system from one of the mirror sites above. There is also a portable version available for Windows which stores all its application data inside the application folder.&lt;/p&gt; &#xA; &lt;/div&gt; &#xA; &lt;hr&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect2&#34;&gt; &#xA; &lt;h3 id=&#34;_status&#34;&gt;2. Status&lt;/h3&gt; &#xA; &lt;div class=&#34;paragraph&#34;&gt; &#xA;  &lt;p&gt;This section shows the latest build and test results for the master branch of the mirrored repository on &lt;a href=&#34;https://dev.azure.com/manga-download/hakuneko/_build&#34;&gt;Azure&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;/div&gt; &#xA; &lt;div class=&#34;paragraph&#34;&gt; &#xA;  &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://dev.azure.com/manga-download/hakuneko/_testManagement/runs?_a=runQuery&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/tests/manga-download/hakuneko/8?label=CI%20Tests&amp;amp;logo=azure-pipelines&#34; alt=&#34;Test Results&#34; title=&#34;List of CI Test Results&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://dev.azure.com/manga-download/hakuneko/_build/latest?definitionId=5&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/manga-download/hakuneko/_apis/build/status/CI?branchName=master&amp;amp;label=CI%20Pipeline&#34; alt=&#34;Build Status&#34; title=&#34;Latest CI Pipeline Summary&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://dev.azure.com/manga-download/hakuneko/_build/latest?definitionId=7&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/manga-download/hakuneko/_apis/build/status/Nightly?branchName=master&amp;amp;label=Nightly%20Build&#34; alt=&#34;Build Status&#34; title=&#34;Latest Nightly Build Summary&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA; &lt;/div&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary class=&#34;title&#34;&gt;Details&lt;/summary&gt; &#xA;  &lt;div class=&#34;content&#34;&gt; &#xA;   &lt;div class=&#34;dlist&#34;&gt; &#xA;    &lt;dl&gt; &#xA;     &lt;dt class=&#34;hdlist1&#34;&gt;&#xA;      Continuous Integration&#xA;     &lt;/dt&gt; &#xA;     &lt;dd&gt; &#xA;      &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://dev.azure.com/manga-download/hakuneko/_apis/build/status/CI?branchName=master&amp;amp;jobName=CI&amp;amp;configuration=CI%20Windows&amp;amp;label=CI%20-%20Windows&#34; alt=&#34;CI?branchName=master&amp;amp;jobName=CI&amp;amp;configuration=CI%20Windows&amp;amp;label=CI%20 %20Windows&#34; title=&#34;CI Pipeline: Windows&#34;&gt;&lt;/span&gt; &lt;br&gt; &lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://dev.azure.com/manga-download/hakuneko/_apis/build/status/CI?branchName=master&amp;amp;jobName=CI&amp;amp;configuration=CI%20Ubuntu&amp;amp;label=CI%20-%20Ubuntu&#34; alt=&#34;CI?branchName=master&amp;amp;jobName=CI&amp;amp;configuration=CI%20Ubuntu&amp;amp;label=CI%20 %20Ubuntu&#34; title=&#34;CI Pipeline: Ubuntu&#34;&gt;&lt;/span&gt; &lt;br&gt; &lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://dev.azure.com/manga-download/hakuneko/_apis/build/status/CI?branchName=master&amp;amp;jobName=CI&amp;amp;configuration=CI%20macOS&amp;amp;label=CI%20-%20macOS&#34; alt=&#34;CI?branchName=master&amp;amp;jobName=CI&amp;amp;configuration=CI%20macOS&amp;amp;label=CI%20 %20macOS&#34; title=&#34;CI Pipeline: macOS&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;     &lt;/dd&gt; &#xA;     &lt;dt class=&#34;hdlist1&#34;&gt;&#xA;      Nightly Builds&#xA;     &lt;/dt&gt; &#xA;     &lt;dd&gt; &#xA;      &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://dev.azure.com/manga-download/hakuneko/_apis/build/status/Nightly?branchName=master&amp;amp;jobName=Windows&amp;amp;label=Nightly%20-%20Windows&#34; alt=&#34;Nightly?branchName=master&amp;amp;jobName=Windows&amp;amp;label=Nightly%20 %20Windows&#34; title=&#34;Nightly Build: Windows&#34;&gt;&lt;/span&gt; &lt;br&gt; &lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://dev.azure.com/manga-download/hakuneko/_apis/build/status/Nightly?branchName=master&amp;amp;jobName=Ubuntu&amp;amp;label=Nightly%20-%20Ubuntu&#34; alt=&#34;Nightly?branchName=master&amp;amp;jobName=Ubuntu&amp;amp;label=Nightly%20 %20Ubuntu&#34; title=&#34;Nightly Build: Ubuntu&#34;&gt;&lt;/span&gt; &lt;br&gt; &lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://dev.azure.com/manga-download/hakuneko/_apis/build/status/Nightly?branchName=master&amp;amp;jobName=macOS&amp;amp;label=Nightly%20-%20macOS&#34; alt=&#34;Nightly?branchName=master&amp;amp;jobName=macOS&amp;amp;label=Nightly%20 %20macOS&#34; title=&#34;Nightly Build: macOS&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;     &lt;/dd&gt; &#xA;    &lt;/dl&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/details&gt; &#xA; &lt;hr&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect2&#34;&gt; &#xA; &lt;h3 id=&#34;_introduction&#34;&gt;3. Introduction&lt;/h3&gt; &#xA; &lt;div class=&#34;paragraph&#34;&gt; &#xA;  &lt;p&gt;HakuNeko is a cross-platform downloader for manga and anime from various websites. HakuNeko was made to help users downloading media for circumstances that require offline usage. The philosophy is ad-hoc consumption, get it when you going to read/watch it. It is not meant to be a mass downloader to stock up thousands of chapters that are just collected and will probably never be read.&lt;/p&gt; &#xA; &lt;/div&gt; &#xA; &lt;div class=&#34;openblock clearfix&#34;&gt; &#xA;  &lt;div class=&#34;content&#34;&gt; &#xA;   &lt;div class=&#34;imageblock center&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;a class=&#34;image&#34; href=&#34;https://raw.githubusercontent.com/manga-download/hakuneko/master/screenshot-pages.png&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/manga-download/hakuneko/master/assets/screenshot-pages.png&#34; alt=&#34;screenshot pages&#34; width=&#34;720&#34;&gt;&lt;/a&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;title&#34;&gt;&#xA;     Figure 1. HakuNeko - Chapter Page Preview&#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&amp;nbsp;&lt;br&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;imageblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;a class=&#34;image&#34; href=&#34;https://raw.githubusercontent.com/manga-download/hakuneko/master/screenshot-video.png&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/manga-download/hakuneko/master/assets/screenshot-video.png&#34; alt=&#34;screenshot video&#34; width=&#34;720&#34;&gt;&lt;/a&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;title&#34;&gt;&#xA;     Figure 2. HakuNeko - Anime Playback&#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA; &lt;hr&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect2&#34;&gt; &#xA; &lt;h3 id=&#34;_development&#34;&gt;4. Development&lt;/h3&gt; &#xA; &lt;div class=&#34;paragraph&#34;&gt; &#xA;  &lt;p&gt;For developer documentation please check the &lt;a href=&#34;https://github.com/manga-download/hakuneko/wiki/Developer-Manual&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/div&gt; &#xA; &lt;hr&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>sunshanpeng/wechaty-chatgpt</title>
    <updated>2022-12-12T01:33:20Z</updated>
    <id>tag:github.com,2022-12-12:/sunshanpeng/wechaty-chatgpt</id>
    <link href="https://github.com/sunshanpeng/wechaty-chatgpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于wechaty创建一个自己的ChatGPT微信机器人&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;基于wechaty创建一个自己的ChatGPT机器人&lt;/h1&gt; &#xA;&lt;h2&gt;流程&lt;/h2&gt; &#xA;&lt;h3&gt;注册ChatGPT账号&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;注册地址: &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;https://chat.openai.com/chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;国内注册教程: &lt;a href=&#34;https://juejin.cn/post/7173447848292253704&#34;&gt;https://juejin.cn/post/7173447848292253704&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;登录ChatGPT获取SESSION_TOKEN&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;打开网页: &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;https://chat.openai.com/chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;打开开发者工具-&amp;gt;应用-&amp;gt;Cookie&lt;/li&gt; &#xA; &lt;li&gt;拷贝&lt;code&gt;__Secure-next-auth.session-token&lt;/code&gt;的值 &lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/2777249/1670287051371-acd694da-cd3f-46c4-97c4-96438965f8a4.png#averageHue=%232d3136&amp;amp;clientId=uf4023d0a-0da7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=497&amp;amp;id=u77b3570c&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;name=image.png&amp;amp;originHeight=994&amp;amp;originWidth=1586&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=796464&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uf4e7e669-4feb-431a-80b7-f7ab47c9113&amp;amp;title=&amp;amp;width=793&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;安装机器人&lt;/h3&gt; &#xA;&lt;h4&gt;Docker安装&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export SESSION_TOKEN=上一步中拷贝的`__Secure-next-auth.session-token`的值 &#xA;&#xA;docker run -e SESSION_TOKEN=&#34;$(echo $SESSION_TOKEN)&#34; --rm -it registry.cn-hangzhou.aliyuncs.com/sunshanpeng/wechaty-chatgpt:0.0.8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;源码安装&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/sunshanpeng/wechaty-chatgpt.git&#xA;cd wechaty-chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export SESSION_TOKEN=上一步中拷贝的`__Secure-next-auth.session-token`的值 &#xA;// install dependencies&#xA;npm i&#xA;// run&#xA;npm run chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;使用机器人&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;扫码登录&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/sunshanpeng/wechaty-chatgpt/main/media/screenshot-20221207-130656.png&#34; width=&#34;600&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;测试ding-dong&lt;/li&gt; &#xA; &lt;li&gt;/c 使用chatgpt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/sunshanpeng/wechaty-chatgpt/main/media/screenshot-20221207-131138.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wechaty/wechaty/&#34;&gt;https://github.com/wechaty/wechaty/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api&#34;&gt;https://github.com/transitive-bullshit/chatgpt-api&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>