<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-03T01:36:40Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>janpaepke/ScrollMagic</title>
    <updated>2023-08-03T01:36:40Z</updated>
    <id>tag:github.com,2023-08-03:/janpaepke/ScrollMagic</id>
    <link href="https://github.com/janpaepke/ScrollMagic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The javascript library for magical scroll interactions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ScrollMagic &lt;a href=&#34;https://github.com/janpaepke/ScrollMagic/raw/master/CHANGELOG.md&#34; class=&#34;version&#34; title=&#34;Whats New?&#34;&gt;v2.0.8&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/janpaepke/ScrollMagic&#34;&gt;&lt;img src=&#34;https://api.travis-ci.org/janpaepke/ScrollMagic.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;The javascript library for magical scroll interactions.&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=8BJC8B58XHKLL&#34; title=&#34;Shut up and take my money!&#34;&gt;&lt;img src=&#34;https://scrollmagic.io/assets/img/btn_donate.svg?sanitize=true&#34; alt=&#34;Donate&#34; title=&#34;Shut up and take my money!&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nerdpool.io/support/scrollmagic?utm_source=github&amp;amp;utm_medium=btn&#34; title=&#34;Get personal live support&#34;&gt;&lt;img src=&#34;https://cdn.nerdpool.io/np-btn-support-blue.png&#34; style=&#34;height: 40px&#34; height=&#34;40&#34; alt=&#34;Request personal live support&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Quicklinks:&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/janpaepke/ScrollMagic/master/#about-the-library&#34;&gt;About&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/janpaepke/ScrollMagic/master/#availability&#34;&gt;Download&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/janpaepke/ScrollMagic/master/#installation&#34;&gt;Installation&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/janpaepke/ScrollMagic/master/#usage&#34;&gt;Usage&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/janpaepke/ScrollMagic/master/#help&#34;&gt;Help&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/janpaepke/ScrollMagic/master/#browser-support&#34;&gt;Compatibility&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/janpaepke/ScrollMagic/master/#about-the-author&#34;&gt;Author&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/janpaepke/ScrollMagic/master/#license&#34;&gt;License&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/janpaepke/ScrollMagic/master/#thanks&#34;&gt;Thanks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;🚨 &lt;strong&gt;ScrollMagic 3.0 is on the horizon.&lt;/strong&gt; &lt;a href=&#34;https://github.com/janpaepke/ScrollMagic/issues/982&#34;&gt;Helpers &amp;amp; Testers wanted&lt;/a&gt;! 🚨&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;ScrollMagic helps you to easily react to the user&#39;s current scroll position.&lt;br&gt; It&#39;s the perfect library for you, if you want to ...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;animate based on scroll position – either trigger an animation or synchronize it to the scrollbar movement (like a playback scrub control).&lt;/li&gt; &#xA; &lt;li&gt;pin an element starting at a specific scroll position – either indefinitely or for a limited amount of scroll progress (sticky elements).&lt;/li&gt; &#xA; &lt;li&gt;toggle CSS classes of elements on and off based on scroll position.&lt;/li&gt; &#xA; &lt;li&gt;effortlessly add parallax effects to your website.&lt;/li&gt; &#xA; &lt;li&gt;create an infinitely scrolling page (ajax load of additional content).&lt;/li&gt; &#xA; &lt;li&gt;add callbacks at specific scroll positions or while scrolling past a specific section, passing a progress parameter.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;http://scrollmagic.io&#34;&gt;the demo page&lt;/a&gt;, browse &lt;a href=&#34;http://scrollmagic.io/examples/index.html&#34;&gt;the examples&lt;/a&gt; or read &lt;a href=&#34;http://scrollmagic.io/docs/index.html&#34;&gt;the documentation&lt;/a&gt; to get started.&lt;br&gt; If you want to contribute please &lt;a href=&#34;mailto:e-mail@janpaepke.de&#34;&gt;get in touch&lt;/a&gt; and let me know about your specialty and experience.&lt;/p&gt; &#xA;&lt;h2&gt;About the Library&lt;/h2&gt; &#xA;&lt;p&gt;ScrollMagic is a scroll interaction library.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s a complete rewrite of its predecessor &lt;a href=&#34;https://github.com/johnpolacek/superscrollorama&#34;&gt;Superscrollorama&lt;/a&gt; by &lt;a href=&#34;http://johnpolacek.com&#34;&gt;John Polacek&lt;/a&gt;.&lt;br&gt; A plugin-based architecture offers easy customizability and extendability.&lt;/p&gt; &#xA;&lt;p&gt;To implement animations, ScrollMagic can work with multiple frameworks. The recommended solution is the &lt;a href=&#34;http://www.greensock.com/gsap-js/&#34;&gt;Greensock Animation Platform (GSAP)&lt;/a&gt; due to its stability and feature richness. For a more lightweight approach, the &lt;a href=&#34;http://VelocityJS.org&#34;&gt;VelocityJS&lt;/a&gt; framework is also supported. Alternatively, custom extensions can be implemented or the necessity of a framework can be completely avoided by animating simply using CSS and class toggles.&lt;/p&gt; &#xA;&lt;p&gt;ScrollMagic was developed with these principles in mind:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;optimized performance&lt;/li&gt; &#xA; &lt;li&gt;lightweight (6KB gzipped)&lt;/li&gt; &#xA; &lt;li&gt;flexibility and extendibility&lt;/li&gt; &#xA; &lt;li&gt;mobile compatibility&lt;/li&gt; &#xA; &lt;li&gt;event management&lt;/li&gt; &#xA; &lt;li&gt;support for responsive web design&lt;/li&gt; &#xA; &lt;li&gt;object-oriented programming and object chaining&lt;/li&gt; &#xA; &lt;li&gt;readable, centralized code, and intuitive development&lt;/li&gt; &#xA; &lt;li&gt;support for both x and y direction scrolling (even both on one page)&lt;/li&gt; &#xA; &lt;li&gt;support for scrolling inside div containers (even multiple on one page)&lt;/li&gt; &#xA; &lt;li&gt;extensive debugging and logging capabilities&lt;/li&gt; &#xA; &lt;li&gt;detailed documentation&lt;/li&gt; &#xA; &lt;li&gt;many application examples&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Is ScrollMagic the right library for you?&lt;/strong&gt;&lt;br&gt; ScrollMagic takes an object-oriented approach using a controller for each scroll container and attaching multiple scenes defining what should happen at what part of the page. While this offers a great deal of control, it might be a little confusing, especially if you&#39;re just starting out with javascript.&lt;br&gt; If the above points are not crucial for you and you are just looking for a simple solution to implement css animations I would strongly recommend taking a look at the awesome &lt;a href=&#34;http://prinzhorn.github.io/skrollr/&#34;&gt;skrollr&lt;/a&gt; project. It almost solely relies on element attributes and thus requires minimal to no javascript knowledge.&lt;/p&gt; &#xA;&lt;h2&gt;Availability&lt;/h2&gt; &#xA;&lt;p&gt;To get your copy of ScrollMagic you have the choice between four options:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 1: GitHub&lt;/strong&gt;&lt;br&gt; Download a zip file containing the source code, demo page, all examples and documentation from the &lt;a href=&#34;https://github.com/janpaepke/ScrollMagic/releases&#34;&gt;GitHub releases page&lt;/a&gt; or clone the package to your machine using the git command line interface:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/janpaepke/ScrollMagic.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 2: Bower&lt;/strong&gt;&lt;br&gt; ScrollMagic is also &lt;a href=&#34;http://bower.io/search/?q=scrollmagic&#34;&gt;available on bower&lt;/a&gt; and will only install the necessary source code, ignoring all example and documentation files.&lt;br&gt; Please mind that since they are not core dependencies, you will have to add frameworks like GSAP, jQuery or Velocity manually, should you choose to use them.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bower install scrollmagic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 3: npm&lt;/strong&gt;&lt;br&gt; If you prefer the &lt;a href=&#34;https://www.npmjs.com/package/scrollmagic&#34;&gt;node package manager&lt;/a&gt;, feel free to use it.&lt;br&gt; Keep in mind that like with bower non-crucial files will be ignored (see above).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install scrollmagic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 4: CDN&lt;/strong&gt;&lt;br&gt; If you don&#39;t want to host ScrollMagic yourself, you can include it from &lt;a href=&#34;https://cdnjs.com/libraries/ScrollMagic&#34;&gt;cdnjs&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.8/ScrollMagic.min.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All plugins and uncompressed files are also available on cdnjs.&lt;br&gt; For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.8/plugins/debug.addIndicators.js&#xA;https://cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.8/plugins/debug.addIndicators.min.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Include the &lt;strong&gt;core&lt;/strong&gt; library in your HTML file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;js/scrollmagic/uncompressed/ScrollMagic.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And you&#39;re ready to go!&lt;br&gt; For deployment use the minified version &lt;strong&gt;instead&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;js/scrollmagic/minified/ScrollMagic.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The logging feature is removed in the minified version due to file size considerations.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use &lt;strong&gt;plugins&lt;/strong&gt; like the indicators visualization, simply include them in addition to the main library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;js/scrollmagic/uncompressed/plugins/debug.addIndicators.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To learn how to configure &lt;strong&gt;RequireJS&lt;/strong&gt;, when using AMD, please &lt;a href=&#34;https://github.com/janpaepke/ScrollMagic/wiki/Getting-Started-:-Using-AMD&#34;&gt;read here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The basic ScrollMagic design pattern is one controller, which has one or more scenes attached to it.&lt;br&gt; Each scene is used to define what happens when the container is scrolled to a specific offset.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a basic workflow example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// init controller&#xA;var controller = new ScrollMagic.Controller();&#xA;&#xA;// create a scene&#xA;new ScrollMagic.Scene({&#xA;&#x9;duration: 100, // the scene should last for a scroll distance of 100px&#xA;&#x9;offset: 50, // start this scene after scrolling for 50px&#xA;})&#xA;&#x9;.setPin(&#39;#my-sticky-element&#39;) // pins the element for the the scene&#39;s duration&#xA;&#x9;.addTo(controller); // assign the scene to the controller&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To learn more about the ScrollMagic code structure, please &lt;a href=&#34;https://github.com/janpaepke/ScrollMagic/wiki/Getting-Started-:-How-to-use-ScrollMagic&#34;&gt;read here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;To get started, check out the available learning resources &lt;a href=&#34;https://github.com/janpaepke/ScrollMagic/wiki&#34;&gt;in the wiki section&lt;/a&gt;.&lt;br&gt; Be sure to have a look at the &lt;a href=&#34;http://janpaepke.github.io/ScrollMagic/examples/index.html&#34;&gt;examples&lt;/a&gt; to get source code pointers and make use of the &lt;a href=&#34;http://janpaepke.github.io/ScrollMagic/docs/index.html&#34;&gt;documentation&lt;/a&gt; for a complete reference.&lt;/p&gt; &#xA;&lt;p&gt;If you run into trouble using ScrollMagic please follow the &lt;a href=&#34;https://github.com/janpaepke/ScrollMagic/wiki/Troubleshooting-Guide&#34;&gt;Troubleshooting guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please do not post support requests in the github issue section&lt;/strong&gt;, as it&#39;s reserved for issue and bug reporting. If all the above options for self-help fail, please use &lt;a href=&#34;https://stackoverflow.com/questions/tagged/scrollmagic&#34;&gt;Stack Overflow&lt;/a&gt; or the &lt;a href=&#34;https://support.scrollmagic.io/?utm_source=github&amp;amp;utm_medium=link&#34;&gt;ScrollMagic Premium Support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Browser Support&lt;/h2&gt; &#xA;&lt;p&gt;ScrollMagic aims to support all major browsers even in older versions:&lt;br&gt; Firefox 26+, Chrome 30+, Safari 5.1+, Opera 10+, IE 9+&lt;/p&gt; &#xA;&lt;h2&gt;About the Author&lt;/h2&gt; &#xA;&lt;p&gt;I am a creative coder based in Vienna, Austria.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.janpaepke.de&#34;&gt;Learn more on my website&lt;/a&gt; or &lt;a href=&#34;http://twitter.com/janpaepke&#34;&gt;Follow me on Twitter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;ScrollMagic is dual licensed under the MIT license and GPL.&lt;br&gt; For more information click &lt;a href=&#34;https://github.com/janpaepke/ScrollMagic/raw/master/LICENSE.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;This library was made possible by many people who have supported it with passion, donations, or advice. Special thanks go out to &lt;a href=&#34;https://github.com/johnpolacek&#34;&gt;John Polacek&lt;/a&gt;, &lt;a href=&#34;https://github.com/greensock&#34;&gt;Jack Doyle&lt;/a&gt;, &lt;a href=&#34;https://github.com/paulirish&#34;&gt;Paul Irish&lt;/a&gt;, &lt;a href=&#34;https://github.com/ncerminara&#34;&gt;Nicholas Cerminara&lt;/a&gt;, &lt;a href=&#34;https://github.com/krnlde&#34;&gt;Kai Dorschner&lt;/a&gt;, &lt;a href=&#34;https://github.com/petr-tichy&#34;&gt;Petr Tichy&lt;/a&gt; and &lt;a href=&#34;https://github.com/grayghostvisuals&#34;&gt;Dennis Gaebel&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OpenBMB/AgentVerse</title>
    <updated>2023-08-03T01:36:40Z</updated>
    <id>tag:github.com,2023-08-03:/OpenBMB/AgentVerse</id>
    <link href="https://github.com/OpenBMB/AgentVerse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤖 AgentVerse 🪐 provides a flexible framework that simplifies the process of building custom multi-agent environments for large language models (LLMs).&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; 🤖 AgentVerse 🪐 &lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;p&gt;A Framework for Multi-LLM Environment Simulation&lt;/p&gt; &lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;License: Apache2&#34; src=&#34;https://img.shields.io/badge/License-Apache_2.0-green.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.python.org/downloads/release/python-3916/&#34;&gt; &lt;img alt=&#34;Documentation&#34; src=&#34;https://img.shields.io/badge/python-3.9+-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/imgs/title.png&#34; width=&#34;512&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;AgentVerse&lt;/strong&gt; offers a versatile framework that streamlines the process of creating custom multi-agent environments for large language models (LLMs). Designed to facilitate swift development and customization with minimal effort, our framework empowers researchers to concentrate on their research, rather than being bogged down by implementation details.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;🥳 &lt;strong&gt;Efficient Environment Building:&lt;/strong&gt; Our framework provides a collection of essential building blocks for effortlessly creating a multi-agent environment. With only a few lines in a configuration file, you can easily construct basic environments such as a chat room for LLMs. This process entails defining the environment&#39;s settings and prompts for LLMs, enabling researchers like you to concentrate on experimentation and analysis.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;⚙️ &lt;strong&gt;Customizable Components&lt;/strong&gt;: AgentVerse simplifies the multi-agent environment by dividing it into five functional modules and defining their respective interfaces. For complex environments that cannot be constructed directly using the basic modules offered in AgentVerse, you can customize one or more of the interfaces within these five functional modules to efficiently create your own multi-agent environment according to your requirements.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🛠 &lt;strong&gt;Tools (Plugins) Utilization&lt;/strong&gt;: AgentVerse supports the multi-agent environments with tools. Currently, AgentVerse supports tools provided in &lt;a href=&#34;https://github.com/OpenBMB/BMTools&#34;&gt;BMTools&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📰 What&#39;s New&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[2023/6/5] 🎉 We are thrilled to present an array of &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-simple-demo-video&#34;&gt;demos&lt;/a&gt;, including &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#nlp-classroom&#34;&gt;NLP Classroom&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#prisoner-dilemma&#34;&gt;Prisoner Dilemma&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#software-design&#34;&gt;Software Design&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#database-administrator-dba&#34;&gt;Database Administrator&lt;/a&gt;, and a simple &lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#pokemon&#34;&gt;H5 Pokemon Game&lt;/a&gt; that enables the interaction with the characters in Pokemon! Try out these demos and have fun!&lt;/li&gt; &#xA; &lt;li&gt;[2023/5/1] 🚀 &lt;a href=&#34;https://github.com/OpenBMB/AgentVerse&#34;&gt;AgentVerse&lt;/a&gt; is officially launched!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🗓 Coming Soon&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Demonstrate how to use AgentVerse to support the behavior of agents in a &lt;a href=&#34;https://github.com/ShengdingHu/GPT-World&#34;&gt;sandbox environment GPT-World&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support more sophisticated memory for conversation history&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add support for local LLM&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Auto-generate UI based on the given multi-agent environment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👾 Simple Demo Video&lt;/h2&gt; &#xA;&lt;p&gt;We demonstrate the following cases that are expertly crafted by AgentVerse.&lt;/p&gt; &#xA;&lt;!--&#xA;### [![Demo video](https://i.imgur.com/vKb2F1B.png)](https://youtu.be/9JCVfzMFhaM)&#xA;--&gt; &#xA;&lt;!--![image](imgs/multiagent-min.gif)--&gt; &#xA;&lt;!-- - **NLP Classroom**: --&gt; &#xA;&lt;h4&gt;NLP Classroom&lt;/h4&gt; &#xA;&lt;p&gt;In the NLP class, the professor and students engage in interactive communication. When students have a question, they raise their hands and patiently wait for the professor to call on them. Only after being called on by the professor, students can speak and ask their questions.&lt;/p&gt; &#xA;&lt;p&gt;Use the following command to launch the NLP Classroom example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main_demo.py --task nlp_classroom_9players&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/assets/11704492/6ea07850-595e-4a28-a82e-f863011353c2&#34;&gt;https://github.com/OpenBMB/AgentVerse/assets/11704492/6ea07850-595e-4a28-a82e-f863011353c2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Prisoner Dilemma&lt;/h4&gt; &#xA;&lt;p&gt;A prisoner&#39;s Dilemma is a thought experiment that challenges two completely rational agents to a dilemma: they can cooperate with their partner for mutual benefit or betray their partner (&#34;defect&#34;) for individual reward.&lt;/p&gt; &#xA;&lt;p&gt;Use the following command to launch the Prisoner Dilemma example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main_demo.py --task prisoner_dilemma&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/assets/11704492/017c46e5-c738-4fca-9352-b008e2d518bd&#34;&gt;https://github.com/OpenBMB/AgentVerse/assets/11704492/017c46e5-c738-4fca-9352-b008e2d518bd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Software Design&lt;/h4&gt; &#xA;&lt;p&gt;In the Software Design example, a code writer, a code tester and a code reviewer collaborate on the code generation problem. Given a problem, the code writer first composes the code implementation. The code tester runs the unit tests and provides the feedback. The code viewer then generates a review. After collecting the test feedback and review, the code writer iteratively refines the code.&lt;/p&gt; &#xA;&lt;p&gt;Use the following command to launch the Software Design example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main_demo.py --task sde_team/sde_team_2players&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/assets/11704492/5058066a-abee-490d-8659-b4e54661626a&#34;&gt;https://github.com/OpenBMB/AgentVerse/assets/11704492/5058066a-abee-490d-8659-b4e54661626a&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/zhouxh19/AgentVerse_for_Database_Diagnosis&#34;&gt;Database Administrator (DBA)&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;In the database diagnosis scenario, the Chief DBA monitors the database system for anomalies. If detected, the memory and CPU agents are alerted to analyze root causes and suggest optimization solutions. The Chief DBA then provides a summarized diagnosis to the user, who can also contribute by giving instructions or evaluating the effectiveness of proposed solutions.&lt;/p&gt; &#xA;&lt;p&gt;You should first configure the &lt;a href=&#34;https://github.com/OpenBMB/BMTools/raw/main/bmtools/tools/db_diag/readme.md&#34;&gt;database tool&lt;/a&gt; in BMTools, and launch the BMTools server according to the &lt;a href=&#34;https://github.com/OpenBMB/BMTools/tree/main#211-local-tools&#34;&gt;guidance&lt;/a&gt;. Then use the following command to launch the Database Administrator example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main_demo.py --task db_diag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/assets/11704492/c633419d-afbb-47d4-bb12-6bb512e7af3a&#34;&gt;https://github.com/OpenBMB/AgentVerse/assets/11704492/c633419d-afbb-47d4-bb12-6bb512e7af3a&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Pokemon&lt;/h4&gt; &#xA;&lt;p&gt;In the game, agents can visit shops, train their Pokémon at the gym, and interact with one another. As a player, you take on the role of an agent and can engage with others at any time. There are 6 characters in the Pokémon environment who appeared in Pokemon Emerald: &lt;a href=&#34;https://bulbapedia.bulbagarden.net/wiki/May_(game)&#34;&gt;May&lt;/a&gt;, &lt;a href=&#34;https://bulbapedia.bulbagarden.net/wiki/Professor_Birch&#34;&gt;Professor Birch&lt;/a&gt;, &lt;a href=&#34;https://bulbapedia.bulbagarden.net/wiki/Steven_Stone&#34;&gt;Steven Stone&lt;/a&gt;, &lt;a href=&#34;https://bulbapedia.bulbagarden.net/wiki/Maxie&#34;&gt;Maxie&lt;/a&gt;, &lt;a href=&#34;https://bulbapedia.bulbagarden.net/wiki/Archie&#34;&gt;Archie&lt;/a&gt; and &lt;a href=&#34;https://bulbapedia.bulbagarden.net/wiki/Mr._Stone&#34;&gt;Joseph&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To launch the Pokemon game, first launch a local server with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;uvicorn pokemon_server:app --reload --port 10002&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open another terminal in the project&#39;s root path and run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ui&#xA;# If you do not have npm installed, you need to install it before running the following commands &#xA;# https://docs.npmjs.com/downloading-and-installing-node-js-and-npm&#xA;# We have tested on npm@9.6.4, node@20.0.0&#xA;npm install&#xA;npm run watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wait for the compilation to complete, and have fun! (WASD for moving around, and SPACE for launching a conversation.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenBMB/AgentVerse/assets/11704492/4d07da68-f942-4205-b558-f155e95782e7&#34;&gt;https://github.com/OpenBMB/AgentVerse/assets/11704492/4d07da68-f942-4205-b558-f155e95782e7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-features&#34;&gt;✨ Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-whats-new&#34;&gt;📰 What&#39;s New&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-coming-soon&#34;&gt;🗓 Coming Soon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-simple-demo-video&#34;&gt;👾 Simple Demo Video&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#nlp-classroom&#34;&gt;NLP Classroom&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#prisoner-dilemma&#34;&gt;Prisoner Dilemma&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#software-design&#34;&gt;Software Design&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#database-administrator-dba&#34;&gt;Database Administrator (DBA)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#pokemon&#34;&gt;Pokemon&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#contents&#34;&gt;Contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-getting-started&#34;&gt;🚀 Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#cli-example&#34;&gt;CLI Example&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#local-website-demo&#34;&gt;Local Website Demo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-philosophy&#34;&gt;💡 Philosophy&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#environment&#34;&gt;Environment&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#agent&#34;&gt;Agent&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#%EF%B8%8F-customize-your-own-environment&#34;&gt;✍️ Customize Your Own Environment&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#a-simple-example-building-a-classroom-environment&#34;&gt;A Simple Example: Building a Classroom Environment&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#1-creating-a-task-directory-and-configuring-the-environment&#34;&gt;1. Creating a Task Directory and Configuring the Environment&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#2-configuring-the-agents&#34;&gt;2. Configuring the Agents&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#3-writing-an-output-parser&#34;&gt;3. Writing an Output Parser&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#customization-guide-for-more-complex-environments&#34;&gt;Customization Guide for More Complex Environments&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenBMB/AgentVerse/main/#-examples&#34;&gt;🔎 Examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -U agentverse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can install the package by manually cloning the latest repository&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/OpenBMB/AgentVerse.git --depth 1&#xA;cd AgentVerse&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some users have reported problems installing the &lt;code&gt;orjson&lt;/code&gt; required by &lt;code&gt;gradio&lt;/code&gt;. One simple workaround is to install it with Anaconda &lt;code&gt;conda install -c conda-forge orjson&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You also need to export your OpenAI API key as follows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Export your OpenAI API key&#xA;export OPENAI_API_KEY=&#34;your_api_key_here&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the tools provided by BMTools, you need to install BMTools as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git+https://github.com/OpenBMB/BMTools.git&#xA;cd BMTools&#xA;pip install -r requirements.txt&#xA;python setup.py develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--&#xA;# Install BMTools&#xA;cd ../&#xA;git clone git@github.com:OpenBMB/BMTools.git&#xA;cd BMTools&#xA;python setup.py develop&#xA;--&gt; &#xA;&lt;h3&gt;CLI Example&lt;/h3&gt; &#xA;&lt;p&gt;You can create a multi-agent environments provided by us. Using the classroom scenario as an example. In this scenario, there are nine agents, one playing the role of a professor and the other eight as students.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python3 main.py --task nlp_classroom_9players&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Local Website Demo&lt;/h3&gt; &#xA;&lt;p&gt;We also provide a local website demo for this environment. You can launch it with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python3 main_demo.py --task nlp_classroom_9players&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After successfully launching the local server, you can visit &lt;a href=&#34;http://127.0.0.1:7860/&#34;&gt;http://127.0.0.1:7860/&lt;/a&gt; to view the classroom environment.&lt;/p&gt; &#xA;&lt;h2&gt;💡 Philosophy&lt;/h2&gt; &#xA;&lt;h3&gt;Environment&lt;/h3&gt; &#xA;&lt;p&gt;At the core of our framework is the environment, which plays a crucial role in enabling researchers to study the behavior of agents under different conditions. We believe that the environment should be flexible and extensible, allowing researchers to easily customize it to fit their needs. To achieve this, we have abstracted the environment into five rule components, and implementing different environments is actually implementing different rules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Describer&lt;/strong&gt;: This component provides a description of the environment at each turn for each agent. You can customize the describer to define the specific requirements of their environment, such as the agents with whom an agent can interact.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Order&lt;/strong&gt;: This component defines the order in which agents take actions within the environment. You can customize the order to reflect the desired interaction between agents. We provide several basic order options, including &lt;code&gt;random&lt;/code&gt;, &lt;code&gt;sequential&lt;/code&gt;, and &lt;code&gt;concurrent&lt;/code&gt; (in which all agents take an action in each turn).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Selector&lt;/strong&gt;: This component selects the valid messages generated by agents. Sometimes agents may generate invalid responses, and the selector is used to filter out unexpected results.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Updater&lt;/strong&gt;: This component updates the memory of each agent. In certain cases, the response generated by one agent should not be seen by all agents (e.g., if agents are in different rooms). For each response, the updater updates only the agents who can see it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visibility&lt;/strong&gt;: This component maintains the list of agents that each agent can see throughout the environment&#39;s changes. For example, when an agent moves from one room to another, the list of visible agents of each agent should be updated by &lt;code&gt;visibility&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By abstracting the environment into these five components, we have created a highly flexible and extensible framework that enables researchers to easily build and customize their own multi-agent environments.&lt;/p&gt; &#xA;&lt;h3&gt;Agent&lt;/h3&gt; &#xA;&lt;p&gt;Another fundamental component is the agent. Currently we provide two types of agents: &lt;strong&gt;ConversationAgent&lt;/strong&gt; and &lt;strong&gt;ToolAgent&lt;/strong&gt;. You can also customize your own agent by inheriting BaseAgent class (tutorial coming soon).&lt;/p&gt; &#xA;&lt;h2&gt;✍️ Customize Your Own Environment&lt;/h2&gt; &#xA;&lt;p&gt;We have provided several examples in the &lt;code&gt;agentverse/tasks&lt;/code&gt; directory. To customize your environment, you should&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a task directory in &lt;code&gt;agentverse/tasks&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Write the configuration file&lt;/li&gt; &#xA; &lt;li&gt;Write the output parser that parses the response of your agents.&lt;/li&gt; &#xA; &lt;li&gt;Add your parser in &lt;code&gt;agentverse/tasks/__init__.py&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We will use a simple example in &lt;code&gt;agentverse/tasks/nlp_classroom_3players&lt;/code&gt; to illustrate the procedure.&lt;/p&gt; &#xA;&lt;h3&gt;A Simple Example: Building a Classroom Environment&lt;/h3&gt; &#xA;&lt;p&gt;To illustrate how to customize your environment, we&#39;ll use a simple example of building a classroom environment where one agent is the professor, one is the student, and one is the teaching assistant.&lt;/p&gt; &#xA;&lt;h5&gt;1. Creating a Task Directory and Configuring the Environment&lt;/h5&gt; &#xA;&lt;p&gt;First, we need to create a task directory and write our configuration file for the environment. In the &lt;code&gt;agentverse/tasks&lt;/code&gt; directory, create a new directory called &lt;code&gt;nlp_classroom_3players&lt;/code&gt;. Inside this directory, create a &lt;code&gt;config.yaml&lt;/code&gt; file and write the following configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# config.yaml&#xA;environment:&#xA;  env_type: basic&#x9;&#x9;&#x9;&#x9;# Use the basic environment provided in AgentVerse&#xA;  max_turns: 10&#x9;&#x9;&#x9;&#x9;&#x9;# Specify the maximum number of dialogue turns&#xA;  rule:&#xA;    order:&#xA;      type: sequential&#x9;# Use the sequential order&#xA;    visibility:&#xA;      type: all&#x9;&#x9;&#x9;&#x9;&#x9;# Each message can be seen by all agents&#xA;    selector:&#xA;      type: basic&#x9;&#x9;&#x9;&#x9;# Basic selector (do not select)&#xA;    updater:&#xA;      type: basic&#x9;&#x9;&#x9;&#x9;# Basic updater (update the message to all agents)&#xA;    describer:&#xA;      type: basic&#x9;&#x9;&#x9;&#x9;# Basic describer (no description)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This configuration specifies that we will use the basic environment provided in AgentVerse, with a maximum of 10 dialogue turns. We&#39;ll use the sequential order, with all messages visible to all agents. We won&#39;t be using any selectors, our updater will update the messages to all the agents and our describer will provide no description.&lt;/p&gt; &#xA;&lt;h5&gt;2. Configuring the Agents&lt;/h5&gt; &#xA;&lt;p&gt;Next, we&#39;ll configure the agents. In the &lt;code&gt;config.yaml&lt;/code&gt; file, we&#39;ll add the configuration for each agent. Here&#39;s an example configuration for the professor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# config.yaml&#xA;agents:&#xA;  -&#xA;    agent_type: conversation&#xA;    name: Professor Micheal&#x9;&#x9;# Name of the agent&#xA;    role_description: You are Prof. Micheal, ...&#x9;# Description of the agent&#xA;    memory: &#xA;      memory_type: chat_history&#x9;&#x9;# Will store all the chat history&#xA;    prompt_template: *professor_prompt&#xA;    llm:&#xA;      llm_type: text-davinci-003    # Will use OpenAICompletion LLM&#xA;      model: text-davinci-003       # The arguments passed to the api call&#xA;      temperature: 0.7&#xA;      max_tokens: 250&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, we&#39;ll use the &lt;code&gt;conversation&lt;/code&gt; agent type. We&#39;ve given the agent a name and a description, and we&#39;ll store the chat history in memory. We&#39;ve also provided a prompt template with placeholders marked as ${placeholder}. These will be instantiated by the &lt;code&gt;_fill_prompt_template&lt;/code&gt; method of the agent.&lt;/p&gt; &#xA;&lt;h5&gt;3. Writing an Output Parser&lt;/h5&gt; &#xA;&lt;p&gt;The next step is to write a simple parser for your agent&#39;s response. Because you may have specified the output format in your prompt template, you need to provide a corresponding parser. In this example, we inform the model to output in the following format in our prompt template&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Action: Speak&#xA;Action Input: (the content)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We&#39;ll write a parser to extract the content from the agent&#39;s response. Refer to the code for more details. We&#39;ve decorated our parser function with &lt;code&gt;@output_parser_registry.register(&#39;classroom_parser&#39;)&lt;/code&gt; to register it with our framework. Finally, we import our parser in &lt;code&gt;agentverse/tasks/__init__.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;With these steps, we&#39;ve successfully built a simple classroom environment and customized it for our needs.&lt;/p&gt; &#xA;&lt;h3&gt;Customization Guide for More Complex Environments&lt;/h3&gt; &#xA;&lt;p&gt;While we provide a basic framework for building environments with our five rule components, more complex environments may require further customization. A detailed documentation and tutorial is coming soon. Here we briefly introduce some steps you can take to customize your environment:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customize the five rule components&lt;/strong&gt;. Each rule component has an interface, allowing you to customize its behavior to suit your specific needs. It&#39;s important to note that these components are not necessarily independent and can interact through the &lt;code&gt;rule_params&lt;/code&gt; dictionary in the environment. You can create your own rule components and integrate them with the existing ones to build more complex interactions between agents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customize the environment itself&lt;/strong&gt;. Our &lt;code&gt;basic&lt;/code&gt; environment provides a default execution order for the five rule components that is suitable for most cases, but you can inherit the &lt;code&gt;BaseEnvironment&lt;/code&gt; class and write your own &lt;code&gt;run&lt;/code&gt; method to implement a more sophisticated execution order.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customize the agent&lt;/strong&gt;. Depending on your specific use case, you may also need to inherite the &lt;code&gt;BaseAgent&lt;/code&gt; class. For example, you may want to use your local LLM as your agents or create agents with specialized knowledge or skills.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🔎 Examples&lt;/h2&gt; &#xA;&lt;p&gt;Currently, we offer some simple examples in the &lt;code&gt;agentverse/tasks&lt;/code&gt; directory, each demonstrating different possibilities of our framework. While the performance of these examples may not be optimal due to limited prompt engineering, they are intended to showcase the capabilities of our framework, such as allowing the use of tools.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a brief overview of each example:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;nlp_classroom_3players&lt;/code&gt;: This example illustrates a simple case in which agents will speak in sequential order.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nlp_classroom_9players&lt;/code&gt;: This is an NLP class example. Here, students can raise their hand when they have a question, and the professor can call on the students to let them ask. Students are only allowed to speak after they are called on.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nlp_classroom_9players_group&lt;/code&gt;: This example showcases group discussions. The professor may initiate a group discussion when needed, and students can exclusively interact with fellow students within the same group during the discussion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nlp_classroom_3players_withtool&lt;/code&gt;: Students in this classroom can use Bing search API when listening to the class.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;math_problem_2players_tools&lt;/code&gt;: A simple example demonstrating how two agents can use the WolframAlpha API to play an arithmetic game.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prisoner_dilema&lt;/code&gt;: The Prisoner&#39;s Dilemma is a thought experiment involving two rational agents facing a choice between cooperating for mutual benefit or betraying their partner for individual gain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;db_diag&lt;/code&gt;: The Chief DBA monitors (agents) the database system for anomalies and alerts memory and CPU agents if any are detected. They (agents) analyze root causes and suggest optimization solutions. The Chief DBA (agent) provides a diagnosis summary to the user, who can give instructions or evaluate the proposed solutions&#39; effectiveness.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sde_team&lt;/code&gt;: In the SDE team, code writer, code tester and code reviewer collaborate on the code generation problem.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pokemon&lt;/code&gt;: This example intimates Pokemon game.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>