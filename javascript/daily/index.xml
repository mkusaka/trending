<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-17T01:28:56Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jamiewilson/form-to-google-sheets</title>
    <updated>2023-08-17T01:28:56Z</updated>
    <id>tag:github.com,2023-08-17:/jamiewilson/form-to-google-sheets</id>
    <link href="https://github.com/jamiewilson/form-to-google-sheets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Store HTML form submissions in Google Sheets.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Submit a Form to Google Sheets | &lt;a href=&#34;https://form-to-google-sheets.surge.sh&#34;&gt;Demo&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h4&gt;How to create an HTML form that stores the submitted form data in Google Sheets using plain &#39;ol JavaScript (ES6), &lt;a href=&#34;https://developers.google.com/apps-script/&#34;&gt;Google Apps Script&lt;/a&gt;, &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&#34;&gt;Fetch&lt;/a&gt; and &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/FormData&#34;&gt;FormData&lt;/a&gt;.&lt;/h4&gt; &#xA;&lt;h2&gt;1. Create a new Google Sheet&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;First, go to &lt;a href=&#34;https://docs.google.com/spreadsheets&#34;&gt;Google Sheets&lt;/a&gt; and &lt;code&gt;Start a new spreadsheet&lt;/code&gt; with the &lt;code&gt;Blank&lt;/code&gt; template.&lt;/li&gt; &#xA; &lt;li&gt;Rename it &lt;code&gt;Email Subscribers&lt;/code&gt;. Or whatever, it doesn&#39;t matter.&lt;/li&gt; &#xA; &lt;li&gt;Put the following headers into the first row:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;A&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;B&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;C&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;...&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;timestamp&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;email&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To learn how to add additional input fields, &lt;a href=&#34;https://raw.githubusercontent.com/jamiewilson/form-to-google-sheets/master/#7-adding-additional-form-data&#34;&gt;checkout section 7 below&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;2. Create a Google Apps Script&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click on &lt;code&gt;Tools &amp;gt; Script Editor…&lt;/code&gt; which should open a new tab.&lt;/li&gt; &#xA; &lt;li&gt;Rename it &lt;code&gt;Submit Form to Google Sheets&lt;/code&gt;. &lt;em&gt;Make sure to wait for it to actually save and update the title before editing the script.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now, delete the &lt;code&gt;function myFunction() {}&lt;/code&gt; block within the &lt;code&gt;Code.gs&lt;/code&gt; tab.&lt;/li&gt; &#xA; &lt;li&gt;Paste the following script in it&#39;s place and &lt;code&gt;File &amp;gt; Save&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var sheetName = &#39;Sheet1&#39;&#xA;var scriptProp = PropertiesService.getScriptProperties()&#xA;&#xA;function intialSetup () {&#xA;  var activeSpreadsheet = SpreadsheetApp.getActiveSpreadsheet()&#xA;  scriptProp.setProperty(&#39;key&#39;, activeSpreadsheet.getId())&#xA;}&#xA;&#xA;function doPost (e) {&#xA;  var lock = LockService.getScriptLock()&#xA;  lock.tryLock(10000)&#xA;&#xA;  try {&#xA;    var doc = SpreadsheetApp.openById(scriptProp.getProperty(&#39;key&#39;))&#xA;    var sheet = doc.getSheetByName(sheetName)&#xA;&#xA;    var headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0]&#xA;    var nextRow = sheet.getLastRow() + 1&#xA;&#xA;    var newRow = headers.map(function(header) {&#xA;      return header === &#39;timestamp&#39; ? new Date() : e.parameter[header]&#xA;    })&#xA;&#xA;    sheet.getRange(nextRow, 1, 1, newRow.length).setValues([newRow])&#xA;&#xA;    return ContentService&#xA;      .createTextOutput(JSON.stringify({ &#39;result&#39;: &#39;success&#39;, &#39;row&#39;: nextRow }))&#xA;      .setMimeType(ContentService.MimeType.JSON)&#xA;  }&#xA;&#xA;  catch (e) {&#xA;    return ContentService&#xA;      .createTextOutput(JSON.stringify({ &#39;result&#39;: &#39;error&#39;, &#39;error&#39;: e }))&#xA;      .setMimeType(ContentService.MimeType.JSON)&#xA;  }&#xA;&#xA;  finally {&#xA;    lock.releaseLock()&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you want to better understand what this script is doing, checkout the &lt;a href=&#34;https://github.com/jamiewilson/form-to-google-sheets/raw/master/form-script-commented.js&#34;&gt;&lt;code&gt;form-script-commented.js&lt;/code&gt;&lt;/a&gt; file in the repo for a detailed explanation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;3. Run the setup function&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Next, go to &lt;code&gt;Run &amp;gt; Run Function &amp;gt; initialSetup&lt;/code&gt; to run this function.&lt;/li&gt; &#xA; &lt;li&gt;In the &lt;code&gt;Authorization Required&lt;/code&gt; dialog, click on &lt;code&gt;Review Permissions&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Sign in or pick the Google account associated with this projects.&lt;/li&gt; &#xA; &lt;li&gt;You should see a dialog that says &lt;code&gt;Hi {Your Name}&lt;/code&gt;, &lt;code&gt;Submit Form to Google Sheets wants to&lt;/code&gt;...&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Allow&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;4. Add a new project trigger&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click on &lt;code&gt;Edit &amp;gt; Current project’s triggers&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In the dialog click &lt;code&gt;No triggers set up. Click here to add one now.&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;In the dropdowns select &lt;code&gt;doPost&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set the events fields to &lt;code&gt;From spreadsheet&lt;/code&gt; and &lt;code&gt;On form submit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Then click &lt;code&gt;Save&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;5. Publish the project as a web app&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click on &lt;code&gt;Publish &amp;gt; Deploy as web app…&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;code&gt;Project Version&lt;/code&gt; to &lt;code&gt;New&lt;/code&gt; and put &lt;code&gt;initial version&lt;/code&gt; in the input field below.&lt;/li&gt; &#xA; &lt;li&gt;Leave &lt;code&gt;Execute the app as:&lt;/code&gt; set to &lt;code&gt;Me(your@address.com)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;Who has access to the app:&lt;/code&gt; select &lt;code&gt;Anyone, even anonymous&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Deploy&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In the popup, copy the &lt;code&gt;Current web app URL&lt;/code&gt; from the dialog.&lt;/li&gt; &#xA; &lt;li&gt;And click &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;IMPORTANT!&lt;/strong&gt; If you have a custom domain with Gmail, you &lt;em&gt;might&lt;/em&gt; need to click &lt;code&gt;OK&lt;/code&gt;, refresh the page, and then go to &lt;code&gt;Publish &amp;gt; Deploy as web app…&lt;/code&gt; again to get the proper web app URL. It should look something like &lt;code&gt;https://script.google.com/a/yourdomain.com/macros/s/XXXX…&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;6. Input your web app URL&lt;/h2&gt; &#xA;&lt;p&gt;Open the file named &lt;code&gt;index.html&lt;/code&gt;. On line 12 replace &lt;code&gt;&amp;lt;SCRIPT URL&amp;gt;&lt;/code&gt; with your script url:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&amp;lt;form name=&#34;submit-to-google-sheet&#34;&amp;gt;&#xA;  &amp;lt;input name=&#34;email&#34; type=&#34;email&#34; placeholder=&#34;Email&#34; required&amp;gt;&#xA;  &amp;lt;button type=&#34;submit&#34;&amp;gt;Send&amp;lt;/button&amp;gt;&#xA;&amp;lt;/form&amp;gt;&#xA;&#xA;&amp;lt;script&amp;gt;&#xA;  const scriptURL = &#39;&amp;lt;SCRIPT URL&amp;gt;&#39;&#xA;  const form = document.forms[&#39;submit-to-google-sheet&#39;]&#xA;&#xA;  form.addEventListener(&#39;submit&#39;, e =&amp;gt; {&#xA;    e.preventDefault()&#xA;    fetch(scriptURL, { method: &#39;POST&#39;, body: new FormData(form)})&#xA;      .then(response =&amp;gt; console.log(&#39;Success!&#39;, response))&#xA;      .catch(error =&amp;gt; console.error(&#39;Error!&#39;, error.message))&#xA;  })&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you can see, this script uses the the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&#34;&gt;Fetch API&lt;/a&gt;, a fairly new promise-based mechanism for making web requests. It makes a &#34;POST&#34; request to your script URL and uses &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/FormData&#34;&gt;FormData&lt;/a&gt; to pass in our data as URL paramters.&lt;/p&gt; &#xA;&lt;p&gt;Because Fetch and FormData aren&#39;t fully supported, you&#39;ll likely want to include their respective polyfills. &lt;a href=&#34;https://raw.githubusercontent.com/jamiewilson/form-to-google-sheets/master/#8-related-polyfills&#34;&gt;See section #8&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Fun fact!&lt;/strong&gt; The &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, and &lt;code&gt;body&lt;/code&gt; tags are actually among a handful of optional tags, but since the &lt;a href=&#34;https://www.w3.org/TR/2011/WD-html5-20110525/syntax.html#optional-tags&#34;&gt;rules around how the browser parses a page are kinda complicated&lt;/a&gt;, you&#39;d probably not want to omit them on real websites.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;7. Adding additional form data&lt;/h2&gt; &#xA;&lt;p&gt;To capture additional data, you&#39;ll just need to create new columns with titles matching exactly the &lt;code&gt;name&lt;/code&gt; values from your form inputs. For example, if you want to add first and last name inputs, you&#39;d give them &lt;code&gt;name&lt;/code&gt; values like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;form name=&#34;submit-to-google-sheet&#34;&amp;gt;&#xA;  &amp;lt;input name=&#34;email&#34; type=&#34;email&#34; placeholder=&#34;Email&#34; required&amp;gt;&#xA;  &amp;lt;input name=&#34;firstName&#34; type=&#34;text&#34; placeholder=&#34;First Name&#34;&amp;gt;&#xA;  &amp;lt;input name=&#34;lastName&#34; type=&#34;text&#34; placeholder=&#34;Last Name&#34;&amp;gt;&#xA;  &amp;lt;button type=&#34;submit&#34;&amp;gt;Send&amp;lt;/button&amp;gt;&#xA;&amp;lt;/form&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then create new headers with the exact, case-sensitive &lt;code&gt;name&lt;/code&gt; values:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;A&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;B&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;C&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;D&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;...&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;timestamp&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;email&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;firstName&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;lastName&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;8. Related Polyfills&lt;/h2&gt; &#xA;&lt;p&gt;Some of this stuff is not yet fully supported by browsers or doesn&#39;t work on older ones. Here are some polyfill options to use for better support.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taylorhakes/promise-polyfill&#34;&gt;Promise Polyfill&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/fetch&#34;&gt;Fetch Polyfill&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jimmywarting/FormData&#34;&gt;FormData Polyfill&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Since the FormData polyfill is published as a Node package and needs to be compiled for browsers to work with, a good option for including these is using &lt;a href=&#34;https://wzrd.in/&#34;&gt;Browserify&#39;s CDN called wzrd.in&lt;/a&gt;. This service compiles, minifies and serves the latest version of these scripts for us.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll want to make sure these load before the main script handling the form submission. e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://wzrd.in/standalone/formdata-polyfill&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script src=&#34;https://wzrd.in/standalone/promise-polyfill@latest&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script src=&#34;https://wzrd.in/standalone/whatwg-fetch@latest&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&#xA;&amp;lt;script&amp;gt;&#xA;  const scriptURL = &#39;&amp;lt;SCRIPT URL&amp;gt;&#39;&#xA;  const form = document.forms[&#39;submit-to-google-sheet&#39;]&#xA;  ...&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Have feedback/requests/issues?&lt;/h1&gt; &#xA;&lt;p&gt;Please &lt;a href=&#34;https://github.com/jamiewilson/form-to-google-sheet/issues&#34;&gt;create a new issue&lt;/a&gt;. PRs are definitely welcome, but please run your ideas by me before putting in a lot of work. Thanks!&lt;/p&gt; &#xA;&lt;h4&gt;Related/Inspirational Articles&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mashe.hawksey.info/2011/10/google-spreadsheets-as-a-database-insert-with-apps-script-form-postget-submit-method/&#34;&gt;Google Spreadsheets as a Database – INSERT with Apps Script form POST/GET submit method&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://railsrescue.com/blog/2015-05-28-step-by-step-setup-to-send-form-data-to-google-sheets/&#34;&gt;Step by step setup to send form data to Google Sheets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/willpatera/ee41ae374d3c9839c2d6&#34;&gt;Google Sheet Form Post&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@dmccoy/how-to-submit-an-html-form-to-google-sheets-without-google-forms-b833952cc175&#34;&gt;How to Submit an HTML Form to Google Sheets…without Google Forms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dwyl/html-form-send-email-via-google-script-without-server&#34;&gt;Send Email from a Static HTML Form using Google Apps Mail!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Documentation&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/apps-script/&#34;&gt;Google Apps Script&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&#34;&gt;Fetch API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/FormData&#34;&gt;FormData&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&#34;&gt;HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Document/forms&#34;&gt;Document.forms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Sending_forms_through_JavaScript&#34;&gt;Sending forms through JavaScript&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>hjdhnx/dr_py</title>
    <updated>2023-08-17T01:28:56Z</updated>
    <id>tag:github.com,2023-08-17:/hjdhnx/dr_py</id>
    <link href="https://github.com/hjdhnx/dr_py" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A webServer convert web and x5 movie sites to cms api data&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h4&gt;🚀第二派-dr模板的python实现🚀&lt;/h4&gt; &#xA; &lt;a href=&#34;https://alist.nn.ci&#34;&gt;&lt;img height=&#34;100px&#34; alt=&#34;logo&#34; src=&#34;https://ghproxy.net/https://raw.githubusercontent.com/hjdhnx/dr_py/main/static/img/icon.png&#34;&gt;&lt;/a&gt; &#xA; &lt;p&gt;&lt;em&gt;🗂️A webServer convert web and x5 movie sites to cms api data&lt;/em&gt;&lt;/p&gt; &#xA; &lt;a href=&#34;https://github.com/hjdhnx/dr_py/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/version-3.9.45-blue&#34; alt=&#34;latest version&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/hjdhnx/dr_py/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/issues-3-orange&#34; alt=&#34;discussions&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://wwi.lanzoup.com/ijsmt10tgh5e&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/蓝奏云下载-3.9.45b1-blue&#34; alt=&#34;Downloads&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://hub.docker.com/repository/docker/hjdhnx/drpy&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/docker镜像主页-drpy-blue&#34; alt=&#34;Downloads&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/hjdhnx/dr_py/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-AGPL3.0-orange&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://wwi.lanzoup.com/b041hfrwh&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/coverage(3p5h)-99.9%25-yellowgreen&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🚀特性&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;dr模板的python实现,可直接用于tv_box和pluto软件数据源使用,无需懂java知识也能使用&lt;/li&gt; &#xA; &lt;li&gt;参考了海阔视界dr模板设计思路&lt;/li&gt; &#xA; &lt;li&gt;参考tv_box的t4项目思路重新设计了cms接口&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;python3.6-3.8完美运行(3.9以上不支持linux进程启动)&lt;/h4&gt; &#xA;&lt;a href=&#34;./doc/安卓本地搭建说明.md&#34; alt=&#34;install&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/install support-termux|windows|ubuntu|python3.6~python3.8-yellowgreen&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hjdhnx/dr_py/main/doc/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97.md&#34;&gt;更新日志&lt;/a&gt; | &lt;a href=&#34;https://github.com/flash168/Peach&#34;&gt;C#版drpy&lt;/a&gt; | &lt;a href=&#34;https://github.com/Hiram-Wong/ZyPlayer/releases&#34;&gt;推荐PC端使用zyplayer新版&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hjdhnx/dr_py/main/doc/%E5%AE%89%E5%8D%93%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%E8%AF%B4%E6%98%8E.md&#34;&gt;android&amp;amp;linux&amp;amp;macos搭建教程&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/hjdhnx/dr_py/main/doc/windows%E6%90%AD%E5%BB%BA%E8%AF%B4%E6%98%8E.md&#34;&gt;windows搭建教程&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hjdhnx/dr_py/main/doc/%E5%86%99%E6%BA%90%E6%95%99%E7%A8%8B.md&#34;&gt;写源教程&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/hjdhnx/dr_py/main/doc/js%E5%8E%8B%E7%BC%A9.md&#34;&gt;js压缩.min.js&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.w3cschool.cn/iqmrhf/wngzuozt.html&#34;&gt;十分钟学会python&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hjdhnx/dr_py/main/doc/python%E6%9C%80%E5%BC%BAjs%E5%BC%95%E6%93%8E.md&#34;&gt;JS引擎的选择&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hjdhnx/dr_py/main/static/img/%E8%B1%86%E7%93%A3.png&#34;&gt;我的豆瓣&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://jason-ray.notion.site/jason-ray/Pluto-TVB-706da08332804a19ab012b4f8385df64&#34;&gt;爱看不看&lt;/a&gt;|&lt;a href=&#34;https://raw.githubusercontent.com/hjdhnx/dr_py/main/doc/%E9%81%93%E9%95%BF%E4%B9%B1%E8%AF%B4.md&#34;&gt;goorm&lt;/a&gt;|&lt;a href=&#34;https://raw.githubusercontent.com/hjdhnx/dr_py/main/doc/%E5%A4%A7%E4%BD%AC%E5%8F%8B%E9%93%BE.md&#34;&gt;大佬地盘&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hjdhnx/dr_py/main/doc/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3.md&#34;&gt;其他语言实现drpy-cms接口&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=H2KwcXrMdiR5M2blHR5gjZzPfN_S3N_C&amp;amp;jump_from=webapi&#34;&gt;dr项目QQ官群&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;项目修复&lt;/h4&gt; &#xA;&lt;p&gt;进入容器drpy项目根目录执行以下代码&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd utils &amp;amp;&amp;amp; wget https://ghproxy.liuzhicong.com/https://raw.githubusercontent.com/hjdhnx/dr_py/main/utils/update.py -O update.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;执行后重启9001或者docker即可正常检测升级&lt;/p&gt; &#xA;&lt;h3&gt;谷歌浏览器跨域支持嗅探&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;&#34;C:\Program Files\Google\Chrome\Application\chrome.exe&#34; --disable-site-isolation-trials --disable-web-security --disable-features=SameSiteByDefaultCookies,CookiesWithoutSameSiteMustBeSecure --user-data-dir=C:\Program Files\Google\Chrome\Application&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;参考地址&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sec-an/TV_Spider/raw/main/spider/sp360.py&#34;&gt;参考T4&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/dop251/goja&#34;&gt;golang最好的js引擎-goja&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/HarlonWang/quickjs-wrapper&#34;&gt;安卓最好的js引擎&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://pub.flutter-io.cn/packages/dart_quickjs&#34;&gt;flutter最好的js引擎-dart_quickjs&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://blog.csdn.net/qq_46158060/article/details/125718218&#34;&gt;dockerfile教程&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://blog.csdn.net/cui_yonghua/article/details/125508991&#34;&gt;获取本地设备信息&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://m.jb51.net/article/140716.htm&#34;&gt;获取本地设备信息&lt;/a&gt; &lt;a href=&#34;https://m.yisu.com/zixun/375448.html&#34;&gt;sqlite3使用教程&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://cms.nokia.press/index&#34;&gt;远程网站&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://192.168.10.99:5705/index&#34;&gt;本地网站&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://pypi.org/project/gevent/#files&#34;&gt;gevent下载地址&lt;/a&gt; &lt;a href=&#34;http://pan.nokia.press/d/hiker/whl/gevent-21.12.0-cp310-cp310-linux_aarch64.whl&#34;&gt;aarch64的cp310&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/hjdhnx/dr_py/main/doc/chatgpt%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B.md&#34;&gt;chatgpt&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>josdejong/mathjs</title>
    <updated>2023-08-17T01:28:56Z</updated>
    <id>tag:github.com,2023-08-17:/josdejong/mathjs</id>
    <link href="https://github.com/josdejong/mathjs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An extensive math library for JavaScript and Node.js&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/josdejong/mathjs/master/misc/img/mathjs.png&#34; alt=&#34;math.js&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mathjs.org&#34;&gt;https://mathjs.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Math.js is an extensive math library for JavaScript and Node.js. It features a flexible expression parser with support for symbolic computation, comes with a large set of built-in functions and constants, and offers an integrated solution to work with different data types like numbers, big numbers, complex numbers, fractions, units, and matrices. Powerful and easy to use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/mathjs&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/mathjs.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/mathjs&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/mathjs.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/josdejong/mathjs/actions&#34;&gt;&lt;img src=&#34;https://github.com/josdejong/mathjs/workflows/Node.js%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/josdejong/mathjs/graphs/commit-activity&#34;&gt;&lt;img src=&#34;https://img.shields.io/maintenance/yes/2023.svg?sanitize=true&#34; alt=&#34;Maintenance&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/josdejong/mathjs/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/josdejong/mathjs.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fjosdejong%2Fmathjs?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjosdejong%2Fmathjs.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/josdejong/mathjs&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/josdejong/mathjs/branch/develop/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/josdejong&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/7d9333b097b2f54a8957d126ab82937811489c9b75c3850f609985cf94cd29fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302d53706f6e736f722532306d652532306f6e2532304769744875622d6f72616e6765&#34; alt=&#34;Github Sponsor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports numbers, big numbers, complex numbers, fractions, units, strings, arrays, and matrices.&lt;/li&gt; &#xA; &lt;li&gt;Is compatible with JavaScript&#39;s built-in Math library.&lt;/li&gt; &#xA; &lt;li&gt;Contains a flexible expression parser.&lt;/li&gt; &#xA; &lt;li&gt;Does symbolic computation.&lt;/li&gt; &#xA; &lt;li&gt;Comes with a large set of built-in functions and constants.&lt;/li&gt; &#xA; &lt;li&gt;Can be used as a command line application as well.&lt;/li&gt; &#xA; &lt;li&gt;Runs on any JavaScript engine.&lt;/li&gt; &#xA; &lt;li&gt;Is easily extensible.&lt;/li&gt; &#xA; &lt;li&gt;Open source.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Math.js can be used in both node.js and in the browser.&lt;/p&gt; &#xA;&lt;p&gt;Install math.js using &lt;a href=&#34;https://www.npmjs.com/package/mathjs&#34;&gt;npm&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install mathjs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or download mathjs via one of the CDN&#39;s listed on the downloads page:&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://mathjs.org/download.html#download&#34;&gt;https://mathjs.org/download.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Math.js can be used similar to JavaScript&#39;s built-in Math library. Besides that, math.js can evaluate &lt;a href=&#34;https://mathjs.org/docs/expressions/index.html&#34;&gt;expressions&lt;/a&gt; and supports &lt;a href=&#34;https://mathjs.org/docs/core/chaining.html&#34;&gt;chained operations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import {&#xA;  atan2, chain, derivative, e, evaluate, log, pi, pow, round, sqrt&#xA;} from &#39;mathjs&#39;&#xA;&#xA;// functions and constants&#xA;round(e, 3)                    // 2.718&#xA;atan2(3, -3) / pi              // 0.75&#xA;log(10000, 10)                 // 4&#xA;sqrt(-4)                       // 2i&#xA;pow([[-1, 2], [3, 1]], 2)      // [[7, 0], [0, 7]]&#xA;derivative(&#39;x^2 + x&#39;, &#39;x&#39;)     // 2 * x + 1&#xA;&#xA;// expressions&#xA;evaluate(&#39;12 / (2.3 + 0.7)&#39;)   // 4&#xA;evaluate(&#39;12.7 cm to inch&#39;)    // 5 inch&#xA;evaluate(&#39;sin(45 deg) ^ 2&#39;)    // 0.5&#xA;evaluate(&#39;9 / 3 + 2i&#39;)         // 3 + 2i&#xA;evaluate(&#39;det([-1, 2; 3, 1])&#39;) // -7&#xA;&#xA;// chaining&#xA;chain(3)&#xA;    .add(4)&#xA;    .multiply(2)&#xA;    .done()  // 14&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://mathjs.org/docs/getting_started.html&#34;&gt;Getting Started&lt;/a&gt; for a more detailed tutorial.&lt;/p&gt; &#xA;&lt;h2&gt;Browser support&lt;/h2&gt; &#xA;&lt;p&gt;Math.js works on any ES6 compatible JavaScript engine, including node.js, Chrome, Firefox, Safari, and Edge.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mathjs.org/docs/getting_started.html&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mathjs.org/examples/index.html&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mathjs.org/docs/index.html&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mathjs.org/history.html&#34;&gt;History&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;First clone the project from github:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:josdejong/mathjs.git&#xA;cd mathjs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the project dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, the project can be build by executing the build script via npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will build ESM output, CommonJS output, and the bundle math.js from the source files and put them in the folder lib.&lt;/p&gt; &#xA;&lt;h2&gt;Develop&lt;/h2&gt; &#xA;&lt;p&gt;When developing new features for mathjs, it is good to be aware of the following background information.&lt;/p&gt; &#xA;&lt;h3&gt;Code&lt;/h3&gt; &#xA;&lt;p&gt;The code of &lt;code&gt;mathjs&lt;/code&gt; is written in ES modules, and requires all files to have a real, relative path, meaning the files must have a &lt;code&gt;*.js&lt;/code&gt; extension. Please configure adding file extensions on auto import in your IDE.&lt;/p&gt; &#xA;&lt;h3&gt;Architecture&lt;/h3&gt; &#xA;&lt;p&gt;What mathjs tries to achieve is to offer an environment where you can do calculations with mixed data types, like multiplying a regular &lt;code&gt;number&lt;/code&gt; with a &lt;code&gt;Complex&lt;/code&gt; number or a &lt;code&gt;BigNumber&lt;/code&gt;, and work with all of those in matrices. Mathjs also allows to add a new data type, like say &lt;code&gt;BigInt&lt;/code&gt;, with little effort.&lt;/p&gt; &#xA;&lt;p&gt;The solution that mathjs uses has two main ingredients:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Typed functions&lt;/strong&gt;. All functions are created using &lt;a href=&#34;https://github.com/josdejong/typed-function/&#34;&gt;&lt;code&gt;typed-function&lt;/code&gt;&lt;/a&gt;. This makes it easier to (dynamically) create and extend a single function with new data types, automatically do type conversions on function inputs, etc. So, if you create function multiply for two &lt;code&gt;number&lt;/code&gt;s, you can extend it with support for multiplying two &lt;code&gt;BigInts&lt;/code&gt;. If you define a conversion from &lt;code&gt;BigInt&lt;/code&gt; to &lt;code&gt;number&lt;/code&gt;, the typed-function will automatically allow you to multiply a &lt;code&gt;BigInt&lt;/code&gt; with a &lt;code&gt;number&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dependency injection&lt;/strong&gt;. When we have a function &lt;code&gt;multiply&lt;/code&gt; with support for &lt;code&gt;BigInt&lt;/code&gt;, thanks to the dependency injection, other functions using &lt;code&gt;multiply&lt;/code&gt; under the hood, like &lt;code&gt;prod&lt;/code&gt;, will automatically support &lt;code&gt;BigInt&lt;/code&gt; too. This also works the other way around: if you don&#39;t need the heavyweight &lt;code&gt;multiply&lt;/code&gt; (which supports BigNumbers, matrices, etc), and you just need a plain and simple number support, you can use a lightweight implementation of &lt;code&gt;multiply&lt;/code&gt; just for numbers, and inject that in &lt;code&gt;prod&lt;/code&gt; and other functions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;At the lowest level, mathjs has immutable factory functions which create immutable functions. The core function &lt;code&gt;math.create(...)&lt;/code&gt; creates a new instance having functions created from all passed factory functions. A mathjs instance is a collection of created functions. It contains a function like &lt;code&gt;math.import&lt;/code&gt; to allow extending the instance with new functions, which can then be used in the expression parser.&lt;/p&gt; &#xA;&lt;h3&gt;Implementing a new function&lt;/h3&gt; &#xA;&lt;p&gt;A common case is to implement a new function. This involves the following steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Implement the function in the right category, for example &lt;code&gt;./src/function/arithmetic/myNewFunction.js&lt;/code&gt;, where you can replace &lt;code&gt;arithmetic&lt;/code&gt; with the proper category, and &lt;code&gt;myNewFunction&lt;/code&gt; with the name of the new function. Add the new function to the index files &lt;code&gt;./src/factoriesAny.js&lt;/code&gt; and possibly &lt;code&gt;./src/factoriesNumber.js&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Write documentation on the function in the source code comment of &lt;code&gt;myNewFunction.js&lt;/code&gt;. This documentation is used to auto generate documentation on the website.&lt;/li&gt; &#xA; &lt;li&gt;Write embedded documentation for the new function in &lt;code&gt;./src/expression/embeddedDocs/function/arithmetic/myNewFunction.js&lt;/code&gt;. Add the new documentation to the index file &lt;code&gt;./src/expression/embeddedDocs/embeddedDocs.js&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Write unit tests for the function in &lt;code&gt;./test/unit-tests/function/arithmetic/myNewFunction.test.js&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Write a TypeScript definition for the new function in &lt;code&gt;./types/index.d.ts&lt;/code&gt;, and write tests for it in &lt;code&gt;./types/index.ts&lt;/code&gt;. Normally, two definitions need to be added: one for the static function &lt;code&gt;math.myNewFunction(...)&lt;/code&gt; and one for the chained API &lt;code&gt;math.chain(...).myNewFunction(...)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ensure the code style is ok by running &lt;code&gt;npm run lint&lt;/code&gt; (run &lt;code&gt;npm run format&lt;/code&gt; to fix the code style automatically).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build scripts&lt;/h3&gt; &#xA;&lt;p&gt;The build script currently generates two types of output:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;any&lt;/strong&gt;, generate entry points to create full versions of all functions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;number&lt;/strong&gt;: generating and entry points to create lightweight functions just supporting &lt;code&gt;number&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For each function, an object is generated containing the factory functions of all dependencies of the function. This allows to just load a specific set of functions, and not load or bundle any other functionality. So for example, to just create function &lt;code&gt;add&lt;/code&gt; you can do &lt;code&gt;math.create(addDependencies)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Test&lt;/h2&gt; &#xA;&lt;p&gt;To execute tests for the library, install the project dependencies once:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, the tests can be executed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, the tests can be run on FireFox using &lt;a href=&#34;https://developer.mozilla.org/en-US/Firefox/Headless_mode&#34;&gt;headless mode&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run test:browser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the tests remotely on BrowserStack, first set the environment variables &lt;code&gt;BROWSER_STACK_USERNAME&lt;/code&gt; and &lt;code&gt;BROWSER_STACK_ACCESS_KEY&lt;/code&gt; with your username and access key and then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run test:browserstack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can separately run the code linter, though it is also executed with &lt;code&gt;npm test&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To automatically fix linting issue, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run format&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To test code coverage of the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see the coverage results, open the generated report in your browser:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./coverage/lcov-report/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Continuous integration testing&lt;/h3&gt; &#xA;&lt;p&gt;Continuous integration tests are run on &lt;a href=&#34;https://github.com/josdejong/mathjs/actions&#34;&gt;Github Actions&lt;/a&gt; and &lt;a href=&#34;https://www.browserstack.com&#34;&gt;BrowserStack&lt;/a&gt; every time a commit is pushed to github. Github Actions runs the tests for different versions of node.js, and BrowserStack runs the tests on all major browsers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.browserstack.com&#34;&gt;&lt;img src=&#34;https://raw.github.com/josdejong/mathjs/master/misc/browserstack.png&#34; alt=&#34;BrowserStack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks Github Actions and BrowserStack for the generous free hosting of this open source project!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (C) 2013-2023 Jos de Jong &lt;a href=&#34;mailto:wjosdejong@gmail.com&#34;&gt;wjosdejong@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
</feed>