<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-21T01:30:32Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>4TWIGGERS/React-Native-Reflective-UI</title>
    <updated>2023-09-21T01:30:32Z</updated>
    <id>tag:github.com,2023-09-21:/4TWIGGERS/React-Native-Reflective-UI</id>
    <link href="https://github.com/4TWIGGERS/React-Native-Reflective-UI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Here&#39;s the result&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/front-end-jeko/React-Native-Reflective-UI/assets/43757639/6d50d29f-1c05-4e8b-a8d6-77ac0fd6a075&#34;&gt;https://github.com/front-end-jeko/React-Native-Reflective-UI/assets/43757639/6d50d29f-1c05-4e8b-a8d6-77ac0fd6a075&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>duckduckgo/tracker-radar</title>
    <updated>2023-09-21T01:30:32Z</updated>
    <id>tag:github.com,2023-09-21:/duckduckgo/tracker-radar</id>
    <link href="https://github.com/duckduckgo/tracker-radar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Data set of top third party web domains with rich metadata about them&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DuckDuckGo Tracker Radar&lt;/h1&gt; &#xA;&lt;p&gt;This is not a block list, but a data set of the most common third party domains on the web with information about their behavior, classification and ownership. It allows for easy custom solutions with the significant metadata it has for each domain: parent entity, prevalence, use of fingerprinting, cookies, privacy policy, and performance. The data on individual domains can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/duckduckgo/tracker-radar/main/domains&#34;&gt;domains&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Related Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Read &lt;a href=&#34;https://spreadprivacy.com/duckduckgo-tracker-radar/&#34;&gt;our blog post&lt;/a&gt; for more information on the Tracker Radar&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To learn more about the Tracker Radar data format, see &lt;a href=&#34;https://raw.githubusercontent.com/duckduckgo/tracker-radar/main/docs/DATA_MODEL.md&#34;&gt;Data Model&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The code used to build the Tracker Radar: &lt;a href=&#34;http://github.com/duckduckgo/tracker-radar-collector&#34;&gt;Tracker Radar Collector&lt;/a&gt; and &lt;a href=&#34;https://github.com/duckduckgo/tracker-radar-detector&#34;&gt;Tracker Radar Detector&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2020 Duck Duck Go, Inc.&lt;/p&gt; &#xA;&lt;p&gt;The Tracker Radar data is licensed under the &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License&lt;/a&gt;. If you&#39;d like to license the list for commercial use, &lt;a href=&#34;https://help.duckduckgo.com/duckduckgo-help-pages/company/contact-us/&#34;&gt;please reach out&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Questions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Questions about the Tracker Radar?&lt;/strong&gt; See our &lt;a href=&#34;https://raw.githubusercontent.com/duckduckgo/tracker-radar/main/docs/FAQ.md&#34;&gt;frequently asked questions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Need help with other DuckDuckGo things?&lt;/strong&gt; See &lt;a href=&#34;https://help.duckduckgo.com/&#34;&gt;DuckDuckGo Help Pages&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>js-cookie/js-cookie</title>
    <updated>2023-09-21T01:30:32Z</updated>
    <id>tag:github.com,2023-09-21:/js-cookie/js-cookie</id>
    <link href="https://github.com/js-cookie/js-cookie" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple, lightweight JavaScript API for handling browser cookies&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://cloud.githubusercontent.com/assets/835857/14581711/ba623018-0436-11e6-8fce-d2ccd4d379c9.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;JavaScript Cookie &lt;a href=&#34;https://github.com/js-cookie/js-cookie/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/js-cookie/js-cookie/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/js-cookie/js-cookie&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/js-cookie/js-cookie.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/js-cookie&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/package-json/v/js-cookie/js-cookie&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/js-cookie&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/js-cookie/3&#34; alt=&#34;size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jsdelivr.com/package/npm/js-cookie&#34;&gt;&lt;img src=&#34;https://data.jsdelivr.com/v1/package/npm/js-cookie/badge?style=rounded&#34; alt=&#34;jsDelivr Hits&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A simple, lightweight JavaScript API for handling cookies&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Works in &lt;a href=&#34;https://www.browserstack.com/automate/public-build/b3VDaHAxVDg0NDdCRmtUOWg0SlQzK2NsRVhWTjlDQS9qdGJoak1GMzJiVT0tLVhwZHNvdGRoY284YVRrRnI3eU1JTnc9PQ==--5e88ffb3ca116001d7ef2cfb97a4128ac31174c2&#34;&gt;all&lt;/a&gt; browsers&lt;/li&gt; &#xA; &lt;li&gt;Accepts &lt;a href=&#34;https://raw.githubusercontent.com/js-cookie/js-cookie/main/#encoding&#34;&gt;any&lt;/a&gt; character&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/js-cookie/js-cookie/main/test&#34;&gt;Heavily&lt;/a&gt; tested&lt;/li&gt; &#xA; &lt;li&gt;No dependency&lt;/li&gt; &#xA; &lt;li&gt;Supports ES modules&lt;/li&gt; &#xA; &lt;li&gt;Supports AMD/CommonJS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc6265&#34;&gt;RFC 6265&lt;/a&gt; compliant&lt;/li&gt; &#xA; &lt;li&gt;Useful &lt;a href=&#34;https://github.com/js-cookie/js-cookie/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;a href=&#34;https://raw.githubusercontent.com/js-cookie/js-cookie/main/#converters&#34;&gt;custom encoding/decoding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&amp;lt; 800 bytes&lt;/strong&gt; gzipped!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;ðŸ‘‰ðŸ‘‰ If you&#39;re viewing this at &lt;a href=&#34;https://github.com/js-cookie/js-cookie&#34;&gt;https://github.com/js-cookie/js-cookie&lt;/a&gt;, you&#39;re reading the documentation for the main branch. &lt;a href=&#34;https://github.com/js-cookie/js-cookie/tree/latest#readme&#34;&gt;View documentation for the latest release.&lt;/a&gt; ðŸ‘ˆðŸ‘ˆ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;NPM&lt;/h3&gt; &#xA;&lt;p&gt;JavaScript Cookie supports &lt;a href=&#34;https://www.npmjs.com/package/js-cookie&#34;&gt;npm&lt;/a&gt; under the name &lt;code&gt;js-cookie&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i js-cookie&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The npm package has a &lt;code&gt;module&lt;/code&gt; field pointing to an ES module variant of the library, mainly to provide support for ES module aware bundlers, whereas its &lt;code&gt;browser&lt;/code&gt; field points to an UMD module for full backward compatibility.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Not all browsers support ES modules natively yet&lt;/em&gt;. For this reason the npm package/release provides both the ES and UMD module variant and you may want to include the ES module along with the UMD fallback to account for this:&lt;/p&gt; &#xA;&lt;h3&gt;CDN&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively, include js-cookie via &lt;a href=&#34;https://www.jsdelivr.com/package/npm/js-cookie&#34;&gt;jsDelivr CDN&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Basic Usage&lt;/h2&gt; &#xA;&lt;p&gt;Create a cookie, valid across the entire site:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.set(&#39;name&#39;, &#39;value&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a cookie that expires 7 days from now, valid across the entire site:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.set(&#39;name&#39;, &#39;value&#39;, { expires: 7 })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create an expiring cookie, valid to the path of the current page:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.set(&#39;name&#39;, &#39;value&#39;, { expires: 7, path: &#39;&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read cookie:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.get(&#39;name&#39;) // =&amp;gt; &#39;value&#39;&#xA;Cookies.get(&#39;nothing&#39;) // =&amp;gt; undefined&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read all visible cookies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.get() // =&amp;gt; { name: &#39;value&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: It is not possible to read a particular cookie by passing one of the cookie attributes (which may or may not have been used when writing the cookie in question):&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.get(&#39;foo&#39;, { domain: &#39;sub.example.com&#39; }) // `domain` won&#39;t have any effect...!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The cookie with the name &lt;code&gt;foo&lt;/code&gt; will only be available on &lt;code&gt;.get()&lt;/code&gt; if it&#39;s visible from where the code is called; the domain and/or path attribute will not have an effect when reading.&lt;/p&gt; &#xA;&lt;p&gt;Delete cookie:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.remove(&#39;name&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Delete a cookie valid to the path of the current page:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.set(&#39;name&#39;, &#39;value&#39;, { path: &#39;&#39; })&#xA;Cookies.remove(&#39;name&#39;) // fail!&#xA;Cookies.remove(&#39;name&#39;, { path: &#39;&#39; }) // removed!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;IMPORTANT! When deleting a cookie and you&#39;re not relying on the &lt;a href=&#34;https://raw.githubusercontent.com/js-cookie/js-cookie/main/#cookie-attributes&#34;&gt;default attributes&lt;/a&gt;, you must pass the exact same path and domain attributes that were used to set the cookie:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.remove(&#39;name&#39;, { path: &#39;&#39;, domain: &#39;.yourdomain.com&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Removing a nonexistent cookie neither raises any exception nor returns any value.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Namespace conflicts&lt;/h2&gt; &#xA;&lt;p&gt;If there is any danger of a conflict with the namespace &lt;code&gt;Cookies&lt;/code&gt;, the &lt;code&gt;noConflict&lt;/code&gt; method will allow you to define a new namespace and preserve the original one. This is especially useful when running the script on third party sites e.g. as part of a widget or SDK.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Assign the js-cookie api to a different variable and restore the original &#34;window.Cookies&#34;&#xA;var Cookies2 = Cookies.noConflict()&#xA;Cookies2.set(&#39;name&#39;, &#39;value&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;.noConflict&lt;/code&gt; method is not necessary when using AMD or CommonJS, thus it is not exposed in those environments.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Encoding&lt;/h2&gt; &#xA;&lt;p&gt;This project is &lt;a href=&#34;http://tools.ietf.org/html/rfc6265#section-4.1.1&#34;&gt;RFC 6265&lt;/a&gt; compliant. All special characters that are not allowed in the cookie-name or cookie-value are encoded with each one&#39;s UTF-8 Hex equivalent using &lt;a href=&#34;http://en.wikipedia.org/wiki/Percent-encoding&#34;&gt;percent-encoding&lt;/a&gt;.&lt;br&gt; The only character in cookie-name or cookie-value that is allowed and still encoded is the percent &lt;code&gt;%&lt;/code&gt; character, it is escaped in order to interpret percent input as literal.&lt;br&gt; Please note that the default encoding/decoding strategy is meant to be interoperable &lt;a href=&#34;https://github.com/js-cookie/js-cookie/pull/200#discussion_r63270778&#34;&gt;only between cookies that are read/written by js-cookie&lt;/a&gt;. To override the default encoding/decoding strategy you need to use a &lt;a href=&#34;https://raw.githubusercontent.com/js-cookie/js-cookie/main/#converters&#34;&gt;converter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: According to &lt;a href=&#34;https://tools.ietf.org/html/rfc6265#section-6.1&#34;&gt;RFC 6265&lt;/a&gt;, your cookies may get deleted if they are too big or there are too many cookies in the same domain, &lt;a href=&#34;https://github.com/js-cookie/js-cookie/wiki/Frequently-Asked-Questions#why-are-my-cookies-being-deleted&#34;&gt;more details here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cookie Attributes&lt;/h2&gt; &#xA;&lt;p&gt;Cookie attribute defaults can be set globally by creating an instance of the api via &lt;code&gt;withAttributes()&lt;/code&gt;, or individually for each call to &lt;code&gt;Cookies.set(...)&lt;/code&gt; by passing a plain object as the last argument. Per-call attributes override the default attributes.&lt;/p&gt; &#xA;&lt;h3&gt;expires&lt;/h3&gt; &#xA;&lt;p&gt;Define when the cookie will be removed. Value must be a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number&#34;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; which will be interpreted as days from time of creation or a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&#34;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance. If omitted, the cookie becomes a session cookie.&lt;/p&gt; &#xA;&lt;p&gt;To create a cookie that expires in less than a day, you can check the &lt;a href=&#34;https://github.com/js-cookie/js-cookie/wiki/Frequently-Asked-Questions#expire-cookies-in-less-than-a-day&#34;&gt;FAQ on the Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Default:&lt;/strong&gt; Cookie is removed when the user closes the browser.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.set(&#39;name&#39;, &#39;value&#39;, { expires: 365 })&#xA;Cookies.get(&#39;name&#39;) // =&amp;gt; &#39;value&#39;&#xA;Cookies.remove(&#39;name&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;path&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&#34;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; indicating the path where the cookie is visible.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Default:&lt;/strong&gt; &lt;code&gt;/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.set(&#39;name&#39;, &#39;value&#39;, { path: &#39;&#39; })&#xA;Cookies.get(&#39;name&#39;) // =&amp;gt; &#39;value&#39;&#xA;Cookies.remove(&#39;name&#39;, { path: &#39;&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note regarding Internet Explorer:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Due to an obscure bug in the underlying WinINET InternetGetCookie implementation, IEâ€™s document.cookie will not return a cookie if it was set with a path attribute containing a filename.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;(From &lt;a href=&#34;http://blogs.msdn.com/b/ieinternals/archive/2009/08/20/wininet-ie-cookie-internals-faq.aspx&#34;&gt;Internet Explorer Cookie Internals (FAQ)&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;This means one cannot set a path using &lt;code&gt;window.location.pathname&lt;/code&gt; in case such pathname contains a filename like so: &lt;code&gt;/check.html&lt;/code&gt; (or at least, such cookie cannot be read correctly).&lt;/p&gt; &#xA;&lt;p&gt;In fact, you should never allow untrusted input to set the cookie attributes or you might be exposed to a &lt;a href=&#34;https://github.com/js-cookie/js-cookie/issues/396&#34;&gt;XSS attack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;domain&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&#34;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; indicating a valid domain where the cookie should be visible. The cookie will also be visible to all subdomains.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Default:&lt;/strong&gt; Cookie is visible only to the domain or subdomain of the page where the cookie was created, except for Internet Explorer (see below).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Assuming a cookie that is being created on &lt;code&gt;site.com&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.set(&#39;name&#39;, &#39;value&#39;, { domain: &#39;subdomain.site.com&#39; })&#xA;Cookies.get(&#39;name&#39;) // =&amp;gt; undefined (need to read at &#39;subdomain.site.com&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note regarding Internet Explorer default behavior:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Q3: If I donâ€™t specify a DOMAIN attribute (for) a cookie, IE sends it to all nested subdomains anyway?&lt;br&gt; A: Yes, a cookie set on example.com will be sent to sub2.sub1.example.com.&lt;br&gt; Internet Explorer differs from other browsers in this regard.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;(From &lt;a href=&#34;http://blogs.msdn.com/b/ieinternals/archive/2009/08/20/wininet-ie-cookie-internals-faq.aspx&#34;&gt;Internet Explorer Cookie Internals (FAQ)&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;This means that if you omit the &lt;code&gt;domain&lt;/code&gt; attribute, it will be visible for a subdomain in IE.&lt;/p&gt; &#xA;&lt;h3&gt;secure&lt;/h3&gt; &#xA;&lt;p&gt;Either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, indicating if the cookie transmission requires a secure protocol (https).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Default:&lt;/strong&gt; No secure protocol requirement.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.set(&#39;name&#39;, &#39;value&#39;, { secure: true })&#xA;Cookies.get(&#39;name&#39;) // =&amp;gt; &#39;value&#39;&#xA;Cookies.remove(&#39;name&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;sameSite&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&#34;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, allowing to control whether the browser is sending a cookie along with cross-site requests.&lt;/p&gt; &#xA;&lt;p&gt;Default: not set.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note that more recent browsers are making &#34;Lax&#34; the default value even without specifiying anything here.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.set(&#39;name&#39;, &#39;value&#39;, { sameSite: &#39;strict&#39; })&#xA;Cookies.get(&#39;name&#39;) // =&amp;gt; &#39;value&#39;&#xA;Cookies.remove(&#39;name&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting up defaults&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const api = Cookies.withAttributes({ path: &#39;/&#39;, domain: &#39;.example.com&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Converters&lt;/h2&gt; &#xA;&lt;h3&gt;Read&lt;/h3&gt; &#xA;&lt;p&gt;Create a new instance of the api that overrides the default decoding implementation. All get methods that rely in a proper decoding to work, such as &lt;code&gt;Cookies.get()&lt;/code&gt; and &lt;code&gt;Cookies.get(&#39;name&#39;)&lt;/code&gt;, will run the given converter for each cookie. The returned value will be used as the cookie value.&lt;/p&gt; &#xA;&lt;p&gt;Example from reading one of the cookies that can only be decoded using the &lt;code&gt;escape&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;document.cookie = &#39;escaped=%u5317&#39;&#xA;document.cookie = &#39;default=%E5%8C%97&#39;&#xA;var cookies = Cookies.withConverter({&#xA;  read: function (value, name) {&#xA;    if (name === &#39;escaped&#39;) {&#xA;      return unescape(value)&#xA;    }&#xA;    // Fall back to default for all other cookies&#xA;    return Cookies.converter.read(value, name)&#xA;  }&#xA;})&#xA;cookies.get(&#39;escaped&#39;) // åŒ—&#xA;cookies.get(&#39;default&#39;) // åŒ—&#xA;cookies.get() // { escaped: &#39;åŒ—&#39;, default: &#39;åŒ—&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Write&lt;/h3&gt; &#xA;&lt;p&gt;Create a new instance of the api that overrides the default encoding implementation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Cookies.withConverter({&#xA;  write: function (value, name) {&#xA;    return value.toUpperCase()&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TypeScript declarations&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i @types/js-cookie&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Server-side integration&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/js-cookie/js-cookie/main/SERVER_SIDE.md&#34;&gt;Servers Docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/js-cookie/js-cookie/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Releasing&lt;/h2&gt; &#xA;&lt;p&gt;Releasing should be done via the &lt;code&gt;Release&lt;/code&gt; GitHub Actions workflow, so that published packages on npmjs.com have package provenance.&lt;/p&gt; &#xA;&lt;p&gt;GitHub releases are created as a draft and need to be published manually! (This is so we are able to craft suitable release notes before publishing.)&lt;/p&gt; &#xA;&lt;h2&gt;Supporters&lt;/h2&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.browserstack.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/js-cookie/js-cookie/Browserstack-logo%402x.png&#34; width=&#34;150&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Many thanks to &lt;a href=&#34;https://www.browserstack.com/&#34;&gt;BrowserStack&lt;/a&gt; for providing unlimited browser testing free of cost.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/carhartl&#34;&gt;Klaus Hartl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FagnerMartinsBrack&#34;&gt;Fagner Brack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;And awesome &lt;a href=&#34;https://github.com/js-cookie/js-cookie/graphs/contributors&#34;&gt;contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>