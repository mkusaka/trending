<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-18T01:32:03Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>exa-labs/exa-mcp-server</title>
    <updated>2025-03-18T01:32:03Z</updated>
    <id>tag:github.com,2025-03-18:/exa-labs/exa-mcp-server</id>
    <link href="https://github.com/exa-labs/exa-mcp-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Claude can perform Web Search | Exa with MCP (Model Context Protocol)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Exa MCP Server üîç&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/exa-mcp-server&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/exa-mcp-server.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://smithery.ai/server/exa&#34;&gt;&lt;img src=&#34;https://smithery.ai/badge/exa&#34; alt=&#34;smithery badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Model Context Protocol (MCP) server lets AI assistants like Claude use the Exa AI Search API for web searches. This setup allows AI models to get real-time web information in a safe and controlled way.&lt;/p&gt; &#xA;&lt;p&gt;Demo video &lt;a href=&#34;https://www.loom.com/share/ac676f29664e4c6cb33a2f0a63772038?sid=0e72619f-5bfc-415d-a705-63d326373f60&#34;&gt;https://www.loom.com/share/ac676f29664e4c6cb33a2f0a63772038?sid=0e72619f-5bfc-415d-a705-63d326373f60&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is MCP? ü§î&lt;/h2&gt; &#xA;&lt;p&gt;The Model Context Protocol (MCP) is a system that lets AI apps, like Claude Desktop, connect to external tools and data sources. It gives a clear and safe way for AI assistants to work with local services and APIs while keeping the user in control.&lt;/p&gt; &#xA;&lt;h2&gt;What does this server do? üöÄ&lt;/h2&gt; &#xA;&lt;p&gt;The Exa MCP server:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enables AI assistants to perform web searches using Exa&#39;s powerful search API&lt;/li&gt; &#xA; &lt;li&gt;Provides structured search results including titles, URLs, and content snippets&lt;/li&gt; &#xA; &lt;li&gt;Handles rate limiting and error cases gracefully&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites üìã&lt;/h2&gt; &#xA;&lt;p&gt;Before you begin, ensure you have:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; (v18 or higher)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://claude.ai/download&#34;&gt;Claude Desktop&lt;/a&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://dashboard.exa.ai/api-keys&#34;&gt;Exa API key&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Git installed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can verify your Node.js installation by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node --version  # Should show v18.0.0 or higher&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation üõ†Ô∏è&lt;/h2&gt; &#xA;&lt;h3&gt;NPM Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g exa-mcp-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Smithery&lt;/h3&gt; &#xA;&lt;p&gt;To install the Exa MCP server for Claude Desktop automatically via &lt;a href=&#34;https://smithery.ai/server/exa&#34;&gt;Smithery&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx -y @smithery/cli install exa --client claude&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/exa-labs/exa-mcp-server.git&#xA;cd exa-mcp-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install --save axios dotenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Build the project:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Create a global link (this makes the server executable from anywhere):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm link&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration ‚öôÔ∏è&lt;/h2&gt; &#xA;&lt;h3&gt;1. Configure Claude Desktop to recognize the Exa MCP server&lt;/h3&gt; &#xA;&lt;p&gt;You can find claude_desktop_config.json inside the settings of Claude Desktop app:&lt;/p&gt; &#xA;&lt;p&gt;Open the Claude Desktop app and enable Developer Mode from the top-left menu bar.&lt;/p&gt; &#xA;&lt;p&gt;Once enabled, open Settings (also from the top-left menu bar) and navigate to the Developer Option, where you&#39;ll find the Edit Config button. Clicking it will open the claude_desktop_config.json file, allowing you to make the necessary edits.&lt;/p&gt; &#xA;&lt;p&gt;OR (if you want to open claude_desktop_config.json from terminal)&lt;/p&gt; &#xA;&lt;h4&gt;For macOS:&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open your Claude Desktop configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;code ~/Library/Application\ Support/Claude/claude_desktop_config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;For Windows:&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open your Claude Desktop configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;code %APPDATA%\Claude\claude_desktop_config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Add the Exa server configuration:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;exa&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;/path/to/exa-mcp-server/build/index.js&#34;],&#xA;      &#34;env&#34;: {&#xA;        &#34;EXA_API_KEY&#34;: &#34;your-api-key-here&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;your-api-key-here&lt;/code&gt; with your actual Exa API key from &lt;a href=&#34;https://dashboard.exa.ai/api-keys&#34;&gt;dashboard.exa.ai/api-keys&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;3. Restart Claude Desktop&lt;/h3&gt; &#xA;&lt;p&gt;For the changes to take effect:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Completely quit Claude Desktop (not just close the window)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start Claude Desktop again&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Look for the üîå icon to verify the Exa server is connected&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage üéØ&lt;/h2&gt; &#xA;&lt;p&gt;Once configured, you can ask Claude to perform web searches. Here are some example prompts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Can you search for recent developments in quantum computing?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Search for and summarize the latest news about artificial intelligence startups in new york.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Find and analyze recent research papers about climate change solutions.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The server will:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Process the search request&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Query the Exa API&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Return formatted results to Claude&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Cache the search for future reference&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features ‚ú®&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Web Search Tool&lt;/strong&gt;: Enables Claude to search the web using natural language queries&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;: Gracefully handles API errors and rate limits&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Type Safety&lt;/strong&gt;: Full TypeScript implementation with proper type checking&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting üîß&lt;/h2&gt; &#xA;&lt;h3&gt;Common Issues&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Server Not Found&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Verify the npm link is correctly set up&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Check Claude Desktop configuration syntax&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Ensure Node.js is properly installed&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;API Key Issues&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Confirm your Exa API key is valid&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Check the API key is correctly set in the Claude Desktop config&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Verify no spaces or quotes around the API key&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connection Issues&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Restart Claude Desktop completely&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Check Claude Desktop logs:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;# macOS&#xA;tail -n 20 -f ~/Library/Logs/Claude/mcp*.log&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Getting Help&lt;/h3&gt; &#xA;&lt;p&gt;If you encounter issues review the &lt;a href=&#34;https://modelcontextprotocol.io&#34;&gt;MCP Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments üôè&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://exa.ai&#34;&gt;Exa AI&lt;/a&gt; for their powerful search API&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://modelcontextprotocol.io&#34;&gt;Model Context Protocol&lt;/a&gt; for the MCP specification&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anthropic.com&#34;&gt;Anthropic&lt;/a&gt; for Claude Desktop&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>