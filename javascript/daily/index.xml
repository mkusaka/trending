<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-03T01:35:36Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Koenkk/zigbee-herdsman-converters</title>
    <updated>2022-11-03T01:35:36Z</updated>
    <id>tag:github.com,2022-11-03:/Koenkk/zigbee-herdsman-converters</id>
    <link href="https://github.com/Koenkk/zigbee-herdsman-converters" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of device converters to be used with zigbee-herdsman&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://nodei.co/npm/zigbee-herdsman-converters/&#34;&gt;&lt;img src=&#34;https://nodei.co/npm/zigbee-herdsman-converters.png&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;zigbee-herdsman-converters&lt;/h1&gt; &#xA;&lt;p&gt;Collection of device converters to be used with zigbee-herdsman.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.zigbee2mqtt.io/advanced/support-new-devices/01_support_new_devices.html&#34;&gt;Zigbee2MQTT how to support new devices&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Submitting a pull request&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to submit a pull request, you should run the following commands to ensure your changes will pass the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run lint&#xA;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If any of those commands finish with an error your PR won&#39;t pass the tests and will likely be rejected.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation of definition meta property&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;multiEndpoint&lt;/code&gt;: enables the multi endpoint functionallity in e.g. fromZigbee.on_off, example: normally this converter would return {&#34;state&#34;: &#34;OFF&#34;}, when multiEndpoint is enabled the &#39;endpoint&#39; method of the device definition will be called to determine the endpoint name which is then used as key e.g. {&#34;state_left&#34;: &#34;OFF&#34;}. Only needed when device sends the same attribute from multiple endpoints. (default: false)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;disableDefaultResponse&lt;/code&gt;: used by toZigbee converters to disable the default response of some devices as they don&#39;t provide one. (default: false)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;applyRedFix&lt;/code&gt;: see toZigbee.light_color (default: false)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;enhancedHue&lt;/code&gt;: see toZigbee.light_color (default: true)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;supportsHueAndSaturation&lt;/code&gt;: see toZigbee.light_color (default: false)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;timeout&lt;/code&gt;: timeout for commands to this device used in toZigbee. (default: 10000)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;coverInverted&lt;/code&gt;: Set to true for cover controls that report position=100 as open (default: false)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;coverStateFromTilt&lt;/code&gt;: Set cover state based on tilt&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;turnsOffAtBrightness1&lt;/code&gt;: Indicates light turns off when brightness 1 is set (default: false)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pinCodeCount&lt;/code&gt;: Amount of pincodes the lock can handle&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;disableActionGroup&lt;/code&gt;: Prevents some converters adding the action_group to the payload (default: false)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tuyaThermostatSystemMode&lt;/code&gt;/&lt;code&gt;tuyaThermostatPreset&lt;/code&gt;: TuYa specific thermostat options&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;thermostat&lt;/code&gt;: see e.g. HT-08 definition &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;{dontMapPIHeatingDemand: true}&lt;/code&gt;: do not map piHeatingDemand from 0-255 -&amp;gt; 0-100, see fromZigbee.thermostat (default: false)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;battery&lt;/code&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;{dontDividePercentage: true}&lt;/code&gt;: prevents batteryPercentageRemainig from being divided (ZCL 200=100%, but some report 100=100%) (default: false)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;{voltageToPercentage: &#39;3V_2100&#39;}&lt;/code&gt;: convert voltage to percentage using specified option. See utils.batteryVoltageToPercentage() (default: null, no voltage to percentage conversion)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fanStateOn&lt;/code&gt;: value used for fan_mode when using fan_state=&#34;ON&#34;, the default is &#34;on&#34;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>RobinLinus/snapdrop</title>
    <updated>2022-11-03T01:35:36Z</updated>
    <id>tag:github.com,2022-11-03:/RobinLinus/snapdrop</id>
    <link href="https://github.com/RobinLinus/snapdrop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Progressive Web App for local file sharing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Snapdrop&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://snapdrop.net&#34;&gt;Snapdrop&lt;/a&gt;: local file sharing in your browser. Inspired by Apple&#39;s Airdrop.&lt;/p&gt; &#xA;&lt;h4&gt;Snapdrop is built with the following awesome technologies:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vanilla HTML5 / ES6 / CSS3 frontend&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://webrtc.org/&#34;&gt;WebRTC&lt;/a&gt; / &lt;a href=&#34;http://www.websocket.org/&#34;&gt;WebSockets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;NodeJS&lt;/a&gt; backend&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wikipedia.org/wiki/Progressive_Web_App&#34;&gt;Progressive Web App&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Have any questions? Read our &lt;a href=&#34;https://raw.githubusercontent.com/RobinLinus/snapdrop/master/docs/faq.md&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can &lt;a href=&#34;https://raw.githubusercontent.com/RobinLinus/snapdrop/master/docs/local-dev.md&#34;&gt;host your own instance with Docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support the Snapdrop Community&lt;/h2&gt; &#xA;&lt;p&gt;Snapdrop is free. Still, we have to pay for the server. If you want to contribute, please use PayPal:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=FTP9DXUR7LA7Q&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;or Bitcoin:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coins.github.io/thx/#1K9zQ8f4iTyhKyHWmiDKt21cYX2QSDckWB?label=Snapdrop&amp;amp;message=Thanks!%20Your%20contribution%20helps%20to%20keep%20Snapdrop%20free%20for%20everybody!&#34;&gt;&lt;img src=&#34;https://coins.github.io/thx/logo-color-large-pill-320px.png&#34; alt=&#34;CoinThx&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can become a &lt;a href=&#34;https://github.com/sponsors/RobinLinus&#34;&gt;Github Sponsor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thanks a lot for supporting free and open software!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MetaMask/eth-phishing-detect</title>
    <updated>2022-11-03T01:35:36Z</updated>
    <id>tag:github.com,2022-11-03:/MetaMask/eth-phishing-detect</id>
    <link href="https://github.com/MetaMask/eth-phishing-detect" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Utility for detecting phishing domains targeting Ethereum users&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;eth-phishing-detect&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://greenkeeper.io/&#34;&gt;&lt;img src=&#34;https://badges.greenkeeper.io/MetaMask/eth-phishing-detect.svg?sanitize=true&#34; alt=&#34;Greenkeeper badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Utility for detecting phishing domains targeting Ethereum users.&lt;/p&gt; &#xA;&lt;p&gt;For checking why a given domain was blocked, try our interactive page &lt;a href=&#34;https://metamask.github.io/eth-phishing-detect&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Blocking Policy&lt;/h2&gt; &#xA;&lt;p&gt;We are constantly evolving the ideal policy that guides this list, but a few clearly defined rules have emerged. We will be quick and decisive to block websites that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Impersonate other known and established sites.&lt;/li&gt; &#xA; &lt;li&gt;Use their interfaces to collect user signing keys (especially cryptocurrency keys) and send them back to home servers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are other grounds for blocking, and we will ultimately do our best to keep our users safe.&lt;/p&gt; &#xA;&lt;h3&gt;basic usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const checkForPhishing = require(&#39;eth-phishing-detect&#39;)&#xA;&#xA;const value = checkForPhishing(&#39;etherclassicwallet.com&#39;)&#xA;console.log(value) // true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;advanced usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const PhishingDetector = require(&#39;eth-phishing-detect/src/detector&#39;)&#xA;&#xA;const detector = new PhishingDetector({ whitelist, blacklist, fuzzylist, tolerance })&#xA;const value = detector.check(&#39;etherclassicwallet.com&#39;)&#xA;console.log(value)&#xA;/*&#xA;{&#xA;  type: &#34;blacklist&#34;,&#xA;  result: true,&#xA;}&#xA;*/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;To keep a tidy file, use the following CLI to add new phishing domains:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn add:blacklist crypto-phishing-site.tld&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>