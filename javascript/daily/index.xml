<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-18T01:34:10Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Animationking11/unblockedgames</title>
    <updated>2022-11-18T01:34:10Z</updated>
    <id>tag:github.com,2022-11-18:/Animationking11/unblockedgames</id>
    <link href="https://github.com/Animationking11/unblockedgames" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unblocked games website --- 1v1.lol ~ slope ~ RetroBowl ~ PacMan ~ Tetris ~ Sans ~ Pong&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;How to deploy this site for free&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Deploy to github pages:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://github.com/Animationking11/unblockedgames/fork&#34;&gt;https://github.com/Animationking11/unblockedgames/fork&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Create Fork&#34;&lt;/li&gt; &#xA; &lt;li&gt;Then go to the settings of the project you made (Button is at the top of the screen)&lt;/li&gt; &#xA; &lt;li&gt;Select the &#34;Pages&#34; option&lt;/li&gt; &#xA; &lt;li&gt;Then under &#34;Branch&#34; where it says &#34;None&#34; click on it then select &#34;Main&#34;&lt;/li&gt; &#xA; &lt;li&gt;Click the &#34;Save&#34; button&lt;/li&gt; &#xA; &lt;li&gt;Now at the top of the page there will be an option to &#34;Visit site&#34;, If you dont see the button wait 5 minutes and refresh the page&lt;/li&gt; &#xA; &lt;li&gt;If you have any questions or need more help setting up open an issue at &lt;a href=&#34;https://github.com/Animationking11/unblockedgames/issues&#34;&gt;https://github.com/Animationking11/unblockedgames/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If this helped please give us a star on github. ‚≠ê&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Other methods (They work but are not as easy):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Animationking11/unblockedgames/wiki/Deploying-to-Railway&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Animationking11/unblockedgames/wiki/Deploying-to-Github-Pages&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Animationking11/Animationking11/main/githubpages.png&#34; alt=&#34;Deploy on Github Pages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Animationking11/unblockedgames/wiki/Deploying-to-Netlify&#34;&gt;&lt;img src=&#34;https://binbashbanana.github.io/deploy-buttons/buttons/remade/netlify.svg?sanitize=true&#34; alt=&#34;Deploy with Netlify&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://vercel.com/new/clone?repository-url=https://github.com/Animationking11/unblockedgames&#34;&gt;&lt;img src=&#34;https://binbashbanana.github.io/deploy-buttons/buttons/remade/vercel.svg?sanitize=true&#34; alt=&#34;Deploy to Vercel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Animationking11/unblockedgames/wiki/Deploying-to-replit&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/aaa5efab04d69a070ff9ee9f75506b38932a7300359318135f4790c31b7dace4/68747470733a2f2f7265706c2e69742f62616467652f6769746875622f756e6b6e6f776e626c7565677579362f4d696e6553776565706572&#34; alt=&#34;Deploy instance on Replit&#34; height=&#34;36px&#34; style=&#34;margin: 20px 0;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What games we have:&lt;/h2&gt; &#xA;&lt;p&gt;1v1.lol&lt;/p&gt; &#xA;&lt;p&gt;2048&lt;/p&gt; &#xA;&lt;p&gt;Breaklock&lt;/p&gt; &#xA;&lt;p&gt;Breakout&lt;/p&gt; &#xA;&lt;p&gt;2048 Cupcakes&lt;/p&gt; &#xA;&lt;p&gt;Bypasser&lt;/p&gt; &#xA;&lt;p&gt;CrossyRoad&lt;/p&gt; &#xA;&lt;p&gt;Cookie Clicker&lt;/p&gt; &#xA;&lt;p&gt;Disc Us&lt;/p&gt; &#xA;&lt;p&gt;DogeMiner&lt;/p&gt; &#xA;&lt;p&gt;Doodlejump&lt;/p&gt; &#xA;&lt;p&gt;FNAF&lt;/p&gt; &#xA;&lt;p&gt;FNAF2&lt;/p&gt; &#xA;&lt;p&gt;FNAF3&lt;/p&gt; &#xA;&lt;p&gt;FNAF4&lt;/p&gt; &#xA;&lt;p&gt;Geometrydash&lt;/p&gt; &#xA;&lt;p&gt;Hextris&lt;/p&gt; &#xA;&lt;p&gt;Fall Boys&lt;/p&gt; &#xA;&lt;p&gt;Flappy Bird&lt;/p&gt; &#xA;&lt;p&gt;Minecraft&lt;/p&gt; &#xA;&lt;p&gt;Minecraft JS (Single player)&lt;/p&gt; &#xA;&lt;p&gt;Pacman&lt;/p&gt; &#xA;&lt;p&gt;Pong&lt;/p&gt; &#xA;&lt;p&gt;Pushback&lt;/p&gt; &#xA;&lt;p&gt;Racer&lt;/p&gt; &#xA;&lt;p&gt;RadiusRaid&lt;/p&gt; &#xA;&lt;p&gt;RetroBowl&lt;/p&gt; &#xA;&lt;p&gt;Retrohaunt&lt;/p&gt; &#xA;&lt;p&gt;Sans Simulator&lt;/p&gt; &#xA;&lt;p&gt;Slope&lt;/p&gt; &#xA;&lt;p&gt;SpaceInvaders&lt;/p&gt; &#xA;&lt;p&gt;Subway Surfers&lt;/p&gt; &#xA;&lt;p&gt;Tetris&lt;/p&gt; &#xA;&lt;p&gt;Towermaster&lt;/p&gt; &#xA;&lt;p&gt;Tunnelrush (NEW)&lt;/p&gt; &#xA;&lt;p&gt;Vex 3&lt;/p&gt; &#xA;&lt;p&gt;Vex 4&lt;/p&gt; &#xA;&lt;p&gt;Vex 5&lt;/p&gt; &#xA;&lt;p&gt;Vex 6&lt;/p&gt; &#xA;&lt;p&gt;Webretro (EMULATOR)&lt;/p&gt; &#xA;&lt;p&gt;Whac-A-Mole&lt;/p&gt; &#xA;&lt;p&gt;Wordle&lt;/p&gt; &#xA;&lt;p&gt;xx142-b2exe&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SuperIlu/DOStodon</title>
    <updated>2022-11-18T01:34:10Z</updated>
    <id>tag:github.com,2022-11-18:/SuperIlu/DOStodon</id>
    <link href="https://github.com/SuperIlu/DOStodon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MS-DOS Mastodon client&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DOStodon&lt;/h1&gt; &#xA;&lt;p&gt;This is the first source drop of DOStodon, a Mastodon client for MS-DOS.&lt;/p&gt; &#xA;&lt;p&gt;DOStodon is implemented in Javascript and relies on a yet unreleased version of &lt;a href=&#34;https://github.com/SuperIlu/DOjS&#34;&gt;DOjS&lt;/a&gt; to run.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;You need a VM, real HW or DOSBox-X with a network card an a matching packet driver to use it. A Pentium 133 or faster with at least 32MiB of RAM is recommended.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Help on this project is very much apprechiated, contact me on &lt;a href=&#34;https://twitter.com/dec_hl&#34;&gt;Twitter&lt;/a&gt;, &lt;a href=&#34;https://mastodon.social/@dec_hl&#34;&gt;Mastodon&lt;/a&gt; or in the &lt;a href=&#34;https://discord.gg/J7MUTap9fM&#34;&gt;DOjS Discord&lt;/a&gt; if you want to help...&lt;/p&gt; &#xA;&lt;p&gt;The source is split into two files right now:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mstdn.js&lt;/code&gt; contains the Mastodon REST API&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dstdn.js&lt;/code&gt; the &#34;application&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;First start&lt;/h2&gt; &#xA;&lt;p&gt;Please run &lt;code&gt;DOStodon &amp;lt;server&amp;gt; &amp;lt;username&amp;gt; &amp;lt;password&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;DOStodon mastodon.social jon@somwhere.sw 1234567890&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The access tokens are stored in &lt;code&gt;CREDS.JSN&lt;/code&gt; if the login is successful.&lt;/p&gt; &#xA;&lt;h2&gt;subsequent starts&lt;/h2&gt; &#xA;&lt;p&gt;Just run &lt;code&gt;DOStodon&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;DOSBox-X config&lt;/h1&gt; &#xA;&lt;p&gt;I used &#34;dosbox-x-mingw-win64-20220901233004.zip&#34; of &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/releases&#34;&gt;DOSBox-X&lt;/a&gt; to test this version of DOStodon. My &lt;code&gt;dosbox.conf&lt;/code&gt; looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[sdl]&#xA;windowresolution = 1024x768&#xA;output = opengl&#xA;&#xA;[dosbox]&#xA;machine  = svga_s3&#xA;captures = capture&#xA;memsize  = 64&#xA;&#xA;[cpu]&#xA;cycles = max&#xA;&#xA;[ne2000]&#xA;ne2000=true&#xA;nicirq=10&#xA;backend=slirp&#xA;&#xA;&#xA;[autoexec]&#xA;mount c C:\Users\ilu\Documents\_DEVEL\DOStodon&#xA;c:&#xA;ne2000 0x60 10 0x300&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>MetaMask/metamask-mobile</title>
    <updated>2022-11-18T01:34:10Z</updated>
    <id>tag:github.com,2022-11-18:/MetaMask/metamask-mobile</id>
    <link href="https://github.com/MetaMask/metamask-mobile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mobile web browser providing access to websites that use the Ethereum blockchain&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MetaMask/metamask-mobile/main/logo.png?raw=true&#34; alt=&#34;MetaMask logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;MetaMask&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MetaMask/metamask-mobile/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/MetaMask/metamask-mobile/actions/workflows/ci.yml/badge.svg?branch=main&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MetaMask/metamask-mobile/actions/workflows/cla.yml&#34;&gt;&lt;img src=&#34;https://github.com/MetaMask/metamask-mobile/actions/workflows/cla.yml/badge.svg?branch=main&#34; alt=&#34;CLA&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;MetaMask is a mobile wallet that provides easy access to websites that use the &lt;a href=&#34;https://ethereum.org/&#34;&gt;Ethereum&lt;/a&gt; blockchain.&lt;/p&gt; &#xA;&lt;p&gt;For up to the minute news, follow our &lt;a href=&#34;https://twitter.com/metamask&#34;&gt;Twitter&lt;/a&gt; or &lt;a href=&#34;https://medium.com/metamask&#34;&gt;Medium&lt;/a&gt; pages.&lt;/p&gt; &#xA;&lt;p&gt;To learn how to develop MetaMask-compatible applications, visit our &lt;a href=&#34;https://docs.metamask.io&#34;&gt;Developer Docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;MetaMask Mobile&lt;/h2&gt; &#xA;&lt;h3&gt;Environment Setup&lt;/h3&gt; &#xA;&lt;p&gt;The code is built using React-Native and running code locally requires a Mac or Linux OS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://github.com/getsentry/sentry-cli&#34;&gt;sentry-cli&lt;/a&gt; tools: &lt;code&gt;brew install getsentry/tools/sentry-cli&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt; &lt;strong&gt;version 14 (latest stable) and yarn@1 (latest)&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you are using &lt;a href=&#34;https://github.com/creationix/nvm#installation&#34;&gt;nvm&lt;/a&gt; (recommended) running &lt;code&gt;nvm use&lt;/code&gt; will automatically choose the right node version for you.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install yarn&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the shared &lt;a href=&#34;https://reactnative.dev/docs/environment-setup#installing-dependencies&#34;&gt;React Native dependencies&lt;/a&gt; (&lt;code&gt;React Native CLI&lt;/code&gt;, &lt;em&gt;not&lt;/em&gt; &lt;code&gt;Expo CLI&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://guides.cocoapods.org/using/getting-started.html&#34;&gt;cocoapods&lt;/a&gt; by running:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo gem install cocoapods&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Device Environment Setup&lt;/h3&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the Android SDK, via &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;MetaMask Only:&lt;/em&gt; To create production builds, you need to install Google Play Licensing Library via the SDK Manager in Android Studio.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the Android NDK, via &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt;&#39;s SDK Manager. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In the SDK Manager, select the &lt;code&gt;SDK Tools&lt;/code&gt; tab and install NDK version &lt;code&gt;21.4.7075529&lt;/code&gt;. You&#39;ll need to click &#34;Show Package Details&#34; in order to select the appropriate version.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Linux only: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ensure that you have the &lt;code&gt;secret-tool&lt;/code&gt; binary on your machine. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Part of the &lt;a href=&#34;https://launchpad.net/ubuntu/bionic/+package/libsecret-tools&#34;&gt;libsecret-tools&lt;/a&gt; package on Debian/Ubuntu based distributions.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the correct emulator &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Follow the instructions at: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://reactnative.dev/docs/environment-setup#installing-dependencies&#34;&gt;React Native Getting Started - Android&lt;/a&gt; &lt;em&gt;(React Native CLI Quickstart -&amp;gt; [your OS] -&amp;gt; Android)&lt;/em&gt;&lt;/li&gt; &#xA;     &lt;li&gt;More details can be found &lt;a href=&#34;https://developer.android.com/studio/run/emulator&#34;&gt;on the Android Developer site&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;You should use the following: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Android OS Version:&lt;/strong&gt; Latest, unless told otherwise&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Device:&lt;/strong&gt; Google Pixel 3&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Finally, start the emulator from Android Studio, and run:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the iOS dependencies &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://reactnative.dev/docs/environment-setup#installing-dependencies&#34;&gt;React Native Getting Started - iOS&lt;/a&gt; &lt;em&gt;(React Native CLI Quickstart -&amp;gt; [your OS] -&amp;gt; iOS)&lt;/em&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You do &lt;strong&gt;not&lt;/strong&gt; need CocoaPods&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the correct simulator &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;iOS OS Version:&lt;/strong&gt; Latest, unless told otherwise&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Device:&lt;/strong&gt; iPhone 11 Pro&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building Locally&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone this repo:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone ...&#xA;cd metamask-mobile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;MetaMask Only:&lt;/em&gt; Rename the &lt;code&gt;.*.env.example&lt;/code&gt; files (remove the &lt;code&gt;.example&lt;/code&gt;) in the root of the project and fill in the appropriate values for each key. Get the values from another MetaMask Mobile developer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Non-MetaMask Only:&lt;/em&gt; In the project root folder run&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;  cp .ios.env.example .ios.env &amp;amp;&amp;amp; \&#xA;  cp .android.env.example .android.env &amp;amp;&amp;amp; \&#xA;  cp .js.env.example .js.env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Non-MetaMask Only:&lt;/em&gt; Create an account and generate your own API key at &lt;a href=&#34;https://infura.io&#34;&gt;Infura&lt;/a&gt; in order to connect to main and test nets. Fill &lt;code&gt;MM_INFURA_PROJECT_ID&lt;/code&gt; in &lt;code&gt;.js.env&lt;/code&gt;. (App will run without it, but will not be able to connect to actual network.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the app:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn setup # not the usual install command, this will run a lengthy postinstall flow&#xA;cd ios &amp;amp;&amp;amp; pod install &amp;amp;&amp;amp; cd .. # install pods for iOS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Then, in one terminal, run:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn start:android&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn start:ios&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build Troubleshooting&lt;/h4&gt; &#xA;&lt;p&gt;Unfortunately, the build system may fail to pick up local changes, such as installing new NPM packages or &lt;code&gt;yarn link&lt;/code&gt;ing a dependency. If the app is behaving strangely or not picking up your local changes, it may be due to build issues. To ensure that you&#39;re starting with a clean slate, close all emulators/simulators, stop the &lt;code&gt;yarn watch&lt;/code&gt; process, and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn clean&#xA;&#xA;# if you&#39;re going to `yarn link` any packages,&#xA;# do that here, before the next command&#xA;&#xA;yarn watch:clean&#xA;&#xA;# ...and then, in another terminal&#xA;&#xA;yarn start:ios&#xA;&#xA;# or&#xA;&#xA;yarn start:android&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;code&gt;yarn link&lt;/code&gt; fails after going through these steps, try directly &lt;code&gt;yarn add&lt;/code&gt;ing the local files instead.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging&lt;/h3&gt; &#xA;&lt;p&gt;First, make sure you have the following running:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn watch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Your Android emulator or iOS simulator&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn start:android&lt;/code&gt; or &lt;code&gt;yarn start:ios&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Next, install the &lt;a href=&#34;https://fbflipper.com/&#34;&gt;Flipper&lt;/a&gt; desktop app (verified working with v0.127.0)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Once Flipper is installed, configure your system as follows: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install react-devtools: &lt;code&gt;npm i -g react-devtools@4.22.1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Update Android SDK location settings by accessing Flipper&#39;s settings via the &lt;code&gt;Gear Icon&lt;/code&gt; -&amp;gt; &lt;code&gt;Settings&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Example SDK path: &lt;code&gt;/Users/&amp;lt;USER_NAME&amp;gt;/Library/Android/sdk&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Finally, check that the debugger is working:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open your emulator or simulator alongside the Flipper app&lt;/li&gt; &#xA; &lt;li&gt;Flipper should auto-detect the device and the application to debug&lt;/li&gt; &#xA; &lt;li&gt;You should now be able to access features such as &lt;code&gt;Logs&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Debugging Physical iOS devices&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Debugging physical iOS devices requires &lt;code&gt;idb&lt;/code&gt; to be installed, which consists of 2 parts&lt;/li&gt; &#xA; &lt;li&gt;Install the two idb parts: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;brew tap facebook/fb&lt;/code&gt; &amp;amp; &lt;code&gt;brew install idb-companion&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;pip3.9 install fb-idb&lt;/code&gt; (This step may require that you install python3 via &lt;code&gt;python -m pip3 install --upgrade pip&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Debug a website inside the WebView (in-app browser)&lt;/h4&gt; &#xA;&lt;p&gt;Android&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the app in debug mode (for example, in a simulator)&lt;/li&gt; &#xA; &lt;li&gt;Open Chrome on your desktop&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;chrome://inspect/#devices&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Look for the device and click inspect&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;iOS&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the app in debug mode (for example, in a simulator)&lt;/li&gt; &#xA; &lt;li&gt;Open Safari on your desktop&lt;/li&gt; &#xA; &lt;li&gt;Go to the menu Develop -&amp;gt; [Your device] -&amp;gt; [Website]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You should see the console for the website that is running inside the WebView&lt;/p&gt; &#xA;&lt;h4&gt;Miscellaneous&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://facebook.github.io/react-native/docs/troubleshooting#content&#34;&gt;Troubleshooting for React Native&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fbflipper.com/docs/features/react-native/&#34;&gt;Flipper Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running Tests&lt;/h3&gt; &#xA;&lt;h4&gt;Unit Tests&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn test:unit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;E2E Tests (iOS)&lt;/h4&gt; &#xA;&lt;p&gt;First, &lt;a href=&#34;https://github.com/wix/AppleSimulatorUtils&#34;&gt;follow the instructions here&lt;/a&gt; to install &lt;code&gt;applesimutils&lt;/code&gt;. Then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn test:e2e:ios&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;E2E Tests (Android)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn test:e2e:android&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Changing dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Whenever you change dependencies (adding, removing, or updating, either in &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;yarn.lock&lt;/code&gt;), there are various files that must be kept up-to-date.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn.lock&lt;/code&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;yarn setup&lt;/code&gt; again after your changes to ensure &lt;code&gt;yarn.lock&lt;/code&gt; has been properly updated.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;allow-scripts&lt;/code&gt; configuration in &lt;code&gt;package.json&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;yarn allow-scripts auto&lt;/code&gt; to update the &lt;code&gt;allow-scripts&lt;/code&gt; configuration automatically. This config determines whether the package&#39;s install/postinstall scripts are allowed to run. Review each new package to determine whether the install script needs to run or not, testing if necessary.&lt;/li&gt; &#xA;   &lt;li&gt;Unfortunately, &lt;code&gt;yarn allow-scripts auto&lt;/code&gt; will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Architecture&lt;/h3&gt; &#xA;&lt;p&gt;To get a better understanding of the internal architecture of this app take a look at &lt;a href=&#34;https://github.com/MetaMask/metamask-mobile/raw/main/architecture.svg&#34;&gt;this diagram&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Storybook&lt;/h3&gt; &#xA;&lt;p&gt;We have begun documenting our components using storybook please read the &lt;a href=&#34;https://raw.githubusercontent.com/MetaMask/metamask-mobile/main/storybook/DOCUMENTATION_GUIDELINES.md&#34;&gt;Documentation Guidelines&lt;/a&gt; to get up and running.&lt;/p&gt;</summary>
  </entry>
</feed>