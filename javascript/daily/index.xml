<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-14T01:37:33Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ryanhanwu/How-To-Ask-Questions-The-Smart-Way</title>
    <updated>2023-01-14T01:37:33Z</updated>
    <id>tag:github.com,2023-01-14:/ryanhanwu/How-To-Ask-Questions-The-Smart-Way</id>
    <link href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way" rel="alternate"></link>
    <summary type="html">&lt;p&gt;本文原文由知名 Hacker Eric S. Raymond 所撰寫，教你如何正確的提出技術問題並獲得你滿意的答案。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;提問的智慧&lt;/h1&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-35-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How To Ask Questions The Smart Way&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright © 2001, 2006, 2014 Eric S. Raymond, Rick Moen&lt;/p&gt; &#xA;&lt;p&gt;本指南英文版版權為 Eric S. Raymond, Rick Moen 所有。&lt;/p&gt; &#xA;&lt;p&gt;原文網址 (Translated from)：&lt;a href=&#34;http://www.catb.org/~esr/faqs/smart-questions.html&#34;&gt;http://www.catb.org/~esr/faqs/smart-questions.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015-present by &lt;a href=&#34;https://github.com/ryanhanwu&#34;&gt;Ryan Wu&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;本中文指南是基於原文 3.10 版以及 2010 年由 &lt;a href=&#34;https://github.com/gasolin&#34;&gt;Gasolin&lt;/a&gt; 所翻譯版本的最新翻譯；&lt;/p&gt; &#xA;&lt;p&gt;協助指出翻譯問題，&lt;strong&gt;請&lt;a href=&#34;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/issues/new&#34;&gt;發 issue&lt;/a&gt;，或直接&lt;a href=&#34;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/compare/&#34;&gt;發 pull pequest&lt;/a&gt; 給我。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;本文另有：&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/README-zh_CN.md&#34;&gt;简体中文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/history.md&#34;&gt;原文版本歷史&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;目錄&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E8%81%B2%E6%98%8E&#34;&gt;聲明&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E7%B0%A1%E4%BB%8B&#34;&gt;簡介&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%9C%A8%E6%8F%90%E5%95%8F%E4%B9%8B%E5%89%8D&#34;&gt;在提問之前&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E7%95%B6%E4%BD%A0%E6%8F%90%E5%95%8F%E6%99%82&#34;&gt;當你提問時&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E6%85%8E%E9%81%B8%E6%8F%90%E5%95%8F%E7%9A%84%E8%AB%96%E5%A3%87&#34;&gt;慎選提問的論壇&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#stack-overflow&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E7%B6%B2%E7%AB%99%E5%92%8Circ%E8%AB%96%E5%A3%87&#34;&gt;網站和IRC論壇&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E7%AC%AC%E4%BA%8C%E6%AD%A5%E4%BD%BF%E7%94%A8%E5%B0%88%E6%A1%88%E9%83%B5%E4%BB%B6%E5%88%97%E8%A1%A8&#34;&gt;第二步，使用專案郵件列表&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E4%BD%BF%E7%94%A8%E6%9C%89%E6%84%8F%E7%BE%A9%E4%B8%94%E6%8F%8F%E8%BF%B0%E6%98%8E%E7%A2%BA%E7%9A%84%E6%A8%99%E9%A1%8C&#34;&gt;使用有意義且描述明確的標題&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E4%BD%BF%E5%95%8F%E9%A1%8C%E5%AE%B9%E6%98%93%E5%9B%9E%E8%A6%86&#34;&gt;使問題容易回覆&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E7%94%A8%E6%B8%85%E6%99%B0%E6%AD%A3%E7%A2%BA%E7%B2%BE%E6%BA%96%E4%B8%A6%E5%90%88%E6%B3%95%E6%96%87%E6%B3%95%E7%9A%84%E8%AA%9E%E5%8F%A5&#34;&gt;用清晰、正確、精準並合法文法的語句&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E4%BD%BF%E7%94%A8%E6%98%93%E6%96%BC%E8%AE%80%E5%8F%96%E4%B8%94%E6%A8%99%E6%BA%96%E7%9A%84%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E7%99%BC%E9%80%81%E5%95%8F%E9%A1%8C&#34;&gt;使用易於讀取且標準的文件格式發送問題&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E7%B2%BE%E7%A2%BA%E7%9A%84%E6%8F%8F%E8%BF%B0%E5%95%8F%E9%A1%8C%E4%B8%A6%E8%A8%80%E4%B9%8B%E6%9C%89%E7%89%A9&#34;&gt;精確的描述問題並言之有物&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E8%A9%B1%E4%B8%8D%E5%9C%A8%E5%A4%9A%E8%80%8C%E5%9C%A8%E7%B2%BE&#34;&gt;話不在多而在精&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%88%A5%E5%8B%95%E8%BC%92%E8%81%B2%E7%A8%B1%E6%89%BE%E5%88%B0bug&#34;&gt;別動輒聲稱找到Bug&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%88%A5%E7%94%A8%E4%BD%8E%E8%81%B2%E4%B8%8B%E6%B0%A3%E5%8F%96%E4%BB%A3%E4%BD%A0%E7%9C%9F%E6%AD%A3%E8%A9%B2%E5%81%9A%E7%9A%84%E4%BA%8B&#34;&gt;別用低聲下氣取代你真正該做的事&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E6%8F%8F%E8%BF%B0%E5%95%8F%E9%A1%8C%E7%97%87%E7%8B%80%E8%80%8C%E9%9D%9E%E7%8C%9C%E6%B8%AC&#34;&gt;描述問題症狀而非猜測&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E6%8C%89%E7%99%BC%E7%94%9F%E6%99%82%E9%96%93%E5%85%88%E5%BE%8C%E5%88%97%E5%87%BA%E5%95%8F%E9%A1%8C%E7%97%87%E7%8B%80&#34;&gt;按發生時間先後列出問題症狀&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E6%8F%8F%E8%BF%B0%E7%9B%AE%E6%A8%99%E8%80%8C%E4%B8%8D%E6%98%AF%E9%81%8E%E7%A8%8B&#34;&gt;描述目標而不是過程&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%88%A5%E8%A6%81%E6%B1%82%E4%BD%BF%E7%94%A8%E7%A7%81%E4%BA%BA%E9%9B%BB%E9%83%B5%E5%9B%9E%E8%A6%86&#34;&gt;別要求使用私人電郵回覆&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E6%B8%85%E6%A5%9A%E6%98%8E%E7%A2%BA%E7%9A%84%E8%A1%A8%E9%81%94%E4%BD%A0%E7%9A%84%E5%95%8F%E9%A1%8C%E4%BB%A5%E5%8F%8A%E9%9C%80%E6%B1%82&#34;&gt;清楚明確的表達你的問題以及需求&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E8%A9%A2%E5%95%8F%E6%9C%89%E9%97%9C%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%9A%84%E5%95%8F%E9%A1%8C%E6%99%82&#34;&gt;詢問有關程式碼的問題時&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%88%A5%E6%8A%8A%E8%87%AA%E5%B7%B1%E5%AE%B6%E5%BA%AD%E4%BD%9C%E6%A5%AD%E7%9A%84%E5%95%8F%E9%A1%8C%E8%B2%BC%E4%B8%8A%E4%BE%86&#34;&gt;別把自己家庭作業的問題貼上來&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%8E%BB%E6%8E%89%E7%84%A1%E6%84%8F%E7%BE%A9%E7%9A%84%E6%8F%90%E5%95%8F%E5%8F%A5&#34;&gt;去掉無意義的提問句&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%8D%B3%E4%BD%BF%E4%BD%A0%E5%BE%88%E6%80%A5%E4%B9%9F%E4%B8%8D%E8%A6%81%E5%9C%A8%E6%A8%99%E9%A1%8C%E5%AF%AB%E7%B7%8A%E6%80%A5&#34;&gt;即使你很急也不要在標題寫&lt;code&gt;緊急&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E7%A6%AE%E5%A4%9A%E4%BA%BA%E4%B8%8D%E6%80%AA%E8%80%8C%E4%B8%94%E6%9C%89%E6%99%82%E9%82%84%E5%BE%88%E6%9C%89%E5%B9%AB%E5%8A%A9&#34;&gt;禮多人不怪，而且有時還很有幫助&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%95%8F%E9%A1%8C%E8%A7%A3%E6%B1%BA%E5%BE%8C%E5%8A%A0%E5%80%8B%E7%B0%A1%E7%9F%AD%E7%9A%84%E8%A3%9C%E5%85%85%E8%AA%AA%E6%98%8E&#34;&gt;問題解決後，加個簡短的補充說明&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%A6%82%E4%BD%95%E8%A7%A3%E8%AE%80%E7%AD%94%E6%A1%88&#34;&gt;如何解讀答案&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#rtfm%E5%92%8Cstfw%E5%A6%82%E4%BD%95%E7%9F%A5%E9%81%93%E4%BD%A0%E5%B7%B2%E5%AE%8C%E5%85%A8%E6%90%9E%E7%A0%B8%E4%BA%86&#34;&gt;RTFM和STFW：如何知道你已完全搞砸了&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%A6%82%E6%9E%9C%E9%82%84%E6%98%AF%E6%90%9E%E4%B8%8D%E6%87%82&#34;&gt;如果還是搞不懂&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E8%99%95%E7%90%86%E7%84%A1%E7%A6%AE%E7%9A%84%E5%9B%9E%E6%87%89&#34;&gt;處理無禮的回應&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E6%89%AE%E6%BC%94%E5%A4%B1%E6%95%97%E8%80%85&#34;&gt;如何避免扮演失敗者&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E4%B8%8D%E8%A9%B2%E5%95%8F%E7%9A%84%E5%95%8F%E9%A1%8C&#34;&gt;不該問的問題&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%A5%BD%E5%95%8F%E9%A1%8C%E8%88%87%E8%A0%A2%E5%95%8F%E9%A1%8C&#34;&gt;好問題與蠢問題&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%A6%82%E6%9E%9C%E5%BE%97%E4%B8%8D%E5%88%B0%E5%9B%9E%E7%AD%94&#34;&gt;如果得不到回答&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%9B%9E%E7%AD%94%E5%95%8F%E9%A1%8C&#34;&gt;如何更好地回答問題&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E7%9B%B8%E9%97%9C%E8%B3%87%E6%BA%90&#34;&gt;相關資源&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E9%B3%B4%E8%AC%9D&#34;&gt;鳴謝&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;聲明&lt;/h2&gt; &#xA;&lt;p&gt;許多專案在他們的使用協助/說明網頁中連結了本指南，這麼做很好，我們也鼓勵大家都這麼做。但如果你是負責管理這個專案網頁的人，請在超連結附近的顯著位置上註明：&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;本指南不提供此專案的實際支援服務！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;我們已經深刻領教到少了上述聲明所帶來的痛苦。因為少了這點聲明，我們不停地被一些白痴糾纏。這些白痴認為既然我們發布了這本指南，那麼我們就有責任解決世上所有的技術問題。&lt;/p&gt; &#xA;&lt;p&gt;如果你是因為需要某些協助而正在閱讀這本指南，並且最後離開是因為發現從本指南作者們身上得不到直接的協助，那麼你就是我們所說的那些白痴之一。別問我們問題，我們只會忽略你。我們在這本指南中是教你如何從那些真正懂得你所遇到軟體或硬體問題的人取得協助，而99%的情況下那不會是我們。除非你確定本指南的作者之一剛好是你所遇到的問題領域的專家，否則請不要打擾我們，這樣大家都會開心一點。&lt;/p&gt; &#xA;&lt;h2&gt;簡介&lt;/h2&gt; &#xA;&lt;p&gt;在&lt;a href=&#34;http://www.catb.org/~esr/faqs/hacker-howto.html&#34;&gt;黑客&lt;/a&gt;的世界裡，當你拋出一個技術問題時，最終是否能得到有用的回答，往往取決於你所提問和追問的方式。本指南將教你如何正確的提問以獲得你滿意的答案。&lt;/p&gt; &#xA;&lt;p&gt;現在開源（Open Source）軟體已經相當盛行，您通常可以從其他更有經驗的用戶那裡獲得與黑客一樣好的答案，這是件&lt;strong&gt;好事&lt;/strong&gt;；和黑客相比，用戶們往往對那些新手常遇到的問題更寬容一些。儘管如此，以我們在此推薦的方式對待這些有經驗的用戶通常也是從他們那裡獲得有用答案的最有效方式。&lt;/p&gt; &#xA;&lt;p&gt;首先你應該明白，黑客們喜愛有挑戰性的問題，或者能激發他們思維的好問題。如果我們並非如此，那我們也不會成為你想詢問的對象。如果你給了我們一個值得反覆咀嚼玩味的好問題，我們自會對你感激不盡。好問題是激勵，是厚禮。好問題可以提高我們的理解力，而且通常會暴露我們以前從沒意識到或者思考過的問題。對黑客而言，&#34;好問題！&#34;是誠摯的大力稱讚。&lt;/p&gt; &#xA;&lt;p&gt;儘管如此，黑客們有著蔑視或傲慢面對簡單問題的壞名聲，這有時讓我們看起來對新手、無知者似乎較有敵意，但其實不是那樣的。&lt;/p&gt; &#xA;&lt;p&gt;我們不諱言我們對那些不願思考、或者在發問前不做他們該做的事的人的蔑視。那些人是時間殺手──他們只想索取，從不付出，消耗我們可用在更有趣的問題或更值得回答的人身上的時間。我們稱這樣的人為 &lt;code&gt;失敗者（魯蛇）&lt;/code&gt; （由於歷史原因，我們有時把它拼作 &lt;code&gt;lusers&lt;/code&gt;）。&lt;/p&gt; &#xA;&lt;p&gt;我們意識到許多人只是想使用我們寫的軟體，他們對學習技術細節沒有興趣。對大多數人而言，電腦只是種工具，是種達到目的的手段而已。他們有自己的生活並且有更要緊的事要做。我們了解這點，也從不指望每個人都對這些讓我們著迷的技術問題感興趣。儘管如此，我們回答問題的風格是指向那些真正對此有興趣並願意主動參與解決問題的人，這一點不會變，也不該變。如果連這都變了，我們就是在降低做自己最擅長的事情上的效率。&lt;/p&gt; &#xA;&lt;p&gt;我們（在很大程度上）是自願的，從繁忙的生活中抽出時間來解答疑惑，而且時常被提問淹沒。所以我們無情的濾掉一些話題，特別是拋棄那些看起來像失敗者的傢伙，以便更高效的利用時間來回答&lt;code&gt;贏家（溫拿）&lt;/code&gt;的問題。&lt;/p&gt; &#xA;&lt;p&gt;如果你厭惡我們的態度，高高在上，或過於傲慢，不妨也設身處地想想。我們並沒有要求你向我們屈服──事實上，我們大多數人非常樂意與你平等地交流，只要你付出小小努力來滿足基本要求，我們就會歡迎你加入我們的文化。但讓我們幫助那些不願意幫助自己的人是沒有效率的。無知沒有關係，但裝白痴就是不行。&lt;/p&gt; &#xA;&lt;p&gt;所以，你不必在技術上很在行才能吸引我們的注意，但你必須表現出能引導你變得在行的特質──機敏、有想法、善於觀察、樂於主動參與解決問題。如果你做不到這些使你與眾不同的事情，我們建議你花點錢找家商業公司簽個技術支援服務契約，而不是要求黑客個人無償地幫助你。&lt;/p&gt; &#xA;&lt;p&gt;如果你決定向我們求助，當然你也不希望被視為失敗者，更不願成為失敗者中的一員。能立刻得到快速並有效答案的最好方法，就是像贏家那樣提問──聰明、自信、有解決問題的思路，只是偶爾在特定的問題上需要獲得一點幫助。&lt;/p&gt; &#xA;&lt;p&gt;（歡迎對本指南提出改進意見。你可以 email 你的建議至 &lt;a href=&#34;mailto:esr@thyrsus.com&#34;&gt;esr@thyrsus.com&lt;/a&gt; 或 &lt;a href=&#34;mailto:respond-auto@linuxmafia.com&#34;&gt;respond-auto@linuxmafia.com&lt;/a&gt;。然而請注意，本文並非&lt;a href=&#34;http://www.ietf.org/rfc/rfc1855.txt&#34;&gt;網路禮節&lt;/a&gt;的通用指南，而我們通常會拒絕無助於在技術論壇得到有用答案的建議。）&lt;/p&gt; &#xA;&lt;h2&gt;在提問之前&lt;/h2&gt; &#xA;&lt;p&gt;在你準備要通過電子郵件、新聞群組或者聊天室提出技術問題前，請先做到以下事情：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;嘗試在你準備提問的論壇的舊文章中搜尋答案。&lt;/li&gt; &#xA; &lt;li&gt;嘗試上網搜尋來找到答案。&lt;/li&gt; &#xA; &lt;li&gt;嘗試閱讀手冊來找到答案。&lt;/li&gt; &#xA; &lt;li&gt;嘗試閱讀常見問題文件（FAQ）來找到答案。&lt;/li&gt; &#xA; &lt;li&gt;嘗試自己檢查或試驗來找到答案&lt;/li&gt; &#xA; &lt;li&gt;向你身邊的強者朋友打聽來找到答案。&lt;/li&gt; &#xA; &lt;li&gt;如果你是程式開發者，請嘗試閱讀原始碼來找到答案&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;當你提出問題的時候，請先表明你已經做了上述的努力；這將有助於樹立你並不是一個不勞而獲且浪費別人的時間的提問者。如果你能一併表達在做了上述努力的過程中所&lt;strong&gt;學到&lt;/strong&gt;的東西會更好，因為我們更樂於回答那些表現出能從答案中學習的人的問題。&lt;/p&gt; &#xA;&lt;p&gt;運用某些策略，比如先用 Google 搜尋你所遇到的各種錯誤訊息（既搜尋 &lt;a href=&#34;http://groups.google.com/&#34;&gt;Google論壇&lt;/a&gt;，也搜尋網頁），這樣很可能直接就找到了能解決問題的文件或郵件列表線索。即使沒有結果，在郵件列表或新聞組尋求幫助時加上一句 &lt;code&gt;我在 Google 中搜過下列句子但沒有找到什麼有用的東西&lt;/code&gt; 也是件好事，即使它只是表明了搜尋引擎不能提供哪些幫助。這麼做（加上搜尋過的字串）也讓遇到相似問題的其他人能被搜尋引擎引導到你的提問來。&lt;/p&gt; &#xA;&lt;p&gt;別著急，不要指望幾秒鐘的 Google 搜尋就能解決一個複雜的問題。在向專家求助之前，再閱讀一下常見問題文件（FAQ）、放輕鬆、坐舒服一些，再花點時間思考一下這個問題。相信我們，他們能從你的提問看出你做了多少閱讀與思考，如果你是有備而來，將更有可能得到解答。不要將所有問題一股腦拋出，只因你的第一次搜尋沒有找到答案（或者找到太多答案）。&lt;/p&gt; &#xA;&lt;p&gt;準備好你的問題，再將問題仔細的思考過一遍，因為草率的發問只能得到草率的回答，或者根本得不到任何答案。越是能表現出在尋求幫助前你為解決問題所付出的努力，你越有可能得到實質性的幫助。&lt;/p&gt; &#xA;&lt;p&gt;小心別問錯了問題。如果你的問題基於錯誤的假設，某個普通黑客（J. Random Hacker）多半會一邊在心裏想著&lt;code&gt;蠢問題…&lt;/code&gt;， 一邊用無意義的字面解釋來答覆你，希望著你會從問題的回答（而非你想得到的答案）中汲取教訓。&lt;/p&gt; &#xA;&lt;p&gt;絕不要自以為&lt;strong&gt;夠格&lt;/strong&gt;得到答案，你沒有；你並沒有。畢竟你沒有為這種服務支付任何報酬。你將會是自己去&lt;strong&gt;掙到&lt;/strong&gt;一個答案，靠提出有內涵的、有趣的、有思維激勵作用的問題──一個有潛力能貢獻社群經驗的問題，而不僅僅是被動的從他人處索取知識。&lt;/p&gt; &#xA;&lt;p&gt;另一方面，表明你願意在找答案的過程中做點什麼是一個非常好的開始。&lt;code&gt;誰能給點提示？&lt;/code&gt;、&lt;code&gt;我的這個例子裏缺了什麼？&lt;/code&gt;以及&lt;code&gt;我應該檢查什麼地方&lt;/code&gt;比&lt;code&gt;請把我需要的確切的過程貼出來&lt;/code&gt;更容易得到答覆。因為你表現出只要有人能指出一個正確方向，你就有完成它的能力和決心。&lt;/p&gt; &#xA;&lt;h2&gt;當你提問時&lt;/h2&gt; &#xA;&lt;h3&gt;慎選提問的論壇&lt;/h3&gt; &#xA;&lt;p&gt;小心選擇你要提問的場合。如果你做了下述的事情，你很可能被忽略掉或者被看作失敗者：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在與主題不合的論壇上貼出你的問題&lt;/li&gt; &#xA; &lt;li&gt;在探討進階技術問題的論壇張貼非常初級的問題；反之亦然&lt;/li&gt; &#xA; &lt;li&gt;在太多的不同新聞群組上重複轉貼同樣的問題（cross-post）&lt;/li&gt; &#xA; &lt;li&gt;向既非熟人也沒有義務解決你問題的人發送私人電郵&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;黑客會剔除掉那些搞錯場合的問題，以保護他們溝通的管道不被無關的東西淹沒。你不會想讓這種事發生在自己身上的。&lt;/p&gt; &#xA;&lt;p&gt;因此，第一步是找到對的論壇。再說一次，Google 和其它搜尋引擎還是你最好的朋友，用它們來找到與你遭遇到困難的軟硬體問題最相關的網站。通常在那裡都有常見問題（FAQ）、郵件列表及相關說明文件的連結。如果你的努力（包括&lt;strong&gt;閱讀&lt;/strong&gt; FAQ）都沒有結果，網站上也許還有回報臭蟲（Bug-reporting）的流程或連結，如果是這樣，連過去看看。&lt;/p&gt; &#xA;&lt;p&gt;向陌生的人或論壇發送郵件最可能是風險最大的事情。舉例來說，別假設一個提供豐富內容的網頁的作者會想充當你的免費顧問。不要對你的問題是否會受到歡迎做太樂觀的估計──如果你不確定，那就向別處發送，或者根本別發。&lt;/p&gt; &#xA;&lt;p&gt;在選擇論壇、新聞群組或郵件列表時，別太相信名字，先看看 FAQ 或者許可書以弄清楚你的問題是否切題。發文前先翻翻已有的話題，這樣可以讓你感受一下那裡的文化。事實上，事先在新聞組或郵件列表的歷史記錄中搜尋與你問題相關的關鍵詞是個極好的主意，也許這樣就找到答案了。即使沒有，也能幫助你歸納出更好的問題。&lt;/p&gt; &#xA;&lt;p&gt;別像機關槍似的一次&#34;掃射&#34;所有的幫助管道，這就像大喊大叫一樣會使人不愉快。要一個一個地來。&lt;/p&gt; &#xA;&lt;p&gt;搞清楚你的主題！最典型的錯誤之一是在某種致力於跨平台可移植的語言、套件或工具的論壇中提關於 Unix 或 Windows 作業系統程序介面的問題。如果你不明白為什麼這是大錯，最好在搞清楚這之間差異之前什麼也別問。&lt;/p&gt; &#xA;&lt;p&gt;一般來說，在仔細挑選的公共論壇中提問，會比在私有論壇中提同樣的問題更容易得到有用的回答。有幾個理由可以支持這點，一是看潛在的回覆者有多少，二是看觀眾有多少。黑客較願意回答那些能幫助到許多人的問題。&lt;/p&gt; &#xA;&lt;p&gt;可以理解的是，老練的黑客和一些熱門軟體的作者正在接受過多的錯發訊息。就像那根最後壓垮駱駝背的稻草一樣，你的加入也有可能使情況走向極端──已經好幾次了，一些熱門軟體的作者從自己軟體的支援中抽身出來，因為伴隨而來湧入其私人信箱的無用郵件變得無法忍受。&lt;/p&gt; &#xA;&lt;h3&gt;Stack Overflow&lt;/h3&gt; &#xA;&lt;p&gt;搜尋，&lt;strong&gt;然後&lt;/strong&gt; 才在 Stack Exchange 發問。&lt;/p&gt; &#xA;&lt;p&gt;近年來，Stack Exchange community 社群已經成為回答技術及其他問題的主要管道，尤其是那些開放源碼的專案。&lt;/p&gt; &#xA;&lt;p&gt;因為 Google 索引是即時的，在看 Stack Exchange 之前先在 Google 搜尋。有很高的機率某人已經問了一個類似的問題，而且 Stack Exchange 網站們往往會是搜尋結果中最前面幾個。如果你在 Google 上沒有找到任何答案，你再到特定相關主題的網站去找。用標籤（Tag）搜尋能讓你更縮小你的搜尋結果。&lt;/p&gt; &#xA;&lt;p&gt;如果你還是找不到任何對你的問題有用的內容，請把你的問題發在與它最相關的網站上。提問的時候請善用格式化工具，尤其註意為代碼添加格式，並且添加相關的標籤（特別是編程語言、操作系統或庫/包的名稱）。當有人要求你提供更多相關信息時，請編輯你的貼子來補充它們[譯註：而不是發一個回帖或回答！ ]。如果你覺得一個答案對你有幫助，點擊向上的箭頭來為它投票；如果一個答案提供了問題的正確解決方案，點擊投票按鈕下方的對勾來將它標記為正解。&lt;/p&gt; &#xA;&lt;p&gt;Stack Exchange 已經成長到&lt;a href=&#34;http://stackexchange.com/sites&#34;&gt;超過一百個網站&lt;/a&gt;，以下是最常用的幾個站：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Super User 是問一些通用的電腦問題，如果你的問題跟程式碼或是寫程式無關，只是一些網路連線之類的，請到這裡。&lt;/li&gt; &#xA; &lt;li&gt;Stack Overflow 是問寫程式有關的問題。&lt;/li&gt; &#xA; &lt;li&gt;Server Fault 是問伺服器和網管相關的問題。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;網站和IRC論壇&lt;/h3&gt; &#xA;&lt;p&gt;在地的使用者群組（user group），或者你所用的 Linux 發行版本也許正在宣傳他們的網頁論壇或 IRC 頻道，並提供新手幫助（在一些非英語國家，新手論壇很可能還是郵件列表）， 這些地方是開始提問的好首選，特別是當你覺得遇到的也許只是相對簡單或者很普通的問題時。有廣告贊助的 IRC 頻道是公開歡迎提問的地方，通常可以即時得到回應。&lt;/p&gt; &#xA;&lt;p&gt;事實上，如果程式出的問題只發生在特定 Linux 發行版提供的版本（這很常見），最好先去該發行版的論壇或郵件列表中提問，再到程式本身的論壇或郵件列表提問。（否則）該項目的黑客可能僅僅回覆 &#34;用&lt;strong&gt;我們的&lt;/strong&gt;版本&#34;。&lt;/p&gt; &#xA;&lt;p&gt;在任何論壇發文以前，先確認一下有沒有搜尋功能。如果有，就試著搜尋一下問題的幾個關鍵詞，也許這會有幫助。如果在此之前你已做過通用的網頁搜尋（你也該這樣做），還是再搜尋一下論壇，搜尋引擎有可能沒來得及索引此論壇的全部內容。&lt;/p&gt; &#xA;&lt;p&gt;通過論壇或 IRC 頻道來提供使用者支援服務有增長的趨勢，電子郵件則大多為專案開發者間的交流而保留。所以最好先在論壇或 IRC 中尋求與該專案相關的協助。&lt;/p&gt; &#xA;&lt;h3&gt;第二步，使用專案郵件列表&lt;/h3&gt; &#xA;&lt;p&gt;當某個專案提供開發者郵件列表時，要向列表而不是其中的個別成員提問，即使你確信他能最好地回答你的問題。查一查專案的文件和首頁，找到專案的郵件列表並使用它。有幾個很好的理由支持我們採用這種辦法：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;任何好到需要向個別開發者提出的問題，也將對整個專案群組有益。反之，如果你認為自己的問題對整個專案群組來說太愚蠢，也不能成為騷擾個別開發者的理由。&lt;/li&gt; &#xA; &lt;li&gt;向列表提問可以分散開發者的負擔，個別開發者（尤其是專案領導人）也許太忙以至於沒法回答你的問題。&lt;/li&gt; &#xA; &lt;li&gt;大多數郵件列表都會被封存，那些被封存的內容將被搜尋引擎索引。如果你向列表提問並得到解答，將來其它人可以通過網頁搜尋找到你的問題和答案，也就不用再次發問了。&lt;/li&gt; &#xA; &lt;li&gt;如果某些問題經常被問到，開發者可以利用此資訊來改進說明文件或軟體本身，以使其更清楚。如果只是私下提問，就沒有人能看到最常見問題的完整場景。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;如果一個項目既有&#34;使用者&#34; 也有&#34;開發者&#34;（或&#34;黑客&#34;）郵件列表或論壇，而你又不會動到那些原始碼，那麼就向&#34;使用者&#34;列表或論壇提問。不要假設自己會在開發者列表中受到歡迎，那些人多半會將你的提問視為干擾他們開發的噪音。&lt;/p&gt; &#xA;&lt;p&gt;然而，如果你&lt;strong&gt;確信&lt;/strong&gt;你的問題很特別，而且在&#34;使用者&#34; 列表或論壇中幾天都沒有回覆，可以試試前往&#34;開發者&#34;列表或論壇發問。建議你在張貼前最好先暗地裡觀察幾天以了解那裡的行事方式（事實上這是參與任何私有或半私有列表的好主意）&lt;/p&gt; &#xA;&lt;p&gt;如果你找不到一個專案的郵件列表，而只能查到專案維護者的電子信箱地址，儘管向他發信。即使是在這種情況下，也別假設（專案）郵件列表不存在。在你的電子郵件中，請陳述你已經試過但沒有找到合適的郵件列表，也提及你不反對將自己的郵件轉發給他人（許多人認為，即使沒什麼秘密，私人電子郵件也不應該被公開。通過允許將你的電子郵件轉發他人，你給了相應人員處置你郵件的選擇）。&lt;/p&gt; &#xA;&lt;h3&gt;使用有意義且描述明確的標題&lt;/h3&gt; &#xA;&lt;p&gt;在郵件列表、新聞群組或論壇中，大約50字以內的標題是抓住資深專家注意力的好機會。別用喋喋不休的&lt;code&gt;幫幫忙&lt;/code&gt;、&lt;code&gt;跪求&lt;/code&gt;、&lt;code&gt;急&lt;/code&gt;（更別說&lt;code&gt;救命啊！！！！&lt;/code&gt;這樣讓人反感的話，用這種標題會被條件反射式地忽略）來浪費這個機會。不要妄想用你的痛苦程度來打動我們，而是在這點空間中使用極簡單扼要的描述方式來提出問題。&lt;/p&gt; &#xA;&lt;p&gt;一個好標題範例是&lt;code&gt;目標 -- 差異&lt;/code&gt;式的描述，許多技術支援組織就是這樣做的。在&lt;code&gt;目標&lt;/code&gt;部分指出是哪一個或哪一組東西有問題，在&lt;code&gt;差異&lt;/code&gt;部分則描述與期望的行為不一致的地方。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;蠢問題：救命啊！我的筆電不能正常顯示了！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;聰明問題：X.org 6.8.1的滑鼠游標會變形，某牌顯示卡 MV1005 晶片組。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;更聰明問題：X.org 6.8.1的滑鼠游標，在某牌顯示卡 MV1005 晶片組環境下 - 會變形。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;編寫&lt;code&gt;目標 -- 差異&lt;/code&gt; 式描述的過程有助於你組織對問題的細緻思考。是什麼被影響了？ 僅僅是滑鼠游標或者還有其它圖形？只在 X.org 的 X 版中出現？或只是出現在6.8.1版中？ 是針對某牌顯示卡晶片組？或者只是其中的 MV1005 型號？ 一個黑客只需瞄一眼就能夠立即明白你的環境&lt;strong&gt;和&lt;/strong&gt;你遇到的問題。&lt;/p&gt; &#xA;&lt;p&gt;總而言之，請想像一下你正在一個只顯示標題的封存討論串（Thread）索引中查尋。讓你的標題更好地反映問題，可使下一個搜尋類似問題的人能夠關注這個討論串，而不用再次提問相同的問題。&lt;/p&gt; &#xA;&lt;p&gt;如果你想在回覆中提出問題，記得要修改內容標題，以表明你是在問一個問題， 一個看起來像 &lt;code&gt;Re: 測試&lt;/code&gt; 或者 &lt;code&gt;Re: 新bug&lt;/code&gt; 的標題很難引起足夠重視。另外，在不影響連貫性之下，適當引用並刪減前文的內容，能給新來的讀者留下線索。&lt;/p&gt; &#xA;&lt;p&gt;對於討論串，不要直接點擊回覆來開始一個全新的討論串，這將限縮你的觀眾。因為有些郵件閱讀程序，比如 mutt ，允許使用者按討論串排序並通過折疊討論串來隱藏消息，這樣做的人永遠看不到你發的消息。&lt;/p&gt; &#xA;&lt;p&gt;僅僅改變標題還不夠。mutt 和其它一些郵件閱讀程式還會檢查郵件標題以外的其它訊息，以便為其指定討論串。所以寧可發一個全新的郵件。&lt;/p&gt; &#xA;&lt;p&gt;在網頁論壇上，好的提問方式稍有不同，因為討論串與特定的訊息緊密結合，並且通常在討論串外就看不到裡面的內容，故通過回覆提問，而非改變標題是可接受的。不是所有論壇都允許在回覆中出現分離的標題，而且這樣做了基本上沒有人會去看。不過，通過回覆提問，這本身就是曖昧的做法，因為它們只會被正在查看該標題的人讀到。所以，除非你&lt;strong&gt;只想&lt;/strong&gt;在該討論串當前活躍的人群中提問，不然還是另起爐灶比較好。&lt;/p&gt; &#xA;&lt;h3&gt;使問題容易回覆&lt;/h3&gt; &#xA;&lt;p&gt;以&lt;code&gt;請將你的回覆寄到……&lt;/code&gt;來結束你的問題多半會使你得不到回答。如果你覺得花幾秒鐘在電子信箱客戶端設置一下回覆地址都麻煩，我們也覺得花幾秒鐘思考你的問題更麻煩。如果你的電子信箱程式不支援這樣做，&lt;a href=&#34;http://linuxmafia.com/faq/Mail/muas.html&#34;&gt;換個好點的&lt;/a&gt;；如果是作業系統不支援這種電子信箱程式，也換個好點的。&lt;/p&gt; &#xA;&lt;p&gt;在論壇，要求通過電子郵件回覆是非常無禮的，除非你相信回覆的訊息可能比較敏感（而且有人會為了某些未知的原因，只讓你而不是整個論壇知道答案）。如果你只是想在有人回覆討論串時得到電子郵件提醒，可以要求網頁論壇發送給你。幾乎所有論壇都支援諸如&lt;code&gt;追蹤此討論串&lt;/code&gt;、&lt;code&gt;有回覆時發送郵件提醒&lt;/code&gt;等功能。&lt;/p&gt; &#xA;&lt;h3&gt;用清晰、正確、精準並合法文法的語句&lt;/h3&gt; &#xA;&lt;p&gt;我們從經驗中發現，粗心的提問者通常也會粗心的寫程式與思考（我敢打包票）。回答粗心大意者的問題很不值得，我們寧願把時間耗在別處。&lt;/p&gt; &#xA;&lt;p&gt;正確的拼字、標點符號和大小寫是很重要的。一般來說，如果你覺得這樣做很麻煩，不想在乎這些，那我們也覺得麻煩，不想在乎你的提問。花點額外的精力斟酌一下字句，用不著太僵硬與正式──事實上，黑客文化很看重能準確地使用非正式、俚語和幽默的語句。但它&lt;strong&gt;必須很&lt;/strong&gt;準確，而且有跡象表明你是在思考和關注問題。&lt;/p&gt; &#xA;&lt;p&gt;正確地拼寫、使用標點和大小寫，不要將&lt;code&gt;its&lt;/code&gt;混淆為&lt;code&gt;it&#39;s&lt;/code&gt;，&lt;code&gt;loose&lt;/code&gt;搞成&lt;code&gt;lose&lt;/code&gt;或者將&lt;code&gt;discrete&lt;/code&gt;弄成&lt;code&gt;discreet&lt;/code&gt;。不要&lt;strong&gt;全部用大寫&lt;/strong&gt;，這會被視為無禮的大聲嚷嚷（全部小寫也好不到哪去，因為不易閱讀。&lt;a href=&#34;http://en.wikipedia.org/wiki/Alan_Cox&#34;&gt;Alan Cox&lt;/a&gt;也許可以這樣做，但你不行。）&lt;/p&gt; &#xA;&lt;p&gt;更白話的說，如果你寫得像是個半文盲[譯註：&lt;a href=&#34;http://zh.wikipedia.org/zh-tw/%E5%B0%8F%E7%99%BD&#34;&gt;小白&lt;/a&gt;]），那多半得不到理睬。也不要使用即時通訊中的簡寫或&lt;a href=&#34;http://zh.wikipedia.org/zh-tw/%E7%81%AB%E6%98%9F%E6%96%87&#34;&gt;火星文&lt;/a&gt;，如將&lt;code&gt;的&lt;/code&gt;簡化為&lt;code&gt;ㄉ&lt;/code&gt;會使你看起來像一個為了少打幾個鍵而省字的小白。更糟的是，如果像個小孩似地鬼畫符那絕對是在找死，可以肯定沒人會理你（或者最多是給你一大堆指責與挖苦）。&lt;/p&gt; &#xA;&lt;p&gt;如果在使用非母語的論壇提問，你可以犯點拼寫和語法上的小錯，但決不能在思考上馬虎（沒錯，我們通常能弄清兩者的分別）。同時，除非你知道回覆者使用的語言，否則請使用英語書寫。繁忙的黑客一般會直接刪除用他們看不懂語言寫的消息。在網路上英語是通用語言，用英語書寫可以將你的問題在尚未被閱讀就被直接刪除的可能性降到最低。&lt;/p&gt; &#xA;&lt;p&gt;如果英文是你的第一外語（Second language），提示潛在回覆者你有潛在的語言困難是很好的： [譯註：以下附上原文以供使用]&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;English is not my native language; please excuse typing errors.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;英文不是我的母語，請原諒我的錯字或文法&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you speak $LANGUAGE, please email/PM me; I may need assistance translating my question.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果你說&lt;strong&gt;某語言&lt;/strong&gt;，請寄信/私訊給我；我需要有人協助我翻譯我的問題&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I am familiar with the technical terms, but some slang expressions and idioms are difficult for me.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;我對技術名詞很熟悉，但對於俗語或是特別用法比較不甚了解。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I&#39;ve posted my question in $LANGUAGE and English. I&#39;ll be glad to translate responses, if you only use one or the other.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;我把我的問題用&lt;strong&gt;某語言&lt;/strong&gt;和英文寫出來，如果你只用一種語言回答，我會樂意將其翻譯成另一種。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;使用易於讀取且標準的文件格式發送問題&lt;/h3&gt; &#xA;&lt;p&gt;如果你人為地將問題搞得難以閱讀，它多半會被忽略，人們更願讀易懂的問題，所以：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用純文字而不是 HTML (&lt;a href=&#34;http://archive.birdhouse.org/etc/evilmail.html&#34;&gt;關閉 HTML &lt;/a&gt;並不難）&lt;/li&gt; &#xA; &lt;li&gt;使用 MIME 附件通常是可以的，前提是真正有內容（譬如附帶的原始碼或patch），而不僅僅是信箱程式生成的模板（譬如只是信件內容的拷貝）。&lt;/li&gt; &#xA; &lt;li&gt;不要發送一段文字只是單行句子但多次斷行的郵件（這使得回覆部分內容非常困難）。設想你的讀者是在80個字符寬的終端機上閱讀郵件，最好設置你的斷行點小於80字。&lt;/li&gt; &#xA; &lt;li&gt;但是，也&lt;strong&gt;不要&lt;/strong&gt;用任何固定斷行資料（譬如日誌檔案拷貝或會話記錄）。檔案應該原樣包含，讓回覆者有信心他們看到的是和你看到的一樣的東西。&lt;/li&gt; &#xA; &lt;li&gt;在英語論壇中，不要使用&lt;code&gt;Quoted-Printable&lt;/code&gt; MIME編碼發送消息。這種編碼對於張貼非 ASCII 語言可能是必須的，但很多電子信箱程式並不支援這種編碼。當它們分斷時，那些文本中四處散佈的&lt;code&gt;=20&lt;/code&gt;符號既難看也分散注意力，甚至有可能破壞內容的語意。&lt;/li&gt; &#xA; &lt;li&gt;絕對，&lt;strong&gt;永遠&lt;/strong&gt;不要指望黑客們閱讀使用封閉格式編寫的文檔，像是微軟公司的 Word 或 Excel 文件等。大多數黑客對此的反應就像有人將還在冒熱氣的豬糞倒在你門口階梯上時你的反應一樣。即便他們能夠處理，他們也很厭惡這麼做。&lt;/li&gt; &#xA; &lt;li&gt;如果你從使用 Windows 的電腦發送電子郵件，關閉微軟愚蠢的&lt;code&gt;智慧引號&lt;/code&gt;功能 （從[選項] &amp;gt; [校訂] &amp;gt; [自動校正選項], 按掉&lt;code&gt;智慧引號&lt;/code&gt;核取方塊），以免在你的郵件中到處散佈垃圾字符。&lt;/li&gt; &#xA; &lt;li&gt;在論壇，勿濫用&lt;code&gt;表情符號&lt;/code&gt;和&lt;code&gt;HTML&lt;/code&gt;功能（當它們提供時）。一兩個表情符號通常沒有問題，但花哨的彩色文本傾向於使人認為你是個無能之輩。過濫地使用表情符號、色彩和字體會使你看來像個傻笑的小姑娘。這通常不是個好主意，除非你只是對性而不是有用的回覆更有興趣。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;如果你使用圖形用戶界面的電子信箱程式（如微軟公司的 Outlook 或者其它類似的），注意它們的預設配置不一定滿足這些要求。大多數這類程式有基於選單的&lt;code&gt;查看原始碼&lt;/code&gt;命令，用它來檢查發送文件夾中的消息，以確保發送的是沒有多餘雜質的純文本文件。&lt;/p&gt; &#xA;&lt;h3&gt;精確的描述問題並言之有物&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;仔細、清楚地描述你的問題或臭蟲的症狀。&lt;/li&gt; &#xA; &lt;li&gt;描述問題發生的環境（機器配置、作業系統、應用程式、以及相關的資訊），提供經銷商的發行版和版本號（如：&lt;code&gt;Fedora Core 4&lt;/code&gt;、&lt;code&gt;Slackware 9.1&lt;/code&gt;等）。&lt;/li&gt; &#xA; &lt;li&gt;描述在提問前你是怎樣去研究和理解這個問題的。&lt;/li&gt; &#xA; &lt;li&gt;描述在提問前為確定問題而採取的診斷步驟。&lt;/li&gt; &#xA; &lt;li&gt;描述最近做過什麼可能相關的硬體或軟體變更。&lt;/li&gt; &#xA; &lt;li&gt;盡可能的提供一個可以&lt;code&gt;重製這個問題的既定環境&lt;/code&gt;的方法&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;儘量去揣測一個黑客會怎樣反問你，在他提問的時候預先給他答案。&lt;/p&gt; &#xA;&lt;p&gt;以上幾點中，當你回報的是你認為可能在程式碼中的問題時，給黑客一個可以重製你的問題的環境尤其重要。當你這麼做時，你得到有效的回答的機會和速度都會大大的提升。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/&#34;&gt;Simon Tatham&lt;/a&gt; 寫過一篇名為〈&lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/bugs-tw.html&#34;&gt;如何有效的回報Bug&lt;/a&gt;〉的出色文章。強力推薦你也讀一讀。&lt;/p&gt; &#xA;&lt;h3&gt;話不在多而在精&lt;/h3&gt; &#xA;&lt;p&gt;你需要提供精確有內容的資訊。這並不是要求你簡單的把成堆的出錯程式碼或者資料完全轉錄到你的提問中。如果你有龐大而複雜的測試樣例能重現程式當掉的情境，儘量將它剪裁得越小越好。&lt;/p&gt; &#xA;&lt;p&gt;這樣做的用處至少有三點。 第一，表現出你為簡化問題付出了努力，這可以使你得到回答的機會增加； 第二，簡化問題使你更有可能得到&lt;strong&gt;有用&lt;/strong&gt;的答案； 第三，在精鍊你的bug報告的過程中，你很可能就自己找到了解決方法或權宜之計。&lt;/p&gt; &#xA;&lt;h3&gt;別動輒聲稱找到Bug&lt;/h3&gt; &#xA;&lt;p&gt;當你在使用軟體中遇到問題，除非你非常、&lt;strong&gt;非常&lt;/strong&gt;的有根據，不要動輒聲稱找到了Bug。提示：除非你能提供解決問題的原始碼補丁，或者對前一版本的回歸測試表現出不正確的行為，否則你都多半不夠完全確信。這同樣適用在網頁和文件，如果你（聲稱）發現了文件的&lt;code&gt;Bug&lt;/code&gt;，你應該能提供相應位置的修正或替代文件。&lt;/p&gt; &#xA;&lt;p&gt;請記得，還有許多其它使用者沒遇到你發現的問題，否則你在閱讀文件或搜尋網頁時就應該發現了（你在抱怨前&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E5%9C%A8%E6%8F%90%E5%95%8F%E4%B9%8B%E5%89%8D&#34;&gt;已經做了這些，是吧&lt;/a&gt;？）。這也意味著很有可能是你弄錯了而不是軟體本身有問題。&lt;/p&gt; &#xA;&lt;p&gt;編寫軟體的人總是非常辛苦地使它盡可能完美。如果你聲稱找到了Bug，也就是在質疑他們的能力，即使你是對的，也有可能會冒犯到其中某部分人。這尤其嚴重當你在標題中嚷嚷著有&lt;code&gt;Bug&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;提問時，即使你私下非常確信已經發現一個真正的臭蟲，最好寫得像是&lt;strong&gt;你&lt;/strong&gt;做錯了什麼。如果真的有臭蟲，你會在回覆中看到這點。這樣做的話，如果真有臭蟲，維護者就會向你道歉，這總比你惹惱別人然後欠別人一個道歉要好一點。&lt;/p&gt; &#xA;&lt;h3&gt;別用低聲下氣取代你真正該做的事&lt;/h3&gt; &#xA;&lt;p&gt;有些人明白他們不該粗魯或傲慢的提問並要求得到答覆，但他們選擇另一個極端 -- 低聲下氣：&lt;code&gt;我知道我只是個可悲的新手，一個魯蛇，但...&lt;/code&gt;。這既使人困擾，也沒有用，尤其是伴隨著與實際問題含糊不清的描述時更令人反感。&lt;/p&gt; &#xA;&lt;p&gt;別用原始靈長類動物的把戲來浪費你我的時間。取而代之的是，盡可能清楚地描述背景條件和你的問題情況。這比低聲下氣更好地定位了你的位置。&lt;/p&gt; &#xA;&lt;p&gt;有時網頁論壇會設有專為新手提問的版面，如果你真的認為遇到了初學者的問題，到那去就是了，但一樣別那麼低聲下氣。&lt;/p&gt; &#xA;&lt;h3&gt;描述問題症狀而非猜測&lt;/h3&gt; &#xA;&lt;p&gt;告訴黑客們你認為問題是怎樣造成的並沒什麼幫助。（如果你的推斷如此有效，還用向別人求助嗎？），因此要確信你原原本本告訴了他們問題的症狀，而不是你的解釋和理論；讓黑客們來推測和診斷。如果你認為陳述自己的猜測很重要，清楚地說明這只是你的猜測，並描述為什麼它們不起作用。&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;蠢問題&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我在編譯內核時接連遇到 SIG11 錯誤， 我懷疑某條飛線搭在主板的走線上了，這種情況應該怎樣檢查最好？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;聰明問題&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我的組裝電腦是 FIC-PA2007 主機板搭載 AMD K6/233 CPU（威盛 Apollo VP2晶片組）， 256MB Corsair PC133 SDRAM記憶體，在編譯內核時，從開機20分鐘以後就頻頻產生 SIG11 錯誤， 但是在頭20分鐘內從沒發生過相同的問題。重新啟動也沒有用，但是關機一晚上就又能工作20分鐘。 所有記憶體都換過了，沒有效果。相關部分的標準編譯記錄如下…&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;由於以上這點似乎讓許多人覺得難以配合，這裡有句話可以提醒你：&lt;code&gt;所有的診斷專家都來自密蘇里州。&lt;/code&gt; 美國國務院的官方座右銘則是：&lt;code&gt;讓我看看&lt;/code&gt;（出自國會議員 Willard D. Vandiver 在1899年時的講話：&lt;code&gt;我來自一個出產玉米，棉花，牛蒡和民主黨人的國家，滔滔雄辯既不能說服我，也不會讓我滿意。我來自密蘇里州，你必須讓我看看。&lt;/code&gt;） 針對診斷者而言，這並不是一種懷疑，而只是一種真實而有用的需求，以便讓他們看到的是與你看到的原始證據盡可能一致的東西，而不是你的猜測與歸納的結論。所以，大方的展示給我們看吧！&lt;/p&gt; &#xA;&lt;h3&gt;按發生時間先後列出問題症狀&lt;/h3&gt; &#xA;&lt;p&gt;問題發生前的一系列操作，往往就是對找出問題最有幫助的線索。因此，你的說明裡應該包含你的操作步驟，以及機器和軟體的反應，直到問題發生。在命令列處理的情況下，提供一段操作記錄（例如運行腳本工具所生成的），並引用相關的若干行（如20行）記錄會非常有幫助。&lt;/p&gt; &#xA;&lt;p&gt;如果當掉的程式有診斷選項（如 -v 的詳述開關），試著選擇這些能在記錄中增加除錯資訊的選項。記住，&lt;code&gt;多&lt;/code&gt;不等於&lt;code&gt;好&lt;/code&gt;。試著選取適當的除錯級別以便提供有用的訊息而不是讓讀者淹沒在垃圾中。&lt;/p&gt; &#xA;&lt;p&gt;如果你的說明很長（如超過四個段落），在開頭簡述問題，接下來再按時間順序詳述會有所幫助。這樣黑客們在讀你的記錄時就知道該注意哪些內容了。&lt;/p&gt; &#xA;&lt;h3&gt;描述目標而不是過程&lt;/h3&gt; &#xA;&lt;p&gt;如果你想弄清楚如何做某事（而不是報告一個Bug），在開頭就描述你的目標，然後才陳述重現你所卡住的特定步驟。&lt;/p&gt; &#xA;&lt;p&gt;經常尋求技術幫助的人在心中有個更高層次的目標，而他們在自以為能達到目標的特定道路上被卡住了，然後跑來問該怎麼走，但沒有意識到這條路本身就有問題。結果要費很大的勁才能搞定。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;蠢問題&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我怎樣才能從某繪圖程式的顏色選擇器中取得十六進制的 RGB 值？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;聰明問題&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我正試著把一幅圖片的色碼替換成自己選定的色碼，我現在知道的唯一方法是編輯每個色碼區塊， 但卻無法從某繪圖程式的顏色選擇器取得十六進制的 RGB 值。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;第二種提問法比較聰明，你可能得到像是&lt;code&gt;建議採用另一個更適任的工具&lt;/code&gt;的回覆。&lt;/p&gt; &#xA;&lt;h3&gt;別要求使用私人電郵回覆&lt;/h3&gt; &#xA;&lt;p&gt;黑客們認為問題的解決過程應該公開、透明，此過程中如果更有經驗的人注意到不完整或者不當之處，最初的回覆才能夠、也應該被糾正。同時，作為提供幫助者也能因為能力和學識被其它同行看到而得到某種獎勵。&lt;/p&gt; &#xA;&lt;p&gt;當你要求私下回覆時，這個過程和獎勵都被中止。別這樣做，讓&lt;strong&gt;回覆者&lt;/strong&gt;來決定是否私下回答 -- 如果他真這麼做了，通常是因為他認為問題編寫太差或者太膚淺，以至於對其它人沒有興趣。&lt;/p&gt; &#xA;&lt;p&gt;這條規則存在一條有但書的例外，如果你確信提問可能會引來大量雷同的回覆時，那麼這個神奇的提問句會是&lt;code&gt;向我發電郵，我將為論壇歸納這些回覆&lt;/code&gt;。試著將郵件列表或新聞群組從洪水般的雷同回覆中解救出來是非常有禮貌的 -- 但你必須信守諾言。&lt;/p&gt; &#xA;&lt;h3&gt;清楚明確的表達你的問題以及需求&lt;/h3&gt; &#xA;&lt;p&gt;漫無邊際的提問近乎無休無止的時間黑洞。最有可能給你有用答案的人通常也正是最忙的人（他們忙是因為要親自完成大部分工作）。這樣的人對無節制的時間黑洞相當厭惡，所以他們也傾向於厭惡那些漫無邊際的提問。&lt;/p&gt; &#xA;&lt;p&gt;如果你明確表述需要回答者做什麼（如提供指點、發送一段程式碼、檢查你的補丁、或是其他等等），就最有可能得到有用的答案。因為這會定出一個時間和精力的上限，便於回答者能集中精力來幫你。這麼做很棒。&lt;/p&gt; &#xA;&lt;p&gt;要理解專家們所處的世界，請把專業技能想像為充裕的資源，而回覆的時間則是稀缺的資源。你要求他們奉獻的時間越少，你越有可能從真正專業而且很忙的專家那裡得到解答。&lt;/p&gt; &#xA;&lt;p&gt;所以，界定一下你的問題，使專家花在辨識你的問題和回答所需要付出的時間減到最少，這技巧對你獲得有用的答案相當有幫助──但這技巧通常和簡化問題有所區別。因此，問&lt;code&gt;我想更好的理解X，可否指點一下哪裡有好一點的說明？&lt;/code&gt;通常比問&lt;code&gt;你能解釋一下X嗎？&lt;/code&gt;更好。如果你的程式碼不能運作，通常請別人看看哪裡有問題，比要求別人替你改正要明智得多。&lt;/p&gt; &#xA;&lt;h3&gt;詢問有關程式碼的問題時&lt;/h3&gt; &#xA;&lt;p&gt;如果沒有提示別人應該從何入手，別要求他人幫你調試有問題的程式碼。張貼幾百行的程式碼，然後說一聲：&lt;code&gt;它不會動&lt;/code&gt;會讓你完全被忽略。只貼幾十行程式碼，然後說一句：&lt;code&gt;在第七行以後，我期待它顯示 &amp;lt;x&amp;gt;，但實際出現的是 &amp;lt;y&amp;gt;&lt;/code&gt;比較有可能讓你得到回應。&lt;/p&gt; &#xA;&lt;p&gt;最有效描述程式問題的方法是提供最精簡的臭蟲展示測試示例（bug-demonstrating test case）。什麼是最精簡的測試示例? 那是問題的縮影；一小個程式片段能&lt;strong&gt;剛好&lt;/strong&gt;展示出程式的異常行為，而不包含其他令人分散注意力的內容。怎麼製作最精簡的測試示例？如果你知道哪一行或哪一段程式碼會造成異常的行為，複製下來並加入足夠重現這個狀況的程式碼（例如，足以讓這段程式碼能被編譯/直譯/被應用程式處理）。如果你無法將問題縮減到一個特定區塊，就複製一份程式碼並移除不影響產生問題行為的部分。總之，測試示例越小越好（查看&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#%E8%A9%B1%E4%B8%8D%E5%9C%A8%E5%A4%9A%E8%80%8C%E5%9C%A8%E7%B2%BE&#34;&gt;話不在多而在精&lt;/a&gt;一節）。&lt;/p&gt; &#xA;&lt;p&gt;一般而言，要得到一段相當精簡的測試示例並不太容易，但永遠先嘗試這樣做的是種好習慣。這種方式可以幫助你了解如何自行解決這個問題──而且即使你的嘗試不成功，黑客們也會看到你在嘗試取得答案的過程中付出了努力，這可以讓他們更願意與你合作。&lt;/p&gt; &#xA;&lt;p&gt;如果你只是想讓別人幫忙審（Review）一下程式碼，在信的開頭就要說出來，並且一定要提到你認為哪一部分特別需要關注以及為什麼。&lt;/p&gt; &#xA;&lt;h3&gt;別把自己家庭作業的問題貼上來&lt;/h3&gt; &#xA;&lt;p&gt;黑客們很擅長分辨哪些問題是家庭作業式的問題；因為我們中的大多數都曾自己解決這類問題。同樣，這些問題得由&lt;strong&gt;你&lt;/strong&gt;來搞定，你會從中學到東西。你可以要求給點提示，但別要求得到完整的解決方案。&lt;/p&gt; &#xA;&lt;p&gt;如果你懷疑自己碰到了一個家庭作業式的問題，但仍然無法解決，試試在使用者群組，論壇或（最後一招）在專案的&lt;strong&gt;使用者&lt;/strong&gt;郵件列表或論壇中提問。儘管黑客們&lt;strong&gt;會&lt;/strong&gt;看出來，但一些有經驗的使用者也許仍會給你一些提示。&lt;/p&gt; &#xA;&lt;h3&gt;去掉無意義的提問句&lt;/h3&gt; &#xA;&lt;p&gt;避免用無意義的話結束提問，例如&lt;code&gt;有人能幫我嗎？&lt;/code&gt;或者&lt;code&gt;這有答案嗎？&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;首先：如果你對問題的描述不是很好，這樣問更是畫蛇添足。&lt;/p&gt; &#xA;&lt;p&gt;其次：由於這樣問是畫蛇添足，黑客們會很厭煩你──而且通常會用邏輯上正確，但毫無意義的回答來表示他們的蔑視， 例如：&lt;code&gt;沒錯，有人能幫你&lt;/code&gt;或者&lt;code&gt;不，沒答案&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;一般來說，避免用 &lt;code&gt;是或否&lt;/code&gt;、&lt;code&gt;對或錯&lt;/code&gt;、&lt;code&gt;有或沒有&lt;/code&gt;類型的問句，除非你想得到&lt;a href=&#34;https://strcat.de/questions-with-yes-or-no-answers.html&#34;&gt;是或否類型的回答&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;即使你很急也不要在標題寫&lt;code&gt;緊急&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;這是你的問題，不是我們的。宣稱&lt;code&gt;緊急&lt;/code&gt;極有可能事與願違：大多數黑客會直接刪除無禮和自私地企圖即時引起關注的問題。更嚴重的是，&lt;code&gt;緊急&lt;/code&gt;這個字（或是其他企圖引起關注的標題）通常會被垃圾信過濾器過濾掉 -- 你的問題可能永遠將無法得到解答。&lt;/p&gt; &#xA;&lt;p&gt;有半個例外的情況是，如果你是在一些很高調，會使黑客們興奮的地方，也許值得這樣去做。在這種情況下，如果你有時間壓力，也很有禮貌地提到這點，人們也許會有興趣回答快一點。&lt;/p&gt; &#xA;&lt;p&gt;當然，這風險很大，因為黑客們興奮的點多半與你的不同。譬如從 NASA 國際空間站（International Space Station）發這樣的標題沒有問題，但用自我感覺良好的慈善行為或政治原因發肯定不行。事實上，張貼諸如&lt;code&gt;緊急：幫我救救這個毛絨絨的小海豹！&lt;/code&gt;肯定讓你被黑客忽略或惹惱他們，即使他們認為毛絨絨的小海豹很重要。&lt;/p&gt; &#xA;&lt;p&gt;如果你覺得這點很不可思議，最好再把這份指南剩下的內容多讀幾遍，直到你弄懂了再發文。&lt;/p&gt; &#xA;&lt;h3&gt;禮多人不怪，而且有時還很有幫助&lt;/h3&gt; &#xA;&lt;p&gt;彬彬有禮，多用&lt;code&gt;請&lt;/code&gt;和&lt;code&gt;謝謝您的關注&lt;/code&gt;，或&lt;code&gt;謝謝你的關照&lt;/code&gt;。讓大家都知道你對他們花時間免費提供幫助心存感激。&lt;/p&gt; &#xA;&lt;p&gt;坦白說，這一點並沒有比清晰、正確、精準並合法文法和避免使用專用格式重要（也不能取而代之）。黑客們一般寧可讀有點唐突但技術上鮮明的臭蟲報告，而不是那種有禮但含糊的報告。（如果這點讓你不解，記住我們是按問題能教我們什麼來評價問題的價值的）&lt;/p&gt; &#xA;&lt;p&gt;然而，如果你有一串的問題待解決，客氣一點肯定會增加你得到有用回應的機會。&lt;/p&gt; &#xA;&lt;p&gt;（我們注意到，自從本指南發佈後，從資深黑客那裡得到的唯一嚴重缺陷反饋，就是對預先道謝這一條。一些黑客覺得&lt;code&gt;先謝了&lt;/code&gt;意味著事後就不用再感謝任何人的暗示。我們的建議是要麼先說&lt;code&gt;先謝了&lt;/code&gt;，&lt;strong&gt;然後&lt;/strong&gt;事後再對回覆者表示感謝，或者換種方式表達感激，譬如用&lt;code&gt;謝謝你的關注&lt;/code&gt;或&lt;code&gt;謝謝你的關照&lt;/code&gt;。）&lt;/p&gt; &#xA;&lt;h3&gt;問題解決後，加個簡短的補充說明&lt;/h3&gt; &#xA;&lt;p&gt;問題解決後，向所有幫助過你的人發個說明，讓他們知道問題是怎樣解決的，並再一次向他們表示感謝。如果問題在新聞組或者郵件列表中引起了廣泛關注，應該在那裡貼一個說明比較恰當。&lt;/p&gt; &#xA;&lt;p&gt;最理想的方式是向最初提問的話題回覆此消息，並在標題中包含&lt;code&gt;已修正&lt;/code&gt;，&lt;code&gt;已解決&lt;/code&gt;或其它同等含義的明顯標記。在人來人往的郵件列表裡，一個看見討論串&lt;code&gt;問題 X&lt;/code&gt;和&lt;code&gt;問題的X - 已解決&lt;/code&gt;的潛在回覆者就明白不用再浪費時間了（除非他個人覺得&lt;code&gt;問題 X&lt;/code&gt;有趣），因此可以利用此時間去解決其它問題。&lt;/p&gt; &#xA;&lt;p&gt;補充說明不必很長或是很深入；簡單的一句&lt;code&gt;你好，原來是網路線出了問題！謝謝大家 – Bill&lt;/code&gt;比什麼也不說要來的好。事實上，除非結論真的很有技術含量，否則簡短可愛的小結比長篇大論更好。說明問題是怎樣解決的，但大可不必將解決問題的過程複述一遍。&lt;/p&gt; &#xA;&lt;p&gt;對於有深度的問題，張貼除錯記錄的摘要是有幫助的。描述問題的最終狀態，說明是什麼解決了問題，在此&lt;strong&gt;之後&lt;/strong&gt;才指明可以避免的盲點。避免盲點的部分應放在正確的解決方案和其它總結材料之後，而不要將此訊息搞成偵探推理小說。列出那些幫助過你的名字，會讓你交到更多朋友。&lt;/p&gt; &#xA;&lt;p&gt;除了有禮貌和有內涵以外，這種類型的補充也有助於他人在郵件列表/新聞群組/論壇中搜尋到真正解決你問題的方案，讓他們也從中受益。&lt;/p&gt; &#xA;&lt;p&gt;至少，這種補充有助於讓每位參與協助的人因問題的解決而從中得到滿足感。如果你自己不是技術專家或者黑客，那就相信我們，這種感覺對於那些你向他們求助的大師或者專家而言，是非常重要的。問題懸而未決會讓人灰心；黑客們渴望看到問題被解決。好人有好報，滿足他們的渴望，你會在下次提問時嘗到甜頭。&lt;/p&gt; &#xA;&lt;p&gt;思考一下怎樣才能避免他人將來也遇到類似的問題，自問寫一份文件或加個常見問題（FAQ）會不會有幫助。如果是的話就將它們發給維護者。&lt;/p&gt; &#xA;&lt;p&gt;在黑客中，這種良好的後繼行動實際上比傳統的禮節更為重要，也是你如何透過善待他人而贏得聲譽的方式，這是非常有價值的資產。&lt;/p&gt; &#xA;&lt;h2&gt;如何解讀答案&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a id=&#34;rtfm&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;RTFM和STFW：如何知道你已完全搞砸了&lt;/h3&gt; &#xA;&lt;p&gt;有一個古老而神聖的傳統：如果你收到&lt;code&gt;RTFM （Read The Fucking Manual）&lt;/code&gt;的回應，回答者認為你&lt;strong&gt;應該去讀那該死的手冊&lt;/strong&gt;。當然，基本上他是對的，你應該去讀一讀。&lt;/p&gt; &#xA;&lt;p&gt;RTFM 有一個年輕的親戚。如果你收到&lt;code&gt;STFW（Search The Fucking Web）&lt;/code&gt;的回應，回答者認為你&lt;strong&gt;應該到該死的網路上搜索&lt;/strong&gt;過了。那人多半也是對的，去搜尋一下吧。（更溫和一點的說法是 &lt;strong&gt;&lt;a href=&#34;http://lmgtfy.com/&#34;&gt;Google是你的朋友&lt;/a&gt;&lt;/strong&gt;！）&lt;/p&gt; &#xA;&lt;p&gt;在論壇，你也可能被要求去爬爬論壇的舊文。事實上，有人甚至可能熱心地為你提供以前解決此問題的討論串。但不要依賴這種關照，提問前應該先搜索一下舊文。&lt;/p&gt; &#xA;&lt;p&gt;通常，用這兩句之一回答你的人會給你一份包含你需要內容的手冊或者一個網址，而且他們打這些字的時候也正在讀著。這些答覆意味著回答者認為&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;你需要的資訊非常容易獲得&lt;/strong&gt;； &amp;nbsp;* &lt;strong&gt;你自己去搜尋這些資訊比灌給你能讓你學到更多&lt;/strong&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;你不應該因此不爽；&lt;strong&gt;依照黑客的標準，他已經表示了對你一定程度的關注，而沒有對你的要求視而不見&lt;/strong&gt;。你應該對他祖母般的慈祥表示感謝。&lt;/p&gt; &#xA;&lt;h3&gt;如果還是搞不懂&lt;/h3&gt; &#xA;&lt;p&gt;如果你看不懂回應，別立刻要求對方解釋。像你以前試著自己解決問題時那樣（利用手冊，FAQ，網路，身邊的高手），先試著去搞懂他的回應。如果你真的需要對方解釋，記得表現出你已經從中學到了點什麼。&lt;/p&gt; &#xA;&lt;p&gt;比方說，如果我回答你：&lt;code&gt;看來似乎是 zentry 卡住了；你應該先清除它。&lt;/code&gt;，然後，這是一個&lt;strong&gt;很糟的&lt;/strong&gt;後續問題回應：&lt;code&gt;zentry是什麼？&lt;/code&gt; &lt;strong&gt;好&lt;/strong&gt;的問法應該是這樣：&lt;code&gt;哦~~~我看過說明了但是只有 -z 和 -p 兩個參數中提到了 zentries，而且還都沒有清楚的解釋如何清除它。你是指這兩個中的哪一個嗎？還是我看漏了什麼？&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;處理無禮的回應&lt;/h3&gt; &#xA;&lt;p&gt;很多黑客圈子中看似無禮的行為並不是存心冒犯。相反，它是直接了當，一針見血式的交流風格，這種風格更注重解決問題，而不是使人感覺舒服而卻模模糊糊。&lt;/p&gt; &#xA;&lt;p&gt;如果你覺得被冒犯了，試著平靜地反應。如果有人真的做了出格的事，郵件列表、新聞群組或論壇中的前輩多半會招呼他。如果這&lt;strong&gt;沒有&lt;/strong&gt;發生而你卻發火了，那麼你發火對象的言語可能在黑客社區中看起來是正常的，而&lt;strong&gt;你&lt;/strong&gt;將被視為有錯的一方，這將傷害到你獲取訊息或幫助的機會。&lt;/p&gt; &#xA;&lt;p&gt;另一方面，你偶而真的會碰到無禮和無聊的言行。與上述相反，對真正的冒犯者狠狠地打擊，用犀利的語言將其駁得體無完膚都是可以接受的。然而，在行事之前一定要非常非常的有根據。糾正無禮的言論與開始一場毫無意義的口水戰僅一線之隔，黑客們自己莽撞地越線的情況並不鮮見。如果你是新手或外人，避開這種莽撞的機會並不高。如果你想得到的是訊息而不是消磨時光，這時最好不要把手放在鍵盤上以免冒險。&lt;/p&gt; &#xA;&lt;p&gt;（有些人斷言很多黑客都有輕度的自閉症或亞斯伯格綜合症，缺少用於潤滑人類社會&lt;strong&gt;正常&lt;/strong&gt;交往所需的神經。這既可能是真也可能是假的。如果你自己不是黑客，興許你認為我們腦袋有問題還能幫助你應付我們的古怪行為。只管這麼幹好了，我們不在乎。我們&lt;strong&gt;喜歡&lt;/strong&gt;我們現在這個樣子，並且通常對病患標記都有站得住腳的懷疑。）&lt;/p&gt; &#xA;&lt;p&gt;在下一節，我們會談到另一個問題，當&lt;strong&gt;你&lt;/strong&gt;行為不當時所會受到的&lt;code&gt;冒犯&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;如何避免扮演失敗者&lt;/h2&gt; &#xA;&lt;p&gt;在黑客社區的論壇中有那麼幾次你可能會搞砸──以本指南所描述到的或類似的方式。而你會在公開場合中被告知你是如何搞砸的，也許攻擊的言語中還會帶點雜七雜八的顏色。&lt;/p&gt; &#xA;&lt;p&gt;這種事發生以後，你能做的最糟糕的事莫過於哀嚎你的遭遇、宣稱被口頭攻擊、要求道歉、高聲尖叫、憋悶氣、威脅訴諸法律、向其雇主報怨、忘了關馬桶蓋等等。相反地，你該這麼做：&lt;/p&gt; &#xA;&lt;p&gt;熬過去，這很正常。事實上，它是有益健康且合理的。&lt;/p&gt; &#xA;&lt;p&gt;社區的標準不會自行維持，它們是通過參與者積極而&lt;strong&gt;公開地&lt;/strong&gt;執行來維持的。不要哭嚎所有的批評都應該通過私下的郵件傳送，它不是這樣運作的。當有人評論你的一個說法有誤或者提出不同看法時，堅持聲稱受到個人攻擊也毫無益處，這些都是失敗者的態度。&lt;/p&gt; &#xA;&lt;p&gt;也有其它的黑客論壇，受過高禮節要求的誤導，禁止參與者張貼任何對別人帖子挑毛病的消息，並聲稱&lt;code&gt;如果你不想幫助用戶就閉嘴。&lt;/code&gt; 結果造成有想法的參與者紛紛離開，這麼做只會使它們淪為毫無意義的嘮叨與無用的技術論壇。&lt;/p&gt; &#xA;&lt;p&gt;誇張的講法是：你要的是&lt;strong&gt;友善&lt;/strong&gt;（以上述方式）還是有用？兩個裡面挑一個。&lt;/p&gt; &#xA;&lt;p&gt;記著：當黑客說你搞砸了，並且（無論多麼刺耳）告訴你別再這樣做時，他正在為關心&lt;strong&gt;你&lt;/strong&gt;和&lt;strong&gt;他的社群&lt;/strong&gt;而行動。對他而言，不理你並將你從他的生活中濾掉更簡單。如果你無法做到感謝，至少要表現地有點尊嚴，別大聲哀嚎，也別因為自己是個有戲劇性超級敏感的靈魂和自以為有資格的新來者，就指望別人像對待脆弱的洋娃娃那樣對你。&lt;/p&gt; &#xA;&lt;p&gt;有時候，即使你沒有搞砸（或者只是在他的想像中你搞砸了），有些人也會無緣無故地攻擊你本人。在這種情況下，抱怨倒是&lt;strong&gt;真的&lt;/strong&gt;會把問題搞砸。&lt;/p&gt; &#xA;&lt;p&gt;這些來找麻煩的人要麼是毫無辦法但自以為是專家的不中用傢伙，要麼就是測試你是否真會搞砸的心理專家。其它讀者要麼不理睬，要麼用自己的方式對付他們。這些來找麻煩的人在給他們自己找麻煩，這點你不用操心。&lt;/p&gt; &#xA;&lt;p&gt;也別讓自己捲入口水戰，最好不要理睬大多數的口水戰 -- 當然，是在你檢驗它們只是口水戰，而並未指出你有搞砸的地方，且也沒有巧妙地將問題真正的答案藏於其後（這也是有可能的）。&lt;/p&gt; &#xA;&lt;h2&gt;不該問的問題&lt;/h2&gt; &#xA;&lt;p&gt;以下是幾個經典蠢問題，以及黑客沒回答時心中所想的：&lt;/p&gt; &#xA;&lt;p&gt;問題：&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#q1&#34;&gt;我能在哪找到 X 程式或 X 資源？&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;問題：&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#q2&#34;&gt;我怎樣用 X 做 Y？&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;問題：&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#q3&#34;&gt;如何設定我的 shell 提示？&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;問題：&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#q4&#34;&gt;我可以用 Bass-o-matic 文件轉換工具將 AcmeCorp 檔案轉換為 TeX 格式嗎？&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;問題：&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#q5&#34;&gt;我的程式/設定/SQL語句沒有用&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;問題：&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#q6&#34;&gt;我的 Windows 電腦有問題，你能幫我嗎？&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;問題：&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#q7&#34;&gt;我的程式不會動了，我認為系統工具 X 有問題&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;問題：&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#q8&#34;&gt;我在安裝 Linux（或者 X ）時有問題，你能幫我嗎？&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;問題：&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#q9&#34;&gt;我怎麼才能破解 root 帳號/竊取 OP 特權/讀別人的郵件呢？&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a id=&#34;q1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;問題：我能在哪找到 X 程式或 X 資源？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;回答：就在我找到它的地方啊，白痴 -- 搜尋引擎的那一頭。天哪！難道還有人不會用 &lt;a href=&#34;http://www.google.com&#34;&gt;Google&lt;/a&gt; 嗎？&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;q2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;問題：我怎樣用 X 做 Y？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;回答：如果你想解決的是 Y ，提問時別給出可能並不恰當的方法。這種問題說明提問者不但對 X 完全無知，也對 Y 要解決的問題糊塗，還被特定形勢禁錮了思維。最好忽略這種人，等他們把問題搞清楚了再說。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;q3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;問題：如何設定我的 shell 提示？？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;回答：如果你有足夠的智慧提這個問題，你也該有足夠的智慧去 &lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#rtfm&#34;&gt;RTFM&lt;/a&gt;，然後自己去找出來。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;q4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;問題：我可以用 Bass-o-matic 文件轉換工具將 AcmeCorp 檔案轉換為 TeX 格式嗎？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;回答：試試看就知道了。如果你試過，你既知道了答案，就不用浪費我的時間了。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;q5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;問題：我的程式/設定/SQL語句沒有用&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;回答：這不算是問題吧，我對要我問你二十個問題才找得出你真正問題的問題沒興趣 -- 我有更有意思的事要做呢。在看到這類問題的時候，我的反應通常不外如下三種&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;你還有什麼要補充的嗎？&lt;/li&gt; &#xA; &lt;li&gt;真糟糕，希望你能搞定。&lt;/li&gt; &#xA; &lt;li&gt;這關我屁事？&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a id=&#34;q6&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;問題：我的 Windows 電腦有問題，你能幫我嗎？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;回答：能啊，扔掉微軟的垃圾，換個像 Linux 或 BSD 的開放原始碼作業系統吧。&lt;/p&gt; &#xA;&lt;p&gt;注意：如果程式有官方版 Windows 或者與 Windows 有互動（如Samba），你&lt;strong&gt;可以&lt;/strong&gt;問與Windows相關的問題， 只是別對問題是由 Windows 作業系統而不是程式本身造成的回覆感到驚訝， 因為 Windows 一般來說實在太爛，這種說法通常都是對的。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;q7&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;問題：我的程式不會動了，我認為系統工具 X 有問題&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;回答：你完全有可能是第一個注意到被成千上萬用戶反覆使用的系統呼叫與函式庫檔案有明顯缺陷的人，更有可能的是你完全沒有根據。不同凡響的說法需要不同凡響的證據，當你這樣聲稱時，你必須有清楚而詳盡的缺陷說明文件作後盾。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;q8&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;問題：我在安裝 Linux（或者 X ）時有問題，你能幫我嗎？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;回答：不能，我只有親自在你的電腦上動手才能找到毛病。還是去找你當地的 Linux 使用群組者尋求實際的指導吧（你能在&lt;a href=&#34;http://www.linux.org/groups/index.html&#34;&gt;這兒&lt;/a&gt;找到使用者群組的清單）。&lt;/p&gt; &#xA;&lt;p&gt;注意：如果安裝問題與某 Linux 的發行版有關，在它的郵件列表、論壇或本地使用者群組中提問也許是恰當的。此時，應描述問題的準確細節。在此之前，先用 &lt;code&gt;Linux&lt;/code&gt; 和&lt;strong&gt;所有&lt;/strong&gt;被懷疑的硬體作關鍵詞仔細搜尋。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;q9&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;問題：我怎麼才能破解 root 帳號/竊取 OP 特權/讀別人的郵件呢？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;回答：想要這樣做，說明了你是個卑鄙小人；想找個黑客幫你，說明你是個白癡！&lt;/p&gt; &#xA;&lt;h2&gt;好問題與蠢問題&lt;/h2&gt; &#xA;&lt;p&gt;最後，我將透過舉一些例子，來說明怎樣聰明的提問；同一個問題的兩種問法被放在一起，一種是愚蠢的，另一種才是明智的。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;蠢問題&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我可以在哪兒找到關於 Foonly Flurbamatic 的資料？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;這種問法無非想得到 &lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#rtfm&#34;&gt;STFW&lt;/a&gt; 這樣的回答。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;聰明問題&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我用Google 搜尋過 &#34;Foonly Flurbamatic 2600&#34;，但是沒找到有用的結果。誰知道上哪兒去找對這種設備編寫程式的資料？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;這個問題已經 STFW 過了，看起來他真的遇到了麻煩。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;蠢問題&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我從 foo 項目找來的源碼沒法編譯。它怎麼這麼爛？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;他覺得都是別人的錯，這個傲慢自大的提問者&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;聰明問題&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;foo 專案程式碼在 Nulix 6.2 版下無法編譯通過。我讀過了 FAQ，但裏面沒有提到跟 Nulix 有關的問題。這是我編譯過程的記錄，我有什麼做的不對的地方嗎？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;提問者已經指明了環境，也讀過了FAQ，還列出了錯誤，並且他沒有把問題的責任推到別人頭上，他的問題值得被關注。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;蠢問題&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我的主機板有問題了，誰來幫我？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;某黑客對這類問題的回答通常是：&lt;code&gt;好的，還要幫你拍拍背和換尿布嗎？&lt;/code&gt;，然後按下刪除鍵。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;聰明問題&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我在 S2464 主機板上試過了 X 、 Y 和 Z ，但沒什麼作用，我又試了 A 、 B 和 C 。請注意當我嘗試 C 時的奇怪現象。顯然 florbish 正在 grommicking，但結果出人意料。通常在 Athlon MP 主機板上引起 grommicking 的原因是什麼？有誰知道接下來我該做些什麼測試才能找出問題？&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;這個傢伙，從另一個角度來看，值得去回答他。他表現出了解決問題的能力，而不是坐等天上掉答案。&lt;/p&gt; &#xA;&lt;p&gt;在最後一個問題中，注意&lt;code&gt;告訴我答案&lt;/code&gt;和&lt;code&gt;給我啟示，指出我還應該做什麼診斷工作&lt;/code&gt;之間微妙而又重要的區別。&lt;/p&gt; &#xA;&lt;p&gt;事實上，後一個問題源自於 2001 年 8 月在 Linux 內核郵件列表（lkml）上的一個真實的提問。我（Eric）就是那個提出問題的人。我在 Tyan S2464 主板上觀察到了這種無法解釋的鎖定現象，列表成員們提供了解決這一問題的重要資訊。&lt;/p&gt; &#xA;&lt;p&gt;通過我的提問方法，我給了別人可以咀嚼玩味的東西；我設法讓人們很容易參與並且被吸引進來。我顯示了自己具備和他們同等的能力，並邀請他們與我共同探討。通過告訴他們我所走過的彎路，以避免他們再浪費時間，我也表明了對他們寶貴時間的尊重。&lt;/p&gt; &#xA;&lt;p&gt;事後，當我向每個人表示感謝，並且讚賞這次良好的討論經歷的時候， 一個 Linux 內核郵件列表的成員表示，他覺得我的問題得到解決並非由於我是這個列表中的&lt;strong&gt;名人&lt;/strong&gt;，而是因為我用了正確的方式來提問。&lt;/p&gt; &#xA;&lt;p&gt;黑客從某種角度來說是擁有豐富知識但缺乏人情味的傢伙；我相信他是對的，如果我&lt;strong&gt;像&lt;/strong&gt;個乞討者那樣提問，不論我是誰，一定會惹惱某些人或者被他們忽視。他建議我記下這件事，這直接導致了本指南的出現。&lt;/p&gt; &#xA;&lt;h2&gt;如果得不到回答&lt;/h2&gt; &#xA;&lt;p&gt;如果仍得不到回答，請不要以為我們覺得無法幫助你。有時只是看到你問題的人不知道答案罷了。沒有回應不代表你被忽視，雖然不可否認這種差別很難區分。&lt;/p&gt; &#xA;&lt;p&gt;總的來說，簡單的重複張貼問題是個很糟的點子。這將被視為無意義的喧鬧。有點耐心，知道你問題答案的人可能生活在不同的時區，可能正在睡覺，也有可能你的問題一開始就沒有組織好。&lt;/p&gt; &#xA;&lt;p&gt;你可以通過其他管道獲得幫助，這些管道通常更適合初學者的需要。&lt;/p&gt; &#xA;&lt;p&gt;有許多網上的以及本地的使用者群組，由熱情的軟體愛好者（即使他們可能從沒親自寫過任何軟體）組成。通常人們組建這樣的團體來互相幫助並幫助新手。&lt;/p&gt; &#xA;&lt;p&gt;另外，你可以向很多商業公司尋求幫助，不論公司大還是小。別為要付費才能獲得幫助而感到沮喪！畢竟，假使你的汽車發動機汽缸密封圈爆掉了──完全可能如此──你還得把它送到修車鋪，並且為維修付費。就算軟體沒花費你一分錢，你也不能強求技術支援總是免費的。&lt;/p&gt; &#xA;&lt;p&gt;對像是 Linux 這種大眾化的軟體，每個開發者至少會對應到上萬名使用者。根本不可能由一個人來處理來自上萬名使用者的求助電話。要知道，即使你要為這些協助付費，和你所購買的同類軟體相比，你所付出的也是微不足道的（通常封閉原始碼軟體的技術支援費用比開放原始碼軟體的要高得多，且內容也沒那麼豐富）。&lt;/p&gt; &#xA;&lt;h2&gt;如何更好地回答問題&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;態度和善一點&lt;/strong&gt;。問題帶來的壓力常使人顯得無禮或愚蠢，其實並不是這樣。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;對初犯者私下回覆&lt;/strong&gt;。對那些坦誠犯錯之人沒有必要當眾羞辱，一個真正的新手也許連怎麼搜尋或在哪找常見問題都不知道。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;如果你不確定，一定要說出來&lt;/strong&gt;！一個聽起來權威的錯誤回覆比沒有還要糟，別因為聽起來像個專家很好玩，就給別人亂指路。要謙虛和誠實，給提問者與同行都樹個好榜樣。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;如果幫不了忙，也別妨礙他&lt;/strong&gt;。不要在實際步驟上開玩笑，那樣也許會毀了使用者的配置 --有些可憐的呆瓜會把它當成真的指令。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;試探性的反問以引出更多的細節&lt;/strong&gt;。如果你做得好，提問者可以學到點東西 --你也可以。試試將蠢問題轉變成好問題，別忘了我們都曾是新手。&lt;/p&gt; &#xA;&lt;p&gt;儘管對那些懶蟲抱怨一聲 RTFM 是正當的，能指出文件的位置（即使只是建議個 Google 搜尋關鍵詞）會更好。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;如果你決定回答，就請給出好的答案&lt;/strong&gt;。當別人正在用錯誤的工具或方法時別建議笨拙的權宜之計（workaround），應推薦更好的工具，重新界定問題。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;正面的回答問題&lt;/strong&gt;！如果這個提問者已經很深入的研究而且也表明已經試過 X 、 Y 、 Z 、 A 、 B 、 C 但沒得到結果，回答 &lt;code&gt;試試看 A 或是 B&lt;/code&gt; 或者 &lt;code&gt;試試X 、 Y 、 Z 、 A 、 B 、 C&lt;/code&gt; 並附上一個連結一點用都沒有。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;幫助你的社群從問題中學習&lt;/strong&gt;。當回覆一個好問題時，問問自己&lt;code&gt;如何修改相關文件或常見問題文件以免再次解答同樣的問題？&lt;/code&gt;，接著再向文件維護者發一份補丁。&lt;/p&gt; &#xA;&lt;p&gt;如果你是在研究一番後才做出的回答，&lt;strong&gt;展現你的技巧而不是直接端出結果&lt;/strong&gt;。畢竟&lt;code&gt;授人以魚不如授人以漁&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;相關資源&lt;/h2&gt; &#xA;&lt;p&gt;如果你需要個人電腦、Unix 系統和網路如何運作的基礎知識，參閱&lt;a href=&#34;http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/&#34;&gt;Unix系統和網路基本原理&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;當你發布軟體或補丁時，試著按&lt;a href=&#34;http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html&#34;&gt;軟體發布實踐&lt;/a&gt;操作。&lt;/p&gt; &#xA;&lt;h2&gt;鳴謝&lt;/h2&gt; &#xA;&lt;p&gt;Evelyn Mitchel 貢獻了一些愚蠢問題例子並啟發了編寫&lt;code&gt;如何更好地回答問題&lt;/code&gt;這一節， Mikhail Ramendik 貢獻了一些特別有價值的建議和改進。&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://fredwe.info&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7354718?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fred&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-FredWe&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/xgdgsc&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1189869?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;xgdgsc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-xgdgsc&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/fishballLin&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11352791?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Lin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-fishballLin&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cuter44&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2285039?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Galin Wu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-cuter44&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://blog.csdn.net/lantianjialiang/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4327697?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;lantianjialiang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-lantianjialiang&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://linuxtoy.org&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15364?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Xiaodong Xu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-xuxiaodong&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://blog.clifflu.net&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1589313?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cliff Chao-kuan Lu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-clifflu&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Fibird&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/12209558?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chaoyang Liu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-Fibird&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.rayjune.com/about&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22052875?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;瑞君&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-RayJune&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/lvsj&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5672080?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;steven lyu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-lvsj&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://linkedin.com/in/yen-wu&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11289349?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yan-Kuan Wu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-yan-kuan&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Kalger&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15393585?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-Kalger&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/HJ1AN&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10445159?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;HJ1AN&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-HJ1AN&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://konekoya.github.io/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/12165714?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joshua&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-konekoya&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://splasky.blogspot.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/14876069?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;HY Chang(splasky)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-splasky&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/SaberPdr&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/18625830?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;qiuqiu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-SaberPdr&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://a.dqwyy.moe&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20705919?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dqwyy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-dqwyy&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://tomazwang.github.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7992586?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tomaz Wang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-TomazWang&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://aka.ms/anduin&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/19531547?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anduin Xue&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-Anduin2017&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Pancongwen&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/25834392?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pancongwen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-Pancongwen&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://cis.upenn.edu/~yishuai/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7020805?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yishuai Li&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-liyishuai&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/FranklinYu&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3153452?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Franklin Yu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-FranklinYu&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ld246.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/873584?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;D&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-88250&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://flandre.tw/github&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5981459?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chun-Hao Lien&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-FlandreDaisuki&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/hms5232&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/43672033?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;hms5232&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-hms5232&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://gricn.github.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/34237589?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;gricn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-gricn&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://zoomdong.cn/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/32598811?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;zoomdong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-fireairforce&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ladderoperator.top/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/34033754?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;LadderOperator&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-LadderOperator&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/WuzgXY-GitHub&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/62000315?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;WuzgXY&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-WuzgXY-GitHub&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://baoshuo.ren&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/47095648?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ren Baoshuo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-renbaoshuo&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://jalenchuh.cn/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/57910033?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jalen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-jalenchuh&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.libiao.vip&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/8528590?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;BillLucky&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-BillLucky&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://blog.mcplugin.cn&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/56964531?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bingchuanjuzi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-xiaopangju&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/hitjackma&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3788303?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jack M&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-hitjackma&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.yidajiabei.xyz&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/52186032?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;tianheg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/main/#translation-tianheg&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jackocnr/intl-tel-input</title>
    <updated>2023-01-14T01:37:33Z</updated>
    <id>tag:github.com,2023-01-14:/jackocnr/intl-tel-input</id>
    <link href="https://github.com/jackocnr/intl-tel-input" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A JavaScript plugin for entering and validating international telephone numbers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;International Telephone Input &lt;a href=&#34;https://app.travis-ci.com/jackocnr/intl-tel-input&#34;&gt;&lt;img src=&#34;https://app.travis-ci.com/jackocnr/intl-tel-input.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/package-json/v/jackocnr/intl-tel-input.svg?sanitize=true&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/intl-tel-input.svg?sanitize=true&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A JavaScript plugin for entering and validating international telephone numbers. It adds a flag dropdown to any input, detects the user&#39;s country, displays a relevant placeholder and provides formatting/validation methods.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.github.com/jackocnr/intl-tel-input/master/screenshots/vanilla.png&#34; width=&#34;424&#34; height=&#34;246&#34;&gt; &#xA;&lt;p&gt;If you like it, please consider making a donation, which you can do from &lt;a href=&#34;http://intl-tel-input.com&#34;&gt;the demo page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsored by&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.github.com/jackocnr/intl-tel-input/master/screenshots/twilio.png&#34; height=&#34;100&#34;&gt; Use &#xA;&lt;a href=&#34;https://www.twilio.com/blog/international-telephone-input-twilio?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=intl_tel_input&#34;&gt;Twilio&#39;s API to build phone verification, SMS 2FA, appointment reminders, marketing notifications and so much more&lt;/a&gt;. We can&#39;t wait to see what you build. &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#demo-and-examples&#34;&gt;Demo and Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#browser-compatibility&#34;&gt;Browser Compatibility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#getting-started-using-a-bundler-eg-webpack&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#recommended-usage&#34;&gt;Recommended Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#initialisation-options&#34;&gt;Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#public-methods&#34;&gt;Public Methods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#static-methods&#34;&gt;Static Methods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#events&#34;&gt;Events&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#utilities-script&#34;&gt;Utilities Script&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#attributions&#34;&gt;Attributions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo and Examples&lt;/h2&gt; &#xA;&lt;p&gt;You can view a live demo and some examples of how to use the various options here: &lt;a href=&#34;http://intl-tel-input.com&#34;&gt;http://intl-tel-input.com&lt;/a&gt;, or try it for yourself using the included demo.html.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatically select the user&#39;s current country using an IP lookup&lt;/li&gt; &#xA; &lt;li&gt;Automatically set the input placeholder to an example number for the selected country&lt;/li&gt; &#xA; &lt;li&gt;Navigate the country dropdown by typing a country&#39;s name, or using up/down keys&lt;/li&gt; &#xA; &lt;li&gt;Handle phone number extensions&lt;/li&gt; &#xA; &lt;li&gt;The user types their national number and the plugin gives you the full standardized international number&lt;/li&gt; &#xA; &lt;li&gt;Full validation, including specific error types&lt;/li&gt; &#xA; &lt;li&gt;Retina flag icons&lt;/li&gt; &#xA; &lt;li&gt;Lots of initialisation options for customisation, as well as public methods for interaction&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Browser Compatibility&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Chrome&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FF&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Safari&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;IE&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Chrome Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Mobile Safari&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;IE Mob&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note: In v12.0.0 we dropped support for IE9 and IE10, because they are no longer supported by any version of Windows - see &lt;a href=&#34;https://www.xfive.co/blog/stop-supporting-ie10-ie9-ie8/&#34;&gt;https://www.xfive.co/blog/stop-supporting-ie10-ie9-ie8/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started (Using a bundler e.g. Webpack)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install with npm: &lt;code&gt;npm install intl-tel-input --save&lt;/code&gt; or yarn: &lt;code&gt;yarn add intl-tel-input&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Import CSS: &lt;code&gt;import &#39;intl-tel-input/build/css/intlTelInput.css&#39;;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Override the path to flags.png in your CSS&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.iti__flag {background-image: url(&#34;path/to/flags.png&#34;);}&#xA;&#xA;@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {&#xA;  .iti__flag {background-image: url(&#34;path/to/flags@2x.png&#34;);}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Import JS and initialise plugin:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import intlTelInput from &#39;intl-tel-input&#39;;&#xA;&#xA;const input = document.querySelector(&#34;#phone&#34;);&#xA;intlTelInput(input, {&#xA;    // any initialisation options go here&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Recommended:&lt;/strong&gt; initialise the plugin with the &lt;code&gt;utilsScript&lt;/code&gt; option to enable formatting/validation, and to allow you to extract full international numbers using &lt;code&gt;getNumber&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting Started (Not using a bundler)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/releases/latest&#34;&gt;latest release&lt;/a&gt;, or better yet install it with &lt;a href=&#34;https://www.npmjs.com/package/intl-tel-input&#34;&gt;npm&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Include the stylesheet&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;path/to/intlTelInput.css&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Override the path to flags.png in your CSS&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.iti__flag {background-image: url(&#34;path/to/flags.png&#34;);}&#xA;&#xA;@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {&#xA;  .iti__flag {background-image: url(&#34;path/to/flags@2x.png&#34;);}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Add the plugin script and initialise it on your input element&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;input type=&#34;tel&#34; id=&#34;phone&#34;&amp;gt;&#xA;&#xA;&amp;lt;script src=&#34;path/to/intlTelInput.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script&amp;gt;&#xA;  var input = document.querySelector(&#34;#phone&#34;);&#xA;  window.intlTelInput(input, {&#xA;    // any initialisation options go here&#xA;  });&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Recommended:&lt;/strong&gt; initialise the plugin with the &lt;code&gt;utilsScript&lt;/code&gt; option to enable formatting/validation, and to allow you to extract full international numbers using &lt;code&gt;getNumber&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Recommended Usage&lt;/h2&gt; &#xA;&lt;p&gt;We highly recommend you (lazy) load the included utils.js using the &lt;code&gt;utilsScript&lt;/code&gt; option. Then the plugin is built to always deal with numbers in the full international format (e.g. &#34;+17024181234&#34;) and convert them accordingly - even when &lt;code&gt;nationalMode&lt;/code&gt; or &lt;code&gt;separateDialCode&lt;/code&gt; is enabled. We recommend you get, store, and set numbers exclusively in this format for simplicity - then you don&#39;t have to deal with handling the country code separately, as full international numbers include the country code information.&lt;/p&gt; &#xA;&lt;p&gt;You can always get the full international number (including country code) using &lt;code&gt;getNumber&lt;/code&gt;, then you only have to store that one string in your database (you don&#39;t have to store the country separately), and then the next time you initialise the plugin with that number it will automatically set the country and format it according to the options you specify (e.g. if you enable &lt;code&gt;nationalMode&lt;/code&gt; it will automatically remove the international dial code for you).&lt;/p&gt; &#xA;&lt;h2&gt;Initialisation Options&lt;/h2&gt; &#xA;&lt;p&gt;When you initialise the plugin, the first argument is the input element, and the second is an object containing any initialisation options you want, which are detailed below. Note: any options that take country codes should be &lt;a href=&#34;http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2&#34;&gt;ISO 3166-1 alpha-2&lt;/a&gt; codes&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;allowDropdown&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;&lt;br&gt; Whether or not to allow the dropdown. If disabled, there is no dropdown arrow, and the selected flag is not clickable. Also we display the selected flag on the right instead because it is just a marker of state.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;del&gt;autoFormat&lt;/del&gt; [REMOVED]&lt;/strong&gt;&lt;br&gt; Automatically format the number as the user types. Unfortunately this had to be removed for the reasons listed here: &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/issues/346&#34;&gt;#346 Disable and remove autoFormat feature&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;autoHideDialCode&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;&lt;br&gt; If there is just a dial code in the input: remove it on blur or submit. This is to prevent just a dial code getting submitted with the form. Requires &lt;code&gt;nationalMode&lt;/code&gt; to be set to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;autoPlaceholder&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;&#34;polite&#34;&lt;/code&gt;&lt;br&gt; Set the input&#39;s placeholder to an example number for the selected country, and update it if the country changes. You can specify the number type using the &lt;code&gt;placeholderNumberType&lt;/code&gt; option. By default it is set to &lt;code&gt;&#34;polite&#34;&lt;/code&gt;, which means it will only set the placeholder if the input doesn&#39;t already have one. You can also set it to &lt;code&gt;&#34;aggressive&#34;&lt;/code&gt;, which will replace any existing placeholder, or &lt;code&gt;&#34;off&#34;&lt;/code&gt;. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;customContainer&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;&#34;&#34;&lt;/code&gt;&lt;br&gt; Additional classes to add to the parent div.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;customPlaceholder&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;br&gt; Change the placeholder generated by autoPlaceholder. Must return a string.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;intlTelInput(input, {&#xA;  customPlaceholder: function(selectedCountryPlaceholder, selectedCountryData) {&#xA;    return &#34;e.g. &#34; + selectedCountryPlaceholder;&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;dropdownContainer&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Node&lt;/code&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;br&gt; Expects a node e.g. &lt;code&gt;document.body&lt;/code&gt;. Instead of putting the country dropdown next to the input, append it to the specified node, and it will then be positioned absolutely next to the input using JavaScript. This is useful when the input is inside a container with &lt;code&gt;overflow: hidden&lt;/code&gt;. Note that the absolute positioning can be broken by scrolling, so it will automatically close on the &lt;code&gt;window&lt;/code&gt; scroll event.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;excludeCountries&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Array&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;&lt;br&gt; In the dropdown, display all countries except the ones you specify here.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;formatOnDisplay&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;&lt;br&gt; Format the input value (according to the &lt;code&gt;nationalMode&lt;/code&gt; option) during initialisation, and on &lt;code&gt;setNumber&lt;/code&gt;. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;geoIpLookup&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;br&gt; When setting &lt;code&gt;initialCountry&lt;/code&gt; to &lt;code&gt;&#34;auto&#34;&lt;/code&gt;, you must use this option to specify a custom function that looks up the user&#39;s location, and then calls the success callback with the relevant country code. Also note that when instantiating the plugin, if the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;Promise&lt;/a&gt; object is defined, one of those is returned under the &lt;code&gt;promise&lt;/code&gt; instance property, so you can do something like &lt;code&gt;iti.promise.then(callback)&lt;/code&gt; to know when initialisation requests like this have completed.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example using the &lt;a href=&#34;https://ipinfo.io/&#34;&gt;ipinfo.io&lt;/a&gt; service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;intlTelInput(input, {&#xA;  initialCountry: &#34;auto&#34;,&#xA;  geoIpLookup: function(success, failure) {&#xA;    $.get(&#34;https://ipinfo.io&#34;, function() {}, &#34;jsonp&#34;).always(function(resp) {&#xA;      var countryCode = (resp &amp;amp;&amp;amp; resp.country) ? resp.country : &#34;us&#34;;&#xA;      success(countryCode);&#xA;    });&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note that the callback must still be called in the event of an error, hence the use of &lt;code&gt;always&lt;/code&gt; in this example.&lt;/em&gt;&lt;br&gt; &lt;em&gt;Tip: store the result in a cookie to avoid repeat lookups!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;hiddenInput&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;&#34;&#34;&lt;/code&gt;&lt;br&gt; Add a hidden input with the given name. Alternatively, if your input name contains square brackets (e.g. &lt;code&gt;name=&#34;phone_number[main]&#34;&lt;/code&gt;) then it will give the hidden input the same name, replacing the contents of the brackets with the given name (e.g. if you init the plugin with &lt;code&gt;hiddenInput: &#34;full&#34;&lt;/code&gt;, then in this case the hidden input would have &lt;code&gt;name=&#34;phone_number[full]&#34;&lt;/code&gt;). On submit, it will automatically populate the hidden input with the full international number (using &lt;code&gt;getNumber&lt;/code&gt;). This is a quick way for people using non-Ajax forms to get the full international number, even when &lt;code&gt;nationalMode&lt;/code&gt; is enabled. Avoid this option when using Ajax forms and instead just call &lt;code&gt;getNumber&lt;/code&gt; to get the full international number to send in the request. &lt;em&gt;Note: requires the input to be inside a form element, as this feature works by listening for the submit event on the closest form element. Also note that since this uses &lt;code&gt;getNumber&lt;/code&gt; internally, firstly it requires the &lt;code&gt;utilsScript&lt;/code&gt; option, and secondly it expects a valid number and so should only be used after validation.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;initialCountry&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;&#34;&#34;&lt;/code&gt;&lt;br&gt; Set the initial country selection by specifying its country code. You can also set it to &lt;code&gt;&#34;auto&#34;&lt;/code&gt;, which will lookup the user&#39;s country based on their IP address (requires the &lt;code&gt;geoIpLookup&lt;/code&gt; option - &lt;a href=&#34;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/default-country-ip.html&#34;&gt;see example&lt;/a&gt;). Note that the &lt;code&gt;&#34;auto&#34;&lt;/code&gt; option will not update the country selection if the input already contains a number.&lt;/p&gt; &#xA;&lt;p&gt;If you leave &lt;code&gt;initialCountry&lt;/code&gt; blank, it will default to the first country in the list.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;localizedCountries&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{}&lt;/code&gt;&lt;br&gt; Allows to translate the countries by its given iso code e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{ &#39;de&#39;: &#39;Deutschland&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;nationalMode&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;&lt;br&gt; Allow users to enter national numbers (and not have to think about international dial codes). Formatting, validation and placeholders still work. Then you can use &lt;code&gt;getNumber&lt;/code&gt; to extract a full international number - &lt;a href=&#34;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/national-mode.html&#34;&gt;see example&lt;/a&gt;. This option now defaults to &lt;code&gt;true&lt;/code&gt;, and it is recommended that you leave it that way as it provides a better experience for the user.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;onlyCountries&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Array&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;&lt;br&gt; In the dropdown, display only the countries you specify - &lt;a href=&#34;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/only-countries-europe.html&#34;&gt;see example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;placeholderNumberType&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;&#34;MOBILE&#34;&lt;/code&gt;&lt;br&gt; Specify &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/raw/master/src/js/utils.js#L119&#34;&gt;one of the keys&lt;/a&gt; from the global enum &lt;code&gt;intlTelInputUtils.numberType&lt;/code&gt; e.g. &lt;code&gt;&#34;FIXED_LINE&#34;&lt;/code&gt; to set the number type to use for the placeholder.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;preferredCountries&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Array&lt;/code&gt; Default: &lt;code&gt;[&#34;us&#34;, &#34;gb&#34;]&lt;/code&gt;&lt;br&gt; Specify the countries to appear at the top of the list.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;del&gt;preventInvalidNumbers&lt;/del&gt; [REMOVED]&lt;/strong&gt;&lt;br&gt; Prevent the user from entering invalid characters. Unfortunately this had to be removed for the reasons listed here: &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/issues/79#issuecomment-121799307&#34;&gt;#79 Limit Input Characters to Formatted String Length&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;separateDialCode&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;&lt;br&gt; Display the country dial code next to the selected flag so it&#39;s not part of the typed number. Note that this will disable &lt;code&gt;nationalMode&lt;/code&gt; because technically we are dealing with international numbers, but with the dial code separated.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.github.com/jackocnr/intl-tel-input/master/screenshots/separateDialCode.png&#34; width=&#34;257px&#34; height=&#34;46px&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;utilsScript&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;&#34;&#34;&lt;/code&gt; Example: &lt;code&gt;&#34;build/js/utils.js&#34;&lt;/code&gt;&lt;br&gt; Enable formatting/validation etc. by specifying the URL of the included utils.js script (or alternatively just point it to the file on &lt;a href=&#34;https://cdnjs.com/libraries/intl-tel-input&#34;&gt;cdnjs.com&lt;/a&gt;). The script is fetched only when the page has finished loading (on the window load event) to prevent blocking (the script is ~215KB). When instantiating the plugin, if the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;Promise&lt;/a&gt; object is defined, one of those is returned under the &lt;code&gt;promise&lt;/code&gt; instance property, so you can do something like &lt;code&gt;iti.promise.then(callback)&lt;/code&gt; to know when initialisation requests like this have finished. See &lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#utilities-script&#34;&gt;Utilities Script&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Public Methods&lt;/h2&gt; &#xA;&lt;p&gt;In these examples, &lt;code&gt;iti&lt;/code&gt; refers to the plugin instance which gets returned when you initialise the plugin e.g. &lt;code&gt;var iti = intlTelInput(input)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;destroy&lt;/strong&gt;&lt;br&gt; Remove the plugin from the input, and unbind any event listeners.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;iti.destroy();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;getExtension&lt;/strong&gt;&lt;br&gt; Get the extension from the current number. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var extension = iti.getExtension();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns a string e.g. if the input value was &lt;code&gt;&#34;(702) 555-5555 ext. 1234&#34;&lt;/code&gt;, this would return &lt;code&gt;&#34;1234&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;getNumber&lt;/strong&gt;&lt;br&gt; Get the current number in the given format (defaults to &lt;a href=&#34;http://en.wikipedia.org/wiki/E.164&#34;&gt;E.164 standard&lt;/a&gt;). The different formats are available in the enum &lt;code&gt;intlTelInputUtils.numberFormat&lt;/code&gt; - which you can see &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/raw/master/src/js/utils.js#L109&#34;&gt;here&lt;/a&gt;. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option. &lt;em&gt;Note that even if &lt;code&gt;nationalMode&lt;/code&gt; is enabled, this can still return a full international number. Also note that this method expects a valid number, and so should only be used after validation.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var number = iti.getNumber();&#xA;// or&#xA;var number = iti.getNumber(intlTelInputUtils.numberFormat.E164);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns a string e.g. &lt;code&gt;&#34;+17024181234&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;getNumberType&lt;/strong&gt;&lt;br&gt; Get the type (fixed-line/mobile/toll-free etc) of the current number. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var numberType = iti.getNumberType();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns an integer, which you can match against the &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/raw/master/src/js/utils.js#L119&#34;&gt;various options&lt;/a&gt; in the global enum &lt;code&gt;intlTelInputUtils.numberType&lt;/code&gt; e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;if (numberType === intlTelInputUtils.numberType.MOBILE) {&#xA;    // is a mobile number&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note that in the US there&#39;s no way to differentiate between fixed-line and mobile numbers, so instead it will return &lt;code&gt;FIXED_LINE_OR_MOBILE&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;getSelectedCountryData&lt;/strong&gt;&lt;br&gt; Get the country data for the currently selected flag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var countryData = iti.getSelectedCountryData();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{&#xA;  name: &#34;Afghanistan (‫افغانستان‬‎)&#34;,&#xA;  iso2: &#34;af&#34;,&#xA;  dialCode: &#34;93&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;getValidationError&lt;/strong&gt;&lt;br&gt; Get more information about a validation error. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var error = iti.getValidationError();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns an integer, which you can match against the &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/raw/master/src/js/utils.js#L153&#34;&gt;various options&lt;/a&gt; in the global enum &lt;code&gt;intlTelInputUtils.validationError&lt;/code&gt; e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;if (error === intlTelInputUtils.validationError.TOO_SHORT) {&#xA;    // the number is too short&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;isValidNumber&lt;/strong&gt;&lt;br&gt; Validate the current number - &lt;a href=&#34;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/is-valid-number.html&#34;&gt;see example&lt;/a&gt;. Expects an internationally formatted number (unless &lt;code&gt;nationalMode&lt;/code&gt; is enabled). If validation fails, you can use &lt;code&gt;getValidationError&lt;/code&gt; to get more information. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option. Also see &lt;code&gt;getNumberType&lt;/code&gt; if you want to make sure the user enters a certain type of number e.g. a mobile number.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var isValid = iti.isValidNumber();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns: &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;setCountry&lt;/strong&gt;&lt;br&gt; Change the country selection (e.g. when the user is entering their address).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;iti.setCountry(&#34;gb&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;setNumber&lt;/strong&gt;&lt;br&gt; Insert a number, and update the selected flag accordingly. &lt;em&gt;Note that if &lt;code&gt;formatOnDisplay&lt;/code&gt; is enabled, this will attempt to format the number according to the &lt;code&gt;nationalMode&lt;/code&gt; option.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;iti.setNumber(&#34;+447733123456&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;setPlaceholderNumberType&lt;/strong&gt;&lt;br&gt; Change the placeholderNumberType option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;iti.setPlaceholderNumberType(&#34;FIXED_LINE&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Static Methods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;getCountryData&lt;/strong&gt;&lt;br&gt; Get all of the plugin&#39;s country data - either to re-use elsewhere e.g. to populate a country dropdown - &lt;a href=&#34;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/country-sync.html&#34;&gt;see example&lt;/a&gt;, or to modify - &lt;a href=&#34;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/modify-country-data.html&#34;&gt;see example&lt;/a&gt;. Note that any modifications must be done before initialising the plugin.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var countryData = window.intlTelInputGlobals.getCountryData();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns an array of country objects:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;[{&#xA;  name: &#34;Afghanistan (‫افغانستان‬‎)&#34;,&#xA;  iso2: &#34;af&#34;,&#xA;  dialCode: &#34;93&#34;&#xA;}, ...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;getInstance&lt;/strong&gt;&lt;br&gt; After initialising the plugin, you can always access the instance again using this method, by just passing in the relevant input element.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var input = document.querySelector(&#39;#phone&#39;);&#xA;var iti = window.intlTelInputGlobals.getInstance(input);&#xA;iti.isValidNumber(); // etc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;loadUtils&lt;/strong&gt;&lt;br&gt; An alternative to the &lt;code&gt;utilsScript&lt;/code&gt; option, this method lets you manually load the utils.js script on demand, to enable formatting/validation etc. See &lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#utilities-script&#34;&gt;Utilities Script&lt;/a&gt; for more information. This method should only be called once per page. If the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;Promise&lt;/a&gt; object is defined, one of those is returned so you can use &lt;code&gt;loadUtils().then(callback)&lt;/code&gt; to know when it&#39;s finished.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;window.intlTelInputGlobals.loadUtils(&#34;build/js/utils.js&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;del&gt;setCountryData&lt;/del&gt; [REMOVED]&lt;/strong&gt;&lt;br&gt; Set the plugin&#39;s country data. This method was removed because it makes much more sense to just use &lt;code&gt;getCountryData&lt;/code&gt; and then modify that (&lt;a href=&#34;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/modify-country-data.html&#34;&gt;see example&lt;/a&gt;) instead of having to generate the whole thing yourself - the country data has become increasingly complicated and for each country we now have five properties: the name, &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2&#34;&gt;iso2 country code&lt;/a&gt;, international dial code, priority (in case two countries have the same international dial code), and finally a list of area codes used in that country - see &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/raw/master/src/js/data.js#L36&#34;&gt;data.js&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Events&lt;/h2&gt; &#xA;&lt;p&gt;You can listen for the following events on the input.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;countrychange&lt;/strong&gt;&lt;br&gt; This is triggered when the user selects a country from the dropdown.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;input.addEventListener(&#34;countrychange&#34;, function() {&#xA;  // do something with iti.getSelectedCountryData()&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See an example here: &lt;a href=&#34;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/country-sync.html&#34;&gt;Country sync&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;open:countrydropdown&lt;/strong&gt;&lt;br&gt; This is triggered when the user opens the dropdown.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;close:countrydropdown&lt;/strong&gt;&lt;br&gt; This is triggered when the user closes the dropdown.&lt;/p&gt; &#xA;&lt;h2&gt;Utilities Script&lt;/h2&gt; &#xA;&lt;p&gt;The utilities script (&lt;a href=&#34;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/build/js/utils.js&#34;&gt;build/js/utils.js&lt;/a&gt;) is a custom build of Google&#39;s &lt;a href=&#34;https://github.com/googlei18n/libphonenumber&#34;&gt;libphonenumber&lt;/a&gt; which enables the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Formatting upon initialisation, as well as with &lt;code&gt;getNumber&lt;/code&gt; and &lt;code&gt;setNumber&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Validation with &lt;code&gt;isValidNumber&lt;/code&gt;, &lt;code&gt;getNumberType&lt;/code&gt; and &lt;code&gt;getValidationError&lt;/code&gt; methods&lt;/li&gt; &#xA; &lt;li&gt;Placeholder set to an example number for the selected country - even specify the type of number (e.g. mobile) using the &lt;code&gt;placeholderNumberType&lt;/code&gt; option&lt;/li&gt; &#xA; &lt;li&gt;Extract the standardised (E.164) international number with &lt;code&gt;getNumber&lt;/code&gt; even when using the &lt;code&gt;nationalMode&lt;/code&gt; option&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;International number formatting/validation is hard (it varies by country/district, and we currently support ~230 countries). The only comprehensive solution I have found is libphonenumber, from which I have precompiled the relevant parts into a single JavaScript file and included in the build directory. Unfortunately even after minification it is still ~215KB, but if you use the &lt;code&gt;utilsScript&lt;/code&gt; option then it will only fetch the script when the page has finished loading (to prevent blocking). If size is not a concern, then you can manually include the script yourself however you like, and as long as it has loaded before you initialise the plugin then it should work fine.&lt;/p&gt; &#xA;&lt;p&gt;To recompile the utils script yourself (e.g. to update the version of libphonenumber it is built from), see the &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/raw/master/.github/CONTRIBUTING.md#updating-to-a-new-version-of-libphonenumber&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Full width input&lt;/strong&gt;&lt;br&gt; If you want your input to be full-width, you need to set the container to be the same i.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.iti { width: 100%; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;dropdownContainer: dropdown not closing on scroll&lt;/strong&gt;&lt;br&gt; If you have a scrolling container other than &lt;code&gt;window&lt;/code&gt; which is causing problems by not closing the dropdown on scroll, simply listen for the scroll event on that element, and trigger a scroll event on &lt;code&gt;window&lt;/code&gt;, which in turn will close the dropdown e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;scrollingElement.addEventListener(&#34;scroll&#34;, function() {&#xA;  var e = document.createEvent(&#39;Event&#39;);&#xA;  e.initEvent(&#34;scroll&#34;, true, true);&#xA;  window.dispatchEvent(e);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Input margin&lt;/strong&gt;&lt;br&gt; For the sake of alignment, the default CSS forces the input&#39;s vertical margin to &lt;code&gt;0px&lt;/code&gt;. If you want vertical margin, you should add it to the container (with class &lt;code&gt;iti&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Displaying error messages&lt;/strong&gt;&lt;br&gt; If your error handling code inserts an error message before the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; it will break the layout. Instead you must insert it before the container (with class &lt;code&gt;iti&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Dropdown position&lt;/strong&gt;&lt;br&gt; The dropdown should automatically appear above/below the input depending on the available space. For this to work properly, you must only initialise the plugin after the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; has been added to the DOM.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Placeholders&lt;/strong&gt;&lt;br&gt; In order to get the automatic country-specific placeholders, simply omit the placeholder attribute on the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bootstrap input groups&lt;/strong&gt;&lt;br&gt; A couple of CSS fixes are required to get the plugin to play nice with Bootstrap &lt;a href=&#34;https://getbootstrap.com/docs/3.3/components/#input-groups&#34;&gt;input groups&lt;/a&gt;. You can see a Codepen &lt;a href=&#34;http://codepen.io/jackocnr/pen/EyPXed&#34;&gt;here&lt;/a&gt;.&lt;br&gt; &lt;em&gt;Note: there is currently &lt;a href=&#34;https://bugs.webkit.org/show_bug.cgi?id=141822&#34;&gt;a bug&lt;/a&gt; in Mobile Safari which causes a crash when you click the dropdown arrow (a CSS triangle) inside an input group. The simplest workaround is to remove the CSS triangle with this line:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.iti__arrow { border: none; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/raw/master/.github/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; for instructions on setting up the project and making changes, and also for how to update to a new version of libphonenumber, or how to update the flag images.&lt;/p&gt; &#xA;&lt;h2&gt;Attributions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flag images from &lt;a href=&#34;https://github.com/behdad/region-flags&#34;&gt;region-flags&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Original country data from mledoze&#39;s &lt;a href=&#34;https://github.com/mledoze/countries&#34;&gt;World countries in JSON, CSV and XML&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Formatting/validation/example number code from &lt;a href=&#34;https://github.com/googlei18n/libphonenumber&#34;&gt;libphonenumber&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Feature contributions are listed in the wiki: &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/wiki/Contributions&#34;&gt;Contributions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;List of &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/wiki/Integrations&#34;&gt;integrations with intl-tel-input&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Android native port: &lt;a href=&#34;https://github.com/Rimoto/IntlPhoneInput&#34;&gt;IntlPhoneInput&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Typescript type definitions are available in the &lt;a href=&#34;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/master/types/intl-tel-input/index.d.ts&#34;&gt;DefinitelyTyped repo&lt;/a&gt; (more info &lt;a href=&#34;https://github.com/jackocnr/intl-tel-input/issues/433#issuecomment-228517623&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img width=&#34;200&#34; src=&#34;https://www.browserstack.com/images/layout/browserstack-logo-600x315.png&#34;&gt;&lt;br&gt; Testing powered by &lt;a href=&#34;https://www.browserstack.com/open-source&#34;&gt;BrowserStack Open-Source Program&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Sunny-117/js-challenges</title>
    <updated>2023-01-14T01:37:33Z</updated>
    <id>tag:github.com,2023-01-14:/Sunny-117/js-challenges</id>
    <link href="https://github.com/Sunny-117/js-challenges" rel="alternate"></link>
    <summary type="html">&lt;p&gt;集锦前端JavaScript编程题，Not just for interviews&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Welcome to js-challenges 👋&lt;/h1&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Sunny-117/js-challenges/main/js-challenges-logo.png&#34;&gt; &lt;/h1&gt; &#xA;&lt;p&gt; &lt;img alt=&#34;Version&#34; src=&#34;https://img.shields.io/badge/version-1.0.0-blue.svg?cacheSeconds=2592000&#34;&gt; &lt;a href=&#34;https://github.com/Sunny-117/js-challenges&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Documentation&#34; src=&#34;https://img.shields.io/badge/documentation-yes-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://zh.wikipedia.org/zh-cn/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;License: MIT&#34; src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/zhiqiangfu6sun&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Twitter: zhiqiangfu6sun&#34; src=&#34;https://img.shields.io/twitter/follow/zhiqiangfu6sun.svg?style=social&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;集锦大厂面试常考的 前端手写题和 leetcode 算法题&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;🏠 &lt;a href=&#34;https://github.com/Sunny-117/js-challenges&#34;&gt;Homepage&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;👤 &lt;strong&gt;sunny-117&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://sunny-117.github.io/blog/&#34;&gt;https://sunny-117.github.io/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/zhiqiangfu6sun&#34;&gt;@zhiqiangfu6sun&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Github: &lt;a href=&#34;https://github.com/sunny-117&#34;&gt;@sunny-117&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;personal share: &lt;a href=&#34;https://jzq422bol5.feishu.cn/docx/doxcnyogD4POabvLHoa1yoEH9W0&#34;&gt;个人分享&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;CONTENT&lt;/h1&gt; &#xA;&lt;p&gt;前端手写题集锦 use js 记录大厂&lt;strong&gt;笔试，面试常考&lt;/strong&gt;手写题，2022 年前端面试中常见的 leetcode 算法题, 致力打造最全的前端 JavaScript 手写题题库和答案的最优解&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;题目来源：总结了牛客截止到 2022 年 10 月的所有大厂手写题[100%]，掘金部分出名的手写题文章，备战前端春招，秋招好友的总结好的题目(github), 就不一一列举链接啦，总之此项目题目来源于社区，答案也由社区讨论后 merge，也完全服务于社区。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;谢谢您的 star，您的 star 是我更新的动力 🥳&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;里面有答案，为了让你们有一个参考，不过非常希望你们能提供自己的思路，指出答案中存在的问题，复杂度优化等等， 期待你们的 contribute, 想来一起维护这个项目，可以联系我，成为 contributor&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;最后我把社区的好的答案汇总到一个目录下，答案专栏，方便刷题&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;主要是让大家讨论出最优解，然后 merge，一起贡献这个项目，有些答案有点问题，所以我给出的答案仅作参考，也欢迎发现的小伙伴提 PR&lt;/p&gt; &#xA;&lt;h2&gt;🤝 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions, issues and feature requests are welcome!&lt;br&gt;Feel free to check &lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues&#34;&gt;issues page&lt;/a&gt;. You can also take a look at the &lt;a href=&#34;https://github.com/Sunny-117/js-challenges#%E8%B4%A1%E7%8C%AE%E6%AD%A4%E9%A1%B9%E7%9B%AE&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thank you to all the people who already contributed to js-challenges!&lt;/p&gt; &#xA;&lt;!-- readme: collaborators,contributors -start --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Sunny-117&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/73089592?v=4&#34; width=&#34;100;&#34; alt=&#34;Sunny-117&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Sunny-117&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Nasuke&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/78846539?v=4&#34; width=&#34;100;&#34; alt=&#34;Nasuke&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Nasuke&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/lzxjack&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/70835990?v=4&#34; width=&#34;100;&#34; alt=&#34;lzxjack&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;飞鸟&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/FailurMan&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/94963737?v=4&#34; width=&#34;100;&#34; alt=&#34;FailurMan&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;FailurMan&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/object-kaz&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/54239670?v=4&#34; width=&#34;100;&#34; alt=&#34;object-kaz&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Kaz&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/lhp96&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/72397995?v=4&#34; width=&#34;100;&#34; alt=&#34;lhp96&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;HuiPeng Lu&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/lechang-zhang&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/63288975?v=4&#34; width=&#34;100;&#34; alt=&#34;lechang-zhang&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Lechang Zhang&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/LevyEvans-s&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/74438804?v=4&#34; width=&#34;100;&#34; alt=&#34;LevyEvans-s&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;SakadaGintoki&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/lxy-Jason&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/94227696?v=4&#34; width=&#34;100;&#34; alt=&#34;lxy-Jason&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Lxy-Jason&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Ayu-1019&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/76982270?v=4&#34; width=&#34;100;&#34; alt=&#34;Ayu-1019&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Richard Zhang&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/CwRv07&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/71303732?v=4&#34; width=&#34;100;&#34; alt=&#34;CwRv07&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;卷心菜汪&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/ZZK520&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/55746960?v=4&#34; width=&#34;100;&#34; alt=&#34;ZZK520&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;朱志康&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/qiuye-zhou&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/75529722?v=4&#34; width=&#34;100;&#34; alt=&#34;qiuye-zhou&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;秋叶ゞ&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- readme: collaborators,contributors -end --&gt; &#xA;&lt;h1&gt;js-challenges 用户微信群&lt;/h1&gt; &#xA;&lt;p&gt;主要用来解答 js-challenges 用户的疑问，js-challenges 的贡献，计划 js-challenges 的未来(建议)&lt;/p&gt; &#xA;&lt;p&gt;欢迎加我微信，我拉你进群：17560850561&lt;/p&gt; &#xA;&lt;center class=&#34;half&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Sunny-117/js-challenges/main/assets/qun.png&#34; width=&#34;100&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Sunny-117/js-challenges/main/assets/me.png&#34; width=&#34;100&#34;&gt; &#xA;&lt;/center&gt; &#xA;&lt;!-- ![](assets/2023-01-11-13-05-42.png)![](assets/2023-01-11-13-08-34.png) --&gt; &#xA;&lt;h1&gt;前端 JavaScript 手写题&lt;/h1&gt; &#xA;&lt;h2&gt;JavaScript HOT 100 题&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;中大厂面试，最常考的 100 个题，每一题都非常具有代表性，想要准备面试突击的同学，优先看这些题，祝在座的每一位都能拿到满意的 offer&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/1&#34;&gt;实现 Promise.all&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/37&#34;&gt;JSON2DOM = react 的 render 函数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/40&#34;&gt;树形结构转成列表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/41&#34;&gt;列表转成树形结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/9&#34;&gt;Array.prototype.flat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/32&#34;&gt;instanceof&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/30&#34;&gt;call apply bind&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/11&#34;&gt;Array.prototype.map&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/48&#34;&gt;正则表达式模版字符串&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/20&#34;&gt;lodash.get&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/58&#34;&gt;深拷贝&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/59&#34;&gt;寄生组合式继承&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/60&#34;&gt;发布订阅者模式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/320&#34;&gt;岛屿数量&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;TODOS&lt;/p&gt; &#xA;&lt;h2&gt;实现 Promise （hot）&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/8&#34;&gt;完整实现 Promise A+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/1&#34;&gt;实现 Promise.all&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/2&#34;&gt;实现 Promise.prototype.finally&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/3&#34;&gt;实现 Promise.allSettled&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/4&#34;&gt;实现 Promise.race&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/5&#34;&gt;实现 Promise.prototype.catch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/6&#34;&gt;Promise.resolve &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/7&#34;&gt;Promise.reject&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Promise 周边场景题（hot）&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/164&#34;&gt;交通灯&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/163&#34;&gt;封装异步的 fetch，使用 async await 方式来使用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/162&#34;&gt;repeat(console.log, 5, 1000)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/161&#34;&gt;封装一个工具函数输入一个 promiseA 返回一个 promiseB 如果超过 1s 没返回则抛出异常如果正常则输出正确的值&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/160&#34;&gt;请求 5s 未完成就终止&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/159&#34;&gt;实现一个 sleep 函数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/158&#34;&gt;js 每隔一秒打印 1,2,3,4,5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/156&#34;&gt;使用 setTimeout 实现 setInterval&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/155&#34;&gt;promise 实现图片异步加载&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/154&#34;&gt;使用 Promise 封装 AJAX 请求&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/157&#34;&gt;我们能反过来使用 setinterval 模拟实现 settimeout 吗？ &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/172&#34;&gt;异步任务：依次发送 3 次网络请求，拿到服务器数据&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/171&#34;&gt;实现网络请求超时判断，超过三秒视为超时&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/170&#34;&gt;promise 中断请求&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/169&#34;&gt;给定一系列的 api，测量上传速度（实现的时候用的 GET 请求）并选择一个加载时间最短的 api&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/168&#34;&gt;settimeout 系统补偿时间&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/167&#34;&gt;setTimeout 准时&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/166&#34;&gt;请求五秒未完成则终止&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/165&#34;&gt;并发多个请求，返回先得到 response 的。函数输入为 url 数组，输出为第一个返回的 response 的结果&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/153&#34;&gt;JS 异步数据流，实现并发异步请求，结果顺序输出&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/152&#34;&gt;Promise 串行&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/151&#34;&gt;处理高并发, 100 条数据，带宽为 10， 跑满带宽&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/150&#34;&gt;设计一个简单的任务队列, 要求分别在 1,3,4 秒后打印出 &#34;1&#34;, &#34;2&#34;, &#34;3&#34;；&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/149&#34;&gt;实现有并行限制的 Promise 调度器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/148&#34;&gt;实现 Scheduler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/147&#34;&gt;有并发限制的 Promise.all(ts 类型) &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/146&#34;&gt;实现 如果上一次的没请求完，之后的就无响应&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/145&#34;&gt;使用 Promise 实现每隔三秒输出时间&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/144&#34;&gt;使用 Promise 改写回调地狱&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/143&#34;&gt;设计一个函数，该函数的参数为可同时发送请求的大小，返回一个函数，该函数的参数为要请求的 url。 实现的效果为，同时发送 n 个请求，当有请求返回后往请求队列里 push 新的请求，并输出刚刚结束的请求的返回值&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/142&#34;&gt;Promise.retry 超时重新请求，并在重试一定次数依然失败时输出缓存内容&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/141&#34;&gt;写一个 mySetInterVal(fn, a, b)，每次间隔 a,a+b,a+2b 的时间，然后写一个 myClear，停止上面的 mySetInterVal&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;JavaScript 常考手写题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/140&#34;&gt;产生一个不重复的随机数组&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/280&#34;&gt;await async 如何实现 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/138&#34;&gt;使用递归完成 1 到 100 的累加 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/137&#34;&gt;打印出 1~10000 以内的对称数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/136&#34;&gt;实现一个字符串匹配算法 indexOf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/135&#34;&gt;请实现一个模块 math，支持链式调用 math.add(2,4).minus(3).times(2); &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/134&#34;&gt;手写用 ES6proxy 如何实现 arr[-1] 的访问（滴滴 2020）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/133&#34;&gt;有一堆整数，请把他们分成三份，确保每一份和尽量相等（11，42，23，4，5，6 4 5 6 11 23 42 56 78 90） &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/132&#34;&gt;之字形打印矩阵&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/131&#34;&gt;数组中的最大值&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/130&#34;&gt;尾递归（斐波那契数列&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/129&#34;&gt;实现简单路由 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/128&#34;&gt;封装一个 localstorage 的 setItem 和 getItem 方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/127&#34;&gt;1-1000 回文数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/126&#34;&gt;随机生成字符串&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/125&#34;&gt;判断一个字符串是否为驼峰字符串， judge(&#39;ByteDance&#39;,&#39;BD&#39;) -&amp;gt; true judge(&#39;Bytedance&#39;,&#39;BD&#39;) -&amp;gt; false&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/124&#34;&gt;压缩字符串&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/123&#34;&gt;Map 场景题 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/122&#34;&gt;输入 50a6we8y20x 输出 50 个 a，6 个 we，8 个 y，20 个 x&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/121&#34;&gt;手写 defineProperty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/120&#34;&gt;String string 值一样返回 true Object Object 返回 true function function 都是声明的一个新的变量 返回 false&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/119&#34;&gt;对输入的字符串：去除其中的字符&#39;b&#39;；去除相邻的&#39;a&#39;和&#39;c&#39;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/118&#34;&gt;用一行代码，将数组中的字符串和字符串对象(new String(123))直接判定出来&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/117&#34;&gt;before&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/116&#34;&gt;实现一下 console.log &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/115&#34;&gt;实现(5).add(3).minus(2)功能&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/114&#34;&gt;将十进制数字转为二进制数字字符串&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/113&#34;&gt;封装 remove child.remove()销毁自身&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/112&#34;&gt;字符串中字母的出现次数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/111&#34;&gt;输出一个等腰三角形&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/110&#34;&gt;实现一个函数 a，使其奇数次调用时返回 1，偶数次调用时返回 2（不能使用全局变量）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/109&#34;&gt;求 最接近的值&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/108&#34;&gt;不用循环求和&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/107&#34;&gt;连续赋值操作&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/106&#34;&gt;输入一串字符串，根据字符串求出每个字母的数量并返回结果对象。（数字为 1 时可省略&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/105&#34;&gt;创建包含 10 个 1 的数组 多种方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/104&#34;&gt;[&#39;zm&#39;, &#39;za&#39;, &#39;b&#39;, &#39;lm&#39;, &#39;ln&#39;, &#39;k&#39;] &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/103&#34;&gt;[&#34;0-&amp;gt;2&#34;, &#34;4-&amp;gt;5&#34;, &#34;7&#34;, &#34;13&#34;, &#34;15-&amp;gt;16&#34;] &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/102&#34;&gt;[&#39;ab&#39;, &#39;c&#39;, &#39;ab&#39;, &#39;d&#39;, &#39;c&#39;] =&amp;gt; [&#39;ab1&#39;, &#39;c1&#39; ,&#39;ab2&#39;, &#39;d&#39;, &#39;c2&#39;] &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/101&#34;&gt;移除空属性&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/100&#34;&gt;判断两个对象是否相等&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/98&#34;&gt;一个数组，找出每个数组元素右侧第一个比当前数大的数的下标，时间复杂度 O(N)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/97&#34;&gt;寻找出现次数最多的三个标签&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/96&#34;&gt;素数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/95&#34;&gt;实现日期格式化函数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/94&#34;&gt;实现 jsonp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/93&#34;&gt;URL 反转 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/92&#34;&gt;解析 URL Params 为对象&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/91&#34;&gt;调用计数器（支持重置）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/90&#34;&gt;颜色生成&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/89&#34;&gt;JavaScript 怎么清空数组&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/88&#34;&gt;判断 A、B 数组的包含关系（值和数量），A 属于 B 返回 1，B 属于 A 返回 2，两者相等返回 0，其他返回-1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/87&#34;&gt;对象的合并&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/86&#34;&gt;实现一个 无限延伸数组&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/85&#34;&gt;多行字符串转二维数组&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/84&#34;&gt;请实现一个通用的 Array 解构赋值&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/83&#34;&gt;数组合并&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/82&#34;&gt;数组交集，并集，差集&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/81&#34;&gt;多维数组全排列&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/80&#34;&gt;判断对象是否存在循环引用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/79&#34;&gt;实现函数 solution(arr, k)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/78&#34;&gt;逆对象扁平&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/77&#34;&gt;对象扁平化&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/76&#34;&gt;实现 执行一次的函数 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/75&#34;&gt;链式调用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/74&#34;&gt;偏函数 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/73&#34;&gt;实现管道函数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/72&#34;&gt;手写事件代理（委托） &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/71&#34;&gt;数据类型判断&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/70&#34;&gt;类数组转数组&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/69&#34;&gt;预加载&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/68&#34;&gt;图片懒加载&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/67&#34;&gt;数组去重&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/66&#34;&gt;防抖 节流&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/65&#34;&gt;函数组合 compose redux-saga koa 洋葱模型&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/64&#34;&gt;sum(x,y)和 sum(x)(y)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/63&#34;&gt;curry 柯里化&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/252&#34;&gt;实现 xxx 时间之前的函数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/253&#34;&gt;n 个 2 的 n 次方之和&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/254&#34;&gt;无限动画&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/255&#34;&gt;瀑布流&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/256&#34;&gt;匹配 &#34;a*c&#34;, &#34;abcaacc&#34; &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/257&#34;&gt;一个字符串中是否出现某串字符,出现的话返回索引&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/258&#34;&gt;实现一个属性选择器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/259&#34;&gt;字符串转数字&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/260&#34;&gt;实现一个跨浏览器事件工具&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/261&#34;&gt;12 调用计数器（支持重置）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/262&#34;&gt;实现内存函数缓存函数调用结果&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/263&#34;&gt;返回给定七个扑克牌是否有同花顺，数据结构 [{num: 1, hua: &#39;s&#39;}, ...]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/264&#34;&gt;JS 定义一个 log 方法 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/265&#34;&gt;阿拉伯数字专汉字(偏难)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/266&#34;&gt;用代码实现把字符串转换成 base64 编码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/272&#34;&gt;设计 LRU 缓存结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/382&#34;&gt;实现一个 LazyMan &lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ts 类型体操&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/339&#34;&gt;myPick&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/340&#34;&gt;myReadonly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/341&#34;&gt;tuple to object&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/342&#34;&gt;first of Array&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/343&#34;&gt;tuple of Length&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/344&#34;&gt;myExclude&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/345&#34;&gt;awaited&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/346&#34;&gt;if&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/347&#34;&gt;concat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/348&#34;&gt;includes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/375&#34;&gt;Trim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;设计模式相关&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/62&#34;&gt;观察者模式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/60&#34;&gt;发布订阅者模式&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;树-场景题（hot）&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/36&#34;&gt;DOM2JSON&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/37&#34;&gt;JSON2DOM = react 的 render 函数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/38&#34;&gt;计算目录树的深度&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/39&#34;&gt;树形结构获取路径名&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/40&#34;&gt;树形结构转成列表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/41&#34;&gt;列表转成树形结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/42&#34;&gt;对象树遍历&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/43&#34;&gt;获取树对象属性&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/44&#34;&gt;查找 json 中的 children 路径&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/45&#34;&gt;对象字符串转化成树形结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/46&#34;&gt;判断有无符合路径和 -&amp;gt; 打印所有路径&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/47&#34;&gt;获取树结构中的 name：getName&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;实现 JS 原生方法&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/9&#34;&gt;Array.prototype.flat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/10&#34;&gt;Array.prototype.forEach&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/11&#34;&gt;Array.prototype.map&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/12&#34;&gt;Array.prototype.filter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/13&#34;&gt;Array.prototype.reduce&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/14&#34;&gt;Array.prototype.fill&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/15&#34;&gt;Array.prototype.includes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/16&#34;&gt;Array.prototype.push&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/17&#34;&gt;Array.prototype.unshift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/18&#34;&gt;Array.prototype.copy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/19&#34;&gt;Array.prototype.getLevel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/337&#34;&gt;Array.prototype.interator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/21&#34;&gt;实现 es6 的 set 集合&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/22&#34;&gt;实现 es6 的 map 集合&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/23&#34;&gt;String.prototype.zpadStart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/25&#34;&gt;Object.assign&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/26&#34;&gt;Object.is&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/28&#34;&gt;JSON.stringify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/29&#34;&gt;JSON.parse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/30&#34;&gt;call apply bind&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/32&#34;&gt;instanceof&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/33&#34;&gt;trim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/34&#34;&gt;实现 new&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/35&#34;&gt;String.prototype.repeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/204&#34;&gt;String.prototype.includes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;JS 库函数实现&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/20&#34;&gt;lodash.get&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/99&#34;&gt;lodash.chunk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/222&#34;&gt;lodash.once&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/216&#34;&gt;classnames&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;js utils&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/24&#34;&gt;判断一个对象是否是 isPlainObject&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;手写 nodejs 模块&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/31&#34;&gt;promisify&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;正则相关&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/48&#34;&gt;正则表达式模版字符串&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/49&#34;&gt;正则判断手机号，qq，颜色，邮箱&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/50&#34;&gt;字符串的大小写取反&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/51&#34;&gt;检验字符串首尾是否含有数字&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/52&#34;&gt;去除字符串空格&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/53&#34;&gt;去除字符串中的字母&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/54&#34;&gt;正则：短横线 =&amp;gt; 驼峰&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/377&#34;&gt;正则：驼峰 =&amp;gt; 短横线&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/55&#34;&gt;对象 key 的驼峰转下划线&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/56&#34;&gt;判断字符串中是否存在连续的三个数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/57&#34;&gt;((2+3)+(3*4))+2----&amp;gt;[&#39;(2 + 3)+(3 * 4)&#39;, &#39;2 + 3&#39;, &#39;3 * 4&#39;] &lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;排序算法&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/193&#34;&gt;冒泡排序&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/194&#34;&gt;选择排序&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/195&#34;&gt;快速排序&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/196&#34;&gt;插入排序&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/197&#34;&gt;归并排序&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/202&#34;&gt;基数排序&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/201&#34;&gt;计数排序&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/200&#34;&gt;希尔排序&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/199&#34;&gt;桶排序&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/198&#34;&gt;堆排序&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;实现自定义 HOOK&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/192&#34;&gt;Hooks 怎么封装手势逻辑&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/191&#34;&gt;Hooks 实现移动端的滑动轮播插件 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/190&#34;&gt;如何用 Hooks 模拟 componentDidMount 与 componentWillUnmount&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/189&#34;&gt;实现一个 useBodyScrollLock ，当出现弹窗时 阻止背景滚动&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/188&#34;&gt;ts 实现 hooks: useInterval&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/187&#34;&gt;实现 useQuery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/186&#34;&gt;实现 useRequest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/327&#34;&gt;实现 usePosition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/328&#34;&gt;实现 useStorage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;组件设计题（Vue/React/JS 均可）&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/178&#34;&gt;全选&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/177&#34;&gt;轮播图&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/176&#34;&gt;根据 response 渲染 table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/175&#34;&gt;歌词滚动功能(hot)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/174&#34;&gt;实现一个 百度搜索框 （搜索提示）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/173&#34;&gt;实现 todos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/185&#34;&gt;计时器或倒计时组件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/184&#34;&gt;设计一个公会入驻信息提交页&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/183&#34;&gt;编码实现宽高不相同图片的自适配排列&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/182&#34;&gt;列表子元素顺序反转&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/181&#34;&gt;遍历树组件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/180&#34;&gt;选项卡&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/179&#34;&gt;拖拽&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;HTML CSS 手写题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/Front-end-handwritten-question/issues/203&#34;&gt;实现圆形环状进度条&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/224&#34;&gt;等边三角形&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/225&#34;&gt;实现 扇形&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/226&#34;&gt;实现平行四边形&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/227&#34;&gt;实现 九宫格&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/228&#34;&gt;实现一个秒针绕一点转动的效果&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/229&#34;&gt;实现一个 球 字节&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/230&#34;&gt;圆弧旋转&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/231&#34;&gt;使用 div 和 css 实现一个圆形，红色部分站 60%，绿色 40%&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/232&#34;&gt;现在有一个进度条，进度条中间有一串文字，当我的进度条覆盖了文字之后，文字要去进度条反色，怎么实现？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/233&#34;&gt;shadowDOM 实现 css 隔离&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/234&#34;&gt;两栏布局&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/235&#34;&gt;宽高自适应正方形&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/236&#34;&gt;1px 问题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/237&#34;&gt;实现 筛子 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/238&#34;&gt;css3 实现多行文字截断处理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/239&#34;&gt;三栏布局移动优先设计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/240&#34;&gt;css 实现一个自适应搜索框&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/241&#34;&gt;css 书卡布局&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/378&#34;&gt;实现宽高比例固定的 div&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;JS 实现基本数据结构&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/242&#34;&gt;队列结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/243&#34;&gt;哈希表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/244&#34;&gt;实现集合&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/245&#34;&gt;用 Javascript 创建一个单链表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/246&#34;&gt;树结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/247&#34;&gt;图结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/248&#34;&gt;栈结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/249&#34;&gt;js 实现 堆&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/250&#34;&gt;实现 Trie (前缀树)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/251&#34;&gt;top K&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;其他&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/283&#34;&gt;tools-js&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;前端常考 leetcode 算法题&lt;/h1&gt; &#xA;&lt;h2&gt;前端 HOT 100 题&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;所有题目的名称都对应 leetcode，可以自行搜索，完成题目后欢迎把答案贡献给 issue 评论区，大家讨论最优解后 merge 到答案文档区&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;矩阵相关&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/217&#34;&gt;螺旋矩阵&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/317&#34;&gt;旋转矩阵&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/318&#34;&gt;旋转图像&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/320&#34;&gt;岛屿数量&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/321&#34;&gt;矩形重叠&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;数组&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/268&#34;&gt;买卖股票的最佳时机&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/277&#34;&gt;最长递增子序列&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;链表&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/284&#34;&gt;删除排序链表中的重复元素&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/285&#34;&gt;反转链表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/286&#34;&gt;反转链表 II&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/287&#34;&gt;环形链表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/288&#34;&gt;环形链表 II&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/289&#34;&gt;合并两个有序链表 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/290&#34;&gt;链表中倒数第 k 个节点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/291&#34;&gt;两两交换链表中的节点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/292&#34;&gt;相交链表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/293&#34;&gt;K 个一组翻转链表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/294&#34;&gt;删除链表的倒数第 N 个结点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/295&#34;&gt;链表的中间结点&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;二叉树&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/296&#34;&gt;路径总和&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/297&#34;&gt;路径总和 II&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/298&#34;&gt;二叉树的所有路径&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/299&#34;&gt;二叉树的层序遍历&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/300&#34;&gt;二叉树的锯齿形层序遍历&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/301&#34;&gt;N 叉树的层序遍历&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/302&#34;&gt;二叉树的最大深度&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/303&#34;&gt;二叉树的前序遍历&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/304&#34;&gt;二叉树的完全性检验&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;子序列问题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/326&#34;&gt;最长递增子序列&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/306&#34;&gt;最长连续递增序列&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/307&#34;&gt;最长重复子数组&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/308&#34;&gt;最长公共子序列&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/309&#34;&gt;判断子序列 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/310&#34;&gt;不相交的线&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/311&#34;&gt;编辑距离&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;回文专题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/312&#34;&gt;最长回文子串&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/313&#34;&gt;回文数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/314&#34;&gt;验证回文串&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/315&#34;&gt;验证回文字符串 Ⅱ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/316&#34;&gt;分割回文串（字节广告）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;二分查找&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/351&#34;&gt;搜索旋转排序数组&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/352&#34;&gt;x 的平方根&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/353&#34;&gt;第一个错误的版本&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/354&#34;&gt;有序数组中的单一元素&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/355&#34;&gt;旋转数组的最小数字&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/356&#34;&gt;0～n-1中缺失的数字&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;滑动窗口&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/357&#34;&gt;无重复字符的最长子串&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/358&#34;&gt;字符串的排列&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/359&#34;&gt;和为s的连续正数序列&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;双指针&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/360&#34;&gt;盛最多水的容器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/361&#34;&gt;三数之和&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/362&#34;&gt;最接近的三数之和&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/363&#34;&gt;接雨水&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/364&#34;&gt;字符串相乘&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/365&#34;&gt;合并两个有序数组&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/366&#34;&gt;移动零&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/367&#34;&gt;字符串相加&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;单调队列&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/368&#34;&gt;滑动窗口最大值&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/369&#34;&gt;队列的最大值&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;位运算&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/370&#34;&gt;只出现一次的数字&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/371&#34;&gt;二进制中1的个数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/372&#34;&gt;数组中数字出现的次数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/issues/373&#34;&gt;不用加减乘除做加法&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;更新中&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Sunny-117/js-challenges/main/js.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Sunny-117/js-challenges/main/algorithm.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;后续计划&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 做成 OJ 判题系统&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 区分题目难易程度&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 单元测试&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 正确答案集合 merge&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;大家可以给仓库一些建议，本仓库资源来源于社区，也完全服务于社区&lt;/p&gt; &#xA;&lt;p&gt;社区建议收集区：&lt;a href=&#34;https://github.com/Sunny-117/js-challenges/discussions&#34;&gt;https://github.com/Sunny-117/js-challenges/discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Show your support&lt;/h2&gt; &#xA;&lt;p&gt;Give a ⭐️ if this project helped you!&lt;/p&gt; &#xA;&lt;h2&gt;📝 License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © 2022 &lt;a href=&#34;https://github.com/sunny-117&#34;&gt;sunny-117&lt;/a&gt;.&lt;br&gt; This project is &lt;a href=&#34;https://zh.wikipedia.org/zh-cn/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89&#34;&gt;MIT&lt;/a&gt; licensed.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;This README was generated with ❤️ by &lt;a href=&#34;https://github.com/kefranabg/readme-md-generator&#34;&gt;readme-md-generator&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>