<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-19T01:30:49Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fatwang2/coze2openai</title>
    <updated>2024-04-19T01:30:49Z</updated>
    <id>tag:github.com,2024-04-19:/fatwang2/coze2openai</id>
    <link href="https://github.com/fatwang2/coze2openai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Turn Coze API into OpenAI&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;C2O&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/fatwang2/coze2openai/main/README_CN.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Use Coze on your favorite OpenAI client.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project converts the Coze API to the OpenAI API format, giving you access to &lt;a href=&#34;https://www.coze.com&#34;&gt;Coze&lt;/a&gt; LLMs, knowledge base, plugins, and workflows within your preferred OpenAI clients.&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Convert Coze API into an OpenAI API&lt;/li&gt; &#xA; &lt;li&gt;Support streaming and blocking&lt;/li&gt; &#xA; &lt;li&gt;Supports multi-bot switching&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Preparation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Register with &lt;a href=&#34;https://www.coze.com&#34;&gt;Coze&lt;/a&gt; and obtain your API token &lt;img src=&#34;https://raw.githubusercontent.com/fatwang2/coze2openai/main/pictures/token.png&#34; alt=&#34;cozeapitoken&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create your bot and publish it to the API &lt;img src=&#34;https://raw.githubusercontent.com/fatwang2/coze2openai/main/pictures/api.png&#34; alt=&#34;cozeapi&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Obtain the bot&#39;s ID,the number after the bot parameter, and configure it as an environment variable&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;https://www.coze.com/space/73428668341****/bot/73428668*****&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;h3&gt;Zeabur&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zeabur.com/templates/BZ515Z?referralCode=fatwang2&#34;&gt;&lt;img src=&#34;https://zeabur.com/button.svg?sanitize=true&#34; alt=&#34;Deploy on Zeabur&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Vercel&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https://github.com/fatwang2/coze2openai&amp;amp;env=BOT_ID&amp;amp;envDescription=COZE_BOT_ID&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Vercel&#39;s serverless functions have a 10-second timeout limit.&lt;/p&gt; &#xA;&lt;h3&gt;Railway&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://railway.app/template/yM5tQL?referralCode=mDim7U&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Local Deployment&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Set the environment variable on &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;BOT_ID=xxxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install dependencies&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run the project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;const response = await fetch(&#39;http://localhost:3000/v1/chat/completions&#39;, {&#xA;  method: &#39;POST&#39;,&#xA;  headers: {&#xA;    &#39;Content-Type&#39;: &#39;application/json&#39;,&#xA;    &#39;Authorization&#39;: &#39;Bearer YOUR_COZE_API_KEY&#39;,&#xA;  },&#xA;  body: JSON.stringify({&#xA;    model: &#39;model_name&#39;,&#xA;    messages: [&#xA;      { role: &#39;system&#39;, content: &#39;You are a helpful assistant.&#39; },&#xA;      { role: &#39;user&#39;, content: &#39;Hello, how are you?&#39; },&#xA;    ],&#xA;  }),&#xA;});&#xA;&#xA;const data = await response.json();&#xA;console.log(data);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Environment Variable&lt;/h2&gt; &#xA;&lt;p&gt;This project provides some additional configuration items set with environment variables:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment Variable&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BOT_ID&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;The ID of the bot. Obtain it from the Develop page URL of your bot in Coze. The number after the bot parameter is the bot ID.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;73428668*****&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BOT_CONFIG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Configure different models to correspond to different bot ids to enable fast bot switching on the client side. Models that are not included will request the default BOT_ID&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;model_name_1&#34;: &#34;bot_id_1&#34;, &#34;model_name_2&#34;: &#34;bot_id_2&#34;, &#34;model_name_3&#34;: &#34;bot_id_3&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Coming Soon&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Image support&lt;/li&gt; &#xA; &lt;li&gt;Audio-to-text&lt;/li&gt; &#xA; &lt;li&gt;Text-to-audio&lt;/li&gt; &#xA; &lt;li&gt;Docker support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Available Now&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multi-bot switching&lt;/li&gt; &#xA; &lt;li&gt;Workflow, Plugins, Knowledge base&lt;/li&gt; &#xA; &lt;li&gt;Continuous dialogue with the history of chat&lt;/li&gt; &#xA; &lt;li&gt;Zeabur &amp;amp; Vercel &amp;amp; Railway deployment&lt;/li&gt; &#xA; &lt;li&gt;Streaming &amp;amp; Blocking&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to reach out for any questions or feedback&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sum4all.site/twitter&#34;&gt;X&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://sum4all.site/telegram&#34;&gt;telegram&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/fatwang2&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 60px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bpc-clone/bypass-paywalls-clean-filters</title>
    <updated>2024-04-19T01:30:49Z</updated>
    <id>tag:github.com,2024-04-19:/bpc-clone/bypass-paywalls-clean-filters</id>
    <link href="https://github.com/bpc-clone/bypass-paywalls-clean-filters" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bypass Paywalls Clean filters&lt;/h1&gt; &#xA;&lt;p&gt;Adblocker list which allows you to read articles from (supported) sites that implement a paywall (for a lot of sites you also need to install an userscript).&lt;br&gt; For some sites it will log you out (or block you to log in); caused by removing cookies or blocking general paywall-scripts.&lt;/p&gt; &#xA;&lt;p&gt;Disclaimer: the list doesn&#39;t support as many sites as the extension/add-on does though (and even less on iOS).&lt;br&gt; On iOS you can also use &lt;a href=&#34;https://apps.apple.com/us/app/shortcuts/id915249334&#34;&gt;Shortcuts&lt;/a&gt; app with &lt;a href=&#34;https://www.icloud.com/shortcuts/71648f5ad34f4d8f972718e5f3621ffe&#34;&gt;Unpaywall&lt;/a&gt; shortcut for some unsupported sites.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;h4&gt;adblocker filters&lt;/h4&gt; &#xA;&lt;p&gt;Use a browser which supports extensions/add-ons and install an adblocker (like uBlock Origin or AdGuard).&lt;br&gt; Now add custom (content)filter (copy link): &lt;a href=&#34;https://github.com/bpc-clone/bypass-paywalls-clean-filters/raw/main/bpc-paywall-filter.txt&#34;&gt;Bypass Paywalls Clean filters&lt;/a&gt;&lt;br&gt; Or subscribe: &lt;a href=&#34;https://filterlists.com/lists/bypass-paywalls-clean-filter&#34;&gt;subscribe on filterlists.com&lt;/a&gt; - &lt;a href=&#34;https://subscribe.adblockplus.org/?location=https%3A%2F%2Fgithub.com%2Fbpc-clone%2Fbypass-paywalls-clean-filters%2Fraw%2Fmain%2Fbpc-paywall-filter.txt&amp;amp;title=Bypass%20Paywalls%20Clean%20filters&#34;&gt;subscribe for AdGuard&lt;/a&gt; &lt;a href=&#34;https://github.com/bpc-clone/bypass-paywalls-clean-filters/raw/main&#34;&gt;https://github.com/bpc-clone/bypass-paywalls-clean-filters/raw/main&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Brave browser has only incorporated the filterlist (many sites also need userscript): enable it in &lt;a href=&#34;brave://adblock&#34;&gt;settings&lt;/a&gt;&lt;br&gt; On Android you can use &lt;a href=&#34;https://play.google.com/store/apps/details?id=mark.via.gp&#34;&gt;Via Browser&lt;/a&gt; which supports custom filterlists &amp;amp; userscripts.&lt;/p&gt; &#xA;&lt;p&gt;You can also install an app like AdGuard* (on Android &amp;amp; iOS/macOS) or &lt;a href=&#34;https://apps.apple.com/us/app/adlock-ads-blocker-privacy/id1506604517&#34;&gt;AdLock&lt;/a&gt; (on iOS).&lt;br&gt; This way you can use it with Chrome/Firefox (on Android) or Safari (on iOS/macOS).&lt;/p&gt; &#xA;&lt;p&gt;* &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.adguard.android.contentblocker&#34;&gt;AdGuard Content Blocker&lt;/a&gt; (on Android) only works with Yandex Browser or Samsung Internet Browser when you add the filter (url) to user rules (manual update of filter required).&lt;br&gt; Or use &lt;a href=&#34;https://adguard.com/adguard-android/overview.html&#34;&gt;AdGuard app&lt;/a&gt; (from their site) which works for all apps (and automatically updates filter).&lt;/p&gt; &#xA;&lt;p&gt;An external app may work less effective (timing/refresh issues).&lt;br&gt; On iOS there may be no support for scriptlets (for removing cookies, attributes and/or classes), but works with for example AdGuard Premium (paid feature).&lt;/p&gt; &#xA;&lt;h4&gt;userscripts&lt;/h4&gt; &#xA;&lt;p&gt;Some fixes also require an app to run an additional userscript to work.&lt;br&gt; For example amp-redirect (also disable amp-to-html extension for these sites), unhide text/images and more.&lt;/p&gt; &#xA;&lt;p&gt;Example apps or extensions/add-ons you can use:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android: &lt;a href=&#34;https://adguard.com/adguard-android/overview.html&#34;&gt;AdGuard app&lt;/a&gt; (load as extension)&lt;/li&gt; &#xA; &lt;li&gt;iOS: &lt;a href=&#34;https://apps.apple.com/us/app/hyperweb/id1581824571&#34;&gt;Hyperweb&lt;/a&gt; or &lt;a href=&#34;https://apps.apple.com/us/app/userscripts/id1463298887&#34;&gt;Userscripts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;macOS: &lt;a href=&#34;https://adguard.com/en/adguard-mac/overview.html&#34;&gt;AdGuard app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows/ChromeOS: Tampermonkey &lt;a href=&#34;https://chromewebstore.google.com/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo&#34;&gt;Chrome extension&lt;/a&gt; or &lt;a href=&#34;https://addons.mozilla.org/firefox/addon/tampermonkey/&#34;&gt;Firefox add-on&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Userscripts for different languages:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bpc-clone/bypass-paywalls-clean-filters/raw/main/userscript/bpc.en.user.js&#34;&gt;English (&amp;amp; other)&lt;/a&gt; - &lt;a href=&#34;https://github.com/bpc-clone/bypass-paywalls-clean-filters/raw/main/userscript/bpc.nl.user.js&#34;&gt;Dutch&lt;/a&gt; - &lt;a href=&#34;https://github.com/bpc-clone/bypass-paywalls-clean-filters/raw/main/userscript/bpc.fi.se.user.js&#34;&gt;Finnish/Swedish&lt;/a&gt; - &lt;a href=&#34;https://github.com/bpc-clone/bypass-paywalls-clean-filters/raw/main/userscript/bpc.fr.user.js&#34;&gt;French&lt;/a&gt; - &lt;a href=&#34;https://github.com/bpc-clone/bypass-paywalls-clean-filters/raw/main/userscript/bpc.de.user.js&#34;&gt;German&lt;/a&gt; - &lt;a href=&#34;https://github.com/bpc-clone/bypass-paywalls-clean-filters/raw/main/userscript/bpc.it.user.js&#34;&gt;Italian&lt;/a&gt; - &lt;a href=&#34;https://github.com/bpc-clone/bypass-paywalls-clean-filters/raw/main/userscript/bpc.es.pt.user.js&#34;&gt;Spanish/Portugese&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rastapasta/mapscii</title>
    <updated>2024-04-19T01:30:49Z</updated>
    <id>tag:github.com,2024-04-19:/rastapasta/mapscii</id>
    <link href="https://github.com/rastapasta/mapscii" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🗺 MapSCII is a Braille &amp; ASCII world map renderer for your console - enter =&gt; telnet mapscii.me &lt;= on Mac (brew install telnet) and Linux, connect with PuTTY on Windows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MapSCII - The Whole World In Your Console. &lt;a href=&#34;https://travis-ci.com/rastapasta/mapscii&#34;&gt;&lt;img src=&#34;https://travis-ci.com/rastapasta/mapscii.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A node.js based &lt;a href=&#34;http://wiki.openstreetmap.org/wiki/Vector_tiles&#34;&gt;Vector Tile&lt;/a&gt; to &lt;a href=&#34;http://www.fileformat.info/info/unicode/block/braille_patterns/utf8test.htm&#34;&gt;Braille&lt;/a&gt; and &lt;a href=&#34;https://de.wikipedia.org/wiki/American_Standard_Code_for_Information_Interchange&#34;&gt;ASCII&lt;/a&gt; renderer for &lt;a href=&#34;https://en.wikipedia.org/wiki/Xterm&#34;&gt;xterm&lt;/a&gt;-compatible terminals.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/117813?autoplay=1&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1259904/25480718/497a64e2-2b4a-11e7-9cf0-ed52ee0b89c0.png&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Try it out!&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ telnet mapscii.me&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re on Windows, use the open source telnet client &lt;a href=&#34;https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html&#34;&gt;PuTTY&lt;/a&gt; to connect.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use your mouse to drag and zoom in and out!&lt;/li&gt; &#xA; &lt;li&gt;Discover Point-of-Interests around any given location&lt;/li&gt; &#xA; &lt;li&gt;Highly customizable layer styling with &lt;a href=&#34;https://www.mapbox.com/mapbox-gl-style-spec/&#34;&gt;Mapbox Styles&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Connect to any public or private vector tile server&lt;/li&gt; &#xA; &lt;li&gt;Or just use the supplied and optimized &lt;a href=&#34;https://github.com/osm2vectortiles&#34;&gt;OSM2VectorTiles&lt;/a&gt; based one&lt;/li&gt; &#xA; &lt;li&gt;Work offline and discover local &lt;a href=&#34;https://github.com/mapbox/vector-tile-spec&#34;&gt;VectorTile&lt;/a&gt;/&lt;a href=&#34;https://github.com/mapbox/mbtiles-spec&#34;&gt;MBTiles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compatible with most Linux and OSX terminals&lt;/li&gt; &#xA; &lt;li&gt;Highly optimized algorithms for a smooth experience&lt;/li&gt; &#xA; &lt;li&gt;100% pure JavaScript! &lt;span&gt;😎&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to run it locally&lt;/h2&gt; &#xA;&lt;p&gt;With a modern node installation available, just start it with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx mapscii&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to install it locally&lt;/h2&gt; &#xA;&lt;h3&gt;With npm&lt;/h3&gt; &#xA;&lt;p&gt;If you haven&#39;t already got Node.js &amp;gt;= version 10, then &lt;a href=&#34;http://nodejs.org/&#34;&gt;go get it&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install -g mapscii&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re on OSX, or get an error about file permissions, you may need to do &lt;code&gt;sudo npm install -g mapscii&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;With snap&lt;/h3&gt; &#xA;&lt;p&gt;In any of the &lt;a href=&#34;https://snapcraft.io/docs/core/install&#34;&gt;supported Linux distros&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo snap install mapscii&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(This snap is maintained by &lt;a href=&#34;https://github.com/nathanhaines/&#34;&gt;@nathanhaines&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;This is pretty simple too.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mapscii&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Keyboard shortcuts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Arrows &lt;strong&gt;up&lt;/strong&gt;, &lt;strong&gt;down&lt;/strong&gt;, &lt;strong&gt;left&lt;/strong&gt;, &lt;strong&gt;right&lt;/strong&gt; to scroll around&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;strong&gt;a&lt;/strong&gt; or &lt;strong&gt;z&lt;/strong&gt; to zoom in and out&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;strong&gt;c&lt;/strong&gt; to switch to block character mode&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;strong&gt;q&lt;/strong&gt; to quit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mouse control&lt;/h2&gt; &#xA;&lt;p&gt;If your terminal supports mouse events you can drag the map and use your scroll wheel to zoom in and out.&lt;/p&gt; &#xA;&lt;h2&gt;Behind the scenes&lt;/h2&gt; &#xA;&lt;h3&gt;Libraries&lt;/h3&gt; &#xA;&lt;h4&gt;Mastering the console&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/substack/node-x256&#34;&gt;&lt;code&gt;x256&lt;/code&gt;&lt;/a&gt; for converting RGB values to closest xterm-256 &lt;a href=&#34;https://en.wikipedia.org/wiki/File:Xterm_256color_chart.svg&#34;&gt;color code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CoderPuppy/term-mouse&#34;&gt;&lt;code&gt;term-mouse&lt;/code&gt;&lt;/a&gt; for mouse handling&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TooTallNate/keypress&#34;&gt;&lt;code&gt;keypress&lt;/code&gt;&lt;/a&gt; for input handling&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/string-width&#34;&gt;&lt;code&gt;string-width&lt;/code&gt;&lt;/a&gt; to determine visual string lengths&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Discovering the map data&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mapbox/vector-tile-js&#34;&gt;&lt;code&gt;vector-tile&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/mapbox/vector-tile-spec/tree/master/2.1&#34;&gt;VectorTile&lt;/a&gt; parsing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mapbox/pbf&#34;&gt;&lt;code&gt;pbf&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://developers.google.com/protocol-buffers/&#34;&gt;Protobuf&lt;/a&gt; decoding&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mapbox/node-mbtiles&#34;&gt;&lt;code&gt;mbtiles&lt;/code&gt;&lt;/a&gt; for &lt;a href=&#34;https://github.com/mapbox/mbtiles-spec/raw/master/1.2/spec.md&#34;&gt;MBTiles&lt;/a&gt; parsing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Juggling the vectors and numbers&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mapbox/earcut&#34;&gt;&lt;code&gt;earcut&lt;/code&gt;&lt;/a&gt; for polygon triangulation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mourner/rbush&#34;&gt;&lt;code&gt;rbush&lt;/code&gt;&lt;/a&gt; for 2D spatial indexing of geo and label data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/madbence/node-bresenham&#34;&gt;&lt;code&gt;bresenham&lt;/code&gt;&lt;/a&gt; for line point calculations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mourner/simplify-js&#34;&gt;&lt;code&gt;simplify-js&lt;/code&gt;&lt;/a&gt; for polyline simplifications&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Handling the flow&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitinn/node-fetch&#34;&gt;&lt;code&gt;node-fetch&lt;/code&gt;&lt;/a&gt; for HTTP requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/env-paths&#34;&gt;&lt;code&gt;env-paths&lt;/code&gt;&lt;/a&gt; to determine where to persist downloaded tiles&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;TODOs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;MapSCII&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;GeoJSON support via &lt;a href=&#34;https://github.com/mapbox/geojson-vt&#34;&gt;geojson-vt&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;CLI support&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;[-] startup parameters &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; TileSource&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Style&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; center position&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; zoom&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; demo mode?&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;mouse control&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; hover POIs/labels&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; hover maybe even polygons/-lines?&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Styler&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; respect zoom based style ranges&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Renderer&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; download and process tiles in a different thread (&lt;a href=&#34;https://github.com/rastapasta/mapscii/issues/3&#34;&gt;#3&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; optimize renderer for large areas (&lt;a href=&#34;https://github.com/rastapasta/mapscii/issues/6&#34;&gt;#6&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; label drawing &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; multi line label?&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;TileSource&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; implement single vector-tile handling&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Special thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukasmartinelli&#34;&gt;lukasmartinelli&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/manuelroth&#34;&gt;manuelroth&lt;/a&gt; for all their work on &lt;a href=&#34;https://github.com/osm2vectortiles&#34;&gt;OSM2VectorTiles&lt;/a&gt; (global vector tiles from &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/Planet.osm&#34;&gt;OSM Planet&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mourner&#34;&gt;mourner&lt;/a&gt; for all his work on mindblowing GIS algorithms (like the used &lt;a href=&#34;https://github.com/mapbox/earcut&#34;&gt;earcut&lt;/a&gt;, &lt;a href=&#34;https://github.com/mourner/rbush&#34;&gt;rbush&lt;/a&gt;, &lt;a href=&#34;https://github.com/mourner/simplify-js&#34;&gt;simplify-js&lt;/a&gt;, ..)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;h3&gt;Map data&lt;/h3&gt; &#xA;&lt;h4&gt;The Open Data Commons Open Database License (oDbl)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.openstreetmap.org&#34;&gt;OpenStreetMap&lt;/a&gt; is open data, licensed under the &lt;a href=&#34;http://opendatacommons.org/licenses/odbl/&#34;&gt;Open Data Commons Open Database License&lt;/a&gt; (ODbL) by the &lt;a href=&#34;http://osmfoundation.org/&#34;&gt;OpenStreetMap Foundation&lt;/a&gt; (OSMF).&lt;/p&gt; &#xA;&lt;p&gt;You are free to copy, distribute, transmit and adapt our data, as long as you credit OpenStreetMap and its contributors. If you alter or build upon our data, you may distribute the result only under the same licence. The full &lt;a href=&#34;http://opendatacommons.org/licenses/odbl/1.0/&#34;&gt;legal code&lt;/a&gt; explains your rights and responsibilities.&lt;/p&gt; &#xA;&lt;p&gt;The cartography in our map tiles, and our documentation, are licenced under the &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/2.0/&#34;&gt;Creative Commons Attribution-ShareAlike 2.0&lt;/a&gt; licence (CC BY-SA).&lt;/p&gt; &#xA;&lt;h3&gt;MapSCII&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rastapasta/mapscii/master/LICENSE&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rastapasta/mapscii/master/AUTHORS&#34;&gt;Authors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>