<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-27T01:31:50Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>moshang-ax/lottery</title>
    <updated>2024-12-27T01:31:50Z</updated>
    <id>tag:github.com,2024-12-27:/moshang-ax/lottery</id>
    <link href="https://github.com/moshang-ax/lottery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎉🌟✨🎈年会抽奖程序，基于 Express + Three.js的 3D 球体抽奖程序，奖品🧧🎁，文字，图片，抽奖规则均可配置，😜抽奖人员信息Excel一键导入😍，抽奖结果Excel导出😎，给你的抽奖活动带来全新酷炫体验🚀🚀🚀&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lottery program&lt;/h1&gt; &#xA;&lt;p&gt;Annual dinner lottery program, 3D sphere raffle, support for configuration of prize information, import participants information by &lt;code&gt;Excel&lt;/code&gt;, and export lottery results by &lt;code&gt;Excel&lt;/code&gt; If programm is helpful for you😎😎😎, it will be greatful to comment us with⭐&lt;strong&gt;star&lt;/strong&gt;⭐ 😘😘😘😍🥰🎉🎈🎃&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/moshang-xc/lottery/raw/master/README-ZH_CN.MD&#34;&gt;点击跳转至中文使用文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Try it now: &lt;a href=&#34;https://moshang-xc.github.io/lottery/&#34;&gt;https://moshang-xc.github.io/lottery/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Technology Stack&lt;/h2&gt; &#xA;&lt;p&gt;Technology stack: Node + Express + Three.js&lt;/p&gt; &#xA;&lt;p&gt;Server: Express + Node&lt;/p&gt; &#xA;&lt;p&gt;Web Page: Three.js, References to the official 3D example of &lt;code&gt;Three.js&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Function Description:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The result can ben save and downloaded to excel synchronously🎉&lt;/li&gt; &#xA; &lt;li&gt;The winner will not participate in the drawing, and the drawing person can be drawn again if he/she not on site🎁&lt;/li&gt; &#xA; &lt;li&gt;Refresh or trun off the server will save the winner data and will not resrt the lottery data, only by click the reset button on the page can the lottery data be reset🧧&lt;/li&gt; &#xA; &lt;li&gt;The number of prizes is able to configure🎈&lt;/li&gt; &#xA; &lt;li&gt;After all the prizes have been drawn, you can continue to draw special prizes(For example:Red pockets, additional prizes, etc). By default, one is extracted at once🧨&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Try it now: &lt;a href=&#34;https://moshang-xc.github.io/lottery/&#34;&gt;https://moshang-xc.github.io/lottery/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/moshang-xc/blog/master/share/lottery.gif&#34; alt=&#34;lottery.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/moshang-xc/blog/master/share/index.jpg&#34; alt=&#34;index.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/moshang-xc/blog/master/share/start.jpg&#34; alt=&#34;start.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/moshang-xc/blog/master/share/end.jpg&#34; alt=&#34;end.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/moshang-xc/lottery.git&#xA;&#xA;cd lottery&#xA;&#xA;# Server plugin installation&#xA;cd server&#xA;npm install&#xA;&#xA;# Front-end plugin installation&#xA;cd ../product&#xA;npm install&#xA;&#xA;# Package&#xA;npm run build&#xA;&#xA;# Running&#xA;npm run serve&#xA;&#xA;# Developing &amp;amp; debugging&#xA;npm run dev&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Lottery&#xA;├── product&#xA;│   ├── src&#xA;│   │   ├── lottery&#xA;│   │   │   └── index.js&#xA;│   │   ├── lib&#xA;│   │   ├── img&#xA;│   │   ├── css&#xA;│   │   └── data&#xA;│   ├── package.json&#xA;│   └── webpack.config.js&#xA;├── server&#xA;│   ├── config.js&#xA;│   ├── server.js&#xA;│   └── package.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;product is Front-end page directory&lt;/li&gt; &#xA;  &lt;li&gt;server is Server directory&lt;/li&gt; &#xA;  &lt;li&gt;config is Profile for prize information&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Configuration Information&lt;/h2&gt; &#xA;&lt;h3&gt;Lottery personnel list information configuration&lt;/h3&gt; &#xA;&lt;p&gt;The lottery list information is in the &lt;strong&gt;&lt;code&gt;server/data/user.xlsx&lt;/code&gt;&lt;/strong&gt; file, information could only fill in base on the format, file name and title are not able to revise&lt;/p&gt; &#xA;&lt;h3&gt;Prize information configuration&lt;/h3&gt; &#xA;&lt;p&gt;Prize information is filled in the &lt;strong&gt;server/config.js&lt;/strong&gt; file, and the file name cannot be modified.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The configuration of the prizes is described as follows:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Value Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;type&lt;/td&gt; &#xA;   &lt;td&gt;Number&lt;/td&gt; &#xA;   &lt;td&gt;Type of prize, unique identifier, 0 is the placeholder for the default special prize, other prizes cannot be used&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;count&lt;/td&gt; &#xA;   &lt;td&gt;Number&lt;/td&gt; &#xA;   &lt;td&gt;Prizes amount&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Prizes name&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;title&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Prizes description&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;img&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Image URL of the prize, image is under&lt;strong&gt;img&lt;/strong&gt; catalog&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Prize information, the first item is reserved and cannot be modified. Other items can be modified as required&#xA;// Prize in&#xA;let prizes = [{&#xA;        type: 0,&#xA;        count: 1000,&#xA;        title: &#34;&#34;,&#xA;        text: &#34;Special Price&#34;&#xA;    },&#xA;    {&#xA;        type: 1,&#xA;        count: 2,&#xA;        text: &#34;Special Price&#34;&#xA;        title: &#34;Mystery jackpot&#34;&#xA;        img: &#34;../img/secrit.jpg&#34;&#xA;    },&#xA;    {&#xA;        type: 2,&#xA;        count: 5,&#xA;        text: &#34;First prize&#34;&#xA;        title: &#34;Mac Pro&#34;,&#xA;        img: &#34;../img/mbp.jpg&#34;&#xA;    }&#xA;    ...&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The configuration of the number of prizes drawn each time&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;EACH_COUNT&lt;/strong&gt;It is used to configure the number of lottery draws each time, which corresponds to the prizes one by one. For example, the number of lottery draws corresponding to the above prize configuration is as follows：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const EACH_COUNT = [1, 1, 5];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Configuration above means the order of the number of prizes to be drawn at one time is：one special prize per time, one grand prize per time and 5 first prize per time.&lt;/p&gt; &#xA;&lt;h3&gt;Enterprise Identity Configuration&lt;/h3&gt; &#xA;&lt;p&gt;This identification is used to display on the lottery card.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const COMPANY = &#34;MoShang&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Deployment plan&lt;/h2&gt; &#xA;&lt;h3&gt;Summary&lt;/h3&gt; &#xA;&lt;p&gt;This project is support to deploy by Docker. Docker is a platform with lightweight containerization, allows you to quickly deploy, test and run the applications. This text will introduce how to deploy the project by Docker.&lt;/p&gt; &#xA;&lt;h3&gt;System Requirement&lt;/h3&gt; &#xA;&lt;p&gt;Before you use the Docker to deploy the project, you need to ensure you have download below software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker (Please refer Docker official file to get the installation instructions)&lt;/li&gt; &#xA; &lt;li&gt;Docker Compose&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download and unzip the source code for the project&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Access the project directory after unzipped the file&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Execute the following command to build the Docker mirror image:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./build.sh [TAG]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It will use Dockerfile to set up the Docker mirror image named &lt;code&gt;lottery:[TAG]&lt;/code&gt;. If no tag is specified, the &#39;latest&#39; tag is used by default&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Execute the following command to run the local container:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./dev.sh [TAG]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will start the container and deploy the application in the Docker container. You can test loacally to ensure all running fulently.&lt;br&gt; Please be pay attention that all applicaiton in the container will monitor port 8888 and port 443.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Execute the following command to tag the Docker mirror image and push it to the remote Docker repository&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./tagpush.sh [TAG]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It will tag the Docker mirror image and push it to the remote Docker repository, please build up your repo at &lt;a href=&#34;https://hub.docker.com/&#34;&gt;https://hub.docker.com/&lt;/a&gt; if you want to us Docker official hub.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure it has a file named &lt;code&gt;docker-compose.yml&lt;/code&gt; and add below information:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;version: &#39;3.8&#39;&#xA;&#xA;volumes:&#xA;  lottery_log:&#xA;&#xA;services:&#xA;  lottery:&#xA;    container_name: lottery&#xA;    expose:&#xA;      - 8888&#xA;    ports:&#xA;      - &#34;28458:8888&#34;&#xA;      - &#34;443:443&#34;&#xA;    volumes:&#xA;      - &#34;lottery_log:/var/log&#34;&#xA;    image: &#34;panda1024/lottery:[TAG]&#34; &#xA;    restart: always&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Kindly take note that &lt;code&gt;[TAG]&lt;/code&gt; should be replaced with the name of the mirror image you pushed to the Docker repository&lt;/p&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Run the following command in the project directory on the server to deploy the application using Docker Compose:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start a Docker Compose stack and deploy the project into it. Note that port 8888 and port 443 of the container are mapped to port 8888 and port 443 on the server. If you wish to use a different port, please change the &lt;code&gt;docker-compose.yml&lt;/code&gt; file accordingly.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
</feed>