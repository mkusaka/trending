<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-18T01:32:38Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rcourtman/Pulse</title>
    <updated>2025-06-18T01:32:38Z</updated>
    <id>tag:github.com,2025-06-18:/rcourtman/Pulse</id>
    <link href="https://github.com/rcourtman/Pulse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A responsive monitoring application for Proxmox VE that displays real-time metrics across multiple nodes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/src/public/logos/pulse-logo-256x256.png&#34; alt=&#34;Pulse Logo&#34; width=&#34;32&#34; height=&#34;32&#34; style=&#34;vertical-align: middle&#34;&gt; Pulse for Proxmox VE&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rcourtman/Pulse/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/rcourtman/Pulse&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/rcourtman/Pulse&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/rcourtman/pulse&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/rcourtman/pulse&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A lightweight monitoring application for Proxmox VE that displays real-time status for VMs and containers via a simple web interface.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/01-dashboard.png&#34; alt=&#34;Pulse Dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üì∏ Screenshots&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Click to view more screenshots&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;Desktop Views:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;table&gt; &#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;PBS Tab&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Backups Tab&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/02-pbs-view.png&#34; alt=&#34;PBS View&#34; width=&#34;400&#34;&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/03-backups-view.png&#34; alt=&#34;Backups View&#34; width=&#34;400&#34;&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Storage Tab&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Line Graph Toggle&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/04-storage-view.png&#34; alt=&#34;Storage View&#34; width=&#34;400&#34;&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/05-line-graph-toggle.png&#34; alt=&#34;Line Graph Toggle View&#34; width=&#34;400&#34;&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt; &#xA; &lt;/div&gt; &#xA; &lt;p&gt;&lt;strong&gt;Mobile Views:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;table&gt; &#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Mobile Dashboard&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Mobile PBS View&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Mobile Backups View&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/06-mobile-dashboard.png&#34; alt=&#34;Mobile Dashboard&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/07-mobile-pbs-view.png&#34; alt=&#34;Mobile PBS View&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/08-mobile-backups-view.png&#34; alt=&#34;Mobile Backups View&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt; &#xA; &lt;/div&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/rcourtman&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Choose your preferred installation method:&lt;/p&gt; &#xA;&lt;h3&gt;üì¶ &lt;strong&gt;Easiest: Proxmox Community Scripts (Recommended)&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;One-command installation in a new LXC container:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/pulse.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a new LXC container and install Pulse automatically. Visit the &lt;a href=&#34;https://community-scripts.github.io/ProxmoxVE/scripts?id=pulse&#34;&gt;Community Scripts page&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;üê≥ &lt;strong&gt;Docker Compose (Pre-built Image)&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;For existing Docker hosts:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir pulse-config &amp;amp;&amp;amp; cd pulse-config&#xA;# Create docker-compose.yml (see Docker section)&#xA;docker compose up -d&#xA;# Configure via web interface at http://localhost:7655&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üõ†Ô∏è &lt;strong&gt;Manual LXC Installation&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;For existing LXC containers:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sLO https://raw.githubusercontent.com/rcourtman/Pulse/main/scripts/install-pulse.sh&#xA;chmod +x install-pulse.sh&#xA;sudo ./install-pulse.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üìã Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#%EF%B8%8F-configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#environment-variables&#34;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#alert-system-configuration-optional&#34;&gt;Alert System Configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#custom-per-vmlxc-alert-thresholds-optional&#34;&gt;Custom Per-VM/LXC Alert Thresholds&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#webhook-notifications-optional&#34;&gt;Webhook Notifications&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#email-notifications-optional&#34;&gt;Email Notifications&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#creating-a-proxmox-api-token&#34;&gt;Creating a Proxmox API Token&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#creating-a-proxmox-backup-server-api-token&#34;&gt;Creating a Proxmox Backup Server API Token&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#required-permissions&#34;&gt;Required Permissions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-deployment-options&#34;&gt;Deployment Options&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#proxmox-community-scripts-automated-lxc&#34;&gt;Proxmox Community Scripts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#docker-compose-recommended-for-existing-hosts&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#manual-lxc-installation&#34;&gt;Manual LXC Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#development-setup-docker-compose&#34;&gt;Development Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#%EF%B8%8F-running-the-application-nodejs-development&#34;&gt;Node.js (Development)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-system-requirements&#34;&gt;System Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-updating-pulse&#34;&gt;Updating Pulse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-privacy&#34;&gt;Privacy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#trademark-notice&#34;&gt;Trademark Notice&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-quick-fixes&#34;&gt;Quick Fixes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#diagnostic-tool&#34;&gt;Diagnostic Tool&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#common-issues&#34;&gt;Common Issues&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#notification-troubleshooting&#34;&gt;Notification Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚úÖ Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Before installing Pulse, ensure you have:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Proxmox VE:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Proxmox VE 7.x or 8.x running&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Admin access to create API tokens&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Network connectivity between Pulse and Proxmox (ports 8006/8007)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Pulse Installation:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Community Scripts&lt;/strong&gt;: Just a Proxmox host (handles everything automatically)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Docker&lt;/strong&gt;: Docker &amp;amp; Docker Compose installed&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Manual LXC&lt;/strong&gt;: Existing Debian/Ubuntu LXC with internet access&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üöÄ Deployment Options&lt;/h2&gt; &#xA;&lt;h3&gt;Proxmox Community Scripts (Automated LXC)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚ú® Easiest method - fully automated LXC creation and setup:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/pulse.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a new LXC container automatically&lt;/li&gt; &#xA; &lt;li&gt;Install all dependencies (Node.js, npm, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Download and set up Pulse&lt;/li&gt; &#xA; &lt;li&gt;Set up systemd service&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;After installation:&lt;/strong&gt; Access Pulse at &lt;code&gt;http://&amp;lt;lxc-ip&amp;gt;:7655&lt;/code&gt; and configure via the web interface&lt;/p&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://community-scripts.github.io/ProxmoxVE/scripts?id=pulse&#34;&gt;Community Scripts page&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Docker Compose (Recommended for Existing Hosts)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;For existing Docker hosts - uses pre-built image:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker (&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Install Docker&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Docker Compose (&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Install Docker Compose&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Steps:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create a Directory:&lt;/strong&gt; Make a directory for your Docker configuration files: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir pulse-config&#xA;cd pulse-config&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create &lt;code&gt;docker-compose.yml&lt;/code&gt; file:&lt;/strong&gt; Create a file named &lt;code&gt;docker-compose.yml&lt;/code&gt; in this directory with the following content: &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# docker-compose.yml&#xA;services:&#xA;  pulse-server:&#xA;    image: rcourtman/pulse:latest # Pulls the latest pre-built image&#xA;    container_name: pulse&#xA;    restart: unless-stopped&#xA;    ports:&#xA;      # Map host port 7655 to container port 7655&#xA;      # Change the left side (e.g., &#34;8081:7655&#34;) if 7655 is busy on your host&#xA;      - &#34;7655:7655&#34;&#xA;    volumes:&#xA;      # Persistent volume for configuration data&#xA;      # Configuration persists across container updates&#xA;      - pulse_config:/usr/src/app/config&#xA;&#xA;# Define persistent volumes&#xA;volumes:&#xA;  pulse_config:&#xA;    driver: local&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run:&lt;/strong&gt; Start the container: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access and Configure:&lt;/strong&gt; Open your browser to &lt;code&gt;http://&amp;lt;your-docker-host-ip&amp;gt;:7655&lt;/code&gt; and configure through the web interface.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Manual LXC Installation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;For existing Debian/Ubuntu LXC containers:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A running Proxmox VE host&lt;/li&gt; &#xA; &lt;li&gt;An existing Debian or Ubuntu LXC container with network access to Proxmox &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Tip: Use &lt;a href=&#34;https://community-scripts.github.io/ProxmoxVE/scripts?id=debian&#34;&gt;Community Scripts&lt;/a&gt; to easily create one: &lt;code&gt;bash -c &#34;$(curl -fsSL https://raw.githubusercontent.com/community-scripts/ProxmoxVE/main/ct/debian.sh)&#34;&lt;/code&gt;&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Steps:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access LXC Console:&lt;/strong&gt; Log in to your LXC container (usually as &lt;code&gt;root&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Download and Run Script:&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Ensure you are in a suitable directory, like /root or /tmp&#xA;curl -sLO https://raw.githubusercontent.com/rcourtman/Pulse/main/scripts/install-pulse.sh&#xA;chmod +x install-pulse.sh&#xA;./install-pulse.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Follow Prompts:&lt;/strong&gt; The script guides you through: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Installing dependencies (&lt;code&gt;git&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;nodejs&lt;/code&gt;, &lt;code&gt;npm&lt;/code&gt;, &lt;code&gt;sudo&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Setting up Pulse as a &lt;code&gt;systemd&lt;/code&gt; service (&lt;code&gt;pulse-monitor.service&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Optionally enabling automatic updates via cron.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access and Configure:&lt;/strong&gt; The script will display the URL (e.g., &lt;code&gt;http://&amp;lt;LXC-IP-ADDRESS&amp;gt;:7655&lt;/code&gt;). Open this URL and configure via the web interface.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For update instructions, see the &lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#-updating-pulse&#34;&gt;Updating Pulse&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Development Setup (Docker Compose)&lt;/h3&gt; &#xA;&lt;p&gt;Use this method if you have cloned the repository and want to build and run the application from the local source code.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Get Files:&lt;/strong&gt; Clone the repository (&lt;code&gt;git clone https://github.com/rcourtman/Pulse.git &amp;amp;&amp;amp; cd Pulse&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run:&lt;/strong&gt; &lt;code&gt;docker compose up --build -d&lt;/code&gt; (The included &lt;code&gt;docker-compose.yml&lt;/code&gt; uses the &lt;code&gt;build:&lt;/code&gt; context by default).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access and Configure:&lt;/strong&gt; Open your browser to &lt;code&gt;http://localhost:7655&lt;/code&gt; (or your host IP if Docker runs remotely) and configure via the web interface.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Pulse features a comprehensive web-based configuration system accessible through the settings menu. No manual file editing required!&lt;/p&gt; &#xA;&lt;h3&gt;Web Interface Configuration (Recommended)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;First-time Setup:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Access Pulse at &lt;code&gt;http://your-host:7655&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The settings modal will automatically open for initial configuration&lt;/li&gt; &#xA; &lt;li&gt;Configure all your Proxmox VE and PBS servers through the intuitive web interface&lt;/li&gt; &#xA; &lt;li&gt;Test connections with built-in connectivity verification&lt;/li&gt; &#xA; &lt;li&gt;Save and reload configuration without restarting the application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ongoing Management:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click the settings icon (‚öôÔ∏è) in the top-right corner anytime&lt;/li&gt; &#xA; &lt;li&gt;Add/modify multiple PVE and PBS endpoints&lt;/li&gt; &#xA; &lt;li&gt;Configure alert thresholds and service intervals&lt;/li&gt; &#xA; &lt;li&gt;All changes are applied immediately&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Environment Variables (Development/Advanced)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Most users should use the web-based configuration interface. Environment variables are primarily for development and advanced deployment scenarios.&lt;/p&gt; &#xA;&lt;p&gt;For development setups or infrastructure-as-code deployments, Pulse can also be configured using environment variables in a &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h4&gt;Proxmox VE (Primary Environment)&lt;/h4&gt; &#xA;&lt;p&gt;These are the minimum required variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PROXMOX_HOST&lt;/code&gt;: URL of your Proxmox server (e.g., &lt;code&gt;https://192.168.1.10:8006&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PROXMOX_TOKEN_ID&lt;/code&gt;: Your API Token ID (e.g., &lt;code&gt;user@pam!tokenid&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PROXMOX_TOKEN_SECRET&lt;/code&gt;: Your API Token Secret.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optional variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PROXMOX_NODE_NAME&lt;/code&gt;: A display name for this endpoint in the UI (defaults to &lt;code&gt;PROXMOX_HOST&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PROXMOX_ALLOW_SELF_SIGNED_CERTS&lt;/code&gt;: Set to &lt;code&gt;true&lt;/code&gt; if your Proxmox server uses self-signed SSL certificates. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PORT&lt;/code&gt;: Port for the Pulse server to listen on. Defaults to &lt;code&gt;7655&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BACKUP_HISTORY_DAYS&lt;/code&gt;: Number of days of backup history to display (defaults to &lt;code&gt;365&lt;/code&gt; for full year calendar view).&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(Username/Password fallback exists but API Token is strongly recommended)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Alert System Configuration (Optional)&lt;/h4&gt; &#xA;&lt;p&gt;Pulse includes a comprehensive alert system that monitors resource usage and system status:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt;# Alert System Configuration&#xA;ALERT_CPU_ENABLED=true&#xA;ALERT_MEMORY_ENABLED=true&#xA;ALERT_DISK_ENABLED=true&#xA;ALERT_DOWN_ENABLED=true&#xA;&#xA;# Alert thresholds (percentages)&#xA;ALERT_CPU_THRESHOLD=85&#xA;ALERT_MEMORY_THRESHOLD=90&#xA;ALERT_DISK_THRESHOLD=95&#xA;&#xA;# Alert durations (milliseconds - how long condition must persist)&#xA;ALERT_CPU_DURATION=300000       # 5 minutes&#xA;ALERT_MEMORY_DURATION=300000    # 5 minutes  &#xA;ALERT_DISK_DURATION=600000      # 10 minutes&#xA;ALERT_DOWN_DURATION=60000       # 1 minute&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alert features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Real-time notifications with toast messages&lt;/li&gt; &#xA; &lt;li&gt;Multi-severity alerts (Critical, Warning, Resolved)&lt;/li&gt; &#xA; &lt;li&gt;Duration-based triggering (alerts only fire after conditions persist)&lt;/li&gt; &#xA; &lt;li&gt;Automatic resolution when conditions normalize&lt;/li&gt; &#xA; &lt;li&gt;Alert history tracking&lt;/li&gt; &#xA; &lt;li&gt;Webhook and email notification support&lt;/li&gt; &#xA; &lt;li&gt;Alert acknowledgment and escalation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Custom Per-VM/LXC Alert Thresholds (Optional)&lt;/h4&gt; &#xA;&lt;p&gt;For advanced monitoring scenarios, Pulse supports custom alert thresholds on a per-VM/LXC basis through the web interface:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Use Cases:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Storage/NAS VMs&lt;/strong&gt;: Set higher memory thresholds (e.g., 95%/99%) for VMs that naturally use high memory for disk caching&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Application Servers&lt;/strong&gt;: Set lower CPU thresholds (e.g., 70%/85%) for performance-critical applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Development VMs&lt;/strong&gt;: Set custom disk thresholds (e.g., 75%/90%) for early storage warnings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configuration:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to &lt;strong&gt;Settings ‚Üí Custom Thresholds&lt;/strong&gt; tab&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;&#34;Add Custom Threshold&#34;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select your VM/LXC from the dropdown&lt;/li&gt; &#xA; &lt;li&gt;Configure custom CPU, Memory, and/or Disk thresholds&lt;/li&gt; &#xA; &lt;li&gt;Save configuration&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Migration-aware&lt;/strong&gt;: Thresholds follow VMs when they migrate between cluster nodes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Per-metric control&lt;/strong&gt;: Configure only the metrics you need (CPU, Memory, Disk)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visual indicators&lt;/strong&gt;: VMs with custom thresholds show a blue &#34;T&#34; badge in the dashboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fallback behavior&lt;/strong&gt;: VMs without custom thresholds use global settings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; For a Proxmox cluster, you only need to provide connection details for &lt;strong&gt;one&lt;/strong&gt; node. Pulse automatically discovers other cluster members.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Webhook Notifications (Optional)&lt;/h4&gt; &#xA;&lt;p&gt;Pulse supports webhook notifications for alerts, compatible with Discord, Slack, and Microsoft Teams:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configuration via Web Interface:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to &lt;strong&gt;Settings ‚Üí Alerts&lt;/strong&gt; tab&lt;/li&gt; &#xA; &lt;li&gt;Enable &#34;Webhook Notifications&#34;&lt;/li&gt; &#xA; &lt;li&gt;Enter your webhook URL&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Test Webhook&#34; to verify connectivity&lt;/li&gt; &#xA; &lt;li&gt;Save configuration&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Webhook URL Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Discord&lt;/strong&gt;: &lt;code&gt;https://discord.com/api/webhooks/YOUR_WEBHOOK_ID/YOUR_WEBHOOK_TOKEN&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Slack&lt;/strong&gt;: &lt;code&gt;https://hooks.slack.com/services/YOUR/WEBHOOK/URL&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Teams&lt;/strong&gt;: &lt;code&gt;https://outlook.office.com/webhook/YOUR-WEBHOOK-URL&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rich embed formatting with color-coded severity levels&lt;/li&gt; &#xA; &lt;li&gt;Automatic retry on failure&lt;/li&gt; &#xA; &lt;li&gt;Dual payload format supporting multiple platforms&lt;/li&gt; &#xA; &lt;li&gt;Real-time alert notifications for: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Resource threshold violations (CPU, Memory, Disk)&lt;/li&gt; &#xA;   &lt;li&gt;VM/Container availability changes&lt;/li&gt; &#xA;   &lt;li&gt;Alert escalations&lt;/li&gt; &#xA;   &lt;li&gt;Alert resolutions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Email Notifications (Optional)&lt;/h4&gt; &#xA;&lt;p&gt;Configure SMTP email notifications for alerts:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configuration via Web Interface:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to &lt;strong&gt;Settings ‚Üí Alerts&lt;/strong&gt; tab&lt;/li&gt; &#xA; &lt;li&gt;Enable &#34;Email Notifications&#34;&lt;/li&gt; &#xA; &lt;li&gt;Configure SMTP settings: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;SMTP Host&lt;/strong&gt;: Your email server (e.g., &lt;code&gt;smtp.gmail.com&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;SMTP Port&lt;/strong&gt;: Usually 587 for TLS, 465 for SSL, 25 for unencrypted&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Username&lt;/strong&gt;: Your email address or username&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Password&lt;/strong&gt;: Your email password (use App Password for Gmail)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;From Address&lt;/strong&gt;: Sender email address&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;To Addresses&lt;/strong&gt;: Recipient(s), comma-separated for multiple&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Use SSL&lt;/strong&gt;: Enable for SSL/TLS encryption&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Test Email&#34; to verify configuration&lt;/li&gt; &#xA; &lt;li&gt;Save settings&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Gmail Configuration Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enable 2-factor authentication on your Google account&lt;/li&gt; &#xA; &lt;li&gt;Generate an App Password: Google Account ‚Üí Security ‚Üí App passwords&lt;/li&gt; &#xA; &lt;li&gt;Use settings: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Host: &lt;code&gt;smtp.gmail.com&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Port: &lt;code&gt;587&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Username: Your Gmail address&lt;/li&gt; &#xA;   &lt;li&gt;Password: Your App Password (not regular password)&lt;/li&gt; &#xA;   &lt;li&gt;Use SSL: Enabled&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Multiple Proxmox Environments (Optional)&lt;/h4&gt; &#xA;&lt;p&gt;To monitor separate Proxmox environments (e.g., different clusters, sites) in one Pulse instance, add numbered variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PROXMOX_HOST_2&lt;/code&gt;, &lt;code&gt;PROXMOX_TOKEN_ID_2&lt;/code&gt;, &lt;code&gt;PROXMOX_TOKEN_SECRET_2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PROXMOX_HOST_3&lt;/code&gt;, &lt;code&gt;PROXMOX_TOKEN_ID_3&lt;/code&gt;, &lt;code&gt;PROXMOX_TOKEN_SECRET_3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;...and so on.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optional numbered variables also exist (e.g., &lt;code&gt;PROXMOX_ALLOW_SELF_SIGNED_CERTS_2&lt;/code&gt;, &lt;code&gt;PROXMOX_NODE_NAME_2&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h4&gt;Advanced Configuration Options&lt;/h4&gt; &#xA;&lt;p&gt;For performance tuning and specialized deployments:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt;# Performance &amp;amp; Retention&#xA;BACKUP_HISTORY_DAYS=365          # Backup history retention (default: 365 days)&#xA;&#xA;# Update System Configuration&#xA;UPDATE_CHANNEL_PREFERENCE=stable  # Force specific update channel (stable/rc)&#xA;UPDATE_TEST_MODE=false            # Enable test mode for update system&#xA;&#xA;# Development Variables&#xA;NODE_ENV=development              # Enable development mode features&#xA;DEBUG=pulse:*                     # Enable debug logging for specific modules&#xA;&#xA;# Docker Detection (automatically set)&#xA;DOCKER_DEPLOYMENT=true            # Automatically detected in Docker environments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Performance Notes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;BACKUP_HISTORY_DAYS&lt;/code&gt; affects calendar heatmap visualization and memory usage&lt;/li&gt; &#xA; &lt;li&gt;Lower values improve performance for environments with extensive backup histories&lt;/li&gt; &#xA; &lt;li&gt;Debug logging should only be enabled for troubleshooting as it increases log verbosity&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Proxmox Backup Server (PBS) (Optional)&lt;/h4&gt; &#xA;&lt;p&gt;To monitor PBS instances:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Primary PBS Instance:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PBS_HOST&lt;/code&gt;: URL of your PBS server (e.g., &lt;code&gt;https://192.168.1.11:8007&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PBS_TOKEN_ID&lt;/code&gt;: Your PBS API Token ID (e.g., &lt;code&gt;user@pbs!tokenid&lt;/code&gt;). See &lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/#creating-a-proxmox-backup-server-api-token&#34;&gt;Creating a Proxmox Backup Server API Token&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PBS_TOKEN_SECRET&lt;/code&gt;: Your PBS API Token Secret.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PBS_NODE_NAME&lt;/code&gt;: &lt;strong&gt;Important!&lt;/strong&gt; The internal hostname of your PBS server (e.g., &lt;code&gt;pbs-server-01&lt;/code&gt;). This is usually required for API token auth because the token might lack permission to auto-discover the node name. See details below.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PBS_ALLOW_SELF_SIGNED_CERTS&lt;/code&gt;: Set to &lt;code&gt;true&lt;/code&gt; for self-signed certificates. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PBS_PORT&lt;/code&gt;: PBS API port. Defaults to &lt;code&gt;8007&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Additional PBS Instances:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To monitor multiple PBS instances, add numbered variables, starting with &lt;code&gt;_2&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PBS_HOST_2&lt;/code&gt;, &lt;code&gt;PBS_TOKEN_ID_2&lt;/code&gt;, &lt;code&gt;PBS_TOKEN_SECRET_2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PBS_HOST_3&lt;/code&gt;, &lt;code&gt;PBS_TOKEN_ID_3&lt;/code&gt;, &lt;code&gt;PBS_TOKEN_SECRET_3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;...and so on.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optional numbered variables also exist for additional PBS instances (e.g., &lt;code&gt;PBS_NODE_NAME_2&lt;/code&gt;, &lt;code&gt;PBS_ALLOW_SELF_SIGNED_CERTS_2&lt;/code&gt;, &lt;code&gt;PBS_PORT_2&lt;/code&gt;). Each PBS instance, whether primary or additional, requires its respective &lt;code&gt;PBS_NODE_NAME&lt;/code&gt; or &lt;code&gt;PBS_NODE_NAME_n&lt;/code&gt; to be set if API token authentication is used and the token cannot automatically discover the node name.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Why &lt;code&gt;PBS_NODE_NAME&lt;/code&gt; (or &lt;code&gt;PBS_NODE_NAME_n&lt;/code&gt;) is Required (Click to Expand)&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Pulse needs to query task lists specific to the PBS node (e.g., &lt;code&gt;/api2/json/nodes/{nodeName}/tasks&lt;/code&gt;). It attempts to discover this node name automatically by querying &lt;code&gt;/api2/json/nodes&lt;/code&gt;. However, this endpoint is often restricted for API tokens (returning a 403 Forbidden error), even for tokens with high privileges, unless the &lt;code&gt;Sys.Audit&lt;/code&gt; permission is granted on the root path (&lt;code&gt;/&lt;/code&gt;).&lt;/p&gt; &#xA; &lt;p&gt;Therefore, &lt;strong&gt;setting &lt;code&gt;PBS_NODE_NAME&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt; file is the standard and recommended way&lt;/strong&gt; to ensure Pulse can correctly query task endpoints when using API token authentication. If it&#39;s not set and automatic discovery fails due to permissions, Pulse will be unable to fetch task data (backups, verifications, etc.).&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;How to find your PBS Node Name:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;strong&gt;SSH:&lt;/strong&gt; Log into your PBS server via SSH and run &lt;code&gt;hostname&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;UI:&lt;/strong&gt; Log into the PBS web interface. The hostname is typically displayed on the Dashboard under Server Status.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;Example: If your PBS connects via &lt;code&gt;https://minipc-pbs.lan:8007&lt;/code&gt; but its internal hostname is &lt;code&gt;proxmox-backup-server&lt;/code&gt;, set:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt;PBS_HOST=https://minipc-pbs.lan:8007&#xA;PBS_NODE_NAME=proxmox-backup-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Creating a Proxmox API Token&lt;/h3&gt; &#xA;&lt;p&gt;Using an API token is the recommended authentication method.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Steps to Create a PVE API Token (Click to Expand)&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Log in to the Proxmox VE web interface.&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Create a dedicated user&lt;/strong&gt; (optional but recommended): &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Go to &lt;code&gt;Datacenter&lt;/code&gt; ‚Üí &lt;code&gt;Permissions&lt;/code&gt; ‚Üí &lt;code&gt;Users&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;Click &lt;code&gt;Add&lt;/code&gt;. Enter a &lt;code&gt;User name&lt;/code&gt; (e.g., &#34;pulse-monitor&#34;), set Realm to &lt;code&gt;Proxmox VE authentication server&lt;/code&gt; (&lt;code&gt;pam&lt;/code&gt;), set a password, ensure &lt;code&gt;Enabled&lt;/code&gt;. Click &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Create an API token:&lt;/strong&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Go to &lt;code&gt;Datacenter&lt;/code&gt; ‚Üí &lt;code&gt;Permissions&lt;/code&gt; ‚Üí &lt;code&gt;API Tokens&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;Click &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;Select the &lt;code&gt;User&lt;/code&gt; (e.g., &#34;pulse-monitor@pam&#34;) or &lt;code&gt;root@pam&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;Enter a &lt;code&gt;Token ID&lt;/code&gt; (e.g., &#34;pulse&#34;).&lt;/li&gt; &#xA;    &lt;li&gt;Leave &lt;code&gt;Privilege Separation&lt;/code&gt; checked. Click &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;Important:&lt;/strong&gt; Copy the &lt;code&gt;Secret&lt;/code&gt; value immediately. It&#39;s shown only once.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Assign permissions (to User and Token):&lt;/strong&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Go to &lt;code&gt;Datacenter&lt;/code&gt; ‚Üí &lt;code&gt;Permissions&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;Add User Permission:&lt;/strong&gt; Click &lt;code&gt;Add&lt;/code&gt; ‚Üí &lt;code&gt;User Permission&lt;/code&gt;. Path: &lt;code&gt;/&lt;/code&gt;, User: &lt;code&gt;pulse-monitor@pam&lt;/code&gt;, Role: &lt;code&gt;PVEAuditor&lt;/code&gt;, check &lt;code&gt;Propagate&lt;/code&gt;. Click &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;Add Token Permission:&lt;/strong&gt; Click &lt;code&gt;Add&lt;/code&gt; ‚Üí &lt;code&gt;API Token Permission&lt;/code&gt;. Path: &lt;code&gt;/&lt;/code&gt;, API Token: &lt;code&gt;pulse-monitor@pam!pulse&lt;/code&gt;, Role: &lt;code&gt;PVEAuditor&lt;/code&gt;, check &lt;code&gt;Propagate&lt;/code&gt;. Click &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;em&gt;Note: The &lt;code&gt;PVEAuditor&lt;/code&gt; role at the root path (&lt;code&gt;/&lt;/code&gt;) with &lt;code&gt;Propagate&lt;/code&gt; is crucial.&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Update &lt;code&gt;.env&lt;/code&gt;:&lt;/strong&gt; Set &lt;code&gt;PROXMOX_TOKEN_ID&lt;/code&gt; (e.g., &lt;code&gt;pulse-monitor@pam!pulse&lt;/code&gt;) and &lt;code&gt;PROXMOX_TOKEN_SECRET&lt;/code&gt; (the secret you copied).&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Creating a Proxmox Backup Server API Token&lt;/h3&gt; &#xA;&lt;p&gt;If monitoring PBS, create a token within the PBS interface.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Steps to Create a PBS API Token (Click to Expand)&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Log in to the Proxmox Backup Server web interface.&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Create a dedicated user&lt;/strong&gt; (optional but recommended): &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Go to &lt;code&gt;Configuration&lt;/code&gt; ‚Üí &lt;code&gt;Access Control&lt;/code&gt; ‚Üí &lt;code&gt;User Management&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;Click &lt;code&gt;Add&lt;/code&gt;. Enter &lt;code&gt;User ID&lt;/code&gt; (e.g., &#34;pulse-monitor@pbs&#34;), set Realm (likely &lt;code&gt;pbs&lt;/code&gt;), add password. Click &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Create an API token:&lt;/strong&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Go to &lt;code&gt;Configuration&lt;/code&gt; ‚Üí &lt;code&gt;Access Control&lt;/code&gt; ‚Üí &lt;code&gt;API Token&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;Click &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;Select &lt;code&gt;User&lt;/code&gt; (e.g., &#34;pulse-monitor@pbs&#34;) or &lt;code&gt;root@pam&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;Enter &lt;code&gt;Token Name&lt;/code&gt; (e.g., &#34;pulse&#34;).&lt;/li&gt; &#xA;    &lt;li&gt;Leave &lt;code&gt;Privilege Separation&lt;/code&gt; checked. Click &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;Important:&lt;/strong&gt; Copy the &lt;code&gt;Secret&lt;/code&gt; value immediately.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Assign permissions (to User and Token):&lt;/strong&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Go to &lt;code&gt;Configuration&lt;/code&gt; ‚Üí &lt;code&gt;Access Control&lt;/code&gt; ‚Üí &lt;code&gt;Permissions&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;Add User Permission:&lt;/strong&gt; Click &lt;code&gt;Add&lt;/code&gt; ‚Üí &lt;code&gt;User Permission&lt;/code&gt;. Path: &lt;code&gt;/&lt;/code&gt;, User: &lt;code&gt;pulse-monitor@pbs&lt;/code&gt;, Role: &lt;code&gt;Audit&lt;/code&gt;, check &lt;code&gt;Propagate&lt;/code&gt;. Click &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;Add API Token Permission:&lt;/strong&gt; Click &lt;code&gt;Add&lt;/code&gt; ‚Üí &lt;code&gt;API Token Permission&lt;/code&gt;. Path: &lt;code&gt;/&lt;/code&gt;, API Token: &lt;code&gt;pulse-monitor@pbs!pulse&lt;/code&gt;, Role: &lt;code&gt;Audit&lt;/code&gt;, check &lt;code&gt;Propagate&lt;/code&gt;. Click &lt;code&gt;Add&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;em&gt;Note: The &lt;code&gt;Audit&lt;/code&gt; role at root path (&lt;code&gt;/&lt;/code&gt;) with &lt;code&gt;Propagate&lt;/code&gt; is crucial for both user and token.&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Update &lt;code&gt;.env&lt;/code&gt;:&lt;/strong&gt; Set &lt;code&gt;PBS_TOKEN_ID&lt;/code&gt; (e.g., &lt;code&gt;pulse-monitor@pbs!pulse&lt;/code&gt;) and &lt;code&gt;PBS_TOKEN_SECRET&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Required Permissions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Proxmox VE:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Basic monitoring:&lt;/strong&gt; The &lt;code&gt;PVEAuditor&lt;/code&gt; role assigned at path &lt;code&gt;/&lt;/code&gt; with &lt;code&gt;Propagate&lt;/code&gt; enabled.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;To view PVE backup files:&lt;/strong&gt; Additionally requires &lt;code&gt;PVEDatastoreAdmin&lt;/code&gt; role on &lt;code&gt;/storage&lt;/code&gt; (or specific storage paths).&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Important: Storage Content Visibility (Click to Expand)&lt;/summary&gt; &#xA;   &lt;p&gt;Due to Proxmox API limitations, viewing backup files in storage requires elevated permissions:&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;PVEAuditor&lt;/code&gt; alone is NOT sufficient to list storage contents via API&lt;/li&gt; &#xA;    &lt;li&gt;You must grant &lt;code&gt;PVEDatastoreAdmin&lt;/code&gt; role which includes &lt;code&gt;Datastore.Allocate&lt;/code&gt; permission&lt;/li&gt; &#xA;    &lt;li&gt;This applies even for read-only access to backup listings&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;   &lt;p&gt;To fix empty PVE backup listings:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Grant storage admin permissions to your API token&#xA;pveum acl modify /storage --tokens user@realm!tokenname --roles PVEDatastoreAdmin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Permissions included in PVEAuditor (Click to Expand)&lt;/summary&gt; - `Datastore.Audit` - `Permissions.Read` (implicitly included) - `Pool.Audit` - `Sys.Audit` - `VM.Audit` &#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Proxmox Backup Server:&lt;/strong&gt; The &lt;code&gt;Audit&lt;/code&gt; role assigned at path &lt;code&gt;/&lt;/code&gt; with &lt;code&gt;Propagate&lt;/code&gt; enabled is recommended.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running from Release Tarball&lt;/h3&gt; &#xA;&lt;p&gt;For users who prefer not to use Docker or the LXC script, pre-packaged release tarballs are available.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js (Version 18.x or later recommended)&lt;/li&gt; &#xA; &lt;li&gt;npm (comes with Node.js)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tar&lt;/code&gt; command (standard on Linux/macOS, available via tools like 7-Zip or WSL on Windows)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Steps:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Download:&lt;/strong&gt; Go to the &lt;a href=&#34;https://github.com/rcourtman/Pulse/releases/latest&#34;&gt;Pulse GitHub Releases page&lt;/a&gt;. Download the &lt;code&gt;pulse-vX.Y.Z.tar.gz&lt;/code&gt; file for the desired release.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extract:&lt;/strong&gt; Create a directory and extract the tarball: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir pulse-app&#xA;cd pulse-app&#xA;tar -xzf /path/to/downloaded/pulse-vX.Y.Z.tar.gz&#xA;# This creates a directory like pulse-vX.Y.Z/&#xA;cd pulse-vX.Y.Z&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run:&lt;/strong&gt; Start the application using npm: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;em&gt;(Note: The tarball includes pre-installed production dependencies, so &lt;code&gt;npm install&lt;/code&gt; is not typically required unless you encounter issues.)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access and Configure:&lt;/strong&gt; Open your browser to &lt;code&gt;http://&amp;lt;your-server-ip&amp;gt;:7655&lt;/code&gt; and configure via the web interface.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Ô∏è Running the Application (Node.js - Development)&lt;/h3&gt; &#xA;&lt;p&gt;For development purposes or running directly from source, see the &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/DEVELOPMENT.md&#34;&gt;DEVELOPMENT.md&lt;/a&gt;&lt;/strong&gt; guide. This involves cloning the repository, installing dependencies using &lt;code&gt;npm install&lt;/code&gt; in both the root and &lt;code&gt;server&lt;/code&gt; directories, and running &lt;code&gt;npm run dev&lt;/code&gt; or &lt;code&gt;npm run start&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;h3&gt;Core Monitoring&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lightweight monitoring for Proxmox VE nodes, VMs, and Containers&lt;/li&gt; &#xA; &lt;li&gt;Real-time status updates via WebSockets&lt;/li&gt; &#xA; &lt;li&gt;Simple, responsive web interface with dark/light theme support&lt;/li&gt; &#xA; &lt;li&gt;Multi-environment PVE monitoring support (monitor multiple clusters/sites)&lt;/li&gt; &#xA; &lt;li&gt;Efficient polling: Stops API polling when no clients are connected&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Advanced Alert System&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configurable alert thresholds&lt;/strong&gt; for CPU, Memory, Disk, and VM/CT availability&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom per-VM/LXC alert thresholds&lt;/strong&gt; (perfect for storage VMs, application servers, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Migration-aware thresholds&lt;/strong&gt; that follow VMs across cluster nodes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-severity alerts&lt;/strong&gt;: Info, Warning, Critical, and Resolved states&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Duration-based triggering&lt;/strong&gt; (alerts only fire after conditions persist)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Alert history tracking&lt;/strong&gt; with comprehensive metrics&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Alert acknowledgment&lt;/strong&gt; and suppression capabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Alert escalation&lt;/strong&gt; for unacknowledged critical alerts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Notification Systems&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Webhook notifications&lt;/strong&gt; for Discord, Slack, and Microsoft Teams &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Rich embed formatting with color-coded severity&lt;/li&gt; &#xA;   &lt;li&gt;Dual payload format support&lt;/li&gt; &#xA;   &lt;li&gt;Built-in webhook testing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Email notifications&lt;/strong&gt; via SMTP &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Multiple recipient support&lt;/li&gt; &#xA;   &lt;li&gt;SSL/TLS encryption&lt;/li&gt; &#xA;   &lt;li&gt;Gmail App Password support&lt;/li&gt; &#xA;   &lt;li&gt;Test email functionality&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Enhanced Update System&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Smart Version Switching&lt;/strong&gt; between stable and RC releases with clear commit differences&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consolidated Update Mechanism&lt;/strong&gt; using proven install script for reliability&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time Progress Tracking&lt;/strong&gt; with detailed commit information and GitHub links&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automatic Backup &amp;amp; Restore&lt;/strong&gt; of configuration during updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Context-Aware Updates&lt;/strong&gt; showing exactly what changes with each version switch&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dual Update Channels&lt;/strong&gt; with persistent preference management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Update Channels&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stable Channel&lt;/strong&gt;: Production-ready releases (e.g., v3.27.1) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Thoroughly tested releases for production environments&lt;/li&gt; &#xA;   &lt;li&gt;Automatic updates only to stable versions&lt;/li&gt; &#xA;   &lt;li&gt;Recommended for critical infrastructure monitoring&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RC Channel&lt;/strong&gt;: Release candidates with latest features (e.g., v3.28.0-rc1) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Early access to new features and improvements&lt;/li&gt; &#xA;   &lt;li&gt;Automated releases with each development commit&lt;/li&gt; &#xA;   &lt;li&gt;Perfect for testing and non-critical environments&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Channel Persistence&lt;/strong&gt;: Your update preference is maintained across all updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Smart Switching&lt;/strong&gt;: See exact commit differences when switching between channels&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Backup Monitoring&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Comprehensive backup monitoring:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Proxmox Backup Server (PBS) snapshots and tasks&lt;/li&gt; &#xA;   &lt;li&gt;PVE backup files on local and shared storage&lt;/li&gt; &#xA;   &lt;li&gt;VM/CT snapshot tracking with calendar heatmap visualization&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enhanced backup health card&lt;/strong&gt; with health score calculation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Recent coverage metrics&lt;/strong&gt; showing protection status&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Backup type filtering&lt;/strong&gt; with styled badges&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Understanding Backup Types in Pulse&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Pulse monitors three distinct types of backups:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;PBS Backups&lt;/strong&gt; (Purple indicator ‚óè)&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Backups stored in Proxmox Backup Server&lt;/li&gt; &#xA;    &lt;li&gt;Accessed via PBS API with deduplication and verification features&lt;/li&gt; &#xA;    &lt;li&gt;Requires separate PBS API token configuration&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;PVE Backups&lt;/strong&gt; (Orange indicator ‚óè)&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Backups stored on any Proxmox VE storage (NFS, CIFS, local, etc.)&lt;/li&gt; &#xA;    &lt;li&gt;All non-PBS backup storage is considered &#34;PVE storage&#34;&lt;/li&gt; &#xA;    &lt;li&gt;Accessed via Proxmox VE API&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Snapshots&lt;/strong&gt; (Yellow indicator ‚óè)&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;VM/CT point-in-time snapshots (not full backups)&lt;/li&gt; &#xA;    &lt;li&gt;Stored locally on the Proxmox node&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; If you have PBS configured as storage in Proxmox VE, those backups are accessed via the PBS API directly, not through PVE storage. This prevents double-counting of PBS backups.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Performance &amp;amp; UI&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Virtual scrolling&lt;/strong&gt; for handling large VM/container lists efficiently&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Metrics history&lt;/strong&gt; with 1-hour retention using circular buffers&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Network anomaly detection&lt;/strong&gt; with automatic baseline learning&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Responsive design&lt;/strong&gt; optimized for desktop and mobile&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UI scale adjustment&lt;/strong&gt; for different screen sizes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Persistent filter states&lt;/strong&gt; across sessions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Management &amp;amp; Diagnostics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Built-in update manager&lt;/strong&gt; with web-based updates (non-Docker)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Comprehensive diagnostic tool&lt;/strong&gt; with API permission testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Privacy-protected diagnostic exports&lt;/strong&gt; for troubleshooting&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time connectivity testing&lt;/strong&gt; for all configured endpoints&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automatic configuration validation&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Deployment &amp;amp; Integration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker support with pre-built images&lt;/li&gt; &#xA; &lt;li&gt;LXC installation script&lt;/li&gt; &#xA; &lt;li&gt;Proxmox Community Scripts integration&lt;/li&gt; &#xA; &lt;li&gt;systemd service management&lt;/li&gt; &#xA; &lt;li&gt;Automatic update capability via cron&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üèóÔ∏è Architecture&lt;/h2&gt; &#xA;&lt;h3&gt;Technology Stack&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Frontend&lt;/strong&gt;: Vue.js 3 with vanilla JavaScript modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Backend&lt;/strong&gt;: Node.js 20+ with Express 5&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Styling&lt;/strong&gt;: Tailwind CSS v3.4.4 with custom scrollbar plugin&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Build System&lt;/strong&gt;: npm scripts with PostCSS and Tailwind compilation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time Communication&lt;/strong&gt;: WebSocket integration with Socket.IO&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Project Structure&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;pulse/&#xA;‚îú‚îÄ‚îÄ src/public/          # Frontend application&#xA;‚îÇ   ‚îú‚îÄ‚îÄ js/ui/          # Modular UI components (Vue.js)&#xA;‚îÇ   ‚îú‚îÄ‚îÄ css/            # Styling and themes&#xA;‚îÇ   ‚îî‚îÄ‚îÄ output.css      # Compiled Tailwind styles&#xA;‚îú‚îÄ‚îÄ server/             # Backend API and services&#xA;‚îÇ   ‚îú‚îÄ‚îÄ routes/         # Express route handlers&#xA;‚îÇ   ‚îú‚îÄ‚îÄ services/       # Business logic modules&#xA;‚îÇ   ‚îî‚îÄ‚îÄ *.js           # Core server components&#xA;‚îú‚îÄ‚îÄ scripts/           # Installation and utility scripts&#xA;‚îî‚îÄ‚îÄ config/           # Configuration management&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Key Design Principles&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modular Architecture&lt;/strong&gt;: Clean separation between UI components and server modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance Optimized&lt;/strong&gt;: Virtual scrolling, circular buffers, and efficient polling&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time Updates&lt;/strong&gt;: WebSocket-based live data streaming&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-platform Support&lt;/strong&gt;: Docker, LXC, and native deployment options&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configuration-driven&lt;/strong&gt;: Web-based configuration with automatic validation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üíª System Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node.js:&lt;/strong&gt; Version 18.x or later (if building/running from source).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NPM:&lt;/strong&gt; Compatible version with Node.js.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker &amp;amp; Docker Compose:&lt;/strong&gt; Latest stable versions (if using container deployment).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Proxmox VE:&lt;/strong&gt; Version 7.x or 8.x recommended.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Proxmox Backup Server:&lt;/strong&gt; Version 2.x or 3.x recommended (if monitored).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web Browser:&lt;/strong&gt; Modern evergreen browser.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üîÑ Updating Pulse&lt;/h2&gt; &#xA;&lt;h3&gt;Web-Based Updates (Non-Docker)&lt;/h3&gt; &#xA;&lt;p&gt;For non-Docker installations, Pulse includes a built-in update mechanism:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the Settings modal (gear icon in the top right)&lt;/li&gt; &#xA; &lt;li&gt;Scroll to the &#34;Software Updates&#34; section&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Check for Updates&#34;&lt;/li&gt; &#xA; &lt;li&gt;If an update is available, review the release notes&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Apply Update&#34; to install it automatically&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The update process:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Backs up your configuration files&lt;/li&gt; &#xA; &lt;li&gt;Downloads and applies the update&lt;/li&gt; &#xA; &lt;li&gt;Preserves your settings&lt;/li&gt; &#xA; &lt;li&gt;Automatically restarts the application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community Scripts LXC Installation&lt;/h3&gt; &#xA;&lt;p&gt;If you installed using the Community Scripts method, simply re-run the original installation command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/pulse.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script will detect the existing installation and update it automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Docker Compose Installation&lt;/h3&gt; &#xA;&lt;p&gt;Docker deployments must be updated by pulling the new image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /path/to/your/pulse-config&#xA;docker compose pull&#xA;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This pulls the latest image and recreates the container with the new version.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The web-based update feature will detect Docker deployments and provide these instructions instead of attempting an in-place update.&lt;/p&gt; &#xA;&lt;h3&gt;Manual LXC Installation&lt;/h3&gt; &#xA;&lt;p&gt;If you used the manual installation script, update by re-running it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Navigate to where you downloaded the script&#xA;cd /path/to/script/directory&#xA;./install-pulse.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or run non-interactively (useful for automated updates):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./install-pulse.sh --update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Managing the Service:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check status: &lt;code&gt;sudo systemctl status pulse-monitor.service&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;View logs: &lt;code&gt;sudo journalctl -u pulse-monitor.service -f&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Restart: &lt;code&gt;sudo systemctl restart pulse-monitor.service&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Automatic Updates:&lt;/strong&gt; If you enabled automatic updates during installation, they run via cron. Check logs in &lt;code&gt;/var/log/pulse_update.log&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Release Tarball Installation&lt;/h3&gt; &#xA;&lt;p&gt;To update a tarball installation:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest release from &lt;a href=&#34;https://github.com/rcourtman/Pulse/releases/latest&#34;&gt;GitHub Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the current application&lt;/li&gt; &#xA; &lt;li&gt;Extract the new tarball to a new directory&lt;/li&gt; &#xA; &lt;li&gt;Start the application: &lt;code&gt;npm start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Your configuration will be preserved automatically&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Development/Source Installation&lt;/h3&gt; &#xA;&lt;p&gt;If running from source code:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For stable releases (production):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /path/to/pulse&#xA;git checkout main&#xA;git pull origin main&#xA;npm install&#xA;npm run build:css&#xA;npm run start    # or your preferred restart method&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;For development/RC versions:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /path/to/pulse&#xA;git checkout develop&#xA;git pull origin develop&#xA;npm install&#xA;npm run build:css&#xA;npm run start    # or your preferred restart method&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The development setup only requires npm install in the root directory, not in a separate server directory.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;develop&lt;/code&gt; branch shows dynamic RC versions (e.g., &#34;3.24.0-rc5&#34;) that auto-increment with each commit.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;main&lt;/code&gt; branch contains stable releases only.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìù Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please read our &lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Development Workflow&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Branch Strategy:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;main&lt;/code&gt; - Stable releases only (protected)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;develop&lt;/code&gt; - Daily development work (default working branch)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Release Candidate (RC) Automation:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Every commit to &lt;code&gt;develop&lt;/code&gt; automatically creates an RC release&lt;/li&gt; &#xA; &lt;li&gt;RC versions increment automatically: &lt;code&gt;v3.24.0-rc1&lt;/code&gt;, &lt;code&gt;v3.24.0-rc2&lt;/code&gt;, etc.&lt;/li&gt; &#xA; &lt;li&gt;Docker images are built for both &lt;code&gt;amd64&lt;/code&gt; and &lt;code&gt;arm64&lt;/code&gt; architectures&lt;/li&gt; &#xA; &lt;li&gt;Local development shows dynamic RC versions that update with each commit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Making Contributions:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repository&lt;/li&gt; &#xA; &lt;li&gt;Create a feature branch from &lt;code&gt;develop&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Make your changes&lt;/li&gt; &#xA; &lt;li&gt;Test locally (version will show as RC automatically)&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request to &lt;code&gt;develop&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üîí Privacy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;No Data Collection:&lt;/strong&gt; Pulse does not collect or transmit any telemetry or user data externally.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local Communication:&lt;/strong&gt; Operates entirely between your environment and your Proxmox/PBS APIs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Credential Handling:&lt;/strong&gt; Credentials are used only for API authentication and are not logged or sent elsewhere.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üõ°Ô∏è Security Best Practices&lt;/h2&gt; &#xA;&lt;h3&gt;API Token Security&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use dedicated service accounts&lt;/strong&gt; for API tokens instead of root accounts&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enable privilege separation&lt;/strong&gt; for all tokens to limit access scope&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Regularly rotate API credentials&lt;/strong&gt; (quarterly or after personnel changes)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Audit token permissions&lt;/strong&gt; periodically to ensure least-privilege access&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Monitor API access logs&lt;/strong&gt; for unusual activity patterns&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Network Security&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configure firewall rules&lt;/strong&gt; to restrict API access (ports 8006/8007) to necessary hosts only&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use SSL/TLS&lt;/strong&gt; for all API connections (avoid self-signed certificates in production)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consider VPN access&lt;/strong&gt; for external monitoring setups&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Implement network segmentation&lt;/strong&gt; to isolate monitoring traffic from production networks&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enable fail2ban&lt;/strong&gt; or similar tools on Proxmox hosts to prevent brute force attacks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Deployment Security&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run Pulse with non-root user&lt;/strong&gt; when possible (LXC and manual installations)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Keep container/system updated&lt;/strong&gt; with latest security patches&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use configuration management&lt;/strong&gt; instead of hardcoded credentials&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Secure webhook URLs&lt;/strong&gt; and email credentials with proper access controls&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Monitor Pulse logs&lt;/strong&gt; for authentication failures or connection issues&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Proxmox Configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Disable unused APIs&lt;/strong&gt; and services on Proxmox hosts&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enable two-factor authentication&lt;/strong&gt; for Proxmox web interface access&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use strong passwords&lt;/strong&gt; for all Proxmox user accounts&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Regularly update&lt;/strong&gt; Proxmox VE and PBS to latest stable versions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configure proper backup encryption&lt;/strong&gt; for sensitive VM/CT data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìú License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/rcourtman/Pulse/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;‚Ñ¢Ô∏è Trademark Notice&lt;/h2&gt; &#xA;&lt;p&gt;Proxmox¬Æ and Proxmox VE¬Æ are registered trademarks of Proxmox Server Solutions GmbH. This project is not affiliated with or endorsed by Proxmox Server Solutions GmbH.&lt;/p&gt; &#xA;&lt;h2&gt;‚ù§Ô∏è Support&lt;/h2&gt; &#xA;&lt;p&gt;File issues on the &lt;a href=&#34;https://github.com/rcourtman/Pulse/issues&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you find Pulse useful, consider supporting its development: &lt;a href=&#34;https://ko-fi.com/rcourtman&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ùì Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;üîß Quick Fixes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Can&#39;t access Pulse after installation?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Check if service is running&#xA;sudo systemctl status pulse-monitor.service&#xA;&#xA;# Check what&#39;s listening on port 7655&#xA;sudo netstat -tlnp | grep 7655&#xA;&#xA;# View recent logs&#xA;sudo journalctl -u pulse-monitor.service -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Empty dashboard or &#34;No data&#34; errors?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Check API Token:&lt;/strong&gt; Verify your &lt;code&gt;PROXMOX_TOKEN_ID&lt;/code&gt; and &lt;code&gt;PROXMOX_TOKEN_SECRET&lt;/code&gt; are correct&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Test connectivity:&lt;/strong&gt; Can you ping your Proxmox host from where Pulse is running?&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Check permissions:&lt;/strong&gt; Ensure token has &lt;code&gt;PVEAuditor&lt;/code&gt; role on path &lt;code&gt;/&lt;/code&gt; with &lt;code&gt;Propagate&lt;/code&gt; enabled&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&#34;Empty Backups Tab&#34; with PBS configured?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure &lt;code&gt;PBS Node Name&lt;/code&gt; is configured in the settings modal&lt;/li&gt; &#xA; &lt;li&gt;Find hostname with: &lt;code&gt;ssh root@your-pbs-ip hostname&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker container won&#39;t start?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Check container logs&#xA;docker logs pulse&#xA;&#xA;# Restart container&#xA;docker compose down &amp;amp;&amp;amp; docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Diagnostic Tool&lt;/h3&gt; &#xA;&lt;p&gt;Pulse includes a comprehensive built-in diagnostic tool to help troubleshoot configuration and connectivity issues:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Web Interface (Recommended):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The diagnostics icon appears automatically in the header when issues are detected&lt;/li&gt; &#xA; &lt;li&gt;Click the icon or navigate to &lt;code&gt;http://your-pulse-host:7655/diagnostics.html&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The tool will automatically run diagnostics and provide: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;API Token Permission Testing&lt;/strong&gt; - Tests actual API permissions for VMs, containers, nodes, and datastores&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Configuration Validation&lt;/strong&gt; - Verifies all connection settings and required parameters&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Real-time Connectivity Tests&lt;/strong&gt; - Tests live connections to Proxmox VE and PBS instances&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Data Flow Analysis&lt;/strong&gt; - Shows discovered nodes, VMs, containers, and backup data&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Specific Actionable Recommendations&lt;/strong&gt; - Detailed guidance for fixing any issues found&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tests use the same API endpoints as the main application for accuracy&lt;/li&gt; &#xA; &lt;li&gt;Provides exact permission requirements (e.g., &lt;code&gt;VM.Audit&lt;/code&gt; on &lt;code&gt;/&lt;/code&gt; for Proxmox)&lt;/li&gt; &#xA; &lt;li&gt;Shows counts of discovered resources (VMs, containers, nodes, backups)&lt;/li&gt; &#xA; &lt;li&gt;Identifies common misconfigurations like missing &lt;code&gt;PBS_NODE_NAME&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Privacy Protected&lt;/strong&gt;: Automatically sanitizes hostnames, IPs, and sensitive data before export&lt;/li&gt; &#xA; &lt;li&gt;Export diagnostic reports safe for sharing in GitHub issues or support requests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Command Line:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# If using the source code:&#xA;./scripts/diagnostics.sh&#xA;&#xA;# The script will generate a detailed report and save it to a timestamped file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Common Issues&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Proxmox Log File Growth / log2ram Issues:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Update (v3.30.0+):&lt;/strong&gt; Pulse now uses the bulk &lt;code&gt;/cluster/resources&lt;/code&gt; endpoint, reducing API calls by up to 95% while maintaining 2-second polling&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;If you still experience log growth&lt;/strong&gt;, you can configure Proxmox logging:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Option 1: Use tmpfs for pveproxy logs (Best for log2ram users)&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Add to /etc/fstab on your Proxmox host:&#xA;tmpfs /var/log/pveproxy/ tmpfs defaults,uid=33,gid=33,size=1024m 0 0&#xA;&#xA;# Then mount it:&#xA;mount /var/log/pveproxy/&#xA;systemctl restart pveproxy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Option 2: Disable pveproxy access logging entirely&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# On your Proxmox host, symlink to /dev/null:&#xA;systemctl stop pveproxy&#xA;rm -f /var/log/pveproxy/access.log&#xA;ln -s /dev/null /var/log/pveproxy/access.log&#xA;systemctl start pveproxy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Option 3: Aggressive logrotate configuration&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Edit /etc/logrotate.d/pve on your Proxmox host:&#xA;/var/log/pveproxy/access.log {&#xA;    hourly          # Rotate every hour&#xA;    rotate 4        # Keep only 4 files&#xA;    maxsize 10M     # Force rotate at 10MB&#xA;    compress&#xA;    delaycompress&#xA;    notifempty&#xA;    missingok&#xA;    create 640 www-data www-data&#xA;}&#xA;&#xA;# Force immediate rotation:&#xA;logrotate -f /etc/logrotate.d/pve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Option 4: Exclude from log2ram&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Edit /etc/log2ram.conf and add to exclusion:&#xA;LOG2RAM_PATH_EXCLUDE=&#34;/var/log/pveproxy&#34;&#xA;&#xA;# Then restart log2ram:&#xA;systemctl restart log2ram&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The pveproxy log path is hard-coded in Proxmox and cannot be changed. Pulse&#39;s 2-second polling provides real-time responsiveness - adjusting Proxmox logging is preferable to reducing polling frequency.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Empty Backups Tab:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;PBS backups not showing:&lt;/strong&gt; Usually caused by missing &lt;code&gt;PBS Node Name&lt;/code&gt; in the settings configuration. SSH to your PBS server and run &lt;code&gt;hostname&lt;/code&gt; to find the correct value.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;PVE backups not showing:&lt;/strong&gt; Ensure your API token has &lt;code&gt;PVEDatastoreAdmin&lt;/code&gt; role on &lt;code&gt;/storage&lt;/code&gt; to view backup files. See the permissions section above.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pulse Application Logs:&lt;/strong&gt; Check container logs (&lt;code&gt;docker logs pulse_monitor&lt;/code&gt;) or service logs (&lt;code&gt;sudo journalctl -u pulse-monitor.service -f&lt;/code&gt;) for errors (401 Unauthorized, 403 Forbidden, connection refused, timeout).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configuration Issues:&lt;/strong&gt; Use the settings modal to verify all connection details. Test connections with the built-in connectivity tester before saving. Ensure no placeholder values remain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Network Connectivity:&lt;/strong&gt; Can the machine running Pulse reach the PVE/PBS hostnames/IPs and ports (usually 8006 for PVE, 8007 for PBS)? Check firewalls.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API Token Permissions:&lt;/strong&gt; Ensure the correct roles (&lt;code&gt;PVEAuditor&lt;/code&gt; for PVE, &lt;code&gt;Audit&lt;/code&gt; for PBS) are assigned at the root path (&lt;code&gt;/&lt;/code&gt;) with &lt;code&gt;Propagate&lt;/code&gt; enabled in the respective UIs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Notification Troubleshooting&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Webhook notifications not working?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Test the webhook:&lt;/strong&gt; Use the &#34;Test Webhook&#34; button in settings to verify connectivity&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Check the URL format:&lt;/strong&gt; Ensure you&#39;re using the full webhook URL including protocol (https://)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Firewall rules:&lt;/strong&gt; Verify Pulse can reach Discord/Slack/Teams servers (outbound HTTPS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Check logs:&lt;/strong&gt; Look for webhook errors in application logs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Email notifications not sending?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Test configuration:&lt;/strong&gt; Use the &#34;Test Email&#34; button to verify SMTP settings&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Gmail issues:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Must use App Password, not regular password&lt;/li&gt; &#xA;   &lt;li&gt;Enable &#34;Less secure app access&#34; or use App Passwords with 2FA&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Port issues:&lt;/strong&gt; Try different ports (587 for TLS, 465 for SSL, 25 for unencrypted)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Firewall:&lt;/strong&gt; Ensure outbound SMTP traffic is allowed&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Authentication:&lt;/strong&gt; Double-check username/password, some servers require full email address&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>frankmcsherry/blog</title>
    <updated>2025-06-18T01:32:38Z</updated>
    <id>tag:github.com,2025-06-18:/frankmcsherry/blog</id>
    <link href="https://github.com/frankmcsherry/blog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Some notes on things I find interesting and important.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;I am a researcher and computer scientist. I used to work in San Francisco, then I traveled a bit, and I&#39;m now in NYC starting &lt;a href=&#34;http://materialize.io/&#34;&gt;Materialize.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following posts are in reverse chronological order: newest posts are first. The content of the oldest posts may no longer be correct (mostly those about pieces of software I&#39;ve worked on, and their state at some time in the past), but they have been retained for posterity (and some humility).&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;topics&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;date&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;title&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2024-11-25&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2024-11-25.md&#34;&gt;Understanding Consistency in Materialize&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;E-Graphs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2024-10-19&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2024-10-19.md&#34;&gt;Understanding E-Graphs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Columnar, Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2024-10-11&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2024-10-11.md&#34;&gt;Dataflow and Columns and WASM, Oh My!&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Columnar&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2024-09-10&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2024-09-10.md&#34;&gt;A Fascinating Diversion into Compression&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Columnar&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2024-08-25&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2024-08-25.md&#34;&gt;More serial layout in Rust&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Columnar&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2024-08-24&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2024-08-24.md&#34;&gt;A less unsafe serial layout in Rust&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2024-08-13&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2024-08-13.md&#34;&gt;Zero-staleness: Like using your primary, but faster&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2024-05-19&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2024-05-19.md&#34;&gt;Demonstrating Operational Data with SQL&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2024-03-18&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2024-03-18.md&#34;&gt;Computing and Maintaining Weird (Outer) Joins&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2024-01-02&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2024-01-02.md&#34;&gt;Materialize and Advent of Code (50/50)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2023-12-20&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2023-12-20.md&#34;&gt;Materialize and Memory&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2023-12-19&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2023-12-19.md&#34;&gt;Doing Business with Recursive SQL&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2023-10-10&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2023-10-10.md&#34;&gt;Responsiveness and Operational Agility&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2023-09-29&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2023-09-29.md&#34;&gt;Freshness and Operational Autonomy&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2023-09-19&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2023-09-19.md&#34;&gt;Consistency and Operational Confidence&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2023-09-17&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2023-09-17.md&#34;&gt;A Guided Tour of Materialize&#39;s Product Principles&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2023-07-21&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2023-07-21.md&#34;&gt;Capturing Change Data Capture (CDC) Data&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2023-01-04&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2023-01-04.md&#34;&gt;Advent of Code 2022: In SQL&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2022-12-28&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2022-12-28.md&#34;&gt;Reasons for Recursion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2022-12-25&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2022-12-25.md&#34;&gt;Recursion in Materialize&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2022-07-06&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2022-07-06.md&#34;&gt;Minesweeping in Materialize&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2021-05-14&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2021-05-14.md&#34;&gt;Maintaining Joins using Few Resources&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2021-04-26&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2021-04-26.md&#34;&gt;Generalizing Linear Operators&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2021-02-11&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2021-02-11.md&#34;&gt;Windows enough, and Time&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-12-29&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-12-29.md&#34;&gt;Slicing up Temporal Aggregates in Materialize&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-11-18&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-11-18.md&#34;&gt;Joins in Materialize&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-09-24&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-09-24.md&#34;&gt;Materialize Under the Hood&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-08-13&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-08-13.md&#34;&gt;Lateral Joins and Demand-Driven Queries&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-08-01&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-08-01.md&#34;&gt;Change Data Capture (part 1)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-04-01&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-04-01.md&#34;&gt;Robust Reductions in Materialize&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-06-19&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-06-19.md&#34;&gt;Eventual Consistency isn&#39;t for Streaming&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely, Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-06-09&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-06-09.md&#34;&gt;Rust for Data-Intensive Computation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-06-06&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-06-06.md&#34;&gt;Sudoku in Differential Dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-05-01&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-05-01.md&#34;&gt;Managing Memory in Differential Dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-03-26&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-03-26.md&#34;&gt;Upserts in Differential Dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-03-16&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-03-16.md&#34;&gt;Materialize on NYC taxi data&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2020-02-15&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2020-02-15.md&#34;&gt;Differential Dataflow and Calculus&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Datalog, Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2019-09-06&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2019-09-06.md&#34;&gt;Datalog at SIGMOD and VLDB&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2019-08-17&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2019-08-17.md&#34;&gt;Tracking progress in timely dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materialize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2019-08-03&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2019-08-03.md&#34;&gt;Debugging dataflows with &lt;code&gt;materialized&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2019-06-13&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2019-06-13.md&#34;&gt;LDBC BI Query 25, developed&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2019-05-20&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2019-05-20.md&#34;&gt;Programming with time&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2019-04-12&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2019-04-12.md&#34;&gt;Differential privacy and Demographics&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2019-02-09&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2019-02-09.md&#34;&gt;Monoids and Graph Processing&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2018-12-30&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2018-12-30.md&#34;&gt;Tensorflow in Differential Dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2018-11-20&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2018-11-20.md&#34;&gt;Strings (and beyond) in differential dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2018-09-26&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2018-09-26.md&#34;&gt;Timely Dataflow Architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2018-08-18&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2018-08-19.md&#34;&gt;Synchronization via Timely Dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Datalog, Rust&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2018-05-19&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2018-05-19.md&#34;&gt;A Datalog engine in Rust&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2018-05-06&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2018-05-06.md&#34;&gt;A differential dataflow query processor&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2018-03-11&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2018-03-11.md&#34;&gt;Things that count&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2018-02-25&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2018-02-25.md&#34;&gt;Uber&#39;s differential privacy .. probably isn&#39;t&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2018-02-19&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2018-02-19.md&#34;&gt;World enough, and timely dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2018-02-11&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2018-02-11.md&#34;&gt;Yahoo&#39;s Steaming Benchmark&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-12-10&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-12-10.md&#34;&gt;Advent of Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-11-08&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-11-08.md&#34;&gt;Timely on Kafka&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-10-27&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-10-27.md&#34;&gt;Deep learnings about differential privacy&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;COST, Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-10-23&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-10-23.md&#34;&gt;COST in the land of differential dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-09-28&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-09-28.md&#34;&gt;The Moral Character of Privacy Technology&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;COST&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-09-23&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-09-23.md&#34;&gt;COST in the land of databases&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-09-05&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-09-05.md&#34;&gt;Big Data Stream Managers (BDSM)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-08-21&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-08-21.md&#34;&gt;Live PageRanking&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-07-27&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-07-27.md&#34;&gt;Memory management for big data&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-07-24&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-07-24.md&#34;&gt;Throughput and latency in differential dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-05-06&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-05-06.md&#34;&gt;Specialization in differential dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-05-01&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-05-01.md&#34;&gt;Arrangement in differential dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-04-24&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-04-24.md&#34;&gt;A TPC-H-like evaluation of differential dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-03-28&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-03-28.md&#34;&gt;Differential dataflow 2017 roadmap&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-03-22&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-03-22.md&#34;&gt;What I&#39;m stuck on&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-03-01&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-03-01.md&#34;&gt;High-resolution timestamps&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-02-21&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-02-21.md&#34;&gt;Modular data organization&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-02-11&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-02-11.md&#34;&gt;Differential dataflow status report&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-02-08&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-02-08.md&#34;&gt;Two flavors of differential privacy&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2017-01-26&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2017-01-26.md&#34;&gt;Differential privacy as a mutual information constraint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2016-09-17&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2016-09-17.md&#34;&gt;Tracking motifs in evolving graphs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2016-08-29&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2016-08-29.md&#34;&gt;Differential privacy and correlated data&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2016-08-16&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2016-08-16.md&#34;&gt;Lunchtime for data privacy&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2016-08-03&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2016-08-03.md&#34;&gt;Differential Dataflow internals&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2016-07-26&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2016-07-26.md&#34;&gt;Differential Dataflow Roadmap&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2016-07-17&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2016-07-17.md&#34;&gt;Dataflow as Database&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Datalog, Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2016-06-21&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2016-06-21.md&#34;&gt;Differential Dataflog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2016-06-14&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2016-06-14.md&#34;&gt;Statistical inference considered harmful&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2016-05-19&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2016-05-19.md&#34;&gt;Differential privacy for dummies, redux&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2016-03-27&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2016-03-27.md&#34;&gt;Explaining outputs in modern computations&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2016-02-06&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2016-02-06.md&#34;&gt;Differential privacy: an illustrated primer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Privacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2016-02-03&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2016-02-03.md&#34;&gt;Differential privacy for dummies&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;COST&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-12-24&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-12-24.md&#34;&gt;Graph processing in 2016&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-12-19&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-12-19.md&#34;&gt;Progress tracking in Timely Dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-11-27&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-11-27.md&#34;&gt;An introduction to Differential Dataflow, part 2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-09-29&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-09-29.md&#34;&gt;An introduction to Differential Dataflow, part 1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-09-21&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-09-21.md&#34;&gt;An introduction to Timely Dataflow in Rust, part 3&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-09-18&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-09-18.md&#34;&gt;An introduction to Timely Dataflow in Rust, part 2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-09-14&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-09-14.md&#34;&gt;An introduction to Timely Dataflow in Rust, part 1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;COST&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-08-20&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-08-20.md&#34;&gt;Epic Graph Battle of History: Chaos vs Order&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;COST&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-08-15.md&#34;&gt;Sorting out graph processing&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;COST, Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-07-31&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-07-31.md&#34;&gt;The impact of fast networks on graph analytics, part 2.&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;COST, Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-07-08&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-07-08.md&#34;&gt;The impact of fast networks on graph analytics, part 1.&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-05-12&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-05-12.md&#34;&gt;Differential graph computation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-05-04&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-05-04.md&#34;&gt;Abomonation: terrifying serialization&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-04-19&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-04-19.md&#34;&gt;Data-parallelism in timely dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-04-11&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-04-11.md&#34;&gt;Worst-case optimal joins, in dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-04-07&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-04-07.md&#34;&gt;Differential dataflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;COST&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-02-04&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-02-04.md&#34;&gt;Bigger data; same laptop&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;COST&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2015-01-15&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2015-01-15.md&#34;&gt;Scalability! But at what COST?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2014-12-29&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2014-12-29.md&#34;&gt;Timely dataflow: core concepts&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Timely&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2014-12-27&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2014-12-27.md&#34;&gt;Timely dataflow: reboot&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rust&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2014-12-16&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2014-12-16.md&#34;&gt;Columnarization in Rust, part 2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rust&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2014-12-15&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/raw/master/posts/2014-12-15.md&#34;&gt;Columnarization in Rust&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>