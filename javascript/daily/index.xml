<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-18T01:35:25Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>antonioru/beautiful-react-hooks</title>
    <updated>2022-10-18T01:35:25Z</updated>
    <id>tag:github.com,2022-10-18:/antonioru/beautiful-react-hooks</id>
    <link href="https://github.com/antonioru/beautiful-react-hooks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥 A collection of beautiful and (hopefully) useful React hooks to speed-up your components and hooks development 🔥&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/beautifulinteractions/beautiful-react-hooks/workflows/CI/CD/badge.svg?sanitize=true&#34; alt=&#34;CI/CD&#34;&gt; &lt;a href=&#34;https://coveralls.io/github/beautifulinteractions/beautiful-react-hooks?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/beautifulinteractions/beautiful-react-hooks/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/npm/v/beautiful-react-hooks&#34; alt=&#34;npm&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/beautifulinteractions/beautiful-react-hooks?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/logo.png&#34; alt=&#34;Beautiful React Hooks&#34; width=&#34;750px&#34;&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div&gt; &#xA; &lt;p align=&#34;center&#34;&gt; A collection of beautiful (and hopefully useful) React hooks to speed-up your components and hooks development &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://antonioru.github.io/beautiful-react-hooks/&#34; target=&#34;_blank&#34;&gt; 🌟 Live playground here 🌟 &lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/usage_example.png&#34; alt=&#34;Usage example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;🇬🇧 English | &lt;a href=&#34;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.zh-CN.md&#34;&gt;🇨🇳 简体中文&lt;/a&gt; | &lt;a href=&#34;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.it-IT.md&#34;&gt;🇮🇹 Italiano&lt;/a&gt; | &lt;a href=&#34;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.es-ES.md&#34;&gt; 🇪🇸 Español &lt;/a&gt; | &lt;a href=&#34;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.uk-UA.md&#34;&gt;🇺🇦 Ukrainian&lt;/a&gt; | &lt;a href=&#34;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.pt-BR.md&#34;&gt;🇧🇷 Brazilian Portuguese&lt;/a&gt; | &lt;a href=&#34;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.pl-PL.md&#34;&gt;🇵🇱 Polski &lt;/a&gt; | &lt;a href=&#34;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.jp-JP.md&#34;&gt;🇯🇵 日本語 &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💡 Why?&lt;/h2&gt; &#xA;&lt;p&gt;React custom hooks allow to abstract components&#39; business logic into single reusable functions.&lt;br&gt; So far, we&#39;ve found that most of the hooks we&#39;ve created and therefore shared between our internal projects have quite often a similar gist that involves callback references, events and components&#39; lifecycle. &lt;br&gt; For this reason we&#39;ve tried to sum up that gist into &lt;code&gt;beautiful-react-hooks&lt;/code&gt;: a collection of (&lt;em&gt;hopefully&lt;/em&gt;) useful React hooks to possibly help other companies and professionals to speed up their development process.&lt;br&gt;&lt;br&gt; Furthermore, we created a concise yet concrete API having in mind the code readability, focusing to keep the learning curve as lower as possible so that the it can be used and shared in bigger teams.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;-- Please before using any hook, read its documentation! --&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;☕️ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Concise API&lt;/li&gt; &#xA; &lt;li&gt;Small and lightweight&lt;/li&gt; &#xA; &lt;li&gt;Easy to learn&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://antonioru.github.io/beautiful-react-hooks/&#34; target=&#34;_blank&#34;&gt; 🌟 Live playground here 🌟 &lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🕺 Install&lt;/h2&gt; &#xA;&lt;p&gt;by using &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install beautiful-react-hooks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;by using &lt;code&gt;yarn&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ yarn add beautiful-react-hooks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🎨 Hooks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useQueryParam.md&#34;&gt;useQueryParam&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useQueryParams.md&#34;&gt;useQueryParams&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useSearchQuery.md&#34;&gt;useSearchQuery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useURLSearchParams.md&#34;&gt;useURLSearchParams&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useInfiniteScroll.md&#34;&gt;useInfiniteScroll&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useObservable.md&#34;&gt;useObservable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useEvent.md&#34;&gt;useEvent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useGlobalEvent.md&#34;&gt;useGlobalEvent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/usePreviousValue.md&#34;&gt;usePreviousValue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useValueHistory.md&#34;&gt;useValueHistory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useValidatedState.md&#34;&gt;useValidatedState&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useMediaQuery.md&#34;&gt;useMediaQuery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useOnlineState.md&#34;&gt;useOnlineState&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useViewportSpy.md&#34;&gt;useViewportSpy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useViewportState.md&#34;&gt;useViewportState&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useSpeechSynthesis.md&#34;&gt;useSpeechSynthesis&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useSystemVoices.md&#34;&gt;useSystemVoices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useGeolocation.md&#34;&gt;useGeolocation&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useGeolocationState.md&#34;&gt;useGeolocationState&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useGeolocationEvents.md&#34;&gt;useGeolocationEvents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDrag.md&#34;&gt;useDrag&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDropZone.md&#34;&gt;useDropZone&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDragEvents.md&#34;&gt;useDragEvents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useMouse.md&#34;&gt;useMouse&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useMouseState.md&#34;&gt;useMouseState&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useMouseEvents.md&#34;&gt;useMouseEvents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useTouch.md&#34;&gt;useTouch&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useTouchState.md&#34;&gt;useTouchState&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useTouchEvents.md&#34;&gt;useTouchEvents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useLifecycle.md&#34;&gt;useLifecycle&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDidMount.md&#34;&gt;useDidMount&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useWillUnmount.md&#34;&gt;useWillUnmount&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useWindowResize.md&#34;&gt;useWindowResize&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useWindowScroll.md&#34;&gt;useWindowScroll&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useRequestAnimationFrame.md&#34;&gt;useRequestAnimationFrame&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useResizeObserver.md&#34;&gt;useResizeObserver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useTimeout.md&#34;&gt;useTimeout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useInterval.md&#34;&gt;useInterval&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDebouncedCallback.md&#34;&gt;useDebouncedCallback&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useThrottledCallback.md&#34;&gt;useThrottledCallback&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useLocalStorage.md&#34;&gt;useLocalStorage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useSessionStorage.md&#34;&gt;useSessionStorage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDefaultedState.md&#34;&gt;useDefaultedState&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useRenderInfo.md&#34;&gt;useRenderInfo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useSwipe.md&#34;&gt;useSwipe&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useHorizontalSwipe.md&#34;&gt;useHorizontalSwipe&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useVerticalSwipe.md&#34;&gt;useVerticalSwipe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useSwipeEvents.md&#34;&gt;useSwipeEvents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useConditionalTimeout.md&#34;&gt;useConditionalTimeout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useCookie.md&#34;&gt;useCookie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDarkMode.md&#34;&gt;useDarkMode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useUpdateEffect.md&#34;&gt;useUpdateEffect&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useIsFirstRender.md&#34;&gt;useIsFirstRender&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useMutationObserver.md&#34;&gt;useMutationObserver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useAudio.md&#34;&gt;useAudio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useObjectState.md&#34;&gt;useObjectState&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useToggle.md&#34;&gt;useToggle&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://antonioru.github.io/beautiful-react-hooks/&#34; target=&#34;_blank&#34;&gt; 🌟 Live playground here 🌟 &lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Peer dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Some hooks are built on top of third-party libraries (rxjs, react-router-dom, redux), therefore you will notice those libraries listed as peer dependencies. You don&#39;t have to install these dependencies unless you directly use those hooks.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are very welcome and wanted.&lt;/p&gt; &#xA;&lt;p&gt;To submit your custom hook, please make sure your read our &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; guidelines.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Before submitting&lt;/strong&gt; a new merge request, please make sure:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;make sure to write tests for your code, run &lt;code&gt;npm test&lt;/code&gt; and &lt;code&gt;npm build&lt;/code&gt; before submitting your merge request.&lt;/li&gt; &#xA; &lt;li&gt;in case you&#39;re creating a custom hook, make sure you&#39;ve added the documentation (&lt;em&gt;you can possibly use the &lt;a href=&#34;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/HOOK_DOCUMENTATION_TEMPLATE.md&#34;&gt;HOOK_DOCUMENTATION_TEMPLATE&lt;/a&gt; to document your custom hook&lt;/em&gt;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Made with&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mochajs.org/&#34;&gt;Mocha&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chaijs.com/&#34;&gt;Chai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://testing-library.com/docs/react-testing-library/intro&#34;&gt;@testing-library/react&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-hooks-testing-library.com/&#34;&gt;@testing-library/react-hooks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Icon made by &lt;a href=&#34;https://www.flaticon.com/authors/freepik&#34;&gt;Freepik&lt;/a&gt; from &lt;a href=&#34;https://www.flaticon.com/free-icon/hook_1081812&#34;&gt;www.flaticon.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ckalgos/FUT-Auto-Buyer</title>
    <updated>2022-10-18T01:35:25Z</updated>
    <id>tag:github.com,2022-10-18:/ckalgos/FUT-Auto-Buyer</id>
    <link href="https://github.com/ckalgos/FUT-Auto-Buyer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fifa UT AutoBuyer / Snipping Bot for fifa ultimate team web app with captcha solver&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FUT AutoBuyer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ckalgos/FUT-Auto-Buyer/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/ckalgos/FUT-Auto-Buyer.svg?style=flat-square&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ckalgos/FUT-Auto-Buyer/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/ckalgos/FUT-Auto-Buyer.svg?style=flat-square&#34; alt=&#34;Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ckalgos/FUT-Auto-Buyer/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ckalgos/FUT-Auto-Buyer.svg?style=flat-square&#34; alt=&#34;Stargazers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ckalgos/FUT-Auto-Buyer/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/ckalgos/FUT-Auto-Buyer.svg?style=flat-square&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/ckalgos/FUT-Auto-Buyer/total.svg?sanitize=true&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;h3 align=&#34;center&#34;&gt;FUT AutoBuyer&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Autobuyer from FIFA Ultimate Team Webapp! &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/ckalgos/FUT-Auto-Buyer/issues&#34;&gt;Report Bug&lt;/a&gt; · &lt;a href=&#34;https://github.com/ckalgos/FUT-Auto-Buyer/issues&#34;&gt;Request Feature&lt;/a&gt; · &lt;a href=&#34;https://www.youtube.com/channel/UC5eLkjmLU2TcE4oiJM9PsyA?sub_confirmation=1&#34;&gt;Subscribe&lt;/a&gt; &lt;/p&gt;&#xA;&lt;h1&gt;Must Read &lt;span&gt;🚫&lt;/span&gt;&lt;/h1&gt; &#xA;&lt;p&gt;These tool is developed to demonstrate how someone can develop script to break our web application by automating stuffs and only for learning purpose.&lt;/p&gt; &#xA;&lt;p&gt;EA might (soft) ban from using transfer market in web app for using this tool. Continuously soft ban might lead to permanent ban as well. Also use of tools like this to gain advantage over other players is not ethically right.&lt;/p&gt; &#xA;&lt;p&gt;Use this tool at your own risk, any developers contributing to this repo won’t held responsibility if your account gets banned.&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;!-- TABLE OF CONTENTS --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ckalgos/FUT-Auto-Buyer/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ckalgos/FUT-Auto-Buyer/main/#Captcha&#34;&gt;AutoSolve Captcha SetUp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ckalgos/FUT-Auto-Buyer/main/#Usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ckalgos/FUT-Auto-Buyer/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ckalgos/FUT-Auto-Buyer/main/#Telegram-Installation-Guide&#34;&gt;Telegram Installation Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ckalgos/FUT-Auto-Buyer/main/#Roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ckalgos/FUT-Auto-Buyer/main/#Developer-Guide&#34;&gt;Developer Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ckalgos/FUT-Auto-Buyer/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ckalgos/FUT-Auto-Buyer/main/#contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- installation --&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add Tamper Monkey Extenstion to your Browser - &lt;a href=&#34;https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=en-GB&#34;&gt;Link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click on fut-auto-buyer.user.js from - &lt;a href=&#34;https://github.com/ckalgos/FUT-Auto-Buyer/releases/&#34;&gt;Latest Release&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Then click on Install/Update.&lt;/li&gt; &#xA; &lt;li&gt;Installation And Demo - &lt;a href=&#34;https://www.youtube.com/watch?v=WATch4hxhtk&#34;&gt;Video Guide&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Now in Ultimate Team Web App, new menu will be added as AutoBuyer.&lt;/p&gt; &#xA;&lt;p&gt;Using mobile? No problem, you can get the app for your os below&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.fut.market.alert&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ckalgos/FUT-Auto-Buyer/main/storeImg/google-play-badge.png&#34; height=&#34;50&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://apps.apple.com/us/app/fut-market-alert/id1590505179&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ckalgos/FUT-Auto-Buyer/main/storeImg/appstore-badge.png&#34; height=&#34;50&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Captcha&lt;/h2&gt; &#xA;&lt;h3&gt;AutoSolve Captcha Setup&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow this &lt;a href=&#34;https://www.youtube.com/watch?v=9p_IMe52LBo&#34;&gt;video&lt;/a&gt; if you are not sure how to set it up.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- Usage --&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;AutoBuyer Settings&lt;/h3&gt; &#xA;&lt;h3&gt;Sell Price&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If specified the autobuyer will list the bought item for the specified price.&lt;/li&gt; &#xA; &lt;li&gt;The tool will list all the cards in transfer target, make sure to move your cards to the club before running the tool to avoid losing the card.&lt;/li&gt; &#xA; &lt;li&gt;Give Sell Price as -1 to move to transfer list without selling.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Buy Price&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If specified the autobuyer will buy the card matching the search critieria for the price less than or equal to specified price.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bid Price&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If specified the autobuyer will bid on the card matching the search critieria for the price less than or equal to specified price.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;No. of cards to buy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Number of cards the autobuyer should buy before auto stopping.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;10&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bid Exact Price&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;By default tool will bid for the lowest possible price and gradually increase the bid , if this flag is enabled bot will directly bid for the specified bid price.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Find Sale Price&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If toggled will use FUTBIN price api to get the player price.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Sell Price Percent&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When find sale price is toggled, this field is to specify the sale price from the percent of FUTBIN Price.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;100&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bid items expiring in:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If specified tool will only bid on items expiring in the given time range.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;1H&lt;/code&gt;) (S for seconds, M for Minutes, H for hours).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Relist Unsold Items:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If enabled bot will periodically check and relist expired item for the previous specified price&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;* Note : This will relist all expired items , not only the item which bot list. So check the Transfer List before enabling this to avoid losing cards&lt;/h3&gt; &#xA;&lt;h3&gt;Wait Time&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The autobuyer will wait for the specified time before making the next search request.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;7 - 15&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Clear sold count&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The autobuyer will clear all the sold items from transfer list when the count exceeds the specified value.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;10&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Rating Threshold&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Will only list the card if the rating of the card is below this value.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;100&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Max purchases per search request&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Indicates the count of cards the tool should buy or bid from the results of each request.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;3&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Stop After&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If specified the tool will automatically stop after running the tool foe the specified interval.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;1H&lt;/code&gt;) (S for seconds, M for Minutes, H for hours).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Pause For&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The parameter has a dependency on Cycle Amount&lt;/li&gt; &#xA; &lt;li&gt;The tool will pause for the specified interval, if the the number of search request in the given cycle matches the specified cycle amount.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;0-0S&lt;/code&gt;) (S for seconds, M for Minutes, H for hours).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Pause Cycle&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Indicates the amount of search request to be made before pausing the tool.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;10&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Min Rating&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If specified tool will bid only on items which has rating greater or equal to this value.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;10&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Max Rating&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If specified tool will bid only on items which has rating lesser or equal to this value.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;100&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Delay To Add&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If add delay after buy is enabled, this field specifies the wait duration.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;1S&lt;/code&gt;) (S for seconds, M for Minutes, H for hours).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Add Delay After Buy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If enabled tool will wait for the specified time after trying to buy/bid on cards.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Max value of random min bid&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If use random min bid is enabled , this field specifies the maximum value till which min bid can be generated.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;300&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Max value of random min buy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If use random min buy is enabled , this field specifies the maximum value till which min buy can be generated.&lt;/li&gt; &#xA; &lt;li&gt;Default Value (&lt;code&gt;300&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Use Random Min Bid&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If enabled tool will randomize min bid for each search to avoid cached result.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Use Random Min Buy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If enabled tool will randomize min buy for each search to avoid cached result.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Skip GK&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If enabled tool will skip bidding/buying GK Cards.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Close On Captcha Trigger&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If enabled tool will close the web app when Captcha gets triggered.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Delay After Buy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If enabled tool will add 1 second delay after each buy request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Error Codes to stop bot&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;List of error code on which bot should stop, value should be in csv format.&lt;/li&gt; &#xA; &lt;li&gt;Ex - 421,461,512&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Sound Notification&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If enabled tool will gives sound notification for actions like buy card / captcha trigger etc...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To use this tool, the user should have access to the transfer market.&lt;/li&gt; &#xA; &lt;li&gt;Hence play the required number of games to get access to the transfer market before trying this tool.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- Telegram --&gt; &#xA;&lt;h2&gt;Telegram-Installation-Guide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Telegram&lt;/li&gt; &#xA; &lt;li&gt;Add @BotFather as a contact in telegram&lt;/li&gt; &#xA; &lt;li&gt;Send BotFather /newbot&lt;/li&gt; &#xA; &lt;li&gt;Type in your individual details like name etc.&lt;/li&gt; &#xA; &lt;li&gt;Follow the prompts, and finally copy it’s HTTP API Token&lt;/li&gt; &#xA; &lt;li&gt;Add your bot as a contact&lt;/li&gt; &#xA; &lt;li&gt;Send /start to your bot&lt;/li&gt; &#xA; &lt;li&gt;Visit this URL. &lt;a href=&#34;https://api.telegram.org/botXXX:YYYYY/getUpdates&#34;&gt;https://api.telegram.org/botXXX:YYYYY/getUpdates&lt;/a&gt; (replace the XXX: YYYYY with your BOT HTTP API Token you just got from the Telegram B otFather)&lt;/li&gt; &#xA; &lt;li&gt;Here you can find your chat id (this process can take some minutes) --&amp;gt; e.g. &#34;chat&#34;:{&#34;id&#34;:133333338,&#34;first_name&#34;:&#34;John&#34;,&#34;last_name&#34;:&#34;Player&#34;&lt;/li&gt; &#xA; &lt;li&gt;Now you can add your bot token and chat id at the notification settings inside the bot GUI (near the Bottom)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ROADMAP --&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/ckalgos/FUT-Auto-Buyer/issues&#34;&gt;open issues&lt;/a&gt; for a list of proposed features (and known issues).&lt;/p&gt; &#xA;&lt;h2&gt;💬 Community&lt;/h2&gt; &#xA;&lt;p&gt;If you are looking for help or any new feature request, join our discord group&lt;/p&gt; &#xA;&lt;img src=&#34;https://img.shields.io/discord/768336764447621122?color=green&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/cktHYmp&#34;&gt;Join&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- DevGuide --&gt; &#xA;&lt;h2&gt;Developer-Guide&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/cktHYmp&#34;&gt;Join this discord channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- CONTRIBUTING --&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Any contributions you make are &lt;strong&gt;greatly appreciated&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the Project&lt;/li&gt; &#xA; &lt;li&gt;Create your Feature Branch (&lt;code&gt;git checkout -b feature/FeatureBranch&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your Changes (&lt;code&gt;git commit -m &#39;Add some FeatureBranch&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the Branch (&lt;code&gt;git push origin feature/FeatureBranch&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;!-- CONTACT --&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Instagram - &lt;a href=&#34;https://www.instagram.com/ckalgos/&#34;&gt;@Instagram&lt;/a&gt; - &lt;a href=&#34;mailto:ckalgos@gmail.com&#34;&gt;ckalgos@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Project Link: &lt;a href=&#34;https://github.com/ckalgos/FUT-Auto-Buyer&#34;&gt;https://github.com/ckalgos/FUT-Auto-Buyer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt;</summary>
  </entry>
  <entry>
    <title>mifi/lossless-cut</title>
    <updated>2022-10-18T01:35:25Z</updated>
    <id>tag:github.com,2022-10-18:/mifi/lossless-cut</id>
    <link href="https://github.com/mifi/lossless-cut" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The swiss army knife of lossless video/audio editing&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://mifi.no/losslesscut/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mifi/lossless-cut/master/src/icon.svg?sanitize=true&#34; width=&#34;130&#34; alt=&#34;LosslessCut&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;b&gt;LosslessCut&lt;/b&gt;&lt;/p&gt; The swiss army knife of lossless video/audio editing &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://github.com/mifi/lossless-cut/workflows/Build/release/badge.svg?sanitize=true&#34;&gt; &#xA; &lt;a href=&#34;https://paypal.me/mifino/usd&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/mifi/lossless-cut#download&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/mifi/lossless-cut&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://discord.gg/fhnEREfUJ3&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/986051448385183804&#34;&gt;&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://mifi.no/thanks/&#34;&gt;Thanks to my supporters&lt;/a&gt; and everyone who purchased LosslessCut! &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/mifi/lossless-cut/raw/master/main_screenshot.jpg&#34; width=&#34;600&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;LosslessCut aims to be the ultimate cross platform FFmpeg GUI for extremely fast and lossless operations on video, audio, subtitle and other related media files. The main feature is lossless trimming and cutting of video and audio files, which is great for saving space by rough-cutting your large video files taken from a video camera, GoPro, drone, etc. It lets you quickly extract the good parts from your videos and discard many gigabytes of data without doing a slow re-encode and thereby losing quality. Or you can add a music or subtitle track to your video without needing to encode. Everything is extremely fast because it does an almost direct data copy, fueled by the awesome FFmpeg which does all the grunt work.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lossless cutting of most video and audio formats&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mifi/lossless-cut/issues/126&#34;&gt;Smart cut&lt;/a&gt; (experimental)&lt;/li&gt; &#xA; &lt;li&gt;Losslessly cut out parts of video/audio (for cutting away commercials etc.)&lt;/li&gt; &#xA; &lt;li&gt;Losslessly rearrange the order of video/audio segments&lt;/li&gt; &#xA; &lt;li&gt;Lossless merge/concatenation of arbitrary files (with identical codecs parameters, e.g. from the same camera)&lt;/li&gt; &#xA; &lt;li&gt;Lossless stream editing &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Combine arbitrary tracks from multiple files (ex. add music or subtitle track to a video file)&lt;/li&gt; &#xA;   &lt;li&gt;Remove unneeded tracks&lt;/li&gt; &#xA;   &lt;li&gt;Replace or re-encode only some tracks&lt;/li&gt; &#xA;   &lt;li&gt;Extract all tracks from a file (extract video, audio, subtitle, attachments and other tracks from one file into separate files)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Batch view for fast multi-file workflow&lt;/li&gt; &#xA; &lt;li&gt;Keyboard shortcut workflow&lt;/li&gt; &#xA; &lt;li&gt;Losslessly remux video/audio into a different container (file) format&lt;/li&gt; &#xA; &lt;li&gt;Take full-resolution snapshots from videos in JPEG/PNG format, or export ranges of video frames to images&lt;/li&gt; &#xA; &lt;li&gt;Manual input of cutpoint times&lt;/li&gt; &#xA; &lt;li&gt;Apply a per-file timecode offset (and auto load timecode from file)&lt;/li&gt; &#xA; &lt;li&gt;Edit file metadata, per-track metadata and per-track disposition&lt;/li&gt; &#xA; &lt;li&gt;Change rotation/orientation metadata in videos&lt;/li&gt; &#xA; &lt;li&gt;View technical data about all tracks&lt;/li&gt; &#xA; &lt;li&gt;Timeline zoom and frame/keyframe jumping for cutting around keyframes&lt;/li&gt; &#xA; &lt;li&gt;Video thumbnails and audio waveform&lt;/li&gt; &#xA; &lt;li&gt;Saves per project cut segments to project file&lt;/li&gt; &#xA; &lt;li&gt;View FFmpeg last command log so you can modify and re-run recent commands on the command line&lt;/li&gt; &#xA; &lt;li&gt;Undo/redo&lt;/li&gt; &#xA; &lt;li&gt;Give labels to cut segments&lt;/li&gt; &#xA; &lt;li&gt;Annotate segments with tags&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mifi/lossless-cut/master/import-export.md&#34;&gt;Import/export&lt;/a&gt; segments: MP4/MKV chapter marks, Text file, YouTube, CSV, CUE, XML (DaVinci, Final Cut Pro) and more&lt;/li&gt; &#xA; &lt;li&gt;MKV/MP4 embedded chapters marks editor&lt;/li&gt; &#xA; &lt;li&gt;View subtitles&lt;/li&gt; &#xA; &lt;li&gt;Customizable keyboard hotkeys&lt;/li&gt; &#xA; &lt;li&gt;Black scene detection&lt;/li&gt; &#xA; &lt;li&gt;Divide timeline into segments with length L or into N segments or even randomized segments!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mifi/lossless-cut/master/cli.md&#34;&gt;Basic CLI support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example lossless use cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cut out commercials from a recorded TV show (and re-format from TS to MP4)&lt;/li&gt; &#xA; &lt;li&gt;Remove audio tracks from a file&lt;/li&gt; &#xA; &lt;li&gt;Extract music track from a video and cut it to your needs&lt;/li&gt; &#xA; &lt;li&gt;Add music to a video (or replace existing audio track)&lt;/li&gt; &#xA; &lt;li&gt;Combine audio and video tracks from separate recordings&lt;/li&gt; &#xA; &lt;li&gt;Include an external subtitle into a video&lt;/li&gt; &#xA; &lt;li&gt;Quickly change a H264/H265 MKV video to MOV or MP4 for playback on iPhone&lt;/li&gt; &#xA; &lt;li&gt;Import a list of cut times from other tool as a EDL (edit decision list, CSV) and run these cuts with LosslessCut&lt;/li&gt; &#xA; &lt;li&gt;Export a list of cut times as a CSV EDL and process these in another tool&lt;/li&gt; &#xA; &lt;li&gt;Quickly cut a file by its MP4/MKV chapters&lt;/li&gt; &#xA; &lt;li&gt;Quickly cut a &lt;a href=&#34;https://youtube-dl.org/&#34;&gt;YouTube video&lt;/a&gt; by its chapters (or music times from a comment)&lt;/li&gt; &#xA; &lt;li&gt;Change the language of a file&#39;s audio/subtitle tracks&lt;/li&gt; &#xA; &lt;li&gt;Attach cover art / thumbnail to videos / audio from an external JPEG file or from a frame on the timeline&lt;/li&gt; &#xA; &lt;li&gt;Change author, title, GPS position, recording time of a video&lt;/li&gt; &#xA; &lt;li&gt;Fix rotation of a video that has the wrong orientation flag set &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Great for rotating phone videos that come out the wrong way without actually re-encoding the video.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Loop a video / audio clip X times quickly without re-encoding &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;See &lt;a href=&#34;https://github.com/mifi/lossless-cut/issues/284&#34;&gt;#284&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Convert a video or parts of it into X image files (not lossless)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Export cut times as YouTube Chapters&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Export with Merge and &#34;Create chapters from merged segments&#34; enabled&lt;/li&gt; &#xA; &lt;li&gt;Open the exported file and select &#34;Import chapters&#34; in the dialog&lt;/li&gt; &#xA; &lt;li&gt;File -&amp;gt; Export project -&amp;gt; YouTube Chapters&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Re-encode only the audio track, keeping the lossless video track&lt;/h3&gt; &#xA;&lt;p&gt;First export each track as individual files. Then use Handbrake or similar to re-encode the audio file (if mp4 file, encode as AAC.) Then open the extracted video stream in LosslessCut. The open your encoded audio file and select &#34;Include all tracks from the new file&#34;. Then export.&lt;/p&gt; &#xA;&lt;h3&gt;Advanced multi-step workflows&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; you can use LosslessCut in multiple passes in order to achieve separate trimming of individual tracks:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open a file an export all tracks as individual files&lt;/li&gt; &#xA; &lt;li&gt;Open the exported track files independently and cut them as desired&lt;/li&gt; &#xA; &lt;li&gt;Add the track back to the video and combine them to one output video&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;If you want to support my continued work on LosslessCut, and you want the advantage of a secure and simple installation process with automatic updates, consider getting it from your favorite store:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apps.apple.com/app/id1505323402&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mifi/lossless-cut/master/mac-app-store-badge.svg?sanitize=true&#34; alt=&#34;Mac App Store&#34; height=&#34;50&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.microsoft.com/store/apps/9P30LSR4705L?cid=storebadge&amp;amp;ocid=badge&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mifi/lossless-cut/master/ms-store-badge.svg?sanitize=true&#34; alt=&#34;MS badge&#34; height=&#34;50&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://snapcraft.io/losslesscut&#34;&gt;&lt;img src=&#34;https://snapcraft.io/static/images/badges/en/snap-store-black.svg?sanitize=true&#34; alt=&#34;Snapcraft&#34; height=&#34;50&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you prefer to download the executables manually, this will of course always be free:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mac OS X: &lt;a href=&#34;https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-mac-x64.dmg&#34;&gt;DMG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows: &lt;a href=&#34;https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-win-x64.7z&#34;&gt;7zip&lt;/a&gt; (APPX not available)&lt;/li&gt; &#xA; &lt;li&gt;Linux: &lt;a href=&#34;https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-x64.tar.bz2&#34;&gt;x64 tar.bz2&lt;/a&gt; / &lt;a href=&#34;https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-x86_64.AppImage&#34;&gt;x64 AppImage&lt;/a&gt; / &lt;a href=&#34;https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-arm64.tar.bz2&#34;&gt;arm64 tar.bz2&lt;/a&gt; / &lt;a href=&#34;https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-armv7l.tar.bz2&#34;&gt;Raspberry Pi armv7l&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mifi/lossless-cut/releases&#34;&gt;More releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you find LosslessCut useful, I&#39;m very thankful for &lt;a href=&#34;https://github.com/mifi/lossless-cut#donate-&#34;&gt;donations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Difference between App Stores and GitHub download&lt;/h3&gt; &#xA;&lt;p&gt;They have exactly the same in-app features, except for a few platform limitations. Apple doesn&#39;t allow opening VOB files with App Store apps. Apple App Store apps need to prompt for output directory. LosslessCut version in the App Stores is a few versions behind the GitHub version, because I want to be sure that the new versions work perfectly before releasing in the App Stores. GitHub version can contain new, untested features and may contain some bugs. I consider the newest GitHub versions to be a public &#34;beta&#34; test.&lt;/p&gt; &#xA;&lt;h2&gt;Supported formats&lt;/h2&gt; &#xA;&lt;p&gt;Since LosslessCut is based on Chromium and uses the HTML5 video player, not all FFmpeg supported formats will be supported smoothly. The following formats/codecs should generally work: MP4, MOV, WebM, MKV, OGG, WAV, MP3, AAC, H264, Theora, VP8, VP9 For more information about supported formats / codecs, see &lt;a href=&#34;https://www.chromium.org/audio-video&#34;&gt;https://www.chromium.org/audio-video&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Unsupported files can still be converted to a supported format/codec from the &lt;code&gt;File&lt;/code&gt; menu. (Try the &#34;fastest&#34; option first.) A low quality version of the file (with/without audio) will then be created and opened in the player. The actual cut/export operation will still be performed on the original file, so it will be lossless. This allows for potentially opening any file that FFmpeg is able to decode.&lt;/p&gt; &#xA;&lt;h2&gt;Video demos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=pYHMxXy05Jg&#34;&gt;Common features&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=4pYJ93cn80E&#34;&gt;How to add a thumbnail / cover art to an MP4&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=MRBGDsuw_WU&#34;&gt;How to add multi-language audio to a video&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Your video here?&lt;/strong&gt; If you would like to make a video showing off LosslessCut use cases, let me know and I can link it here!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Typical workflow&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Drag drop a video file into player or use &lt;kbd&gt;⌘&lt;/kbd&gt;/&lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;O&lt;/kbd&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;kbd&gt;SPACE&lt;/kbd&gt; to play/pause or &lt;kbd&gt;◀&lt;/kbd&gt;&lt;kbd&gt;▶&lt;/kbd&gt;, &lt;kbd&gt;,&lt;/kbd&gt;&lt;kbd&gt;.&lt;/kbd&gt; or mouse/trackpad wheel to seek back/forth.&lt;/li&gt; &#xA; &lt;li&gt;Select the cut segment&#39;s start and end time by moving the time marker and then pressing &lt;kbd&gt;I&lt;/kbd&gt; to set start time, and &lt;kbd&gt;O&lt;/kbd&gt; to set end time. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note that all segments you create will be &lt;strong&gt;preserved&lt;/strong&gt; and exported as new files. You can change this behavior with the &lt;strong&gt;Yin Yang&lt;/strong&gt; symbol ☯️, in which case it will instead &lt;strong&gt;remove&lt;/strong&gt; all selected segments and export the parts &lt;strong&gt;between&lt;/strong&gt; segments.&lt;/li&gt; &#xA;   &lt;li&gt;Note also that start times will not be accurate, see &lt;a href=&#34;https://raw.githubusercontent.com/mifi/lossless-cut/master/issues.md&#34;&gt;Known issues&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(optional)&lt;/em&gt; If you want to add more than one segment, move to the desired start time and press &lt;kbd&gt;+&lt;/kbd&gt;, then select the next segment start/end times with &lt;kbd&gt;I&lt;/kbd&gt;/&lt;kbd&gt;O&lt;/kbd&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(optional)&lt;/em&gt; If you want to re-merge all the selected segments into one file after cutting, toggle the button &lt;code&gt;Separate files&lt;/code&gt; to &lt;code&gt;Merge cuts&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(optional)&lt;/em&gt; If you want to export to a certain output folder, press the &lt;code&gt;Working dir unset&lt;/code&gt; button (default: Input file folder)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(optional)&lt;/em&gt; If you want to change orientation, press the &lt;strong&gt;rotation&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(optional)&lt;/em&gt; By default, audio, video and subtitle tracks from the input file will be cut and exported. Press the &lt;code&gt;Tracks&lt;/code&gt; button to customise and/or add new tracks from other files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(optional)&lt;/em&gt; select a new output format&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(optional)&lt;/em&gt; In the right-hand segments panel, right click a segment for options, or drag-drop to reorder. Segments will appear in this order in the merged output.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;When done, press the &lt;code&gt;Export&lt;/code&gt; button (or &lt;kbd&gt;E&lt;/kbd&gt;) to show an overview with export options.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(optional)&lt;/em&gt; adjust any export options&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Then press &lt;code&gt;Export&lt;/code&gt; again to confirm the export&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Press the &lt;strong&gt;Camera&lt;/strong&gt; button (or &lt;kbd&gt;C&lt;/kbd&gt;) if you want to take a JPEG/PNG snapshot from the current time&lt;/li&gt; &#xA; &lt;li&gt;If you want to move the original file to trash, press the &lt;strong&gt;trash&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;For best results you may need to trial and error with another output format (Matroska takes nearly everything), change keyframe cut mode or disable some tracks (see &lt;a href=&#34;https://raw.githubusercontent.com/mifi/lossless-cut/master/issues.md&#34;&gt;known issues&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;kbd&gt;H&lt;/kbd&gt; to view help and all keyboard shortcuts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; The original video file will not be modified. Instead, a file is created file in the same directory as the original file with from/to timestamps in the file name.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mifi/lossless-cut/master/import-export.md&#34;&gt;Import / export&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mifi/lossless-cut/master/cli.md&#34;&gt;Command line interface (CLI)&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mifi/lossless-cut/master/developer-notes.md&#34;&gt;Developer notes&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mifi/lossless-cut/master/issues.md&#34;&gt;Known issues, limitations, troubleshooting, FAQ&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you have any problem or question, &lt;a href=&#34;https://raw.githubusercontent.com/mifi/lossless-cut/master/issues.md&#34;&gt;please read this&lt;/a&gt; before creating an issue. I try to answer most common questions here.&lt;/p&gt; &#xA;&lt;h2&gt;Donate 🙈&lt;/h2&gt; &#xA;&lt;p&gt;This project is maintained by me alone. The project will always remain free and open source, but if it&#39;s useful for you, consider supporting me. :) It will give me extra motivation to improve it. Or even better &lt;a href=&#34;https://www.ffmpeg.org/donations.html&#34;&gt;donate to ffmpeg&lt;/a&gt; because they are doing the world a big favor 🙏&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paypal.me/mifino/usd&#34;&gt;Paypal&lt;/a&gt; | &lt;a href=&#34;https://mifi.no/thanks&#34;&gt;crypto&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Articles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://console.substack.com/p/console-93&#34;&gt;Featured in the Console newsletter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Attributions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;App icon made by &lt;a href=&#34;http://www.flaticon.com/authors/dimi-kazak&#34; title=&#34;Dimi Kazak&#34;&gt;Dimi Kazak&lt;/a&gt; from &lt;a href=&#34;http://www.flaticon.com&#34; title=&#34;Flaticon&#34;&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href=&#34;http://creativecommons.org/licenses/by/3.0/&#34; title=&#34;Creative Commons BY 3.0&#34;&gt;CC 3.0 BY&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lottiefiles.com/7077-magic-flow&#34;&gt;Lottie animation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Thanks to Adi Abinun for his UI sketch work, inspiration and guidance&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mifi.no/thanks/&#34;&gt;Thanks to everyone for supporting&lt;/a&gt; my open source work 🙌&lt;/li&gt; &#xA; &lt;li&gt;Thanks to translators who helped translate the app. &lt;a href=&#34;https://hosted.weblate.org/projects/losslesscut/losslesscut/&#34;&gt;You can too!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More software&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I made a command line video editor with slick transitions and lots of colors! &lt;a href=&#34;https://github.com/mifi/editly&#34;&gt;editly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;I made a tool for cross platform sharing of files between computer/phone over the local network: &lt;a href=&#34;https://github.com/mifi/ezshare&#34;&gt;ezshare&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;I created a super simple Instagram bot for getting more followers &lt;a href=&#34;https://github.com/mifi/SimpleInstaBot&#34;&gt;SimpleInstaBot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Made with ❤️ in &lt;a href=&#34;https://www.youtube.com/watch?v=uQIv8Vo9_Jc&#34;&gt;🇳🇴&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mifi.no/&#34;&gt;More apps by mifi.no&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follow me on &lt;a href=&#34;https://github.com/mifi/&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/channel/UC6XlvVH63g0H54HSJubURQA&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://www.instagram.com/mifi.no/&#34;&gt;IG&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/mifi_no&#34;&gt;Twitter&lt;/a&gt; for more awesome content!&lt;/p&gt;</summary>
  </entry>
</feed>