<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-09T01:35:08Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Expensify/App</title>
    <updated>2022-10-09T01:35:08Z</updated>
    <id>tag:github.com,2022-10-09:/Expensify/App</id>
    <link href="https://github.com/Expensify/App" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Welcome to New Expensify: a complete re-imagination of financial collaboration, centered around chat. Help us build the next generation of Expensify by sharing feedback and contributing to the code.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://new.expensify.com&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Expensify/App/main/web/favicon.png&#34; width=&#34;64&#34; height=&#34;64&#34; alt=&#34;New Expensify Icon&#34;&gt; &lt;/a&gt; &#xA; &lt;h1&gt; &lt;a href=&#34;https://new.expensify.com&#34;&gt; New Expensify &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;h4&gt;Table of Contents&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/#local-development&#34;&gt;Local Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/#running-the-tests&#34;&gt;Running The Tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/#debugging&#34;&gt;Debugging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/#app-structure-and-conventions&#34;&gt;App Structure and Conventions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/#Philosophy&#34;&gt;Philosophy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/#Internationalization&#34;&gt;Internationalization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/#deploying&#34;&gt;Deploying&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Additional Reading&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/contributingGuides/API.md&#34;&gt;API Details&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/contributingGuides/OFFLINE_UX.md&#34;&gt;Offline First&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/contributingGuides/CONTRIBUTING.md&#34;&gt;Contributing to Expensify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/CODE_OF_CONDUCT.md&#34;&gt;Expensify Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/contributingGuides/CLA.md&#34;&gt;Contributor License Agreement&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Local development&lt;/h1&gt; &#xA;&lt;p&gt;These instructions should get you set up ready to work on New Expensify 🙌&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;code&gt;nvm&lt;/code&gt; then &lt;code&gt;node&lt;/code&gt; &amp;amp; &lt;code&gt;npm&lt;/code&gt;: &lt;code&gt;brew install nvm &amp;amp;&amp;amp; nvm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;code&gt;watchman&lt;/code&gt;: &lt;code&gt;brew install watchman&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install dependencies: &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can use any IDE or code editing tool for developing on any platform. Use your favorite!&lt;/p&gt; &#xA;&lt;h2&gt;Recommended &lt;code&gt;node&lt;/code&gt; setup&lt;/h2&gt; &#xA;&lt;p&gt;In order to have more consistent builds, we use a strict &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; version as defined in the &lt;code&gt;package.json&lt;/code&gt; &lt;code&gt;engines&lt;/code&gt; field and &lt;code&gt;.nvmrc&lt;/code&gt; file. &lt;code&gt;npm install&lt;/code&gt; will fail if you do not use the version defined, so it is recommended to install &lt;code&gt;node&lt;/code&gt; via &lt;code&gt;nvm&lt;/code&gt; for easy node version management. Automatic &lt;code&gt;node&lt;/code&gt; version switching can be installed for &lt;a href=&#34;https://github.com/nvm-sh/nvm#zsh&#34;&gt;&lt;code&gt;zsh&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/nvm-sh/nvm#bash&#34;&gt;&lt;code&gt;bash&lt;/code&gt;&lt;/a&gt; using &lt;code&gt;nvm&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running the web app 🕸&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To run the &lt;strong&gt;development web app&lt;/strong&gt;: &lt;code&gt;npm run web&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Changes applied to Javascript will be applied automatically via WebPack as configured in &lt;code&gt;webpack.dev.js&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running the iOS app 📱&lt;/h2&gt; &#xA;&lt;p&gt;For an M1 Mac, read this &lt;a href=&#34;https://stackoverflow.com/c/expensify/questions/11580&#34;&gt;SO&lt;/a&gt; for installing cocoapods.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To install the iOS dependencies, run: &lt;code&gt;npm install &amp;amp;&amp;amp; cd ios/ &amp;amp;&amp;amp; pod install &amp;amp;&amp;amp; cd ..&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you are an Expensify employee and want to point the emulator to your local VM, follow &lt;a href=&#34;https://stackoverflow.com/c/expensify/questions/7699&#34;&gt;this&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To run a on a &lt;strong&gt;Development Simulator&lt;/strong&gt;: &lt;code&gt;npm run ios&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Changes applied to Javascript will be applied automatically, any changes to native code will require a recompile&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running the Android app 🤖&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To install the Android dependencies, run: &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go through the instructions on &lt;a href=&#34;https://stackoverflow.com/c/expensify/questions/13283/13284#13284&#34;&gt;this SO post&lt;/a&gt; to start running the app on android.&lt;/li&gt; &#xA; &lt;li&gt;For more information, go through the official React-Native instructions on &lt;a href=&#34;https://reactnative.dev/docs/environment-setup#development-os&#34;&gt;this page&lt;/a&gt; for &#34;React Native CLI Quickstart&#34; &amp;gt; Mac OS &amp;gt; Android&lt;/li&gt; &#xA; &lt;li&gt;If you are an Expensify employee and want to point the emulator to your local VM, follow &lt;a href=&#34;https://stackoverflow.com/c/expensify/questions/7699&#34;&gt;this&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To run a on a &lt;strong&gt;Development Emulator&lt;/strong&gt;: &lt;code&gt;npm run android&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Changes applied to Javascript will be applied automatically, any changes to native code will require a recompile&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running the MacOS desktop app 🖥&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To run the &lt;strong&gt;Development app&lt;/strong&gt;, run: &lt;code&gt;npm run desktop&lt;/code&gt;, this will start a new Electron process running on your MacOS desktop in the &lt;code&gt;dist/Mac&lt;/code&gt; folder.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If you are having issues with &lt;strong&gt;&lt;em&gt;Getting Started&lt;/em&gt;&lt;/strong&gt;, please reference &lt;a href=&#34;https://reactnative.dev/docs/environment-setup&#34;&gt;React Native&#39;s Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you are running into CORS errors like (in the browser dev console) &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Access to fetch at &#39;https://www.expensify.com/api?command=BeginSignIn&#39; from origin &#39;http://localhost:8080&#39; has been blocked by CORS policy&#xA;&lt;/code&gt;&lt;/pre&gt; You probably have a misconfigured &lt;code&gt;.env&lt;/code&gt; file - remove it (&lt;code&gt;rm .env&lt;/code&gt;) and try again&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Expensify engineers that will be testing with the API in your local dev environment please refer to &lt;a href=&#34;https://stackoverflow.com/c/expensify/questions/7699/7700&#34;&gt;these additional instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Environment variables&lt;/h2&gt; &#xA;&lt;p&gt;Creating an &lt;code&gt;.env&lt;/code&gt; file is not necessary. We advise external contributors against it. It can lead to errors when variables referenced here get updated since your local &lt;code&gt;.env&lt;/code&gt; file is ignored.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NEW_EXPENSIFY_URL&lt;/code&gt; - The root URL used for the website&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SECURE_EXPENSIFY_URL&lt;/code&gt; - The URL used to hit the Expensify secure API&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EXPENSIFY_URL&lt;/code&gt; - The URL used to hit the Expensify API&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EXPENSIFY_PARTNER_NAME&lt;/code&gt; - Constant used for the app when authenticating.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EXPENSIFY_PARTNER_PASSWORD&lt;/code&gt; - Another constant used for the app when authenticating. (This is OK to be public)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PUSHER_APP_KEY&lt;/code&gt; - Key used to authenticate with Pusher.com&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SECURE_NGROK_URL&lt;/code&gt; - Secure URL used for &lt;code&gt;ngrok&lt;/code&gt; when testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NGROK_URL&lt;/code&gt; - URL used for &lt;code&gt;ngrok&lt;/code&gt; when testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;USE_NGROK&lt;/code&gt; - Flag to turn &lt;code&gt;ngrok&lt;/code&gt; testing on or off&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;USE_WDYR&lt;/code&gt; - Flag to turn &lt;a href=&#34;https://github.com/welldone-software/why-did-you-render&#34;&gt;&lt;code&gt;Why Did You Render&lt;/code&gt;&lt;/a&gt; testing on or off&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;USE_WEB_PROXY&lt;/code&gt;⚠️- Used in web/desktop development, it starts a server along the local development server to proxy requests to the backend. External contributors should set this to &lt;code&gt;true&lt;/code&gt; otherwise they&#39;ll have CORS errors. If you don&#39;t want to start the proxy server set this explicitly to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CAPTURE_METRICS&lt;/code&gt; (optional) - Set this to &lt;code&gt;true&lt;/code&gt; to capture performance metrics and see them in Flipper see &lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/contributingGuides/PERFORMANCE.md#performance-metrics-opt-in-on-local-release-builds&#34;&gt;PERFORMANCE.md&lt;/a&gt; for more information&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ONYX_METRICS&lt;/code&gt; (optional) - Set this to &lt;code&gt;true&lt;/code&gt; to capture even more performance metrics and see them in Flipper see &lt;a href=&#34;https://github.com/Expensify/react-native-onyx#benchmarks&#34;&gt;React-Native-Onyx#benchmarks&lt;/a&gt; for more information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Running the tests&lt;/h1&gt; &#xA;&lt;h2&gt;Unit tests&lt;/h2&gt; &#xA;&lt;p&gt;Unit tests are valuable when you want to test one component. They should be short, fast, and ideally only test one thing. Often times in order to write a unit test, you may need to mock data, a component, or library. We use the library &lt;a href=&#34;https://jestjs.io/&#34;&gt;Jest&lt;/a&gt; to help run our Unit tests.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To run the &lt;strong&gt;Jest unit tests&lt;/strong&gt;: &lt;code&gt;npm run test&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Debugging&lt;/h1&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If running on the iOS simulator pressing &lt;code&gt;⌘D&lt;/code&gt; will open the debugging menu.&lt;/li&gt; &#xA; &lt;li&gt;This will allow you to attach a debugger in your IDE, React Developer Tools, or your browser.&lt;/li&gt; &#xA; &lt;li&gt;For more information on how to attach a debugger, see &lt;a href=&#34;https://reactnative.dev/docs/debugging#chrome-developer-tools&#34;&gt;React Native Debugging Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Alternatively, you can also set up debugger using &lt;a href=&#34;https://fbflipper.com/&#34;&gt;Flipper&lt;/a&gt;. After installation, press &lt;code&gt;⌘D&lt;/code&gt; and select &#34;Open Debugger&#34;. This will open Flipper window. To view data stored by Onyx, go to Plugin Manager and install &lt;code&gt;async-storage&lt;/code&gt; plugin.&lt;/p&gt; &#xA;&lt;h2&gt;Android&lt;/h2&gt; &#xA;&lt;p&gt;Our React Native Android app now uses the &lt;code&gt;Hermes&lt;/code&gt; JS engine which requires your browser for remote debugging. These instructions are specific to Chrome since that&#39;s what the Hermes documentation provided.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to &lt;code&gt;chrome://inspect&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;code&gt;Configure...&lt;/code&gt; button to add the Metro server address (typically &lt;code&gt;localhost:8081&lt;/code&gt;, check your &lt;code&gt;Metro&lt;/code&gt; output)&lt;/li&gt; &#xA; &lt;li&gt;You should now see a &#34;Hermes React Native&#34; target with an &#34;inspect&#34; link which can be used to bring up a debugger. If you don&#39;t see the &#34;inspect&#34; link, make sure the Metro server is running&lt;/li&gt; &#xA; &lt;li&gt;You can now use the Chrome debug tools. See &lt;a href=&#34;https://reactnative.dev/docs/hermes#debugging-hermes-using-google-chromes-devtools&#34;&gt;React Native Debugging Hermes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Web&lt;/h2&gt; &#xA;&lt;p&gt;To make it easier to test things in web, we expose the Onyx object to the window, so you can easily do &lt;code&gt;Onyx.set(&#39;bla&#39;, 1)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;App Structure and Conventions&lt;/h1&gt; &#xA;&lt;h2&gt;Onyx&lt;/h2&gt; &#xA;&lt;p&gt;This is a persistent storage solution wrapped in a Pub/Sub library. In general that means:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Onyx stores and retrieves data from persistent storage&lt;/li&gt; &#xA; &lt;li&gt;Data is stored as key/value pairs, where the value can be anything from a single piece of data to a complex object&lt;/li&gt; &#xA; &lt;li&gt;Collections of data are usually not stored as a single key (eg. an array with multiple objects), but as individual keys+ID (eg. &lt;code&gt;report_1234&lt;/code&gt;, &lt;code&gt;report_4567&lt;/code&gt;, etc.). Store collections as individual keys when a component will bind directly to one of those keys. For example: reports are stored as individual keys because &lt;code&gt;OptionRow.js&lt;/code&gt; binds to the individual report keys for each link. However, report actions are stored as an array of objects because nothing binds directly to a single report action.&lt;/li&gt; &#xA; &lt;li&gt;Onyx allows other code to subscribe to changes in data, and then publishes change events whenever data is changed&lt;/li&gt; &#xA; &lt;li&gt;Anything needing to read Onyx data needs to: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Know what key the data is stored in (for web, you can find this by looking in the JS console &amp;gt; Application &amp;gt; IndexedDB &amp;gt; OnyxDB &amp;gt; keyvaluepairs)&lt;/li&gt; &#xA;   &lt;li&gt;Subscribe to changes of the data for a particular key or set of keys. React components use &lt;code&gt;withOnyx()&lt;/code&gt; and non-React libs use &lt;code&gt;Onyx.connect()&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Get initialized with the current value of that key from persistent storage (Onyx does this by calling &lt;code&gt;setState()&lt;/code&gt; or triggering the &lt;code&gt;callback&lt;/code&gt; with the values currently on disk as part of the connection process)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Subscribing to Onyx keys is done using a constant defined in &lt;code&gt;ONYXKEYS&lt;/code&gt;. Each Onyx key represents either a collection of items or a specific entry in storage. For example, since all reports are stored as individual keys like &lt;code&gt;report_1234&lt;/code&gt;, if code needs to know about all the reports (eg. display a list of them in the nav menu), then it would subscribe to the key &lt;code&gt;ONYXKEYS.COLLECTION.REPORT&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Actions&lt;/h2&gt; &#xA;&lt;p&gt;Actions are responsible for managing what is on disk. This is usually:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Subscribing to Pusher events to receive data from the server that will get put immediately into Onyx&lt;/li&gt; &#xA; &lt;li&gt;Making XHRs to request necessary data from the server and then immediately putting that data into Onyx&lt;/li&gt; &#xA; &lt;li&gt;Handling any business logic with input coming from the UI layer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The UI layer&lt;/h2&gt; &#xA;&lt;p&gt;This layer is solely responsible for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reflecting exactly the data that is in persistent storage by using &lt;code&gt;withOnyx()&lt;/code&gt; to bind to Onyx data.&lt;/li&gt; &#xA; &lt;li&gt;Taking user input and passing it to an action&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As a convention, the UI layer should never interact with device storage directly or call &lt;code&gt;Onyx.set()&lt;/code&gt; or &lt;code&gt;Onyx.merge()&lt;/code&gt;. Use an action! For example, check out this action that is signing in the user &lt;a href=&#34;https://github.com/Expensify/App/raw/919c890cc391ad38b670ca1b266c114c8b3c3285/src/pages/signin/PasswordForm.js#L78-L78&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;validateAndSubmitForm() {&#xA;    // validate...&#xA;    signIn(this.state.password, this.state.twoFactorAuthCode);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That action will then call &lt;code&gt;Onyx.merge()&lt;/code&gt; to &lt;a href=&#34;https://github.com/Expensify/App/raw/919c890cc391ad38b670ca1b266c114c8b3c3285/src/libs/actions/Session.js#L228-L247&#34;&gt;set default data and a loading state, then make an API request, and set the response with another &lt;code&gt;Onyx.merge()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function signIn(password, twoFactorAuthCode) {&#xA;    Onyx.merge(ONYXKEYS.ACCOUNT, {isLoading: true});&#xA;    Authentication.Authenticate({&#xA;        ...defaultParams,&#xA;        password,&#xA;        twoFactorAuthCode,&#xA;    })&#xA;        .then((response) =&amp;gt; {&#xA;            Onyx.merge(ONYXKEYS.SESSION, {authToken: response.authToken});&#xA;        })&#xA;        .catch((error) =&amp;gt; {&#xA;            Onyx.merge(ONYXKEYS.ACCOUNT, {error: error.message});&#xA;        })&#xA;        .finally(() =&amp;gt; {&#xA;            Onyx.merge(ONYXKEYS.ACCOUNT, {isLoading: false});&#xA;        });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Keeping our &lt;code&gt;Onyx.merge()&lt;/code&gt; out of the view layer and in actions helps organize things as all interactions with device storage and API handling happen in the same place. In addition, actions that are called from inside views should not ever use the &lt;code&gt;.then()&lt;/code&gt; method to set loading/error states, navigate or do any additional data processing. All of this stuff should ideally go into &lt;code&gt;Onyx&lt;/code&gt; and be fed back to the component via &lt;code&gt;withOnyx()&lt;/code&gt;. Design your actions so they clearly describe what they will do and encapsulate all their logic in that action.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Bad&#xA;validateAndSubmitForm() {&#xA;    // validate...&#xA;    this.setState({isLoading: true});&#xA;    signIn()&#xA;        .then((response) =&amp;gt; {&#xA;            if (result.jsonCode === 200) {&#xA;                return;&#xA;            }&#xA;&#xA;            this.setState({error: response.message});&#xA;        })&#xA;        .finally(() =&amp;gt; {&#xA;            this.setState({isLoading: false});&#xA;        });&#xA;}&#xA;&#xA;// Good&#xA;validateAndSubmitForm() {&#xA;    // validate...&#xA;    signIn();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Directory structure&lt;/h2&gt; &#xA;&lt;p&gt;Almost all the code is located in the &lt;code&gt;src&lt;/code&gt; folder, inside it there&#39;s some organization, we chose to name directories that are created to house a collection of items in plural form and using camelCase (eg: pages, libs, etc), the main ones we have for now are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;components: React native components that are re-used in several places.&lt;/li&gt; &#xA; &lt;li&gt;libs: Library classes/functions, these are not React native components (ie: they are not UI)&lt;/li&gt; &#xA; &lt;li&gt;pages: These are components that define pages in the app. The component that defines the page itself should be named &lt;code&gt;&amp;lt;pageName&amp;gt;Page&lt;/code&gt; if there are components used only inside one page, they should live in its own directory named after the &lt;code&gt;&amp;lt;pageName&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;styles: These files define styles used among components/pages&lt;/li&gt; &#xA; &lt;li&gt;contributingGuides: This is just a set of markdown files providing guides and insights to aid developers in learning how to contribute to this repo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There is also a directory called &lt;code&gt;/docs&lt;/code&gt;, which houses the Expensify Help site. It&#39;s a static site that&#39;s built with Jekyll and hosted on GitHub Pages.&lt;/p&gt; &#xA;&lt;h2&gt;File naming/structure&lt;/h2&gt; &#xA;&lt;p&gt;Files should be named after the component/function/constants they export, respecting the casing used for it. ie:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you export a constant named &lt;code&gt;CONST&lt;/code&gt;, its file/directory should be named the &lt;code&gt;CONST&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you export a component named &lt;code&gt;Text&lt;/code&gt;, the file/directory should be named &lt;code&gt;Text&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you export a function named &lt;code&gt;guid&lt;/code&gt;, the file/directory should be named &lt;code&gt;guid&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For files that are utilities that export several functions/classes use the UpperCamelCase version ie: &lt;code&gt;DateUtils&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/higher-order-components.html&#34;&gt;Higher-Order Components&lt;/a&gt; (HOCs) should be named in camelCase, like &lt;code&gt;withOnyx&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;All React components should be PascalCase (a.k.a. UpperCamelCase 🐫).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Platform-Specific File Extensions&lt;/h2&gt; &#xA;&lt;p&gt;In most cases, the code written for this repo should be platform-independent. In such cases, each module should have a single file, &lt;code&gt;index.js&lt;/code&gt;, which defines the module&#39;s exports. There are, however, some cases in which a feature is intrinsically tied to the underlying platform. In such cases, the following file extensions can be used to export platform-specific code from a module:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mobile =&amp;gt; &lt;code&gt;index.native.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;iOS/Android =&amp;gt; &lt;code&gt;index.ios.js&lt;/code&gt;/&lt;code&gt;index.android.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Web =&amp;gt; &lt;code&gt;index.website.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Desktop =&amp;gt; &lt;code&gt;index.desktop.js&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;index.js&lt;/code&gt; should be the default and only platform-specific implementations should be done in their respective files. i.e: If you have mobile-specific implementation in &lt;code&gt;index.native.js&lt;/code&gt;, then the desktop/web implementation can be contained in a shared &lt;code&gt;index.js&lt;/code&gt;. Furthermore, &lt;code&gt;index.native.js&lt;/code&gt; should not be included in the same module as &lt;code&gt;index.ios.js&lt;/code&gt; or &lt;code&gt;index.android.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;API building&lt;/h2&gt; &#xA;&lt;p&gt;When adding new API commands (and preferably when starting using a new one that was not yet used in this codebase) always prefer to return the created/updated data in the command itself, instead of saving and reloading. ie: if we call &lt;code&gt;CreateTransaction&lt;/code&gt;, we should prefer making &lt;code&gt;CreateTransaction&lt;/code&gt; return the data it just created instead of calling &lt;code&gt;CreateTransaction&lt;/code&gt; then &lt;code&gt;Get&lt;/code&gt; rvl=transactionList&lt;/p&gt; &#xA;&lt;h2&gt;Storage Eviction&lt;/h2&gt; &#xA;&lt;p&gt;Different platforms come with varying storage capacities and Onyx has a way to gracefully fail when those storage limits are encountered. When Onyx fails to set or modify a key the following steps are taken:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Onyx looks at a list of recently accessed keys (access is defined as subscribed to or modified) and locates the key that was least recently accessed&lt;/li&gt; &#xA; &lt;li&gt;It then deletes this key and retries the original operation&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;By default, Onyx will not evict anything from storage and will presume all keys are &#34;unsafe&#34; to remove unless explicitly told otherwise.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To flag a key as safe for removal:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add the key to the &lt;code&gt;safeEvictionKeys&lt;/code&gt; option in &lt;code&gt;Onyx.init(options)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Implement &lt;code&gt;canEvict&lt;/code&gt; in the Onyx config for each component subscribing to a key&lt;/li&gt; &#xA; &lt;li&gt;The key will only be deleted when all subscribers return &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;canEvict&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;Onyx.init({&#xA;    safeEvictionKeys: [ONYXKEYS.COLLECTION.REPORT_ACTIONS],&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;export default withOnyx({&#xA;    reportActions: {&#xA;        key: ({reportID}) =&amp;gt; `${ONYXKEYS.COLLECTION.REPORT_ACTIONS}${reportID}`,&#xA;        canEvict: props =&amp;gt; !props.isActiveReport,&#xA;    },&#xA;})(ReportActionsView);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Things to know or brush up on before jumping into the code&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The major difference between React Native and React are the &lt;a href=&#34;https://reactnative.dev/docs/components-and-apis&#34;&gt;components&lt;/a&gt; that are used in the &lt;code&gt;render()&lt;/code&gt; method. Everything else is exactly the same. Any React skills you have can be applied to React Native.&lt;/li&gt; &#xA; &lt;li&gt;The application uses &lt;a href=&#34;https://reactnavigation.org/&#34;&gt;&lt;code&gt;react-navigation&lt;/code&gt;&lt;/a&gt; for navigating between parts of the app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/higher-order-components.html&#34;&gt;Higher Order Components&lt;/a&gt; are used to connect React components to persistent storage via &lt;a href=&#34;https://github.com/Expensify/react-native-onyx&#34;&gt;&lt;code&gt;react-native-onyx&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Philosophy&lt;/h1&gt; &#xA;&lt;p&gt;This application is built with the following principles.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data Flow&lt;/strong&gt; - Ideally, this is how data flows through the app:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Server pushes data to the disk of any client (Server -&amp;gt; Pusher event -&amp;gt; Action listening to pusher event -&amp;gt; Onyx).&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Currently the code only does this with report comments. Until we make more server changes, this steps is actually done by the client requesting data from the server via XHR and then storing the response in Onyx.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;Disk pushes data to the UI (Onyx -&amp;gt; withOnyx() -&amp;gt; React component).&lt;/li&gt; &#xA;   &lt;li&gt;UI pushes data to people&#39;s brains (React component -&amp;gt; device screen).&lt;/li&gt; &#xA;   &lt;li&gt;Brain pushes data into UI inputs (Device input -&amp;gt; React component).&lt;/li&gt; &#xA;   &lt;li&gt;UI inputs push data to the server (React component -&amp;gt; Action -&amp;gt; XHR to server).&lt;/li&gt; &#xA;   &lt;li&gt;Go to 1 &lt;img src=&#34;https://raw.githubusercontent.com/Expensify/App/main/contributingGuides/data_flow.png&#34; alt=&#34;New Expensify Data Flow Chart&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Offline first&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Be sure to read &lt;a href=&#34;https://raw.githubusercontent.com/Expensify/App/main/contributingGuides/OFFLINE_UX.md&#34;&gt;OFFLINE_UX.md&lt;/a&gt;!&lt;/li&gt; &#xA;   &lt;li&gt;All data that is brought into the app and is necessary to display the app when offline should be stored on disk in persistent storage (eg. localStorage on browser platforms). &lt;a href=&#34;https://reactnative.dev/docs/asyncstorage&#34;&gt;AsyncStorage&lt;/a&gt; is a cross-platform abstraction layer that is used to access persistent storage.&lt;/li&gt; &#xA;   &lt;li&gt;All data that is displayed, comes from persistent storage.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;UI Binds to data on disk&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Onyx is a Pub/Sub library to connect the application to the data stored on disk.&lt;/li&gt; &#xA;   &lt;li&gt;UI components subscribe to Onyx (using &lt;code&gt;withOnyx()&lt;/code&gt;) and any change to the Onyx data is published to the component by calling &lt;code&gt;setState()&lt;/code&gt; with the changed data.&lt;/li&gt; &#xA;   &lt;li&gt;Libraries subscribe to Onyx (with &lt;code&gt;Onyx.connect()&lt;/code&gt;) and any change to the Onyx data is published to the callback with the changed data.&lt;/li&gt; &#xA;   &lt;li&gt;The UI should never call any Onyx methods except for &lt;code&gt;Onyx.connect()&lt;/code&gt;. That is the job of Actions (see next section).&lt;/li&gt; &#xA;   &lt;li&gt;The UI always triggers an Action when something needs to happen (eg. a person inputs data, the UI triggers an Action with this data).&lt;/li&gt; &#xA;   &lt;li&gt;The UI should be as flexible as possible when it comes to: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Incomplete or missing data. Always assume data is incomplete or not there. For example, when a comment is pushed to the client from a pusher event, it&#39;s possible that Onyx does not have data for that report yet. That&#39;s OK. A partial report object is added to Onyx for the report key &lt;code&gt;report_1234 = {reportID: 1234, isUnread: true}&lt;/code&gt;. Then there is code that monitors Onyx for reports with incomplete data, and calls &lt;code&gt;fetchChatReportsByIDs(1234)&lt;/code&gt; to get the full data for that report. The UI should be able to gracefully handle the report object not being complete. In this example, the sidebar wouldn&#39;t display any report that does not have a report name.&lt;/li&gt; &#xA;     &lt;li&gt;The order that actions are done in. All actions should be done in parallel instead of sequence. &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Parallel actions are asynchronous methods that don&#39;t return promises. Any number of these actions can be called at one time and it doesn&#39;t matter what order they happen in or when they complete.&lt;/li&gt; &#xA;       &lt;li&gt;In-Sequence actions are asynchronous methods that return promises. This is necessary when one asynchronous method depends on the results from a previous asynchronous method. Example: Making an XHR to &lt;code&gt;command=CreateChatReport&lt;/code&gt; which returns a reportID which is used to call &lt;code&gt;command=Get&amp;amp;rvl=reportStuff&lt;/code&gt;.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Actions manage Onyx Data&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When data needs to be written to or read from the server, this is done through Actions only.&lt;/li&gt; &#xA;   &lt;li&gt;Action methods should only have return values (data or a promise) if they are called by other actions. This is done to encourage that action methods can be called in parallel with no dependency on other methods (see discussion above).&lt;/li&gt; &#xA;   &lt;li&gt;Actions should favor using &lt;code&gt;Onyx.merge()&lt;/code&gt; over &lt;code&gt;Onyx.set()&lt;/code&gt; so that other values in an object aren&#39;t completely overwritten.&lt;/li&gt; &#xA;   &lt;li&gt;Views should not call &lt;code&gt;Onyx.merge()&lt;/code&gt; or &lt;code&gt;Onyx.set()&lt;/code&gt; directly and should call an action instead.&lt;/li&gt; &#xA;   &lt;li&gt;In general, the operations that happen inside an action should be done in parallel and not in sequence (eg. don&#39;t use the promise of one Onyx method to trigger a second Onyx method). Onyx is built so that every operation is done in parallel and it doesn&#39;t matter what order they finish in. XHRs on the other hand need to be handled in sequence with promise chains in order to access and act upon the response.&lt;/li&gt; &#xA;   &lt;li&gt;If an Action needs to access data stored on disk, use a local variable and &lt;code&gt;Onyx.connect()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Data should be optimistically stored on disk whenever possible without waiting for a server response. Example of creating a new optimistic comment: &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;user adds a comment&lt;/li&gt; &#xA;     &lt;li&gt;comment is shown in the UI (by mocking the expected response from the server)&lt;/li&gt; &#xA;     &lt;li&gt;comment is created in the server&lt;/li&gt; &#xA;     &lt;li&gt;server responds&lt;/li&gt; &#xA;     &lt;li&gt;UI updates with data from the server&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cross Platform 99.9999%&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;A feature isn&#39;t done until it works on all platforms. Accordingly, don&#39;t even bother writing a platform-specific code block because you&#39;re just going to need to undo it.&lt;/li&gt; &#xA;   &lt;li&gt;If the reason you can&#39;t write cross-platform code is because there is a bug in ReactNative that is preventing it from working, the correct action is to fix RN and submit a PR upstream -- not to hack around RN bugs with platform-specific code paths.&lt;/li&gt; &#xA;   &lt;li&gt;If there is a feature that simply doesn&#39;t exist on all platforms and thus doesn&#39;t exist in RN, rather than doing if (platform=iOS) { }, instead write a &#34;shim&#34; library that is implemented with NOOPs on the other platforms. For example, rather than injecting platform-specific multi-tab code (which can only work on browsers, because it&#39;s the only platform with multiple tabs), write a TabManager class that just is NOOP for non-browser platforms. This encapsulates the platform-specific code into a platform library, rather than sprinkling through the business logic.&lt;/li&gt; &#xA;   &lt;li&gt;Put all platform specific code in dedicated files and folders, like /platform, and reject any PR that attempts to put platform-specific code anywhere else. This maintains a strict separation between business logic and platform code.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Internationalization&lt;/h1&gt; &#xA;&lt;p&gt;This application is built with Internationalization (I18n) / Localization (L10n) support, so it&#39;s important to always localize the following types of data when presented to the user (even accessibility texts that are not rendered):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Texts: See &lt;a href=&#34;https://github.com/Expensify/App/raw/655ba416d552d5c88e57977a6e0165fb7eb7ab58/src/libs/translate.js#L15&#34;&gt;translate method&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Date/time: see &lt;a href=&#34;https://github.com/Expensify/App/raw/f579946fbfbdc62acc5bd281dc75cabb803d9af0/src/libs/DateUtils.js&#34;&gt;DateUtils&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Numbers and amounts: see &lt;a href=&#34;https://github.com/Expensify/App/raw/55b2372d1344e3b61854139806a53f8a3d7c2b8b/src/libs/NumberFormatUtils.js&#34;&gt;NumberFormatUtils&lt;/a&gt; and &lt;a href=&#34;https://github.com/Expensify/App/raw/55b2372d1344e3b61854139806a53f8a3d7c2b8b/src/libs/LocaleDigitUtils.js&#34;&gt;LocaleDigitUtils&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Phones: see &lt;a href=&#34;https://github.com/Expensify/App/raw/bdfbafe18ee2d60f766c697744f23fad64b62cad/src/libs/LocalePhoneNumber.js#L51-L52&#34;&gt;LocalPhoneNumber&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In most cases, you will be needing to localize data used in a component, if that&#39;s the case, there&#39;s a HOC &lt;a href=&#34;https://github.com/Expensify/App/raw/37465dbd07da1feab8347835d82ed3d2302cde4c/src/components/withLocalize.js&#34;&gt;withLocalize&lt;/a&gt;. It will abstract most of the logic you need (mostly subscribe to the &lt;a href=&#34;https://github.com/Expensify/App/raw/6cf1a56df670a11bf61aa67eeb64c1f87161dea1/src/ONYXKEYS.js#L88&#34;&gt;NVP_PREFERRED_LOCALE&lt;/a&gt; Onyx key) and is the preferred way of localizing things inside components.&lt;/p&gt; &#xA;&lt;p&gt;Some pointers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All translations are stored in language files in &lt;a href=&#34;https://github.com/Expensify/App/tree/b114bc86ff38e3feca764e75b3f5bf4f60fcd6fe/src/languages&#34;&gt;src/languages&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;We try to group translations by their pages/components&lt;/li&gt; &#xA; &lt;li&gt;A common rule of thumb is to move a common word/phrase to be shared when it&#39;s in 3 places&lt;/li&gt; &#xA; &lt;li&gt;Always prefer longer and more complex strings in the translation files. For example if you need to generate the text &lt;code&gt;User has sent $20.00 to you on Oct 25th at 10:05am&lt;/code&gt;, add just one key to the translation file and use the arrow function version, like so: &lt;code&gt;nameOfTheKey: ({amount, dateTime}) =&amp;gt; &#34;User has sent &#34; + amount + &#34; to you on &#34; + dateTime,&lt;/code&gt;. This is because the order of the phrases might vary from one language to another.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Deploying&lt;/h1&gt; &#xA;&lt;h2&gt;QA and deploy cycles&lt;/h2&gt; &#xA;&lt;p&gt;We utilize a CI/CD deployment system built using &lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt; to ensure that new code is automatically deployed to our users as fast as possible. As part of this process, all code is first deployed to our staging environments, where it undergoes quality assurance (QA) testing before it is deployed to production. Typically, pull requests are deployed to staging immediately after they are merged.&lt;/p&gt; &#xA;&lt;p&gt;Every time a PR is deployed to staging, it is added to a &lt;a href=&#34;https://github.com/Expensify/App/issues?q=is%3Aopen+is%3Aissue+label%3AStagingDeployCash&#34;&gt;special tracking issue&lt;/a&gt; with the label &lt;code&gt;StagingDeployCash&lt;/code&gt; (there will only ever be one open at a time). This tracking issue contains information about the new application version, a list of recently deployed pull requests, and any issues found on staging that are not present on production. Every weekday at 9am PST, our QA team adds the &lt;code&gt;🔐LockCashDeploys🔐&lt;/code&gt; label to that tracking issue, and that signifies that they are starting their daily QA cycle. They will perform both regular regression testing and the QA steps listed for every pull request on the &lt;code&gt;StagingDeployCash&lt;/code&gt; checklist.&lt;/p&gt; &#xA;&lt;p&gt;Once the &lt;code&gt;StagingDeployCash&lt;/code&gt; is locked, we won&#39;t run any staging deploys until it is either unlocked, or we run a production deploy. If severe issues are found on staging that are not present on production, a new issue (or the PR that caused the issue) will be labeled with &lt;code&gt;DeployBlockerCash&lt;/code&gt;, and added to the &lt;code&gt;StagingDeployCash&lt;/code&gt; deploy checklist. If we want to resolve a deploy blocker by reverting a pull request or deploying a hotfix directly to the staging environment, we can merge a pull request with the &lt;code&gt;CP Staging&lt;/code&gt; label.&lt;/p&gt; &#xA;&lt;p&gt;Once we have confirmed to the best of our ability that there are no deploy-blocking issues and that all our new features are working as expected on staging, we&#39;ll close the &lt;code&gt;StagingDeployCash&lt;/code&gt;. That will automatically trigger a production deployment, open a new &lt;code&gt;StagingDeployCash&lt;/code&gt; checklist, and deploy to staging any pull requests that were merged while the previous checklist was locked.&lt;/p&gt; &#xA;&lt;h2&gt;Key GitHub workflows&lt;/h2&gt; &#xA;&lt;p&gt;These are some of the most central &lt;a href=&#34;https://github.com/Expensify/App/tree/main/.github/workflows&#34;&gt;GitHub Workflows&lt;/a&gt;. There is more detailed information in the README &lt;a href=&#34;https://github.com/Expensify/App/raw/main/.github/workflows/README.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;preDeploy&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/Expensify/App/raw/main/.github/workflows/preDeploy.yml&#34;&gt;preDeploy workflow&lt;/a&gt; executes whenever a pull request is merged to &lt;code&gt;main&lt;/code&gt;, and at a high level does the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If the &lt;code&gt;StagingDeployCash&lt;/code&gt; is locked, comment on the merged PR that it will be deployed later.&lt;/li&gt; &#xA; &lt;li&gt;Otherwise: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Create a new version by triggering the &lt;a href=&#34;https://github.com/Expensify/App/raw/main/.github/workflows/createNewVersion.yml&#34;&gt;&lt;code&gt;createNewVersion&lt;/code&gt; workflow&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Use the &lt;a href=&#34;https://github.com/Expensify/App/raw/main/.github/workflows/updateProtectedBranch.yml&#34;&gt;&lt;code&gt;updateProtectedBranch&lt;/code&gt; workflow&lt;/a&gt; to update the &lt;code&gt;staging&lt;/code&gt; branch.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Also, if the pull request has the &lt;code&gt;CP Staging&lt;/code&gt; label, it will execute the &lt;a href=&#34;https://github.com/Expensify/App/raw/main/.github/workflows/cherryPick.yml&#34;&gt;&lt;code&gt;cherryPick&lt;/code&gt; workflow&lt;/a&gt; to deploy the pull request directly to staging, even if the &lt;code&gt;StagingDeployCash&lt;/code&gt; is locked.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;deploy&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/Expensify/App/raw/main/.github/workflows/deploy.yml&#34;&gt;&lt;code&gt;deploy&lt;/code&gt; workflow&lt;/a&gt; is really quite simple. It runs when code is pushed to the &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt; branches, and:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If &lt;code&gt;staging&lt;/code&gt; was updated, it creates a tag matching the new version, and pushes tags.&lt;/li&gt; &#xA; &lt;li&gt;If &lt;code&gt;production&lt;/code&gt; was updated, it creates a GitHub Release for the new version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;platformDeploy&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/Expensify/App/raw/main/.github/workflows/platformDeploy.yml&#34;&gt;&lt;code&gt;platformDeploy&lt;/code&gt; workflow&lt;/a&gt; is what actually runs the deployment on all four platforms (iOS, Android, Web, macOS Desktop). It runs a staging deploy whenever a new tag is pushed to GitHub, and runs a production deploy whenever a new release is created.&lt;/p&gt; &#xA;&lt;h3&gt;lockDeploys&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/Expensify/App/raw/main/.github/workflows/lockDeploys.yml&#34;&gt;&lt;code&gt;lockDeploys&lt;/code&gt; workflow&lt;/a&gt; executes when the &lt;code&gt;StagingDeployCash&lt;/code&gt; is locked, and it waits for any currently running staging deploys to finish, then gives Applause the &lt;span&gt;🟢&lt;/span&gt; to begin QA by commenting in the &lt;code&gt;StagingDeployCash&lt;/code&gt; checklist.&lt;/p&gt; &#xA;&lt;h3&gt;finishReleaseCycle&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/Expensify/App/raw/main/.github/workflows/finishReleaseCycle.yml&#34;&gt;&lt;code&gt;finishReleaseCycle&lt;/code&gt; workflow&lt;/a&gt; executes when the &lt;code&gt;StagingDeployCash&lt;/code&gt; is closed. It updates the &lt;code&gt;production&lt;/code&gt; branch from &lt;code&gt;staging&lt;/code&gt; (triggering a production deploy), deploys &lt;code&gt;main&lt;/code&gt; to staging (with a new &lt;code&gt;PATCH&lt;/code&gt; version), and creates a new &lt;code&gt;StagingDeployCash&lt;/code&gt; deploy checklist.&lt;/p&gt; &#xA;&lt;h2&gt;Local production builds&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes it might be beneficial to generate a local production version instead of testing on production. Follow the steps below for each client:&lt;/p&gt; &#xA;&lt;h4&gt;Local production build of the web app&lt;/h4&gt; &#xA;&lt;p&gt;In order to generate a production web build, run &lt;code&gt;npm run build&lt;/code&gt;, this will generate a production javascript build in the &lt;code&gt;dist/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h4&gt;Local production build of the MacOS desktop app&lt;/h4&gt; &#xA;&lt;p&gt;In order to compile a production desktop build, run &lt;code&gt;npm run desktop-build&lt;/code&gt;, this will generate a production app in the &lt;code&gt;dist/Mac&lt;/code&gt; folder named &lt;code&gt;Chat.app&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Local production build the iOS app&lt;/h4&gt; &#xA;&lt;p&gt;In order to compile a production iOS build, run &lt;code&gt;npm run ios-build&lt;/code&gt;, this will generate a &lt;code&gt;Chat.ipa&lt;/code&gt; in the root directory of this project.&lt;/p&gt; &#xA;&lt;h4&gt;Local production build the Android app&lt;/h4&gt; &#xA;&lt;p&gt;To build an APK to share run (e.g. via Slack), run &lt;code&gt;npm run android-build&lt;/code&gt;, this will generate a new APK in the &lt;code&gt;android/app&lt;/code&gt; folder.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cmdr2/stable-diffusion-ui</title>
    <updated>2022-10-09T01:35:08Z</updated>
    <id>tag:github.com,2022-10-09:/cmdr2/stable-diffusion-ui</id>
    <link href="https://github.com/cmdr2/stable-diffusion-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easiest 1-click way to install and use Stable Diffusion on your own computer. Provides a browser UI for generating images from text prompts and images. Just enter your text prompt, and see the generated image.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stable Diffusion UI&lt;/h1&gt; &#xA;&lt;h3&gt;Easiest way to install and use &lt;a href=&#34;https://github.com/CompVis/stable-diffusion&#34;&gt;Stable Diffusion&lt;/a&gt; on your own computer. No dependencies or technical knowledge required. 1-click install, powerful features.&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.com/invite/u9yhsFmEkB&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1014774730907209781?label=Discord&#34; alt=&#34;Discord Server&#34;&gt;&lt;/a&gt; (for support, and development discussion) | &lt;a href=&#34;https://raw.githubusercontent.com/cmdr2/stable-diffusion-ui/main/Troubleshooting.md&#34;&gt;Troubleshooting guide for common problems&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Step 1: Download the installer&lt;/h2&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/cmdr2/stable-diffusion-ui/main/#installation&#34;&gt;&lt;img src=&#34;https://github.com/cmdr2/stable-diffusion-ui/raw/develop/media/download-win.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/cmdr2/stable-diffusion-ui/main/#installation&#34;&gt;&lt;img src=&#34;https://github.com/cmdr2/stable-diffusion-ui/raw/develop/media/download-linux.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Step 2: Run the program&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Windows: Double-click &lt;code&gt;Start Stable Diffusion UI.cmd&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;On Linux: Run &lt;code&gt;./start.sh&lt;/code&gt; in a terminal&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Step 3: There is no step 3!&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s simple to get started. You don&#39;t need to install or struggle with Python, Anaconda, Docker etc.&lt;/p&gt; &#xA;&lt;p&gt;The installer will take care of whatever is needed. A friendly &lt;a href=&#34;https://discord.com/invite/u9yhsFmEkB&#34;&gt;Discord community&lt;/a&gt; will help you if you face any problems.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Easy for new users, powerful features for advanced users&lt;/h1&gt; &#xA;&lt;h3&gt;Features:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;No Dependencies or Technical Knowledge Required&lt;/strong&gt;: 1-click install for Windows 10/11 and Linux. &lt;em&gt;No dependencies&lt;/em&gt;, no need for WSL or Docker or Conda or technical setup. Just download and run!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clutter-free UI&lt;/strong&gt;: a friendly and simple UI, while providing a lot of powerful features&lt;/li&gt; &#xA; &lt;li&gt;Supports &#34;&lt;em&gt;Text to Image&lt;/em&gt;&#34; and &#34;&lt;em&gt;Image to Image&lt;/em&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Models&lt;/strong&gt;: Use your own &lt;code&gt;.ckpt&lt;/code&gt; file, by placing it inside the &lt;code&gt;models/stable-diffusion&lt;/code&gt; folder!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Live Preview&lt;/strong&gt;: See the image as the AI is drawing it&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Task Queue&lt;/strong&gt;: Queue up all your ideas, without waiting for the current task to finish&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;In-Painting&lt;/strong&gt;: Specify areas of your image to paint into&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Face Correction (GFPGAN) and Upscaling (RealESRGAN)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Image Modifiers&lt;/strong&gt;: A library of &lt;em&gt;modifier tags&lt;/em&gt; like &lt;em&gt;&#34;Realistic&#34;&lt;/em&gt;, &lt;em&gt;&#34;Pencil Sketch&#34;&lt;/em&gt;, &lt;em&gt;&#34;ArtStation&#34;&lt;/em&gt; etc. Experiment with various styles quickly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Loopback&lt;/strong&gt;: Use the output image as the input image for the next img2img task&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Negative Prompt&lt;/strong&gt;: Specify aspects of the image to &lt;em&gt;remove&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Attention/Emphasis:&lt;/strong&gt; () in the prompt increases the model&#39;s attention to enclosed words, and [] decreases it&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Weighted Prompts:&lt;/strong&gt; Use weights for specific words in your prompt to change their importance, e.g. &lt;code&gt;red:2.4 dragon:1.2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prompt Matrix:&lt;/strong&gt; (in beta) Quickly create multiple variations of your prompt, e.g. &lt;code&gt;a photograph of an astronaut riding a horse | illustration | cinematic lighting&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lots of Samplers:&lt;/strong&gt; ddim, plms, heun, euler, euler_a, dpm2, dpm2_a, lms&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple Prompts File:&lt;/strong&gt; Queue multiple prompts by entering one prompt per line, or by running a text file&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NSFW Setting&lt;/strong&gt;: A setting in the UI to control &lt;em&gt;NSFW content&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;JPEG/PNG output&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Save generated images to disk&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use CPU setting&lt;/strong&gt;: If you don&#39;t have a compatible graphics card, but still want to run it on your CPU.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Auto-updater&lt;/strong&gt;: Gets you the latest improvements and bug-fixes to a rapidly evolving project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Low Memory Usage&lt;/strong&gt;: Creates 512x512 images with less than 4GB of VRAM!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Developer Console&lt;/strong&gt;: A developer-mode for those who want to modify their Stable Diffusion code, and edit the conda environment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Easy for new users:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cmdr2/stable-diffusion-ui/main/media/shot-v10-simple.jpg?raw=true&#34; alt=&#34;Screenshot of the initial UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Powerful features for advanced users:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cmdr2/stable-diffusion-ui/main/media/shot-v10.jpg?raw=true&#34; alt=&#34;Screenshot of advanced settings&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Live Preview&lt;/h3&gt; &#xA;&lt;p&gt;Useful for judging (and stopping) an image quickly, without waiting for it to finish rendering.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/844287/192097249-729a0a1e-a677-485e-9ccc-16a9e848fabe.gif&#34; alt=&#34;live-512&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Task Queue&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cmdr2/stable-diffusion-ui/main/media/task-queue-v1.jpg?raw=true&#34; alt=&#34;Screenshot of task queue&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;System Requirements&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Windows 10/11, or Linux. Experimental support for Mac is coming soon.&lt;/li&gt; &#xA; &lt;li&gt;An NVIDIA graphics card, preferably with 4GB or more of VRAM. If you don&#39;t have a compatible graphics card, it&#39;ll automatically run in the slower &#34;CPU Mode&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Minimum 8 GB of RAM.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You don&#39;t need to install or struggle with Python, Anaconda, Docker etc. The installer will take care of whatever is needed.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Download&lt;/strong&gt; &lt;a href=&#34;https://github.com/cmdr2/stable-diffusion-ui/releases/download/v2.16/stable-diffusion-ui-win64.zip&#34;&gt;for Windows&lt;/a&gt; or &lt;a href=&#34;https://github.com/cmdr2/stable-diffusion-ui/releases/download/v2.16/stable-diffusion-ui-linux.tar.xz&#34;&gt;for Linux&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Extract&lt;/strong&gt;:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For Windows: After unzipping the file, please move the &lt;code&gt;stable-diffusion-ui&lt;/code&gt; folder to your &lt;code&gt;C:&lt;/code&gt; (or any drive like D:, at the top root level), e.g. &lt;code&gt;C:\stable-diffusion-ui&lt;/code&gt;. This will avoid a common problem with Windows (file path length limits).&lt;/li&gt; &#xA; &lt;li&gt;For Linux: After extracting the .tar.xz file, please open a terminal, and go to the &lt;code&gt;stable-diffusion-ui&lt;/code&gt; directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For Windows: &lt;code&gt;Start Stable Diffusion UI.cmd&lt;/code&gt; by double-clicking it.&lt;/li&gt; &#xA; &lt;li&gt;For Linux: In the terminal, run &lt;code&gt;./start.sh&lt;/code&gt; (or &lt;code&gt;bash start.sh&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This will automatically install Stable Diffusion, set it up, and start the interface. No additional steps are needed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To Uninstall:&lt;/strong&gt; Just delete the &lt;code&gt;stable-diffusion-ui&lt;/code&gt; folder to uninstall all the downloaded packages.&lt;/p&gt; &#xA;&lt;h1&gt;How to use?&lt;/h1&gt; &#xA;&lt;p&gt;Please use our &lt;a href=&#34;https://github.com/cmdr2/stable-diffusion-ui/wiki/How-to-Use&#34;&gt;guide&lt;/a&gt; to understand how to use the features in this UI.&lt;/p&gt; &#xA;&lt;h1&gt;Bugs reports and code contributions welcome&lt;/h1&gt; &#xA;&lt;p&gt;If there are any problems or suggestions, please feel free to ask on the &lt;a href=&#34;https://discord.com/invite/u9yhsFmEkB&#34;&gt;discord server&lt;/a&gt; or &lt;a href=&#34;https://github.com/cmdr2/stable-diffusion-ui/issues&#34;&gt;file an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also, please feel free to submit a pull request, if you have any code contributions in mind. Join the &lt;a href=&#34;https://discord.com/invite/u9yhsFmEkB&#34;&gt;discord server&lt;/a&gt; for development-related discussions, and for helping other users.&lt;/p&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;p&gt;The authors of this project are not responsible for any content generated using this interface.&lt;/p&gt; &#xA;&lt;p&gt;The license of this software forbids you from sharing any content that violates any laws, produce any harm to a person, disseminate any personal information that would be meant for harm, spread misinformation, or target vulnerable groups. For the full list of restrictions please read &lt;a href=&#34;https://raw.githubusercontent.com/cmdr2/stable-diffusion-ui/main/LICENSE&#34;&gt;the license&lt;/a&gt;. You agree to these terms by using this software.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Tharki-God/BetterDiscordPlugins</title>
    <updated>2022-10-09T01:35:08Z</updated>
    <id>tag:github.com,2022-10-09:/Tharki-God/BetterDiscordPlugins</id>
    <link href="https://github.com/Tharki-God/BetterDiscordPlugins" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Just me trying&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BetterDiscordPlugins&lt;/h1&gt; &#xA;&lt;p&gt;&lt;sup&gt;Just Me trying&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Address&lt;/h3&gt; &#xA;&lt;p&gt;Get a option to copy current web address by right clicking on home button. &lt;br&gt; Same us url in browser. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/Address.plugin.js&#34;&gt;Address.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/183795464-152ebfb6-7672-4643-a3dd-dcf9e0047fca.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AlwaysTyping&lt;/h3&gt; &#xA;&lt;p&gt;Show that you are typing on selected channel. &lt;br&gt; Show everyone as typing too (Client side only, Toggle in settings). &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/AlwaysTyping.plugin.js&#34;&gt;AlwaysTyping.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/192298574-8145f616-d8cd-4afc-a845-9627ee00479c.gif&#34; alt=&#34;typing&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;BackgroundMusic&lt;/h3&gt; &#xA;&lt;p&gt;Add background music to your discord &lt;br&gt; This is useless. Use spotify instead lol. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/BackgroundMusic.plugin.js&#34;&gt;BackgroundMusic.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/170847726-07bcf084-3f71-4c8e-81e1-1c9c512164ba.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt; &lt;sub&gt;Inspired by replugged/powercord plugin made by : &lt;a href=&#34;https://github.com/E-boi/among-us&#34;&gt;E-boi&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;BDGithubDownloader&lt;/h3&gt; &#xA;&lt;p&gt;Add&#39;s option to context menu of message if it contains github link of a plugin/theme. &lt;br&gt; Better if its not in plugin repo, and works for updating too. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/BDGithubDownloader.plugin.js&#34;&gt;BDGithubDownloader.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/182004115-ebb73048-dafb-4fbf-aac6-d109a328f5e7.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;BetterBottom&lt;/h3&gt; &#xA;&lt;p&gt;Convert text to bottom and send it with slash command. &lt;br&gt; You can convert bottom back to text with slash command. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/BetterBottom.plugin.js&#34;&gt;BetterBottom.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/172691956-23f8d7f3-8d4e-4564-929c-8ab83eec3046.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt; &lt;sub&gt;Inspired by replugged/powercord plugin made by : &lt;a href=&#34;https://github.com/bottom-software-foundation/power-bottom&#34;&gt;bottom-software-foundation&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;BetterEval&lt;/h3&gt; &#xA;&lt;p&gt;Evaluates javascript code locally. &lt;br&gt; DO NOT USE THIS COMMAND WITH CODE YOU DO NOT UNDERSTAND... &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/BetterEval.plugin.js&#34;&gt;BetterEval.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/173435343-8b0124c5-55f0-474b-b8ca-794c935f07a7.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt; &lt;sub&gt;Inspired by replugged/powercord plugin made by : &lt;a href=&#34;https://github.com/pythonmcpi/simple-eval&#34;&gt;pythonmcpi&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;BetterGameActivityToggle&lt;/h3&gt; &#xA;&lt;p&gt;A game activity toogle option in either status picker or user panel. &lt;br&gt; Can be changed in settings. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/BetterGameActivityToggle.plugin.js&#34;&gt;BetterGameActivityToggle.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/183795520-c5878192-e1fd-49a4-8860-31683f69a3d4.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt; &lt;sub&gt;Inspired by better discord plugin made by : &lt;a href=&#34;https://github.com/mwittrien/BetterDiscordAddons/tree/master/Plugins/GameActivityToggle&#34;&gt;mwittrien&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;BetterKeybinds&lt;/h3&gt; &#xA;&lt;p&gt;Add keybind to toogle plugins and themes. &lt;br&gt; Even custom css of better discord. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/BetterKeybinds.plugin.js&#34;&gt;BetterKeybinds.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/188321472-9f67ab54-0fc8-4641-9d10-8c8198f83830.gif&#34; alt=&#34;better keybinds&#34;&gt; &lt;br&gt; &lt;sub&gt;Inspired by better discord plugin made by : &lt;a href=&#34;https://github.com/Inve1951/BetterDiscordStuff/raw/master/plugins/toggleYourStuff.plugin.js&#34;&gt;Inve1951&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;BunnyGirls&lt;/h3&gt; &#xA;&lt;p&gt;Adds a slash command to send a random &lt;a href=&#34;https://user-images.githubusercontent.com/73281112/172068301-b362aa45-6818-463e-93f0-de7ce793f683.gif&#34;&gt;bunny girl gif&lt;/a&gt;. &lt;br&gt; Made this plugin to make my girl a little sad (Casual sadism). &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/BunnyGirls.plugin.js&#34;&gt;BunnyGirls.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/172068301-b362aa45-6818-463e-93f0-de7ce793f683.gif&#34; alt=&#34;conejita-dance&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;BypassYoutubeEmbedRestriction&lt;/h3&gt; &#xA;&lt;p&gt;Circumvent YouTube embed restrictions. &lt;br&gt; You can change the instance in setting. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/BypassYoutubeEmbedRestriction.plugin.js&#34;&gt;BypassYoutubeEmbedRestriction.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/172691594-54bef691-df6f-46d7-87a6-8d1ed81a0730.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt; &lt;sub&gt;Inspired by replugged/powercord plugin made by : &lt;a href=&#34;https://github.com/D3SOX/replugged/powercord-yt-embed-fix&#34;&gt;D3SOX&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;DiscordBypass&lt;/h3&gt; &#xA;&lt;p&gt;A collection of plguins into one. &lt;br&gt; You can toogle them in plugin settings. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/DiscordBypass.plugin.js&#34;&gt;DiscordBypass.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/181034920-924ecd4a-58d0-4e62-bb91-6ca605815cae.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;DiscordStatus&lt;/h3&gt; &#xA;&lt;p&gt;Adds a slash command to get discord status from &lt;a href=&#34;https://discordstatus.com&#34;&gt;https://discordstatus.com&lt;/a&gt;. &lt;br&gt; Only you can see the message returned by command. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/DiscordStatus.plugin.js&#34;&gt;DiscordStatus.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/172067706-c81fbe2e-a93d-425e-8ab4-30c163537185.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FakeDeafen&lt;/h3&gt; &#xA;&lt;p&gt;Shows that you are deaf to others but you can hear them. &lt;br&gt; just not fake deaf but fake mute and fake video too. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/FakeDeafen.plugin.js&#34;&gt;FakeDeafen.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/188322981-3b6483f8-0e46-4943-837c-eb833918f467.gif&#34; alt=&#34;fake deaf&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FluentStatusIcons&lt;/h3&gt; &#xA;&lt;p&gt;Fluent Presence icon, designed by Microsoft. &lt;br&gt; For other fluent icons install &lt;a href=&#34;https://github.com/stickfab/pc-fluenticons&#34;&gt;theme by stickfab&lt;/a&gt;. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/FluentStatusIcons.plugin.js&#34;&gt;FluentStatusIcons.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/186285500-c5362ae4-a99f-403f-8b89-174b7080e0d1.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FriendInvites&lt;/h3&gt; &#xA;&lt;p&gt;Get a option to manage friend invites of your account by right clicking on home button. &lt;br&gt; This is a new feature, not implemented fully yet in discord. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/FriendInvites.plugin.js&#34;&gt;FriendInvites.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/181034545-2fe28b81-5501-472a-a689-6ebc538b5adc.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;GetCursed&lt;/h3&gt; &#xA;&lt;p&gt;Adds a slash command to send a random cursed gif. &lt;br&gt; made this plugin because I am sadist. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/GetCursed.plugin.js&#34;&gt;GetCursed.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;sup&gt;Can&#39;t put a cursed gif in readme&lt;/sup&gt; &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/172069618-41461f73-7358-4fe4-a7be-df862ac2a282.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hypesquad&lt;/h3&gt; &#xA;&lt;p&gt;Adds a option to change hypesquad in context menu on home button. &lt;br&gt; You can even remove hypesquad from your account. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/Hypesquad.plugin.js&#34;&gt;Hypesquad.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/181391140-5ee00940-97ff-4b99-83df-7bf026f59e3d.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;insult&lt;/h3&gt; &#xA;&lt;p&gt;Adds a slash command to send an insult. &lt;br&gt; Gets Insult from &lt;a href=&#34;https://insult.mattbas.org&#34;&gt;https://insult.mattbas.org&lt;/a&gt;. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/insult.plugin.js&#34;&gt;insult.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/180321762-19be7745-45aa-423d-bea7-a4d6078e2d75.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;IP&lt;/h3&gt; &#xA;&lt;p&gt;Get your ip in discord with a slash command. &lt;br&gt; Includes more than just ip. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/IP.plugin.js&#34;&gt;IP.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/174501806-0ff804b1-c1e7-425b-8755-0229ba3765fa.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MarkAllRead&lt;/h3&gt; &#xA;&lt;p&gt;Get a option to Mark all DMs/Servers read by right clicking on home button (If any). &lt;br&gt; You can individually mark either DMs/Servers read with sub menu. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/MarkAllRead.plugin.js&#34;&gt;MarkAllRead.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/181038170-54bd4d2c-264b-4c9f-bb2e-77b756904b1e.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MentionCacheFix&lt;/h3&gt; &#xA;&lt;p&gt;Fix uncached user mentions including in embeds. &lt;br&gt; Due to rate limits, this will only be triggered when you hover on a message.. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/MentionCacheFix.plugin.js&#34;&gt;MentionCacheFix.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/187527220-596e6be2-6faa-4833-9f4b-de948f0623db.gif&#34; alt=&#34;68747470733a2f2f692e696d6775722e636f6d2f445a30594652652e676966&#34;&gt; &lt;br&gt; &lt;sub&gt;Ported from replugged/powercord plugin made by : &lt;a href=&#34;https://github.com/asportnoy/mention-cache-fix&#34;&gt;asportnoy&lt;/a&gt;&lt;/sub&gt; &lt;br&gt; &lt;sub&gt;All the Code is right fully owned by asportnoy, This is ported plugin and the original liscense is attached underneath.&lt;/sub&gt; &lt;br&gt; &lt;sub&gt;&lt;a href=&#34;https://github.com/Tharki-God/BetterDiscordPlugins/raw/master/MentionCacheFix.LICENSE&#34;&gt;MentionCacheFix.LICENSE&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MessageHider&lt;/h3&gt; &#xA;&lt;p&gt;Gives an option to hide message locally in Context Menu. &lt;br&gt; Changing the channel/reloading discord will restore the message. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/MessageHider.plugin.js&#34;&gt;MessageHider.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/181030856-3f06f5fe-abc6-45ea-9fb1-2ffc01ed39cf.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt; &lt;sub&gt;Inspired by replugged/powercord plugin made by : &lt;a href=&#34;https://github.com/FC5570/replugged/powercord-message-hider&#34;&gt;FC5570&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Nekos&lt;/h3&gt; &#xA;&lt;p&gt;Adds a slash command to send a random &lt;a href=&#34;https://user-images.githubusercontent.com/73281112/173194773-d1ae61a0-013e-4898-9bb6-2516bd02c0fd.gif&#34;&gt;neko gif&lt;/a&gt;. &lt;br&gt; Made this plugin on request of &lt;a href=&#34;https://discordapp.com/users/102009847792291840&#34;&gt;SirSuperDeath&lt;/a&gt;. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/Nekos.plugin.js&#34;&gt;Nekos.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/173194773-d1ae61a0-013e-4898-9bb6-2516bd02c0fd.gif&#34; alt=&#34;kromia-vrc&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PersistSettings&lt;/h3&gt; &#xA;&lt;p&gt;Backs up your settings and restores them in case discord clears them after logouts or for other reasons.. &lt;br&gt; Useful with discord account switcher. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/PersistSettings.plugin.js&#34;&gt;PersistSettings.plugin.js&lt;/a&gt; &lt;br&gt; &lt;sup&gt;No preview so screenshot of my settings&lt;/sup&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/170521744-581e0556-32af-461d-a9a5-cc3f4ce8da1d.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt; &lt;sub&gt;Ported from replugged/powercord plugin made by : &lt;a href=&#34;https://github.com/VenPlugs/PersistSettings&#34;&gt;VenPlugs&lt;/a&gt;&lt;/sub&gt; &lt;br&gt; &lt;sub&gt;All the Code is right fully owned by VenPlugs, This is ported plugin and the original liscense is attached underneath.&lt;/sub&gt; &lt;br&gt; &lt;sub&gt;&lt;a href=&#34;https://github.com/Tharki-God/BetterDiscordPlugins/raw/master/PersistSettings.LICENSE&#34;&gt;PersistSettings.LICENSE&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PingPong&lt;/h3&gt; &#xA;&lt;p&gt;Randomize Ping Number. &lt;br&gt; Useless AF just like the author. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/PingPong.plugin.js&#34;&gt;PingPong.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/180631236-8bba7a7c-07af-4073-8c74-8db1102cda6c.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PluginsInfo&lt;/h3&gt; &#xA;&lt;p&gt;Adds a slash command to get a list of plugins. &lt;br&gt; You can choose if you want just disabled or enabled. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/PluginsInfo.plugin.js&#34;&gt;PluginsInfo.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/172080792-6b909b47-c358-406e-ba6c-9007bc80ca55.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PremiumScreenShare&lt;/h3&gt; &#xA;&lt;p&gt;Enables 2160p 360FPS Stream. &lt;br&gt; Capable with plguins like Hide Disabled Emoji or Freemoji. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/PremiumScreenShare.plugin.js&#34;&gt;PremiumScreenShare.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/180322659-2c3e8ad0-059e-4918-acba-792a0b37cf6b.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt; &lt;sub&gt;Inspired by replugged/powercord plugin made by : &lt;a href=&#34;https://github.com/discord-modifications/screenshare-crack/raw/master/index.js&#34;&gt;discord-modifications&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rabbit&lt;/h3&gt; &#xA;&lt;p&gt;Adds a slash command to send a random &lt;a href=&#34;https://user-images.githubusercontent.com/73281112/172068010-48d16088-d3cf-40dd-8969-dcf260ec0b64.gif&#34;&gt;rabbit gif&lt;/a&gt;. &lt;br&gt; Made this plugin because my girl asked me to (I love her so much). &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/Rabbit.plugin.js&#34;&gt;Rabbit.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/172068010-48d16088-d3cf-40dd-8969-dcf260ec0b64.gif&#34; alt=&#34;rabbit-funny&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ReconnectVC&lt;/h3&gt; &#xA;&lt;p&gt;Solves the ping spikes. &lt;br&gt; Attempts to disconnect/rejoin voice chat if ping goes above a certain threshold. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/ReconnectVC.plugin.js&#34;&gt;ReconnectVC.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/171298896-20a8eaa8-9418-4227-978b-284d4ca28f06.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt; &lt;sub&gt;Ported from replugged/powercord plugin made by : &lt;a href=&#34;https://github.com/sxturndev/replugged/powercord-vc-reconnect&#34;&gt;sxturndev&lt;/a&gt;&lt;/sub&gt; &lt;br&gt; &lt;sub&gt;All the Code is right fully owned by sxturndev, This is ported plugin and the original liscense is attached underneath.&lt;/sub&gt; &lt;br&gt; &lt;sub&gt;&lt;a href=&#34;https://github.com/Tharki-God/BetterDiscordPlugins/raw/master/ReconnectVC.LICENSE&#34;&gt;ReconnectVC.LICENSE&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;RejoinVC&lt;/h3&gt; &#xA;&lt;p&gt;This plugin allows you to rejoin a voice channel by a button within 10 seconds of leaving. &lt;br&gt; Capable with plguins like Toogle Game Activity. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/RejoinVC.plugin.js&#34;&gt;RejoinVC.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/181033587-7365fd39-0216-4e35-9f06-a30781c7588a.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt; &lt;sub&gt;Ported from replugged/powercord plugin made by : &lt;a href=&#34;https://github.com/TheShadowGamer/Rejoin-VC&#34;&gt;TheShadowGamer&lt;/a&gt;&lt;/sub&gt; &lt;br&gt; &lt;sub&gt;All the Code is right fully owned by TheShadowGamer, This is ported plugin and the original liscense is attached underneath.&lt;/sub&gt; &lt;br&gt; &lt;sub&gt;&lt;a href=&#34;https://github.com/Tharki-God/BetterDiscordPlugins/raw/master/RejoinVC.LICENSE&#34;&gt;RejoinVC.LICENSE&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ShowNames&lt;/h3&gt; &#xA;&lt;p&gt;ShowNames of Member if Same as Background color. &lt;br&gt; Does that by Changing the member color locally. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/ShowNames.plugin.js&#34;&gt;ShowNames.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/181029533-73f85603-c790-4789-b071-30e4f8b605fa.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;StarWars&lt;/h3&gt; &#xA;&lt;p&gt;Adds a slash command to send a random &lt;a href=&#34;https://user-images.githubusercontent.com/73281112/172068288-c941cae8-0266-40f2-a135-c98435f872bc.gif&#34;&gt;star wars gif&lt;/a&gt;. &lt;br&gt; Made this plugin on request of &lt;a href=&#34;https://discordapp.com/users/948391212119908445&#34;&gt;Thunderrunner#3300&lt;/a&gt;. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/StarWars.plugin.js&#34;&gt;StarWars.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/172068288-c941cae8-0266-40f2-a135-c98435f872bc.gif&#34; alt=&#34;baby-yoda-star-wars&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;StatisticsCounter&lt;/h3&gt; &#xA;&lt;p&gt;Multiple counters (i.e. number of friends online, total number of friends, incoming friend requests, blocked users, and total number of servers joined). &lt;br&gt; Auto rotation with a customizable interval - useful for switching between counters without the need of clicking. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/StatisticsCoutner.plugin.js&#34;&gt;StatisticsCounter.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://griefmodz.xyz/uploads/yog4NAGa6G.gif&#34; alt=&#34;image&#34;&gt; &lt;br&gt; &lt;sub&gt;Ported from replugged/powercord plugin made by : &lt;a href=&#34;https://github.com/GriefMoDz/statistics-counter&#34;&gt;GriefMoDz&lt;/a&gt;&lt;/sub&gt; &lt;br&gt; &lt;sub&gt;All the Code is right fully owned by GriefMoDz, This is ported plugin and the original liscense is attached underneath.&lt;/sub&gt; &lt;br&gt; &lt;sub&gt;&lt;a href=&#34;https://github.com/Tharki-God/BetterDiscordPlugins/raw/master/StatisticsCounter.LICENSE&#34;&gt;StatisticsCounter.LICENSE&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ThemesInfo&lt;/h3&gt; &#xA;&lt;p&gt;Adds a slash command to get a list of themes. &lt;br&gt; You can choose if you want just disabled or enabled. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/ThemesInfo.plugin.js&#34;&gt;ThemesInfo.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/173165490-8be7040f-75fe-4b7f-afa4-ddd550a68a6d.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ToggleVoice&lt;/h3&gt; &#xA;&lt;p&gt;Change between voice activity and ptt with a keybind. &lt;br&gt; Made this plugin on request of &lt;a href=&#34;https://discordapp.com/users/796407910980124723&#34;&gt;Swabee&lt;/a&gt; (He said he will sponsor). &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/ToggleVoice.plugin.js&#34;&gt;ToggleVoice.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/181037253-7c437684-a6e0-418a-ac99-df81ec33a40d.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Token&lt;/h3&gt; &#xA;&lt;p&gt;Get a option to copy your token by right clicking on home button. &lt;br&gt; Don&#39;t share you token. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/Token.plugin.js&#34;&gt;Token.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/181038534-43794ee0-d8ac-419e-aa54-6314fc6d8be2.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;uwuifier&lt;/h3&gt; &#xA;&lt;p&gt;Adds a slash command to uwuify your text before sending. &lt;br&gt; the &amp;gt;w&amp;lt; Pwugin UwU which evewyonye ;;w;; nyeeds ;;w;;. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/uwuifier.plugin.js&#34;&gt;uwuifier.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/172068395-a9c4b1bb-10aa-43ce-a8b1-9cfe9327e73f.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;VanillaLoader&lt;/h3&gt; &#xA;&lt;p&gt;Get option to load vanilla discord by right clicking on home button. &lt;br&gt; Supports windows and mac only for now. &lt;sub&gt;&lt;a href=&#34;https://smolalli.github.io/BetterDiscord/#vanilla&#34;&gt;More on Vanilla&lt;/a&gt;&lt;/sub&gt; &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/VanillaLoader.plugin.js&#34;&gt;VanillaLoader.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/180321483-12eaea8e-941c-4012-969e-3c49558e1888.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;VoiceChatUtilities&lt;/h3&gt; &#xA;&lt;p&gt;General use voicechat utilities. &lt;br&gt; Do it everyone in vc just with one click. &lt;br&gt; Raw Link: &lt;a href=&#34;https://raw.githubusercontent.com/Tharki-God/BetterDiscordPlugins/master/VoiceChatUtilities.plugin.js&#34;&gt;VoiceChatUtilities.plugin.js&lt;/a&gt;. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/180323057-b4aa95aa-716d-4ea9-854b-fcc58e77b6e1.png&#34; alt=&#34;image&#34;&gt; &lt;br&gt; &lt;sub&gt;Inspired by replugged/powercord plugin made by : &lt;a href=&#34;https://github.com/dutake/voice-chat-utilities&#34;&gt;dutake&lt;/a&gt;&lt;/sub&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;h3&gt;What is this?&lt;/h3&gt; &#xA;&lt;p&gt;A repo for Plugins For Better Discord. &lt;br&gt; All plugin are made by authors listed underneath.&lt;/p&gt; &#xA;&lt;h3&gt;How To download?&lt;/h3&gt; &#xA;&lt;p&gt;Go to Raw Link of plugins and Press &lt;b&gt;CTRL+S&lt;/b&gt; and then save it to plugins folder of better discord.&lt;/p&gt; &#xA;&lt;h3&gt;Why all plugins aren&#39;t listed in readme?&lt;/h3&gt; &#xA;&lt;p&gt;They are either beta plugins or plugins which are illegal. &lt;br&gt; In Short plugins not to be released.&lt;/p&gt; &#xA;&lt;h3&gt;Credits?&lt;/h3&gt; &#xA;&lt;p&gt;Many of these plugins are ported from replugged/powercord. &lt;br&gt; So if you made the replugged/powercord plugin and you want credit here. &lt;br&gt; Then either DM me on discord or do a pull request.&lt;sup&gt;(Issues work too)&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;h3&gt;GIF souce?&lt;/h3&gt; &#xA;&lt;p&gt;All Links are fetched from tenor using tenor&#39;s api random endpoint. &lt;br&gt; and randomized even more later on.&lt;/p&gt; &#xA;&lt;h3&gt;Liscense?&lt;/h3&gt; &#xA;&lt;p&gt;IDC Copy the plugin if you wanna. &lt;br&gt; if the plugin in ported then ask the original author before doing so.&lt;/p&gt; &#xA;&lt;h3&gt;Support Servers?&lt;/h3&gt; &#xA;&lt;p&gt;The Support Server For All the Plugins. &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://discord.gg/SgKSKyh9gY&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/919649417005506600/widget.png?style=banner3&#34; alt=&#34;Support Server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Authors&lt;/h1&gt; &#xA;&lt;p&gt;People these plugins are made by or they contributed in it. &lt;br&gt; &lt;a href=&#34;https://discordapp.com/users/887483349369765930&#34;&gt;&lt;img src=&#34;https://lanyard.cnrad.dev/api/887483349369765930?hideDiscrim=true&amp;amp;idleMessage=Leave%20the%20kid%20alone...&#34; alt=&#34;Discord Presence&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discordapp.com/users/872383230328832031&#34;&gt;&lt;img src=&#34;https://lanyard.cnrad.dev/api/872383230328832031?hideDiscrim=true&amp;amp;idleMessage=Leave%20the%20kid%20alone...&#34; alt=&#34;Discord Presence&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Why it all started?&lt;/h1&gt; &#xA;&lt;p&gt;The reason the repo started is because of a certain someone. &lt;br&gt; The person saved me from dying. &lt;br&gt; She is the reason I am here today. &lt;br&gt; I love her so much. &lt;br&gt; This all started with NSFW Bypass plugin. &lt;br&gt; (Who tf uses their real age on discord account? I guess my girlfriend) &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/73281112/172068478-b8e55480-7237-4642-86b0-38acf13f37d0.jpg&#34; alt=&#34;ds&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Thats a Picture of her Holding a knife.(such a cute hand)&lt;/h3&gt; &#xA;&lt;h3&gt;I love my bby girl.&lt;/h3&gt;</summary>
  </entry>
</feed>