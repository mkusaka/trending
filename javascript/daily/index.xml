<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-20T01:29:12Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>catsats/backpack_exchange</title>
    <updated>2024-02-20T01:29:12Z</updated>
    <id>tag:github.com,2024-02-20:/catsats/backpack_exchange</id>
    <link href="https://github.com/catsats/backpack_exchange" rel="alternate"></link>
    <summary type="html">&lt;p&gt;backpack 刷交易量 JavaScript 只刷sol/usdc&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;backpack_exchange&lt;/h1&gt; &#xA;&lt;p&gt;要用脚本请把本文档看完&lt;/p&gt; &#xA;&lt;p&gt;运行命令： 先运行 npm install 后运行 node ./index.js&lt;/p&gt; &#xA;&lt;p&gt;先用我的邀请码注册backpack交易所：&lt;a href=&#34;https://backpack.exchange/signup?referral=9ed76787-d966-4122-9a58-cd93d3a44de3&#34;&gt;https://backpack.exchange/signup?referral=9ed76787-d966-4122-9a58-cd93d3a44de3&lt;/a&gt; 不会的用脚本的可以推特私信问我 &lt;a href=&#34;https://twitter.com/zisan_xyz&#34;&gt;https://twitter.com/zisan_xyz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;没node的安装一下 这是教程：&lt;a href=&#34;https://www.runoob.com/nodejs/nodejs-install-setup.html&#34;&gt;https://www.runoob.com/nodejs/nodejs-install-setup.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;backpack 刷交易量 JavaScript 只刷sol/usdc 注意事项：他们官网的api太多人用比较卡，可能在交易的时候会卡住，需要自己手动停止程序，重新运行&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/catsats/backpack_exchange/assets/154321884/61503391-05ad-44d3-a121-6e6393907245&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;脚本运行详细：每次兑换一半余额的SOL换成USDC，再把所有USDC换成SOL。&lt;/p&gt; &#xA;&lt;p&gt;运行脚本需要把api keys填入进去 &lt;img src=&#34;https://github.com/catsats/backpack_exchange/assets/154321884/52850aab-6b10-4678-93d6-4b56d2be2449&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;在这创建你的api keys &lt;a href=&#34;https://backpack.exchange/settings/api-keys&#34;&gt;https://backpack.exchange/settings/api-keys&lt;/a&gt; &lt;img src=&#34;https://github.com/catsats/backpack_exchange/assets/154321884/9afa6f34-6d8f-495c-b6b7-e43c7f18cff5&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mut-ex/gligen-gui</title>
    <updated>2024-02-20T01:29:12Z</updated>
    <id>tag:github.com,2024-02-20:/mut-ex/gligen-gui</id>
    <link href="https://github.com/mut-ex/gligen-gui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An intuitive GUI for GLIGEN that uses ComfyUI in the backend&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; If you would like to show your appreciation for this project,&lt;br&gt;please consider a donation :)&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://www.paypal.com/donate/?business=Y4Y75KP2JBNJW&amp;amp;currency_code=USD&#34;&gt; &lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&#34; alt=&#34;PayPal donation link&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h1&gt;GLIGEN GUI&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gligen.github.io/&#34;&gt;GLIGEN&lt;/a&gt; is a novel way to specify the precise location of objects in text-to-image models. I present here an intuitive GUI that makes it significantly easier to use GLIGEN with ComfyUI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mut-ex/gligen-gui/main/latest.png&#34; alt=&#34;GLIGEN GUI screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mut-ex/gligen-gui/main/example_boxes.png&#34; alt=&#34;GLIGEN Example Image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mut-ex/gligen-gui/main/example.png&#34; alt=&#34;GLIGEN Example Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;First of all make sure you have &lt;a href=&#34;https://github.com/comfyanonymous/ComfyUI&#34;&gt;ComfyUI&lt;/a&gt; successfully installed and running.&lt;/p&gt; &#xA;&lt;p&gt;Next, download the &lt;a href=&#34;https://huggingface.co/comfyanonymous/GLIGEN_pruned_safetensors/blob/main/gligen_sd14_textbox_pruned.safetensors&#34;&gt;gligen_sd14_textbox_pruned.safetensors&lt;/a&gt; GLIGEN model file and place it in the ComfyUI/models/gligen directory.&lt;/p&gt; &#xA;&lt;p&gt;Make sure you have &lt;a href=&#34;https://flask.palletsprojects.com/en/3.0.x/&#34;&gt;Flask&lt;/a&gt; installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install flask&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Clone this repository&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/mut-ex/gligen-gui.git&#xA;cd gligen-gui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then to start the GUI, run the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;flask --app &#39;gligen_gui:create_app(8188)&#39; run --port 5000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that this assumes your ComfyUI instance is using port 8188. If not, replace 8188 with the correct port number.&lt;/p&gt; &#xA;&lt;p&gt;Finally, open &lt;a href=&#34;http://127.0.0.1:5000/port/8188&#34;&gt;http://127.0.0.1:5000/port/8188&lt;/a&gt; in your browser to start using the GUI. However change 8188 in the URL to the port used by ComfyUI if it is different.&lt;/p&gt; &#xA;&lt;h2&gt;How To Use&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you have a Stable Diffusion 1.5 &lt;strong&gt;checkpoint&lt;/strong&gt; selected. Usage is pretty simple and straightforward! Envision your image by drawing grounding boxes on the blank canvas with your mouse, and labeling them by entering your desired prompt in the corresponding text input in the table on the right.&lt;/p&gt; &#xA;&lt;p&gt;You can further describe your image in the text input labelled &lt;strong&gt;POSITIVE&lt;/strong&gt; but in my experience it works better if you only enter tags relating to the style and quality of your desired image.&lt;/p&gt; &#xA;&lt;p&gt;If there are any LORAs you wish to use, press the &lt;strong&gt;+&lt;/strong&gt; button in the LORA section. Then, select the name of the LORA and adjust its strength, You can add mulitple LORAs.&lt;/p&gt; &#xA;&lt;p&gt;Finally, press the Queue Prompt to submit the prompt to ComfyUI. Once the image is generated, it will appear on the canvas.&lt;/p&gt;</summary>
  </entry>
</feed>