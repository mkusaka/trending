<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-26T01:30:08Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ErickWendel/semana-javascript-expert08</title>
    <updated>2023-10-26T01:30:08Z</updated>
    <id>tag:github.com,2023-10-26:/ErickWendel/semana-javascript-expert08</id>
    <link href="https://github.com/ErickWendel/semana-javascript-expert08" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JS Expert Week 8.0 - üé•Pre processing videos before uploading in the browser üòè&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JSExpertHub Pre-processing videos on browsers - Semana JS Expert 8.0&lt;/h1&gt; &#xA;&lt;p&gt;Seja bem vindo(a) √† oitava Semana Javascript Expert. Este √© o c√≥digo inicial para iniciar nossa jornada.&lt;/p&gt; &#xA;&lt;p&gt;Marque esse projeto com uma estrela üåü e acesse o nosso &lt;a href=&#34;https://l.erickwendel.com.br/jse8-grupo&#34;&gt;grupo oficial no WhatsApp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;img width=&#34;100%&#34; src=&#34;https://raw.githubusercontent.com/ErickWendel/semana-javascript-expert08/main/initial-template/demo.gif&#34;&gt; &#xA;&lt;h2&gt;Pre-reqs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Este projeto foi criado usando Node.js v18.17.0&lt;/li&gt; &#xA; &lt;li&gt;O ideal √© que voc√™ use o projeto em ambiente Unix (Linux). Se voc√™ estiver no Windows, √© recomendado que use o &lt;a href=&#34;https://www.omgubuntu.co.uk/how-to-install-wsl2-on-windows-10&#34;&gt;Windows Subsystem Linux&lt;/a&gt; pois nas aulas s√£o mostrados comandos Linux que possam n√£o existir no Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Importante&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Todo dia √†s 18hrs estou subindo o c√≥digo das aulas do dia corrente em &lt;a href=&#34;https://raw.githubusercontent.com/ErickWendel/semana-javascript-expert08/main/classes&#34;&gt;classes&lt;/a&gt;. Se voc√™ for iniciar o projeto, remova a pasta &lt;a href=&#34;https://raw.githubusercontent.com/ErickWendel/semana-javascript-expert08/main/classes&#34;&gt;classes&lt;/a&gt; para iniciar do zero!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Execute &lt;code&gt;npm ci&lt;/code&gt; na pasta que cont√©m o arquivo &lt;code&gt;package.json&lt;/code&gt; para restaurar os pacotes&lt;/li&gt; &#xA; &lt;li&gt;Execute &lt;code&gt;npm start&lt;/code&gt; e em seguida v√° para o seu navegador em &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; para visualizar a p√°gina acima&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Checklist Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Video Uploader &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[] - Deve entender videos em formato MP4 mesmo se n√£o estiverem fragmentados&lt;/li&gt; &#xA;   &lt;li&gt;[] - Deve processar itens em threads isoladas com Web Workers&lt;/li&gt; &#xA;   &lt;li&gt;[] - Deve converter fragmentos de videos em formato &lt;code&gt;144p&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;[] - Deve renderizar frames em tempo real em elemento canvas&lt;/li&gt; &#xA;   &lt;li&gt;[] - Deve gerar arquivos WebM a partir de fragmentos&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Desafios&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[] - Encodar em 360p e 720p&lt;/li&gt; &#xA; &lt;li&gt;[] - Fazer encoding/decoding track de √°udio&lt;/li&gt; &#xA; &lt;li&gt;[] - Fazer tamb√©m upload de track de √°udio&lt;/li&gt; &#xA; &lt;li&gt;[] - Concatenar o arquivo final no servidor em um arquivo s√≥&lt;/li&gt; &#xA; &lt;li&gt;[] - Corrigir problema do Webm de n√£o mostrar a dura√ß√£o do video&lt;/li&gt; &#xA; &lt;li&gt;[] - Corrigir a responsividade do site&lt;/li&gt; &#xA; &lt;li&gt;[] - Tentar usar outros muxers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Vanilagy/webm-muxer&#34;&gt;https://github.com/Vanilagy/webm-muxer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Vanilagy/mp4-muxer&#34;&gt;https://github.com/Vanilagy/mp4-muxer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Links mostrados nos aulas:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reuni todos os links em &lt;a href=&#34;https://raw.githubusercontent.com/ErickWendel/semana-javascript-expert08/main/referencias.md&#34;&gt;refer√™ncias&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Considera√ß√µes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Tire suas d√∫vidas sobre os desafios em nossa comunidade, o objetivo √© voc√™ aprender de forma divertida. Surgiu d√∫vidas? Pergunte por l√°!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ao completar qualquer um dos desafios, envie no canal &lt;strong&gt;#desafios&lt;/strong&gt; da comunidade no &lt;strong&gt;Discord&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;FAQ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;browser-sync est√° lan√ßando erros no Windows e nunca inicializa: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Solu√ß√£o: Trocar o browser-sync pelo http-server. &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;instale o &lt;strong&gt;http-server&lt;/strong&gt; com &lt;code&gt;npm i -D http-server&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;no package.json apague todo o comando do &lt;code&gt;browser-sync&lt;/code&gt; e substitua por &lt;code&gt;npx http-server .&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;agora o projeto vai estar executando na :8080 ent√£o v√° no navegador e tente acessar o &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080/&lt;/a&gt; A unica coisa, √© que o projeto n√£o vai reiniciar quando voce alterar algum c√≥digo, vai precisar dar um F5 na p√°gina toda vez que alterar algo&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>DevCaress/guia-entrevistas-de-programacion</title>
    <updated>2023-10-26T01:30:08Z</updated>
    <id>tag:github.com,2023-10-26:/DevCaress/guia-entrevistas-de-programacion</id>
    <link href="https://github.com/DevCaress/guia-entrevistas-de-programacion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Recursos&lt;/h1&gt; &#xA;&lt;p&gt;Recursos varios para prepararte para una entrevista t√©cnica&lt;/p&gt; &#xA;&lt;h1&gt;√çndice&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DevCaress/guia-entrevistas-de-programacion/main/#buenas-practicas&#34;&gt;Buenas pr√°ticas&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DevCaress/guia-entrevistas-de-programacion/main/#principios-solid&#34;&gt;Principios SOLID&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DevCaress/guia-entrevistas-de-programacion/main/#dry&#34;&gt;Principios DRY, KISS, YAGNI, GRASP y LoD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DevCaress/guia-entrevistas-de-programacion/main/#clean-code&#34;&gt;Cleand Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DevCaress/guia-entrevistas-de-programacion/main/#buenas-practicas-en&#34;&gt;Buenas pr√°cticas en...&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DevCaress/guia-entrevistas-de-programacion/main/#algoritmos-y-estructuras-de-datos&#34;&gt;Algoritmos y Estucturas de Datos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DevCaress/guia-entrevistas-de-programacion/main/#patrones-de-dise%C3%B1o&#34;&gt;Patrones de dise√±o&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DevCaress/guia-entrevistas-de-programacion/main/#preguntas-m%C3%A1s-frecuentes&#34;&gt;Preguntas m√°s frecuentes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DevCaress/guia-entrevistas-de-programacion/main/#ejercicios-mas-comunes-en-entrevistas&#34;&gt;Ejercicios m√°s comunes en entrevistas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DevCaress/guia-entrevistas-de-programacion/main/#practicar-algoritmos-y-estructuras-de-datos&#34;&gt;Practicar algoritmos y estructuras de datos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Buenas practicas&lt;/h1&gt; &#xA;&lt;h3&gt;Principios SOLID&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ryanmcdermott/clean-code-javascript#openclosed-principle-ocp&#34;&gt;SOLID en Javascript Vanilla Ingl√©s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@moein.mirkiani/solid-principles-in-vue-29ecc988f968&#34;&gt;SOLID en Vue.JS Ingl√©s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/docler-engineering/applying-solid-to-react-ca6d1ff926a4&#34;&gt;SOLID en React.JS Ingl√©s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@shavi22/solid-principles-in-java-cf9f5b167600&#34;&gt;SOLID en Java Ingl√©s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.javaguides.net/2020/01/solid-principles-in-java-with-examples.html&#34;&gt;SOLID en Java con Ejemplos Ingl√©s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nexwebsites.com/blog/solid-design-principles/&#34;&gt;SOLID en C++ Ingl√©s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@aleksandra_shershen/solid-principles-implementation-and-examples-in-c-99f0d7e3e868&#34;&gt;SOLID en C++ con implemetaci√≥n y ejemplos Ingl√©s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://realpython.com/solid-principles-python/&#34;&gt;SOLID en Python&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;DRY&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://levelup.gitconnected.com/demystifying-software-development-principles-dry-kiss-yagni-solid-grasp-and-lod-8606113c0313&#34;&gt;Demystifying Software Development Principles: DRY, KISS, YAGNI, SOLID, GRASP, and LoD&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Clean code&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/andersontr15/clean-code-javascript-es&#34;&gt;Clean Code en Javascript Espa√±ol&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ryanmcdermott/clean-code-javascript#openclosed-principle-ocp&#34;&gt;Clean Code en Javascript Ingl√©s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sryvcr/clean-code-python-es&#34;&gt;Clean Code en Python Espa√±ol&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zedr/clean-code-python&#34;&gt;Clean Code en Python Ingl√©s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alansastre/java-clean-code&#34;&gt;Clean Code en Java Espa√±ol&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/JuanCrg90/Clean-Code-Notes&#34;&gt;Clean Code en Java Ingl√©s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Clean architecture&lt;/h3&gt; &#xA;&lt;h1&gt;Buenas practicas en:&lt;/h1&gt; &#xA;&lt;h2&gt;Javascript&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Writing_style_guide/Code_style_guide/JavaScript&#34;&gt;Guidelines for writing JavaScript code examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.w3.org/wiki/JavaScript_best_practices&#34;&gt;JavaScript Best Practices by W3.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.w3schools.com/js/js_best_practices.asp&#34;&gt;JavaScript Best Practices by W3Schools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/airbnb/javascript&#34;&gt;Airbnb JavaScript Style Guide()&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://code.tutsplus.com/24-javascript-best-practices-for-beginners--net-5399t&#34;&gt;30 JavaScript Best Practices for Beginners&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Vue.js&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learnvue.co/articles/vue-best-practices&#34;&gt;12 VueJS Best Practices&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learn-vuejs.github.io/vue-patterns/patterns/#component-declaration&#34;&gt;Vue Patterns&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;React.js&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.turing.com/kb/writing-clean-react-code&#34;&gt;10 Best Practices for Writing Clean React Code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/best-practices-for-react/#tips-to-help-you-write-better-react-code-the-cherries-on-top&#34;&gt;React Best Practices ‚Äì Tips for Writing Better React Code in 2022&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://devsmitra.medium.com/react-best-practices-and-patterns-to-reduce-code-3170f1913b26&#34;&gt;React best practices and patterns to reduce code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://technostacks.com/blog/react-best-practices/&#34;&gt;React Best Practices Every Developer Have to Follow in 2023&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Angular&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@mattias.trnqvist/10-best-practices-for-building-scalable-angular-applications-with-examples-efdfe2a5b4e8&#34;&gt;10 Best Practices for Building Scalable Angular Applications ‚Äî With examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.tatvasoft.com/blog/angular-optimization-and-best-practices/&#34;&gt;https://www.tatvasoft.com/blog/angular-optimization-and-best-practices/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://angular.io/guide/styleguide&#34;&gt;Angular coding style guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Typescript&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/prescriptive-guidance/latest/best-practices-cdk-typescript-iac/typescript-best-practices.html&#34;&gt;TypeScript best practices by AWS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@warkiringoda/typescript-best-practices-2021-a58aee199661&#34;&gt;TypeScript Best Practices 2021&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Python&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.python-guide.org/writing/style/&#34;&gt;Code Style in Python&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://aglowiditsolutions.com/blog/python-best-practices/&#34;&gt;Python Best Practices to Follow in 2023&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;dJango&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/django-best-practices-2022-akshata-murudkar/&#34;&gt;dJango best practices 2022&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@schopade333/django-model-best-practices-c5c8a142dfc&#34;&gt;Django Model Best Practices: Tips and Tricks for Clean and Efficient Code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dart.dev/effective-dart/design&#34;&gt;Effective Dart: Design&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Flutter&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://itnext.io/flutter-best-practices-part-1-e89467ea4823&#34;&gt;Flutter Best Practices&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://articles.wesionary.team/the-dart-way-best-coding-practices-6ac693736090&#34;&gt;The Dart Way: Best Coding Practices&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://somniosoftware.com/post/top-10-flutter-best-practices&#34;&gt;10 Best Practices Every Flutter Developer Should Follow&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Java&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/in28minutes/java-best-practices&#34;&gt;Java Best Practices (recomendado)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.developer.com/languages/javascript/java-best-practices/&#34;&gt;Java Best Practices&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@alexthedev/10-best-practices-in-java-dc0b06dda858&#34;&gt;10 best practices in Java&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;C++&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@Code_Analysis/collecting-the-best-c-practices-4b867006849f&#34;&gt;Collecting the best C++ practices&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://programminggyan.com/5-cpp-tips-for-faster-better-code/&#34;&gt;Boost Your C++ Coding Skills: 5 Tips For Faster, Better Code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;PHP&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/techlaboratory/php-programming-best-practices-and-coding-styles-e43234446fd3&#34;&gt;PHP Programming Best Practices and Coding Styles&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://phpbestpractices.org/&#34;&gt;PHP Best Practices&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Algoritmos y estructuras de datos&lt;/h1&gt; &#xA;&lt;h2&gt;Estructuras de datos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Stack&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Queue&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Types of Queue&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Circular Queue&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Priority Queue&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deque&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linked List&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linked List Operations&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Types of Linked List&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hash Table&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Heap Data Structure&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fibonacci Heap&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Decrease Key and Delete node from Fibonacci Heap&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tree Data Structure&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tree Traversal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Binary Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Full Binary Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Perfect Binary Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Complete Binary Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Balanced Binary Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Binary Search Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;AVL Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;B Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Insertion into B-tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deletion from B-tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;B+ Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Insertion on a B+ Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deletion from a B+ Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red Black Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Insertion in Red Black Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deletion from Red Black Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Graph Data Structure&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Spanning Tree&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Strongly Connected Components&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Adjacency Matrix&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Adjacency List&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DFS Algorithm&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Breadth-first Search&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bellman Ford&#39;s Algorithm&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Visualizar algoritmos&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://visualgo.net/&#34;&gt;Visualgo&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;En esta web podr√°s ver como funcionan de manera visual los siguientes algoritmos:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Sorting&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Bubble Sort&lt;/li&gt; &#xA;   &lt;li&gt;Selection Sort&lt;/li&gt; &#xA;   &lt;li&gt;Insertion Sort&lt;/li&gt; &#xA;   &lt;li&gt;Merge Sort&lt;/li&gt; &#xA;   &lt;li&gt;Quick Sort&lt;/li&gt; &#xA;   &lt;li&gt;Random Quick Sort&lt;/li&gt; &#xA;   &lt;li&gt;Counting Sort&lt;/li&gt; &#xA;   &lt;li&gt;Radix Sort&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linked List&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Stack&lt;/li&gt; &#xA;   &lt;li&gt;Queue&lt;/li&gt; &#xA;   &lt;li&gt;Doubly Linked List&lt;/li&gt; &#xA;   &lt;li&gt;Deque&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hash Tables&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Linear Probing&lt;/li&gt; &#xA;   &lt;li&gt;Quadratic Probing&lt;/li&gt; &#xA;   &lt;li&gt;Double Hashing&lt;/li&gt; &#xA;   &lt;li&gt;Separate Chaining&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Binary Heap&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Binary Search Tree&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AVL Tree&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Patrones de dise√±o&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://refactoring.guru/es/design-patterns&#34;&gt;Patrones de dise√±o Espa√±ol (Recomendaci√≥n personal)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patterns.dev/posts&#34;&gt;Patrones de dise√±o en Javascript&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Patrones Creacionales &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Singleton&lt;/li&gt; &#xA;   &lt;li&gt;Factory Method&lt;/li&gt; &#xA;   &lt;li&gt;Abstract Factory&lt;/li&gt; &#xA;   &lt;li&gt;Builder&lt;/li&gt; &#xA;   &lt;li&gt;Prototype&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Patrones Estructurales &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Adapter&lt;/li&gt; &#xA;   &lt;li&gt;Bridge&lt;/li&gt; &#xA;   &lt;li&gt;Composite&lt;/li&gt; &#xA;   &lt;li&gt;Decorator&lt;/li&gt; &#xA;   &lt;li&gt;Facade&lt;/li&gt; &#xA;   &lt;li&gt;Flyweight&lt;/li&gt; &#xA;   &lt;li&gt;Proxy&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Patrones de comportamiento &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Chain of Responsibility&lt;/li&gt; &#xA;   &lt;li&gt;Command&lt;/li&gt; &#xA;   &lt;li&gt;Iterator&lt;/li&gt; &#xA;   &lt;li&gt;Mediator&lt;/li&gt; &#xA;   &lt;li&gt;Memento&lt;/li&gt; &#xA;   &lt;li&gt;Observer&lt;/li&gt; &#xA;   &lt;li&gt;State&lt;/li&gt; &#xA;   &lt;li&gt;Strategy&lt;/li&gt; &#xA;   &lt;li&gt;Template Method&lt;/li&gt; &#xA;   &lt;li&gt;Interpreter&lt;/li&gt; &#xA;   &lt;li&gt;Visitor&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Practicar algoritmos y estructuras de datos&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.codewars.com/&#34;&gt;CodeWars&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.com&#34;&gt;LeetCode&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.hackerrank.com/&#34;&gt;HackerRank&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coderbyte.com/&#34;&gt;CoderByte&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://exercism.org/&#34;&gt;xercism&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Preguntas m√°s frecuentes&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sudheerj/vuejs-interview-questions&#34;&gt;Vue Interview questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sudheerj/reactjs-interview-questions&#34;&gt;React Interview questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sudheerj/angular-interview-questions&#34;&gt;Angualar Interview questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sudheerj/javascript-interview-questions&#34;&gt;Javascript Interview questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Devinterview-io/java-interview-questions&#34;&gt;Java Interview questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/altafjava/spring-interview-questions-answers&#34;&gt;Spring Interview questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Devinterview-io/php-interview-questions&#34;&gt;PHP Interview questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Devinterview-io/python-interview-questions&#34;&gt;Python Interview questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ujjawal-Anand/django-interview&#34;&gt;Django Interview questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kansiris/SQL-interview-questions/tree/master&#34;&gt;SQL Interview questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xoraus/CrackingTheSQLInterview&#34;&gt;Cracking the SQL interview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Ejercicios m√°s comunes en entrevistas&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Invertir un array/string&lt;/li&gt; &#xA; &lt;li&gt;Eliminar duplicados de un array/string&lt;/li&gt; &#xA; &lt;li&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Preguntas m√°s comunes de Javascript&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Qu√© es el Event Loop?? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://latentflip.com/loupe/&#34;&gt;Visualizar Event Loop&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.jsv9000.app&#34;&gt;Ejemplos para entender Event Loop&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Temas&lt;/h2&gt; &#xA;&lt;p&gt;VUEJS&lt;/p&gt; &#xA;&lt;p&gt;Worked with viewer version 2 second version (NOX framework)&lt;/p&gt; &#xA;&lt;p&gt;Composition API- what kind of things u use- (own hooks,ref methods,&lt;/p&gt; &#xA;&lt;p&gt;Typescript integration have u find it difficult- working with JS or typescript in vuejs-&lt;/p&gt; &#xA;&lt;p&gt;Mutation action and so on (explain)&lt;/p&gt; &#xA;&lt;p&gt;Blogic&lt;/p&gt; &#xA;&lt;p&gt;Environment and ecosystem&lt;/p&gt; &#xA;&lt;p&gt;Jenkins pipeline&lt;/p&gt; &#xA;&lt;p&gt;Azure AWS- file management system S3 buckets-&lt;/p&gt; &#xA;&lt;p&gt;Share keys&lt;/p&gt; &#xA;&lt;p&gt;Master passwords&lt;/p&gt; &#xA;&lt;p&gt;Designing principles&lt;/p&gt; &#xA;&lt;p&gt;Predefine Es-lint. Code readable&lt;/p&gt; &#xA;&lt;p&gt;Improve the code- layer of abstraction, Automation test, unit testing, end to end testing&lt;/p&gt; &#xA;&lt;p&gt;Define release flow GIT ‚Äì&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Coding task**&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;find ids count in object&lt;/p&gt; &#xA;&lt;p&gt;customer comunication&lt;/p&gt; &#xA;&lt;p&gt;Waterfall, agile, cascade methodologies&lt;/p&gt; &#xA;&lt;p&gt;calculate the complexity of a ticket or user story.&lt;/p&gt; &#xA;&lt;p&gt;estimate in relative units.&lt;/p&gt; &#xA;&lt;p&gt;Dif using points and hours&lt;/p&gt; &#xA;&lt;p&gt;Designing architecture&lt;/p&gt; &#xA;&lt;p&gt;Object oriented programming&lt;/p&gt; &#xA;&lt;p&gt;paradigm &amp;amp; others (functional programming i.e‚Ä¶..)&lt;/p&gt; &#xA;&lt;p&gt;Base paradigm principals (object oriented)&lt;/p&gt; &#xA;&lt;p&gt;WHAT ARE THE BEST PRACTICES THAT U APPLY IN YOUR PROJECT&lt;/p&gt; &#xA;&lt;p&gt;Data bases&lt;/p&gt; &#xA;&lt;p&gt;Have u work with databases? Sql&lt;/p&gt; &#xA;&lt;p&gt;Do u know some techniques of optimization (normalize my table, my information from many to many so I don‚Äôt have to look up for every single email, primary keys, (index information)limited 10,000 thousand records, no doing a query with 2 base connection, joing, inner join reck heads? To find specific pattern that brings all your requirements.&lt;/p&gt; &#xA;&lt;p&gt;Dif sql and non sql data bases&lt;/p&gt; &#xA;&lt;p&gt;SOFTWARE CONSTRUCTION QUESTIONS&lt;/p&gt; &#xA;&lt;p&gt;Make the answer short for this questions until we star with framework&lt;/p&gt; &#xA;&lt;p&gt;Styling- CSSS, Flybox lay out, Dif btw flexbox and green lay out, complex conditions in CSS, Qerys&lt;/p&gt; &#xA;&lt;p&gt;create the naming of the CSS&lt;/p&gt; &#xA;&lt;p&gt;dif frameworks for CSS&lt;/p&gt; &#xA;&lt;p&gt;CSS defining variables&lt;/p&gt; &#xA;&lt;p&gt;Create theme for CSS&lt;/p&gt; &#xA;&lt;p&gt;HTML&lt;/p&gt; &#xA;&lt;p&gt;Semantic mark up&lt;/p&gt; &#xA;&lt;p&gt;accessibility&lt;/p&gt; &#xA;&lt;p&gt;DOM in HTML&lt;/p&gt; &#xA;&lt;p&gt;Shadow dom&lt;/p&gt; &#xA;&lt;p&gt;Graphics&lt;/p&gt; &#xA;&lt;p&gt;optimize an HTML page&lt;/p&gt; &#xA;&lt;p&gt;data visualization tools, D3 high charts,&lt;/p&gt; &#xA;&lt;p&gt;Map box.&lt;/p&gt; &#xA;&lt;p&gt;PROGRAMING LANGUAJES&lt;/p&gt; &#xA;&lt;p&gt;JS&lt;/p&gt; &#xA;&lt;p&gt;hosting&lt;/p&gt; &#xA;&lt;p&gt;type variables in JS- array&lt;/p&gt; &#xA;&lt;p&gt;promise and asynchrony way-&lt;/p&gt; &#xA;&lt;p&gt;multithread or single thread&lt;/p&gt; &#xA;&lt;p&gt;manage more than one thread&lt;/p&gt; &#xA;&lt;p&gt;HTTP works&lt;/p&gt; &#xA;&lt;p&gt;AJAX&lt;/p&gt; &#xA;&lt;p&gt;Graphql- how it works&lt;/p&gt; &#xA;&lt;p&gt;Progressive web app&lt;/p&gt; &#xA;&lt;p&gt;Configure some boundless&lt;/p&gt; &#xA;&lt;p&gt;deal with troubles in production&lt;/p&gt; &#xA;&lt;p&gt;AWS- optimize services&lt;/p&gt; &#xA;&lt;p&gt;Code quality ‚Äì unit testing tools&lt;/p&gt; &#xA;&lt;p&gt;analysis tools for the code- solarq&lt;/p&gt; &#xA;&lt;p&gt;metrics unit testing-&lt;/p&gt; &#xA;&lt;p&gt;GIT&lt;/p&gt; &#xA;&lt;p&gt;Garbage collector&lt;/p&gt; &#xA;&lt;p&gt;Compare HTTP request and web sockets.&lt;/p&gt; &#xA;&lt;p&gt;Cloud (ur experience and questions according to)&lt;/p&gt; &#xA;&lt;p&gt;Software development process&lt;/p&gt; &#xA;&lt;p&gt;Life cycles (what is it? How it works with it)&lt;/p&gt; &#xA;&lt;p&gt;Kanban and scrum&lt;/p&gt; &#xA;&lt;p&gt;Engineer based on previous exp risk. What tools to measure risk.&lt;/p&gt; &#xA;&lt;p&gt;Requirements functional and non-functional&lt;/p&gt; &#xA;&lt;p&gt;Optional, mostly for PM managers good to understand. RCA metrics&lt;/p&gt; &#xA;&lt;p&gt;RACI es un acr√≥nimo en ingl√©s (Responsable, Accountable, Consulted, Informed) que ayuda a los equipos a brindar&lt;/p&gt; &#xA;&lt;p&gt;claridad con respecto a la asignaci√≥n de roles en un proyecto y determinar qui√©n es el responsable de una tarea espec√≠fica&lt;/p&gt; &#xA;&lt;p&gt;Integration testing&lt;/p&gt; &#xA;&lt;p&gt;Code quality&lt;/p&gt; &#xA;&lt;p&gt;solid principles&lt;/p&gt; &#xA;&lt;p&gt;dif btw class and object&lt;/p&gt; &#xA;&lt;p&gt;encapsulation&lt;/p&gt; &#xA;&lt;p&gt;architecture patterns i.e. MVC&lt;/p&gt; &#xA;&lt;p&gt;how microservices work&lt;/p&gt; &#xA;&lt;p&gt;bootstrap and Semantic elements in HTML&lt;/p&gt; &#xA;&lt;p&gt;Java -Single treat or Multithreaded&lt;/p&gt; &#xA;&lt;p&gt;Asynchronies task-JavaScript&lt;/p&gt; &#xA;&lt;p&gt;promises&lt;/p&gt; &#xA;&lt;p&gt;promise all.&lt;/p&gt; &#xA;&lt;p&gt;promise rest.&lt;/p&gt; &#xA;&lt;p&gt;End to end testing&lt;/p&gt; &#xA;&lt;p&gt;Functional and non functional (how much time should tell per request, browser supports- non functional)&lt;/p&gt; &#xA;&lt;p&gt;RACI MATRIX ‚Äì root cause analysis-&lt;/p&gt; &#xA;&lt;p&gt;Used case diagram&lt;/p&gt; &#xA;&lt;p&gt;Software architecture/techniques&lt;/p&gt; &#xA;&lt;p&gt;JavaScript-object oriented programing- explain some crucial parts of object oriented-&lt;/p&gt; &#xA;&lt;p&gt;Caring techniques&lt;/p&gt; &#xA;&lt;p&gt;SOLID principles,&lt;/p&gt; &#xA;&lt;p&gt;Data bases-&lt;/p&gt; &#xA;&lt;p&gt;What database u have been working with&lt;/p&gt; &#xA;&lt;p&gt;Using sequel have u done like huge migration, which tools have u use&lt;/p&gt; &#xA;&lt;p&gt;injecting&lt;/p&gt; &#xA;&lt;p&gt;Mongo DB (dynamo DB)&lt;/p&gt; &#xA;&lt;p&gt;CSS framework&lt;/p&gt; &#xA;&lt;p&gt;Script or Flex&lt;/p&gt; &#xA;&lt;p&gt;sass lass advantages u see on regular CSS&lt;/p&gt; &#xA;&lt;p&gt;Variables is there any way to declare a variable in the normal CSS&lt;/p&gt; &#xA;&lt;p&gt;Mixings- maybe something else u have found helpful from pre processors&lt;/p&gt; &#xA;&lt;p&gt;Nesting deviarables&lt;/p&gt; &#xA;&lt;p&gt;Unit since CSS&lt;/p&gt; &#xA;&lt;p&gt;Difference btwn RAM and pixels&lt;/p&gt; &#xA;&lt;p&gt;Difference btw Fixet &amp;amp; absolut&lt;/p&gt; &#xA;&lt;p&gt;Set collection / what is it&lt;/p&gt; &#xA;&lt;p&gt;What about net collection&lt;/p&gt; &#xA;&lt;p&gt;Week map and week set map collection&lt;/p&gt; &#xA;&lt;p&gt;Garbage collector&lt;/p&gt; &#xA;&lt;p&gt;Proxy API- it has a crucial role in nodejs framework track observability and&lt;/p&gt; &#xA;&lt;p&gt;reflect API.&lt;/p&gt; &#xA;&lt;p&gt;Asynchronous this flow&lt;/p&gt; &#xA;&lt;p&gt;Event loop&lt;/p&gt; &#xA;&lt;p&gt;Web API&lt;/p&gt; &#xA;&lt;p&gt;Call stack&lt;/p&gt; &#xA;&lt;p&gt;How the event knows this piece of code is ready to execute?-&lt;/p&gt; &#xA;&lt;p&gt;Macro cube&lt;/p&gt; &#xA;&lt;p&gt;JavaScript&lt;/p&gt; &#xA;&lt;p&gt;The commands from JavaScript or is browser related&lt;/p&gt; &#xA;&lt;p&gt;Storages-&lt;/p&gt; &#xA;&lt;p&gt;Cookies&lt;/p&gt; &#xA;&lt;p&gt;HTTP&lt;/p&gt; &#xA;&lt;p&gt;Dif local storage &amp;amp; session storage&lt;/p&gt; &#xA;&lt;p&gt;Networking&lt;/p&gt; &#xA;&lt;p&gt;HTTP difference HTPS&lt;/p&gt; &#xA;&lt;p&gt;How HTTPS works in plain English- how the protocol works&lt;/p&gt; &#xA;&lt;p&gt;REST concept&lt;/p&gt; &#xA;&lt;p&gt;GraphQl&lt;/p&gt; &#xA;&lt;p&gt;Vuejs, excel library-&lt;/p&gt; &#xA;&lt;p&gt;In oksys have u implement such things /interceptor&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/devcaress&#34;&gt;@devcaress&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>shuttlenetwork/shuttle</title>
    <updated>2023-10-26T01:30:08Z</updated>
    <id>tag:github.com,2023-10-26:/shuttlenetwork/shuttle</id>
    <link href="https://github.com/shuttlenetwork/shuttle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Experience the global internet using Shuttle, the swiftest and most uncluttered proxy solution. Relish a heightened level of privacy during your online sessions, free from censorship.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;100 stars and 600 forks for v3 release&lt;/h1&gt;</summary>
  </entry>
</feed>