<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-17T01:32:23Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google/zx</title>
    <updated>2022-06-17T01:32:23Z</updated>
    <id>tag:github.com,2022-06-17:/google/zx</id>
    <link href="https://github.com/google/zx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for writing better scripts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🐚 zx&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;#!/usr/bin/env zx&#xA;&#xA;await $`cat package.json | grep name`&#xA;&#xA;let branch = await $`git branch --show-current`&#xA;await $`dep deploy --branch=${branch}`&#xA;&#xA;await Promise.all([&#xA;  $`sleep 1; echo 1`,&#xA;  $`sleep 2; echo 2`,&#xA;  $`sleep 3; echo 3`,&#xA;])&#xA;&#xA;let name = &#39;foo bar&#39;&#xA;await $`mkdir /tmp/${name}`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bash is great, but when it comes to writing scripts, people usually choose a more convenient programming language. JavaScript is a perfect choice, but standard Node.js library requires additional hassle before using. The &lt;code&gt;zx&lt;/code&gt; package provides useful wrappers around &lt;code&gt;child_process&lt;/code&gt;, escapes arguments and gives sensible defaults.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -g zx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Requirement&lt;/strong&gt;: Node version &amp;gt;= 16.0.0&lt;/p&gt; &#xA;&lt;h2&gt;Goods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#command-&#34;&gt;$&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#cd&#34;&gt;cd()&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#fetch&#34;&gt;fetch()&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#question&#34;&gt;question()&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#sleep&#34;&gt;sleep()&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#echo&#34;&gt;echo()&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#stdin&#34;&gt;stdin()&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#within&#34;&gt;within()&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#chalk-package&#34;&gt;chalk&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#fs-package&#34;&gt;fs&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#os-package&#34;&gt;os&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#path-package&#34;&gt;path&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#globby-package&#34;&gt;glob&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#yaml-package&#34;&gt;yaml&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#minimist-package&#34;&gt;minimist&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#which-package&#34;&gt;which&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#__filename--__dirname&#34;&gt;__filename&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#__filename--__dirname&#34;&gt;__dirname&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#require&#34;&gt;require()&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Write your scripts in a file with &lt;code&gt;.mjs&lt;/code&gt; extension in order to be able to use &lt;code&gt;await&lt;/code&gt; on top level. If you prefer the &lt;code&gt;.js&lt;/code&gt; extension, wrap your scripts in something like &lt;code&gt;void async function () {...}()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Add the following shebang to the beginning of your &lt;code&gt;zx&lt;/code&gt; scripts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/usr/bin/env zx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you will be able to run your script like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x ./script.mjs&#xA;./script.mjs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or via the &lt;code&gt;zx&lt;/code&gt; executable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;zx ./script.mjs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All functions (&lt;code&gt;$&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt;, &lt;code&gt;fetch&lt;/code&gt;, etc) are available straight away without any imports.&lt;/p&gt; &#xA;&lt;p&gt;Or import globals explicitly (for better autocomplete in VS Code).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#39;zx/globals&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;$`command` &lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Executes a given command using the &lt;code&gt;spawn&lt;/code&gt; func and returns &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#processpromise&#34;&gt;&lt;code&gt;ProcessPromise&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Everything passed through &lt;code&gt;${...}&lt;/code&gt; will be automatically escaped and quoted.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let name = &#39;foo &amp;amp; bar&#39;&#xA;await $`mkdir ${name}`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;There is no need to add extra quotes.&lt;/strong&gt; Read more about it in &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/docs/quotes.md&#34;&gt;quotes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can pass an array of arguments if needed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let flags = [&#xA;  &#39;--oneline&#39;,&#xA;  &#39;--decorate&#39;,&#xA;  &#39;--color&#39;,&#xA;]&#xA;await $`git log ${flags}`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the executed program returns a non-zero exit code, &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#processoutput&#34;&gt;&lt;code&gt;ProcessOutput&lt;/code&gt;&lt;/a&gt; will be thrown.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;try {&#xA;  await $`exit 1`&#xA;} catch (p) {&#xA;  console.log(`Exit code: ${p.exitCode}`)&#xA;  console.log(`Error: ${p.stderr}`)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;ProcessPromise&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;class ProcessPromise extends Promise&amp;lt;ProcessOutput&amp;gt; {&#xA;  stdin: Writable&#xA;  stdout: Readable&#xA;  stderr: Readable&#xA;  exitCode: Promise&amp;lt;number&amp;gt;&#xA;  pipe(dest): ProcessPromise&#xA;  kill(): Promise&amp;lt;void&amp;gt;&#xA;  nothrow(): this&#xA;  quiet(): this&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read more about the &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/docs/process-promise.md&#34;&gt;ProcessPromise&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;ProcessOutput&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;class ProcessOutput {&#xA;  readonly stdout: string&#xA;  readonly stderr: string&#xA;  readonly signal: string&#xA;  readonly exitCode: number&#xA;  toString(): string // Combined stdout &amp;amp; stderr.&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The output of the process is captured as is. Usually, programs print a new line &lt;code&gt;\n&lt;/code&gt; at the end.&lt;br&gt; If &lt;code&gt;ProcessOutput&lt;/code&gt; is used as an argument to some other &lt;code&gt;$&lt;/code&gt; process, &lt;strong&gt;zx&lt;/strong&gt; will use stdout and trim the new line.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let date = await $`date`&#xA;await $`echo Current date is ${date}.`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Functions&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;cd()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Changes the current working directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;cd(&#39;/tmp&#39;)&#xA;await $`pwd` // =&amp;gt; /tmp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A wrapper around the &lt;a href=&#34;https://www.npmjs.com/package/node-fetch&#34;&gt;node-fetch&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let resp = await fetch(&#39;https://medv.io&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;question()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A wrapper around the &lt;a href=&#34;https://nodejs.org/api/readline.html&#34;&gt;readline&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let bear = await question(&#39;What kind of bear is best? &#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A wrapper around the &lt;code&gt;setTimeout&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await sleep(1000)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;echo()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;console.log()&lt;/code&gt; alternative which can take &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#processoutput&#34;&gt;ProcessOutput&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let branch = await $`git branch --show-current`&#xA;&#xA;echo`Current branch is ${branch}.`&#xA;// or&#xA;echo(&#39;Current branch is&#39;, branch)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;stdin()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Returns the stdin as a string.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let content = JSON.parse(await stdin())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;within()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Creates a new async context.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await $`pwd` // =&amp;gt; /home/path&#xA;&#xA;within(async () =&amp;gt; {&#xA;  cd(&#39;/tmp&#39;)&#xA;  &#xA;  setTimeout(async () =&amp;gt; {&#xA;    await $`pwd` // =&amp;gt; /tmp&#xA;  }, 1000)&#xA;})&#xA;&#xA;await $`pwd` // =&amp;gt; /home/path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let version = await within(async () =&amp;gt; {&#xA; $.prefix += &#39;export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; &#39;&#xA; await $`nvm use 16`&#xA; return $`node -v`&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;p&gt;Following packages are available without importing inside scripts.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;chalk&lt;/code&gt; package&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.npmjs.com/package/chalk&#34;&gt;chalk&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(chalk.blue(&#39;Hello world!&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;fs&lt;/code&gt; package&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.npmjs.com/package/fs-extra&#34;&gt;fs-extra&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let {version} = await fs.readJson(&#39;./package.json&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;os&lt;/code&gt; package&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://nodejs.org/api/os.html&#34;&gt;os&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await $`cd ${os.homedir()} &amp;amp;&amp;amp; mkdir example`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;path&lt;/code&gt; package&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://nodejs.org/api/path.html&#34;&gt;path&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await $`mkdir ${path.join(basedir, &#39;output&#39;)}`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;globby&lt;/code&gt; package&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/sindresorhus/globby&#34;&gt;globby&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let packages = await glob([&#39;package.json&#39;, &#39;packages/*/package.json&#39;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;yaml&lt;/code&gt; package&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.npmjs.com/package/yaml&#34;&gt;yaml&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(YAML.parse(&#39;foo: bar&#39;).foo)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;minimist&lt;/code&gt; package&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.npmjs.com/package/minimist&#34;&gt;minimist&lt;/a&gt; package available as global const &lt;code&gt;argv&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;if( argv.someFlag ){ echo(&#39;yes&#39;) }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;which&lt;/code&gt; package&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/npm/node-which&#34;&gt;which&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let node = await which(&#39;node&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;$.shell&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Specifies what shell is used. Default is &lt;code&gt;which bash&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;$.shell = &#39;/usr/bin/bash&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use a CLI argument: &lt;code&gt;--shell=/bin/bash&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;$.spawn&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Specifies a &lt;code&gt;spawn&lt;/code&gt; api. Defaults to &lt;code&gt;require(&#39;child_process&#39;).spawn&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;$.prefix&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Specifies the command that will be prefixed to all commands run.&lt;/p&gt; &#xA;&lt;p&gt;Default is &lt;code&gt;set -euo pipefail;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Or use a CLI argument: &lt;code&gt;--prefix=&#39;set -e;&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;$.quote&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Specifies a function for escaping special characters during command substitution.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;$.verbose&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Specifies verbosity. Default is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In verbose mode, the &lt;code&gt;zx&lt;/code&gt; prints all executed commands alongside with their outputs.&lt;/p&gt; &#xA;&lt;p&gt;Or use a CLI argument &lt;code&gt;--quiet&lt;/code&gt; to set &lt;code&gt;$.verbose = false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;$.env&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Specifies an environment variables map.&lt;/p&gt; &#xA;&lt;p&gt;Defaults to &lt;code&gt;process.env&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;$.cwd&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Specifies a current working directory of all processes created with the &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/#cd&#34;&gt;cd()&lt;/a&gt; func changes only &lt;code&gt;process.cwd()&lt;/code&gt; and if no &lt;code&gt;$.cwd&lt;/code&gt; specified, all &lt;code&gt;$&lt;/code&gt; processes use &lt;code&gt;process.cwd()&lt;/code&gt; by default (same as &lt;code&gt;spawn&lt;/code&gt; behavior).&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;$.log&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Specifies a &lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/src/log.ts&#34;&gt;logging function&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Polyfills&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;__filename&lt;/code&gt; &amp;amp; &lt;code&gt;__dirname&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;In &lt;a href=&#34;https://nodejs.org/api/esm.html&#34;&gt;ESM&lt;/a&gt; modules, Node.js does not provide &lt;code&gt;__filename&lt;/code&gt; and &lt;code&gt;__dirname&lt;/code&gt; globals. As such globals are really handy in scripts, &lt;code&gt;zx&lt;/code&gt; provides these for use in &lt;code&gt;.mjs&lt;/code&gt; files (when using the &lt;code&gt;zx&lt;/code&gt; executable).&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;require()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;In &lt;a href=&#34;https://nodejs.org/api/modules.html#modules_module_createrequire_filename&#34;&gt;ESM&lt;/a&gt; modules, the &lt;code&gt;require()&lt;/code&gt; function is not defined. The &lt;code&gt;zx&lt;/code&gt; provides &lt;code&gt;require()&lt;/code&gt; function, so it can be used with imports in &lt;code&gt;.mjs&lt;/code&gt; files (when using &lt;code&gt;zx&lt;/code&gt; executable).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let {version} = require(&#39;./package.json&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Experimental&lt;/h2&gt; &#xA;&lt;p&gt;The zx also provides a few experimental functions. Please leave a feedback about those features in &lt;a href=&#34;https://github.com/google/zx/discussions/299&#34;&gt;the discussion&lt;/a&gt;. To enable new features via CLI pass &lt;code&gt;--experimental&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;retry()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Retries a callback for a few times. Will return after the first successful attempt, or will throw after specifies attempts count.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { retry, expBackoff } from &#39;zx/experimental&#39;&#xA;&#xA;let p = await retry(10, () =&amp;gt; $`curl https://medv.io`)&#xA;&#xA;// With a specified delay between attempts.&#xA;let p = await retry(20, &#39;1s&#39;, () =&amp;gt; $`curl https://medv.io`)&#xA;&#xA;// With an exponential backoff.&#xA;let p = await retry(30, expBackoff(), () =&amp;gt; $`curl https://medv.io`)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;spinner()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Starts a simple CLI spinner.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { spinner } from &#39;zx/experimental&#39;&#xA;&#xA;await spinner(() =&amp;gt; $`long-running command`)&#xA;&#xA;// With a message.&#xA;await spinner(&#39;working...&#39;, () =&amp;gt; $`sleep 99`)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Passing env variables&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;process.env.FOO = &#39;bar&#39;&#xA;await $`echo $FOO`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Passing array of values&lt;/h3&gt; &#xA;&lt;p&gt;If array of values passed as argument to &lt;code&gt;$&lt;/code&gt;, items of the array will be escaped individually and concatenated via space.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let files = [...]&#xA;await $`tar cz ${files}`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Importing from other scripts&lt;/h3&gt; &#xA;&lt;p&gt;It is possible to make use of &lt;code&gt;$&lt;/code&gt; and other functions via explicit imports:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;#!/usr/bin/env node&#xA;import {$} from &#39;zx&#39;&#xA;await $`date`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scripts without extensions&lt;/h3&gt; &#xA;&lt;p&gt;If script does not have a file extension (like &lt;code&gt;.git/hooks/pre-commit&lt;/code&gt;), zx assumes that it is an &lt;a href=&#34;https://nodejs.org/api/modules.html#modules_module_createrequire_filename&#34;&gt;ESM&lt;/a&gt; module.&lt;/p&gt; &#xA;&lt;h3&gt;Markdown scripts&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;zx&lt;/code&gt; can execute scripts written in markdown (&lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/docs/markdown.md&#34;&gt;docs/markdown.md&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;zx docs/markdown.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;TypeScript scripts&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import {$} from &#39;zx&#39;&#xA;// Or &#xA;import &#39;zx/globals&#39;&#xA;&#xA;void async function () {&#xA;  await $`ls -la`&#xA;}()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set &lt;a href=&#34;https://nodejs.org/api/packages.html#packages_type&#34;&gt;&lt;code&gt;&#34;type&#34;: &#34;module&#34;&lt;/code&gt;&lt;/a&gt; in &lt;strong&gt;package.json&lt;/strong&gt; and &lt;a href=&#34;https://www.typescriptlang.org/tsconfig/#module&#34;&gt;&lt;code&gt;&#34;module&#34;: &#34;ESNext&#34;&lt;/code&gt;&lt;/a&gt; in &lt;strong&gt;tsconfig.json&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Executing remote scripts&lt;/h3&gt; &#xA;&lt;p&gt;If the argument to the &lt;code&gt;zx&lt;/code&gt; executable starts with &lt;code&gt;https://&lt;/code&gt;, the file will be downloaded and executed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;zx https://medv.io/game-of-life.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Executing scripts from stdin&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;zx&lt;/code&gt; supports executing scripts from stdin.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;zx &amp;lt;&amp;lt;&#39;EOF&#39;&#xA;await $`pwd`&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Executing scripts via --eval&lt;/h3&gt; &#xA;&lt;p&gt;Evaluate the following argument as a script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat package.json | zx --eval &#39;let v = JSON.parse(await stdin()).version; echo(v)&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Attaching a profile&lt;/h3&gt; &#xA;&lt;p&gt;By default &lt;code&gt;child_process&lt;/code&gt; does not include aliases and bash functions. But you are still able to do it by hand. Just attach necessary directives to &lt;code&gt;$.prefix&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;$.prefix += &#39;export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; &#39;&#xA;await $`nvm -v`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using GitHub Actions&lt;/h3&gt; &#xA;&lt;p&gt;Default GitHub Action runner comes with npx installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  build:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;    - uses: actions/checkout@v3&#xA;&#xA;    - name: Build&#xA;      env:&#xA;        FORCE_COLOR: 3&#xA;      run: |&#xA;        npx zx &amp;lt;&amp;lt;&#39;EOF&#39;&#xA;        await $`...`&#xA;        EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/zx/main/LICENSE&#34;&gt;Apache-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Disclaimer: &lt;em&gt;This is not an officially supported Google product.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>iamadamdev/bypass-paywalls-chrome</title>
    <updated>2022-06-17T01:32:23Z</updated>
    <id>tag:github.com,2022-06-17:/iamadamdev/bypass-paywalls-chrome</id>
    <link href="https://github.com/iamadamdev/bypass-paywalls-chrome" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bypass Paywalls web browser extension for Chrome and Firefox.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/iamadamdev/bypass-paywalls-chrome/raw/master/src/icons/bypass.png&#34; width=&#34;75&#34; height=&#34;75&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Bypass Paywalls&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Bypass Paywalls is a web browser extension to help bypass paywalls for selected sites.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation Instructions&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Google Chrome / Microsoft Edge&lt;/strong&gt; (Custom sites supported)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download this repo as a &lt;a href=&#34;https://github.com/iamadamdev/bypass-paywalls-chrome/archive/master.zip&#34;&gt;ZIP file from GitHub&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Unzip the file and you should have a folder named &lt;code&gt;bypass-paywalls-chrome-master&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In Chrome/Edge go to the extensions page (&lt;code&gt;chrome://extensions&lt;/code&gt; or &lt;code&gt;edge://extensions&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Enable Developer Mode.&lt;/li&gt; &#xA; &lt;li&gt;Drag the &lt;code&gt;bypass-paywalls-chrome-master&lt;/code&gt; folder anywhere on the page to import it (do not delete the folder afterwards).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mozilla Firefox&lt;/strong&gt; (Custom sites not supported)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iamadamdev/bypass-paywalls-chrome/releases/latest/download/bypass-paywalls-firefox.xpi&#34;&gt;Download and install the latest version&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Every time you open Chrome it may warn you about running extensions in developer mode, just click ✕ to keep the extension enabled.&lt;/li&gt; &#xA; &lt;li&gt;You will be logged out for any site you have checked.&lt;/li&gt; &#xA; &lt;li&gt;This extension works best alongside the adblocker uBlock Origin.&lt;/li&gt; &#xA; &lt;li&gt;The Firefox version supports automatic updates.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bypass the following sites&#39; paywalls with this extension:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.adweek.com&#34;&gt;Adweek&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.ad.nl&#34;&gt;Algemeen Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.americanbanker.com&#34;&gt;American Banker&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.ambito.com&#34;&gt;Ámbito&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.baltimoresun.com&#34;&gt;Baltimore Sun&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.barrons.com&#34;&gt;Barron&#39;s&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.bloombergquint.com&#34;&gt;Bloomberg Quint&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.bloomberg.com&#34;&gt;Bloomberg&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.bndestem.nl&#34;&gt;BN De Stem&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.bostonglobe.com&#34;&gt;Boston Globe&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.bd.nl&#34;&gt;Brabants Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.brisbanetimes.com.au&#34;&gt;Brisbane Times&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.businessinsider.com&#34;&gt;Business Insider&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.caixinglobal.com&#34;&gt;Caixin&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.centralwesterndaily.com.au&#34;&gt;Central Western Daily&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://cen.acs.org&#34;&gt;Chemical &amp;amp; Engineering News&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.chicagotribune.com&#34;&gt;Chicago Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.corriere.it&#34;&gt;Corriere Della Sera&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.chicagobusiness.com&#34;&gt;Crain&#39;s Chicago Business&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.dailypress.com&#34;&gt;Daily Press&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.gelderlander.nl&#34;&gt;De Gelderlander&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.groene.nl&#34;&gt;De Groene Amsterdammer&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.destentor.nl&#34;&gt;De Stentor&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://speld.nl&#34;&gt;De Speld&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.tijd.be&#34;&gt;De Tijd&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.volkskrant.nl&#34;&gt;De Volkskrant&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.demorgen.be&#34;&gt;DeMorgen&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.denverpost.com&#34;&gt;Denver Post&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.df.cl&#34;&gt;Diario Financiero&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.editorialedomani.it&#34;&gt;Domani&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.dynamed.com&#34;&gt;Dynamed Plus&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.ed.nl&#34;&gt;Eindhovens Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.elmercurio.com&#34;&gt;El Mercurio&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.elpais.com&#34;&gt;El Pais&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.elperiodico.com&#34;&gt;El Periodico&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.elu24.ee&#34;&gt;Elu24&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.britannica.com&#34;&gt;Encyclopedia Britannica&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.estadao.com.br&#34;&gt;Estadão&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.examiner.com.au&#34;&gt;Examiner&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.expansion.com&#34;&gt;Expansión&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.fnlondon.com&#34;&gt;Financial News&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.financialpost.com&#34;&gt;Financial Post&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.ft.com&#34;&gt;Financial Times&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.firstthings.com&#34;&gt;First Things&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.foreignpolicy.com&#34;&gt;Foreign Policy&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.fortune.com&#34;&gt;Fortune&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.genomeweb.com&#34;&gt;Genomeweb&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.glassdoor.com&#34;&gt;Glassdoor&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.globes.co.il&#34;&gt;Globes&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.grubstreet.com&#34;&gt;Grubstreet&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.haaretz.co.il&#34;&gt;Haaretz.co.il&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.haaretz.com&#34;&gt;Haaretz.com&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://harpers.org&#34;&gt;Harper&#39;s Magazine&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.courant.com&#34;&gt;Hartford Courant&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.hbr.org&#34;&gt;Harvard Business Review&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.hbrchina.org&#34;&gt;Harvard Business Review China&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.heraldsun.com.au&#34;&gt;Herald Sun&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://fd.nl&#34;&gt;Het Financieel Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.historyextra.com&#34;&gt;History Extra&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.humo.be&#34;&gt;Humo&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.ilmanifesto.it&#34;&gt;Il Manifesto&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.inc.com&#34;&gt;Inc.com&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.interest.co.nz&#34;&gt;Interest.co.nz&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.investorschronicle.co.uk&#34;&gt;Investors Chronicle&lt;/a&gt; &lt;a href=&#34;https://www.lecho.be&#34;&gt;L&#39;Écho&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://labusinessjournal.com&#34;&gt;L.A. Business Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.lanacion.com.ar&#34;&gt;La Nación&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.repubblica.it&#34;&gt;La Repubblica&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.lastampa.it&#34;&gt;La Stampa&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.latercera.com&#34;&gt;La Tercera&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.lavoixdunord.fr&#34;&gt;La Voix du Nord&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.ledevoir.com&#34;&gt;Le Devoir&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.leparisien.fr&#34;&gt;Le Parisien&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.lesechos.fr&#34;&gt;Les Échos&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.loebclassics.com&#34;&gt;Loeb Classical Library&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.lrb.co.uk&#34;&gt;London Review of Books&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.latimes.com&#34;&gt;Los Angeles Times&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://sloanreview.mit.edu&#34;&gt;MIT Sloan Management Review&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.technologyreview.com&#34;&gt;MIT Technology Review&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.medium.com&#34;&gt;Medium&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.medscape.com&#34;&gt;Medscape&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://mexiconewsdaily.com&#34;&gt;Mexicon News Daily&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.mv-voice.com&#34;&gt;Mountain View Voice&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.nationalgeographic.com&#34;&gt;National Geographic&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.nydailynews.com&#34;&gt;New York Daily News&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.nrc.nl&#34;&gt;NRC Handelsblad&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.ntnews.com.au&#34;&gt;NT News&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.nationalpost.com&#34;&gt;National Post&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.nzz.ch&#34;&gt;Neue Zürcher Zeitung&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.nymag.com&#34;&gt;New York Magazine&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.nzherald.co.nz&#34;&gt;New Zealand Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.ocregister.com&#34;&gt;Orange County Register&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.orlandosentinel.com&#34;&gt;Orlando Sentinel&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.pzc.nl&#34;&gt;PZC&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.paloaltoonline.com&#34;&gt;Palo Alto Online&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.parool.nl&#34;&gt;Parool&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.postimees.ee&#34;&gt;Postimees&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://qz.com&#34;&gt;Quartz&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.quora.com&#34;&gt;Quora&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://quotidiani.gelocal.it&#34;&gt;Quotidiani Gelocal&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://republic.ru&#34;&gt;Republic.ru&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.reuters.com&#34;&gt;Reuters&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.sandiegouniontribune.com&#34;&gt;San Diego Union Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.sfchronicle.com&#34;&gt;San Francisco Chronicle&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.scientificamerican.com&#34;&gt;Scientific American&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://seekingalpha.com&#34;&gt;Seeking Alpha&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://slate.com&#34;&gt;Slate&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://sofrep.com&#34;&gt;SOFREP&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.statista.com&#34;&gt;Statista&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.startribune.com&#34;&gt;Star Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.stuff.co.nz&#34;&gt;Stuff&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.sun-sentinel.com&#34;&gt;SunSentinel&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.techinasia.com&#34;&gt;Tech in Asia&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.telegraaf.nl&#34;&gt;Telegraaf&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.adelaidenow.com.au&#34;&gt;The Advertiser&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.theadvocate.com.au&#34;&gt;The Advocate&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.theage.com.au&#34;&gt;The Age&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.the-american-interest.com&#34;&gt;The American Interest&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.theathletic.com&#34;&gt;The Athletic&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.theathletic.co.uk&#34;&gt;The Athletic (UK)&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.theatlantic.com&#34;&gt;The Atlantic&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.afr.com&#34;&gt;The Australian Financial Review&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.theaustralian.com.au&#34;&gt;The Australian&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.bizjournals.com&#34;&gt;The Business Journals&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.canberratimes.com.au&#34;&gt;The Canberra Times&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.thecourier.com.au&#34;&gt;The Courier&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.couriermail.com.au&#34;&gt;The Courier Mail&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.thecut.com&#34;&gt;The Cut&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.dailytelegraph.com.au&#34;&gt;The Daily Telegraph&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.thediplomat.com&#34;&gt;The Diplomat&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.economist.com&#34;&gt;The Economist&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.theglobeandmail.com&#34;&gt;The Globe and Mail&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.theherald.com.au&#34;&gt;The Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.thehindu.com&#34;&gt;The Hindu&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.irishtimes.com&#34;&gt;The Irish Times&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.kansascity.com&#34;&gt;The Kansas City Star&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.mercurynews.com&#34;&gt;The Mercury News&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.themercury.com.au&#34;&gt;The Mercury Tasmania&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.mcall.com&#34;&gt;The Morning Call&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.thenation.com&#34;&gt;The Nation&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.thenational.scot&#34;&gt;The National&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.newstatesman.com&#34;&gt;The New Statesman&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.nytimes.com&#34;&gt;The New York Times&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.newyorker.com&#34;&gt;The New Yorker&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.news-gazette.com&#34;&gt;The News-Gazette&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.theolivepress.es&#34;&gt;The Olive Press&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.inquirer.com&#34;&gt;The Philadelphia Inquirer&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.thesaturdaypaper.com.au&#34;&gt;The Saturday Paper&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.seattletimes.com&#34;&gt;The Seattle Times&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.spectator.com.au&#34;&gt;The Spectator Australia&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.spectator.co.uk&#34;&gt;The Spectator&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.smh.com.au&#34;&gt;The Sydney Morning Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.telegraph.co.uk&#34;&gt;The Telegraph&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.thestar.com&#34;&gt;The Toronto Star&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.wsj.com&#34;&gt;The Wall Street Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.washingtonpost.com&#34;&gt;The Washington Post&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.thewrap.com&#34;&gt;The Wrap&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.themarker.com&#34;&gt;TheMarker&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.the-tls.co.uk&#34;&gt;Times Literary Supplement&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.towardsdatascience.com&#34;&gt;Towards Data Science&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.trouw.nl&#34;&gt;Trouw&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.tubantia.nl&#34;&gt;Tubantia&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.vanityfair.com&#34;&gt;Vanity Fair&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.vn.nl&#34;&gt;Vrij Nederland&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.vulture.com&#34;&gt;Vulture&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://journalnow.com&#34;&gt;Winston-Salem Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.wired.com&#34;&gt;Wired&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.worldpoliticsreview.com&#34;&gt;World Politics Review&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.zeit.de&#34;&gt;Zeit Online&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sites with limited number of free articles&lt;/h3&gt; &#xA;&lt;p&gt;The free article limit can normally be bypassed by removing cookies for the site.*&lt;/p&gt; &#xA;&lt;p&gt;Install the Cookie Remover extension &lt;a href=&#34;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&#34;&gt;for Google Chrome&lt;/a&gt; or &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/cookie-remover/&#34;&gt;for Mozilla Firefox&lt;/a&gt;. Please rate it 5 stars if you find it useful.&lt;/p&gt; &#xA;&lt;p&gt;When coming across a paywall click the cookie icon to remove the cookies then refresh the page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;*May not always succeed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;New site requests&lt;/h3&gt; &#xA;&lt;p&gt;Only large or major sites will be considered. Usually premium articles cannot be bypassed as they are behind a hard paywall.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the uBlock Origin extension if it hasn&#39;t been installed already. See if you are still getting a paywall.&lt;/li&gt; &#xA; &lt;li&gt;Check if using Cookie Remover (&lt;a href=&#34;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&#34;&gt;Google Chrome version&lt;/a&gt; or &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/cookie-remover/&#34;&gt;Mozilla Firefox version&lt;/a&gt;) can bypass the paywall. If not, continue to the next step.&lt;/li&gt; &#xA; &lt;li&gt;First search &lt;a href=&#34;https://github.com/iamadamdev/bypass-paywalls-chrome/issues&#34;&gt;Issues&lt;/a&gt; to see if the site has been requested already.&lt;/li&gt; &#xA; &lt;li&gt;Visit an article on the site you want to bypass the paywall for and copy the article title.&lt;/li&gt; &#xA; &lt;li&gt;Open up a new incognito window (Ctrl+Shift+N on Chrome) or Private window (Ctrl+Shift+P on Firefox), and paste the article title into Google.&lt;/li&gt; &#xA; &lt;li&gt;Click on the same article from the Google search results page.&lt;/li&gt; &#xA; &lt;li&gt;If it loads without a paywall you can &lt;a href=&#34;https://github.com/iamadamdev/bypass-paywalls-chrome/issues/new/choose&#34;&gt;submit a request&lt;/a&gt; and replace the entire template text with the word &#34;Confirmed&#34;. Otherwise please do not submit an issue as this extension cannot bypass it either.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This extension works best alongside uBlock Origin &lt;a href=&#34;https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm&#34;&gt;for Google Chrome&lt;/a&gt; or &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/&#34;&gt;for Mozilla Firefox&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If a site doesn&#39;t work, try turning off uBlock and refreshing.&lt;/li&gt; &#xA; &lt;li&gt;Try clearing &lt;a href=&#34;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&#34;&gt;cookies&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Make sure you&#39;re running the latest version of Bypass Paywalls.&lt;/li&gt; &#xA; &lt;li&gt;If a site is having problems try unchecking &#34;*General Paywall Bypass*&#34; in Options.&lt;/li&gt; &#xA; &lt;li&gt;If none of these work, you can submit an issue &lt;a href=&#34;https://github.com/iamadamdev/bypass-paywalls-chrome/issues/new/choose&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributing - Pull Requests&lt;/h3&gt; &#xA;&lt;p&gt;PRs are welcome.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If making a PR to add a new site, confirm your changes actually bypass the paywall.&lt;/li&gt; &#xA; &lt;li&gt;At a minimum these files need to be updated: &lt;code&gt;README.md&lt;/code&gt;, &lt;code&gt;manifest-ff.json&lt;/code&gt;, &lt;code&gt;src/js/sites.js&lt;/code&gt;, and possibly &lt;code&gt;src/js/background.js&lt;/code&gt;, and/or &lt;code&gt;src/js/contentScript.js&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Follow existing code-style and use camelCase.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://github.com/standard/semistandard&#34;&gt;JavaScript Semi-Standard Style linter&lt;/a&gt;. Don&#39;t need to follow it exactly. There will be some errors (e.g., do not use it on &lt;code&gt;sites.js&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Show your support&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow me on Twitter &lt;a href=&#34;https://twitter.com/iamadamdev&#34;&gt;@iamadamdev&lt;/a&gt; for updates.&lt;/li&gt; &#xA; &lt;li&gt;I do not ask for donations, all I ask is that you star this repo.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Disclaimer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This software is provided for educational purposes only and is provided &#34;AS IS&#34;, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>aws-actions/configure-aws-credentials</title>
    <updated>2022-06-17T01:32:23Z</updated>
    <id>tag:github.com,2022-06-17:/aws-actions/configure-aws-credentials</id>
    <link href="https://github.com/aws-actions/configure-aws-credentials" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Configure AWS credential environment variables for use in other GitHub Actions.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&#34;Configure AWS Credentials&#34; Action For GitHub Actions&lt;/h2&gt; &#xA;&lt;p&gt;Configure AWS credential and region environment variables for use in other GitHub Actions. The environment variables will be detected by both the AWS SDKs and the AWS CLI to determine the credentials and region to use for AWS API calls.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;!-- toc --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/master/#credentials&#34;&gt;Credentials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/master/#assuming-a-role&#34;&gt;Assuming a Role&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/master/#session-tagging&#34;&gt;Session tagging&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/master/#sample-iam-role-cloudformation-template&#34;&gt;Sample IAM Role Permissions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/master/#self-hosted-runners&#34;&gt;Self-Hosted Runners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/master/#license-summary&#34;&gt;License Summary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/master/#security-disclosures&#34;&gt;Security Disclosures&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- tocstop --&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Add the following step to your workflow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    - name: Configure AWS Credentials&#xA;      uses: aws-actions/configure-aws-credentials@v1&#xA;      with:&#xA;        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role&#xA;        aws-region: us-east-2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, you can use this action with the AWS CLI available in &lt;a href=&#34;https://help.github.com/en/actions/reference/software-installed-on-github-hosted-runners&#34;&gt;GitHub&#39;s hosted virtual environments&lt;/a&gt;. You can also run this action multiple times to use different AWS accounts, regions, or IAM roles in the same GitHub Actions workflow job.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  deploy:&#xA;    name: Upload to Amazon S3&#xA;    runs-on: ubuntu-latest&#xA;    # These permissions are needed to interact with GitHub&#39;s OIDC Token endpoint.&#xA;    permissions:&#xA;      id-token: write&#xA;      contents: read&#xA;    steps:&#xA;    - name: Checkout&#xA;      uses: actions/checkout@v2&#xA;&#xA;    - name: Configure AWS credentials from Test account&#xA;      uses: aws-actions/configure-aws-credentials@v1&#xA;      with:&#xA;        role-to-assume: arn:aws:iam::111111111111:role/my-github-actions-role-test&#xA;        aws-region: us-east-1&#xA;&#xA;    - name: Copy files to the test website with the AWS CLI&#xA;      run: |&#xA;        aws s3 sync . s3://my-s3-test-website-bucket&#xA;&#xA;    - name: Configure AWS credentials from Production account&#xA;      uses: aws-actions/configure-aws-credentials@v1&#xA;      with:&#xA;        role-to-assume: arn:aws:iam::222222222222:role/my-github-actions-role-prod&#xA;        aws-region: us-west-2&#xA;&#xA;    - name: Copy files to the production website with the AWS CLI&#xA;      run: |&#xA;        aws s3 sync . s3://my-s3-prod-website-bucket&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/master/action.yml&#34;&gt;action.yml&lt;/a&gt; for the full documentation for this action&#39;s inputs and outputs.&lt;/p&gt; &#xA;&lt;h2&gt;Credentials&lt;/h2&gt; &#xA;&lt;p&gt;We recommend following &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html&#34;&gt;Amazon IAM best practices&lt;/a&gt; for the AWS credentials used in GitHub Actions workflows, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Do not store credentials in your repository&#39;s code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege&#34;&gt;Grant least privilege&lt;/a&gt; to the credentials used in GitHub Actions workflows. Grant only the permissions required to perform the actions in your GitHub Actions workflows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#keep-a-log&#34;&gt;Monitor the activity&lt;/a&gt; of the credentials used in GitHub Actions workflows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Assuming a Role&lt;/h2&gt; &#xA;&lt;p&gt;We recommend using GitHub&#39;s OIDC provider to get short-lived credentials needed for your actions. Specifying &lt;code&gt;role-to-assume&lt;/code&gt; without providing an &lt;code&gt;aws-access-key-id&lt;/code&gt; or a &lt;code&gt;web-identity-token-file&lt;/code&gt; will signal to the action that you wish to use the OIDC provider. The default session duration is 1 hour when using the OIDC provider to directly assume an IAM Role. The default session duration is 6 hours when using an IAM User to assume an IAM Role (by providing an &lt;code&gt;aws-access-key-id&lt;/code&gt;, &lt;code&gt;aws-secret-access-key&lt;/code&gt;, and a &lt;code&gt;role-to-assume&lt;/code&gt;) . If you would like to adjust this you can pass a duration to &lt;code&gt;role-duration-seconds&lt;/code&gt;, but the duration cannot exceed the maximum that was defined when the IAM Role was created. The default session name is GitHubActions, and you can modify it by specifying the desired name in &lt;code&gt;role-session-name&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following table describes which identity is used based on which values are supplied to the Action:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Identity Used&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;aws-access-key-id&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;role-to-assume&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;web-identity-token-file&lt;/code&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;[✅ Recommended] Assume Role directly using GitHub OIDC provider&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IAM User&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Assume Role using IAM User credentials&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Assume Role using WebIdentity Token File credentials&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    - name: Configure AWS Credentials&#xA;      uses: aws-actions/configure-aws-credentials@v1&#xA;      with:&#xA;        aws-region: us-east-2&#xA;        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role&#xA;        role-session-name: MySessionName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, the Action will load the OIDC token from the GitHub-provided environment variable and use it to assume the role &lt;code&gt;arn:aws:iam::123456789100:role/my-github-actions-role&lt;/code&gt; with the session name &lt;code&gt;MySessionName&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    - name: Configure AWS Credentials&#xA;      uses: aws-actions/configure-aws-credentials@v1&#xA;      with:&#xA;        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}&#xA;        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}&#xA;        aws-region: us-east-2&#xA;        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}&#xA;        role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}&#xA;        role-duration-seconds: 1200&#xA;        role-session-name: MySessionName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, the secret &lt;code&gt;AWS_ROLE_TO_ASSUME&lt;/code&gt; contains a string like &lt;code&gt;arn:aws:iam::123456789100:role/my-github-actions-role&lt;/code&gt;. To assume a role in the same account as the static credentials, you can simply specify the role name, like &lt;code&gt;role-to-assume: my-github-actions-role&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Sample IAM Role CloudFormation Template&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Parameters:&#xA;  GitHubOrg:&#xA;    Type: String&#xA;  RepositoryName:&#xA;    Type: String&#xA;  OIDCProviderArn:&#xA;    Description: Arn for the GitHub OIDC Provider.&#xA;    Default: &#34;&#34;&#xA;    Type: String&#xA;&#xA;Conditions:&#xA;  CreateOIDCProvider: !Equals &#xA;    - !Ref OIDCProviderArn&#xA;    - &#34;&#34;&#xA;&#xA;Resources:&#xA;  Role:&#xA;    Type: AWS::IAM::Role&#xA;    Properties:&#xA;      AssumeRolePolicyDocument:&#xA;        Statement:&#xA;          - Effect: Allow&#xA;            Action: sts:AssumeRoleWithWebIdentity&#xA;            Principal:&#xA;              Federated: !If &#xA;                - CreateOIDCProvider&#xA;                - !Ref GithubOidc&#xA;                - !Ref OIDCProviderArn&#xA;            Condition:&#xA;              StringLike:&#xA;                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*&#xA;&#xA;  GithubOidc:&#xA;    Type: AWS::IAM::OIDCProvider&#xA;    Condition: CreateOIDCProvider&#xA;    Properties:&#xA;      Url: https://token.actions.githubusercontent.com&#xA;      ClientIdList: &#xA;        - sts.amazonaws.com&#xA;      ThumbprintList:&#xA;        - 6938fd4d98bab03faadb97b34396831e3780aea1&#xA;&#xA;Outputs:&#xA;  Role:&#xA;    Value: !GetAtt Role.Arn &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The GitHub OIDC Provider only needs to be created once per account (i.e. multiple IAM Roles that can be assumed by the GitHub&#39;s OIDC can share a single OIDC Provider)&lt;/p&gt; &#xA;&lt;h3&gt;Session tagging&lt;/h3&gt; &#xA;&lt;p&gt;The session will have the name &#34;GitHubActions&#34; and be tagged with the following tags: (&lt;code&gt;GITHUB_&lt;/code&gt; environment variable definitions can be &lt;a href=&#34;https://help.github.com/en/actions/automating-your-workflow-with-github-actions/using-environment-variables#default-environment-variables&#34;&gt;found here&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GitHub&lt;/td&gt; &#xA;   &lt;td&gt;&#34;Actions&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Repository&lt;/td&gt; &#xA;   &lt;td&gt;GITHUB_REPOSITORY&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Workflow&lt;/td&gt; &#xA;   &lt;td&gt;GITHUB_WORKFLOW&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Action&lt;/td&gt; &#xA;   &lt;td&gt;GITHUB_ACTION&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Actor&lt;/td&gt; &#xA;   &lt;td&gt;GITHUB_ACTOR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Branch&lt;/td&gt; &#xA;   &lt;td&gt;GITHUB_REF&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Commit&lt;/td&gt; &#xA;   &lt;td&gt;GITHUB_SHA&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: all tag values must conform to &lt;a href=&#34;https://docs.aws.amazon.com/STS/latest/APIReference/API_Tag.html&#34;&gt;the requirements&lt;/a&gt;. Particularly, &lt;code&gt;GITHUB_WORKFLOW&lt;/code&gt; will be truncated if it&#39;s too long. If &lt;code&gt;GITHUB_ACTOR&lt;/code&gt; or &lt;code&gt;GITHUB_WORKFLOW&lt;/code&gt; contain invalid characters, the characters will be replaced with an &#39;*&#39;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;The action will use session tagging by default during role assumption. Note that for WebIdentity role assumption, the session tags have to be included in the encoded WebIdentity token. This means that Tags can only be supplied by the OIDC provider and not set during the AssumeRoleWithWebIdentity API call within the Action. You can skip this session tagging by providing &lt;code&gt;role-skip-session-tagging&lt;/code&gt; as true in the action&#39;s inputs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;      uses: aws-actions/configure-aws-credentials@v1&#xA;      with:&#xA;        role-skip-session-tagging: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Self-Hosted Runners&lt;/h2&gt; &#xA;&lt;p&gt;If you run your GitHub Actions in a &lt;a href=&#34;https://help.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners&#34;&gt;self-hosted runner&lt;/a&gt; that already has access to AWS credentials, such as an EC2 instance, then you do not need to provide IAM user access key credentials to this action.&lt;/p&gt; &#xA;&lt;p&gt;If no access key credentials are given in the action inputs, this action will use credentials from the runner environment using the &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html&#34;&gt;default methods for the AWS SDK for Javascript&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use this action to simply configure the region and account ID in the environment, and then use the runner&#39;s credentials for all AWS API calls made by your Actions workflow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;uses: aws-actions/configure-aws-credentials@v1&#xA;with:&#xA;  aws-region: us-east-2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case, your runner&#39;s credentials must have permissions to call any AWS APIs called by your Actions workflow.&lt;/p&gt; &#xA;&lt;p&gt;Or, you can use this action to assume a role, and then use the role credentials for all AWS API calls made by your Actions workflow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;uses: aws-actions/configure-aws-credentials@v1&#xA;with:&#xA;  aws-region: us-east-2&#xA;  role-to-assume: my-github-actions-role&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case, your runner&#39;s credentials must have permissions to assume the role.&lt;/p&gt; &#xA;&lt;p&gt;You can also assume a role using a web identity token file, such as if using &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html&#34;&gt;Amazon EKS IRSA&lt;/a&gt;. Pods running in EKS worker nodes that do not run as root can use this file to assume a role with a web identity.&lt;/p&gt; &#xA;&lt;p&gt;You can configure your workflow as follows in order to use this file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;uses: aws-actions/configure-aws-credentials@v1&#xA;with:&#xA;  aws-region: us-east-2&#xA;  role-to-assume: my-github-actions-role&#xA;  web-identity-token-file: /var/run/secrets/eks.amazonaws.com/serviceaccount/token&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use with the AWS CLI&lt;/h3&gt; &#xA;&lt;p&gt;This workflow does &lt;em&gt;not&lt;/em&gt; install the &lt;a href=&#34;https://aws.amazon.com/cli/&#34;&gt;AWS CLI&lt;/a&gt; into your environment. Self-hosted runners that intend to run this action prior to executing &lt;code&gt;aws&lt;/code&gt; commands need to have the AWS CLI &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html&#34;&gt;installed&lt;/a&gt; if it&#39;s not already present. Most &lt;a href=&#34;https://github.com/actions/virtual-environments&#34;&gt;GitHub hosted runner environments&lt;/a&gt; should include the AWS CLI by default.&lt;/p&gt; &#xA;&lt;h2&gt;License Summary&lt;/h2&gt; &#xA;&lt;p&gt;This code is made available under the MIT license.&lt;/p&gt; &#xA;&lt;h2&gt;Security Disclosures&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to report a potential security issue in this project, please do not create a GitHub issue. Instead, please follow the instructions &lt;a href=&#34;https://aws.amazon.com/security/vulnerability-reporting/&#34;&gt;here&lt;/a&gt; or &lt;a href=&#34;mailto:aws-security@amazon.com&#34;&gt;email AWS security directly&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>