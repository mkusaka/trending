<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-13T01:41:48Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>basir/mern-amazona</title>
    <updated>2023-06-13T01:41:48Z</updated>
    <id>tag:github.com,2023-06-13:/basir/mern-amazona</id>
    <link href="https://github.com/basir/mern-amazona" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build Ecommerce Like Amazon By MERN Stack&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MERN AMAZONA&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/basir/mern-amazona/master/frontend/public/images/amazona.jpg&#34; alt=&#34;amazona&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;React Tutorial - Build ECommerce in 6 Hours [2022]&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to my React and Node tutorial to build a fully-functional e-commerce website exactly like amazon. Open your code editor and follow me for the next hours to build an e-commerce website using MERN stack (MongoDB, ExpressJS, React and Node.JS).&lt;/p&gt; &#xA;&lt;p&gt;Watch it on Youtube: &lt;a href=&#34;https://www.youtube.com/watch?v=CDtPMR5y0QU&#34;&gt;https://www.youtube.com/watch?v=CDtPMR5y0QU&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo Website&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ðŸ‘‰ Render : &lt;a href=&#34;https://amazona.onrender.com&#34;&gt;https://amazona.onrender.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;You Will Learn&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HTML5 and CSS3: Semantic Elements, CSS Grid, Flexbox&lt;/li&gt; &#xA; &lt;li&gt;React: Components, Props, Events, Hooks, Router, Axios&lt;/li&gt; &#xA; &lt;li&gt;Context API: Store, Reducers, Actions&lt;/li&gt; &#xA; &lt;li&gt;Node &amp;amp; Express: Web API, Body Parser, File Upload, JWT&lt;/li&gt; &#xA; &lt;li&gt;MongoDB: Mongoose, Aggregation&lt;/li&gt; &#xA; &lt;li&gt;Development: ESLint, Babel, Git, Github,&lt;/li&gt; &#xA; &lt;li&gt;Deployment: Heroku&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run Locally&lt;/h2&gt; &#xA;&lt;h3&gt;1. Clone repo&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:basir/mern-amazona.git&#xA;$ cd mern-amazona&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Create .env File&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;duplicate .env.example in backend folder and rename it to .env&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3. Setup MongoDB&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Local MongoDB &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install it from &lt;a href=&#34;https://www.mongodb.com/try/download/community&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;In .env file update MONGODB_URI=mongodb://localhost/amazona&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;OR Atlas Cloud MongoDB &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Create database at &lt;a href=&#34;https://cloud.mongodb.com&#34;&gt;https://cloud.mongodb.com&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;In .env file update MONGODB_URI=mongodb+srv://your-db-connection&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. Run Backend&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd backend&#xA;$ npm install&#xA;$ npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. Run Frontend&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# open new terminal&#xA;$ cd frontend&#xA;$ npm install&#xA;$ npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;6. Seed Users and Products&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run this on browser: &lt;a href=&#34;http://localhost:5000/api/seed&#34;&gt;http://localhost:5000/api/seed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;It returns admin email and password and 6 sample products&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;7. Admin Login&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;a href=&#34;http://localhost:3000/signin&#34;&gt;http://localhost:3000/signin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter admin email and password and click signin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contact Instructor: &lt;a href=&#34;mailto:basir.jafarzadeh@gmail.com&#34;&gt;Basir&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Lessons&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Introduction&lt;/li&gt; &#xA; &lt;li&gt;Install Tools&lt;/li&gt; &#xA; &lt;li&gt;Create React App&lt;/li&gt; &#xA; &lt;li&gt;Create Git Repository&lt;/li&gt; &#xA; &lt;li&gt;List Products &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create products array&lt;/li&gt; &#xA;   &lt;li&gt;add product images&lt;/li&gt; &#xA;   &lt;li&gt;render products&lt;/li&gt; &#xA;   &lt;li&gt;style products&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add page routing &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;npm i react-router-dom&lt;/li&gt; &#xA;   &lt;li&gt;create route for home screen&lt;/li&gt; &#xA;   &lt;li&gt;create router for product screen&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Node.JS Server &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;run npm init in root folder&lt;/li&gt; &#xA;   &lt;li&gt;Update package.json set type: module&lt;/li&gt; &#xA;   &lt;li&gt;Add .js to imports&lt;/li&gt; &#xA;   &lt;li&gt;npm install express&lt;/li&gt; &#xA;   &lt;li&gt;create server.js&lt;/li&gt; &#xA;   &lt;li&gt;add start command as node backend/server.js&lt;/li&gt; &#xA;   &lt;li&gt;require express&lt;/li&gt; &#xA;   &lt;li&gt;create route for / return backend is ready.&lt;/li&gt; &#xA;   &lt;li&gt;move products.js from frontend to backend&lt;/li&gt; &#xA;   &lt;li&gt;create route for /api/products&lt;/li&gt; &#xA;   &lt;li&gt;return products&lt;/li&gt; &#xA;   &lt;li&gt;run npm start&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Fetch Products From Backend &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;set proxy in package.json&lt;/li&gt; &#xA;   &lt;li&gt;npm install axios&lt;/li&gt; &#xA;   &lt;li&gt;use state hook&lt;/li&gt; &#xA;   &lt;li&gt;use effect hook&lt;/li&gt; &#xA;   &lt;li&gt;use reducer hook&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Manage State By Reducer Hook &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;define reducer&lt;/li&gt; &#xA;   &lt;li&gt;update fetch data&lt;/li&gt; &#xA;   &lt;li&gt;get state from usReducer&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add bootstrap UI Framework &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;npm install react-bootstrap bootstrap&lt;/li&gt; &#xA;   &lt;li&gt;update App.js&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Product and Rating Component &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create Rating component&lt;/li&gt; &#xA;   &lt;li&gt;Create Product component&lt;/li&gt; &#xA;   &lt;li&gt;Use Rating component in Product component&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Product Details Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;fetch product from backend&lt;/li&gt; &#xA;   &lt;li&gt;create 3 columns for image, info and action&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Loading and Message Component &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create loading component&lt;/li&gt; &#xA;   &lt;li&gt;use spinner component&lt;/li&gt; &#xA;   &lt;li&gt;craete message component&lt;/li&gt; &#xA;   &lt;li&gt;create utils.js to define getError fuction&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create React Context For Add Item To Cart &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Create React Context&lt;/li&gt; &#xA;   &lt;li&gt;define reducer&lt;/li&gt; &#xA;   &lt;li&gt;create store provider&lt;/li&gt; &#xA;   &lt;li&gt;implement add to cart button click handler&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Complete Add To Cart &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;check exist item in the cart&lt;/li&gt; &#xA;   &lt;li&gt;check count in stock in backend&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Cart Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create 2 columns&lt;/li&gt; &#xA;   &lt;li&gt;display items list&lt;/li&gt; &#xA;   &lt;li&gt;create action column&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Complete Cart Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;click handler for inc/dec item&lt;/li&gt; &#xA;   &lt;li&gt;click handler for remove item&lt;/li&gt; &#xA;   &lt;li&gt;click handler for checkout&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Signin Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create sign in form&lt;/li&gt; &#xA;   &lt;li&gt;add email and password&lt;/li&gt; &#xA;   &lt;li&gt;add signin button&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Connect To MongoDB Database &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create atlas monogodb database&lt;/li&gt; &#xA;   &lt;li&gt;install local mongodb database&lt;/li&gt; &#xA;   &lt;li&gt;npm install mongoose&lt;/li&gt; &#xA;   &lt;li&gt;connect to mongodb database&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Seed Sample Products &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create Product model&lt;/li&gt; &#xA;   &lt;li&gt;create seed route&lt;/li&gt; &#xA;   &lt;li&gt;use route in server.js&lt;/li&gt; &#xA;   &lt;li&gt;seed sample product&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Seed Sample Users &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create user model&lt;/li&gt; &#xA;   &lt;li&gt;seed sample users&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Signin Backend API &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create signin api&lt;/li&gt; &#xA;   &lt;li&gt;npm install jsonwebtoken&lt;/li&gt; &#xA;   &lt;li&gt;define generateToken&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Complete Signin Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;handle submit action&lt;/li&gt; &#xA;   &lt;li&gt;save token in store and local storage&lt;/li&gt; &#xA;   &lt;li&gt;show user name in header&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Shipping Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create form inputs&lt;/li&gt; &#xA;   &lt;li&gt;handle save shipping address&lt;/li&gt; &#xA;   &lt;li&gt;add checkout wizard bar&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Sign Up Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create input forms&lt;/li&gt; &#xA;   &lt;li&gt;handle submit&lt;/li&gt; &#xA;   &lt;li&gt;create backend api&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Implement Select Payment Method Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create input forms&lt;/li&gt; &#xA;   &lt;li&gt;handle submit&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Place Order Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;show cart items, payment and address&lt;/li&gt; &#xA;   &lt;li&gt;calculate order summary&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Implement Place Order Action &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;handle place order action&lt;/li&gt; &#xA;   &lt;li&gt;create order create api&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Order Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create backend api for order/:id&lt;/li&gt; &#xA;   &lt;li&gt;fetch order api in frontend&lt;/li&gt; &#xA;   &lt;li&gt;show order information in 2 cloumns&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Pay Order By PayPal &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;generate paypal client id&lt;/li&gt; &#xA;   &lt;li&gt;create api to return client id&lt;/li&gt; &#xA;   &lt;li&gt;install react-paypal-js&lt;/li&gt; &#xA;   &lt;li&gt;use PayPalScriptProvider in index.js&lt;/li&gt; &#xA;   &lt;li&gt;use usePayPalScriptReducer in Order Screen&lt;/li&gt; &#xA;   &lt;li&gt;implement loadPaypalScript function&lt;/li&gt; &#xA;   &lt;li&gt;render paypal button&lt;/li&gt; &#xA;   &lt;li&gt;implement onApprove payment function&lt;/li&gt; &#xA;   &lt;li&gt;create pay order api in backend&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Display Order History &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create order screen&lt;/li&gt; &#xA;   &lt;li&gt;create order history api&lt;/li&gt; &#xA;   &lt;li&gt;use api in the frontend&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Profile Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;get user info from context&lt;/li&gt; &#xA;   &lt;li&gt;show user information&lt;/li&gt; &#xA;   &lt;li&gt;create user update api&lt;/li&gt; &#xA;   &lt;li&gt;update user info&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Publish To Heroku &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create and config node project&lt;/li&gt; &#xA;   &lt;li&gt;serve build folder in frontend folder&lt;/li&gt; &#xA;   &lt;li&gt;Create heroku account&lt;/li&gt; &#xA;   &lt;li&gt;connect it to github&lt;/li&gt; &#xA;   &lt;li&gt;Create mongodb atlas database&lt;/li&gt; &#xA;   &lt;li&gt;Set database connection in heroku env variables&lt;/li&gt; &#xA;   &lt;li&gt;Commit and push&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add Sidebar and Search Box &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;add sidebar&lt;/li&gt; &#xA;   &lt;li&gt;add search box&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Search Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;show filters&lt;/li&gt; &#xA;   &lt;li&gt;create api for searching products&lt;/li&gt; &#xA;   &lt;li&gt;display results&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Admin Menu &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;define protected route component&lt;/li&gt; &#xA;   &lt;li&gt;define admin route component&lt;/li&gt; &#xA;   &lt;li&gt;add menu for admin in header&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Dashboard Screen &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create dashboard ui&lt;/li&gt; &#xA;   &lt;li&gt;implement backend api&lt;/li&gt; &#xA;   &lt;li&gt;connect ui to backend&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Manage Products &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create products list ui&lt;/li&gt; &#xA;   &lt;li&gt;implement backend api&lt;/li&gt; &#xA;   &lt;li&gt;fetch data&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Product &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create products button&lt;/li&gt; &#xA;   &lt;li&gt;implement backend api&lt;/li&gt; &#xA;   &lt;li&gt;handle on click&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create Edit Product &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create edit button&lt;/li&gt; &#xA;   &lt;li&gt;create edit product ui&lt;/li&gt; &#xA;   &lt;li&gt;dispaly product info in the input boxes&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Implement Update Product &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create edit product backend api&lt;/li&gt; &#xA;   &lt;li&gt;handle update click&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Upload Product Image &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create cloudinary account&lt;/li&gt; &#xA;   &lt;li&gt;use the api key in env file&lt;/li&gt; &#xA;   &lt;li&gt;handle upload file&lt;/li&gt; &#xA;   &lt;li&gt;implement backend api to upload&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Delete Product &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;show delete button&lt;/li&gt; &#xA;   &lt;li&gt;implement backend api&lt;/li&gt; &#xA;   &lt;li&gt;handle on click&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;List Orders &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create order list screen&lt;/li&gt; &#xA;   &lt;li&gt;implement backen api&lt;/li&gt; &#xA;   &lt;li&gt;fetch and display orders&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Deliver Order &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;add deliver button&lt;/li&gt; &#xA;   &lt;li&gt;handle click action&lt;/li&gt; &#xA;   &lt;li&gt;implement backen api for deliver&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Delete Order &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;add delete button&lt;/li&gt; &#xA;   &lt;li&gt;handle click action&lt;/li&gt; &#xA;   &lt;li&gt;implement backen api for delete&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;List Users &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create user list screen&lt;/li&gt; &#xA;   &lt;li&gt;implement backen api&lt;/li&gt; &#xA;   &lt;li&gt;fetch and display users&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Edit User &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create edit button&lt;/li&gt; &#xA;   &lt;li&gt;create edit product ui&lt;/li&gt; &#xA;   &lt;li&gt;dispaly product info in the input boxes&lt;/li&gt; &#xA;   &lt;li&gt;implement backend api&lt;/li&gt; &#xA;   &lt;li&gt;handle edit click&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Delete User &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;add delete button&lt;/li&gt; &#xA;   &lt;li&gt;handle click action&lt;/li&gt; &#xA;   &lt;li&gt;implement backen api for delete&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Choose Address On Google Map &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create google map credentials&lt;/li&gt; &#xA;   &lt;li&gt;update .env file with Google Api Key&lt;/li&gt; &#xA;   &lt;li&gt;create api to send google api to frontend&lt;/li&gt; &#xA;   &lt;li&gt;create map screen&lt;/li&gt; &#xA;   &lt;li&gt;fetch google api&lt;/li&gt; &#xA;   &lt;li&gt;getUserLocation&lt;/li&gt; &#xA;   &lt;li&gt;install @react-google-maps/api&lt;/li&gt; &#xA;   &lt;li&gt;use it in shipping screen&lt;/li&gt; &#xA;   &lt;li&gt;apply map to the checkout screen&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Email order receipt by mailgun &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create mailgun account&lt;/li&gt; &#xA;   &lt;li&gt;add and verify your domain to mailgun&lt;/li&gt; &#xA;   &lt;li&gt;install mailgun-js&lt;/li&gt; &#xA;   &lt;li&gt;set api key in env file&lt;/li&gt; &#xA;   &lt;li&gt;change pay order in orderRouter&lt;/li&gt; &#xA;   &lt;li&gt;send email order receipt&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Review Products &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;create submit review form&lt;/li&gt; &#xA;   &lt;li&gt;handle submit&lt;/li&gt; &#xA;   &lt;li&gt;implement backend api for review&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Upload multiple Images &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;add images to product model&lt;/li&gt; &#xA;   &lt;li&gt;get images in edit screen&lt;/li&gt; &#xA;   &lt;li&gt;show images in product screen&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Upgrade To React 18 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;install node-check-updates&lt;/li&gt; &#xA;   &lt;li&gt;ncu -u&lt;/li&gt; &#xA;   &lt;li&gt;remove package-lock.json&lt;/li&gt; &#xA;   &lt;li&gt;npm install&lt;/li&gt; &#xA;   &lt;li&gt;replace render with createRoot&lt;/li&gt; &#xA;   &lt;li&gt;fix LinkContainer error&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>bradtraversy/proshop-v2</title>
    <updated>2023-06-13T01:41:48Z</updated>
    <id>tag:github.com,2023-06-13:/bradtraversy/proshop-v2</id>
    <link href="https://github.com/bradtraversy/proshop-v2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ProShop ecommerce website built with MERN &amp; Redux Toolkit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ProShop eCommerce Platform (v2)&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;eCommerce platform built with the MERN stack &amp;amp; Redux.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/bradtraversy/proshop-v2/main/frontend/public/images/screens.png&#34;&gt; &#xA;&lt;p&gt;This project is part of my &lt;a href=&#34;https://www.traversymedia.com/mern-stack-from-scratch&#34;&gt;MERN Stack From Scratch | eCommerce Platform&lt;/a&gt; course. It is a full-featured shopping cart with PayPal &amp;amp; credit/debit payments. See it in action at &lt;a href=&#34;https://www.proshopdemo.dev&#34;&gt;https://www.proshopdemo.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is version 2.0 of the app, which uses Redux Toolkit. The first version can be found &lt;a href=&#34;https://proshopdemo.dev&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full featured shopping cart&lt;/li&gt; &#xA; &lt;li&gt;Product reviews and ratings&lt;/li&gt; &#xA; &lt;li&gt;Top products carousel&lt;/li&gt; &#xA; &lt;li&gt;Product pagination&lt;/li&gt; &#xA; &lt;li&gt;Product search feature&lt;/li&gt; &#xA; &lt;li&gt;User profile with orders&lt;/li&gt; &#xA; &lt;li&gt;Admin product management&lt;/li&gt; &#xA; &lt;li&gt;Admin user management&lt;/li&gt; &#xA; &lt;li&gt;Admin Order details page&lt;/li&gt; &#xA; &lt;li&gt;Mark orders as delivered option&lt;/li&gt; &#xA; &lt;li&gt;Checkout process (shipping, payment method, etc)&lt;/li&gt; &#xA; &lt;li&gt;PayPal / credit card integration&lt;/li&gt; &#xA; &lt;li&gt;Database seeder (products &amp;amp; users)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a MongoDB database and obtain your &lt;code&gt;MongoDB URI&lt;/code&gt; - &lt;a href=&#34;https://www.mongodb.com/cloud/atlas/register&#34;&gt;MongoDB Atlas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a PayPal account and obtain your &lt;code&gt;Client ID&lt;/code&gt; - &lt;a href=&#34;https://developer.paypal.com/&#34;&gt;PayPal Developer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Env Variables&lt;/h3&gt; &#xA;&lt;p&gt;Rename the &lt;code&gt;.env.example&lt;/code&gt; file to &lt;code&gt;.env&lt;/code&gt; and add the following&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;NODE_ENV = development&#xA;PORT = 5000&#xA;MONGO_URI = your mongodb uri&#xA;JWT_SECRET = &#39;abc123&#39;&#xA;PAYPAL_CLIENT_ID = your paypal client id&#xA;PAGINATION_LIMIT = 8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change the JWT_SECRET and PAGINATION_LIMIT to what you want&lt;/p&gt; &#xA;&lt;h3&gt;Install Dependencies (frontend &amp;amp; backend)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;cd frontend&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;# Run frontend (:3000) &amp;amp; backend (:5000)&#xA;npm run dev&#xA;&#xA;# Run backend only&#xA;npm run server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build &amp;amp; Deploy&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Create frontend prod build&#xA;cd frontend&#xA;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Seed Database&lt;/h3&gt; &#xA;&lt;p&gt;You can use the following commands to seed the database with some sample users and products as well as destroy all data&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Import data&#xA;npm run data:import&#xA;&#xA;# Destroy data&#xA;npm run data:destroy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Sample User Logins&#xA;&#xA;admin@email.com (Admin)&#xA;123456&#xA;&#xA;john@email.com (Customer)&#xA;123456&#xA;&#xA;jane@email.com (Customer)&#xA;123456&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Bug Fixes, corrections and code FAQ&lt;/h1&gt; &#xA;&lt;p&gt;The code here in the main branch has been updated since the course was published to fix bugs found by students of the course and answer common questions, if you are looking to compare your code to that from the course lessons then please refer to the &lt;a href=&#34;https://github.com/bradtraversy/proshop-v2/tree/originalCourseCode&#34;&gt;originalcoursecode&lt;/a&gt; branch of this repository.&lt;/p&gt; &#xA;&lt;p&gt;There are detailed notes in the comments that will hopefully help you understand and adopt the changes and corrections. An easy way of seeing all the changes and fixes is to use a note highlighter extension such as &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight&#34;&gt;This one for VSCode&lt;/a&gt; or &lt;a href=&#34;https://github.com/folke/todo-comments.nvim&#34;&gt;this one for Vim&lt;/a&gt; Where by you can easily list all the &lt;strong&gt;NOTE:&lt;/strong&gt; and &lt;strong&gt;FIX:&lt;/strong&gt; tags in the comments.&lt;/p&gt; &#xA;&lt;h3&gt;BUG: Warnings on ProfileScreen&lt;/h3&gt; &#xA;&lt;p&gt;We see the following warning in the browser console..&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;&amp;lt;tD&amp;gt; cannot appear as a child of &amp;lt;tr&amp;gt;.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;and&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;warning: Received &#39;true&#39; for a non-boolean attribute table.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Code changes can be seen in &lt;a href=&#34;https://raw.githubusercontent.com/bradtraversy/proshop-v2/main/frontend/src/screens/ProfileScreen.jsx&#34;&gt;ProfileScreen.jsx&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;BUG: Changing an uncontrolled input to be controlled&lt;/h3&gt; &#xA;&lt;p&gt;In our SearchBox input, it&#39;s possible that our &lt;code&gt;urlKeyword&lt;/code&gt; is &lt;strong&gt;undefined&lt;/strong&gt;, in which case our initial state will be &lt;strong&gt;undefined&lt;/strong&gt; and we will have an uncontrolled input initially i.e. not bound to state. In the case of &lt;code&gt;urlKeyword&lt;/code&gt; being &lt;strong&gt;undefined&lt;/strong&gt; we can set state to an empty string.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Code changes can be seen in &lt;a href=&#34;https://raw.githubusercontent.com/bradtraversy/proshop-v2/main/frontend/src/components/SearchBox.jsx&#34;&gt;SearchBox.jsx&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Bug: All file types are allowed when updating product images&lt;/h3&gt; &#xA;&lt;p&gt;When updating and uploading product images as an Admin user, all file types are allowed. We only want to upload image files. This is fixed by using a fileFilter function and sending back an appropriate error when the wrong file type is uploaded.&lt;/p&gt; &#xA;&lt;p&gt;You may see that our &lt;code&gt;checkFileType&lt;/code&gt; function is declared but never actually used, this change fixes that. The function has been renamed to &lt;code&gt;fileFilter&lt;/code&gt; and passed to the instance of &lt;a href=&#34;https://github.com/expressjs/multer#filefilter&#34;&gt; multer &lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Code changes can be seen in &lt;a href=&#34;https://raw.githubusercontent.com/bradtraversy/proshop-v2/main/backend/routes/uploadRoutes.js&#34;&gt;uploadRoutes.js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2023 Traversy Media &lt;a href=&#34;https://traversymedia.com&#34;&gt;https://traversymedia.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>meabhisingh/mernProjectEcommerce</title>
    <updated>2023-06-13T01:41:48Z</updated>
    <id>tag:github.com,2023-06-13:/meabhisingh/mernProjectEcommerce</id>
    <link href="https://github.com/meabhisingh/mernProjectEcommerce" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is MERN Stack Ecommerce Project Made to Teach MERN Stack on YouTube&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MERN E-COMMERCE TUTORIAL&lt;/h1&gt; &#xA;&lt;p&gt;Hi! My name is &lt;strong&gt;Abhishek Singh&lt;/strong&gt;, I have created this tutorial to teach MERN Stack for free on YouTube.&lt;/p&gt; &#xA;&lt;h1&gt;Prerequisite&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Must have basic knowledge of &lt;strong&gt;Node&lt;/strong&gt;, &lt;strong&gt;React&lt;/strong&gt;, &lt;strong&gt;Express&lt;/strong&gt;, &lt;strong&gt;MongoDB&lt;/strong&gt; . &lt;em&gt;I have made tutorial on each technology on YouTube , make sure to check it out&lt;/em&gt;. &lt;strong&gt;Links are Below respectively&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Node - &lt;a href=&#34;https://youtu.be/BSO9C8Z-YV8&#34;&gt;https://youtu.be/BSO9C8Z-YV8&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;React - &lt;a href=&#34;https://youtu.be/99kgUCIMboY&#34;&gt;https://youtu.be/99kgUCIMboY&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Express - &lt;a href=&#34;https://youtu.be/teipbke8c4A%5C&#34;&gt;https://youtu.be/teipbke8c4A\&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MongoDB - &lt;a href=&#34;https://youtu.be/AYDP1S5BbTo&#34;&gt;https://youtu.be/AYDP1S5BbTo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RestApi - &lt;a href=&#34;https://youtu.be/AhCSfuG9Jxw&#34;&gt;https://youtu.be/AhCSfuG9Jxw&lt;/a&gt; &lt;em&gt;(optional)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Install Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Backend&lt;/strong&gt; - &lt;code&gt;npm i&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Frontend&lt;/strong&gt; - &lt;code&gt;cd frontend&lt;/code&gt; &lt;code&gt; npm i&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Env Variables&lt;/h2&gt; &#xA;&lt;p&gt;Make Sure to Create a config.env file in backend/config directory and add appropriate variables in order to use the app.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Essential Variables&lt;/strong&gt; PORT= DB_URI = STRIPE_API_KEY= STRIPE_SECRET_KEY= JWT_SECRET= JWT_EXPIRE= COOKIE_EXPIRE= SMPT_SERVICE = SMPT_MAIL= SMPT_PASSWORD= SMPT_HOST= SMPT_PORT= CLOUDINARY_NAME CLOUDINARY_API_KEY CLOUDINARY_API_SECRET &lt;em&gt;fill each filed with your info respectively&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Instagram&lt;/strong&gt; Click &lt;a href=&#34;https://www.instagram.com/meabhisingh&#34;&gt;Here&lt;/a&gt; &lt;strong&gt;@meAbhiSingh&lt;/strong&gt; &lt;strong&gt;YouTube&lt;/strong&gt; Click &lt;a href=&#34;https://www.youtube.com/channel/UCO7afj9AUo0zV69pqEYhcjw/&#34;&gt;Here&lt;/a&gt; &lt;strong&gt;6 Pack Programmer&lt;/strong&gt; &lt;strong&gt;LinkedIn&lt;/strong&gt; Click &lt;a href=&#34;https://in.linkedin.com/in/meabhisingh&#34;&gt;Here&lt;/a&gt; &lt;strong&gt;@meAbhiSingh&lt;/strong&gt; &lt;strong&gt;Twitter&lt;/strong&gt; Click &lt;a href=&#34;https://twitter.com/meAbhi_Singh&#34;&gt;Here&lt;/a&gt; &lt;strong&gt;@meAbhi_Singh&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
</feed>