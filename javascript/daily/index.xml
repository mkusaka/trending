<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-25T01:33:23Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Automattic/mongoose</title>
    <updated>2022-11-25T01:33:23Z</updated>
    <id>tag:github.com,2022-11-25:/Automattic/mongoose</id>
    <link href="https://github.com/Automattic/mongoose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MongoDB object modeling designed to work in an asynchronous environment.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mongoose&lt;/h1&gt; &#xA;&lt;p&gt;Mongoose is a &lt;a href=&#34;https://www.mongodb.org/&#34;&gt;MongoDB&lt;/a&gt; object modeling tool designed to work in an asynchronous environment. Mongoose supports both promises and callbacks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mongoosejsteam.slack.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-mongoosejsteam-34D058.svg?logo=slack&#34; alt=&#34;Slack Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Automattic/mongoose&#34;&gt;&lt;img src=&#34;https://github.com/Automattic/mongoose/workflows/Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://badge.fury.io/js/mongoose&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/mongoose.svg?sanitize=true&#34; alt=&#34;NPM version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/mongoose&#34;&gt;&lt;img src=&#34;https://nodei.co/npm/mongoose.png&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The official documentation website is &lt;a href=&#34;http://mongoosejs.com/&#34;&gt;mongoosejs.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Mongoose 6.0.0 was released on August 24, 2021. You can find more details on &lt;a href=&#34;https://mongoosejs.com/docs/migrating_to_6.html&#34;&gt;backwards breaking changes in 6.0.0 on our docs site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged/mongoose&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Automattic/mongoose/issues/&#34;&gt;Bug Reports&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://slack.mongoosejs.io/&#34;&gt;Mongoose Slack Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://groups.google.com/group/mongoose-orm&#34;&gt;Help Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.mongodb.org/manual/support/&#34;&gt;MongoDB Support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;http://plugins.mongoosejs.io/&#34;&gt;plugins search site&lt;/a&gt; to see hundreds of related modules from the community. Next, learn how to write your own plugin from the &lt;a href=&#34;http://mongoosejs.com/docs/plugins.html&#34;&gt;docs&lt;/a&gt; or &lt;a href=&#34;http://thecodebarbarian.com/2015/03/06/guide-to-mongoose-plugins&#34;&gt;this blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are always welcome! Please base pull requests against the &lt;code&gt;master&lt;/code&gt; branch and follow the &lt;a href=&#34;https://github.com/Automattic/mongoose/raw/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If your pull requests makes documentation changes, please do &lt;strong&gt;not&lt;/strong&gt; modify any &lt;code&gt;.html&lt;/code&gt; files. The &lt;code&gt;.html&lt;/code&gt; files are compiled code, so please make your changes in &lt;code&gt;docs/*.pug&lt;/code&gt;, &lt;code&gt;lib/*.js&lt;/code&gt;, or &lt;code&gt;test/docs/*.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;View all 400+ &lt;a href=&#34;https://github.com/Automattic/mongoose/graphs/contributors&#34;&gt;contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;First install &lt;a href=&#34;http://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; and &lt;a href=&#34;https://www.mongodb.org/downloads&#34;&gt;MongoDB&lt;/a&gt;. Then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm install mongoose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Importing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Using Node.js `require()`&#xA;const mongoose = require(&#39;mongoose&#39;);&#xA;&#xA;// Using ES6 imports&#xA;import mongoose from &#39;mongoose&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mongoose for Enterprise&lt;/h2&gt; &#xA;&lt;p&gt;Available as part of the Tidelift Subscription&lt;/p&gt; &#xA;&lt;p&gt;The maintainers of mongoose and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. &lt;a href=&#34;https://tidelift.com/subscription/pkg/npm-mongoose?utm_source=npm-mongoose&amp;amp;utm_medium=referral&amp;amp;utm_campaign=enterprise&amp;amp;utm_term=repo&#34;&gt;Learn more.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;h3&gt;Connecting to MongoDB&lt;/h3&gt; &#xA;&lt;p&gt;First, we need to define a connection. If your app uses only one database, you should use &lt;code&gt;mongoose.connect&lt;/code&gt;. If you need to create additional connections, use &lt;code&gt;mongoose.createConnection&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Both &lt;code&gt;connect&lt;/code&gt; and &lt;code&gt;createConnection&lt;/code&gt; take a &lt;code&gt;mongodb://&lt;/code&gt; URI, or the parameters &lt;code&gt;host, database, port, options&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await mongoose.connect(&#39;mongodb://localhost/my_database&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once connected, the &lt;code&gt;open&lt;/code&gt; event is fired on the &lt;code&gt;Connection&lt;/code&gt; instance. If you&#39;re using &lt;code&gt;mongoose.connect&lt;/code&gt;, the &lt;code&gt;Connection&lt;/code&gt; is &lt;code&gt;mongoose.connection&lt;/code&gt;. Otherwise, &lt;code&gt;mongoose.createConnection&lt;/code&gt; return value is a &lt;code&gt;Connection&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;If the local connection fails then try using 127.0.0.1 instead of localhost. Sometimes issues may arise when the local hostname has been changed.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important!&lt;/strong&gt; Mongoose buffers all the commands until it&#39;s connected to the database. This means that you don&#39;t have to wait until it connects to MongoDB in order to define models, run queries, etc.&lt;/p&gt; &#xA;&lt;h3&gt;Defining a Model&lt;/h3&gt; &#xA;&lt;p&gt;Models are defined through the &lt;code&gt;Schema&lt;/code&gt; interface.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Schema = mongoose.Schema;&#xA;const ObjectId = Schema.ObjectId;&#xA;&#xA;const BlogPost = new Schema({&#xA;  author: ObjectId,&#xA;  title: String,&#xA;  body: String,&#xA;&amp;nbsp; date: Date&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Aside from defining the structure of your documents and the types of data you&#39;re storing, a Schema handles the definition of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mongoosejs.com/docs/validation.html&#34;&gt;Validators&lt;/a&gt; (async and sync)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mongoosejs.com/docs/api.html#schematype_SchemaType-default&#34;&gt;Defaults&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mongoosejs.com/docs/api.html#schematype_SchemaType-get&#34;&gt;Getters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mongoosejs.com/docs/api.html#schematype_SchemaType-set&#34;&gt;Setters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mongoosejs.com/docs/guide.html#indexes&#34;&gt;Indexes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mongoosejs.com/docs/middleware.html&#34;&gt;Middleware&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mongoosejs.com/docs/guide.html#methods&#34;&gt;Methods&lt;/a&gt; definition&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mongoosejs.com/docs/guide.html#statics&#34;&gt;Statics&lt;/a&gt; definition&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mongoosejs.com/docs/plugins.html&#34;&gt;Plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mongoosejs.com/docs/populate.html&#34;&gt;pseudo-JOINs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following example shows some of these features:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Comment = new Schema({&#xA;  name: { type: String, default: &#39;hahaha&#39; },&#xA;  age: { type: Number, min: 18, index: true },&#xA;  bio: { type: String, match: /[a-z]/ },&#xA;  date: { type: Date, default: Date.now },&#xA;  buff: Buffer&#xA;});&#xA;&#xA;// a setter&#xA;Comment.path(&#39;name&#39;).set(function (v) {&#xA;  return capitalize(v);&#xA;});&#xA;&#xA;// middleware&#xA;Comment.pre(&#39;save&#39;, function (next) {&#xA;  notify(this.get(&#39;email&#39;));&#xA;  next();&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take a look at the example in &lt;a href=&#34;https://github.com/Automattic/mongoose/raw/master/examples/schema/schema.js&#34;&gt;&lt;code&gt;examples/schema/schema.js&lt;/code&gt;&lt;/a&gt; for an end-to-end example of a typical setup.&lt;/p&gt; &#xA;&lt;h3&gt;Accessing a Model&lt;/h3&gt; &#xA;&lt;p&gt;Once we define a model through &lt;code&gt;mongoose.model(&#39;ModelName&#39;, mySchema)&lt;/code&gt;, we can access it through the same function&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const MyModel = mongoose.model(&#39;ModelName&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or just do it all at once&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const MyModel = mongoose.model(&#39;ModelName&#39;, mySchema);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first argument is the &lt;em&gt;singular&lt;/em&gt; name of the collection your model is for. &lt;strong&gt;Mongoose automatically looks for the &lt;em&gt;plural&lt;/em&gt; version of your model name.&lt;/strong&gt; For example, if you use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const MyModel = mongoose.model(&#39;Ticket&#39;, mySchema);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then &lt;code&gt;MyModel&lt;/code&gt; will use the &lt;strong&gt;tickets&lt;/strong&gt; collection, not the &lt;strong&gt;ticket&lt;/strong&gt; collection. For more details read the &lt;a href=&#34;https://mongoosejs.com/docs/api/mongoose.html#mongoose_Mongoose-model&#34;&gt;model docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once we have our model, we can then instantiate it, and save it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const instance = new MyModel();&#xA;instance.my.key = &#39;hello&#39;;&#xA;instance.save(function (err) {&#xA;  //&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or we can find documents from the same collection&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;MyModel.find({}, function (err, docs) {&#xA;  // docs.forEach&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also &lt;code&gt;findOne&lt;/code&gt;, &lt;code&gt;findById&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, etc.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const instance = await MyModel.findOne({ ... });&#xA;console.log(instance.my.key);  // &#39;hello&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more details check out &lt;a href=&#34;http://mongoosejs.com/docs/queries.html&#34;&gt;the docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important!&lt;/strong&gt; If you opened a separate connection using &lt;code&gt;mongoose.createConnection()&lt;/code&gt; but attempt to access the model through &lt;code&gt;mongoose.model(&#39;ModelName&#39;)&lt;/code&gt; it will not work as expected since it is not hooked up to an active db connection. In this case access your model through the connection you created:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const conn = mongoose.createConnection(&#39;your connection string&#39;);&#xA;const MyModel = conn.model(&#39;ModelName&#39;, schema);&#xA;const m = new MyModel;&#xA;m.save(); // works&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;vs&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const conn = mongoose.createConnection(&#39;your connection string&#39;);&#xA;const MyModel = mongoose.model(&#39;ModelName&#39;, schema);&#xA;const m = new MyModel;&#xA;m.save(); // does not work b/c the default connection object was never connected&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Embedded Documents&lt;/h3&gt; &#xA;&lt;p&gt;In the first example snippet, we defined a key in the Schema that looks like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;comments: [Comment]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where &lt;code&gt;Comment&lt;/code&gt; is a &lt;code&gt;Schema&lt;/code&gt; we created. This means that creating embedded documents is as simple as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// retrieve my model&#xA;const BlogPost = mongoose.model(&#39;BlogPost&#39;);&#xA;&#xA;// create a blog post&#xA;const post = new BlogPost();&#xA;&#xA;// create a comment&#xA;post.comments.push({ title: &#39;My comment&#39; });&#xA;&#xA;post.save(function (err) {&#xA;  if (!err) console.log(&#39;Success!&#39;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The same goes for removing them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;BlogPost.findById(myId, function (err, post) {&#xA;  if (!err) {&#xA;    post.comments[0].remove();&#xA;    post.save(function (err) {&#xA;      // do something&#xA;    });&#xA;  }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Embedded documents enjoy all the same features as your models. Defaults, validators, middleware. Whenever an error occurs, it&#39;s bubbled to the &lt;code&gt;save()&lt;/code&gt; error callback, so error handling is a snap!&lt;/p&gt; &#xA;&lt;h3&gt;Middleware&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;http://mongoosejs.com/docs/middleware.html&#34;&gt;docs&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h4&gt;Intercepting and mutating method arguments&lt;/h4&gt; &#xA;&lt;p&gt;You can intercept method arguments via middleware.&lt;/p&gt; &#xA;&lt;p&gt;For example, this would allow you to broadcast changes about your Documents every time someone &lt;code&gt;set&lt;/code&gt;s a path in your Document to a new value:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;schema.pre(&#39;set&#39;, function (next, path, val, typel) {&#xA;  // `this` is the current Document&#xA;  this.emit(&#39;set&#39;, path, val);&#xA;&#xA;  // Pass control to the next pre&#xA;  next();&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Moreover, you can mutate the incoming &lt;code&gt;method&lt;/code&gt; arguments so that subsequent middleware see different values for those arguments. To do so, just pass the new values to &lt;code&gt;next&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;.pre(method, function firstPre (next, methodArg1, methodArg2) {&#xA;  // Mutate methodArg1&#xA;  next(&#34;altered-&#34; + methodArg1.toString(), methodArg2);&#xA;});&#xA;&#xA;// pre declaration is chainable&#xA;.pre(method, function secondPre (next, methodArg1, methodArg2) {&#xA;  console.log(methodArg1);&#xA;  // =&amp;gt; &#39;altered-originalValOfMethodArg1&#39;&#xA;&#xA;  console.log(methodArg2);&#xA;  // =&amp;gt; &#39;originalValOfMethodArg2&#39;&#xA;&#xA;  // Passing no arguments to `next` automatically passes along the current argument values&#xA;  // i.e., the following `next()` is equivalent to `next(methodArg1, methodArg2)`&#xA;  // and also equivalent to, with the example method arg&#xA;  // values, `next(&#39;altered-originalValOfMethodArg1&#39;, &#39;originalValOfMethodArg2&#39;)`&#xA;  next();&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Schema gotcha&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;type&lt;/code&gt;, when used in a schema has special meaning within Mongoose. If your schema requires using &lt;code&gt;type&lt;/code&gt; as a nested property you must use object notation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;new Schema({&#xA;  broken: { type: Boolean },&#xA;  asset: {&#xA;    name: String,&#xA;    type: String // uh oh, it broke. asset will be interpreted as String&#xA;  }&#xA;});&#xA;&#xA;new Schema({&#xA;  works: { type: Boolean },&#xA;  asset: {&#xA;    name: String,&#xA;    type: { type: String } // works. asset is an object with a type property&#xA;  }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Driver Access&lt;/h3&gt; &#xA;&lt;p&gt;Mongoose is built on top of the &lt;a href=&#34;https://github.com/mongodb/node-mongodb-native&#34;&gt;official MongoDB Node.js driver&lt;/a&gt;. Each mongoose model keeps a reference to a &lt;a href=&#34;http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html&#34;&gt;native MongoDB driver collection&lt;/a&gt;. The collection object can be accessed using &lt;code&gt;YourModel.collection&lt;/code&gt;. However, using the collection object directly bypasses all mongoose features, including hooks, validation, etc. The one notable exception that &lt;code&gt;YourModel.collection&lt;/code&gt; still buffers commands. As such, &lt;code&gt;YourModel.collection.find()&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; return a cursor.&lt;/p&gt; &#xA;&lt;h2&gt;API Docs&lt;/h2&gt; &#xA;&lt;p&gt;Find the API docs &lt;a href=&#34;http://mongoosejs.com/docs/api.html&#34;&gt;here&lt;/a&gt;, generated using &lt;a href=&#34;https://github.com/tj/dox&#34;&gt;dox&lt;/a&gt; and &lt;a href=&#34;https://github.com/vkarpov15/acquit&#34;&gt;acquit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Related Projects&lt;/h2&gt; &#xA;&lt;h4&gt;MongoDB Runners&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/run-rs&#34;&gt;run-rs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/mongodb-memory-server&#34;&gt;mongodb-memory-server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/mongodb-topology-manager&#34;&gt;mongodb-topology-manager&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Unofficial CLIs&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/mongoosejs-cli&#34;&gt;mongoosejs-cli&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Data Seeding&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/dookie&#34;&gt;dookie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/seedgoose&#34;&gt;seedgoose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/mongoose-data-seed&#34;&gt;mongoose-data-seed&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Express Session Stores&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/connect-mongodb-session&#34;&gt;connect-mongodb-session&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/connect-mongo&#34;&gt;connect-mongo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2010 LearnBoost &amp;lt;&lt;a href=&#34;mailto:dev@learnboost.com&#34;&gt;dev@learnboost.com&lt;/a&gt;&amp;gt;&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#39;Software&#39;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#39;AS IS&#39;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Infisical/infisical</title>
    <updated>2022-11-25T01:33:23Z</updated>
    <id>tag:github.com,2022-11-25:/Infisical/infisical</id>
    <link href="https://github.com/Infisical/infisical" rel="alternate"></link>
    <summary type="html">&lt;p&gt;♾ Infisical is an open-source, E2EE tool to sync environment variables across your team and infrastructure.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/Infisical/infisical/main/img/logoname-black.svg#gh-light-mode-only&#34; alt=&#34;ifnisical&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/Infisical/infisical/main/img/logoname-white.svg#gh-dark-mode-only&#34; alt=&#34;infisical&#34;&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt;Open-source, E2EE, simple tool to manage and sync environment variables across your team and infrastructure.&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;https://infisical.com/signup&#34;&gt;Infisical Cloud&lt;/a&gt; | &lt;a href=&#34;https://infisical.com/docs/self-hosting/overview&#34;&gt;Self-Hosting&lt;/a&gt; | &lt;a href=&#34;https://infisical.com/docs/gettingStarted&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://www.infisical.com&#34;&gt;Website&lt;/a&gt; &lt;/h4&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/medusajs/medusa/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;Medusa is released under the MIT license.&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/infisical/infisical/raw/main/CONTRIBUTING.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/PRs-Welcome-brightgreen&#34; alt=&#34;PRs welcome!&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/infisical/shared_invite/zt-1dgg63ln8-G7PCNJdCymAT9YF3j1ewVA&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/chat-on%20Slack-blueviolet&#34; alt=&#34;Slack community channel&#34;&gt; &lt;/a&gt; &lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Infisical/infisical/main/img/infisical_github_repo.png&#34; width=&#34;100%&#34; alt=&#34;Dashboard&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://infisical.com&#34;&gt;Infisical&lt;/a&gt;&lt;/strong&gt; is an open source, E2EE tool to help teams manage and sync environment variables across their development workflow and infrastructure. It&#39;s designed to be simple and take minutes to get going.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;User-Friendly Dashboard&lt;/strong&gt; to manage your team&#39;s environment variables within projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://infisical.com/docs/CLI&#34;&gt;Language-Agnostic CLI&lt;/a&gt;&lt;/strong&gt; that pulls and injects environment variables into your local workflow&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://infisical.com/docs/self_host_overview&#34;&gt;Complete control over your data&lt;/a&gt;&lt;/strong&gt; - host it yourself on any infrastructure&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Navigate Multiple Environments&lt;/strong&gt; per project (e.g. development, staging, production, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Personal/Shared&lt;/strong&gt; scoping for environment variables&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://infisical.com/docs/Heroku&#34;&gt;Integrations&lt;/a&gt;&lt;/strong&gt; with CI/CD and production infrastructure (Heroku available, more coming soon)&lt;/li&gt; &#xA; &lt;li&gt;🔜 &lt;strong&gt;1-Click Deploy&lt;/strong&gt; to Digital Ocean and Heroku&lt;/li&gt; &#xA; &lt;li&gt;🔜 &lt;strong&gt;Authentication/Authorization&lt;/strong&gt; for projects (read/write controls soon)&lt;/li&gt; &#xA; &lt;li&gt;🔜 &lt;strong&gt;Automatic Secret Rotation&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔜 &lt;strong&gt;2FA&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔜 &lt;strong&gt;Access Logs&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔜 &lt;strong&gt;Slack Integration &amp;amp; MS Teams&lt;/strong&gt; integrations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And more.&lt;/p&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;To quickly get started, visit our &lt;a href=&#34;https://infisical.com/docs/getting-started/introduction&#34;&gt;get started guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s cool about this?&lt;/h2&gt; &#xA;&lt;p&gt;Infisical is simple, E2EE, and (soon to be) complete.&lt;/p&gt; &#xA;&lt;p&gt;According to a &lt;a href=&#34;https://www.ekransystem.com/en/blog/secrets-management&#34;&gt;report&lt;/a&gt; in 2019, only 10% of organizations use secret management solutions despite all using digital secrets to some extent.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re on a mission to make secret management more accessible to everyone — that means building for developers, not just security teams.&lt;/p&gt; &#xA;&lt;p&gt;If you care about efficiency and security, then Infisical is right for you.&lt;/p&gt; &#xA;&lt;p&gt;Need any integrations or want a new feature? Feel free to &lt;a href=&#34;https://github.com/Infisical/infisical/issues&#34;&gt;create an issue&lt;/a&gt; or &lt;a href=&#34;https://infisical.com/docs/contributing&#34;&gt;contribute&lt;/a&gt; directly to the repository.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;For full documentation, visit &lt;a href=&#34;https://infisical.com/docs&#34;&gt;infisical.com/docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Whether it&#39;s big or small, we love contributions ❤️ Check out our guide to see how to &lt;a href=&#34;https://infisical.com/docs/contributing/overview&#34;&gt;get started&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Not sure where to get started? &lt;a href=&#34;mailto:tony@infisical.com?subject=Pairing%20session&amp;amp;body=I&#39;d%20like%20to%20do%20a%20pairing%20session!&#34;&gt;Book a free, non-pressure pairing sessions with one of our teammates&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Community &amp;amp; Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Infisical/infisical/discussions&#34;&gt;GitHub Discussions&lt;/a&gt; for help with building and discussion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Infisical/infisical-cli/issues&#34;&gt;GitHub Issues&lt;/a&gt; for any bugs and errors you encounter using Infisical.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/infisical/shared_invite/zt-1dgg63ln8-G7PCNJdCymAT9YF3j1ewVA&#34;&gt;Community Slack&lt;/a&gt; for hanging out with the community and quick communication with the team.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Public Alpha: Anyone can sign up over at &lt;a href=&#34;https://infisical.com&#34;&gt;infisical.com&lt;/a&gt; but go easy on us, there are kinks and we&#39;re just getting started.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Public Beta: Stable enough for most non-enterprise use-cases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Public: Production-ready.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We&#39;re currently in Public Alpha.&lt;/p&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re currently setting the foundation and building integrations so secrets can be synced everywhere. Any help is welcome! :)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Docker&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Docker Compose&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Heroku&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Vercel&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; AWS&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; GCP&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Azure&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Digital Ocean&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; GitLab&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; CircleCI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open-source vs. paid&lt;/h2&gt; &#xA;&lt;p&gt;This repo is entirely MIT licensed, with the exception of the &lt;code&gt;ee&lt;/code&gt; directory which will contain premium enterprise features requring a Infisical license in the future. We&#39;re currently focused on developing non-enterprise offerings first that should suit most use-cases.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Looking to report a security vulnerability? Please don&#39;t post about it in GitHub issue. Instead, refer to our &lt;a href=&#34;https://raw.githubusercontent.com/Infisical/infisical/main/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors 🦸&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dangtony98&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/25857006?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/vlad-matsiiako&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/78047717?s=96&amp;amp;v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/maidul98&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9300960?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hanywang2&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/44352119?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tobias-mintlify&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/110702161?v=4&#34; width=&#34;50&#34; height=&#34;50&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kiteco/vscode-plugin</title>
    <updated>2022-11-25T01:33:23Z</updated>
    <id>tag:github.com,2022-11-25:/kiteco/vscode-plugin</id>
    <link href="https://github.com/kiteco/vscode-plugin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kite Autocomplete Plugin for Visual Studio Code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kite Autocomplete Plugin for Visual Studio Code&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kiteco/issue-tracker/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Report%20an%20issue-critical&#34; alt=&#34;Report an issue&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/kiteco/vscode-plugin?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/kitehq?style=social&#34; alt=&#34;Twitter Follow&#34;&gt; &lt;img src=&#34;https://img.shields.io/youtube/views/L2vpOL-jHpQ?label=Kite%20Youtube&amp;amp;style=social&#34; alt=&#34;YouTube Video Views&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Kite is an &lt;strong&gt;AI-powered&lt;/strong&gt; programming assistant that helps you &lt;strong&gt;write code faster inside Visual Studio Code&lt;/strong&gt;. Kite helps you write code faster by saving you keystrokes and showing you the right information at the right time.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kite works for all major programming languages:&lt;/strong&gt; Python, Java, Go, PHP, C/C#/C++, Javascript, HTML/CSS, Typescript, React, Ruby, Scala, Kotlin, Bash, Vue and React.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://kite-public-assets.s3-us-west-1.amazonaws.com/kite-public/plugin_vs/kite_vs_nokite.gif&#34; alt=&#34;kite vs no kite&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Completions Powered by Machine Learning&lt;/h3&gt; &#xA;&lt;p&gt;Kite’s code completions are powered by &lt;strong&gt;machine learning&lt;/strong&gt; models trained on over 25 million open-source code files. &lt;strong&gt;Kite also runs locally&lt;/strong&gt;. Your code is private and does not leave your machine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://kite-public-assets.s3-us-west-1.amazonaws.com/kite-public/plugin-intellij/python_intellij_v1.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Instant Code Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Get instant documentation for the symbol underneath your cursor so you save time searching for Python docs (not yet available for JavaScript docs).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://kite-public-assets.s3-us-west-1.amazonaws.com/kite-public/plugin-intellij/kite_documentation.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS 10.11+, Windows 7+ or Linux&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio Code v1.28.0+&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kite.com/&#34;&gt;Kite Engine&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Use another editor? Check out &lt;a href=&#34;https://kite.com/integrations/&#34;&gt;Kite’s other editor integrations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Installing the Kite Engine&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://kite.com/&#34;&gt;Kite Engine&lt;/a&gt; needs to be installed in order for the package to work properly. The package itself provides the frontend that interfaces with the Kite Engine, which performs all the code analysis and machine learning 100% locally on your computer (no code is sent to a cloud server).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;macOS Instructions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://kite.com/download/&#34;&gt;installer&lt;/a&gt; and open the downloaded &lt;code&gt;.dmg&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Drag the Kite icon into the &lt;code&gt;Applications&lt;/code&gt; folder.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;Kite.app&lt;/code&gt; to start the Kite Engine.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows Instructions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://kite.com/download/&#34;&gt;installer&lt;/a&gt; and run the downloaded &lt;code&gt;.exe&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;The installer should run the Kite Engine automatically after installation is complete.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linux Instructions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://kite.com/linux/&#34;&gt;https://kite.com/linux/&lt;/a&gt; to install Kite.&lt;/li&gt; &#xA; &lt;li&gt;The installer should run the Kite Engine automatically after installation is complete.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Installing the Kite Plugin for Visual Studio Code&lt;/h3&gt; &#xA;&lt;p&gt;When running the Kite Engine for the first time, you&#39;ll be guided through a setup process which will allow you to install the VS Code extension. You can also install or uninstall the VS Code extension at any time using the Kite Engine&#39;s &lt;a href=&#34;https://help.kite.com/article/62-managing-editor-plugins&#34;&gt;plugin manager&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you have 2 options to manually install the package:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Search for &#34;Kite&#34; in VS Code&#39;s built-in extension marketplace and install from there.&lt;/li&gt; &#xA; &lt;li&gt;Run the command &lt;code&gt;code --install-extension kiteco.kite&lt;/code&gt; in your terminal.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kite.com/integrations/vs-code/&#34;&gt;Learn about the capabilities Kite adds to VS Code.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The following is a brief guide to using Kite in its default configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Autocompletions&lt;/h3&gt; &#xA;&lt;p&gt;Simply start typing in a saved Python or JavaScript file and Kite will automatically suggest completions for what you&#39;re typing. Kite&#39;s autocompletions are all labeled with the &lt;code&gt;⟠&lt;/code&gt; symbol.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s3.amazonaws.com/helpscout.net/docs/assets/589ced522c7d3a784630c348/images/5c3eb54f04286304a71e4292/file-jJZznGIq2t.png&#34; alt=&#34;completions&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hover (Python only)&lt;/h3&gt; &#xA;&lt;p&gt;Hover your mouse cursor over a symbol to view a short summary of what the symbol represents.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s3.amazonaws.com/helpscout.net/docs/assets/589ced522c7d3a784630c348/images/5c3eb72c2c7d3a3194501270/file-LaHSHhYTkH.png&#34; alt=&#34;hover&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Documentation (Python only)&lt;/h3&gt; &#xA;&lt;p&gt;Click on the &lt;code&gt;Docs&lt;/code&gt; link in the hover popup to open the documentation for the symbol inside the Copilot, Kite&#39;s standalone reference tool.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kiteco/atom-plugin/raw/master/docs/images/copilot.png?raw=true&#34; alt=&#34;copilot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Definitions (Python only)&lt;/h3&gt; &#xA;&lt;p&gt;If a &lt;code&gt;Def&lt;/code&gt; link is available in the hover popup, clicking on it will jump to the definition of the symbol.&lt;/p&gt; &#xA;&lt;h3&gt;Function Signatures (Python only)&lt;/h3&gt; &#xA;&lt;p&gt;When you call a function, Kite will show you the arguments required to call it. Kite&#39;s function signatures are also all labeled with the &lt;code&gt;⟠&lt;/code&gt; symbol.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s3.amazonaws.com/helpscout.net/docs/assets/589ced522c7d3a784630c348/images/5c3eb6ad2c7d3a319450126e/file-j1bl9zETcx.png&#34; alt=&#34;signature&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you have the Microsoft Python extension installed, Kite will &lt;em&gt;not&lt;/em&gt; be able to show you information on function signatures.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;p&gt;Kite comes with sevaral commands that you can run from VS Code&#39;s command palette.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Command&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;kite.related-code-from-file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search for code related to the current file in the Copilot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;kite.related-code-from-line&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search for code related to the current line in the Copilot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;kite.open-copilot&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Open the Copilot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;kite.docs-at-cursor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Show documentation of the symbol underneath your cursor in the Copilot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;kite.engine-settings&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Open the settings for the Kite Engine&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;kite.python-tutorial&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Open the Kite Python tutorial file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;kite.javascript-tutorial&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Open the Kite JavaScript tutorial file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;kite.go-tutorial&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Open the Kite Go tutorial file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;kite.help&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Open Kite&#39;s help website in the browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;Visit our &lt;a href=&#34;https://help.kite.com&#34;&gt;help docs&lt;/a&gt; for FAQs and troubleshooting support.&lt;/p&gt; &#xA;&lt;p&gt;Happy coding!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;About Kite&lt;/h4&gt; &#xA;&lt;p&gt;Kite is built by a team in San Francisco devoted to making programming easier and more enjoyable for all. Follow Kite on &lt;a href=&#34;https://twitter.com/kitehq&#34;&gt;Twitter&lt;/a&gt; and get the latest news and programming tips on the &lt;a href=&#34;https://kite.com/blog/&#34;&gt;Kite Blog&lt;/a&gt;. Kite has been featured in &lt;a href=&#34;https://www.wired.com/2016/04/kites-coding-asssitant-spots-errors-finds-better-open-source/&#34;&gt;Wired&lt;/a&gt;, &lt;a href=&#34;https://venturebeat.com/2019/01/28/kite-raises-17-million-for-its-ai-powered-developer-environment/&#34;&gt;VentureBeat&lt;/a&gt;, &lt;a href=&#34;https://thenextweb.com/dd/2016/04/14/kite-plugin/&#34;&gt;The Next Web&lt;/a&gt;, and &lt;a href=&#34;https://techcrunch.com/2019/01/28/kite-raises-17m-for-its-ai-driven-code-completion-tool/&#34;&gt;TechCrunch&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>