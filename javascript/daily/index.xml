<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-15T01:31:45Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>InternLM/MindSearch</title>
    <updated>2024-11-15T01:31:45Z</updated>
    <id>tag:github.com,2024-11-15:/InternLM/MindSearch</id>
    <link href="https://github.com/InternLM/MindSearch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üîç An LLM-based Multi-agent Framework of Web Search Engine (like Perplexity.ai Pro and SearchGPT)&lt;/p&gt;&lt;hr&gt;&lt;div id=&#34;top&#34;&gt;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/InternLM/MindSearch/main/assets/logo.svg?sanitize=true&#34; style=&#34;width: 50%; height: auto;&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2407.20183&#34;&gt;üìÉ Paper&lt;/a&gt; | &lt;a href=&#34;https://internlm-chat.intern-ai.org.cn/&#34;&gt;üíª Demo&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/InternLM/MindSearch/main/README_zh-CN.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/44ffe4b9-be26-4b93-a77b-02fed16e33fe&#34;&gt;https://github.com/user-attachments/assets/44ffe4b9-be26-4b93-a77b-02fed16e33fe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® MindSearch: Mimicking Human Minds Elicits Deep AI Searcher&lt;/h2&gt; &#xA;&lt;h2&gt;üìÖ Changelog&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2024/11/05: ü•≥ MindSearch is now deployed on Puyu! üëâ &lt;a href=&#34;https://internlm-chat.intern-ai.org.cn/&#34;&gt;Try it&lt;/a&gt; üëà &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Refactored the agent module based on &lt;a href=&#34;https://github.com/InternLM/lagent&#34;&gt;Lagent v0.5&lt;/a&gt; for better performance in concurrency.&lt;/li&gt; &#xA;   &lt;li&gt;Improved the UI to embody the simultaneous multi-query search.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚öΩÔ∏è Build Your Own MindSearch&lt;/h2&gt; &#xA;&lt;h3&gt;Step1: Dependencies Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/InternLM/MindSearch&#xA;cd MindSearch&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step2: Setup Environment Variables&lt;/h3&gt; &#xA;&lt;p&gt;Before setting up the API, you need to configure environment variables. Rename the &lt;code&gt;.env.example&lt;/code&gt; file to &lt;code&gt;.env&lt;/code&gt; and fill in the required values.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mv .env.example .env&#xA;# Open .env and add your keys and model configurations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step3: Setup MindSearch API&lt;/h3&gt; &#xA;&lt;p&gt;Setup FastAPI Server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m mindsearch.app --lang en --model_format internlm_server --search_engine DuckDuckGoSearch --asy &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--lang&lt;/code&gt;: language of the model, &lt;code&gt;en&lt;/code&gt; for English and &lt;code&gt;cn&lt;/code&gt; for Chinese.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--model_format&lt;/code&gt;: format of the model.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;internlm_server&lt;/code&gt; for InternLM2.5-7b-chat with local server. (InternLM2.5-7b-chat has been better optimized for Chinese.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;gpt4&lt;/code&gt; for GPT4. if you want to use other models, please modify &lt;a href=&#34;https://raw.githubusercontent.com/InternLM/MindSearch/main/mindsearch/agent/models.py&#34;&gt;models&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--search_engine&lt;/code&gt;: Search engine.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;DuckDuckGoSearch&lt;/code&gt; for search engine for DuckDuckGo.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;BingSearch&lt;/code&gt; for Bing search engine.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;BraveSearch&lt;/code&gt; for Brave search web api engine.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;GoogleSearch&lt;/code&gt; for Google Serper web search api engine.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;TencentSearch&lt;/code&gt; for Tencent search api engine.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Please set your Web Search engine API key as the &lt;code&gt;WEB_SEARCH_API_KEY&lt;/code&gt; environment variable unless you are using &lt;code&gt;DuckDuckGo&lt;/code&gt;, or &lt;code&gt;TencentSearch&lt;/code&gt; that requires secret id as &lt;code&gt;TENCENT_SEARCH_SECRET_ID&lt;/code&gt; and secret key as &lt;code&gt;TENCENT_SEARCH_SECRET_KEY&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--asy&lt;/code&gt;: deploy asynchronous agents.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step4: Setup MindSearch Frontend&lt;/h3&gt; &#xA;&lt;p&gt;Providing following frontend interfaces,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;React&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;First configurate the backend URL for Vite proxy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;HOST=&#34;127.0.0.1&#34;  # modify as you need&#xA;PORT=8002&#xA;sed -i -r &#34;s/target:\s*\&#34;\&#34;/target: \&#34;${HOST}:${PORT}\&#34;/&#34; frontend/React/vite.config.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install Node.js and npm&#xA;# for Ubuntu&#xA;sudo apt install nodejs npm&#xA;&#xA;# for windows&#xA;# download from https://nodejs.org/zh-cn/download/prebuilt-installer&#xA;&#xA;# Install dependencies&#xA;&#xA;cd frontend/React&#xA;npm install&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Details can be found in &lt;a href=&#34;https://raw.githubusercontent.com/InternLM/MindSearch/main/frontend/React/README.md&#34;&gt;React&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gradio&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python frontend/mindsearch_gradio.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Streamlit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;streamlit run frontend/mindsearch_streamlit.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üåê Change Web Search API&lt;/h2&gt; &#xA;&lt;p&gt;To use a different type of web search API, modify the &lt;code&gt;searcher_type&lt;/code&gt; attribute in the &lt;code&gt;searcher_cfg&lt;/code&gt; located in &lt;code&gt;mindsearch/agent/__init__.py&lt;/code&gt;. Currently supported web search APIs include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GoogleSearch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DuckDuckGoSearch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BraveSearch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BingSearch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TencentSearch&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, to change to the Brave Search API, you would configure it as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;BingBrowser(&#xA;    searcher_type=&#39;BraveSearch&#39;,&#xA;    topk=2,&#xA;    api_key=os.environ.get(&#39;BRAVE_API_KEY&#39;, &#39;YOUR BRAVE API&#39;)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üêû Using the Backend Without Frontend&lt;/h2&gt; &#xA;&lt;p&gt;For users who prefer to interact with the backend directly, use the &lt;code&gt;backend_example.py&lt;/code&gt; script. This script demonstrates how to send a query to the backend and process the response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python backend_example.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure you have set up the environment variables and the backend is running before executing the script.&lt;/p&gt; &#xA;&lt;h2&gt;üêû Debug Locally&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m mindsearch.terminal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üìù License&lt;/h2&gt; &#xA;&lt;p&gt;This project is released under the &lt;a href=&#34;https://raw.githubusercontent.com/InternLM/MindSearch/main/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this project useful in your research, please consider cite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{chen2024mindsearch,&#xA;  title={MindSearch: Mimicking Human Minds Elicits Deep AI Searcher},&#xA;  author={Chen, Zehui and Liu, Kuikun and Wang, Qiuchen and Liu, Jiangning and Zhang, Wenwei and Chen, Kai and Zhao, Feng},&#xA;  journal={arXiv preprint arXiv:2407.20183},&#xA;  year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Our Projects&lt;/h2&gt; &#xA;&lt;p&gt;Explore our additional research on large language models, focusing on LLM agents.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/InternLM/lagent&#34;&gt;Lagent&lt;/a&gt;: A lightweight framework for building LLM-based agents&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/InternLM/Agent-FLAN&#34;&gt;AgentFLAN&lt;/a&gt;: An innovative approach for constructing and training with high-quality agent datasets (ACL 2024 Findings)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-compass/T-Eval&#34;&gt;T-Eval&lt;/a&gt;: A Fine-grained tool utilization evaluation benchmark (ACL 2024)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>