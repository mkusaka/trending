<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-26T01:32:53Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>d3/d3</title>
    <updated>2022-06-26T01:32:53Z</updated>
    <id>tag:github.com,2022-06-26:/d3/d3</id>
    <link href="https://github.com/d3/d3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bring data to life with SVG, Canvas and HTML. ðŸ“ŠðŸ“ˆðŸŽ‰&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;D3: Data-Driven Documents&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://d3js.org&#34;&gt;&lt;img src=&#34;https://d3js.org/logo.svg?sanitize=true&#34; align=&#34;left&#34; hspace=&#34;10&#34; vspace=&#34;6&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;D3&lt;/strong&gt; (or &lt;strong&gt;D3.js&lt;/strong&gt;) is a JavaScript library for visualizing data using web standards. D3 helps you bring data to life using SVG, Canvas and HTML. D3 combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://observablehq.com/@d3/learn-d3&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/d3/d3/raw/main/API.md&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/d3/d3/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://observablehq.com/@d3/gallery&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/d3/d3/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;If you use npm, &lt;code&gt;npm install d3&lt;/code&gt;. You can also download the &lt;a href=&#34;https://github.com/d3/d3/releases/latest&#34;&gt;latest release on GitHub&lt;/a&gt;. For vanilla HTML in modern browsers, import D3 from Skypack:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&#34;module&#34;&amp;gt;&#xA;&#xA;import * as d3 from &#34;https://cdn.skypack.dev/d3@7&#34;;&#xA;&#xA;const div = d3.selectAll(&#34;div&#34;);&#xA;&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For legacy environments, you can load D3â€™s UMD bundle from an npm-based CDN such as jsDelivr; a &lt;code&gt;d3&lt;/code&gt; global is exported:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/d3@7&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script&amp;gt;&#xA;&#xA;const div = d3.selectAll(&#34;div&#34;);&#xA;&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use the standalone D3 microlibraries. For example, &lt;a href=&#34;https://github.com/d3/d3-selection&#34;&gt;d3-selection&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&#34;module&#34;&amp;gt;&#xA;&#xA;import {selectAll} from &#34;https://cdn.skypack.dev/d3-selection@3&#34;;&#xA;&#xA;const div = selectAll(&#34;div&#34;);&#xA;&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;D3 is written using &lt;a href=&#34;http://www.2ality.com/2014/09/es6-modules-final.html&#34;&gt;ES2015 modules&lt;/a&gt;. Create a custom bundle using Rollup, Webpack, or your preferred bundler. To import D3 into an ES2015 application, either import specific symbols from specific D3 modules:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import {scaleLinear} from &#34;d3-scale&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or import everything into a namespace (here, &lt;code&gt;d3&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import * as d3 from &#34;d3&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using dynamic import:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const d3 = await import(&#34;d3&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also import individual modules and combine them into a &lt;code&gt;d3&lt;/code&gt; object using &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&#34;&gt;Object.assign&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const d3 = await Promise.all([&#xA;  import(&#34;d3-format&#34;),&#xA;  import(&#34;d3-geo&#34;),&#xA;  import(&#34;d3-geo-projection&#34;)&#xA;]).then(d3 =&amp;gt; Object.assign({}, ...d3));&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>dappradar/nft-sales-adapters</title>
    <updated>2022-06-26T01:32:53Z</updated>
    <id>tag:github.com,2022-06-26:/dappradar/nft-sales-adapters</id>
    <link href="https://github.com/dappradar/nft-sales-adapters" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository hosts the adapters for integrating NFT collections or marketplaces on dappradar.com/nft&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DappRadar NFT Sales Adapters&lt;/h1&gt; &#xA;&lt;p&gt;This repository hosts the adapters for integrating NFT collections or marketplaces on &lt;a href=&#34;https://dappradar.com/nft&#34;&gt;dappradar.com/nft&lt;/a&gt; and other products.&lt;/p&gt; &#xA;&lt;p&gt;Repository is maintained through community support, to add your collection or marketplace please read &lt;a href=&#34;https://github.com/dappradar/nft-sales-adapters#guidelines&#34;&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Guidelines&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Integrations are done for marketplaces, not for separate collections (unless a collection also has a native marketplace, like CryptoPunks).&lt;/li&gt; &#xA; &lt;li&gt;Integration must be done in a way that it tracks all the sale events on the marketplace (sale, auction, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Only sales on that specific marketplace should be counted. For example, if one smart contract is used by 3 NFT marketplaces, your integration needs to differentiate those and only include sales done on that specific marketplace.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;API key&lt;/h2&gt; &#xA;&lt;p&gt;Apply for API key by filling out form &lt;a href=&#34;https://forms.gle/5E8hsZhyd94X9a3M7&#34;&gt;https://forms.gle/5E8hsZhyd94X9a3M7&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;API keys necessary to simplify testing of the adapters and even if we will review untested adapters, process will be a lot faster if developers tests adapters using API key before submitting a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork the GitHub repository&lt;/li&gt; &#xA; &lt;li&gt;Get the API key by filling up the &lt;a href=&#34;https://forms.gle/5E8hsZhyd94X9a3M7&#34;&gt;form&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build an adapter inside &lt;em&gt;adapters/&lt;/em&gt; directory&lt;/li&gt; &#xA; &lt;li&gt;Test adapter code using provided testing tool&lt;/li&gt; &#xA; &lt;li&gt;Create a pull request to the main repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Repository Structure&lt;/h2&gt; &#xA;&lt;p&gt;All adapters should have separated from other and have its own directory, for example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;adapters/ens&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;adapters/axie-infinity&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Inside adapter directory there should be at least 2 files&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;abi.json&lt;/code&gt; - ABI of the contract used by collection or marketplace&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;index.js&lt;/code&gt; - adapter code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Technical Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Supported blockchain protocols&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ethereum&lt;/li&gt; &#xA; &lt;li&gt;BNB Chain (Binance Smart Chain)&lt;/li&gt; &#xA; &lt;li&gt;Polygon&lt;/li&gt; &#xA; &lt;li&gt;Avalanche&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Environment Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Create a copy of environment configuration&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cp .env.dist .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to run services&lt;/h3&gt; &#xA;&lt;p&gt;First update your &lt;em&gt;.env&lt;/em&gt; file to contain your key, after that create you adapter inside &lt;em&gt;adapters/my-adapter&lt;/em&gt;, the naming should be lowercase with multiple words divided by &lt;code&gt;-&lt;/code&gt;, for example: &lt;code&gt;my-adapter&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run &amp;amp; test your adapter simply while being in root write:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;node ./tester/test.js ../adapters/my-adapter/index.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It should run a validator and your adapter if you pass make a pull request!&lt;/p&gt; &#xA;&lt;h3&gt;How to build adapters&lt;/h3&gt; &#xA;&lt;p&gt;Each adapter is expected to have certain methods, those can be found in &lt;em&gt;tester/util.js&lt;/em&gt; named &lt;code&gt;ENTITY_KEYS&lt;/code&gt; please try to follow the example ENS adapter as close as possible in terms of functionality&lt;/p&gt; &#xA;&lt;p&gt;Each adapter should import and use EVMC SDK, feel free to extend this SDK with different parameters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;this.name = &#34;ens&#34;;&#xA;this.symbol = null;&#xA;this.token = &#34;0x0000000000000000000000000000000000000000&#34;;&#xA;this.protocol = &#34;ethereum&#34;;&#xA;this.block = 12855192;&#xA;this.contract = &#34;0x283af0b28c62c092c9727f1ee09c02ca627eb7f5&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Regarding adapters constructor values, the name should be the same as the &lt;em&gt;adapters/&lt;/em&gt; location name, the block should be the starting block when the contract was released and the contract is self-explanatory.&lt;/p&gt; &#xA;&lt;p&gt;The websocket for web3 is defined in &lt;em&gt;/sdk/util.js&lt;/em&gt;, inside the headers please choose your supported blockchain, this file should not be committed, but feel free to change it while working on the adapter.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;/sdk/metadata.js&lt;/em&gt; is our inner file and should not be updated in any way also as it&#39;s used by out internal tracking.&lt;/p&gt; &#xA;&lt;h3&gt;Metadata and Symbols&lt;/h3&gt; &#xA;&lt;p&gt;Metadata like price of token at that certain point is handled via axios call to &lt;code&gt;process.env.DAPPRADAR_META_URL&lt;/code&gt;, each call is requested towards APIs limit, if the limit is hit you will get a faulty response.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>janeczku/calibre-web</title>
    <updated>2022-06-26T01:32:53Z</updated>
    <id>tag:github.com,2022-06-26:/janeczku/calibre-web</id>
    <link href="https://github.com/janeczku/calibre-web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ“š Web app for browsing, reading and downloading eBooks stored in a Calibre database&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About&lt;/h1&gt; &#xA;&lt;p&gt;Calibre-Web is a web app providing a clean interface for browsing, reading and downloading eBooks using a valid &lt;a href=&#34;https://calibre-ebook.com&#34;&gt;Calibre&lt;/a&gt; database.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/janeczku/calibre-web/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/janeczku/calibre-web?style=flat-square&#34; alt=&#34;GitHub License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/w/janeczku/calibre-web?logo=github&amp;amp;style=flat-square&amp;amp;label=commits&#34; alt=&#34;GitHub commit activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/janeczku/calibre-web/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/janeczku/calibre-web/total?logo=github&amp;amp;style=flat-square&#34; alt=&#34;GitHub all releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/calibreweb/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/calibreweb?logo=pypi&amp;amp;logoColor=fff&amp;amp;style=flat-square&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/calibreweb/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/calibreweb?logo=pypi&amp;amp;logoColor=fff&amp;amp;style=flat-square&#34; alt=&#34;PyPI - Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/h2VsJ2NEfB&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/838810113564344381?label=Discord&amp;amp;logo=discord&amp;amp;style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;This software is a fork of &lt;a href=&#34;https://github.com/mutschler/calibreserver&#34;&gt;library&lt;/a&gt; and licensed under the GPL v3 License.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/janeczku/calibre-web/wiki/images/main_screen.png&#34; alt=&#34;Main screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bootstrap 3 HTML5 interface&lt;/li&gt; &#xA; &lt;li&gt;full graphical setup&lt;/li&gt; &#xA; &lt;li&gt;User management with fine-grained per-user permissions&lt;/li&gt; &#xA; &lt;li&gt;Admin interface&lt;/li&gt; &#xA; &lt;li&gt;User Interface in brazilian, czech, dutch, english, finnish, french, german, greek, hungarian, italian, japanese, khmer, korean, polish, russian, simplified and traditional chinese, spanish, swedish, turkish, ukrainian&lt;/li&gt; &#xA; &lt;li&gt;OPDS feed for eBook reader apps&lt;/li&gt; &#xA; &lt;li&gt;Filter and search by titles, authors, tags, series, book format and language&lt;/li&gt; &#xA; &lt;li&gt;Create a custom book collection (shelves)&lt;/li&gt; &#xA; &lt;li&gt;Support for editing eBook metadata and deleting eBooks from Calibre library&lt;/li&gt; &#xA; &lt;li&gt;Support for downloading eBook metadata from various sources, sources can be extended via external plugins&lt;/li&gt; &#xA; &lt;li&gt;Support for converting eBooks through Calibre binaries&lt;/li&gt; &#xA; &lt;li&gt;Restrict eBook download to logged-in users&lt;/li&gt; &#xA; &lt;li&gt;Support for public user registration&lt;/li&gt; &#xA; &lt;li&gt;Send eBooks to E-Readers with the click of a button&lt;/li&gt; &#xA; &lt;li&gt;Sync your Kobo devices through Calibre-Web with your Calibre library&lt;/li&gt; &#xA; &lt;li&gt;Support for reading eBooks directly in the browser (.txt, .epub, .pdf, .cbr, .cbt, .cbz, .djvu)&lt;/li&gt; &#xA; &lt;li&gt;Upload new books in many formats, including audio formats (.mp3, .m4a, .m4b)&lt;/li&gt; &#xA; &lt;li&gt;Support for Calibre Custom Columns&lt;/li&gt; &#xA; &lt;li&gt;Ability to hide content based on categories and Custom Column content per user&lt;/li&gt; &#xA; &lt;li&gt;Self-update capability&lt;/li&gt; &#xA; &lt;li&gt;&#34;Magic Link&#34; login to make it easy to log on eReaders&lt;/li&gt; &#xA; &lt;li&gt;Login via LDAP, google/github oauth and via proxy authentication&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h4&gt;Installation via pip (recommended)&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To avoid problems with already installed python dependencies, it&#39;s recommended to create a virtual environment for Calibre-Web&lt;/li&gt; &#xA; &lt;li&gt;Install Calibre-Web via pip with the command &lt;code&gt;pip install calibreweb&lt;/code&gt; (Depending on your OS and or distro the command could also be &lt;code&gt;pip3&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Optional features can also be installed via pip, please refer to &lt;a href=&#34;https://github.com/janeczku/calibre-web/wiki/Dependencies-in-Calibre-Web-Linux-and-Windows&#34;&gt;this page&lt;/a&gt; for details&lt;/li&gt; &#xA; &lt;li&gt;Calibre-Web can be started afterwards by typing &lt;code&gt;cps&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In the Wiki there are also examples for: a &lt;a href=&#34;https://github.com/janeczku/calibre-web/wiki/Manual-installation&#34;&gt;manual installation&lt;/a&gt;, &lt;a href=&#34;https://github.com/janeczku/calibre-web/wiki/How-To:Install-Calibre-Web-in-Linux-Mint-19-or-20&#34;&gt;installation on Linux Mint&lt;/a&gt;, &lt;a href=&#34;https://github.com/janeczku/calibre-web/wiki/How-To:-Install-Calibre-Web-on-a-Cloud-Provider&#34;&gt;installation on a Cloud Provider&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Point your browser to &lt;code&gt;http://localhost:8083&lt;/code&gt; or &lt;code&gt;http://localhost:8083/opds&lt;/code&gt; for the OPDS catalog &lt;br&gt; Login with default admin login &lt;br&gt; Set &lt;code&gt;Location of Calibre database&lt;/code&gt; to the path of the folder where your Calibre library (metadata.db) lives, push &#34;submit&#34; button &lt;br&gt; Optionally a Google Drive can be used to host the calibre library &lt;a href=&#34;https://github.com/janeczku/calibre-web/wiki/G-Drive-Setup#using-google-drive-integration&#34;&gt;-&amp;gt; Using Google Drive integration&lt;/a&gt; &lt;br&gt; Afterwards you can configure your Calibre-Web instance (&lt;a href=&#34;https://github.com/janeczku/calibre-web/wiki/Configuration#basic-configuration&#34;&gt;Basic Configuration&lt;/a&gt; and &lt;a href=&#34;https://github.com/janeczku/calibre-web/wiki/Configuration#ui-configuration&#34;&gt;UI Configuration&lt;/a&gt; on admin page)&lt;/p&gt; &#xA;&lt;h4&gt;Default admin login:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Username:&lt;/em&gt; admin&lt;br&gt; &lt;em&gt;Password:&lt;/em&gt; admin123&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;python 3.5+&lt;/p&gt; &#xA;&lt;p&gt;Optionally, to enable on-the-fly conversion from one ebook format to another when using the send-to-ereader feature, or during editing of ebooks metadata:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://calibre-ebook.com/download&#34;&gt;Download and install&lt;/a&gt; the Calibre desktop program for your platform and enter the folder including program name (normally /opt/calibre/ebook-convert, or C:\Program Files\calibre\ebook-convert.exe) in the field &#34;calibre&#39;s converter tool&#34; on the setup page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pgaskin/kepubify/releases/latest&#34;&gt;Download&lt;/a&gt; Kepubify tool for your platform and place the binary starting with &lt;code&gt;kepubify&lt;/code&gt; in Linux: &lt;code&gt;/opt/kepubify&lt;/code&gt; Windows: &lt;code&gt;C:\Program Files\kepubify&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Images&lt;/h2&gt; &#xA;&lt;p&gt;A pre-built Docker image is available in these Docker Hub repository (maintained by the LinuxServer team):&lt;/p&gt; &#xA;&lt;h4&gt;&lt;strong&gt;LinuxServer - x64, armhf, aarch64&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Docker Hub - &lt;a href=&#34;https://hub.docker.com/r/linuxserver/calibre-web&#34;&gt;https://hub.docker.com/r/linuxserver/calibre-web&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Github - &lt;a href=&#34;https://github.com/linuxserver/docker-calibre-web&#34;&gt;https://github.com/linuxserver/docker-calibre-web&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Github - (Optional Calibre layer) - &lt;a href=&#34;https://github.com/linuxserver/docker-calibre-web/tree/calibre&#34;&gt;https://github.com/linuxserver/docker-calibre-web/tree/calibre&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This image has the option to pull in an extra docker manifest layer to include the Calibre &lt;code&gt;ebook-convert&lt;/code&gt; binary. Just include the environmental variable &lt;code&gt;DOCKER_MODS=linuxserver/calibre-web:calibre&lt;/code&gt; in your docker run/docker compose file. &lt;strong&gt;(x64 only)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;If you do not need this functionality then this can be omitted, keeping the image as lightweight as possible.&lt;/p&gt; &lt;p&gt;Both the Calibre-Web and Calibre-Mod images are rebuilt automatically on new releases of Calibre-Web and Calibre respectively, and on updates to any included base image packages on a weekly basis if required.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The &#34;path to convertertool&#34; should be set to &lt;code&gt;/usr/bin/ebook-convert&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The &#34;path to unrar&#34; should be set to &lt;code&gt;/usr/bin/unrar&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contact&lt;/h1&gt; &#xA;&lt;p&gt;Just reach us out on &lt;a href=&#34;https://discord.gg/h2VsJ2NEfB&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For further information, How To&#39;s and FAQ please check the &lt;a href=&#34;https://github.com/janeczku/calibre-web/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributing to Calibre-Web&lt;/h1&gt; &#xA;&lt;p&gt;Please have a look at our &lt;a href=&#34;https://github.com/janeczku/calibre-web/raw/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>