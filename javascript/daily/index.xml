<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-06T01:36:54Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pahen/madge</title>
    <updated>2023-02-06T01:36:54Z</updated>
    <id>tag:github.com,2023-02-06:/pahen/madge</id>
    <link href="https://github.com/pahen/madge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create graphs from your CommonJS, AMD or ES6 module dependencies&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;madge&#34; src=&#34;http://pahen.github.io/madge/logo.svg?sanitize=true&#34; width=&#34;320&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Last version&#34; src=&#34;https://img.shields.io/github/tag/pahen/madge.svg?style=flat-square&#34;&gt; &lt;a href=&#34;https://app.travis-ci.com/github/pahen/madge&#34;&gt; &lt;img alt=&#34;Build Status&#34; src=&#34;http://img.shields.io/travis/pahen/madge/master.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.org/package/madge&#34;&gt; &lt;img alg=&#34;NPM Status&#34; src=&#34;http://img.shields.io/npm/dm/madge.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://paypal.me/pahen&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Donate&#34; src=&#34;https://img.shields.io/badge/donate-paypal-blue.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Madge&lt;/strong&gt; is a developer tool for generating a visual graph of your module dependencies, finding circular dependencies, and giving you other useful info. Joel Kemp&#39;s awesome &lt;a href=&#34;https://github.com/mrjoelkemp/node-dependency-tree&#34;&gt;dependency-tree&lt;/a&gt; is used for extracting the dependency tree.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Works for JavaScript (AMD, CommonJS, and ES6 modules)&lt;/li&gt; &#xA; &lt;li&gt;Also works for CSS preprocessors (Sass, Stylus, and Less)&lt;/li&gt; &#xA; &lt;li&gt;NPM installed dependencies are excluded by default (can be enabled)&lt;/li&gt; &#xA; &lt;li&gt;All core Node.js modules (assert, path, fs, etc) are excluded&lt;/li&gt; &#xA; &lt;li&gt;Will traverse child dependencies automatically&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/pahen/madge/master/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt; for latest changes.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I&#39;ve worked with Madge on my free time for the last couple of years and it&#39;s been a great experience. It started as an experiment but turned out to be a very useful tool for many developers. I have many ideas for the project and it would definitely be easier to dedicate more time to it with some &lt;a href=&#34;https://raw.githubusercontent.com/pahen/madge/master/#donations&#34;&gt;financial support&lt;/a&gt; üôè&lt;/p&gt; &#xA; &lt;p&gt;Regardless of your contribution, thanks for your support!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Graph generated from madge&#39;s own code and dependencies.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;a href=&#34;http://pahen.github.io/madge/madge.svg&#34;&gt; &lt;img src=&#34;http://pahen.github.io/madge/madge.svg?sanitize=true&#34; width=&#34;888&#34;&gt; &lt;/a&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A graph with circular dependencies. Blue has dependencies, green has no dependencies, and red has circular dependencies.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;a href=&#34;http://pahen.github.io/madge/simple.svg&#34;&gt; &lt;img src=&#34;http://pahen.github.io/madge/simple.svg?sanitize=true&#34; width=&#34;300&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;See it in action&lt;/h2&gt; &#xA;&lt;a href=&#34;https://asciinema.org/a/l9tM7lIraCpmzH0rdWw2KLrMc?autoplay=1&#34;&gt; &lt;img src=&#34;https://asciinema.org/a/l9tM7lIraCpmzH0rdWw2KLrMc.png&#34; width=&#34;590&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm -g install madge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Graphviz (optional)&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;http://www.graphviz.org/&#34;&gt;Graphviz&lt;/a&gt; is only required if you want to generate visual graphs (e.g. in SVG or DOT format).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Mac OS X&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install graphviz || port install graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apt-get install graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;API&lt;/h1&gt; &#xA;&lt;h2&gt;madge(path: string|array|object, config: object)&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;path&lt;/code&gt; is a single file or directory, or an array of files/directories to read. A predefined tree can also be passed in as an object.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;config&lt;/code&gt; is optional and should be the &lt;a href=&#34;https://raw.githubusercontent.com/pahen/madge/master/#configuration&#34;&gt;configuration&lt;/a&gt; to use.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Returns a &lt;code&gt;Promise&lt;/code&gt; resolved with the Madge instance object.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Functions&lt;/h2&gt; &#xA;&lt;h4&gt;.obj()&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Returns an &lt;code&gt;Object&lt;/code&gt; with all dependencies.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const madge = require(&#39;madge&#39;);&#xA;&#xA;madge(&#39;path/to/app.js&#39;).then((res) =&amp;gt; {&#xA;&#x9;console.log(res.obj());&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;.warnings()&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Returns an &lt;code&gt;Object&lt;/code&gt; of warnings.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const madge = require(&#39;madge&#39;);&#xA;&#xA;madge(&#39;path/to/app.js&#39;).then((res) =&amp;gt; {&#xA;&#x9;console.log(res.warnings());&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;.circular()&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Returns an &lt;code&gt;Array&lt;/code&gt; of all modules that have circular dependencies.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const madge = require(&#39;madge&#39;);&#xA;&#xA;madge(&#39;path/to/app.js&#39;).then((res) =&amp;gt; {&#xA;&#x9;console.log(res.circular());&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;.circularGraph()&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Returns an &lt;code&gt;Object&lt;/code&gt; with only circular dependencies.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const madge = require(&#39;madge&#39;);&#xA;&#xA;madge(&#39;path/to/app.js&#39;).then((res) =&amp;gt; {&#xA;&#x9;console.log(res.circularGraph());&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;.depends()&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Returns an &lt;code&gt;Array&lt;/code&gt; of all modules that depend on a given module.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const madge = require(&#39;madge&#39;);&#xA;&#xA;madge(&#39;path/to/app.js&#39;).then((res) =&amp;gt; {&#xA;&#x9;console.log(res.depends(&#39;lib/log.js&#39;));&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;.orphans()&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Return an &lt;code&gt;Array&lt;/code&gt; of all modules that no one is depending on.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const madge = require(&#39;madge&#39;);&#xA;&#xA;madge(&#39;path/to/app.js&#39;).then((res) =&amp;gt; {&#xA;&#x9;console.log(res.orphans());&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;.leaves()&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Return an &lt;code&gt;Array&lt;/code&gt; of all modules that have no dependencies.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const madge = require(&#39;madge&#39;);&#xA;&#xA;madge(&#39;path/to/app.js&#39;).then((res) =&amp;gt; {&#xA;&#x9;console.log(res.leaves());&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;.dot([circularOnly: boolean])&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Returns a &lt;code&gt;Promise&lt;/code&gt; resolved with a DOT representation of the module dependency graph. Set &lt;code&gt;circularOnly&lt;/code&gt; to only include circular dependencies.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const madge = require(&#39;madge&#39;);&#xA;&#xA;madge(&#39;path/to/app.js&#39;)&#xA;&#x9;.then((res) =&amp;gt; res.dot())&#xA;&#x9;.then((output) =&amp;gt; {&#xA;&#x9;&#x9;console.log(output);&#xA;&#x9;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;.image(imagePath: string, [circularOnly: boolean])&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Write the graph as an image to the given image path. Set &lt;code&gt;circularOnly&lt;/code&gt; to only include circular dependencies. The &lt;a href=&#34;http://www.graphviz.org/content/output-formats&#34;&gt;image format&lt;/a&gt; to use is determined from the file extension. Returns a &lt;code&gt;Promise&lt;/code&gt; resolved with a full path to the written image.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const madge = require(&#39;madge&#39;);&#xA;&#xA;madge(&#39;path/to/app.js&#39;)&#xA;&#x9;.then((res) =&amp;gt; res.image(&#39;path/to/image.svg&#39;))&#xA;&#x9;.then((writtenImagePath) =&amp;gt; {&#xA;&#x9;&#x9;console.log(&#39;Image written to &#39; + writtenImagePath);&#xA;&#x9;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;.svg()&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Return a &lt;code&gt;Promise&lt;/code&gt; resolved with the XML SVG representation of the dependency graph as a &lt;code&gt;Buffer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const madge = require(&#39;madge&#39;);&#xA;&#xA;madge(&#39;path/to/app.js&#39;)&#xA;&#x9;.then((res) =&amp;gt; res.svg())&#xA;&#x9;.then((output) =&amp;gt; {&#xA;&#x9;&#x9;console.log(output.toString());&#xA;&#x9;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;baseDir&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;Base directory to use instead of the default&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;includeNpm&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;If shallow NPM modules should be included&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;fileExtensions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Array&lt;/td&gt; &#xA;   &lt;td&gt;[&#39;js&#39;]&lt;/td&gt; &#xA;   &lt;td&gt;Valid file extensions used to find files in directories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;excludeRegExp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Array&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;An array of RegExp for excluding modules&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;requireConfig&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;RequireJS config for resolving aliased modules&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;webpackConfig&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;Webpack config for resolving aliased modules&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tsConfig&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String|Object&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;TypeScript config for resolving aliased modules - Either a path to a tsconfig file or an object containing the config&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;&amp;nbsp;dot&lt;/td&gt; &#xA;   &lt;td&gt;Layout to use in the graph&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;rankdir&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;&amp;nbsp;LR&lt;/td&gt; &#xA;   &lt;td&gt;Sets the &lt;a href=&#34;https://graphviz.gitlab.io/_pages/doc/info/attrs.html#d:rankdir&#34;&gt;direction&lt;/a&gt; of the graph layout&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;fontName&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Arial&lt;/td&gt; &#xA;   &lt;td&gt;Font name to use in the graph&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;fontSize&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;14px&lt;/td&gt; &#xA;   &lt;td&gt;Font size to use in the graph&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;backgroundColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;#000000&lt;/td&gt; &#xA;   &lt;td&gt;Background color for the graph&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;nodeShape&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;box&lt;/td&gt; &#xA;   &lt;td&gt;A string specifying the &lt;a href=&#34;https://graphviz.gitlab.io/_pages/doc/info/attrs.html#k:shape&#34;&gt;shape&lt;/a&gt; of a node in the graph&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;nodeStyle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;rounded&lt;/td&gt; &#xA;   &lt;td&gt;A string specifying the &lt;a href=&#34;https://graphviz.gitlab.io/_pages/doc/info/attrs.html#k:style&#34;&gt;style&lt;/a&gt; of a node in the graph&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;nodeColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;#c6c5fe&lt;/td&gt; &#xA;   &lt;td&gt;Default node color to use in the graph&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;noDependencyColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;#cfffac&lt;/td&gt; &#xA;   &lt;td&gt;Color to use for nodes with no dependencies&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cyclicNodeColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;#ff6c60&lt;/td&gt; &#xA;   &lt;td&gt;Color to use for circular dependencies&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;edgeColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;#757575&lt;/td&gt; &#xA;   &lt;td&gt;Edge color to use in the graph&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;graphVizOptions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Object&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Custom Graphviz &lt;a href=&#34;https://graphviz.gitlab.io/_pages/doc/info/attrs.html&#34;&gt;options&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;graphVizPath&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;Custom Graphviz path&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;detectiveOptions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Object&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Custom &lt;code&gt;detective&lt;/code&gt; options for &lt;a href=&#34;https://github.com/dependents/node-dependency-tree&#34;&gt;dependency-tree&lt;/a&gt; and &lt;a href=&#34;https://github.com/dependents/node-precinct#usage&#34;&gt;precinct&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dependencyFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Function&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Function called with a dependency filepath (exclude subtrees by returning false)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can use configuration file either in &lt;code&gt;.madgerc&lt;/code&gt; in your project or home folder or directly in &lt;code&gt;package.json&lt;/code&gt;. Look &lt;a href=&#34;https://github.com/dominictarr/rc#standards&#34;&gt;here&lt;/a&gt; for alternative locations for the file.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;.madgerc&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;fontSize&#34;: &#34;10px&#34;,&#xA;&#x9;&#34;graphVizOptions&#34;: {&#xA;&#x9;&#x9;&#34;G&#34;: {&#xA;&#x9;&#x9;&#x9;&#34;rankdir&#34;: &#34;LR&#34;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;package.json&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;name&#34;: &#34;foo&#34;,&#xA;&#x9;&#34;version&#34;: &#34;0.0.1&#34;,&#xA;&#x9;...&#xA;&#x9;&#34;madge&#34;: {&#xA;&#x9;&#x9;&#34;fontSize&#34;: &#34;10px&#34;,&#xA;&#x9;&#x9;&#34;graphVizOptions&#34;: {&#xA;&#x9;&#x9;&#x9;&#34;G&#34;: {&#xA;&#x9;&#x9;&#x9;&#x9;&#34;rankdir&#34;: &#34;LR&#34;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;CLI&lt;/h1&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;List dependencies from a single file&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge path/src/app.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;List dependencies from multiple files&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge path/src/foo.js path/src/bar.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;List dependencies from all *.js files found in a directory&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge path/src&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;List dependencies from multiple directories&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge path/src/foo path/src/bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;List dependencies from all *.js and *.jsx files found in a directory&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge --extensions js,jsx path/src&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Finding circular dependencies&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge --circular path/src/app.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Show modules that depends on a given module&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge --depends wheels.js path/src/app.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Show modules that no one is depending on&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge --orphans path/src/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Show modules that have no dependencies&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge --leaves path/src/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Excluding modules&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge --exclude &#39;^(foo|bar)\.js$&#39; path/src/app.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Save graph as a SVG image (requires &lt;a href=&#34;https://raw.githubusercontent.com/pahen/madge/master/#graphviz-optional&#34;&gt;Graphviz&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge --image graph.svg path/src/app.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Save graph with only circular dependencies&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge --circular --image graph.svg path/src/app.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Save graph as a &lt;a href=&#34;http://en.wikipedia.org/wiki/DOT_language&#34;&gt;DOT&lt;/a&gt; file for further processing (requires &lt;a href=&#34;https://raw.githubusercontent.com/pahen/madge/master/#graphviz-optional&#34;&gt;Graphviz&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge --dot path/src/app.js &amp;gt; graph.gv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Using pipe to transform tree (this example will uppercase all paths)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge --json path/src/app.js | tr &#39;[a-z]&#39; &#39;[A-Z]&#39; | madge --stdin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Debugging&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To enable debugging output if you encounter problems, run madge with the &lt;code&gt;--debug&lt;/code&gt; option then throw&amp;nbsp;the result in&amp;nbsp;a&amp;nbsp;gist&amp;nbsp;when&amp;nbsp;creating&amp;nbsp;issues&amp;nbsp;on&amp;nbsp;GitHub.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;madge --debug path/src/app.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Running tests&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install&#xA;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Creating a release&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;h2&gt;Missing dependencies?&lt;/h2&gt; &#xA;&lt;p&gt;It could happen that the files you&#39;re not seeing have been skipped due to errors or that they can&#39;t be resolved. Run madge with the &lt;code&gt;--warning&lt;/code&gt; option to see skipped files. If you need even more info run with the &lt;code&gt;--debug&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h2&gt;Using both Javascript and Typescript in your project?&lt;/h2&gt; &#xA;&lt;p&gt;Madge uses &lt;a href=&#34;https://www.npmjs.com/package/dependency-tree&#34;&gt;dependency-tree&lt;/a&gt; which uses &lt;a href=&#34;https://www.npmjs.com/package/filing-cabinet&#34;&gt;filing-cabinet&lt;/a&gt; to resolve modules. However it requires configurations for each file type (js/jsx) and (ts/tsx). So provide both &lt;code&gt;webpackConfig&lt;/code&gt; and &lt;code&gt;tsConfig&lt;/code&gt; options to madge.&lt;/p&gt; &#xA;&lt;h2&gt;Using mixed import syntax in the same file?&lt;/h2&gt; &#xA;&lt;p&gt;Only one syntax is used by default. You can use both though if you&#39;re willing to take the degraded performance. Put this in your madge config to enable mixed imports.&lt;/p&gt; &#xA;&lt;p&gt;For ES6 + CommonJS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;detectiveOptions&#34;: {&#xA;&#x9;&#x9;&#34;es6&#34;: {&#xA;&#x9;&#x9;&#x9;&#34;mixedImports&#34;: true&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For TypeScript + CommonJS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;detectiveOptions&#34;: {&#xA;&#x9;&#x9;&#34;ts&#34;: {&#xA;&#x9;&#x9;&#x9;&#34;mixedImports&#34;: true&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to ignore &lt;code&gt;import type&lt;/code&gt; statements in ES6 + Flow?&lt;/h2&gt; &#xA;&lt;p&gt;Put this in your madge config.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;detectiveOptions&#34;: {&#xA;&#x9;&#x9;&#34;es6&#34;: {&#xA;&#x9;&#x9;&#x9;&#34;skipTypeImports&#34;: true&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to ignore &lt;code&gt;import&lt;/code&gt; in type annotations in TypeScript?&lt;/h2&gt; &#xA;&lt;p&gt;Put this in your madge config.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;detectiveOptions&#34;: {&#xA;&#x9;&#x9;&#34;ts&#34;: {&#xA;&#x9;&#x9;&#x9;&#34;skipTypeImports&#34;: true&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mixing TypesScript and Javascript imports?&lt;/h2&gt; &#xA;&lt;p&gt;Ensure you have this in your &lt;code&gt;.tsconfig&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;compilerOptions&#34;: {&#xA;&#x9;&#x9;&#34;module&#34;: &#34;commonjs&#34;,&#xA;&#x9;&#x9;&#34;allowJs&#34;: true&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What&#39;s the &#34;Error: write EPIPE&#34; when exporting graph to image?&lt;/h2&gt; &#xA;&lt;p&gt;Ensure you have &lt;a href=&#34;https://raw.githubusercontent.com/pahen/madge/master/#graphviz-optional&#34;&gt;installed Graphviz&lt;/a&gt;. If you&#39;re running Windows, note that Graphviz is not added to the &lt;code&gt;PATH&lt;/code&gt; variable during install. You should add the folder of &lt;code&gt;gvpr.exe&lt;/code&gt; (typically &lt;code&gt;%Graphviz_folder%/bin&lt;/code&gt;) to the &lt;code&gt;PATH&lt;/code&gt; variable manually.&lt;/p&gt; &#xA;&lt;h2&gt;How do I fix the &#34;Graphviz not built with triangulation library&#34; error when using sfdp layout?&lt;/h2&gt; &#xA;&lt;p&gt;Homebrew doesn&#39;t include GTS by default. Fix this by doing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew uninstall graphviz&#xA;brew install gts&#xA;brew install graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;The image produced by madge is very hard to read, what&#39;s wrong?&lt;/h2&gt; &#xA;&lt;p&gt;Try running madge with a different layout, here&#39;s a list of the ones you can try:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;dot&lt;/strong&gt; &#34;hierarchical&#34; or layered drawings of directed graphs. This is the default tool to use if edges have directionality.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;neato&lt;/strong&gt; &#34;spring model&#39;&#39; layouts. This is the default tool to use if the graph is not too large (about 100 nodes) and you don&#39;t know anything else about it. Neato attempts to minimize a global energy function, which is equivalent to statistical multi-dimensional scaling.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;fdp&lt;/strong&gt; &#34;spring model&#39;&#39; layouts similar to those of neato, but does this by reducing forces rather than working with energy.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;sfdp&lt;/strong&gt; multiscale version of fdp for the layout of large graphs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;twopi&lt;/strong&gt; radial layouts, after Graham Wills 97. Nodes are placed on concentric circles depending their distance from a given root node.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;circo&lt;/strong&gt; circular layout, after Six and Tollis 99, Kauffman and Wiese 02. This is suitable for certain diagrams of multiple cyclic structures, such as certain telecommunications networks.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://github.com/pahen/madge/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/madge/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Donations ‚ù§Ô∏è&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to the awesome people below for making donations! üôè[&lt;a href=&#34;https://paypal.me/pahen&#34;&gt;Donate&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/BeroBurny&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;a href=&#34;https://github.com/BeroBurny&#34; target=&#34;_blank&#34;&gt;&lt;b&gt;Bernard Stojanoviƒá&lt;/b&gt; (24 Mars, 2021)&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;a href=&#34;https://github.com/BeroBurny&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/BeroBurny.png&#34; width=&#34;64&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/olejorgenb&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;a href=&#34;https://github.com/olejorgenb&#34; target=&#34;_blank&#34;&gt;&lt;b&gt;Ole J√∏rgen Br√∏nner&lt;/b&gt; (Oct 8, 2020)&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;a href=&#34;https://github.com/olejorgenb&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/olejorgenb.png&#34; width=&#34;64&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/pubkey/rxdb&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;a href=&#34;https://github.com/pubkey/rxdb&#34; target=&#34;_blank&#34;&gt;&lt;b&gt;RxDB&lt;/b&gt; (Apr 1, 2020)&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;a href=&#34;https://github.com/pubkey/rxdb&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://cdn.rawgit.com/pubkey/rxdb/ba7c9b80/docs/files/logo/logo_text.svg?sanitize=true&#34; width=&#34;128&#34; style=&#34;margin: -4px -10px&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/Ziriax&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;a href=&#34;https://github.com/Ziriax&#34; target=&#34;_blank&#34;&gt;&lt;b&gt;Peter Verswyvelen&lt;/b&gt; (Feb 24, 2020)&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;a href=&#34;https://github.com/Ziriax&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/Ziriax.png&#34; width=&#34;64&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/landonalder&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;a href=&#34;https://github.com/landonalder&#34; target=&#34;_blank&#34;&gt;&lt;b&gt;Landon Alder&lt;/b&gt; (Mar 19, 2019)&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;a href=&#34;https://github.com/landonalder&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/landonalder.png&#34; width=&#34;64&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;MIT License&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chetannada/Namaste-React</title>
    <updated>2023-02-06T01:36:54Z</updated>
    <id>tag:github.com,2023-02-06:/chetannada/Namaste-React</id>
    <link href="https://github.com/chetannada/Namaste-React" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚ù§ Namaste React Live Course from Zero to Hero üöÄ by Akshay Saini(Founder of NamasteDev). This repository for Assignment &amp; Class Notes taken during Namaste React Live Course #namaste #javascript #react&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;‚ù§Ô∏è Namaste React üôè&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;em&gt;&lt;a href=&#34;https://learn.namastedev.com/courses/namaste-react-live&#34;&gt;Namaste React Live Course&lt;/a&gt; from Zero to Hero üöÄ by &lt;a href=&#34;https://www.linkedin.com/in/akshaymarch7/&#34;&gt;Akshay Saini&lt;/a&gt;(Founder of NamasteDev). This repository for Assignment &amp;amp; Class Notes taken during this First Live course.&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I made &lt;a href=&#34;https://foodfire-app.netlify.app/&#34;&gt;üöÄ FoodFire App üòç&lt;/a&gt; which is the part of this course.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìö &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2001%20-%20Inception/&#34;&gt;&lt;em&gt;Chapter 01 - Inception&lt;/em&gt;&lt;/a&gt; (Date: 24-12-2022)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìñ &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2001%20-%20Inception/Theory/Session1-Theory.md&#34;&gt;&lt;em&gt;Theory Assignment Solution&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üë®‚Äçüíª &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2001%20-%20Inception/Coding/&#34;&gt;&lt;em&gt;Coding Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìò &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2001%20-%20Inception/Assignment.md&#34;&gt;&lt;em&gt;Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìù &lt;a href=&#34;https://bit.ly/3wDKS13&#34;&gt;&lt;em&gt;Hand Written Notes of Live Class&lt;/em&gt;&lt;/a&gt; &lt;code&gt;Credit - Ashraya KK&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìö &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2002%20-%20Igniting%20our%20App/&#34;&gt;&lt;em&gt;Chapter 02 - Igniting our App&lt;/em&gt;&lt;/a&gt; (Date: 31-12-2022)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìñ &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2002%20-%20Igniting%20our%20App/Theory/Session%202%20Theory.md&#34;&gt;&lt;em&gt;Theory Assignment Solution&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üë®‚Äçüíª &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2002%20-%20Igniting%20our%20App/Coding/&#34;&gt;&lt;em&gt;Coding Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìò &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2002%20-%20Igniting%20our%20App/Assignment.md&#34;&gt;&lt;em&gt;Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìù &lt;a href=&#34;https://bit.ly/3RcF9sF&#34;&gt;&lt;em&gt;Hand Written Notes of Live Class&lt;/em&gt;&lt;/a&gt; &lt;code&gt;Credit - Ashraya KK&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìö &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2003%20-%20Laying%20the%20Foundation/&#34;&gt;&lt;em&gt;Chapter 03 - Laying the Foundation&lt;/em&gt;&lt;/a&gt; (Date: 01-01-2023)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìñ &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2003%20-%20Laying%20the%20Foundation/Theory/Session%203%20Theory.md&#34;&gt;&lt;em&gt;Theory Assignment Solution&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üë®‚Äçüíª &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2003%20-%20Laying%20the%20Foundation/Coding/&#34;&gt;&lt;em&gt;Coding Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìò &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2003%20-%20Laying%20the%20Foundation/Assignment.md&#34;&gt;&lt;em&gt;Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìù &lt;a href=&#34;https://bit.ly/3DojiZm&#34;&gt;&lt;em&gt;Hand Written Notes of Live Class&lt;/em&gt;&lt;/a&gt; &lt;code&gt;Credit - Ashraya KK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://foodfire-chapter03.netlify.app/&#34;&gt;üöÄ FoodFire Live Project App Link üòç&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìö &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2004%20-%20Talk%20is%20Cheap%2C%20show%20me%20the%20code/&#34;&gt;&lt;em&gt;Chapter 04 - Talk is Cheap, show me the code&lt;/em&gt;&lt;/a&gt; (Date: 07-01-2023)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìñ &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2004%20-%20Talk%20is%20Cheap%2C%20show%20me%20the%20code/Theory/Session%204%20Theory.md&#34;&gt;&lt;em&gt;Theory Assignment Solution&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üë®‚Äçüíª &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2004%20-%20Talk%20is%20Cheap%2C%20show%20me%20the%20code/Coding/&#34;&gt;&lt;em&gt;Coding Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìò &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2004%20-%20Talk%20is%20Cheap%2C%20show%20me%20the%20code/Assignment.md&#34;&gt;&lt;em&gt;Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìù &lt;a href=&#34;https://bit.ly/3HkOA4w&#34;&gt;&lt;em&gt;Hand Written Notes of Live Class&lt;/em&gt;&lt;/a&gt; &lt;code&gt;Credit - Ashraya KK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://foodfire-chapter04.netlify.app/&#34;&gt;üöÄ FoodFire Live Project App Link üòç&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìö &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2005%20-%20Let&#39;s%20get%20Hooked!/&#34;&gt;&lt;em&gt;Chapter 05 - Let&#39;s get Hooked!&lt;/em&gt;&lt;/a&gt; (Date: 08-01-2023)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìñ &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2005%20-%20Let&#39;s%20get%20Hooked!/Theory/Session%205%20Theory.md&#34;&gt;&lt;em&gt;Theory Assignment Solution&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üë®‚Äçüíª &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2005%20-%20Let&#39;s%20get%20Hooked!/Coding/&#34;&gt;&lt;em&gt;Coding Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìò &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2005%20-%20Let&#39;s%20get%20Hooked!/Assignment.md&#34;&gt;&lt;em&gt;Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìù &lt;a href=&#34;https://bit.ly/3Ju0jkd&#34;&gt;&lt;em&gt;Hand Written Notes of Live Class&lt;/em&gt;&lt;/a&gt; &lt;code&gt;Credit - Ashraya KK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://foodfire-chapter05.netlify.app/&#34;&gt;üöÄ FoodFire Live Project App Link üòç&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìö &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2006%20-%20Exploring%20the%20world/&#34;&gt;&lt;em&gt;Chapter 06 - Exploring the world&lt;/em&gt;&lt;/a&gt; (Date: 14-01-2023)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìñ &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2006%20-%20Exploring%20the%20world/Theory/Session%206%20Theory.md&#34;&gt;&lt;em&gt;Theory Assignment Solution&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üë®‚Äçüíª &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2006%20-%20Exploring%20the%20world/Coding/&#34;&gt;&lt;em&gt;Coding Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìò &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2006%20-%20Exploring%20the%20world/Assignment.md&#34;&gt;&lt;em&gt;Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://foodfire-chapter06.netlify.app/&#34;&gt;üöÄ FoodFire Live Project App Link üòç&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note: &lt;em&gt;Please enable &lt;code&gt;CORS&lt;/code&gt; on your &lt;code&gt;browser&lt;/code&gt; before accessing the &lt;code&gt;FoodFire application&lt;/code&gt;. Download the &lt;a href=&#34;https://chrome.google.com/webstore/detail/allow-cors-access-control/lhobafahddgcelffkeicbaginigeejlf?hl=en&#34;&gt;Allow CORS&lt;/a&gt; chrome extension.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üìö &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2007%20-%20Finding%20the%20Path/&#34;&gt;&lt;em&gt;Chapter 07 - Finding the Path&lt;/em&gt;&lt;/a&gt; (Date: 15-01-2023)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìñ &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2007%20-%20Finding%20the%20Path/Theory/Session%207%20Theory.md&#34;&gt;&lt;em&gt;Theory Assignment Solution&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üë®‚Äçüíª &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2007%20-%20Finding%20the%20Path/Coding/&#34;&gt;&lt;em&gt;Coding Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìò &lt;a href=&#34;https://raw.githubusercontent.com/chetannada/Namaste-React/main/Chapter%2007%20-%20Finding%20the%20Path/Assignment.md&#34;&gt;&lt;em&gt;Assignment&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://foodfire-chapter07.netlify.app/&#34;&gt;üöÄ FoodFire Live Project App Link üòç&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note: &lt;em&gt;Please enable &lt;code&gt;CORS&lt;/code&gt; on your &lt;code&gt;browser&lt;/code&gt; before accessing the &lt;code&gt;FoodFire application&lt;/code&gt;. Download the &lt;a href=&#34;https://chrome.google.com/webstore/detail/allow-cors-access-control/lhobafahddgcelffkeicbaginigeejlf?hl=en&#34;&gt;Allow CORS&lt;/a&gt; chrome extension.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üî• Clone this Repository&lt;/h2&gt; &#xA;&lt;p&gt;You need to write the following commands on the terminal screen(in vscode) so that you can run this project locally.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  git clone &#34;https://github.com/chetannada/Namaste-React.git&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go to the project directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  cd Namaste-React&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  npm run start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This application should now be running on &lt;code&gt;localhost&lt;/code&gt;. If you want to Fork repository and want to run locally, follow this guidelines &lt;a href=&#34;https://docs.github.com/en/get-started/quickstart/fork-a-repo&#34;&gt;Fork and Clone Github Repository&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üîó Let&#39;s Connect&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/chetannada/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white&#34; alt=&#34;linkedin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/chetannada&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-1DA1F2?style=for-the-badge&amp;amp;logo=twitter&amp;amp;logoColor=white&#34; alt=&#34;twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discordapp.com/users/916005177838956555&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://chetannada.netlify.app/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/my_portfolio-000?style=for-the-badge&amp;amp;logo=ko-fi&amp;amp;logoColor=white&#34; alt=&#34;portfolio&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>adrianhajdin/project_crowdfunding</title>
    <updated>2023-02-06T01:36:54Z</updated>
    <id>tag:github.com,2023-02-06:/adrianhajdin/project_crowdfunding</id>
    <link href="https://github.com/adrianhajdin/project_crowdfunding" rel="alternate"></link>
    <summary type="html">&lt;p&gt;With a stunning design, connected to the blockchain, metamask pairing, interaction with smart contracts, sending Ethereum through the blockchain network, and writing solidity code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Build and Deploy a Web3 Crowdfunding Platform (Kickstarter) As Your First Blockchain Application&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.ibb.co/k6pj0Qt/htum-6.png&#34; alt=&#34;Crowdfunding&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Launch your development career with project-based coaching on &lt;a href=&#34;https://www.jsmastery.pro&#34;&gt;JS Mastery Pro&lt;/a&gt;.&lt;/h3&gt;</summary>
  </entry>
</feed>