<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-06T01:34:10Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ValveSoftware/counter-strike</title>
    <updated>2023-08-06T01:34:10Z</updated>
    <id>tag:github.com,2023-08-06:/ValveSoftware/counter-strike</id>
    <link href="https://github.com/ValveSoftware/counter-strike" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CS:GO&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>xiaolin/react-image-gallery</title>
    <updated>2023-08-06T01:34:10Z</updated>
    <id>tag:github.com,2023-08-06:/xiaolin/react-image-gallery</id>
    <link href="https://github.com/xiaolin/react-image-gallery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React carousel image gallery component with thumbnail support 🖼&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Image Gallery&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/js/react-image-gallery&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/react-image-gallery.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/react-image-gallery&#34;&gt;&lt;img src=&#34;http://img.shields.io/npm/dm/react-image-gallery.svg?style=flat&#34; alt=&#34;Download Count&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bundlephobia.com/package/react-image-gallery&#34;&gt;&lt;img src=&#34;https://badgen.net/bundlephobia/minzip/react-image-gallery&#34; alt=&#34;Bundle size&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Live Demo (try it on mobile for swipe support)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://linxtion.com/demo/react-image-gallery&#34;&gt;&lt;code&gt;linxtion.com/demo/react-image-gallery&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/xiaolin/react-image-gallery/raw/master/static/image_gallery_v1.0.2.gif&#34; alt=&#34;demo gif&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;React image gallery is a React component for building image galleries and carousels&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mobile swipe gestures&lt;/li&gt; &#xA; &lt;li&gt;Thumbnail navigation&lt;/li&gt; &#xA; &lt;li&gt;Fullscreen support&lt;/li&gt; &#xA; &lt;li&gt;Custom rendered slides&lt;/li&gt; &#xA; &lt;li&gt;RTL support&lt;/li&gt; &#xA; &lt;li&gt;Responsive design&lt;/li&gt; &#xA; &lt;li&gt;Tons of customization options (see props below)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;React Image Gallery requires &lt;strong&gt;React 16.0.0 or later.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install react-image-gallery&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Style import (with webpack)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# SCSS&#xA;@import &#34;~react-image-gallery/styles/scss/image-gallery.scss&#34;;&#xA;&#xA;# CSS&#xA;@import &#34;~react-image-gallery/styles/css/image-gallery.css&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;Need more example? See &lt;a href=&#34;https://github.com/xiaolin/react-image-gallery/raw/master/example/app.js&#34;&gt;&lt;code&gt;example/app.js&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import ImageGallery from &#34;react-image-gallery&#34;;&#xA;&#xA;const images = [&#xA;  {&#xA;    original: &#34;https://picsum.photos/id/1018/1000/600/&#34;,&#xA;    thumbnail: &#34;https://picsum.photos/id/1018/250/150/&#34;,&#xA;  },&#xA;  {&#xA;    original: &#34;https://picsum.photos/id/1015/1000/600/&#34;,&#xA;    thumbnail: &#34;https://picsum.photos/id/1015/250/150/&#34;,&#xA;  },&#xA;  {&#xA;    original: &#34;https://picsum.photos/id/1019/1000/600/&#34;,&#xA;    thumbnail: &#34;https://picsum.photos/id/1019/250/150/&#34;,&#xA;  },&#xA;];&#xA;&#xA;class MyGallery extends React.Component {&#xA;  render() {&#xA;    return &amp;lt;ImageGallery items={images} /&amp;gt;;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Props&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;items&lt;/code&gt;: (required) Array of objects, see example above,&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Available Properties &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;original&lt;/code&gt; - image src url&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;thumbnail&lt;/code&gt; - image thumbnail src url&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;fullscreen&lt;/code&gt; - image for fullscreen (defaults to original)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;originalHeight&lt;/code&gt; - image height (html5 attribute)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;originalWidth&lt;/code&gt; - image width (html5 attribute)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;loading&lt;/code&gt; - image loading. Either &#34;lazy&#34; or &#34;eager&#34; (html5 attribute)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;thumbnailHeight&lt;/code&gt; - image height (html5 attribute)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;thumbnailWidth&lt;/code&gt; - image width (html5 attribute)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;thumbnailLoading&lt;/code&gt; - image loading. Either &#34;lazy&#34; or &#34;eager&#34; (html5 attribute)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;originalClass&lt;/code&gt; - custom image class&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;thumbnailClass&lt;/code&gt; - custom thumbnail class&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;renderItem&lt;/code&gt; - Function for custom rendering a specific slide (see renderItem below)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;renderThumbInner&lt;/code&gt; - Function for custom thumbnail renderer (see renderThumbInner below)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;originalAlt&lt;/code&gt; - image alt&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;thumbnailAlt&lt;/code&gt; - thumbnail image alt&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;originalTitle&lt;/code&gt; - image title&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;thumbnailTitle&lt;/code&gt; - thumbnail image title&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;thumbnailLabel&lt;/code&gt; - label for thumbnail&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;description&lt;/code&gt; - description for image&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;srcSet&lt;/code&gt; - image srcset (html5 attribute)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;sizes&lt;/code&gt; - image sizes (html5 attribute)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;bulletClass&lt;/code&gt; - extra class for the bullet of the item&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;infinite&lt;/code&gt;: Boolean, default &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;infinite sliding&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;lazyLoad&lt;/code&gt;: Boolean, default &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;showNav&lt;/code&gt;: Boolean, default &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;showThumbnails&lt;/code&gt;: Boolean, default &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;thumbnailPosition&lt;/code&gt;: String, default &lt;code&gt;bottom&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;available positions: &lt;code&gt;top, right, bottom, left&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;showFullscreenButton&lt;/code&gt;: Boolean, default &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;useBrowserFullscreen&lt;/code&gt;: Boolean, default &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;if false, fullscreen will be done via css within the browser&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;useTranslate3D&lt;/code&gt;: Boolean, default &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;if false, will use &lt;code&gt;translate&lt;/code&gt; instead of &lt;code&gt;translate3d&lt;/code&gt; css property to transition slides&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;showPlayButton&lt;/code&gt;: Boolean, default &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;isRTL&lt;/code&gt;: Boolean, default &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;if true, gallery&#39;s direction will be from right-to-left (to support right-to-left languages)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;showBullets&lt;/code&gt;: Boolean, default &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;showIndex&lt;/code&gt;: Boolean, default &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;autoPlay&lt;/code&gt;: Boolean, default &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;disableThumbnailScroll&lt;/code&gt;: Boolean, default &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;disables the thumbnail container from adjusting&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;disableKeyDown&lt;/code&gt;: Boolean, default &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;disables keydown listener for keyboard shortcuts (left arrow, right arrow, esc key)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;disableSwipe&lt;/code&gt;: Boolean, default &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;disableThumbnailSwipe&lt;/code&gt;: Boolean, default &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onErrorImageURL&lt;/code&gt;: String, default &lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;an image src pointing to your default image if an image fails to load&lt;/li&gt; &#xA;   &lt;li&gt;handles both slide image, and thumbnail image&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;indexSeparator&lt;/code&gt;: String, default &lt;code&gt;&#39; / &#39;&lt;/code&gt;, ignored if &lt;code&gt;showIndex&lt;/code&gt; is false&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;slideDuration&lt;/code&gt;: Number, default &lt;code&gt;450&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;transition duration during image slide in milliseconds&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;swipingTransitionDuration&lt;/code&gt;: Number, default &lt;code&gt;0&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;transition duration while swiping in milliseconds&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;slideInterval&lt;/code&gt;: Number, default &lt;code&gt;3000&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;slideOnThumbnailOver&lt;/code&gt;: Boolean, default &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;flickThreshold&lt;/code&gt;: Number (float), default &lt;code&gt;0.4&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Determines the max velocity of a swipe before it&#39;s considered a flick (lower = more sensitive)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;swipeThreshold&lt;/code&gt;: Number, default &lt;code&gt;30&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A percentage of how far the offset of the current slide is swiped to trigger a slide event. e.g. If the current slide is swiped less than 30% to the left or right, it will not trigger a slide event.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;stopPropagation&lt;/code&gt;: Boolean, default &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Automatically calls stopPropagation on all &#39;swipe&#39; events.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;startIndex&lt;/code&gt;: Number, default &lt;code&gt;0&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onImageError&lt;/code&gt;: Function, &lt;code&gt;callback(event)&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;overrides onErrorImage&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onThumbnailError&lt;/code&gt;: Function, &lt;code&gt;callback(event)&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;overrides onErrorImage&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onThumbnailClick&lt;/code&gt;: Function, &lt;code&gt;callback(event, index)&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onBulletClick&lt;/code&gt;: Function, &lt;code&gt;callback(event, index)&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onImageLoad&lt;/code&gt;: Function, &lt;code&gt;callback(event)&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onSlide&lt;/code&gt;: Function, &lt;code&gt;callback(currentIndex)&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onBeforeSlide&lt;/code&gt;: Function, &lt;code&gt;callback(nextIndex)&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onScreenChange&lt;/code&gt;: Function, &lt;code&gt;callback(boolean)&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When fullscreen is toggled a boolean is passed to the callback&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onPause&lt;/code&gt;: Function, &lt;code&gt;callback(currentIndex)&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onPlay&lt;/code&gt;: Function, &lt;code&gt;callback(currentIndex)&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onClick&lt;/code&gt;: Function, &lt;code&gt;callback(event)&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onTouchMove&lt;/code&gt;: Function, &lt;code&gt;callback(event) on gallery slide&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onTouchEnd&lt;/code&gt;: Function, &lt;code&gt;callback(event) on gallery slide&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onTouchStart&lt;/code&gt;: Function, &lt;code&gt;callback(event) on gallery slide&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onMouseOver&lt;/code&gt;: Function, &lt;code&gt;callback(event) on gallery slide&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;onMouseLeave&lt;/code&gt;: Function, &lt;code&gt;callback(event) on gallery slide&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;additionalClass&lt;/code&gt;: String,&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Additional class that will be added to the root node of the component.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;renderCustomControls&lt;/code&gt;: Function, custom controls rendering&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use this to render custom controls or other elements on the currently displayed image (like the fullscreen button)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;  _renderCustomControls() {&#xA;    return &amp;lt;a href=&#39;&#39; className=&#39;image-gallery-custom-action&#39; onClick={this._customAction.bind(this)}/&amp;gt;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;renderItem&lt;/code&gt;: Function, custom item rendering&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;NOTE: Highly suggest looking into a render cache such as React.memo if you plan to override renderItem&lt;/li&gt; &#xA;   &lt;li&gt;On a specific item &lt;code&gt;[{thumbnail: &#39;...&#39;, renderItem: this.myRenderItem}]&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;As a prop passed into &lt;code&gt;ImageGallery&lt;/code&gt; to completely override &lt;code&gt;renderItem&lt;/code&gt;, see source for renderItem implementation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;renderThumbInner&lt;/code&gt;: Function, custom thumbnail rendering&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On a specific item &lt;code&gt;[{thumbnail: &#39;...&#39;, renderThumbInner: this.myRenderThumbInner}]&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;As a prop passed into &lt;code&gt;ImageGallery&lt;/code&gt; to completely override &lt;code&gt;_renderThumbInner&lt;/code&gt;, see source for reference&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;renderLeftNav&lt;/code&gt;: Function, custom left nav component&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;See &lt;a href=&#34;https://github.com/xiaolin/react-image-gallery/raw/master/src/components/controls/LeftNav.js&#34;&gt;&lt;code&gt;&amp;lt;LeftNav /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Use this to render a custom left nav control&lt;/li&gt; &#xA;   &lt;li&gt;Args: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;onClick&lt;/code&gt; callback that will slide to the previous item&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;disabled&lt;/code&gt; boolean for when the nav is disabled&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;renderLeftNav: (onClick, disabled) =&amp;gt; (&#xA;  &amp;lt;LeftNav onClick={onClick} disabled={disabled} /&amp;gt;&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;renderRightNav&lt;/code&gt;: Function, custom right nav component&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;See &lt;a href=&#34;https://github.com/xiaolin/react-image-gallery/raw/master/src/components/controls/RightNav.js&#34;&gt;&lt;code&gt;&amp;lt;RightNav /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Use this to render a custom right nav control&lt;/li&gt; &#xA;   &lt;li&gt;Args: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;onClick&lt;/code&gt; callback that will slide to the next item&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;disabled&lt;/code&gt; boolean for when the nav is disabled&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;renderRightNav: (onClick, disabled) =&amp;gt; (&#xA;  &amp;lt;RightNav onClick={onClick} disabled={disabled} /&amp;gt;&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;renderPlayPauseButton&lt;/code&gt;: Function, play pause button component&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;See &lt;a href=&#34;https://github.com/xiaolin/react-image-gallery/raw/master/src/components/controls/PlayPause.js&#34;&gt;&lt;code&gt;&amp;lt;PlayPause /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Use this to render a custom play pause button&lt;/li&gt; &#xA;   &lt;li&gt;Args: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;onClick&lt;/code&gt; callback that will toggle play/pause&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;isPlaying&lt;/code&gt; boolean for when gallery is playing&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;renderPlayPauseButton: (onClick, isPlaying) =&amp;gt; (&#xA;  &amp;lt;PlayPause onClick={onClick} isPlaying={isPlaying} /&amp;gt;&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;renderFullscreenButton&lt;/code&gt;: Function, custom fullscreen button component&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;See &lt;a href=&#34;https://github.com/xiaolin/react-image-gallery/raw/master/src/components/controls/Fullscreen.js&#34;&gt;&lt;code&gt;&amp;lt;Fullscreen /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Use this to render a custom fullscreen button&lt;/li&gt; &#xA;   &lt;li&gt;Args: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;onClick&lt;/code&gt; callback that will toggle fullscreen&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;isFullscreen&lt;/code&gt; argument for when fullscreen is active&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;  renderFullscreenButton: (onClick, isFullscreen) =&amp;gt; (&#xA;    &amp;lt;Fullscreen onClick={onClick} isFullscreen={isFullscreen} /&amp;gt;&#xA;  ),&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;useWindowKeyDown&lt;/code&gt;: Boolean, default &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If &lt;code&gt;true&lt;/code&gt;, listens to keydown events on window (window.addEventListener)&lt;/li&gt; &#xA;   &lt;li&gt;If &lt;code&gt;false&lt;/code&gt;, listens to keydown events on image gallery element (imageGalleryElement.addEventListener)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Functions&lt;/h1&gt; &#xA;&lt;p&gt;The following functions can be accessed using &lt;a href=&#34;https://reactjs.org/docs/refs-and-the-dom.html&#34;&gt;refs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;play()&lt;/code&gt;: plays the slides&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pause()&lt;/code&gt;: pauses the slides&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;toggleFullScreen()&lt;/code&gt;: toggles full screen&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;slideToIndex(index)&lt;/code&gt;: slides to a specific index&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;getCurrentIndex()&lt;/code&gt;: returns the current index&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Each pull request (PR) should be specific and isolated to the issue you&#39;re trying to fix. Please do not stack features, chores, refactors, or enhancements in one PR. Describe your feature/implementation in the PR. If you&#39;re unsure whether it&#39;s useful or if it involves a major change, please open an issue first and seek feedback.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow eslint provided&lt;/li&gt; &#xA; &lt;li&gt;Comment your code&lt;/li&gt; &#xA; &lt;li&gt;Write &lt;a href=&#34;https://github.com/ryanmcdermott/clean-code-javascript&#34;&gt;clean&lt;/a&gt; code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Build the example locally (requires node &amp;gt;= 12.13)&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/xiaolin/react-image-gallery.git&#xA;cd react-image-gallery&#xA;npm install --global yarn&#xA;yarn install&#xA;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open &lt;a href=&#34;http://localhost:8001&#34;&gt;&lt;code&gt;localhost:8001&lt;/code&gt;&lt;/a&gt; in a browser.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sahat/hackathon-starter</title>
    <updated>2023-08-06T01:34:10Z</updated>
    <id>tag:github.com,2023-08-06:/sahat/hackathon-starter</id>
    <link href="https://github.com/sahat/hackathon-starter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A boilerplate for Node.js web applications&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://lh4.googleusercontent.com/-PVw-ZUM9vV8/UuWeH51os0I/AAAAAAAAD6M/0Ikg7viJftQ/w1286-h566-no/hackathon-starter-logo.jpg&#34; alt=&#34;&#34;&gt; Hackathon Starter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Live Demo&lt;/strong&gt;: &lt;a href=&#34;https://hackathon-starter-1.ydftech.com/&#34;&gt;Link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Jump to &lt;a href=&#34;https://github.com/sahat/hackathon-starter/raw/master/CHANGELOG.md&#34;&gt;What&#39;s new?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A boilerplate for &lt;strong&gt;Node.js&lt;/strong&gt; web applications.&lt;/p&gt; &#xA;&lt;p&gt;If you have attended any hackathons in the past, then you know how much time it takes to get a project started: decide on what to build, pick a programming language, pick a web framework, pick a CSS framework. A while later, you might have an initial project up on GitHub, and only then can other team members start contributing. Or how about doing something as simple as &lt;em&gt;Sign in with Facebook&lt;/em&gt; authentication? You can spend hours on it if you are not familiar with how OAuth 2.0 works.&lt;/p&gt; &#xA;&lt;p&gt;When I started this project, my primary focus was on &lt;strong&gt;simplicity&lt;/strong&gt; and &lt;strong&gt;ease of use&lt;/strong&gt;. I also tried to make it as &lt;strong&gt;generic&lt;/strong&gt; and &lt;strong&gt;reusable&lt;/strong&gt; as possible to cover most use cases of hackathon web apps, without being too specific. In the worst case, you can use this as a learning guide for your projects, if for example you are only interested in &lt;strong&gt;Sign in with Google&lt;/strong&gt; authentication and nothing else.&lt;/p&gt; &#xA;&lt;h3&gt;Testimonials&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/tech/hackathon-starter#comment-224732&#34;&gt;&lt;strong&gt;“Nice! That README alone is already gold!”&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; — Adrian Le Bas&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/tech/hackathon-starter#comment-224966&#34;&gt;&lt;strong&gt;“Awesome. Simply awesome.”&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; — Steven Rueter&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/tech/hackathon-starter#comment-228610&#34;&gt;&lt;strong&gt;“I&#39;m using it for a year now and many projects, it&#39;s an awesome boilerplate and the project is well maintained!”&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; — Kevin Granger&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;“Small world with Sahat&#39;s project. We were using his hackathon starter for our hackathon this past weekend and got some prizes. Really handy repo!”&lt;/strong&gt;&lt;br&gt; — Interview candidate for one of the companies I used to work with.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Modern Theme&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/-KQTmCFNK6MM/U7OZpznjDuI/AAAAAAAAERc/h3jR27Uy1lE/w1366-h1006-no/Screenshot+2014-07-02+01.32.22.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Flatly Bootstrap Theme&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/-oJ-7bSYisRY/U1a-WhK_LoI/AAAAAAAAECM/a04fVYgefzw/w1474-h1098-no/Screen+Shot+2014-04-22+at+3.08.33+PM.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;API Examples&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/-BJD2wK8CvC8/VLodBsyL-NI/AAAAAAAAEx0/SafE6o_qq_I/w1818-h1186-no/Screenshot%2B2015-01-17%2B00.25.49.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#obtaining-api-keys&#34;&gt;Obtaining API Keys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#project-structure&#34;&gt;Project Structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#list-of-packages&#34;&gt;List of Packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#useful-tools-and-resources&#34;&gt;Useful Tools and Resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#recommended-design-resources&#34;&gt;Recommended Design Resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#recommended-nodejs-libraries&#34;&gt;Recommended Node.js Libraries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#recommended-client-side-libraries&#34;&gt;Recommended Client-side Libraries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#pro-tips&#34;&gt;Pro Tips&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#how-it-works-mini-guides&#34;&gt;How It Works&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#cheatsheets&#34;&gt;Cheatsheets&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#-es6-cheatsheet&#34;&gt;ES6&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#-javascript-date-cheatsheet&#34;&gt;JavaScript Date&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#mongoose-cheatsheet&#34;&gt;Mongoose Cheatsheet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#deployment&#34;&gt;Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#production&#34;&gt;Production&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#changelog&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Login &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Local Authentication&lt;/strong&gt; using Email and Password&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;OAuth 2.0 Authentication:&lt;/strong&gt; Sign in with Google, Facebook, Twitter, LinkedIn, Twitch, Github, Snapchat&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;User Profile and Account Management&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Gravatar&lt;/li&gt; &#xA;   &lt;li&gt;Profile Details&lt;/li&gt; &#xA;   &lt;li&gt;Change Password&lt;/li&gt; &#xA;   &lt;li&gt;Forgot Password&lt;/li&gt; &#xA;   &lt;li&gt;Reset Password&lt;/li&gt; &#xA;   &lt;li&gt;Verify Email&lt;/li&gt; &#xA;   &lt;li&gt;Link multiple OAuth strategies to one account&lt;/li&gt; &#xA;   &lt;li&gt;Delete Account&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Contact Form (powered by SMTP via Sendgrid, Mailgun, AWS SES, etc.)&lt;/li&gt; &#xA; &lt;li&gt;File upload&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API Examples&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Facebook, Foursquare, Tumblr, Pinterest, Github, Steam, Quickbooks, Paypal, Stripe, Twilio (text messaging), Lob (USPS Mail), HERE Maps, Google Maps, Google Drive, Google Sheets, Alpha Vantage (stocks and finance info) with ChartJS, Last.fm, New York Times, Web Scraping,&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Flash notifications&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;reCaPTCHA and rate limit protection&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;CSRF protection&lt;/li&gt; &#xA; &lt;li&gt;MVC Project Structure&lt;/li&gt; &#xA; &lt;li&gt;Node.js clusters support&lt;/li&gt; &#xA; &lt;li&gt;HTTPS Proxy support (via ngrok, Cloudflare, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Sass stylesheets (auto-compiled via middleware)&lt;/li&gt; &#xA; &lt;li&gt;Bootstrap 5&lt;/li&gt; &#xA; &lt;li&gt;&#34;Go to production&#34; checklist&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;MongoDB (local install OR hosted)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Local Install: &lt;a href=&#34;https://www.mongodb.com/download-center/community&#34;&gt;MongoDB&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Hosted: No need to install, see the MongoDB Atlas section&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://nodejs.org&#34;&gt;Node.js 18+&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Command Line Tools&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/1/1b/Apple_logo_grey.svg?sanitize=true&#34; height=&#34;17&#34;&gt;&amp;nbsp;&lt;strong&gt;Mac OS X:&lt;/strong&gt; &lt;a href=&#34;https://itunes.apple.com/us/app/xcode/id497799835?mt=12&#34;&gt;Xcode&lt;/a&gt; (or &lt;strong&gt;OS X 10.9+&lt;/strong&gt;: &lt;code&gt;xcode-select --install&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/8/87/Windows_logo_-_2021.svg?sanitize=true&#34; height=&#34;17&#34;&gt;&amp;nbsp;&lt;strong&gt;Windows:&lt;/strong&gt; &lt;a href=&#34;https://code.visualstudio.com&#34;&gt;Visual Studio Code&lt;/a&gt; + &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-win10&#34;&gt;Windows Subsystem for Linux - Ubuntu&lt;/a&gt; OR &lt;a href=&#34;https://www.visualstudio.com/products/visual-studio-community-vs&#34;&gt;Visual Studio&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/UbuntuCoF.svg/512px-UbuntuCoF.svg.png?20120210072525&#34; height=&#34;17&#34;&gt;&amp;nbsp;&lt;strong&gt;Ubuntu&lt;/strong&gt; / &lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/3/3f/Linux_Mint_logo_without_wordmark.svg?sanitize=true&#34; height=&#34;17&#34;&gt;&amp;nbsp;&lt;strong&gt;Linux Mint:&lt;/strong&gt; &lt;code&gt;sudo apt-get install build-essential&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/3/3f/Fedora_logo.svg?sanitize=true&#34; height=&#34;17&#34;&gt;&amp;nbsp;&lt;strong&gt;Fedora&lt;/strong&gt;: &lt;code&gt;sudo dnf groupinstall &#34;Development Tools&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;img src=&#34;https://en.opensuse.org/images/b/be/Logo-geeko_head.png&#34; height=&#34;17&#34;&gt;&amp;nbsp;&lt;strong&gt;OpenSUSE:&lt;/strong&gt; &lt;code&gt;sudo zypper install --type pattern devel_basis&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are new to Node or Express, you may find &lt;a href=&#34;https://www.youtube.com/watch?v=Ad2ngx6CT0M&amp;amp;list=PLillGF-RfqbYRpji8t4SxUkMxfowG4Kqp&amp;amp;index=3&#34;&gt;Node.js &amp;amp; Express From Scratch series&lt;/a&gt; helpful for learning the basics of Node and Express. Alternatively, here is another great tutorial for complete beginners - &lt;a href=&#34;https://www.freecodecamp.org/news/build-a-restful-api-using-node-express-and-mongodb/&#34;&gt;Getting Started With Node.js, Express, MongoDB&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; The easiest way to get started is to clone the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Get the latest snapshot&#xA;git clone https://github.com/sahat/hackathon-starter.git myproject&#xA;&#xA;# Change directory&#xA;cd myproject&#xA;&#xA;# Install NPM dependencies&#xA;npm install&#xA;&#xA;# Then simply start your app&#xA;node app.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I highly recommend installing &lt;a href=&#34;https://github.com/remy/nodemon&#34;&gt;Nodemon&lt;/a&gt;. It watches for any changes in your node.js app and automatically restarts the server. Once installed, instead of &lt;code&gt;node app.js&lt;/code&gt; use &lt;code&gt;nodemon app.js&lt;/code&gt;. It will save you a lot of time in the long run, because you won&#39;t need to manually restart the server each time you make a small change in code. To install, run &lt;code&gt;sudo npm install -g nodemon&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Obtain API Keys and change configs if needed After completing step 1 and locally installing MongoDB, you should be able to access the application through a web browser and use local user accounts. However, certain functions like API integrations may not function correctly until you obtain specific keys from service providers. The keys provided in the project serve as placeholders, and you can retain them for features you are not currently utilizing. To incorporate the acquired keys into the application, you have two options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Set environment variables in your console session: Alternatively, you can set the keys as environment variables directly through the command prompt. For instance, in bash, you can use the &lt;code&gt;export&lt;/code&gt; command like this: &lt;code&gt;export FACEBOOK_SECRET=xxxxxx&lt;/code&gt;. This method is considered a better practice as it reduces the risk of accidentally including your secrets in a code repository.&lt;/li&gt; &#xA; &lt;li&gt;Replace the keys in the &lt;code&gt;.env.example&lt;/code&gt; file: Open the &lt;code&gt;.env.example&lt;/code&gt; file and update the placeholder keys with the newly acquired ones. This method has the risk of accidental checking-in of your secrets to code repos.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;What to get and configure:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;SMTP&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For user workflows for reset password and verify email&lt;/li&gt; &#xA;   &lt;li&gt;For contact form processing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;reCAPTCHA&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For contact form submission&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OAuth for social logins (Sign in with / Login with)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Depending on your application need, obtain keys from Google, Facebook, Twitter, LinkedIn, Twitch, GitHub, Snapchat. You don&#39;t have to obtain valid keys for any provider that you don&#39;t need. Just remove the buttons and links in the login and account pug views before your demo.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;API keys for service providers in the API Examples if you are planning to use them.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MongoDB Atlas&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you are using MongoDB Atlas instead of a local db, set the MONGODB_URI to your db URI (including your db user/password).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Email address&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set SITE_CONTACT_EMAIL as your incoming email address for messages sent to you thru the contact form.&lt;/li&gt; &#xA;   &lt;li&gt;Set TRANSACTION_EMAIL as the &#34;From&#34; address for emails sent to users thru the lost password or email verification emails to users. You may set this to the same address as SITE_CONTACT_EMAIL.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngrok and HTTPS If you want to use some API that needs HTTPS to work (for example Pinterest or Facebook), you will need to download &lt;a href=&#34;https://ngrok.com/&#34;&gt;ngrok&lt;/a&gt;. Start ngrok, set your BASE_URL to the forwarding address (i.e &lt;code&gt;https://3ccb-1234-abcd.ngrok-free.app&lt;/code&gt; ), and use the forwarding address to access your application. If you are using a proxy like ngrok, you may get a CSRF mismatch error if you try to access the app at &lt;code&gt;http://localhost:8080&lt;/code&gt; instead of the https://...ngrok-free.app address.&lt;/p&gt; &lt;p&gt;After installing or downloading the standalone ngrok client you can start ngrok to intercept the data exchanged on port 8080 with &lt;code&gt;./ngrok http 8080&lt;/code&gt; in Linux or &lt;code&gt;ngrok http 8080&lt;/code&gt; in Windows.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Develop your application and customize the experience&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#how-it-works-mini-guides&#34;&gt;How It Works&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Optional - deploy to production See:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#deployment&#34;&gt;Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sahat/hackathon-starter/raw/master/prod-checklist.md&#34;&gt;prod-checklist.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Obtaining API Keys&lt;/h1&gt; &#xA;&lt;p&gt;You will need to obtain appropriate credentials (Client ID, Client Secret, API Key, or Username &amp;amp; Password) for API and service provides which you need. See Step 2 in the Getting started section for more info.&lt;/p&gt; &#xA;&lt;h2&gt;SMTP&lt;/h2&gt; &#xA;&lt;p&gt;Obtain SMTP credentials from a provider for transactional emails. Set the SMTP_USER, SMTP_PASSWORD, and SMTP_HOST environment variables accordingly. When picking the smtp host, keep in mind that the app is configured to use secure SMTP transmissions over port 465 out of the box. You have the flexibility to select any provider that suits your needs or take advantage of one of the following providers, each offering a free tier for your convenience.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Provider&lt;/th&gt; &#xA;   &lt;th&gt;Free Tier&lt;/th&gt; &#xA;   &lt;th&gt;Website&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SendGrid&lt;/td&gt; &#xA;   &lt;td&gt;100 emails/day for free&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sendgrid.com&#34;&gt;https://sendgrid.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SMTP2Go&lt;/td&gt; &#xA;   &lt;td&gt;1000 emails/month for free&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.smtp2go.com&#34;&gt;https://www.smtp2go.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Brevo&lt;/td&gt; &#xA;   &lt;td&gt;300 emails/day for free&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.brevo.com&#34;&gt;https://www.brevo.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/a/ad/RecaptchaLogo.svg/200px-RecaptchaLogo.svg.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://www.google.com/recaptcha/admin&#34; target=&#34;_blank&#34;&gt;Google reCAPTCHA Admin Console&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter your application&#39;s name as the &lt;strong&gt;Label&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Choose &lt;strong&gt;reCAPTCHA v2&lt;/strong&gt;, &lt;strong&gt;&#34;I&#39;m not a robot&#34; Checkbox&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;em&gt;localhost&lt;/em&gt; as the domain. You can have other domains added in addition to &lt;em&gt;localhost&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Accept the terms and submit the form&lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;em&gt;Site Key&lt;/em&gt; and the &lt;em&gt;Secret key&lt;/em&gt; into &lt;code&gt;.env&lt;/code&gt;. These keys will be accessible under Settings, reCAPTCHA keys drop down if you need them again later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Google_2015_logo.svg/1000px-Google_2015_logo.svg.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://cloud.google.com/console/project&#34; target=&#34;_blank&#34;&gt;Google Cloud Console&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on the &lt;strong&gt;Create Project&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;em&gt;Project Name&lt;/em&gt;, then click on &lt;strong&gt;Create&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Then click on &lt;em&gt;APIs &amp;amp; auth&lt;/em&gt; in the sidebar and select &lt;em&gt;API&lt;/em&gt; tab&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;strong&gt;Google+ API&lt;/strong&gt; under &lt;em&gt;Social APIs&lt;/em&gt;, then click &lt;strong&gt;Enable API&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;strong&gt;Google Drive API&lt;/strong&gt; under &lt;em&gt;G Suite&lt;/em&gt;, then click &lt;strong&gt;Enable API&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;strong&gt;Google Sheets API&lt;/strong&gt; under &lt;em&gt;G Suite&lt;/em&gt;, then click &lt;strong&gt;Enable API&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Next, under &lt;em&gt;APIs &amp;amp; auth&lt;/em&gt; in the sidebar click on &lt;em&gt;Credentials&lt;/em&gt; tab&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;strong&gt;Create new Client ID&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;em&gt;Web Application&lt;/em&gt; and click on &lt;strong&gt;Configure Consent Screen&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fill out the required fields then click on &lt;strong&gt;Save&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;In the &lt;em&gt;Create Client ID&lt;/em&gt; modal dialog:&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Application Type&lt;/strong&gt;: Web Application&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Authorized Javascript origins&lt;/strong&gt;: set to your BASE_URL value (i.e. &lt;code&gt;http://localhost:8080&lt;/code&gt;, etc)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Authorized redirect URI&lt;/strong&gt;: set to your BASE_URL value followed by /auth/google/callback (i.e. &lt;code&gt;http://localhost:8080/auth/google/callback&lt;/code&gt; )&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;strong&gt;Create Client ID&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Copy and paste &lt;em&gt;Client ID&lt;/em&gt; and &lt;em&gt;Client secret&lt;/em&gt; keys into &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://seeklogo.com/images/S/snapchat-logo-F20CDB1199-seeklogo.com.png&#34; height=&#34;90&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://kit.snapchat.com/portal&#34; target=&#34;_blank&#34;&gt;Snap Kit Developer Portal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on the &lt;strong&gt;+&lt;/strong&gt; button to create an app&lt;/li&gt; &#xA; &lt;li&gt;Enter a name for your app&lt;/li&gt; &#xA; &lt;li&gt;Enable the scopes that you will want to use in your app&lt;/li&gt; &#xA; &lt;li&gt;Click on the &lt;strong&gt;Continue&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Find the &lt;strong&gt;Kits&lt;/strong&gt; section and make sure that &lt;strong&gt;Login Kit&lt;/strong&gt; is enabled&lt;/li&gt; &#xA; &lt;li&gt;Find the &lt;strong&gt;Redirect URLs&lt;/strong&gt; section, click the &lt;strong&gt;+ Add&lt;/strong&gt; button, and enter your BASE_URL value followed by /auth/snapchat/callback (i.e. &lt;code&gt;http://localhost:8080/auth/snapchat/callback&lt;/code&gt; )&lt;/li&gt; &#xA; &lt;li&gt;Find the &lt;strong&gt;Development Environment&lt;/strong&gt; section. Click the &lt;strong&gt;Generate&lt;/strong&gt; button next to the &lt;em&gt;Confidential OAuth2 Client&lt;/em&gt; heading within it.&lt;/li&gt; &#xA; &lt;li&gt;Copy and paste the generated &lt;em&gt;Private Key&lt;/em&gt; and &lt;em&gt;OAuth2 Client ID&lt;/em&gt; keys into &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;OAuth2 Client ID&lt;/em&gt; is &lt;strong&gt;SNAPCHAT_ID&lt;/strong&gt;, &lt;em&gt;Private Key&lt;/em&gt; is &lt;strong&gt;SNAPCHAT_SECRET&lt;/strong&gt; in &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To prepare the app for submission, fill out the rest of the required fields: &lt;em&gt;Category&lt;/em&gt;, &lt;em&gt;Description&lt;/em&gt;, &lt;em&gt;Privacy Policy Url&lt;/em&gt;, and &lt;em&gt;App Icon&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://en.facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png&#34; width=&#34;90&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://developers.facebook.com/&#34; target=&#34;_blank&#34;&gt;Facebook Developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;My Apps&lt;/strong&gt;, then select *&lt;em&gt;Add a New App&lt;/em&gt; from the dropdown menu&lt;/li&gt; &#xA; &lt;li&gt;Enter a new name for your app&lt;/li&gt; &#xA; &lt;li&gt;Click on the &lt;strong&gt;Create App ID&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Find the Facebook Login Product and click on &lt;strong&gt;Facebook Login&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Instead of going through their Quickstart, click on &lt;strong&gt;Settings&lt;/strong&gt; for your app in the top left corner&lt;/li&gt; &#xA; &lt;li&gt;Copy and paste &lt;em&gt;App ID&lt;/em&gt; and &lt;em&gt;App Secret&lt;/em&gt; keys into &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;App ID&lt;/em&gt; is &lt;strong&gt;FACEBOOK_ID&lt;/strong&gt;, &lt;em&gt;App Secret&lt;/em&gt; is &lt;strong&gt;FACEBOOK_SECRET&lt;/strong&gt; in &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;localhost&lt;/code&gt; under &lt;em&gt;App Domains&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Choose a &lt;strong&gt;Category&lt;/strong&gt; that best describes your app&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;strong&gt;+ Add Platform&lt;/strong&gt; and select &lt;strong&gt;Website&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter your BASE_URL value (i.e. &lt;code&gt;http://localhost:8080&lt;/code&gt;, etc) under &lt;em&gt;Site URL&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on the &lt;em&gt;Settings&lt;/em&gt; tab in the left nav under Facebook Login&lt;/li&gt; &#xA; &lt;li&gt;Enter your BASE_URL value followed by /auth/facebook/callback (i.e. &lt;code&gt;http://localhost:8080/auth/facebook/callback&lt;/code&gt; ) under Valid OAuth redirect URIs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; After a successful sign-in with Facebook, a user will be redirected back to the home page with appended hash &lt;code&gt;#_=_&lt;/code&gt; in the URL. It is &lt;em&gt;not&lt;/em&gt; a bug. See this &lt;a href=&#34;https://stackoverflow.com/questions/7131909/facebook-callback-appends-to-return-url&#34;&gt;Stack Overflow&lt;/a&gt; discussion for ways to handle it.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://github.githubassets.com/images/modules/logos_page/Octocat.png&#34; width=&#34;110&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://github.com/settings/profile&#34; target=&#34;_blank&#34;&gt;Account Settings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Developer settings&lt;/strong&gt; from the sidebar&lt;/li&gt; &#xA; &lt;li&gt;Then click on &lt;strong&gt;OAuth Apps&lt;/strong&gt; and then on &lt;strong&gt;Register new application&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;em&gt;Application Name&lt;/em&gt; and &lt;em&gt;Homepage URL&lt;/em&gt;. Enter your BASE_URL value (i.e. &lt;code&gt;http://localhost:8080&lt;/code&gt;, etc) as the homepage URL.&lt;/li&gt; &#xA; &lt;li&gt;For &lt;em&gt;Authorization Callback URL&lt;/em&gt;: your BASE_URL value followed by /auth/github/callback (i.e. &lt;code&gt;http://localhost:8080/auth/github/callback&lt;/code&gt; )&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Register application&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now copy and paste &lt;em&gt;Client ID&lt;/em&gt; and &lt;em&gt;Client Secret&lt;/em&gt; keys into &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://seeklogo.com/images/T/twitter-2012-positive-logo-916EDF1309-seeklogo.com.png&#34; width=&#34;90&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sign in at &lt;a href=&#34;https://apps.twitter.com/&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://apps.twitter.com&#34;&gt;https://apps.twitter.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Create a new application&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter your application name, website and description. Set the website as your BASE_URL value (i.e. &lt;code&gt;http://localhost:8080&lt;/code&gt;, etc).&lt;/li&gt; &#xA; &lt;li&gt;For &lt;strong&gt;Callback URL&lt;/strong&gt;: your BASE_URL value followed by /auth/twitter/callback (i.e. &lt;code&gt;http://localhost:8080/auth/twitter/callback&lt;/code&gt; )&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;strong&gt;Settings&lt;/strong&gt; tab&lt;/li&gt; &#xA; &lt;li&gt;Under &lt;em&gt;Application Type&lt;/em&gt; select &lt;strong&gt;Read and Write&lt;/strong&gt; access&lt;/li&gt; &#xA; &lt;li&gt;Check the box &lt;strong&gt;Allow this application to be used to Sign in with Twitter&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Update this Twitter&#39;s applications settings&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy and paste &lt;em&gt;Consumer Key&lt;/em&gt; and &lt;em&gt;Consumer Secret&lt;/em&gt; keys into &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://content.linkedin.com/content/dam/me/business/en-us/amp/brand-site/v2/bg/LI-Logo.svg.original.svg?sanitize=true&#34; width=&#34;200&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sign in at &lt;a href=&#34;https://developer.linkedin.com/&#34; target=&#34;_blank&#34;&gt;LinkedIn Developer Network&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;From the account name dropdown menu select &lt;strong&gt;API Keys&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;It may ask you to sign in once again&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;+ Add New Application&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Fill out all the &lt;em&gt;required&lt;/em&gt; fields&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OAuth 2.0 Redirect URLs&lt;/strong&gt;: your BASE_URL value followed by /auth/linkedin/callback (i.e. &lt;code&gt;http://localhost:8080/auth/linkedin/callback&lt;/code&gt; )&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;JavaScript API Domains&lt;/strong&gt;: your BASE_URL value (i.e. &lt;code&gt;http://localhost:8080&lt;/code&gt;, etc).&lt;/li&gt; &#xA; &lt;li&gt;For &lt;strong&gt;Default Application Permissions&lt;/strong&gt; make sure at least the following is checked:&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;r_basicprofile&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Finish by clicking &lt;strong&gt;Add Application&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Copy and paste &lt;em&gt;API Key&lt;/em&gt; and &lt;em&gt;Secret Key&lt;/em&gt; keys into &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;API Key&lt;/em&gt; is your &lt;strong&gt;clientID&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Secret Key&lt;/em&gt; is your &lt;strong&gt;clientSecret&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://stripe.com/img/about/logos/logos/black@2x.png&#34; width=&#34;180&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stripe.com/&#34; target=&#34;_blank&#34;&gt;Sign up&lt;/a&gt; or log into your &lt;a href=&#34;https://manage.stripe.com&#34; target=&#34;_blank&#34;&gt;dashboard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on your profile and click on Account Settings&lt;/li&gt; &#xA; &lt;li&gt;Then click on &lt;strong&gt;API Keys&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;strong&gt;Secret Key&lt;/strong&gt;. and add this into &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://www.paypalobjects.com/webstatic/mktg/logo/pp_cc_mark_111x69.jpg&#34; width=&#34;150&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://developer.paypal.com&#34; target=&#34;_blank&#34;&gt;PayPal Developer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Log in to your PayPal account&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Applications &amp;gt; Create App&lt;/strong&gt; in the navigation bar&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;em&gt;Application Name&lt;/em&gt;, then click &lt;strong&gt;Create app&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy and paste &lt;em&gt;Client ID&lt;/em&gt; and &lt;em&gt;Secret&lt;/em&gt; keys into &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;App ID&lt;/em&gt; is &lt;strong&gt;client_id&lt;/strong&gt;, &lt;em&gt;App Secret&lt;/em&gt; is &lt;strong&gt;client_secret&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Change &lt;strong&gt;host&lt;/strong&gt; to api.paypal.com if you want to test against production and use the live credentials&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;http://33.media.tumblr.com/ffaf0075be879b3ab0b87f0b8bcc6814/tumblr_inline_n965bkOymr1qzxhga.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://developer.foursquare.com&#34; target=&#34;_blank&#34;&gt;Foursquare for Developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;strong&gt;My Apps&lt;/strong&gt; in the top menu&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;strong&gt;Create A New App&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;em&gt;App Name&lt;/em&gt;, &lt;em&gt;Welcome page url&lt;/em&gt;,&lt;/li&gt; &#xA; &lt;li&gt;For &lt;strong&gt;Redirect URI&lt;/strong&gt;: your BASE_URL value followed by /auth/foursquare/callback (i.e. &lt;code&gt;http://localhost:8080/auth/foursquare/callback&lt;/code&gt; )&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Save Changes&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy and paste &lt;em&gt;Client ID&lt;/em&gt; and &lt;em&gt;Client Secret&lt;/em&gt; keys into &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;http://img4.wikia.nocookie.net/__cb20130520163346/logopedia/images/8/8d/Tumblr_logo_by_x_1337_x-d5ikwpp.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;http://www.tumblr.com/oauth/apps&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://www.tumblr.com/oauth/apps&#34;&gt;http://www.tumblr.com/oauth/apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Once signed in, click &lt;strong&gt;+Register application&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fill in all the details&lt;/li&gt; &#xA; &lt;li&gt;For &lt;strong&gt;Default Callback URL&lt;/strong&gt;: your BASE_URL value followed by /auth/tumblr/callback (i.e. &lt;code&gt;http://localhost:8080/auth/tumblr/callback&lt;/code&gt; )&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;✔Register&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy and paste &lt;em&gt;OAuth consumer key&lt;/em&gt; and &lt;em&gt;OAuth consumer secret&lt;/em&gt; keys into &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/a/ae/Steam_logo.svg?sanitize=true&#34; width=&#34;200&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;http://steamcommunity.com/dev/apikey&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://steamcommunity.com/dev/apikey&#34;&gt;http://steamcommunity.com/dev/apikey&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sign in with your existing Steam account&lt;/li&gt; &#xA; &lt;li&gt;Enter your &lt;em&gt;Domain Name&lt;/em&gt; based on your BASE_URL, then and click &lt;strong&gt;Register&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy and paste &lt;em&gt;Key&lt;/em&gt; into &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://www.freepnglogos.com/uploads/twitch-logo-image-hd-31.png&#34; height=&#34;90&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit the &lt;a href=&#34;https://dev.twitch.tv/dashboard/apps&#34; target=&#34;_blank&#34;&gt;Twitch developer dashboard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If prompted, authorize the dashboard to access your twitch account&lt;/li&gt; &#xA; &lt;li&gt;In the Console, click on Register Your Application&lt;/li&gt; &#xA; &lt;li&gt;Enter the name of your application&lt;/li&gt; &#xA; &lt;li&gt;Use OAuth Redirect URLs enter your BASE_URL value followed by /auth/twitch/callback (i.e. &lt;code&gt;http://localhost:8080/auth/twitch/callback&lt;/code&gt; )&lt;/li&gt; &#xA; &lt;li&gt;Set Category to Website Integration and press the Create button&lt;/li&gt; &#xA; &lt;li&gt;After the application has been created, click on the Manage button&lt;/li&gt; &#xA; &lt;li&gt;Copy and paste &lt;em&gt;Client ID&lt;/em&gt; into &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If there is no Client Secret displayed, click on the New Secret button and then copy and paste the &lt;em&gt;Client secret&lt;/em&gt; into &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/c/c7/HERE_logo.svg?sanitize=true&#34; width=&#34;90&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://developer.here.com&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://developer.here.com&#34;&gt;https://developer.here.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sign up and create a Freemium project&lt;/li&gt; &#xA; &lt;li&gt;Create JAVASCRIPT/REST credentials. Copy and paste the APP_ID and APP into &lt;code&gt;.env&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Note that these credentials are available on the client-side, and you need to create a domain whitelist for your app credentials when you are publicly launching the app.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://s3.amazonaws.com/ahoy-assets.twilio.com/global/images/wordmark.svg?sanitize=true&#34; width=&#34;200&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://www.twilio.com/try-twilio&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://www.twilio.com/try-twilio&#34;&gt;https://www.twilio.com/try-twilio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sign up for an account.&lt;/li&gt; &#xA; &lt;li&gt;Once logged into the dashboard, expand the link &#39;show api credentials&#39;&lt;/li&gt; &#xA; &lt;li&gt;Copy your Account Sid and Auth Token&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;img src=&#34;https://www.intuit.com/content/dam/intuit/intuitcom/company/images/logo-intuit-quickbooks-preferred.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://developer.intuit.com/app/developer/qbo/docs/get-started&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://developer.intuit.com/app/developer/qbo/docs/get-started&#34;&gt;https://developer.intuit.com/app/developer/qbo/docs/get-started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use the Sign Up option in the upper right corner of the screen (navbar) to get a free developer account and a sandbox company.&lt;/li&gt; &#xA; &lt;li&gt;Create a new app by going to your Dashboard using the My Apps option in the top nav bar or by going to &lt;a href=&#34;https://developer.intuit.com/app/developer/myapps&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://developer.intuit.com/app/developer/myapps&#34;&gt;https://developer.intuit.com/app/developer/myapps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;In your App, under Development, Keys &amp;amp; OAuth (right nav), find the Client ID and Client Secret for your &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project Structure&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;config&lt;/strong&gt;/passport.js&lt;/td&gt; &#xA;   &lt;td&gt;Passport Local and OAuth strategies, plus login middleware.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;controllers&lt;/strong&gt;/api.js&lt;/td&gt; &#xA;   &lt;td&gt;Controller for /api route and all api examples.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;controllers&lt;/strong&gt;/contact.js&lt;/td&gt; &#xA;   &lt;td&gt;Controller for contact form.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;controllers&lt;/strong&gt;/home.js&lt;/td&gt; &#xA;   &lt;td&gt;Controller for home page (index).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;controllers&lt;/strong&gt;/user.js&lt;/td&gt; &#xA;   &lt;td&gt;Controller for user account management.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;models&lt;/strong&gt;/User.js&lt;/td&gt; &#xA;   &lt;td&gt;Mongoose schema and model for User.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;public&lt;/strong&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;Static assets (fonts, css, js, img).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;public&lt;/strong&gt;/&lt;strong&gt;js&lt;/strong&gt;/application.js&lt;/td&gt; &#xA;   &lt;td&gt;Specify client-side JavaScript dependencies.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;public&lt;/strong&gt;/&lt;strong&gt;js&lt;/strong&gt;/app.js&lt;/td&gt; &#xA;   &lt;td&gt;Place your client-side JavaScript here.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;public&lt;/strong&gt;/&lt;strong&gt;css&lt;/strong&gt;/main.scss&lt;/td&gt; &#xA;   &lt;td&gt;Main stylesheet for your app.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;views/account&lt;/strong&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;Templates for &lt;em&gt;login, password reset, signup, profile&lt;/em&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;views/api&lt;/strong&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;Templates for API Examples.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;views/partials&lt;/strong&gt;/flash.pug&lt;/td&gt; &#xA;   &lt;td&gt;Error, info and success flash notifications.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;views/partials&lt;/strong&gt;/header.pug&lt;/td&gt; &#xA;   &lt;td&gt;Navbar partial template.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;views/partials&lt;/strong&gt;/footer.pug&lt;/td&gt; &#xA;   &lt;td&gt;Footer partial template.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;views&lt;/strong&gt;/layout.pug&lt;/td&gt; &#xA;   &lt;td&gt;Base template.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;views&lt;/strong&gt;/home.pug&lt;/td&gt; &#xA;   &lt;td&gt;Home page template.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.dockerignore&lt;/td&gt; &#xA;   &lt;td&gt;Folder and files ignored by docker usage.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.env.example&lt;/td&gt; &#xA;   &lt;td&gt;Your API keys, tokens, passwords and database URI.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.eslintrc&lt;/td&gt; &#xA;   &lt;td&gt;Rules for eslint linter.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.gitignore&lt;/td&gt; &#xA;   &lt;td&gt;Folder and files ignored by git.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;app.js&lt;/td&gt; &#xA;   &lt;td&gt;The main application file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;docker-compose.yml&lt;/td&gt; &#xA;   &lt;td&gt;Docker compose configuration file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dockerfile&lt;/td&gt; &#xA;   &lt;td&gt;Docker configuration file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;package.json&lt;/td&gt; &#xA;   &lt;td&gt;NPM dependencies.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;package-lock.json&lt;/td&gt; &#xA;   &lt;td&gt;Contains exact versions of NPM dependencies in package.json.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There is no preference for how you name or structure your views. You could place all your templates in a top-level &lt;code&gt;views&lt;/code&gt; directory without having a nested folder structure if that makes things easier for you. Just don&#39;t forget to update &lt;code&gt;extends ../layout&lt;/code&gt; and corresponding &lt;code&gt;res.render()&lt;/code&gt; paths in controllers.&lt;/p&gt; &#xA;&lt;h2&gt;List of Packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@fortawesome/fontawesome-free&lt;/td&gt; &#xA;   &lt;td&gt;Symbol and Icon library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@googleapis/drive&lt;/td&gt; &#xA;   &lt;td&gt;Google Drive API integration library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@googleapis/sheets&lt;/td&gt; &#xA;   &lt;td&gt;Google Sheets API integration library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@ladjs/bootstrap-social&lt;/td&gt; &#xA;   &lt;td&gt;Social buttons library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@lob/lob-typescript-sdk&lt;/td&gt; &#xA;   &lt;td&gt;Lob (USPS mailing / physical mailing service) library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@node-rs/bcrypt&lt;/td&gt; &#xA;   &lt;td&gt;Library for hashing and salting user passwords.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@octokit/rest&lt;/td&gt; &#xA;   &lt;td&gt;GitHub API library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@passport-js/passport-twitter&lt;/td&gt; &#xA;   &lt;td&gt;Twitter login support (OAuth 2).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@popperjs/core&lt;/td&gt; &#xA;   &lt;td&gt;Frontend js library for poppers and tooltips.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;axios&lt;/td&gt; &#xA;   &lt;td&gt;HTTP client.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;body-parser&lt;/td&gt; &#xA;   &lt;td&gt;Node.js body parsing middleware.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bootstrap&lt;/td&gt; &#xA;   &lt;td&gt;CSS Framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;chai&lt;/td&gt; &#xA;   &lt;td&gt;BDD/TDD assertion library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cheerio&lt;/td&gt; &#xA;   &lt;td&gt;Scrape web pages using jQuery-style syntax.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;compression&lt;/td&gt; &#xA;   &lt;td&gt;Node.js compression middleware.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;connect-mongo&lt;/td&gt; &#xA;   &lt;td&gt;MongoDB session store for Express.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dotenv&lt;/td&gt; &#xA;   &lt;td&gt;Loads environment variables from .env file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;errorhandler&lt;/td&gt; &#xA;   &lt;td&gt;Development-only error handler middleware.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;eslint&lt;/td&gt; &#xA;   &lt;td&gt;Linter JavaScript.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;eslint-config-airbnb-base&lt;/td&gt; &#xA;   &lt;td&gt;Configuration eslint by airbnb.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;eslint-plugin-chai-friendly&lt;/td&gt; &#xA;   &lt;td&gt;Makes eslint friendly towards Chai.js &#39;expect&#39; and &#39;should&#39; statements.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;eslint-plugin-import&lt;/td&gt; &#xA;   &lt;td&gt;ESLint plugin with rules that help validate proper imports.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;express&lt;/td&gt; &#xA;   &lt;td&gt;Node.js web framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;express-flash&lt;/td&gt; &#xA;   &lt;td&gt;Provides flash messages for Express.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;express-rate-limit&lt;/td&gt; &#xA;   &lt;td&gt;Rate limiting middleware for abuse protection.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;express-session&lt;/td&gt; &#xA;   &lt;td&gt;Simple session middleware for Express.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;husky&lt;/td&gt; &#xA;   &lt;td&gt;Git hook manager to automate tasks with git.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jquery&lt;/td&gt; &#xA;   &lt;td&gt;Front-end JS library to interact with HTML elements.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lastfm&lt;/td&gt; &#xA;   &lt;td&gt;Last.fm API library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lint-stage&lt;/td&gt; &#xA;   &lt;td&gt;Utility to lint files staged by git.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lob&lt;/td&gt; &#xA;   &lt;td&gt;Lob API library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lodash&lt;/td&gt; &#xA;   &lt;td&gt;A utility library for working with arrays, numbers, objects, strings.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lusca&lt;/td&gt; &#xA;   &lt;td&gt;CSRF middleware.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mailchecker&lt;/td&gt; &#xA;   &lt;td&gt;Verifies that an email address is valid and not a disposable address.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mocha&lt;/td&gt; &#xA;   &lt;td&gt;Test framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;moment&lt;/td&gt; &#xA;   &lt;td&gt;Parse, validate, compute dates and times.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mongodbMemoryServer&lt;/td&gt; &#xA;   &lt;td&gt;MongoDB in memory (for running tests without a running db).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mongoose&lt;/td&gt; &#xA;   &lt;td&gt;MongoDB ODM.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;morgan&lt;/td&gt; &#xA;   &lt;td&gt;HTTP request logger middleware for node.js.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;multer&lt;/td&gt; &#xA;   &lt;td&gt;Node.js middleware for handling &lt;code&gt;multipart/form-data&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nodemailer&lt;/td&gt; &#xA;   &lt;td&gt;Node.js library for sending emails.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nyc&lt;/td&gt; &#xA;   &lt;td&gt;Coverage test.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;passport&lt;/td&gt; &#xA;   &lt;td&gt;Simple and elegant authentication library for node.js.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;passport-facebook&lt;/td&gt; &#xA;   &lt;td&gt;Sign-in with Facebook plugin.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;passport-github2&lt;/td&gt; &#xA;   &lt;td&gt;Sign-in with GitHub plugin.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;passport-google-oauth&lt;/td&gt; &#xA;   &lt;td&gt;Sign-in with Google plugin.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;passport-linkedin-oauth2&lt;/td&gt; &#xA;   &lt;td&gt;Sign-in with LinkedIn plugin.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;passport-local&lt;/td&gt; &#xA;   &lt;td&gt;Sign-in with Username and Password plugin.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;passport-oauth&lt;/td&gt; &#xA;   &lt;td&gt;Allows you to set up your own OAuth 1.0a and OAuth 2.0 strategies.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;passport-oauth2-refresh&lt;/td&gt; &#xA;   &lt;td&gt;A library to refresh OAuth 2.0 access tokens using refresh tokens.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;passport-snapchat&lt;/td&gt; &#xA;   &lt;td&gt;Sign-in with Snapchat plugin.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;passport-steam-openid&lt;/td&gt; &#xA;   &lt;td&gt;OpenID 2.0 Steam plugin.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;patch-package&lt;/td&gt; &#xA;   &lt;td&gt;Fix broken node modules ahead of fixes by maintainers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;paypal-rest-sdk&lt;/td&gt; &#xA;   &lt;td&gt;PayPal APIs library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pug&lt;/td&gt; &#xA;   &lt;td&gt;Template engine for Express.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sass&lt;/td&gt; &#xA;   &lt;td&gt;Sass compiler to generate CSS with superpowers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sinon&lt;/td&gt; &#xA;   &lt;td&gt;Test spies, stubs and mocks for JavaScript.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stripe&lt;/td&gt; &#xA;   &lt;td&gt;Offical Stripe API library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;supertest&lt;/td&gt; &#xA;   &lt;td&gt;HTTP assertion library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;twilio&lt;/td&gt; &#xA;   &lt;td&gt;Twilio API library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;twitch-passport&lt;/td&gt; &#xA;   &lt;td&gt;Sign-in with Twitch plugin.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;validator&lt;/td&gt; &#xA;   &lt;td&gt;A library of string validators and sanitizers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Useful Tools and Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.javascripting.com/&#34;&gt;JavaScripting&lt;/a&gt; - The Database of JavaScript Libraries&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://html-to-pug.com/&#34;&gt;HTML to Pug converter&lt;/a&gt; - HTML to PUG is a free online converter helping you to convert HTML files to pug syntax in real-time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.javascriptoo.com/&#34;&gt;JavascriptOO&lt;/a&gt; - A directory of JavaScript libraries with examples, CDN links, statistics, and videos.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://realfavicongenerator.net/&#34;&gt;Favicon Generator&lt;/a&gt; - Generate favicons for PC, Android, iOS, Windows 8.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Recommended Design Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://codeguide.co/&#34;&gt;Code Guide&lt;/a&gt; - Standards for developing flexible, durable, and sustainable HTML and CSS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://bootsnipp.com/&#34;&gt;Bootsnipp&lt;/a&gt; - Code snippets for Bootstrap.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bootstrapzero.com&#34;&gt;Bootstrap Zero&lt;/a&gt; - Free Bootstrap templates themes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://todc.github.io/todc-bootstrap/&#34;&gt;Google Bootstrap&lt;/a&gt; - Google-styled theme for Bootstrap.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fontawesome.com&#34;&gt;Font Awesome Icons&lt;/a&gt; - It&#39;s already part of the Hackathon Starter, so use this page as a reference.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://clrs.cc&#34;&gt;Colors&lt;/a&gt; - A nicer color palette for the web.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tympanus.net/Development/CreativeButtons/&#34;&gt;Creative Button Styles&lt;/a&gt; - awesome button styles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tympanus.net/Development/CreativeLinkEffects/&#34;&gt;Creative Link Effects&lt;/a&gt; - Beautiful link effects in CSS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://codepen.io/andreasstorm/pen/pyjEh&#34;&gt;Medium Scroll Effect&lt;/a&gt; - Fade in/out header background image as you scroll.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/btmills/geopattern&#34;&gt;GeoPattern&lt;/a&gt; - SVG background pattern generator.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qrohlf/trianglify&#34;&gt;Trianglify&lt;/a&gt; - SVG low-poly background pattern generator.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Recommended Node.js Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/remy/nodemon&#34;&gt;Nodemon&lt;/a&gt; - Automatically restart Node.js server on code changes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bluesmoon/node-geoip&#34;&gt;geoip-lite&lt;/a&gt; - Geolocation coordinates from IP address.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://filesizejs.com/&#34;&gt;Filesize.js&lt;/a&gt; - Pretty file sizes, e.g. &lt;code&gt;filesize(265318); // &#34;265.32 kB&#34;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://numeraljs.com&#34;&gt;Numeral.js&lt;/a&gt; - Library for formatting and manipulating numbers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lovell/sharp&#34;&gt;sharp&lt;/a&gt; - Node.js module for resizing JPEG, PNG, WebP and TIFF images.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Recommended Client-side Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.idangero.us/framework7/&#34;&gt;Framework7&lt;/a&gt; - Full Featured HTML Framework For Building iOS7 Apps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://instantclick.io&#34;&gt;InstantClick&lt;/a&gt; - Makes your pages load instantly by pre-loading them on mouse hover.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstacruz/nprogress&#34;&gt;NProgress.js&lt;/a&gt; - Slim progress bars like on YouTube and Medium.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/IanLunn/Hover&#34;&gt;Hover&lt;/a&gt; - Awesome CSS3 animations on mouse hover.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dimsemenov.com/plugins/magnific-popup/&#34;&gt;Magnific Popup&lt;/a&gt; - Responsive jQuery Lightbox Plugin.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.hubspot.com/offline/docs/welcome/&#34;&gt;Offline.js&lt;/a&gt; - Detect when user&#39;s internet connection goes offline.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://alertifyjs.com&#34;&gt;Alertify.js&lt;/a&gt; - Sweet looking alerts and browser dialogs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://selectize.github.io/selectize.js&#34;&gt;selectize.js&lt;/a&gt; - Styleable select elements and input tags.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.hubspot.com/drop/docs/welcome/&#34;&gt;drop.js&lt;/a&gt; - Powerful Javascript and CSS library for creating dropdowns and other floating displays.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jlmakes/scrollReveal.js&#34;&gt;scrollReveal.js&lt;/a&gt; - Declarative on-scroll reveal animations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pro Tips&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Need to find a specific object inside an Array? Use &lt;a href=&#34;http://lodash.com/docs#find&#34;&gt;_.find&lt;/a&gt; function from Lodash. For example, this is how you would retrieve a Twitter token from database: &lt;code&gt;var token = _.find(req.user.tokens, { kind: &#39;twitter&#39; });&lt;/code&gt;, where 1st parameter is an array, and a 2nd parameter is an object to search for.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Why do I get &lt;code&gt;403 Error: Forbidden&lt;/code&gt; when submitting a form?&lt;/h3&gt; &#xA;&lt;p&gt;You need to add the following hidden input element to your form. This has been added in the &lt;a href=&#34;https://github.com/sahat/hackathon-starter/pull/40&#34;&gt;pull request #40&lt;/a&gt; as part of the CSRF protection.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;input(type=&#39;hidden&#39;, name=&#39;_csrf&#39;, value=_csrf)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It is now possible to whitelist certain URLs. In other words, you can specify a list of routes that should bypass the CSRF verification check.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note 2:&lt;/strong&gt; To whitelist dynamic URLs use regular expression tests inside the CSRF middleware to see if &lt;code&gt;req.originalUrl&lt;/code&gt; matches your desired pattern.&lt;/p&gt; &#xA;&lt;h3&gt;I am getting MongoDB Connection Error, how do I fix it?&lt;/h3&gt; &#xA;&lt;p&gt;That&#39;s a custom error message defined in &lt;code&gt;app.js&lt;/code&gt; to indicate that there was a problem connecting to MongoDB:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;mongoose.connection.on(&#39;error&#39;, (err) =&amp;gt; {&#xA;  console.error(err);&#xA;  console.log(&#39;%s MongoDB connection error. Please make sure MongoDB is running.&#39;, chalk.red(&#39;✗&#39;));&#xA;  process.exit();&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You need to have a MongoDB server running before launching &lt;code&gt;app.js&lt;/code&gt;. You can download MongoDB &lt;a href=&#34;https://www.mongodb.com/download-center/community&#34;&gt;here&lt;/a&gt;, or install it via a package manager. Windows users, read &lt;a href=&#34;https://docs.mongodb.org/manual/tutorial/install-mongodb-on-windows/&#34;&gt;Install MongoDB on Windows&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; If you are always connected to the internet, you could just use &lt;a href=&#34;https://www.mongodb.com/cloud/atlas&#34;&gt;MongoDB Atlas&lt;/a&gt; instead of downloading and installing MongoDB locally. You will only need to update database credentials in &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;I get an error when I deploy my app, why?&lt;/h3&gt; &#xA;&lt;p&gt;Chances are you haven&#39;t changed the &lt;em&gt;Database URI&lt;/em&gt; in &lt;code&gt;.env&lt;/code&gt;. If &lt;code&gt;MONGODB&lt;/code&gt; is set to &lt;code&gt;localhost&lt;/code&gt;, it will only work on your machine as long as MongoDB is running. When you deploy to Render, OpenShift, or some other provider, you will not have MongoDB running on &lt;code&gt;localhost&lt;/code&gt;. You need to create an account with &lt;a href=&#34;https://www.mongodb.com/cloud/atlas&#34;&gt;MongoDB Atlas&lt;/a&gt;, then create a free tier database. See &lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#deployment&#34;&gt;Deployment&lt;/a&gt; for more information on how to set up an account and a new database step-by-step with MongoDB Atlas.&lt;/p&gt; &#xA;&lt;h3&gt;Why do you have all routes defined in app.js?&lt;/h3&gt; &#xA;&lt;p&gt;For the sake of simplicity. While there might be a better approach, such as passing &lt;code&gt;app&lt;/code&gt; context to each controller as outlined in this &lt;a href=&#34;http://timstermatic.github.io/blog/2013/08/17/a-simple-mvc-framework-with-node-and-express/&#34;&gt;blog&lt;/a&gt;, I find such a style to be confusing for beginners. It took me a long time to grasp the concept of &lt;code&gt;exports&lt;/code&gt; and &lt;code&gt;module.exports&lt;/code&gt;, let alone having a global &lt;code&gt;app&lt;/code&gt; reference in other files. Tha to me is backward thinking. The &lt;code&gt;app.js&lt;/code&gt; is the &#34;heart of the app&#34;, it should be the one referencing models, routes, controllers, etc. When working solo on small projects, I prefer to have everything inside &lt;code&gt;app.js&lt;/code&gt; as is the case with &lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/(https://github.com/sahat/ember-sass-express-starter/raw/master/app.js)&#34;&gt;this&lt;/a&gt; REST API server.&lt;/p&gt; &#xA;&lt;h2&gt;How It Works (mini guides)&lt;/h2&gt; &#xA;&lt;p&gt;This section is intended for giving you a detailed explanation of how a particular functionality works. Maybe you are just curious about how it works, or perhaps you are lost and confused while reading the code, I hope it provides some guidance to you.&lt;/p&gt; &#xA;&lt;h3&gt;Custom HTML and CSS Design 101&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://html5up.net/&#34;&gt;HTML5 UP&lt;/a&gt; has many beautiful templates that you can download for free.&lt;/p&gt; &#xA;&lt;p&gt;When you download the ZIP file, it will come with &lt;em&gt;index.html&lt;/em&gt;, &lt;em&gt;images&lt;/em&gt;, &lt;em&gt;CSS&lt;/em&gt; and &lt;em&gt;js&lt;/em&gt; folders. So, how do you integrate it with Hackathon Starter? Hackathon Starter uses the Bootstrap CSS framework, but these templates do not. Trying to use both CSS files at the same time will likely result in undesired effects.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Using the custom templates approach, you should understand that you cannot reuse any of the views I have created: layout, the home page, API browser, login, signup, account management, contact. Those views were built using Bootstrap grid and styles. You will have to manually update the grid using a different syntax provided in the template. &lt;strong&gt;Having said that, you can mix and match if you want to do so: Use Bootstrap for the main app interface, and a custom template for a landing page.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s start from the beginning. For this example I will use &lt;a href=&#34;http://html5up.net/escape-velocity/&#34;&gt;Escape Velocity&lt;/a&gt; template: &lt;img src=&#34;http://html5up.net/uploads/images/escape-velocity.jpg&#34; alt=&#34;Alt&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For the sake of simplicity I will only consider &lt;code&gt;index.html&lt;/code&gt;, and skip &lt;code&gt;left-sidebar.html&lt;/code&gt;, &lt;code&gt;no-sidebar.html&lt;/code&gt;, &lt;code&gt;right-sidebar.html&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Move all JavaScript files from &lt;code&gt;html5up-escape-velocity/js&lt;/code&gt; to &lt;code&gt;public/js&lt;/code&gt;. Then move all CSS files from &lt;code&gt;html5up-escape-velocity/css&lt;/code&gt; to &lt;code&gt;public/css&lt;/code&gt;. And finally, move all images from &lt;code&gt;html5up-escape-velocity/images&lt;/code&gt; to &lt;code&gt;public/images&lt;/code&gt;. You could move it to the existing &lt;strong&gt;img&lt;/strong&gt; folder, but that would require manually changing every &lt;code&gt;img&lt;/code&gt; reference. Grab the contents of &lt;code&gt;index.html&lt;/code&gt; and paste it into &lt;a href=&#34;https://html-to-pug.com/&#34;&gt;HTML To Pug&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Do not forget to update all the CSS and JS paths accordingly.&lt;/p&gt; &#xA;&lt;p&gt;Create a new file &lt;code&gt;escape-velocity.pug&lt;/code&gt; and paste the Pug markup in &lt;code&gt;views&lt;/code&gt; folder. Whenever you see the code &lt;code&gt;res.render(&#39;account/login&#39;)&lt;/code&gt; - that means it will search for &lt;code&gt;views/account/login.pug&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s see how it looks. Create a new controller &lt;strong&gt;escapeVelocity&lt;/strong&gt; inside &lt;code&gt;controllers/home.js&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;exports.escapeVelocity = (req, res) =&amp;gt; {&#xA;  res.render(&#39;escape-velocity&#39;, {&#xA;    title: &#39;Landing Page&#39;&#xA;  });&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then create a route in &lt;code&gt;app.js&lt;/code&gt;. I placed it right after the index controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;app.get(&#39;/escape-velocity&#39;, homeController.escapeVelocity);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Restart the server (if you are not using &lt;strong&gt;nodemon&lt;/strong&gt;); then you should see the new template at &lt;code&gt;http://localhost:8080/escape-velocity&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;I will stop right here, but if you would like to use this template as more than just a single page, take a look at how these Pug templates work: &lt;code&gt;layout.pug&lt;/code&gt; - base template, &lt;code&gt;index.pug&lt;/code&gt; - home page, &lt;code&gt;partials/header.pug&lt;/code&gt; - Bootstrap navbar, &lt;code&gt;partials/footer.pug&lt;/code&gt; - sticky footer. You will have to manually break it apart into smaller pieces. Figure out which part of the template you want to keep the same on all pages - that&#39;s your new &lt;code&gt;layout.pug&lt;/code&gt;. Then, each page that changes, be it &lt;code&gt;index.pug&lt;/code&gt;, &lt;code&gt;about.pug&lt;/code&gt;, &lt;code&gt;contact.pug&lt;/code&gt; will be embedded in your new &lt;code&gt;layout.pug&lt;/code&gt; via &lt;code&gt;block content&lt;/code&gt;. Use existing templates as a reference.&lt;/p&gt; &#xA;&lt;p&gt;This is a rather lengthy process, and templates you get from elsewhere might have yet another grid system. That&#39;s why I chose &lt;em&gt;Bootstrap&lt;/em&gt; for the Hackathon Starter. Many people are already familiar with &lt;em&gt;Bootstrap&lt;/em&gt;, plus it&#39;s easy to get started with it if you have never used &lt;em&gt;Bootstrap&lt;/em&gt;. You can also buy many beautifully designed &lt;em&gt;Bootstrap&lt;/em&gt; themes at &lt;a href=&#34;http://themeforest.net/&#34;&gt;Themeforest&lt;/a&gt;, and use them as a drop-in replacement for Hackathon Starter. However, if you would like to go with a completely custom HTML/CSS design, this should help you to get started!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;How do flash messages work in this project?&lt;/h3&gt; &#xA;&lt;p&gt;Flash messages allow you to display a message at the end of the request and access it on the next request and only the next request. For instance, on a failed login attempt, you would display an alert with some error message, but as soon as you refresh that page or visit a different page and come back to the login page, that error message will be gone. It is only displayed once. This project uses &lt;em&gt;express-flash&lt;/em&gt; module for flash messages. And that module is built on top of &lt;em&gt;connect-flash&lt;/em&gt;, which is what I used in this project initially. With &lt;em&gt;express-flash&lt;/em&gt; you don&#39;t have to explicitly send a flash message to every view inside &lt;code&gt;res.render()&lt;/code&gt;. All flash messages are available in your views via &lt;code&gt;messages&lt;/code&gt; object by default, thanks to &lt;em&gt;express-flash&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Flash messages have a two-step process. You use &lt;code&gt;req.flash(&#39;errors&#39;, { msg: &#39;Error messages goes here&#39; }&lt;/code&gt; to create a flash message in your controllers, and then display them in your views:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pug&#34;&gt;if messages.errors&#xA;  .alert.alert-danger.fade.in&#xA;    for error in messages.errors&#xA;      div= error.msg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the first step, &lt;code&gt;&#39;errors&#39;&lt;/code&gt; is the name of a flash message, which should match the name of the property on &lt;code&gt;messages&lt;/code&gt; object in your views. You place alert messages inside &lt;code&gt;if message.errors&lt;/code&gt; because you don&#39;t want to show them flash messages are present. The reason why you pass an error like &lt;code&gt;{ msg: &#39;Error message goes here&#39; }&lt;/code&gt; instead of just a string - &lt;code&gt;&#39;Error message goes here&#39;&lt;/code&gt;, is for the sake of consistency. To clarify that, &lt;em&gt;express-validator&lt;/em&gt; module which is used for validating and sanitizing user&#39;s input, returns all errors as an array of objects, where each object has a &lt;code&gt;msg&lt;/code&gt; property with a message why an error has occurred. Here is a more general example of what express-validator returns when there are errors present:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;[&#xA;  { param: &#34;name&#34;, msg: &#34;Name is required&#34;, value: &#34;&amp;lt;received input&amp;gt;&#34; },&#xA;  { param: &#34;email&#34;, msg: &#34;A valid email is required&#34;, value: &#34;&amp;lt;received input&amp;gt;&#34; }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To keep consistent with that style, you should pass all flash messages as &lt;code&gt;{ msg: &#39;My flash message&#39; }&lt;/code&gt; instead of a string. Otherwise, you will see an alert box without an error message. That is because in &lt;strong&gt;partials/flash.pug&lt;/strong&gt; template it will try to output &lt;code&gt;error.msg&lt;/code&gt; (i.e. &lt;code&gt;&#34;My flash message&#34;.msg&lt;/code&gt;), in other words, it will try to call a &lt;code&gt;msg&lt;/code&gt; method on a &lt;em&gt;String&lt;/em&gt; object, which will return &lt;em&gt;undefined&lt;/em&gt;. Everything I just mentioned about errors, also applies to &#34;info&#34; and &#34;success&#34; flash messages, and you could even create a new one yourself, such as:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Data Usage Controller (Example)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;req.flash(&#39;warning&#39;, { msg: &#39;You have exceeded 90% of your data usage&#39; });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;User Account Page (Example)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pug&#34;&gt;if messages.warning&#xA;  .alert.alert-warning.fade.in&#xA;    for warning in messages.warning&#xA;      div= warning.msg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;partials/flash.pug&lt;/code&gt; is a partial template that contains how flash messages are formatted. Previously, flash messages were scattered throughout each view that used flash messages (contact, login, signup, profile), but now, thankfully it uses a &lt;em&gt;DRY&lt;/em&gt; approach.&lt;/p&gt; &#xA;&lt;p&gt;The flash messages partial template is &lt;em&gt;included&lt;/em&gt; in the &lt;code&gt;layout.pug&lt;/code&gt;, along with footer and navigation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pug&#34;&gt;body&#xA;    include partials/header&#xA;&#xA;    .container&#xA;      include partials/flash&#xA;      block content&#xA;&#xA;    include partials/footer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have any further questions about flash messages, please feel free to open an issue, and I will update this mini-guide accordingly, or send a pull request if you would like to include something that I missed.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;How do I create a new page?&lt;/h3&gt; &#xA;&lt;p&gt;A more correct way to say this would be &#34;How do I create a new route?&#34; The main file &lt;code&gt;app.js&lt;/code&gt; contains all the routes. Each route has a callback function associated with it. Sometimes you will see three or more arguments for a route. In a case like that, the first argument is still a URL string, while middle arguments are what&#39;s called middleware. Think of middleware as a door. If this door prevents you from continuing forward, you won&#39;t get to your callback function. One such example is a route that requires authentication.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;app.get(&#39;/account&#39;, passportConfig.isAuthenticated, userController.getAccount);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It always goes from left to right. A user visits &lt;code&gt;/account&lt;/code&gt; page. Then &lt;code&gt;isAuthenticated&lt;/code&gt; middleware checks if you are authenticated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;exports.isAuthenticated = (req, res, next) =&amp;gt; {&#xA;  if (req.isAuthenticated()) {&#xA;    return next();&#xA;  }&#xA;  res.redirect(&#39;/login&#39;);&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are authenticated, you let this visitor pass through your &#34;door&#34; by calling &lt;code&gt;return next();&lt;/code&gt;. It then proceeds to the next middleware until it reaches the last argument, which is a callback function that typically renders a template on &lt;code&gt;GET&lt;/code&gt; requests or redirects on &lt;code&gt;POST&lt;/code&gt; requests. In this case, if you are authenticated, you will be redirected to the &lt;em&gt;Account Management&lt;/em&gt; page; otherwise, you will be redirected to the &lt;em&gt;Login&lt;/em&gt; page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;exports.getAccount = (req, res) =&amp;gt; {&#xA;  res.render(&#39;account/profile&#39;, {&#xA;    title: &#39;Account Management&#39;&#xA;  });&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Express.js has &lt;code&gt;app.get&lt;/code&gt;, &lt;code&gt;app.post&lt;/code&gt;, &lt;code&gt;app.put&lt;/code&gt;, &lt;code&gt;app.delete&lt;/code&gt;, but for the most part, you will only use the first two HTTP verbs, unless you are building a RESTful API. If you just want to display a page, then use &lt;code&gt;GET&lt;/code&gt;, if you are submitting a form, sending a file then use &lt;code&gt;POST&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is a typical workflow for adding new routes to your application. Let&#39;s say we are building a page that lists all books from the database.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1.&lt;/strong&gt; Start by defining a route.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;app.get(&#39;/books&#39;, bookController.getBooks);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As of Express 4.x you can define your routes like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;app.route(&#39;/books&#39;)&#xA;  .get(bookController.getBooks)&#xA;  .post(bookController.createBooks)&#xA;  .put(bookController.updateBooks)&#xA;  .delete(bookController.deleteBooks)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And here is how a route would look if it required an &lt;em&gt;authentication&lt;/em&gt; and an &lt;em&gt;authorization&lt;/em&gt; middleware:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;app.route(&#39;/api/twitter&#39;)&#xA;  .all(passportConfig.isAuthenticated)&#xA;  .all(passportConfig.isAuthorized)&#xA;  .get(apiController.getTwitter)&#xA;  .post(apiController.postTwitter)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use whichever style makes sense to you. Either one is acceptable. I think that chaining HTTP verbs on &lt;code&gt;app.route&lt;/code&gt; is a very clean and elegant approach, but on the other hand, I can no longer see all my routes at a glance when you have one route per line.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2.&lt;/strong&gt; Create a new schema and a model &lt;code&gt;Book.js&lt;/code&gt; inside the &lt;em&gt;models&lt;/em&gt; directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const mongoose = require(&#39;mongoose&#39;);&#xA;&#xA;const bookSchema = new mongoose.Schema({&#xA;  name: String&#xA;});&#xA;&#xA;const Book = mongoose.model(&#39;Book&#39;, bookSchema);&#xA;module.exports = Book;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 3.&lt;/strong&gt; Create a new controller file called &lt;code&gt;book.js&lt;/code&gt; inside the &lt;em&gt;controllers&lt;/em&gt; directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/**&#xA; * GET /books&#xA; * List all books.&#xA; */&#xA;const Book = require(&#39;../models/Book.js&#39;);&#xA;&#xA;exports.getBooks = (req, res) =&amp;gt; {&#xA;  Book.find((err, docs) =&amp;gt; {&#xA;    res.render(&#39;books&#39;, { books: docs });&#xA;  });&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 4.&lt;/strong&gt; Import that controller in &lt;code&gt;app.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const bookController = require(&#39;./controllers/book&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 5.&lt;/strong&gt; Create &lt;code&gt;books.pug&lt;/code&gt; template.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pug&#34;&gt;extends layout&#xA;&#xA;block content&#xA;  .page-header&#xA;    h3 All Books&#xA;&#xA;  ul&#xA;    for book in books&#xA;      li= book.name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! I will say that you could have combined Step 1, 2, 3 as following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;app.get(&#39;/books&#39;,(req, res) =&amp;gt; {&#xA;  Book.find((err, docs) =&amp;gt; {&#xA;    res.render(&#39;books&#39;, { books: docs });&#xA;  });&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sure, it&#39;s simpler, but as soon as you pass 1000 lines of code in &lt;code&gt;app.js&lt;/code&gt; it becomes a little challenging to navigate the file. I mean, the whole point of this boilerplate project was to separate concerns, so you could work with your teammates without running into &lt;em&gt;MERGE CONFLICTS&lt;/em&gt;. Imagine you have four developers working on a single &lt;code&gt;app.js&lt;/code&gt;, I promise you it won&#39;t be fun resolving merge conflicts all the time. If you are the only developer, then it&#39;s okay. But as I said, once it gets up to a certain LoC size, it becomes difficult to maintain everything in a single file.&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s all there is to it. Express.js is super simple to use. Most of the time you will be dealing with other APIs to do the real work: &lt;a href=&#34;http://mongoosejs.com/docs/guide.html&#34;&gt;Mongoose&lt;/a&gt; for querying database, socket.io for sending and receiving messages over WebSockets, sending emails via &lt;a href=&#34;http://nodemailer.com/&#34;&gt;Nodemailer&lt;/a&gt;, form validation using &lt;a href=&#34;https://github.com/validatorjs/validator.js&#34;&gt;validator.js&lt;/a&gt; library, parsing websites using &lt;a href=&#34;https://github.com/cheeriojs/cheerio&#34;&gt;Cheerio&lt;/a&gt;, etc.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;How do I use Socket.io with Hackathon Starter?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dstroot&#34;&gt;Dan Stroot&lt;/a&gt; submitted an excellent &lt;a href=&#34;https://github.com/dstroot/hackathon-starter/commit/0a632def1ce8da446709d92812423d337c977d75&#34;&gt;pull request&lt;/a&gt; that adds a real-time dashboard with socket.io. And as much as I&#39;d like to add it to the project, I think it violates one of the main principles of the Hackathon Starter:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;When I started this project, my primary focus was on simplicity and ease of use. I also tried to make it as generic and reusable as possible to cover most use cases of hackathon web apps, &lt;strong&gt;without being too specific&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;When I need to use socket.io, I &lt;strong&gt;really&lt;/strong&gt; need it, but most of the time - I don&#39;t. But more importantly, WebSockets support is still experimental on most hosting providers. Due to past provider issues with WebSockets, I have not include socket.io as part of the Hackathon Starter. &lt;em&gt;For now...&lt;/em&gt; If you need to use socket.io in your app, please continue reading.&lt;/p&gt; &#xA;&lt;p&gt;First, you need to install socket.io:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;npm install socket.io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;const app = express();&lt;/code&gt; with the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const app = express();&#xA;const server = require(&#39;http&#39;).Server(app);&#xA;const io = require(&#39;socket.io&#39;)(server);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;I like to have the following code organization in &lt;code&gt;app.js&lt;/code&gt; (from top to bottom): module dependencies, import controllers, import configs, connect to database, express configuration, routes, start the server, socket.io stuff. That way I always know where to look for things.&lt;/p&gt; &#xA;&lt;p&gt;Add the following code at the end of &lt;code&gt;app.js&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;io.on(&#39;connection&#39;, (socket) =&amp;gt; {&#xA;  socket.emit(&#39;greet&#39;, { hello: &#39;Hey there browser!&#39; });&#xA;  socket.on(&#39;respond&#39;, (data) =&amp;gt; {&#xA;    console.log(data);&#xA;  });&#xA;  socket.on(&#39;disconnect&#39;, () =&amp;gt; {&#xA;    console.log(&#39;Socket disconnected&#39;);&#xA;  });&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;One last thing left to change:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;app.listen(app.get(&#39;port&#39;), () =&amp;gt; {&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;server.listen(app.get(&#39;port&#39;), () =&amp;gt; {&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;At this point, we are done with the back-end.&lt;/p&gt; &#xA;&lt;p&gt;You now have a choice - to include your JavaScript code in Pug templates or have all your client-side JavaScript in a separate file - in &lt;code&gt;app.js&lt;/code&gt;. I admit, when I first started with Node.js and JavaScript in general, I placed all JavaScript code inside templates because I have access to template variables passed in from Express right then and there. It&#39;s the easiest thing you can do, but also the least efficient and harder to maintain. Since then I almost never include inline JavaScript inside templates anymore.&lt;/p&gt; &#xA;&lt;p&gt;But it&#39;s also understandable if you want to take the easier road. Most of the time you don&#39;t even care about performance during hackathons, you just want to &lt;em&gt;&#34;get shit done&#34;&lt;/em&gt; before the time runs out. Well, either way, use whichever approach makes more sense to you. At the end of the day, it&#39;s &lt;strong&gt;what&lt;/strong&gt; you build that matters, not &lt;strong&gt;how&lt;/strong&gt; you build it.&lt;/p&gt; &#xA;&lt;p&gt;If you want to stick all your JavaScript inside templates, then in &lt;code&gt;layout.pug&lt;/code&gt; - your main template file, add this to &lt;code&gt;head&lt;/code&gt; block.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pug&#34;&gt;script(src=&#39;/socket.io/socket.io.js&#39;)&#xA;script.&#xA;    let socket = io.connect(window.location.href);&#xA;    socket.on(&#39;greet&#39;, function (data) {&#xA;      console.log(data);&#xA;      socket.emit(&#39;respond&#39;, { message: &#39;Hey there, server!&#39; });&#xA;    });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Notice the path of the &lt;code&gt;socket.io.js&lt;/code&gt;, you don&#39;t actually have to have &lt;code&gt;socket.io.js&lt;/code&gt; file anywhere in your project; it will be generated automatically at runtime.&lt;/p&gt; &#xA;&lt;p&gt;If you want to have JavaScript code separate from templates, move that inline script code into &lt;code&gt;app.js&lt;/code&gt;, inside the &lt;code&gt;$(document).ready()&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;$(document).ready(function() {&#xA;&#xA;  // Place JavaScript code here...&#xA;  let socket = io.connect(window.location.href);&#xA;  socket.on(&#39;greet&#39;, function (data) {&#xA;    console.log(data);&#xA;    socket.emit(&#39;respond&#39;, { message: &#39;Hey there, server!&#39; });&#xA;  });&#xA;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And we are done!&lt;/p&gt; &#xA;&lt;h2&gt;Cheatsheets&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;img src=&#34;https://frontendmasters.com/assets/es6-logo.png&#34; height=&#34;34&#34; align=&#34;top&#34;&gt; ES6 Cheatsheet&lt;/h3&gt; &#xA;&lt;h4&gt;Declarations&lt;/h4&gt; &#xA;&lt;p&gt;Declares a read-only named constant.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const name = &#39;yourName&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Declares a block scope local variable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let index = 0;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Template Strings&lt;/h4&gt; &#xA;&lt;p&gt;Using the &lt;strong&gt;`${}`&lt;/strong&gt; syntax, strings can embed expressions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const name = &#39;Oggy&#39;;&#xA;const age = 3;&#xA;&#xA;console.log(`My cat is named ${name} and is ${age} years old.`);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Modules&lt;/h4&gt; &#xA;&lt;p&gt;To import functions, objects, or primitives exported from an external module. These are the most common types of importing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const name = require(&#39;module-name&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { foo, bar } = require(&#39;module-name&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To export functions, objects, or primitives from a given file or module.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;module.exports = { myFunction };&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;module.exports.name = &#39;yourName&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;module.exports = myFunctionOrClass;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Spread Operator&lt;/h4&gt; &#xA;&lt;p&gt;The spread operator allows an expression to be expanded in places where multiple arguments (for function calls) or multiple elements (for array literals) are expected.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;myFunction(...iterableObject);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;ChildComponent {...this.props} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Promises&lt;/h4&gt; &#xA;&lt;p&gt;A Promise is used in asynchronous computations to represent an operation that hasn&#39;t completed yet but is expected in the future.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var p = new Promise(function(resolve, reject) { });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;catch()&lt;/code&gt; method returns a Promise and deals with rejected cases only.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;p.catch(function(reason) { /* handle rejection */ });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;then()&lt;/code&gt; method returns a Promise. It takes two arguments: callback for the success &amp;amp; failure cases.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;p.then(function(value) { /* handle fulfillment */ }, function(reason) { /* handle rejection */ });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;Promise.all(iterable)&lt;/code&gt; method returns a promise that resolves when all of the promises in the iterable argument have resolved or rejects with the reason of the first passed promise that rejects.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;Promise.all([p1, p2, p3]).then(function(values) { console.log(values) });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Arrow Functions&lt;/h4&gt; &#xA;&lt;p&gt;Arrow function expression. Shorter syntax &amp;amp; lexically binds the &lt;code&gt;this&lt;/code&gt; value. Arrow functions are anonymous.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;singleParam =&amp;gt; { statements }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;() =&amp;gt; { statements }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;(param1, param2) =&amp;gt; expression&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const arr = [1, 2, 3, 4, 5];&#xA;const squares = arr.map(x =&amp;gt; x * x);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Classes&lt;/h4&gt; &#xA;&lt;p&gt;The class declaration creates a new class using prototype-based inheritance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;class Person {&#xA;  constructor(name, age, gender) {&#xA;    this.name   = name;&#xA;    this.age    = age;&#xA;    this.gender = gender;&#xA;  }&#xA;&#xA;  incrementAge() {&#xA;    this.age++;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;🎁&lt;/span&gt; &lt;strong&gt;Credits&lt;/strong&gt;: &lt;a href=&#34;https://duckduckgo.com/?q=es6+cheatsheet&amp;amp;ia=cheatsheet&amp;amp;iax=1&#34;&gt;DuckDuckGo&lt;/a&gt; and &lt;a href=&#34;https://github.com/DrkSephy/es6-cheatsheet&#34;&gt;@DrkSephy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;🔝&lt;/span&gt; &lt;sub&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#table-of-contents&#34;&gt;&lt;strong&gt;back to top&lt;/strong&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;img src=&#34;http://i.stack.imgur.com/Mmww2.png&#34; height=&#34;34&#34; align=&#34;top&#34;&gt; JavaScript Date Cheatsheet&lt;/h3&gt; &#xA;&lt;h4&gt;Unix Timestamp (seconds)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;Math.floor(Date.now() / 1000);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-MomentJS&#34;&gt;moment().unix();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Add 30 minutes to a Date object&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var now = new Date();&#xA;now.setMinutes(now.getMinutes() + 30);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-MomentJS&#34;&gt;moment().add(30, &#39;minutes&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Date Formatting&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// DD-MM-YYYY&#xA;var now = new Date();&#xA;&#xA;var DD = now.getDate();&#xA;var MM = now.getMonth() + 1;&#xA;var YYYY = now.getFullYear();&#xA;&#xA;if (DD &amp;lt; 10) {&#xA;  DD = &#39;0&#39; + DD;&#xA;}&#xA;&#xA;if (MM &amp;lt; 10) {&#xA;  MM = &#39;0&#39; + MM;&#xA;}&#xA;&#xA;console.log(MM + &#39;-&#39; + DD + &#39;-&#39; + YYYY); // 03-30-2016&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-MomentJS&#34;&gt;console.log(moment(new Date(), &#39;MM-DD-YYYY&#39;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// hh:mm (12 hour time with am/pm)&#xA;var now = new Date();&#xA;var hours = now.getHours();&#xA;var minutes = now.getMinutes();&#xA;var amPm = hours &amp;gt;= 12 ? &#39;pm&#39; : &#39;am&#39;;&#xA;&#xA;hours = hours % 12;&#xA;hours = hours ? hours : 12;&#xA;minutes = minutes &amp;lt; 10 ? &#39;0&#39; + minutes : minutes;&#xA;&#xA;console.log(hours + &#39;:&#39; + minutes + &#39; &#39; + amPm); // 1:43 am&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-MomentJS&#34;&gt;console.log(moment(new Date(), &#39;hh:mm A&#39;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Next week Date object&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var today = new Date();&#xA;var nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-MomentJS&#34;&gt;moment().add(7, &#39;days&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Yesterday Date object&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var today = new Date();&#xA;var yesterday = date.setDate(date.getDate() - 1);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-MomentJS&#34;&gt;moment().add(-1, &#39;days&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;🔝&lt;/span&gt; &lt;sub&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#table-of-contents&#34;&gt;&lt;strong&gt;back to top&lt;/strong&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mongoose Cheatsheet&lt;/h3&gt; &#xA;&lt;h4&gt;Find all users:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;User.find((err, users) =&amp;gt; {&#xA;  console.log(users);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Find a user by email:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let userEmail = &#39;example@gmail.com&#39;;&#xA;User.findOne({ email: userEmail }, (err, user) =&amp;gt; {&#xA;  console.log(user);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Find 5 most recent user accounts:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;User&#xA;  .find()&#xA;  .sort({ _id: -1 })&#xA;  .limit(5)&#xA;  .exec((err, users) =&amp;gt; {&#xA;    console.log(users);&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Get the total count of a field from all documents:&lt;/h4&gt; &#xA;&lt;p&gt;Let&#39;s suppose that each user has a &lt;code&gt;votes&lt;/code&gt; field and you would like to count the total number of votes in your database across all users. One very inefficient way would be to loop through each document and manually accumulate the count. Or you could use &lt;a href=&#34;https://docs.mongodb.org/manual/core/aggregation-introduction/&#34;&gt;MongoDB Aggregation Framework&lt;/a&gt; instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;User.aggregate({ $group: { _id: null, total: { $sum: &#39;$votes&#39; } } }, (err, votesCount)  =&amp;gt; {&#xA;  console.log(votesCount.total);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;🔝&lt;/span&gt; &lt;sub&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sahat/hackathon-starter/master/#table-of-contents&#34;&gt;&lt;strong&gt;back to top&lt;/strong&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;You will need docker and docker-compose installed to build the application.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.docker.com/engine/installation/&#34;&gt;Docker installation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.docker.com/toolbox/faqs/troubleshoot/&#34;&gt;Common problems setting up docker&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After installing docker, start the application with the following commands :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# To build the project for the first time or when you add dependencies&#xA;docker-compose build web&#xA;&#xA;# To start the application (or to restart after making changes to the source code)&#xA;docker-compose up web&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To view the app, find your docker IP address + port 8080 ( this will typically be &lt;code&gt;http://localhost:8080/&lt;/code&gt; ). To use a port other than 8080, you would need to modify the port in app.js, Dockerfile, and docker-compose.yml.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Once you are ready to deploy your app, you will need to create an account with a cloud platform to host it. These are not the only choices, but they are my top picks. Additionally, you can create an account with &lt;strong&gt;MongoDB Atlas&lt;/strong&gt; and then pick one of the providers below. Again, there are plenty of other choices, and you are not limited to just the ones listed below.&lt;/p&gt; &#xA;&lt;h3&gt;Deployment to Render&lt;/h3&gt; &#xA;&lt;img src=&#34;https://cdn.buttercms.com/p0IHcvwRSlOAEjBcTf0C&#34; width=&#34;200&#34;&gt; &#xA;&lt;p&gt;Render provides free nodejs hosting for repos on Github and Gitlab.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sign up for a free Individual account at &lt;a href=&#34;https://render.com&#34;&gt;https://render.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Link your Github account&lt;/li&gt; &#xA; &lt;li&gt;Create a Web Service&lt;/li&gt; &#xA; &lt;li&gt;Add your repo and add your environment variables under the Advanced settings. Note 1: The automated deployments may not work, and you may need to manually trigger deployments after your commits.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Hosted MongoDB Atlas&lt;/h3&gt; &#xA;&lt;img src=&#34;https://www.mongodb.com/assets/images/global/MongoDB_Logo_Dark.svg?sanitize=true&#34; width=&#34;200&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://www.mongodb.com/cloud/atlas&#34;&gt;https://www.mongodb.com/cloud/atlas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click the green &lt;strong&gt;Get started free&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Fill in your information then hit &lt;strong&gt;Get started free&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;You will be redirected to Create New Cluster page.&lt;/li&gt; &#xA; &lt;li&gt;Select a &lt;strong&gt;Cloud Provider and Region&lt;/strong&gt; (such as AWS and a free tier region)&lt;/li&gt; &#xA; &lt;li&gt;Select cluster Tier to Free forever &lt;strong&gt;Shared&lt;/strong&gt; Cluster&lt;/li&gt; &#xA; &lt;li&gt;Give Cluster a name (default: Cluster0)&lt;/li&gt; &#xA; &lt;li&gt;Click on green &lt;strong&gt;&lt;span&gt;⚡&lt;/span&gt;Create Cluster button&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now, to access your database you need to create a DB user. To create a new MongoDB user, from the &lt;strong&gt;Clusters view&lt;/strong&gt;, select the &lt;strong&gt;Security tab&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Under the &lt;strong&gt;MongoDB Users&lt;/strong&gt; tab, click on &lt;strong&gt;+Add New User&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fill in a username and password and give it either &lt;strong&gt;Atlas Admin&lt;/strong&gt; User Privilege&lt;/li&gt; &#xA; &lt;li&gt;Next, you will need to create an IP address whitelist and obtain the connection URI. In the Clusters view, under the cluster details (i.e. SANDBOX - Cluster0), click on the &lt;strong&gt;CONNECT&lt;/strong&gt; button.&lt;/li&gt; &#xA; &lt;li&gt;Under section &lt;strong&gt;(1) Check the IP Whitelist&lt;/strong&gt;, click on &lt;strong&gt;ALLOW ACCESS FROM ANYWHERE&lt;/strong&gt;. The form will add a field with &lt;code&gt;0.0.0.0/0&lt;/code&gt;. Click &lt;strong&gt;SAVE&lt;/strong&gt; to save the &lt;code&gt;0.0.0.0/0&lt;/code&gt; whitelist.&lt;/li&gt; &#xA; &lt;li&gt;Under section &lt;strong&gt;(2) Choose a connection method&lt;/strong&gt;, click on &lt;strong&gt;Connect Your Application&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;In the new screen, select &lt;strong&gt;Node.js&lt;/strong&gt; as Driver and version &lt;strong&gt;3.6 or later&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Finally, copy the URI connection string and replace the URI in MONGODB_URI of &lt;code&gt;.env.example&lt;/code&gt; with this URI string. Make sure to replace the &#xA;  &lt;password&gt;&#xA;    with the db User password that you created under the Security tab.&#xA;  &lt;/password&gt;&lt;/li&gt; &#xA; &lt;li&gt;Note that after some of the steps in the Atlas UI, you may see a banner stating &lt;code&gt;We are deploying your changes&lt;/code&gt;. You will need to wait for the deployment to finish before using the DB in your application.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;OpenShift&lt;/h3&gt; &#xA;&lt;img src=&#34;http://www.opencloudconf.com/images/openshift_logo.png&#34; width=&#34;200&#34;&gt; **NOTE** *These instructions might be out of date due to changes in OpenShift. Render is currently a good free alternative. If you know the new process, please feel free to help us update this page* &#xA;&lt;ul&gt; &#xA; &lt;li&gt;First, install this Ruby gem: &lt;code&gt;sudo gem install rhc&lt;/code&gt; &lt;span&gt;💎&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;rhc login&lt;/code&gt; and enter your OpenShift credentials&lt;/li&gt; &#xA; &lt;li&gt;From your app directory run &lt;code&gt;rhc app create MyApp nodejs-0.10&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;MyApp&lt;/em&gt; is the name of your app (no spaces)&lt;/li&gt; &#xA; &lt;li&gt;Once that is done, you will be provided with &lt;strong&gt;URL&lt;/strong&gt;, &lt;strong&gt;SSH&lt;/strong&gt; and &lt;strong&gt;Git Remote&lt;/strong&gt; links&lt;/li&gt; &#xA; &lt;li&gt;Visit provided &lt;strong&gt;URL&lt;/strong&gt;, and you should see the &lt;em&gt;Welcome to your Node.js application on OpenShift&lt;/em&gt; page&lt;/li&gt; &#xA; &lt;li&gt;Copy and paste &lt;strong&gt;Git Remote&lt;/strong&gt; into &lt;code&gt;git remote add openshift YOUR_GIT_REMOTE&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Before you push your app, you need to do a few modifications to your code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Add these two lines to &lt;code&gt;app.js&lt;/code&gt;, just place them anywhere before &lt;code&gt;app.listen()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var IP_ADDRESS = process.env.OPENSHIFT_NODEJS_IP || &#39;127.0.0.1&#39;;&#xA;var PORT = process.env.OPENSHIFT_NODEJS_PORT || 8080;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then change &lt;code&gt;app.listen()&lt;/code&gt; to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;app.listen(PORT, IP_ADDRESS,() =&amp;gt; {&#xA;  console.log(`Express server listening on port ${PORT} in ${app.settings.env} mode`);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add this to &lt;code&gt;package.json&lt;/code&gt;, after &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;version&lt;/em&gt;. This is necessary because, by default, OpenShift looks for &lt;code&gt;server.js&lt;/code&gt; file. And by specifying &lt;code&gt;supervisor app.js&lt;/code&gt; it will automatically restart the server when node.js process crashes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&#34;main&#34;: &#34;app.js&#34;,&#xA;&#34;scripts&#34;: {&#xA;  &#34;start&#34;: &#34;supervisor app.js&#34;&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Finally, you can now push your code to OpenShift by running &lt;code&gt;git push -f openshift master&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; The first time you run this command, you have to pass &lt;code&gt;-f&lt;/code&gt; (force) flag because OpenShift creates a dummy server with the welcome page when you create a new Node.js app. Passing &lt;code&gt;-f&lt;/code&gt; flag will override everything with your &lt;em&gt;Hackathon Starter&lt;/em&gt; project repository. &lt;strong&gt;Do not&lt;/strong&gt; run &lt;code&gt;git pull&lt;/code&gt; as it will create unnecessary merge conflicts.&lt;/li&gt; &#xA; &lt;li&gt;And you are done!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Azure&lt;/h3&gt; &#xA;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/f/ff/Windows_Azure_logo.png&#34; width=&#34;200&#34;&gt; **NOTE** *Beyond the initial 12 month trial of Azure, the platform does not seem to offer a free tier for hosting NodeJS apps. If you are looking for a free tier service to host your app, Render might be a better choice at this point* &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Login to &lt;a href=&#34;https://manage.windowsazure.com/&#34;&gt;Windows Azure Management Portal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;strong&gt;+ NEW&lt;/strong&gt; button on the bottom left of the portal&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;COMPUTE&lt;/strong&gt;, then &lt;strong&gt;WEB APP&lt;/strong&gt;, then &lt;strong&gt;QUICK CREATE&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter a name for &lt;strong&gt;URL&lt;/strong&gt; and select the datacenter &lt;strong&gt;REGION&lt;/strong&gt; for your web site&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;strong&gt;CREATE WEB APP&lt;/strong&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Once the web site status changes to &lt;em&gt;Running&lt;/em&gt;, click on the name of the web site to access the Dashboard&lt;/li&gt; &#xA; &lt;li&gt;At the bottom right of the Quickstart page, select &lt;strong&gt;Set up a deployment from source control&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Local Git repository&lt;/strong&gt; from the list, and then click the arrow&lt;/li&gt; &#xA; &lt;li&gt;To enable Git publishing, Azure will ask you to create a user name and password&lt;/li&gt; &#xA; &lt;li&gt;Once the Git repository is ready, you will be presented with a &lt;strong&gt;GIT URL&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Inside your &lt;em&gt;Hackathon Starter&lt;/em&gt; directory, run &lt;code&gt;git remote add azure [Azure Git URL]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To push your changes run &lt;code&gt;git push azure master&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;You will be prompted for the password you created earlier&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;On &lt;strong&gt;Deployments&lt;/strong&gt; tab of your Windows Azure Web App, you will see the deployment history&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;IBM Bluemix Cloud Platform&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; &lt;em&gt;At this point it appears that Bluemix&#39;s free tier to host NodeJS apps is limited to 30 days. If you are looking for a free tier service to host your app, Render might be a better choice at this point&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a Bluemix Account&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://console.ng.bluemix.net/registration/?target=%2Fdashboard%2Fapps&#34;&gt;Sign up&lt;/a&gt; for Bluemix, or use an existing account.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download and install the &lt;a href=&#34;https://github.com/cloudfoundry/cli&#34;&gt;Cloud Foundry CLI&lt;/a&gt; to push your applications to Bluemix.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a &lt;code&gt;manifest.yml&lt;/code&gt; file in the root of your application.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;applications:&#xA;- name:      &amp;lt;your-app-name&amp;gt;&#xA;  host:      &amp;lt;your-app-host&amp;gt;&#xA;  memory:    128M&#xA;  services:&#xA;  - myMongo-db-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The host you use will determinate your application URL initially, e.g. &lt;code&gt;&amp;lt;host&amp;gt;.mybluemix.net&lt;/code&gt;. The service name &#39;myMongo-db-name&#39; is a declaration of your MongoDB service. If you are using other services like Watson for example, then you would declare them the same way.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Connect and login to Bluemix via the Cloud-foundry CLI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cf login -a https://api.ng.bluemix.net&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a &lt;a href=&#34;https://www.ng.bluemix.net/docs/#services/MongoDB/index.html#MongoDB&#34;&gt;MongoDB service&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cf create-service mongodb 100 [your-service-name]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; this is a free and experiment verion of MongoDB instance. Use the MongoDB by Compose instance for production applications:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cf create-service compose-for-mongodb Standard [your-service-name]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Push the application&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ cf push&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code&gt;$ cf env &amp;lt;your-app-name &amp;gt;&#xA;(To view the *environment variables* created for your application)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Done&lt;/strong&gt;, now go to the staging domain (&lt;code&gt;&amp;lt;host&amp;gt;.mybluemix.net&lt;/code&gt;) and see your app running.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ibm-bluemix.github.io/&#34;&gt;More Bluemix samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/IBM-Bluemix/todo-apps&#34;&gt;Simple ToDo app in a programming language of your choice&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;IBM Watson&lt;/h3&gt; &#xA;&lt;p&gt;Be sure to check out the full list of Watson services to forwarder enhance your application functionality with a little effort. Watson services are easy to get going; it is simply a RESTful API call. Here is an example of a &lt;a href=&#34;https://tone-analyzer-demo.mybluemix.net/&#34;&gt;Watson Toner Analyzer&lt;/a&gt; to understand the emotional context of a piece of text that you send to Watson.&lt;/p&gt; &#xA;&lt;h4&gt;Watson catalog of services&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.ibm.com/products/watson-assistant&#34;&gt;Virtual Assistant&lt;/a&gt;&lt;/strong&gt; - Deliver consistent and intelligent customer care across all channels and touchpoints with conversational AI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.ibm.com/products/natural-language-understanding&#34;&gt;Natural Language Understanding&lt;/a&gt;&lt;/strong&gt; - Analyze text to extract meta-data from content such as concepts, entities, keywords and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.ibm.com/products/watson-discovery&#34;&gt;Discovery&lt;/a&gt;&lt;/strong&gt; - Accelerate business decisions and processes with an AI-powered intelligent document understanding and content analysis platform.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.ibm.com/products/watson-orchestrate&#34;&gt;Orchestrate&lt;/a&gt;&lt;/strong&gt; - Hand off tedious tasks to Watson and never work the same way again.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ibm.com/watson#work-with-watson&#34;&gt;List of Watson Services&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Google Cloud Platform&lt;/h3&gt; &#xA;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/2810941?v=3&amp;amp;s=64&#34; width=&#34;64&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;Download and install Node.js&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://console.cloud.google.com/project&#34;&gt;Select or create&lt;/a&gt; a Google Cloud Platform Console project&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://support.google.com/cloud/answer/6293499#enable-billing&#34;&gt;Enable billing&lt;/a&gt; for your project (there&#39;s a $300 free trial)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install and initialize the &lt;a href=&#34;https://cloud.google.com/sdk/docs/quickstarts&#34;&gt;Google Cloud SDK&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create an &lt;code&gt;app.yaml&lt;/code&gt; file at the root of your &lt;code&gt;hackathon-starter&lt;/code&gt; folder with the following contents:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;runtime: nodejs&#xA;env: flex&#xA;manual_scaling:&#xA;  instances: 1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure you&#39;ve set &lt;code&gt;MONGODB_URI&lt;/code&gt; in &lt;code&gt;.env.example&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following command to deploy the &lt;code&gt;hackathon-starter&lt;/code&gt; app:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gcloud app deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://console.cloud.google.com/appengine&#34;&gt;Monitor your deployed app&lt;/a&gt; in the Cloud Console&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://console.cloud.google.com/logs/viewer&#34;&gt;View the logs&lt;/a&gt; for your app in the Cloud Console&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Production&lt;/h2&gt; &#xA;&lt;p&gt;If you are starting with this boilerplate to build an application for prod deployment, or if after your hackathon you would like to get your project hardened for production use, see &lt;a href=&#34;https://github.com/sahat/hackathon-starter/raw/master/prod-checklist.md&#34;&gt;prod-checklist.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;You can find the changelog for the project in: &lt;a href=&#34;https://github.com/sahat/hackathon-starter/raw/master/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If something is unclear, confusing, or needs to be refactored, please let me know. Pull requests are always welcome, but due to the opinionated nature of this project, I cannot accept every pull request. Please open an issue before submitting a pull request. This project uses &lt;a href=&#34;https://github.com/airbnb/javascript&#34;&gt;Airbnb JavaScript Style Guide&lt;/a&gt; with a few minor exceptions. If you are submitting a pull request that involves Pug templates, please make sure you are using &lt;em&gt;spaces&lt;/em&gt;, not tabs.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT)&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2014-2023 Sahat Yalkabov&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
</feed>