<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-12-29T01:31:44Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dexie/Dexie.js</title>
    <updated>2025-12-29T01:31:44Z</updated>
    <id>tag:github.com,2025-12-29:/dexie/Dexie.js</id>
    <link href="https://github.com/dexie/Dexie.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Minimalistic Wrapper for IndexedDB&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dexie.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://npmjs.org/package/dexie&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/dexie.svg?style=flat&#34; alt=&#34;NPM Version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/dexie/Dexie.js/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dexie.js is a wrapper library for indexedDB - the standard database in the browser. &lt;a href=&#34;https://dexie.org&#34;&gt;https://dexie.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Why Dexie.js?&lt;/h4&gt; &#xA;&lt;p&gt;IndexedDB is the portable database for all browser engines. Dexie.js makes it fun and easy to work with.&lt;/p&gt; &#xA;&lt;p&gt;But also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dexie.js is widely used by 100,000 of web sites, apps and other projects and supports all browsers, Electron for Desktop apps, Capacitor for iOS / Android apps and of course pure PWAs.&lt;/li&gt; &#xA; &lt;li&gt;Dexie.js works around bugs in the IndexedDB implementations, giving a more stable user experience.&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s an easy step to &lt;a href=&#34;https://dexie.org/#sync&#34;&gt;make it sync&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Hello World&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;script src=&#34;https://unpkg.com/dexie/dist/dexie.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;    &amp;lt;script&amp;gt;&#xA;&#xA;      //&#xA;      // Declare Database&#xA;      //&#xA;      const db = new Dexie(&#39;FriendDatabase&#39;);&#xA;      db.version(1).stores({&#xA;        friends: &#39;++id, age&#39;&#xA;      });&#xA;&#xA;      //&#xA;      // Play with it&#xA;      //&#xA;      db.friends.add({ name: &#39;Alice&#39;, age: 21 }).then(() =&amp;gt; {&#xA;        return db.friends&#xA;          .where(&#39;age&#39;)&#xA;          .below(30)&#xA;          .toArray();&#xA;      }).then(youngFriends =&amp;gt; {&#xA;        alert (`My young friends: ${JSON.stringify(youngFriends)}`);&#xA;      }).catch (e =&amp;gt; {&#xA;        alert(`Oops: ${e}`);&#xA;      });&#xA;&#xA;    &amp;lt;/script&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Yes, it&#39;s that simple. Read &lt;a href=&#34;https://dexie.org/docs/&#34;&gt;the docs&lt;/a&gt; to get into the details.&lt;/p&gt; &#xA;&lt;h4&gt;Hello World (for modern browsers)&lt;/h4&gt; &#xA;&lt;p&gt;All modern browsers support ES modules and top-level awaits. No transipler needed. Here&#39;s the previous example in a modern flavour:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;script type=&#34;module&#34;&amp;gt;&#xA;      // Import Dexie&#xA;      import { Dexie } from &#39;https://unpkg.com/dexie/dist/modern/dexie.mjs&#39;;&#xA;&#xA;      //&#xA;      // Declare Database&#xA;      //&#xA;      const db = new Dexie(&#39;FriendDatabase&#39;);&#xA;      db.version(1).stores({&#xA;        friends: &#39;++id, age&#39;&#xA;      });&#xA;&#xA;      //&#xA;      // Play with it&#xA;      //&#xA;      try {&#xA;        await db.friends.add({ name: &#39;Alice&#39;, age: 21 });&#xA;&#xA;        const youngFriends = await db.friends&#xA;            .where(&#39;age&#39;)&#xA;            .below(30)&#xA;            .toArray();&#xA;&#xA;        alert(`My young friends: ${JSON.stringify(youngFriends)}`);&#xA;      } catch (e) {&#xA;        alert(`Oops: ${e}`);&#xA;      }&#xA;    &amp;lt;/script&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Hello World (React + Typescript)&lt;/h4&gt; &#xA;&lt;p&gt;Real-world apps are often built using components in various frameworks. Here&#39;s a version of Hello World written for React and Typescript. There are also links below this sample to more tutorials for different frameworks...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import React from &#39;react&#39;;&#xA;import { Dexie, type EntityTable } from &#39;dexie&#39;;&#xA;import { useLiveQuery } from &#39;dexie-react-hooks&#39;;&#xA;&#xA;// Typing for your entities (hint is to move this to its own module)&#xA;export interface Friend {&#xA;  id: number;&#xA;  name: string;&#xA;  age: number;&#xA;}&#xA;&#xA;// Database declaration (move this to its own module also)&#xA;export const db = new Dexie(&#39;FriendDatabase&#39;) as Dexie &amp;amp; {&#xA;  friends: EntityTable&amp;lt;Friend, &#39;id&#39;&amp;gt;;&#xA;};&#xA;db.version(1).stores({&#xA;  friends: &#39;++id, age&#39;,&#xA;});&#xA;&#xA;// Component:&#xA;export function MyDexieReactComponent() {&#xA;  const youngFriends = useLiveQuery(() =&amp;gt;&#xA;    db.friends&#xA;      .where(&#39;age&#39;)&#xA;      .below(30)&#xA;      .toArray()&#xA;  );&#xA;&#xA;  return (&#xA;    &amp;lt;&amp;gt;&#xA;      &amp;lt;h3&amp;gt;My young friends&amp;lt;/h3&amp;gt;&#xA;      &amp;lt;ul&amp;gt;&#xA;        {youngFriends?.map((f) =&amp;gt; (&#xA;          &amp;lt;li key={f.id}&amp;gt;&#xA;            Name: {f.name}, Age: {f.age}&#xA;          &amp;lt;/li&amp;gt;&#xA;        ))}&#xA;      &amp;lt;/ul&amp;gt;&#xA;      &amp;lt;button&#xA;        onClick={() =&amp;gt; {&#xA;          db.friends.add({ name: &#39;Alice&#39;, age: 21 });&#xA;        }}&#xA;      &amp;gt;&#xA;        Add another friend&#xA;      &amp;lt;/button&amp;gt;&#xA;    &amp;lt;/&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dexie.org/docs/Tutorial/Getting-started&#34;&gt;Tutorials for React, Svelte, Vue, Angular and vanilla JS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dexie.org/docs/API-Reference&#34;&gt;API Reference&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dexie.org/docs/Samples&#34;&gt;Samples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Performance&lt;/h3&gt; &#xA;&lt;p&gt;Dexie has kick-ass performance. Its &lt;a href=&#34;https://dexie.org/docs/Table/Table.bulkPut()&#34;&gt;bulk methods&lt;/a&gt; take advantage of a lesser-known feature in IndexedDB that makes it possible to store stuff without listening to every onsuccess event. This speeds up the performance to a maximum.&lt;/p&gt; &#xA;&lt;h4&gt;Supported operations&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;above(key): Collection;&#xA;aboveOrEqual(key): Collection;&#xA;add(item, key?): Promise;&#xA;and(filter: (x) =&amp;gt; boolean): Collection;&#xA;anyOf(keys[]): Collection;&#xA;anyOfIgnoreCase(keys: string[]): Collection;&#xA;below(key): Collection;&#xA;belowOrEqual(key): Collection;&#xA;between(lower, upper, includeLower?, includeUpper?): Collection;&#xA;bulkAdd(items: Array): Promise;&#xA;bulkDelete(keys: Array): Promise;&#xA;bulkPut(items: Array): Promise;&#xA;clear(): Promise;&#xA;count(): Promise;&#xA;delete(key): Promise;&#xA;distinct(): Collection;&#xA;each(callback: (obj) =&amp;gt; any): Promise;&#xA;eachKey(callback: (key) =&amp;gt; any): Promise;&#xA;eachPrimaryKey(callback: (key) =&amp;gt; any): Promise;&#xA;eachUniqueKey(callback: (key) =&amp;gt; any): Promise;&#xA;equals(key): Collection;&#xA;equalsIgnoreCase(key): Collection;&#xA;filter(fn: (obj) =&amp;gt; boolean): Collection;&#xA;first(): Promise;&#xA;get(key): Promise;&#xA;inAnyRange(ranges): Collection;&#xA;keys(): Promise;&#xA;last(): Promise;&#xA;limit(n: number): Collection;&#xA;modify(changeCallback: (obj: T, ctx:{value: T}) =&amp;gt; void): Promise;&#xA;modify(changes: { [keyPath: string]: any } ): Promise;&#xA;noneOf(keys: Array): Collection;&#xA;notEqual(key): Collection;&#xA;offset(n: number): Collection;&#xA;or(indexOrPrimayKey: string): WhereClause;&#xA;orderBy(index: string): Collection;&#xA;primaryKeys(): Promise;&#xA;put(item: T, key?: Key): Promise;&#xA;reverse(): Collection;&#xA;sortBy(keyPath: string): Promise;&#xA;startsWith(key: string): Collection;&#xA;startsWithAnyOf(prefixes: string[]): Collection;&#xA;startsWithAnyOfIgnoreCase(prefixes: string[]): Collection;&#xA;startsWithIgnoreCase(key: string): Collection;&#xA;toArray(): Promise;&#xA;toCollection(): Collection;&#xA;uniqueKeys(): Promise;&#xA;until(filter: (value) =&amp;gt; boolean, includeStopEntry?: boolean): Collection;&#xA;update(key: Key, changes: { [keyPath: string]: any }): Promise;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is a mix of methods from &lt;a href=&#34;https://dexie.org/docs/WhereClause/WhereClause&#34;&gt;WhereClause&lt;/a&gt;, &lt;a href=&#34;https://dexie.org/docs/Table/Table&#34;&gt;Table&lt;/a&gt; and &lt;a href=&#34;https://dexie.org/docs/Collection/Collection&#34;&gt;Collection&lt;/a&gt;. Dive into the &lt;a href=&#34;https://dexie.org/docs/API-Reference&#34;&gt;API reference&lt;/a&gt; to see the details.&lt;/p&gt; &#xA;&lt;h2&gt;Dexie Cloud&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dexie.org/cloud/&#34;&gt;Dexie Cloud&lt;/a&gt; is a commercial offering that can be used as an add-on to Dexie.js. It syncs a Dexie database with a server and enables developers to build apps without having to care about backend or database layer else than the frontend code with Dexie.js as the sole database layer.&lt;/p&gt; &#xA;&lt;p&gt;Source for a sample Dexie Cloud app: &lt;a href=&#34;https://github.com/dexie/Dexie.js/tree/master/samples/dexie-cloud-todo-app&#34;&gt;Dexie Cloud To-do app&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See the sample Dexie Cloud app in action: &lt;a href=&#34;https://dexie.github.io/Dexie.js/dexie-cloud-todo-app/&#34;&gt;https://dexie.github.io/Dexie.js/dexie-cloud-todo-app/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Samples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dexie.org/docs/Samples&#34;&gt;https://dexie.org/docs/Samples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dexie/Dexie.js/tree/master/samples&#34;&gt;https://github.com/dexie/Dexie.js/tree/master/samples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Knowledge Base&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dexie.org/docs/Questions-and-Answers&#34;&gt;https://dexie.org/docs/Questions-and-Answers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Website&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dexie.org&#34;&gt;https://dexie.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install via npm&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install dexie&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;For those who don&#39;t like package managers, here&#39;s the download links:&lt;/p&gt; &#xA;&lt;h3&gt;UMD (for legacy script includes as well as commonjs require):&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://unpkg.com/dexie@latest/dist/dexie.min.js&#34;&gt;https://unpkg.com/dexie@latest/dist/dexie.min.js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://unpkg.com/dexie@latest/dist/dexie.min.js.map&#34;&gt;https://unpkg.com/dexie@latest/dist/dexie.min.js.map&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Modern (ES module):&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://unpkg.com/dexie@latest/dist/modern/dexie.min.mjs&#34;&gt;https://unpkg.com/dexie@latest/dist/modern/dexie.min.mjs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://unpkg.com/dexie@latest/dist/modern/dexie.min.mjs.map&#34;&gt;https://unpkg.com/dexie@latest/dist/modern/dexie.min.mjs.map&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Typings:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://unpkg.com/dexie@latest/dist/dexie.d.ts&#34;&gt;https://unpkg.com/dexie@latest/dist/dexie.d.ts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/dexie/Dexie.js/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm install&#xA;pnpm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Test&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Watch&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm run watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.lambdatest.com/&#34;&gt;&lt;img src=&#34;https://dexie.org/assets/images/lambdatest2.png&#34; alt=&#34;Browser testing via LAMDBATEST&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>