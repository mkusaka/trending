<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-16T01:31:49Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WebDevSimplified/react-folder-structure</title>
    <updated>2022-07-16T01:31:49Z</updated>
    <id>tag:github.com,2022-07-16:/WebDevSimplified/react-folder-structure</id>
    <link href="https://github.com/WebDevSimplified/react-folder-structure" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>xushengfeng/eSearch</title>
    <updated>2022-07-16T01:31:49Z</updated>
    <id>tag:github.com,2022-07-16:/xushengfeng/eSearch</id>
    <link href="https://github.com/xushengfeng/eSearch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;截屏OCR搜索翻译以图搜图贴图录屏 Screenshot OCR search translate search for picture paste the picture on the screen screen recorder&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;eSearch&lt;/h1&gt; &#xA;&lt;p&gt;(中文 | &lt;a href=&#34;https://raw.githubusercontent.com/xushengfeng/eSearch/master/README_en.md&#34;&gt;English&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://esearch.vercel.app/readme/title_photo.svg?sanitize=true&#34; alt=&#34;LOGO&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xushengfeng/eSearch/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/xushengfeng/eSearch&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-Windows%20%7C%20Linux%20%7C%20macOS-lightgrey&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://github.com/xushengfeng/eSearch/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/xushengfeng/eSearch&#34; alt=&#34;release-date&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xushengfeng/eSearch/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/xushengfeng/eSearch&#34; alt=&#34;release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xushengfeng/eSearch/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/xushengfeng/eSearch/total?color=brightgreen&amp;amp;label=%E6%80%BB%E4%B8%8B%E8%BD%BD%E9%87%8F&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aur.archlinux.org/packages/e-search&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/aur-e--search-blue?logo=archlinux&#34; alt=&#34;aur&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aur.archlinux.org/packages/e-search-git&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/aur-e--search--git-blue?logo=archlinux&#34; alt=&#34;aur1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;eSearch 是&lt;a href=&#34;https://github.com/xushengfeng/Information-portal.git&#34;&gt;Information-portal&lt;/a&gt;的&lt;img alt=&#34;electron&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/electron.png?v8&#34;&gt;)重写版(顺便加了亿些功能)&lt;/p&gt; &#xA;&lt;p&gt;主要是想在 Linux 上(win 和 mac 上也能用)实现&lt;a href=&#34;https://www.smartisan.com/pr/videos/bigbang-introduction&#34;&gt;锤子大爆炸&lt;/a&gt;或&lt;a href=&#34;https://www.miui.com/zt/miui9/index.html&#34;&gt;小米传送门&lt;/a&gt;这样的&lt;strong&gt;屏幕搜索&lt;/strong&gt;功能，当然也是一款方便的&lt;strong&gt;截屏软件&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;经过数次版本迭代，eSearch 的功能愈加丰富&lt;/p&gt; &#xA;&lt;p&gt;即拥有 &lt;strong&gt;截屏+OCR+搜索+翻译+贴图+以图搜图+录屏&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://esearch.vercel.app/readme/1.png&#34; alt=&#34;截屏界面&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;字体是&lt;a href=&#34;https://github.com/tonsky/FiraCode&#34;&gt;FiraCode&lt;/a&gt;，字体可在设置里设置&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://esearch.vercel.app/readme/2.png&#34; alt=&#34;识别文字主页面&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;下载安装&lt;/h2&gt; &#xA;&lt;p&gt;到网站&lt;a href=&#34;https://esearch.vercel.app/#download&#34;&gt;eSearch&lt;/a&gt;下载&lt;/p&gt; &#xA;&lt;p&gt;或在右侧 releases 打开标签，选择符合你系统的包并下载安装&lt;/p&gt; &#xA;&lt;p&gt;国内快速下载链接：&lt;a href=&#34;https://hub.fastgit.xyz/xushengfeng/eSearch/releases&#34;&gt;Releases · xushengfeng/eSearch · fastgit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ArchLinux 可在 AUR 查找安装 &lt;code&gt;e-search&lt;/code&gt;或&lt;code&gt;e-search-git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;winget &lt;code&gt;winget install esearch&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;OCR 服务&lt;/h2&gt; &#xA;&lt;p&gt;软件不附带本地 OCR 核心服务，但在启动时会提示下载。&lt;/p&gt; &#xA;&lt;p&gt;本地 OCR 由&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;PaddleOCR&lt;/a&gt;提供支持，在&lt;a href=&#34;https://github.com/xushengfeng/eSearch-OCR&#34;&gt;eSearch-OCR&lt;/a&gt;中发布编译好的服务。&lt;/p&gt; &#xA;&lt;p&gt;默认启用本地 OCR 服务，若想使用在线 OCR，目前提供了百度在线 OCR，需要依据&lt;a href=&#34;https://cloud.baidu.com/doc/OCR/s/dk3iqnq51&#34;&gt;教程&lt;/a&gt;获取&lt;em&gt;API KEY&lt;/em&gt; 以及 &lt;em&gt;Secret KEY&lt;/em&gt;，截止 2022 年 1 月，百度 OCR 还是可以&lt;a href=&#34;https://cloud.baidu.com/doc/OCR/s/dk3iqnq51&#34;&gt;免费领取服务&lt;/a&gt;。将获取到的&lt;em&gt;API KEY&lt;/em&gt; 和&lt;em&gt;Secret KEY&lt;/em&gt; 以及相应的你选择的文字识别服务&lt;a href=&#34;https://cloud.baidu.com/doc/OCR/s/zk3h7xz52#%E8%AF%B7%E6%B1%82%E8%AF%B4%E6%98%8E&#34;&gt;&lt;em&gt;URL&lt;/em&gt;&lt;/a&gt; 填入软件设置，去掉离线 OCR 的勾选即可使用在线 OCR。&lt;/p&gt; &#xA;&lt;h2&gt;源码运行&amp;amp;编译&lt;/h2&gt; &#xA;&lt;p&gt;编译需要&lt;code&gt;python&lt;/code&gt; 和 &lt;code&gt;C++&lt;/code&gt;环境，Windows 下编译需要 &lt;code&gt;python&lt;/code&gt; 和&lt;code&gt;visual studio&lt;/code&gt;（安装 C++）&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/xushengfeng/eSearch.git&#xA;cd eSearch&#xA;npm install&#xA;# 运行&#xA;npx electron .&#xA;# 编译&#xA;npm run rebuild&#xA;npm run dist&#xA;# 将在build目录生产安装包和解压的目录&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;修改已安装的程序&lt;/h3&gt; &#xA;&lt;p&gt;先按下&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;I&lt;/kbd&gt;，或在菜单栏-识图-开发者工具 打开开发者工具进行调试。修改调试知道满意后，在对源码进行修改。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 安装asar&#xA;npm install -g asar&#xA;asar e [设置里提示的运行位置]&#xA;# 解压后在app目录修改&#xA;# 打包&#xA;asar p app app.asar&#xA;# 重启软件即可&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;启动&lt;/h2&gt; &#xA;&lt;p&gt;在你的启动器打开 eSearch，他将出现在托盘。Gnome 用户需要安装&lt;a href=&#34;https://extensions.gnome.org/extension/615/appindicator-support/&#34;&gt;appindicator&lt;/a&gt;插件&lt;/p&gt; &#xA;&lt;p&gt;默认快捷键为 &lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;(你也可以在设置里设置快捷键)&lt;/p&gt; &#xA;&lt;h3&gt;Linux 下的快捷键&lt;/h3&gt; &#xA;&lt;p&gt;大多数 Linux 桌面环境支持自定义快捷键，&lt;strong&gt;eSearch&lt;/strong&gt;支持 cli，这也意味着你可以进行系统级设置快捷键&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;esearch (若找不到，请尝试e-search)&#xA;&#x9;-a # 自动搜索&#xA;&#x9;-c # 截屏搜索&#xA;&#x9;-s # 选中搜索&#xA;&#x9;-b # 剪贴板搜索&#xA;&#x9;-q # 快速截屏&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;不建议在终端进行自动或选中搜索，否则&lt;strong&gt;eSearch&lt;/strong&gt;会执行&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;，从而导致终止终端程序&lt;/p&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;p&gt;已经勾选的功能是开发过程最新功能，但可能还没发布在最新版本&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 截屏 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 框选裁切&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 框选大小位置可调整(支持方向键或 WASD)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 框选大小栏可输入四则运算式调整&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 取色器&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 放大镜&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 画笔（自由画笔）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 几何形状（边框填充支持调节）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 高级画板设置（使用 Fabric.js 的 api）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 图像滤镜（支持局部马赛克模糊和色彩调节）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 自定义框选松开后的操作&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 快速截取全屏到剪贴板或自定义的目录&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 截屏历史记录&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 窗口和控件选择（使用 OpenCV 边缘识别）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 长截屏&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 多屏幕&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 录屏 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 录制全屏&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 自定义大小&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 按键提示&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 光标位置提示&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 录制栏&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 流写入&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 录音&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 录制摄像头&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 自定义比特率&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 保存（可选保存为 SVG 可编辑文件）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 其他应用打开&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 复制到剪贴板&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 钉在屏幕上 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 滚轮缩放&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 恢复默认大小位置&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 透明度&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 鼠标穿透&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 二维码识别&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OCR 识别 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 离线 OCR（基于 C++ 或 Python 实现，&lt;a href=&#34;https://github.com/xushengfeng/eSearch-OCR&#34;&gt;eSearch-OCR&lt;/a&gt;）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 自定义离线 OCR 模型和字典&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 其他在线 OCR&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 在线公式识别&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持自己申请秘钥&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 表格识别&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 以图搜图&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 托盘&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 划词句来搜索&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 识别展示 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 自动搜索翻译&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 搜索&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 翻译&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 自定义搜索翻译引擎&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 自定义搜索翻译引擎（POST 模式，可用 Api）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 软件自带浏览器打开&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 跟随关闭、失焦关闭&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 系统浏览器打开&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 链接识别&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 历史记录&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 自动删除换行（用于自动排版）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 查找替换（支持正则匹配）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 其他编辑器编辑（支持自动重载）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 行号&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 拼写检查&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Wayland 桌面&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/28475549/155870834-34ffa59f-9eac-4eea-9d82-135681d7dfa9.mp4&#34;&gt;https://user-images.githubusercontent.com/28475549/155870834-34ffa59f-9eac-4eea-9d82-135681d7dfa9.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;截屏，自由调整框选大小（视频约 2.6MB）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/28475549/155870857-99c7d6d0-a90b-4558-872a-85f2603225d6.mp4&#34;&gt;https://user-images.githubusercontent.com/28475549/155870857-99c7d6d0-a90b-4558-872a-85f2603225d6.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;取色器（视频约 1MB）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/28475549/155870867-fb0d31f0-2e06-431c-9ae9-ee3af5a5c08e.mp4&#34;&gt;https://user-images.githubusercontent.com/28475549/155870867-fb0d31f0-2e06-431c-9ae9-ee3af5a5c08e.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Ding 在屏幕上，透明度调节、归位以及鼠标操作（视频约 1.8MB）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://esearch.vercel.app/readme/3.png&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;绘图界面&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/28475549/155870881-9b2fc1b3-77de-4a99-8076-ed49b7b5c4c0.mp4&#34;&gt;https://user-images.githubusercontent.com/28475549/155870881-9b2fc1b3-77de-4a99-8076-ed49b7b5c4c0.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;主页面搜索和其他应用编辑（视频约 1.6MB）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://esearch.vercel.app/readme/4.png&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;主页面查找替换（支持正则）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;国际化&lt;/h2&gt; &#xA;&lt;p&gt;大多数按钮使用图标，简少了不必要的翻译&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 简体中文&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 繁体中文&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 世界语&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 西班牙语&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 阿拉伯语&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 英语&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 法语&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 俄语&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;测试&lt;/h2&gt; &#xA;&lt;p&gt;在 ArchLinux,KDE plasma,Xorg 下测试通过&lt;/p&gt; &#xA;&lt;p&gt;Windows10 和 Windows11 测试通过&lt;/p&gt; &#xA;&lt;p&gt;macOS Catalina 测试通过&lt;/p&gt; &#xA;&lt;p&gt;Wayland 桌面环境暂时不支持&lt;/p&gt; &#xA;&lt;h2&gt;开发原因&lt;/h2&gt; &#xA;&lt;p&gt;我在用 Windows 时一直用这个好用的截屏软件：&lt;a href=&#34;https://zh.snipaste.com/&#34;&gt;Snipaste - 截图 + 贴图&lt;/a&gt;，但我现在切换到 Linux，Snipaste 不支持，所以我选择了&lt;a href=&#34;https://flameshot.org/&#34;&gt;Flameshot&lt;/a&gt;，很可惜它没有直观的取色器。&lt;/p&gt; &#xA;&lt;p&gt;促使我开发 eSearch 的另一个契机是我很享受在手机上使用&lt;a href=&#34;https://www.smartisan.com/pr/videos/bigbang-introduction&#34;&gt;锤子大爆炸&lt;/a&gt;或&lt;a href=&#34;https://www.miui.com/zt/miui9/index.html&#34;&gt;小米传送门&lt;/a&gt;这样的即时信息搜索工具，但我没有找到电脑上类似的代替品。&lt;/p&gt; &#xA;&lt;p&gt;所以我干脆自己开发一个“截屏+OCR+搜索+贴图”的软件。最开始用 python+pyqt 开发出&lt;a href=&#34;https://github.com/xushengfeng/Information-portal.git&#34;&gt;Information-portal&lt;/a&gt;，但因为我不熟悉 pyqt，所以我转战&lt;img alt=&#34;electron&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/electron.png?v8&#34;&gt;)，开发出本软件。😄&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xushengfeng/eSearch/master/LICENSE&#34;&gt;GPL-3.0&lt;/a&gt; © xushengfeng&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fabricjs/fabric.js</title>
    <updated>2022-07-16T01:31:49Z</updated>
    <id>tag:github.com,2022-07-16:/fabricjs/fabric.js</id>
    <link href="https://github.com/fabricjs/fabric.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Javascript Canvas Library, SVG-to-Canvas (&amp; canvas-to-SVG) Parser&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fabric.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://fabricjs.com/kitchensink&#34; target=&#34;_blank&#34;&gt;&lt;img align=&#34;right&#34; src=&#34;https://github.com/kangax/fabric.js/raw/master/lib/screenshot.png&#34; style=&#34;width:400px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://fabricjs.com&#34;&gt;FabricJS.com&lt;/a&gt; is a &lt;strong&gt;simple and powerful Javascript HTML5 canvas library&lt;/strong&gt;. It is also an &lt;strong&gt;SVG-to-canvas parser&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;!-- build/coverage status, climate --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://travis-ci.org/#!/kangax/fabric.js&#34;&gt;&lt;img src=&#34;https://secure.travis-ci.org/fabricjs/fabric.js.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/kangax/fabric.js&#34;&gt;&lt;img src=&#34;https://d3s6mut3hikguw.cloudfront.net/github/kangax/fabric.js/badges/gpa.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/fabricjs/fabric.js&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&#34; alt=&#34;Gitpod Ready-to-Code&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- npm, bower, CDNJS versions, downloads --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cdnjs.com/libraries/fabric.js&#34;&gt;&lt;img src=&#34;https://img.shields.io/cdnjs/v/fabric.js.svg?sanitize=true&#34; alt=&#34;CDNJS version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://badge.fury.io/js/fabric&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/fabric.svg?sanitize=true&#34; alt=&#34;NPM version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.org/package/fabric&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/fabric.svg?sanitize=true&#34; alt=&#34;Downloads per month&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://badge.fury.io/bo/fabric&#34;&gt;&lt;img src=&#34;https://badge.fury.io/bo/fabric.svg?sanitize=true&#34; alt=&#34;Bower version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;drag-n-drop objects on canvas,&lt;/li&gt; &#xA; &lt;li&gt;scale, move, rotate and group objects with mouse,&lt;/li&gt; &#xA; &lt;li&gt;use predefined shapes or create custom objects,&lt;/li&gt; &#xA; &lt;li&gt;works super-fast with many objects,&lt;/li&gt; &#xA; &lt;li&gt;supports JPG, PNG, JSON and SVG formats,&lt;/li&gt; &#xA; &lt;li&gt;ready-to-use image filters,&lt;/li&gt; &#xA; &lt;li&gt;create animations,&lt;/li&gt; &#xA; &lt;li&gt;and much more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://fabricjs.com/fabric-intro-part-1&#34;&gt;Introduction&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&#34;http://fabricjs.com/docs/&#34;&gt;Docs&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&#34;http://fabricjs.com/demos/&#34;&gt;Demos&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&#34;http://fabricjs.com/kitchensink/&#34;&gt;Kitchensink&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&#34;http://fabricjs.com/benchmarks/&#34;&gt;Benchmarks&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&#34;https://github.com/fabricjs/fabric.js/wiki&#34;&gt;Contribution&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm install fabric --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After this, you can import fabric like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;const fabric = require(&#34;fabric&#34;).fabric;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can use this instead if your build pipeline supports ES6 imports:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import { fabric } from &#34;fabric&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: If you are using Fabric.js in a Node.js script, you will depend on &lt;a href=&#34;https://github.com/Automattic/node-canvas&#34;&gt;node-canvas&lt;/a&gt;. &lt;code&gt;node-canvas&lt;/code&gt; is an HTML canvas replacement that works on top of native libraries. Please &lt;a href=&#34;https://github.com/Automattic/node-canvas#compiling&#34;&gt;follow the instructions&lt;/a&gt; to get it up and running.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: es6 imports won&#39;t work in browser or with bundlers which expect es6 module like vite. Use commonjs syntax instead.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Plain HTML&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;canvas id=&#34;canvas&#34; width=&#34;300&#34; height=&#34;300&#34;&amp;gt;&amp;lt;/canvas&amp;gt;&#xA;&#xA;&amp;lt;!-- Get latest version: https://cdnjs.com/libraries/fabric.js --&amp;gt;&#xA;&amp;lt;script src=&#34;lib/fabric.js&#34;&amp;gt;&amp;lt;/script&amp;gt; &#xA;&amp;lt;script&amp;gt;&#xA;    var canvas = new fabric.Canvas(&#39;canvas&#39;);&#xA;&#xA;    var rect = new fabric.Rect({&#xA;        top : 100,&#xA;        left : 100,&#xA;        width : 60,&#xA;        height : 70,&#xA;        fill : &#39;red&#39;&#xA;    });&#xA;    canvas.add(rect);&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ReactJS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import React, {useEffect, useRef} from &#39;react&#39;&#xA;import {fabric} from &#39;fabric&#39;&#xA;&#xA;const FabricJSCanvas = () =&amp;gt; {&#xA;  const canvasEl = useRef(null)&#xA;  useEffect(() =&amp;gt; {&#xA;    const options = { ... };&#xA;    const canvas = new fabric.Canvas(canvasEl.current, options);&#xA;    // make the fabric.Canvas instance available to your app&#xA;    updateCanvasContext(canvas);&#xA;    return () =&amp;gt; {&#xA;      updateCanvasContext(null);&#xA;      canvas.dispose()&#xA;    }&#xA;  }, []);&#xA;  &#xA;  return (&amp;lt;canvas width=&#34;300&#34; height=&#34;300&#34; ref={canvasEl}/&amp;gt;)&#xA;});&#xA;export default FabricJSCanvas;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: Fabric.js requires a &lt;code&gt;window&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Build distribution file &lt;strong&gt;[~77K minified, ~20K gzipped]&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ node build.js&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;1.1 Or build a custom distribution file, by passing (comma separated) module names to be included.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ node build.js modules=text,serialization,parser&#xA;   // or&#xA;   $ node build.js modules=text&#xA;   // or&#xA;   $ node build.js modules=parser,text&#xA;   // etc.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;By default (when none of the modules are specified) only basic functionality is included. See the list of modules below for more information on each one of them. Note that default distribution has support for &lt;strong&gt;static canvases&lt;/strong&gt; only.&lt;/p&gt; &lt;p&gt;To get minimal distribution with interactivity, make sure to include corresponding module:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ node build.js modules=interaction&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;1.2 You can also include all modules like so:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ node build.js modules=ALL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;1.3 You can exclude a few modules like so:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ node build.js modules=ALL exclude=gestures,image_filters&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a minified distribution file&lt;/p&gt; &lt;pre&gt;&lt;code&gt; # Using YUICompressor (default option)&#xA; $ node build.js modules=... minifier=yui&#xA;&#xA; # or Google Closure Compiler&#xA; $ node build.js modules=... minifier=closure&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable AMD support via require.js (requires uglify)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ node build.js requirejs modules=...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create source map file for better productive debugging (requires uglify or google closure compiler).&lt;br&gt;More information about &lt;a href=&#34;http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/&#34;&gt;source maps&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ node build.js sourcemap modules=...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you use google closure compiler you have to add &lt;code&gt;sourceMappingURL&lt;/code&gt; manually at the end of the minified file all.min.js (see issue &lt;a href=&#34;https://code.google.com/p/closure-compiler/issues/detail?id=941&#34;&gt;https://code.google.com/p/closure-compiler/issues/detail?id=941&lt;/a&gt;).&lt;/p&gt; &lt;pre&gt;&lt;code&gt; //# sourceMappingURL=fabric.min.js.map&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure code guidelines are met (prerequisite: &lt;code&gt;npm -g install eslint&lt;/code&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ npm run lint &amp;amp;&amp;amp; npm run lint_tests&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;h3&gt;1. Install NPM packages&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Run tests Chrome and Node (by default):&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ testem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See testem docs for more info: &lt;a href=&#34;https://github.com/testem/testem&#34;&gt;https://github.com/testem/testem&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Optional modules&lt;/h2&gt; &#xA;&lt;p&gt;These are the optional modules that could be specified for inclusion, when building custom version of fabric:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;text&lt;/strong&gt; — Adds support for static text (&lt;code&gt;fabric.Text&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;itext&lt;/strong&gt; — Adds support for interactive text (&lt;code&gt;fabric.IText&lt;/code&gt;, &lt;code&gt;fabric.Textbox&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;serialization&lt;/strong&gt; — Adds support for &lt;code&gt;loadFromJSON&lt;/code&gt;, &lt;code&gt;loadFromDatalessJSON&lt;/code&gt;, and &lt;code&gt;clone&lt;/code&gt; methods on &lt;code&gt;fabric.Canvas&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;interaction&lt;/strong&gt; — Adds support for interactive features of fabric — selecting/transforming objects/groups via mouse/touch devices.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;parser&lt;/strong&gt; — Adds support for &lt;code&gt;fabric.parseSVGDocument&lt;/code&gt;, &lt;code&gt;fabric.loadSVGFromURL&lt;/code&gt;, and &lt;code&gt;fabric.loadSVGFromString&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;image_filters&lt;/strong&gt; — Adds support for image filters, such as grayscale of white removal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;easing&lt;/strong&gt; — Adds support for animation easing functions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;node&lt;/strong&gt; — Adds support for running fabric under node.js, with help of &lt;a href=&#34;https://github.com/tmpvar/jsdom&#34;&gt;jsdom&lt;/a&gt; and &lt;a href=&#34;https://github.com/learnboost/node-canvas&#34;&gt;node-canvas&lt;/a&gt; libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;freedrawing&lt;/strong&gt; — Adds support for free drawing&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;erasing&lt;/strong&gt; — Adds support for object erasing using an eraser brush&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;gestures&lt;/strong&gt; — Adds support for multitouch gestures with help of &lt;a href=&#34;https://github.com/mudcube/Event.js&#34;&gt;Event.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;object_straightening&lt;/strong&gt; — Adds support for rotating an object to one of 0, 90, 180, 270, etc. depending on which is angle is closer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;animation&lt;/strong&gt; — Adds support for animation (&lt;code&gt;fabric.util.animate&lt;/code&gt;, &lt;code&gt;fabric.util.requestAnimFrame&lt;/code&gt;, &lt;code&gt;fabric.Object#animate&lt;/code&gt;, &lt;code&gt;fabric.Canvas#fxCenterObjectH/#fxCenterObjectV/#fxRemove&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additional flags for build script are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;requirejs&lt;/strong&gt; — Makes fabric requirejs AMD-compatible in &lt;code&gt;dist/fabric.js&lt;/code&gt;. &lt;em&gt;Note:&lt;/em&gt; an unminified, requirejs-compatible version is always created in &lt;code&gt;dist/fabric.require.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;no-strict&lt;/strong&gt; — Strips &#34;use strict&#34; directives from source&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;no-svg-export&lt;/strong&gt; — Removes svg exporting functionality&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;sourcemap&lt;/strong&gt; - Generates a sourceMap file and adds the &lt;code&gt;sourceMappingURL&lt;/code&gt; (only if uglifyjs is used) to &lt;code&gt;dist/fabric.min.js&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;node build.js modules=ALL exclude=json no-strict no-svg-export&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unit tested (1150+ tests at the moment, 79%+ coverage)&lt;/li&gt; &#xA; &lt;li&gt;Modular (~60 small &lt;a href=&#34;http://fabricjs.com/docs/&#34;&gt;&#34;classes&#34;, modules, mixins&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Cross-browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kangax/fabric.js/wiki/Focus-on-speed&#34;&gt;Fast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Encapsulated in one object&lt;/li&gt; &#xA; &lt;li&gt;No browser sniffing for critical functionality&lt;/li&gt; &#xA; &lt;li&gt;Runs under ES5 strict mode&lt;/li&gt; &#xA; &lt;li&gt;Runs on a server under &lt;a href=&#34;http://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; (active stable releases and latest of current) (see &lt;a href=&#34;https://github.com/kangax/fabric.js/wiki/Fabric-limitations-in-node.js&#34;&gt;Node.js limitations&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Follows &lt;a href=&#34;http://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported browsers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Firefox 4+&lt;/li&gt; &#xA; &lt;li&gt;Safari 5+&lt;/li&gt; &#xA; &lt;li&gt;Opera 9.64+&lt;/li&gt; &#xA; &lt;li&gt;Chrome (all versions)&lt;/li&gt; &#xA; &lt;li&gt;Edge (chromium based, all versions)&lt;/li&gt; &#xA; &lt;li&gt;IE11 and Edge legacy, not supported. Fabric up to 5.0 is written with ES5 in mind, but no specific tests are run for those browsers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can &lt;a href=&#34;http://fabricjs.com/test/unit/&#34;&gt;run automated unit tests&lt;/a&gt; right in the browser.&lt;/p&gt; &#xA;&lt;h2&gt;More resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/fabricjs&#34;&gt;Fabric.js on Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.codetriage.com/kangax/fabric.js&#34;&gt;Fabric.js on CodeTriage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/fabricjs&#34;&gt;Fabric.js on Stackoverflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jsfiddle.net/user/fabricjs/fiddles/&#34;&gt;Fabric.js on jsfiddle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codepen.io/tag/fabricjs&#34;&gt;Fabric.js on Codepen.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/kangax/fabricjs-building-acanvaslibrarybk&#34;&gt;Presentation from BK.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/kangax/fabric-falsy-values-8067834&#34;&gt;Presentation from Falsy Values&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/kangax&#34;&gt;@kangax&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/AndreaBogazzi&#34;&gt;Andrea Bogazzi&lt;/a&gt; for help with bugs, new features, documentation, GitHub issues&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/melchiar&#34;&gt;melchiar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ShaMan123&#34;&gt;ShaMan123&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ernest Delgado for the original idea of &lt;a href=&#34;http://www.ernestdelgado.com/archive/canvas/&#34;&gt;manipulating images on canvas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://twitter.com/hakunin&#34;&gt;Maxim &#34;hakunin&#34; Chernyak&lt;/a&gt; for ideas, and help with various parts of the library throughout its life&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nisnya.com&#34;&gt;Sergey Nisnevich&lt;/a&gt; for help with geometry logic&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/kienzle_s&#34;&gt;Stefan Kienzle&lt;/a&gt; for help with bugs, features, documentation, GitHub issues&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.shutterstock.com/jobs&#34;&gt;Shutterstock&lt;/a&gt; for the time and resources invested in using and improving Fabric.js&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kangax/fabric.js/graphs/contributors&#34;&gt;and all the other GitHub contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsor authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flattr.com/@kangax&#34;&gt;https://flattr.com/@kangax&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sponsors/asturur&#34;&gt;https://github.com/sponsors/asturur&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/fabricJS&#34;&gt;https://www.patreon.com/fabricJS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;MIT License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2008-2015 Printio (Juriy Zaytsev, Maxim Chernyak)&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
</feed>