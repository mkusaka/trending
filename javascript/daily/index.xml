<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-01T01:36:42Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>usebruno/bruno</title>
    <updated>2023-10-01T01:36:42Z</updated>
    <id>tag:github.com,2023-10-01:/usebruno/bruno</id>
    <link href="https://github.com/usebruno/bruno" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Opensource IDE For Exploring and Testing Api&#39;s (lightweight alternative to postman/insomnia)&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/usebruno/bruno/main/assets/images/logo-transparent.png&#34; width=&#34;80&#34;&gt; &#xA;&lt;h3&gt;Bruno - Opensource IDE for exploring and testing APIs.&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/gh/usebruno%bruno&#34;&gt;&lt;img src=&#34;https://badge.fury.io/gh/usebruno%2Fbruno.svg?sanitize=true&#34; alt=&#34;GitHub version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/usebruno/bruno/workflows/unit-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/usebruno/bruno/actions/workflows/unit-tests.yml/badge.svg?branch=main&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/usebruno/bruno/pulse&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/usebruno/bruno&#34; alt=&#34;Commit Activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/use_bruno&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/use_bruno?style=social&amp;amp;logo=twitter&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.usebruno.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Website-Visit-blue&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.usebruno.com/downloads&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Download-Latest-brightgreen&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bruno is a new and innovative API client, aimed at revolutionizing the status quo represented by Postman and similar tools out there.&lt;/p&gt; &#xA;&lt;p&gt;Bruno stores your collections directly in a folder on your filesystem. We use a plain text markup language, Bru, to save information about API requests.&lt;/p&gt; &#xA;&lt;p&gt;You can use git or any version control of your choice to collaborate over your API collections.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/usebruno/bruno/main/assets/images/landing-2.png&#34; alt=&#34;bruno&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Run across multiple platforms üñ•Ô∏è&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/usebruno/bruno/main/assets/images/run-anywhere.png&#34; alt=&#34;bruno&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Collaborate via Git üë©‚Äçüíªüßë‚Äçüíª&lt;/h3&gt; &#xA;&lt;p&gt;Or any version control system of your choice&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/usebruno/bruno/main/assets/images/version-control.png&#34; alt=&#34;bruno&#34;&gt; &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Website üìÑ&lt;/h3&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;https://www.usebruno.com&#34;&gt;here&lt;/a&gt; to checkout our website and download the app&lt;/p&gt; &#xA;&lt;h3&gt;Documentation üìÑ&lt;/h3&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;https://docs.usebruno.com&#34;&gt;here&lt;/a&gt; for documentation&lt;/p&gt; &#xA;&lt;h3&gt;Contribute üë©‚Äçüíªüßë‚Äçüíª&lt;/h3&gt; &#xA;&lt;p&gt;I am happy that you are looking to improve bruno. Please checkout the &lt;a href=&#34;https://raw.githubusercontent.com/usebruno/bruno/main/contributing.md&#34;&gt;contributing guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Even if you are not able to make contributions via code, please don&#39;t hesitate to file bugs and feature requests that needs to be implemented to solve your use case.&lt;/p&gt; &#xA;&lt;h3&gt;Support ‚ù§Ô∏è&lt;/h3&gt; &#xA;&lt;p&gt;Woof! If you like project, hit that ‚≠ê button !!&lt;/p&gt; &#xA;&lt;h3&gt;Authors&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/usebruno/bruno/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=usebruno/bruno&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Stay in touch üåê&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/use_bruno&#34;&gt;Twitter&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.usebruno.com&#34;&gt;Website&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://discord.com/invite/KgcZUncpjq&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;License üìÑ&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/usebruno/bruno/main/license.md&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>localtunnel/localtunnel</title>
    <updated>2023-10-01T01:36:42Z</updated>
    <id>tag:github.com,2023-10-01:/localtunnel/localtunnel</id>
    <link href="https://github.com/localtunnel/localtunnel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;expose yourself&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;localtunnel&lt;/h1&gt; &#xA;&lt;p&gt;localtunnel exposes your localhost to the world for easy testing and sharing! No need to mess with DNS or deploy just to have others test out your changes.&lt;/p&gt; &#xA;&lt;p&gt;Great for working with browser testing tools like browserling or external api callback services like twilio which require a public url for callbacks.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx localtunnel --port 8000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Globally&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install -g localtunnel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;As a dependency in your project&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn add localtunnel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CLI usage&lt;/h2&gt; &#xA;&lt;p&gt;When localtunnel is installed globally, just use the &lt;code&gt;lt&lt;/code&gt; command to start the tunnel.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;lt --port 8000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Thats it! It will connect to the tunnel server, setup the tunnel, and tell you what url to use for your testing. This url will remain active for the duration of your session; so feel free to share it with others for happy fun time!&lt;/p&gt; &#xA;&lt;p&gt;You can restart your local server all you want, &lt;code&gt;lt&lt;/code&gt; is smart enough to detect this and reconnect once it is back.&lt;/p&gt; &#xA;&lt;h3&gt;Arguments&lt;/h3&gt; &#xA;&lt;p&gt;Below are some common arguments. See &lt;code&gt;lt --help&lt;/code&gt; for additional arguments&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--subdomain&lt;/code&gt; request a named subdomain on the localtunnel server (default is random characters)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--local-host&lt;/code&gt; proxy to a hostname other than localhost&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You may also specify arguments via env variables. E.x.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PORT=3000 lt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;p&gt;The localtunnel client is also usable through an API (for test integration, automation, etc)&lt;/p&gt; &#xA;&lt;h3&gt;localtunnel(port [,options][,callback])&lt;/h3&gt; &#xA;&lt;p&gt;Creates a new localtunnel to the specified local &lt;code&gt;port&lt;/code&gt;. Will return a Promise that resolves once you have been assigned a public localtunnel url. &lt;code&gt;options&lt;/code&gt; can be used to request a specific &lt;code&gt;subdomain&lt;/code&gt;. A &lt;code&gt;callback&lt;/code&gt; function can be passed, in which case it won&#39;t return a Promise. This exists for backwards compatibility with the old Node-style callback API. You may also pass a single options object with &lt;code&gt;port&lt;/code&gt; as a property.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const localtunnel = require(&#39;localtunnel&#39;);&#xA;&#xA;(async () =&amp;gt; {&#xA;  const tunnel = await localtunnel({ port: 3000 });&#xA;&#xA;  // the assigned public url for your tunnel&#xA;  // i.e. https://abcdefgjhij.localtunnel.me&#xA;  tunnel.url;&#xA;&#xA;  tunnel.on(&#39;close&#39;, () =&amp;gt; {&#xA;    // tunnels are closed&#xA;  });&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;options&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;port&lt;/code&gt; (number) [required] The local port number to expose through localtunnel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;subdomain&lt;/code&gt; (string) Request a specific subdomain on the proxy server. &lt;strong&gt;Note&lt;/strong&gt; You may not actually receive this name depending on availability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;host&lt;/code&gt; (string) URL for the upstream proxy server. Defaults to &lt;code&gt;https://localtunnel.me&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;local_host&lt;/code&gt; (string) Proxy to this hostname instead of &lt;code&gt;localhost&lt;/code&gt;. This will also cause the &lt;code&gt;Host&lt;/code&gt; header to be re-written to this value in proxied requests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;local_https&lt;/code&gt; (boolean) Enable tunneling to local HTTPS server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;local_cert&lt;/code&gt; (string) Path to certificate PEM file for local HTTPS server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;local_key&lt;/code&gt; (string) Path to certificate key file for local HTTPS server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;local_ca&lt;/code&gt; (string) Path to certificate authority file for self-signed certificates.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;allow_invalid_cert&lt;/code&gt; (boolean) Disable certificate checks for your local HTTPS server (ignore cert/key/ca options).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://nodejs.org/api/tls.html#tls_tls_createsecurecontext_options&#34;&gt;tls.createSecureContext&lt;/a&gt; for details on the certificate options.&lt;/p&gt; &#xA;&lt;h3&gt;Tunnel&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;tunnel&lt;/code&gt; instance returned to your callback emits the following events&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;event&lt;/th&gt; &#xA;   &lt;th&gt;args&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;request&lt;/td&gt; &#xA;   &lt;td&gt;info&lt;/td&gt; &#xA;   &lt;td&gt;fires when a request is processed by the tunnel, contains &lt;em&gt;method&lt;/em&gt; and &lt;em&gt;path&lt;/em&gt; fields&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;error&lt;/td&gt; &#xA;   &lt;td&gt;err&lt;/td&gt; &#xA;   &lt;td&gt;fires when an error happens on the tunnel&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;close&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;fires when the tunnel has closed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The &lt;code&gt;tunnel&lt;/code&gt; instance has the following methods&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;method&lt;/th&gt; &#xA;   &lt;th&gt;args&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;close&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;close the tunnel&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;other clients&lt;/h2&gt; &#xA;&lt;p&gt;Clients in other languages&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;go&lt;/em&gt; &lt;a href=&#34;https://github.com/NoahShen/gotunnelme&#34;&gt;gotunnelme&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;go&lt;/em&gt; &lt;a href=&#34;https://github.com/localtunnel/go-localtunnel&#34;&gt;go-localtunnel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;C#/.NET&lt;/em&gt; &lt;a href=&#34;https://github.com/angelobreuer/localtunnel-client&#34;&gt;localtunnel-client&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Rust&lt;/em&gt; &lt;a href=&#34;https://github.com/kaichaosun/rlt&#34;&gt;rlt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;server&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/github.com/localtunnel/server&#34;&gt;localtunnel/server&lt;/a&gt; for details on the server that powers localtunnel.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
</feed>