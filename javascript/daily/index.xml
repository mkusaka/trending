<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-13T01:39:46Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Vincenius/workout-lol</title>
    <updated>2023-07-13T01:39:46Z</updated>
    <id>tag:github.com,2023-07-13:/Vincenius/workout-lol</id>
    <link href="https://github.com/Vincenius/workout-lol" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple way to create a workout plan&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/Vincenius/workout-lol/raw/main/public/logo.png?raw=true&#34; width=&#34;25%&#34; height=&#34;25%&#34;&gt; &#xA; &lt;h1&gt;Workout.lol&lt;/h1&gt; &#xA; &lt;h3&gt;&lt;em&gt;The easiest way to create a workout routine&lt;/em&gt;&lt;/h3&gt; &#xA; &lt;p&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/Vincenius/workout-lol?style=plastic&#34; alt=&#34;Contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/Vincenius/workout-lol&#34; alt=&#34;Forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/Vincenius/workout-lol&#34; alt=&#34;Stars&#34;&gt; &#xA;  &lt;!-- &lt;img src=&#34;https://img.shields.io/github/license/Vincenius/workout-lol&#34; alt=&#34;Licence&#34;&gt; --&gt; &lt;img src=&#34;https://img.shields.io/github/issues/Vincenius/workout-lol&#34; alt=&#34;Issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/count/Vincenius/workout-lol&#34; alt=&#34;Languages&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/Vincenius/workout-lol&#34; alt=&#34;Repository Size&#34;&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A small web application to create workouts based on your available equipment and the muscles you want to train.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Link&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can self-host the project or use the web app on &lt;a href=&#34;https://workout.lol&#34;&gt;workout.lol&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Steps to run it locally&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository to your local machine &lt;br&gt; &lt;code&gt;git clone https://github.com/Vincenius/workout-lol.git&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to the app directory &lt;br&gt; &lt;code&gt;cd workout-lol&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the necessary dependencies &lt;br&gt; &lt;code&gt;yarn&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Initialize the Mongo DB by importing the dump files from &lt;code&gt;lib/dump/prod&lt;/code&gt;:&lt;/p&gt; &lt;p&gt;4.1 For the &#xA;   &lt;collection&gt;&#xA;    .metadata.json, you&#39;ll have to do this :&#xA;   &lt;/collection&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;mongoimport --uri mongodb+srv://&amp;lt;USERNAME&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;CLUSTER_NUMBER&amp;gt;.&amp;lt;URI&amp;gt;.mongodb.net/&amp;lt;DATABASE&amp;gt; --collection &amp;lt;COLLECTION&amp;gt; --type json --file &amp;lt;FILEPATH&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;4.2 For the &#xA;   &lt;collection&gt;&#xA;    .bson, you&#39;ll have to do this : &#xA;    &lt;code&gt;mongorestore --uri mongodb+srv://&amp;lt;USERNAME&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;CLUSTER_NUMBER&amp;gt;.&amp;lt;URI&amp;gt;.mongodb.net/&amp;lt;DATABASE&amp;gt; --collection &amp;lt;COLLECTION&amp;gt; &amp;lt;FILEPATH&amp;gt;&lt;/code&gt;&#xA;   &lt;/collection&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;copy the &lt;code&gt;.env.dist&lt;/code&gt; file to &lt;code&gt;.env&lt;/code&gt; and set environment variables as described in the file&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the local development server &lt;br&gt; &lt;code&gt;npm run dev&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open your browser to &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/wweb_dev&#34;&gt;&lt;img src=&#34;https://github-production-user-asset-6210df.s3.amazonaws.com/43953403/248202602-f81b0cf6-1394-4ab8-8ddf-4352bd8dbe7d.jpg&#34; alt=&#34;wweb_dev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/BradiceanuM&#34;&gt;&lt;img src=&#34;https://github-production-user-asset-6210df.s3.amazonaws.com/43953403/248202501-4d5ae3c3-b83b-4a2c-b7e2-0e38705f5487.jpg&#34; alt=&#34;BradiceanuM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ngthuongdoan&#34;&gt;&lt;img src=&#34;https://github-production-user-asset-6210df.s3.amazonaws.com/43953403/251365548-f713917f-93f9-416b-af75-24bfed8dd2f5.jpg&#34; alt=&#34;ngthuongdoan&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supporters&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://ko-fi.com/C1C7RPVB&#34;&gt;&lt;img src=&#34;https://github-production-user-asset-6210df.s3.amazonaws.com/43953403/252555917-a6ef8d46-c9ec-46c9-9fff-bdbf3653ddaa.png&#34; alt=&#34;medecau&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://ko-fi.com/S6S3169OG&#34;&gt;&lt;img src=&#34;https://github-production-user-asset-6210df.s3.amazonaws.com/43953403/252555938-e0cd7e03-27da-4b10-8e68-e1060dd05e02.jpg&#34; alt=&#34;EL&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://github.com/Vincenius/workout-lol/assets/43953403/f476691e-3739-4a22-8692-a9b33a92a94a&#34; alt=&#34;alvaro&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/devjev&#34;&gt;&lt;img src=&#34;https://github-production-user-asset-6210df.s3.amazonaws.com/43953403/252653717-455dc7f8-e5c7-448d-835e-f87c27f0423c.png&#34; alt=&#34;devjev&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;medecau&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td&gt;EL&lt;/td&gt; &#xA;   &lt;td&gt;alvaro&lt;/td&gt; &#xA;   &lt;td&gt;devjev&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Become a supporter by donating on Ko-Fi:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/workout_lol&#34;&gt;https://ko-fi.com/workout_lol&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Public Metrics&lt;/h2&gt; &#xA;&lt;p&gt;ðŸ’¸ &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1BeSvsyMg2c1Fz7RAyO2AC3g_12JAGNLaepGFbN_aYOo/edit#gid=0&#34;&gt;Cost Breakdown&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ðŸ“ˆ &lt;a href=&#34;https://analytics.vincentwill.com/share/js1wXvxU/Workout.lol&#34;&gt;Analytics&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-green.svg?sanitize=true&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>prebid/Prebid.js</title>
    <updated>2023-07-13T01:39:46Z</updated>
    <id>tag:github.com,2023-07-13:/prebid/Prebid.js</id>
    <link href="https://github.com/prebid/Prebid.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Setup and manage header bidding advertising partners without writing code or confusing line items. Prebid.js is open source and free.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/prebid/Prebid.js&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/prebid/Prebid.js.svg?style=svg&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://isitmaintained.com/project/prebid/Prebid.js&#34; title=&#34;Percentage of issues still open&#34;&gt;&lt;img src=&#34;http://isitmaintained.com/badge/open/prebid/Prebid.js.svg?sanitize=true&#34; alt=&#34;Percentage of issues still open&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/prebid/Prebid.js&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/prebid/Prebid.js/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Prebid.js&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A free and open source library for publishers to quickly implement header bidding.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This README is for developers who want to contribute to Prebid.js. Additional documentation can be found at &lt;a href=&#34;http://prebid.org&#34;&gt;the Prebid homepage&lt;/a&gt;. Working examples can be found in &lt;a href=&#34;http://prebid.org/dev-docs/getting-started.html&#34;&gt;the developer docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Prebid.js is open source software that is offered for free as a convenience. While it is designed to help companies address legal requirements associated with header bidding, we cannot and do not warrant that your use of Prebid.js will satisfy legal requirements. You are solely responsible for ensuring that your use of Prebid.js complies with all applicable laws. We strongly encourage you to obtain legal advice when using Prebid.js to ensure your implementation complies with all laws where you operate.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prebid/Prebid.js/master/#Usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prebid/Prebid.js/master/#Install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prebid/Prebid.js/master/#Build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prebid/Prebid.js/master/#Run&#34;&gt;Run&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prebid/Prebid.js/master/#Contribute&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Usage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage (as a npm dependency)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Requires Prebid.js v1.38.0+&lt;/p&gt; &#xA;&lt;p&gt;Prebid.js depends on Babel and some Babel Plugins in order to run correctly in the browser. Here are some examples for configuring webpack to work with Prebid.js.&lt;/p&gt; &#xA;&lt;p&gt;With Babel 7:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// webpack.conf.js&#xA;let path = require(&#39;path&#39;);&#xA;module.exports = {&#xA;  mode: &#39;production&#39;,&#xA;  module: {&#xA;    rules: [&#xA;      &#xA;      // this rule can be excluded if you don&#39;t require babel-loader for your other application files&#xA;      {&#xA;        test: /\.m?js$/,&#xA;        exclude: /node_modules/,&#xA;        use: {&#xA;          loader: &#39;babel-loader&#39;,&#xA;        }&#xA;      },&#xA;      &#xA;      // this separate rule is required to make sure that the Prebid.js files are babel-ified.  this rule will&#xA;      // override the regular exclusion from above (for being inside node_modules).&#xA;      {&#xA;        test: /.js$/,&#xA;        include: new RegExp(`\\${path.sep}prebid\\.js`),&#xA;        use: {&#xA;          loader: &#39;babel-loader&#39;,&#xA;          // presets and plugins for Prebid.js must be manually specified separate from your other babel rule.&#xA;          // this can be accomplished by requiring prebid&#39;s .babelrc.js file (requires Babel 7 and Node v8.9.0+)&#xA;          // as of Prebid 6, babelrc.js only targets modern browsers. One can change the targets and build for&#xA;          // older browsers if they prefer, but integration tests on ie11 were removed in Prebid.js 6.0&#xA;          options: require(&#39;prebid.js/.babelrc.js&#39;)&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or for Babel 6:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;            // you must manually install and specify the presets and plugins yourself&#xA;            options: {&#xA;              plugins: [&#xA;                &#34;transform-object-assign&#34;, // required (for IE support) and &#34;babel-plugin-transform-object-assign&#34; &#xA;                                           // must be installed as part of your package.&#xA;                require(&#39;prebid.js/plugins/pbjsGlobals.js&#39;) // required!&#xA;              ],&#xA;              presets: [&#xA;                [&#34;env&#34;, {                 // you can use other presets if you wish.&#xA;                  &#34;targets&#34;: {            // this example is using &#34;babel-presets-env&#34;, which must be installed if you&#xA;                    &#34;browsers&#34;: [         // follow this example.&#xA;                      ... // your browser targets. they should probably match the targets you&#39;re using for the rest &#xA;                          // of your application&#xA;                    ]&#xA;                  }&#xA;                }]&#xA;              ]&#xA;            }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can use Prebid.js as any other npm dependency&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import pbjs from &#39;prebid.js&#39;;&#xA;import &#39;prebid.js/modules/rubiconBidAdapter&#39;; // imported modules will register themselves automatically with prebid&#xA;import &#39;prebid.js/modules/appnexusBidAdapter&#39;;&#xA;pbjs.processQueue();  // required to process existing pbjs.queue blocks and setup any further pbjs.queue execution&#xA;&#xA;pbjs.requestBids({&#xA;  ...&#xA;})&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Install&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/prebid/Prebid.js.git&#xA;$ cd Prebid.js&#xA;$ npm ci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; You need to have &lt;code&gt;NodeJS&lt;/code&gt; 12.16.1 or greater installed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; In the 1.24.0 release of Prebid.js we have transitioned to using gulp 4.0 from using gulp 3.9.1. To comply with gulp&#39;s recommended setup for 4.0, you&#39;ll need to have &lt;code&gt;gulp-cli&lt;/code&gt; installed globally prior to running the general &lt;code&gt;npm ci&lt;/code&gt;. This shouldn&#39;t impact any other projects you may work on that use an earlier version of gulp in its setup.&lt;/p&gt; &#xA;&lt;p&gt;If you have a previous version of &lt;code&gt;gulp&lt;/code&gt; installed globally, you&#39;ll need to remove it before installing &lt;code&gt;gulp-cli&lt;/code&gt;. You can check if this is installed by running &lt;code&gt;gulp -v&lt;/code&gt; and seeing the version that&#39;s listed in the &lt;code&gt;CLI&lt;/code&gt; field of the output. If you have the &lt;code&gt;gulp&lt;/code&gt; package installed globally, it&#39;s likely the same version that you&#39;ll see in the &lt;code&gt;Local&lt;/code&gt; field. If you already have &lt;code&gt;gulp-cli&lt;/code&gt; installed, it should be a lower major version (it&#39;s at version &lt;code&gt;2.0.1&lt;/code&gt; at the time of the transition).&lt;/p&gt; &#xA;&lt;p&gt;To remove the old package, you can use the command: &lt;code&gt;npm rm gulp -g&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once setup, run the following command to globally install the &lt;code&gt;gulp-cli&lt;/code&gt; package: &lt;code&gt;npm install gulp-cli -g&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build for Development&lt;/h2&gt; &#xA;&lt;p&gt;To build the project on your local machine we recommend, running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gulp serve-and-test --file &amp;lt;spec_file.js&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will run testing but not linting. A web server will start at &lt;code&gt;http://localhost:9999&lt;/code&gt; serving from the project root and generates the following files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;./build/dev/prebid.js&lt;/code&gt; - Full source code for dev and debug&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./build/dev/prebid.js.map&lt;/code&gt; - Source map for dev and debug&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./build/dev/prebid-core.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./build/dev/prebid-core.js.map&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Development may be a bit slower but if you prefer linting and additional watch files you can also still run just:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gulp serve &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build Optimization&lt;/h3&gt; &#xA;&lt;p&gt;The standard build output contains all the available modules from within the &lt;code&gt;modules&lt;/code&gt; folder. Note, however that there are bid adapters which support multiple bidders through aliases, so if you don&#39;t see a file in modules for a bid adapter, you may need to grep the repository to find the name of the module you need to include.&lt;/p&gt; &#xA;&lt;p&gt;You might want to exclude some/most of them from the final bundle. To make sure the build only includes the modules you want, you can specify the modules to be included with the &lt;code&gt;--modules&lt;/code&gt; CLI argument.&lt;/p&gt; &#xA;&lt;p&gt;For example, when running the serve command: &lt;code&gt;gulp serve --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Building with just these adapters will result in a smaller bundle which should allow your pages to load faster.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build standalone prebid.js&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repo, run &lt;code&gt;npm ci&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then run the build:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ gulp build --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Alternatively, a &lt;code&gt;.json&lt;/code&gt; file can be specified that contains a list of modules you would like to include.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gulp build --modules=modules.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With &lt;code&gt;modules.json&lt;/code&gt; containing the following&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[&#xA;  &#34;openxBidAdapter&#34;,&#xA;  &#34;rubiconBidAdapter&#34;,&#xA;  &#34;sovrnBidAdapter&#34;&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build prebid.js using npm for bundling&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In case you&#39;d like to explicitly show that your project uses &lt;code&gt;prebid.js&lt;/code&gt; and want a reproducible build, consider adding it as an &lt;code&gt;npm&lt;/code&gt; dependency.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Add &lt;code&gt;prebid.js&lt;/code&gt; as a &lt;code&gt;npm&lt;/code&gt; dependency of your project: &lt;code&gt;npm install prebid.js&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the &lt;code&gt;prebid.js&lt;/code&gt; build under the &lt;code&gt;node_modules/prebid.js/&lt;/code&gt; folder&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ gulp build --modules=path/to/your/list-of-modules.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Most likely your custom &lt;code&gt;prebid.js&lt;/code&gt; will only change when there&#39;s:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A change in your list of modules&lt;/li&gt; &#xA; &lt;li&gt;A new release of &lt;code&gt;prebid.js&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Having said that, you are probably safe to check your custom bundle into your project. You can also generate it in your build process.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build once, bundle multiple times&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you need to generate multiple distinct bundles from the same Prebid version, you can reuse a single build with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gulp build&#xA;gulp bundle --tag one --modules=one.json&#xA;gulp bundle --tag two --modules=two.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This generates slightly larger files, but has the advantage of being much faster to run (after the initial &lt;code&gt;gulp build&lt;/code&gt;). It&#39;s also the method used by &lt;a href=&#34;https://docs.prebid.org/download.html&#34;&gt;the Prebid.org download page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Run&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Excluding particular features from the build&lt;/h3&gt; &#xA;&lt;p&gt;Since version 7.2.0, you may instruct the build to exclude code for some features - for example, if you don&#39;t need support for native ads:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gulp build --disable NATIVE --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter # substitute your module list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you are consuming Prebid through npm, with the &lt;code&gt;disableFeatures&lt;/code&gt; option in your Prebid rule:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;  {&#xA;    test: /.js$/,&#xA;    include: new RegExp(`\\${path.sep}prebid\\.js`),&#xA;    use: {&#xA;      loader: &#39;babel-loader&#39;,&#xA;      options: require(&#39;prebid.js/babelConfig.js&#39;)({disableFeatures: [&#39;NATIVE&#39;]})&#xA;    }&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this is still a work in progress - at the moment, &lt;code&gt;NATIVE&lt;/code&gt; is the only feature that can be disabled this way, resulting in a minimal decrease in size (but you can expect that to improve over time).&lt;/p&gt; &#xA;&lt;h2&gt;Test locally&lt;/h2&gt; &#xA;&lt;p&gt;To lint the code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gulp lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the unit tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gulp test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the unit tests for a particular file (example for pubmaticBidAdapter_spec.js):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gulp test --file &#34;test/spec/modules/pubmaticBidAdapter_spec.js&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To generate and view the code coverage reports:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gulp test-coverage&#xA;gulp view-coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Prebid.org members with access to BrowserStack, additional end-to-end testing can be done with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gulp e2e-test --host=test.localhost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run these tests, the following items are required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;setup an alias of localhost in your &lt;code&gt;hosts&lt;/code&gt; file (eg &lt;code&gt;127.0.0.1 test.localhost&lt;/code&gt;); note - you can use any alias. Use this alias in the command-line argument above.&lt;/li&gt; &#xA; &lt;li&gt;access to &lt;a href=&#34;https://www.browserstack.com/&#34;&gt;BrowserStack&lt;/a&gt; account. Assign the following variables in your bash_profile:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export BROWSERSTACK_USERNAME=&#39;YourUserNameHere&#39;&#xA;export BROWSERSTACK_ACCESS_KEY=&#39;YourAccessKeyHere&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can get these BrowserStack values from your profile page.&lt;/p&gt; &#xA;&lt;p&gt;For development:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;(function() {&#xA;    var d = document, pbs = d.createElement(&#39;script&#39;), pro = d.location.protocol;&#xA;    pbs.type = &#39;text/javascript&#39;;&#xA;    pbs.src = ((pro === &#39;https:&#39;) ? &#39;https&#39; : &#39;http&#39;) + &#39;./build/dev/prebid.js&#39;;&#xA;    var target = document.getElementsByTagName(&#39;head&#39;)[0];&#xA;    target.insertBefore(pbs, target.firstChild);&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For deployment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;(function() {&#xA;    var d = document, pbs = d.createElement(&#39;script&#39;), pro = d.location.protocol;&#xA;    pbs.type = &#39;text/javascript&#39;;&#xA;    pbs.src = ((pro === &#39;https:&#39;) ? &#39;https&#39; : &#39;http&#39;) + &#39;./build/dist/prebid.js&#39;;&#xA;    var target = document.getElementsByTagName(&#39;head&#39;)[0];&#xA;    target.insertBefore(pbs, target.firstChild);&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build and run the project locally with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gulp serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This runs &lt;code&gt;lint&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt;, then starts a web server at &lt;code&gt;http://localhost:9999&lt;/code&gt; serving from the project root. Navigate to your example implementation to test, and if your &lt;code&gt;prebid.js&lt;/code&gt; file is sourced from the &lt;code&gt;./build/dev&lt;/code&gt; directory you will have sourcemaps available in your browser&#39;s developer tools.&lt;/p&gt; &#xA;&lt;p&gt;To run the example file, go to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;http://localhost:9999/integrationExamples/gpt/hello_world.html&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As you make code changes, the bundles will be rebuilt and the page reloaded automatically.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Contribute&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Many SSPs, bidders, and publishers have contributed to this project. &lt;a href=&#34;https://github.com/prebid/Prebid.js/tree/master/modules&#34;&gt;Hundreds of bidders&lt;/a&gt; are supported by Prebid.js.&lt;/p&gt; &#xA;&lt;p&gt;For guidelines, see &lt;a href=&#34;https://raw.githubusercontent.com/prebid/Prebid.js/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Our PR review process can be found &lt;a href=&#34;https://github.com/prebid/Prebid.js/tree/master/PR_REVIEW.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Add a Bidder Adapter&lt;/h3&gt; &#xA;&lt;p&gt;To add a bidder adapter module, see the instructions in &lt;a href=&#34;https://docs.prebid.org/dev-docs/bidder-adaptor.html&#34;&gt;How to add a bidder adapter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code Quality&lt;/h3&gt; &#xA;&lt;p&gt;Code quality is defined by &lt;code&gt;.eslintrc&lt;/code&gt; and errors are reported in the terminal.&lt;/p&gt; &#xA;&lt;p&gt;If you are contributing code, you should &lt;a href=&#34;http://eslint.org/docs/user-guide/integrations#editors&#34;&gt;configure your editor&lt;/a&gt; with the provided &lt;code&gt;.eslintrc&lt;/code&gt; settings.&lt;/p&gt; &#xA;&lt;h3&gt;Unit Testing with Karma&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;    $ gulp test --watch --browsers=chrome&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will run tests and keep the Karma test browser open. If your &lt;code&gt;prebid.js&lt;/code&gt; file is sourced from the &lt;code&gt;./build/dev&lt;/code&gt; directory you will also have sourcemaps available when using your browser&#39;s developer tools.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To access the Karma debug page, go to &lt;code&gt;http://localhost:9876/debug.html&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For test results, see the console&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To set breakpoints in source code, see the developer tools&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Detailed code coverage reporting can be generated explicitly with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    $ gulp test --coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The results will be in&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    ./build/coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: Starting in June 2016, all pull requests to Prebid.js need to include tests with greater than 80% code coverage before they can be merged. For more information, see &lt;a href=&#34;https://github.com/prebid/Prebid.js/issues/421&#34;&gt;#421&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For instructions on writing tests for Prebid.js, see &lt;a href=&#34;http://prebid.org/dev-docs/testing-prebid.html&#34;&gt;Testing Prebid.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Supported Browsers&lt;/h3&gt; &#xA;&lt;p&gt;Prebid.js is supported on IE11 and modern browsers until 5.x. 6.x+ transpiles to target &amp;gt;0.25%; not Opera Mini; not IE11.&lt;/p&gt; &#xA;&lt;h3&gt;Governance&lt;/h3&gt; &#xA;&lt;p&gt;Review our governance model &lt;a href=&#34;https://github.com/prebid/Prebid.js/tree/master/governance.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;END&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>sksalahuddin2828/JavaScript</title>
    <updated>2023-07-13T01:39:46Z</updated>
    <id>tag:github.com,2023-07-13:/sksalahuddin2828/JavaScript</id>
    <link href="https://github.com/sksalahuddin2828/JavaScript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Explore something new&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HTML_CSS_JavaScript&lt;/h1&gt; &#xA;&lt;p&gt;Education Purpose Only&lt;/p&gt;</summary>
  </entry>
</feed>