<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-30T01:34:16Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jason5ng32/MyIP</title>
    <updated>2023-11-30T01:34:16Z</updated>
    <id>tag:github.com,2023-11-30:/jason5ng32/MyIP</id>
    <link href="https://github.com/jason5ng32/MyIP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;IP Toolkit. It allows you to view local IP, IP information after using a proxy, check for DNS leaks, examine WebRTC connections, and test website availability. || IP Â∑•ÂÖ∑ÁÆ±„ÄÇÂèØ‰ª•Êü•ÁúãÊú¨Êú∫IP„ÄÅÊåÇ‰ª£ÁêÜÂêéÁöÑIP‰ø°ÊÅØ„ÄÅÊ£ÄÊü• DNS Ê≥ÑÈú≤„ÄÅÊ£ÄÊü• WebRTC ËøûÊé•„ÄÅÊµãËØïÁΩëÁ´ôÂèØÁî®ÊÄßÁ≠â„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IP Toolkit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/jason5ng32/MyIP&#34; alt=&#34;GitHub Repo stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/jason5ng32/MyIP&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/jason5ng32/MyIP&#34; alt=&#34;GitHub contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/jason5ng32/MyIP&#34; alt=&#34;GitHub commit activity (branch)&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jason5ng32/MyIP/main/README.md&#34;&gt;üá∫üá∏ English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/jason5ng32/MyIP/main/README_CN.md&#34;&gt;üá®üá≥ ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Demo: &lt;a href=&#34;https://jason5ng32.github.io/MyIP/&#34;&gt;jason5ng32.github.io/MyIP&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Notes: Please note that some data on the demo site may not be displayed because it has been accessed frequently recently (I didn&#39;t expect that either). To circumvent this, you can deploy the site yourself.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fjason5ng32%2FMyIP&amp;amp;project-name=MyIP&amp;amp;repository-name=MyIP&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Main Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;View Your IPs&lt;/strong&gt;: Detects and displays your local IP, sourcing from multiple IPv4 and IPv6 providers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;IP Information&lt;/strong&gt;: Presents detailed information for all IP addresses, including country, region, ASN, geographic location, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Availability Check&lt;/strong&gt;: Tests the accessibility of various websites, such as Google, GitHub, YouTube, ChatGPT, and others.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WebRTC Detection&lt;/strong&gt;: Identifies the IP address used during WebRTC connections.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DNS Leak Test&lt;/strong&gt;: Shows DNS endpoint data to evaluate the risk of DNS leaks when using VPNs or proxies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dark Mode&lt;/strong&gt;: Automatically toggles between dark and daylight modes based on system settings, with an option for manual switching.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Minimalist Mode&lt;/strong&gt;: A mobile-optimized mode that shortens page length for quick access to essential information..&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Arbitrary IP Information&lt;/strong&gt;: Provides a tool for querying information about any IP address.&lt;/li&gt; &#xA; &lt;li&gt;Based on availability test results, it indicates whether global internet access is currently feasible.&lt;/li&gt; &#xA; &lt;li&gt;English and Chinese supported.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to Use&lt;/h2&gt; &#xA;&lt;p&gt;The tool is almost ready to use straight out of the box. Just download the entire codebase and deploy it on your local machine or server. No additional setup is required.&lt;/p&gt; &#xA;&lt;p&gt;To display a map showing the location of an IP, modify app.js. In the data section, locate:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;bingMapAPIKEY: &#39;&#39;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enter your Bing Map API Key here. Upon doing so, the map functionality on the homepage will activate automatically.&lt;/p&gt; &#xA;&lt;p&gt;Applying for this API key is free and includes up to 120,000 requests per year at no cost, adequate for personal use. For larger projects, consider adjusting the program to avoid embedding the key in the frontend code.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t need map functionality, the program can also be deployed easily with a single click on Vercel.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re using a proxy for internet access, consider adding this rule to your proxy configuration (modify it according to your client). This setup lets you check both your real IP and the IP when using the proxy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# IP Testing&#xA;IP-CIDR,1.0.0.1/32,DIRECT,no-resolve&#xA;IP-CIDR6,2606:4700:4700::1111/128,DIRECT,no-resolve&#xA;DOMAIN-SUFFIX,ipify.org,Proxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Additional Notes&lt;/h2&gt; &#xA;&lt;p&gt;70% of the code for this program was not written by me, but generated through ChatGPT. After about 50 rounds of back-and-forth and some minor manual adjustments, all the code was completed.&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#jason5ng32/MyIP&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=jason5ng32/MyIP&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>francoischalifour/medium-zoom</title>
    <updated>2023-11-30T01:34:16Z</updated>
    <id>tag:github.com,2023-11-30:/francoischalifour/medium-zoom</id>
    <link href="https://github.com/francoischalifour/medium-zoom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üîéüñº A JavaScript library for zooming images like Medium&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://medium-zoom.francoischalifour.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/logo.svg?sanitize=true&#34; alt=&#34;Demo&#34; width=&#34;64&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;h3 align=&#34;center&#34;&gt;medium-zoom&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;A JavaScript library for zooming images like Medium&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/medium-zoom&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/medium-zoom.svg?style=flat-square&#34; alt=&#34;version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/francoischalifour/medium-zoom/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/l/medium-zoom.svg?style=flat-square&#34; alt=&#34;MIT license&#34;&gt; &lt;/a&gt; &lt;a href=&#34;http://npmcharts.com/compare/medium-zoom&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/medium-zoom.svg?style=flat-square&#34; alt=&#34;downloads&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://unpkg.com/medium-zoom/dist/&#34;&gt; &lt;img src=&#34;http://img.badgesize.io/https://unpkg.com/medium-zoom/dist/medium-zoom.min.js?compression=gzip&amp;amp;label=gzip%20size&amp;amp;style=flat-square&#34; alt=&#34;gzip size&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/francoischalifour/medium-zoom/raw/master/package.json&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/dependencies-none-lightgrey.svg?style=flat-square&#34; alt=&#34;no dependencies&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/francoischalifour/medium-zoom&#34;&gt; &lt;img src=&#34;https://img.shields.io/travis/francoischalifour/medium-zoom.svg?style=flat-square&#34; alt=&#34;travis&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://medium-zoom.francoischalifour.com&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/6137112/43369906-7623239a-9376-11e8-978b-6e089be499fb.gif&#34; alt=&#34;Medium Zoom Demo&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt; &lt;a href=&#34;https://codesandbox.io/s/github/francoischalifour/medium-zoom/tree/master/website&#34;&gt;üî¨ Playground&lt;/a&gt; „Éª &lt;a href=&#34;https://medium-zoom.francoischalifour.com&#34;&gt;üîé Demo&lt;/a&gt; „Éª &lt;a href=&#34;https://medium-zoom.francoischalifour.com/storybook&#34;&gt;üìö Storybook&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Contents&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;!--&#xA;Generate the table of contents using:&#xA;&#xA;```&#xA;npx doctoc README.md --maxlevel 3&#xA;```&#xA;--&gt; &#xA; &lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA; &lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#api&#34;&gt;API&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#selectors&#34;&gt;Selectors&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#options&#34;&gt;Options&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#methods&#34;&gt;Methods&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#attributes&#34;&gt;Attributes&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#events&#34;&gt;Events&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#framework-integrations&#34;&gt;Framework integrations&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#debugging&#34;&gt;Debugging&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#browser-support&#34;&gt;Browser support&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üì± &lt;strong&gt;Responsive&lt;/strong&gt; ‚Äî scale on mobile and desktop&lt;/li&gt; &#xA; &lt;li&gt;üöÄ &lt;strong&gt;Performant and lightweight&lt;/strong&gt; ‚Äî optimized to reach 60 &lt;a href=&#34;https://en.wikipedia.org/wiki/Framerate&#34;&gt;fps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚ö°Ô∏è &lt;strong&gt;High definition support&lt;/strong&gt; ‚Äî load the HD version of your image on zoom&lt;/li&gt; &#xA; &lt;li&gt;üîé &lt;strong&gt;Flexibility&lt;/strong&gt; ‚Äî apply the zoom to a selection of images&lt;/li&gt; &#xA; &lt;li&gt;üñ± &lt;strong&gt;Mouse, keyboard and gesture friendly&lt;/strong&gt; ‚Äî click anywhere, press a key or scroll away to close the zoom&lt;/li&gt; &#xA; &lt;li&gt;üéÇ &lt;strong&gt;Event handling&lt;/strong&gt; ‚Äî trigger events when the zoom enters a new state&lt;/li&gt; &#xA; &lt;li&gt;üì¶ &lt;strong&gt;Customization&lt;/strong&gt; ‚Äî set your own margin, background and scroll offset&lt;/li&gt; &#xA; &lt;li&gt;üîß &lt;strong&gt;Pluggable&lt;/strong&gt; ‚Äî add your own features to the zoom&lt;/li&gt; &#xA; &lt;li&gt;üíé &lt;strong&gt;Custom templates&lt;/strong&gt; ‚Äî extend the default look to match the UI of your app&lt;/li&gt; &#xA; &lt;li&gt;üîå &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#framework-integrations&#34;&gt;&lt;strong&gt;Framework agnostic&lt;/strong&gt;&lt;/a&gt; ‚Äî works with React, Vue, Angular, Svelte, Solid, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The module is available on the &lt;a href=&#34;https://www.npmjs.com&#34;&gt;npm&lt;/a&gt; registry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install medium-zoom&#xA;# or&#xA;yarn add medium-zoom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Download&lt;/h6&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cdn.jsdelivr.net/npm/medium-zoom/dist/medium-zoom.js&#34;&gt;Normal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cdn.jsdelivr.net/npm/medium-zoom/dist/medium-zoom.min.js&#34;&gt;Minified&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;CDN&lt;/h6&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jsdelivr.com/package/npm/medium-zoom&#34;&gt;jsDelivr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://unpkg.com/medium-zoom/&#34;&gt;unpkg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://codesandbox.io/s/github/francoischalifour/medium-zoom/tree/master/website&#34;&gt;Try it out in the browser&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Import the library as a module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import mediumZoom from &#39;medium-zoom&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or import the library with a script tag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;node_modules/medium-zoom/dist/medium-zoom.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! You don&#39;t need to import any CSS styles.&lt;/p&gt; &#xA;&lt;p&gt;Assuming you add the &lt;code&gt;data-zoomable&lt;/code&gt; attribute to your images:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] If you want to control when to inject the Medium Zoom CSS styles, you can use the pure JavaScript bundle:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import mediumZoom from &#39;medium-zoom/dist/pure&#39;&#xA;import &#39;medium-zoom/dist/style.css&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;mediumZoom(selector?: string | HTMLElement | HTMLElement[] | NodeList, options?: object): Zoom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Selectors&lt;/h3&gt; &#xA;&lt;p&gt;The selector allows attaching images to the zoom. It can be of the following types:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/docs/Web/CSS/CSS_Selectors&#34;&gt;CSS selectors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/docs/Web/API/HTMLElement&#34;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/docs/Web/API/NodeList&#34;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&#34;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// CSS selector&#xA;mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&#xA;// HTMLElement&#xA;mediumZoom(document.querySelector(&#39;#cover&#39;))&#xA;&#xA;// NodeList&#xA;mediumZoom(document.querySelectorAll(&#39;[data-zoomable]&#39;))&#xA;&#xA;// Array&#xA;const images = [&#xA;  document.querySelector(&#39;#cover&#39;),&#xA;  ...document.querySelectorAll(&#39;[data-zoomable]&#39;),&#xA;]&#xA;&#xA;mediumZoom(images)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;p&gt;The options enable the customization of the zoom. They are defined as an object with the following properties:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The space outside the zoomed image&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;background&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;#fff&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The background of the overlay&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;scrollOffset&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;40&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The number of pixels to scroll to close the zoom&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;container&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt; | &lt;code&gt;HTMLElement&lt;/code&gt; | &lt;code&gt;object&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The viewport to render the zoom in&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/docs/container.md&#34;&gt;Read more ‚Üí&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;template&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt; | &lt;code&gt;HTMLTemplateElement&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The template element to display on zoom&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/docs/template.md&#34;&gt;Read more ‚Üí&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;mediumZoom(&#39;[data-zoomable]&#39;, {&#xA;  margin: 24,&#xA;  background: &#39;#BADA55&#39;,&#xA;  scrollOffset: 0,&#xA;  container: &#39;#zoom-container&#39;,&#xA;  template: &#39;#zoom-template&#39;,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Methods&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;open({ target?: HTMLElement }): Promise&amp;lt;Zoom&amp;gt;&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Opens the zoom and returns a promise resolving with the zoom.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&#xA;zoom.open()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Emits an event &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#events&#34;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; on animation start and &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#events&#34;&gt;&lt;code&gt;opened&lt;/code&gt;&lt;/a&gt; when completed.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;close(): Promise&amp;lt;Zoom&amp;gt;&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Closes the zoom and returns a promise resolving with the zoom.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&#xA;zoom.close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Emits an event &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#events&#34;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on animation start and &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#events&#34;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; when completed.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;toggle({ target?: HTMLElement }): Promise&amp;lt;Zoom&amp;gt;&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Opens the zoom when closed / dismisses the zoom when opened, and returns a promise resolving with the zoom.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&#xA;zoom.toggle()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;attach(...selectors: string[] | HTMLElement[] | NodeList[] | Array[]): Zoom&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Attaches the images to the zoom and returns the zoom.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom()&#xA;&#xA;zoom.attach(&#39;#image-1&#39;, &#39;#image-2&#39;)&#xA;zoom.attach(&#xA;  document.querySelector(&#39;#image-3&#39;),&#xA;  document.querySelectorAll(&#39;[data-zoomable]&#39;)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;detach(...selectors: string[] | HTMLElement[] | NodeList[] | Array[]): Zoom&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Releases the images from the zoom and returns the zoom.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&#xA;zoom.detach(&#39;#image-1&#39;, document.querySelector(&#39;#image-2&#39;)) // detach two images&#xA;zoom.detach() // detach all images&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Emits an event &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#events&#34;&gt;&lt;code&gt;detach&lt;/code&gt;&lt;/a&gt; on the image.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;update(options: object): Zoom&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Updates the options and returns the zoom.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&#xA;zoom.update({ background: &#39;#BADA55&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Emits an event &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#events&#34;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; on each image of the zoom.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;clone(options?: object): Zoom&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Clones the zoom with provided options merged with the current ones and returns the zoom.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom(&#39;[data-zoomable]&#39;, { background: &#39;#BADA55&#39; })&#xA;&#xA;const clonedZoom = zoom.clone({ margin: 48 })&#xA;&#xA;clonedZoom.getOptions() // =&amp;gt; { background: &#39;#BADA55&#39;, margin: 48, ... }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;on(type: string, listener: () =&amp;gt; void, options?: boolean | AddEventListenerOptions): Zoom&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Registers the listener on each target of the zoom.&lt;/p&gt; &#xA;&lt;p&gt;The same &lt;code&gt;options&lt;/code&gt; as &lt;a href=&#34;https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener#Parameters&#34;&gt;&lt;code&gt;addEventListener&lt;/code&gt;&lt;/a&gt; are used.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&#xA;zoom.on(&#39;closed&#39;, event =&amp;gt; {&#xA;  // the image has been closed&#xA;})&#xA;&#xA;zoom.on(&#xA;  &#39;open&#39;,&#xA;  event =&amp;gt; {&#xA;    // the image has been opened (tracked only once)&#xA;  },&#xA;  { once: true }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The zoom object is accessible in &lt;code&gt;event.detail.zoom&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;off(type: string, listener: () =&amp;gt; void, options?: boolean | AddEventListenerOptions): Zoom&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Removes the previously registered listener on each target of the zoom.&lt;/p&gt; &#xA;&lt;p&gt;The same &lt;code&gt;options&lt;/code&gt; as &lt;a href=&#34;https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener#Parameters&#34;&gt;&lt;code&gt;removeEventListener&lt;/code&gt;&lt;/a&gt; are used.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&#xA;function listener(event) {&#xA;  // ...&#xA;}&#xA;&#xA;zoom.on(&#39;open&#39;, listener)&#xA;// ...&#xA;zoom.off(&#39;open&#39;, listener)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The zoom object is accessible in &lt;code&gt;event.detail.zoom&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;getOptions(): object&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Returns the zoom options as an object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom({ background: &#39;#BADA55&#39; })&#xA;&#xA;zoom.getOptions() // =&amp;gt; { background: &#39;#BADA55&#39;, ... }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;getImages(): HTMLElement[]&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Returns the images attached to the zoom as an array of &lt;a href=&#34;https://developer.mozilla.org/docs/Web/API/HTMLElement&#34;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;s&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&#xA;zoom.getImages() // =&amp;gt; [HTMLElement, HTMLElement]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;getZoomedImage(): HTMLElement&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Returns the current zoomed image as an &lt;a href=&#34;https://developer.mozilla.org/docs/Web/API/HTMLElement&#34;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;null&lt;/code&gt; if none.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&#xA;zoom.getZoomedImage() // =&amp;gt; null&#xA;zoom.open().then(() =&amp;gt; {&#xA;  zoom.getZoomedImage() // =&amp;gt; HTMLElement&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Attributes&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;data-zoom-src&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Specifies the high definition image to open on zoom. This image loads when the user clicks on the source image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;img src=&#34;image-thumbnail.jpg&#34; data-zoom-src=&#34;image-hd.jpg&#34; alt=&#34;My image&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Events&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Event&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;open&lt;/td&gt; &#xA;   &lt;td&gt;Fired immediately when the &lt;code&gt;open&lt;/code&gt; method is called&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;opened&lt;/td&gt; &#xA;   &lt;td&gt;Fired when the zoom has finished being animated&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;close&lt;/td&gt; &#xA;   &lt;td&gt;Fired immediately when the &lt;code&gt;close&lt;/code&gt; method is called&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;closed&lt;/td&gt; &#xA;   &lt;td&gt;Fired when the zoom out has finished being animated&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;detach&lt;/td&gt; &#xA;   &lt;td&gt;Fired when the &lt;code&gt;detach&lt;/code&gt; method is called&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;update&lt;/td&gt; &#xA;   &lt;td&gt;Fired when the &lt;code&gt;update&lt;/code&gt; method is called&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&#xA;zoom.on(&#39;open&#39;, event =&amp;gt; {&#xA;  // track when the image is zoomed&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The zoom object is accessible in &lt;code&gt;event.detail.zoom&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Framework integrations&lt;/h2&gt; &#xA;&lt;p&gt;Medium Zoom is a JavaScript library that can be used with any framework. Here are some integrations that you can use to get started quickly:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/examples/react&#34;&gt;React&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/examples/react-markdown&#34;&gt;React Markdown&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/examples/vue&#34;&gt;Vue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/examples/svelte&#34;&gt;Svelte&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Trigger a zoom from another element&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const button = document.querySelector(&#39;[data-action=&#34;zoom&#34;]&#39;)&#xA;const zoom = mediumZoom(&#39;#image&#39;)&#xA;&#xA;button.addEventListener(&#39;click&#39;, () =&amp;gt; zoom.open())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Track an event (for analytics)&lt;/summary&gt; &#xA; &lt;p&gt;You can use the &lt;code&gt;open&lt;/code&gt; event to keep track of how many times a user interacts with your image. This can be useful if you want to gather some analytics on user engagement.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let counter = 0&#xA;const zoom = mediumZoom(&#39;#image-tracked&#39;)&#xA;&#xA;zoom.on(&#39;open&#39;, event =&amp;gt; {&#xA;  console.log(`&#34;${event.target.alt}&#34; has been zoomed ${++counter} times`)&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Detach a zoom once closed&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const zoom = mediumZoom(&#39;[data-zoomable]&#39;)&#xA;&#xA;zoom.on(&#39;closed&#39;, () =&amp;gt; zoom.detach(), { once: true })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Attach jQuery elements&lt;/summary&gt; &#xA; &lt;p&gt;jQuery elements are compatible with &lt;code&gt;medium-zoom&lt;/code&gt; once converted to an array.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;mediumZoom($(&#39;[data-zoomable]&#39;).toArray())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Create a zoomable React component&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import React, { useRef } from &#39;react&#39;&#xA;import mediumZoom from &#39;medium-zoom&#39;&#xA;&#xA;export function ImageZoom({ options, ...props }) {&#xA;  const zoomRef = useRef(null)&#xA;&#xA;  function getZoom() {&#xA;    if (zoomRef.current === null) {&#xA;      zoomRef.current = mediumZoom(options)&#xA;    }&#xA;&#xA;    return zoomRef.current&#xA;  }&#xA;&#xA;  function attachZoom(image) {&#xA;    const zoom = getZoom()&#xA;&#xA;    if (image) {&#xA;      zoom.attach(image)&#xA;    } else {&#xA;      zoom.detach()&#xA;    }&#xA;  }&#xA;&#xA;  return &amp;lt;img {...props} ref={attachZoom} /&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;You can see &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/examples/&#34;&gt;more examples&lt;/a&gt; including &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/examples/react&#34;&gt;React&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/examples/vue&#34;&gt;Vue&lt;/a&gt;, or check out the &lt;a href=&#34;https://medium-zoom.francoischalifour.com/storybook&#34;&gt;storybook&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;h3&gt;The zoomed image is not visible&lt;/h3&gt; &#xA;&lt;p&gt;The library doesn&#39;t provide a &lt;code&gt;z-index&lt;/code&gt; value on the zoomed image to avoid conflicts with other frameworks. Some frameworks might specify a &lt;code&gt;z-index&lt;/code&gt; for their elements, which makes the zoomed image not visible.&lt;/p&gt; &#xA;&lt;p&gt;If that&#39;s the case, you can provide a &lt;code&gt;z-index&lt;/code&gt; value in your CSS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.medium-zoom-overlay,&#xA;.medium-zoom-image--opened {&#xA;  z-index: 999;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Browser support&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;IE&lt;/th&gt; &#xA;   &lt;th&gt;Edge&lt;/th&gt; &#xA;   &lt;th&gt;Chrome&lt;/th&gt; &#xA;   &lt;th&gt;Firefox&lt;/th&gt; &#xA;   &lt;th&gt;Safari&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;sup&gt;*&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;12&lt;sup&gt;*&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;36&lt;/td&gt; &#xA;   &lt;td&gt;34&lt;/td&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;sup&gt;*&lt;/sup&gt; &lt;em&gt;These browsers require a &lt;a href=&#34;https://github.com/webcomponents/template&#34;&gt;&lt;code&gt;template&lt;/code&gt; polyfill&lt;/a&gt; when using &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/docs/template.md&#34;&gt;custom templates&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p align=&#34;center&#34;&gt; Cross-browser testing is sponsored by &lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.browserstack.com&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/6137112/44587083-35987000-a7b2-11e8-8e0d-8ba15de83802.png&#34; alt=&#34;BrowserStack&#34; height=&#34;35&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn&lt;/code&gt; to install Node dev dependencies&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn start&lt;/code&gt; to build the library in watch mode&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn run storybook&lt;/code&gt; to see your changes at &lt;a href=&#34;http://localhost:9001&#34;&gt;http://localhost:9001&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; for more detailed explanations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;You can also use &lt;a href=&#34;https://www.npmjs.com&#34;&gt;npm&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT ¬© &lt;a href=&#34;https://francoischalifour.com&#34;&gt;Fran√ßois Chalifour&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>