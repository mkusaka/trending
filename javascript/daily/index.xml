<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-03T01:32:13Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Mazars-Tech/AD_Miner</title>
    <updated>2023-10-03T01:32:13Z</updated>
    <id>tag:github.com,2023-10-03:/Mazars-Tech/AD_Miner</id>
    <link href="https://github.com/Mazars-Tech/AD_Miner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AD Miner is an Active Directory audit tool that leverages cypher queries to crunch data from the #Bloodhound graph database to uncover security weaknesses&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ADMiner&lt;/h1&gt; &#xA;&lt;p&gt;ADMiner is an Active Directory audit tool that leverages cypher queries to crunch data from the &lt;a href=&#34;https://github.com/BloodHoundAD/BloodHound&#34;&gt;BloodHound&lt;/a&gt; graph database (neo4j) and gives you a global overview of existing weaknesses through a web-based static report, including detailed listing, dynamic graphs, key indicators history, along with risk ratings.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Mazars-Tech/AD_Miner/main/doc/img/main.gif&#34; alt=&#34;Main page&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also observe indicators over time to help measuring mitigation efficiency. &lt;img src=&#34;https://raw.githubusercontent.com/Mazars-Tech/AD_Miner/main/doc/img/evolution.png&#34; alt=&#34;Main page&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;ADMiner was created and is maintained by the Mazars Cybersecurity Audit &amp;amp; Advisory team.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and setup&lt;/h2&gt; &#xA;&lt;p&gt;The easier way is to do the following commmand using &lt;code&gt;pipx&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pipx install &#39;git+https://github.com/Mazars-Tech/AD_Miner.git&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, the same way using &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install &#39;git+https://github.com/Mazars-Tech/AD_Miner.git&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But remain careful and aware that doing this with pip will &#34;polute&#34; your packages.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Run the tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;AD-miner [-h] [-b BOLT] [-u USERNAME] [-p PASSWORD] [-e EXTRACT_DATE] [-r RENEWAL_PASSWORD] [-a] [-c] [-l LEVEL] -cf CACHE_PREFIX [-ch NB_CHUNKS] [-co NB_CORES] [--rdp] [--evolution EVOLUTION] [--cluster CLUSTER]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;AD-miner -c -cf My_Report -u neo4j -p mypassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To better handle large data sets, it is possible to enable multi-threading and also to use a cluster of neo4j databases, as shown in the following example (where server1 handles 32 threads and server2 handles 16) :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;AD-miner -c -cf My_Report -b bolt://server1:7687 -u neo4j -p mypassword  --cluster server1:7687:32,server2:7687:16&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-h, --help              Show this help message and exit&#xA;-b, --bolt              Neo4j bolt connection (default: bolt://127.0.0.1:7687)&#xA;-u, --username          Neo4j username (default : neo4j)&#xA;-p, --password          Neo4j password (default : neo5j)&#xA;-e, --extract_date      Extract date (e.g., 20220131). Default: last logon date&#xA;-r, --renewal_password  Password renewal policy in days. Default: 90&#xA;-a, --azure             Use Azure relations&#xA;-c, --cache             Use local file for neo4j data&#xA;-l, --level             Recursive level for path queries&#xA;-cf, --cache_prefix     Cache file to use (in case of multiple company cache files)&#xA;-ch, --nb_chunks        Number of chunks for parallel neo4j requests. Default : number of CPU&#xA;-co, --nb_cores         Number of cores for parallel neo4j requests. Default : number of CPU&#xA;--rdp                   Include the CanRDP edge in graphs&#xA;--evolution             Evolution over time : location of json data files. ex : &#39;../../tests/&#39;&#xA;--cluster               Nodes of the cluster to run parallel neo4j queries. ex : host1:port1:nCore1,host2:port2:nCore2,...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Implemented controls&lt;/h2&gt; &#xA;&lt;p&gt;The following provides a list controls that have already been implemented in AD Miner :&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dormant accounts&lt;/td&gt; &#xA;   &lt;td&gt;Tier 0 sessions violation&lt;/td&gt; &#xA;   &lt;td&gt;Control path cross domain from DA to DA&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ghost computers&lt;/td&gt; &#xA;   &lt;td&gt;Machine accounts with admin privs&lt;/td&gt; &#xA;   &lt;td&gt;Control paths to GPOs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Accounts without password expiration&lt;/td&gt; &#xA;   &lt;td&gt;Obsolete OS&lt;/td&gt; &#xA;   &lt;td&gt;Control paths to servers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Accounts with old passwords&lt;/td&gt; &#xA;   &lt;td&gt;Inadequate number of domain admins&lt;/td&gt; &#xA;   &lt;td&gt;Control paths to OU&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Accounts with clear-text passwords&lt;/td&gt; &#xA;   &lt;td&gt;RDP access&lt;/td&gt; &#xA;   &lt;td&gt;Control paths to GMSA passwords&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kerberoastable accounts&lt;/td&gt; &#xA;   &lt;td&gt;Domain functional level&lt;/td&gt; &#xA;   &lt;td&gt;Control path to AdminSDHolder container&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AS-REP Roastable accounts&lt;/td&gt; &#xA;   &lt;td&gt;Users with admin privs&lt;/td&gt; &#xA;   &lt;td&gt;Users with path to DNS Admins&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Accounts with SID history&lt;/td&gt; &#xA;   &lt;td&gt;Machine accounts with high privs&lt;/td&gt; &#xA;   &lt;td&gt;ACL anomalies on group objects&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LAPS status&lt;/td&gt; &#xA;   &lt;td&gt;Non tier 0 with DCSync capabilities&lt;/td&gt; &#xA;   &lt;td&gt;Objects with path to an Operator Member&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LAPS access&lt;/td&gt; &#xA;   &lt;td&gt;Unconstrained delegations&lt;/td&gt; &#xA;   &lt;td&gt;ADCS local admin privs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KRBTGT password age&lt;/td&gt; &#xA;   &lt;td&gt;Constrained delegations&lt;/td&gt; &#xA;   &lt;td&gt;Empty groups/OU&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DC Shadow to DA&lt;/td&gt; &#xA;   &lt;td&gt;Role-based constrained delegations&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DC Shadow to all&lt;/td&gt; &#xA;   &lt;td&gt;Control paths to domain admins&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Check out how to contribute &lt;a href=&#34;https://raw.githubusercontent.com/Mazars-Tech/AD_Miner/main/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ArchGPT/insomnium</title>
    <updated>2023-10-03T01:32:13Z</updated>
    <id>tag:github.com,2023-10-03:/ArchGPT/insomnium</id>
    <link href="https://github.com/ArchGPT/insomnium" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Insomnium is a fast local API testing tool that is privacy-focus and 100% local. For testing GraphQL, REST, WebSockets and gRPC. This is a fork of https://github.com/Kong/insomnia&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Insomnium API Client&lt;/h1&gt; &#xA;&lt;p&gt;Insomnium is a 100% local and privacy-focus open-source API client for testing GraphQL, REST, WebSockets, Server-sent events and gRPC in development/production.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;âœ… works 100% offline, the way a local testing tool should behave &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;âœ… no cloud services, no tracking/communication to external servers behind the scene &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;ðŸ¦™ (coming up) optional integration to local LLMs like CodeLlama for front-end code generation in React, Vue, htmx, etc, based on the API response JSON&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ArchGPT/insomnium/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/archGPT/insomnium.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArchGPT/insomnium/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/archGPT/insomnium&#34; alt=&#34;GitHub Discussions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/pCcWcncwkw&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/pCcWcncwkw?style=flat&amp;amp;compact=true&#34; alt=&#34;join our discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ArchGPT/insomnium/main/screenshots/v0.1.png&#34; alt=&#34;Insomnium API Client&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backstory&lt;/h2&gt; &#xA;&lt;p&gt;Insomnium is a fork of &lt;a href=&#34;https://github.com/ArchGPT/insomnia&#34;&gt;Kong/insomnia at 2023.5.8&lt;/a&gt;, the last commit before compulsory account login was introduced. In a sense, Insomnium is a community response to &lt;a href=&#34;https://news.ycombinator.com/item?id=37680522&#34;&gt;the latest product update that forces account creation w/o warning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ArchGPT/insomnium/raw/main/hn.png?raw=true&#34; alt=&#34;HN&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I was among the users who were deeply affected by the recent change. I still think Insomnia is a nice product in general, but I have to disagree with the direction it is going. So I have decided to fork it and make it 100% local and privacy-focus.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;I choose to walk in shades.&lt;/em&gt; &lt;br&gt; &lt;em&gt;Hearken now, to the song of dusk&lt;/em&gt; &lt;br&gt; &lt;em&gt;The forest venerates your name&lt;/em&gt; &lt;br&gt; --- &lt;a href=&#34;https://youtu.be/nTIDh1miBSc&#34;&gt;Insomnium, song of the dusk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;I have removed user login, tracking, analytics, etc, from Insomnia so it is now a 100% local app. Insomnium 1.0 will be released when the following tasks are completed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;finalize the cleaning-up of existing codebase to make the GUI faster&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;switch to using file-system to store everything.&lt;/p&gt; &lt;p&gt;(Currently Insomnia uses &lt;a href=&#34;https://github.com/louischatriot/nedb&#34;&gt;NeDB&lt;/a&gt; which is not maintained since 2016, and appears to be buggy). Now that Insomnium is going to exist as a 100% local app (strictly without any cloud services syncing, etc), it makes sense that we store projects/requests/documents as folders/files. This will make import/export less clunky, because in the new Insomnium we will just be directly editing files (via the request GUI) and most recent N results will be saved into a &lt;code&gt;.api_cache&lt;/code&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;In this new version, Insomnium will be able to open any folder as a workspace, and users can share the folder (e.g. &lt;code&gt;insomnium_testing_api/&lt;/code&gt;) with each other by commiting to a git repo.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have any feature request or encountered any bug, feel free to &lt;a href=&#34;https://github.com/ArchGPT/insomnium/issues&#34;&gt;open an issue&lt;/a&gt;. Thanks! I&#39;m also working on a Code Llama plugin for Insomnium to make it more easily customizable and extensible, while keeping the core product fast and 100% local-only.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Insomnium is available for Mac, Windows, and Linux, and can be downloaded &lt;a href=&#34;https://github.com/ArchGPT/insomnium/releases&#34;&gt;here&lt;/a&gt;. You can also build it from source on your local machine using &lt;code&gt;npm run app-package&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Develop Insomnium&lt;/h2&gt; &#xA;&lt;p&gt;Development on Insomnium can be done on Mac, Windows, or Linux as long as you have &lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt; and &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;. See the &lt;code&gt;.nvmrc&lt;/code&gt; file located in the project for the correct Node version.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Initial Dev Setup&lt;/summary&gt; &#xA; &lt;p&gt;This repository is structured as a monorepo and contains many Node.JS packages. Each package has its own set of commands, but the most common commands are available from the root &lt;a href=&#34;https://raw.githubusercontent.com/ArchGPT/insomnium/main/package.json&#34;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; and can be accessed using the &lt;code&gt;npm run â€¦&lt;/code&gt; command. Here are the only three commands you should need to start developing on the app.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Install and Link Dependencies&#xA;npm i&#xA;&#xA;# Run Lint&#xA;npm run lint&#xA;&#xA;# Run type checking&#xA;npm run type-check&#xA;&#xA;# Run Tests&#xA;npm test&#xA;&#xA;# Start App with Live Reload&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Linux&lt;/h3&gt; &#xA; &lt;p&gt;If you are on Linux, you may need to install the following supporting packages:&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;Ubuntu/Debian&lt;/summary&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Update library&#xA;sudo apt-get update&#xA;&#xA;# Install font configuration library &amp;amp; support&#xA;sudo apt-get install libfontconfig-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;Fedora&lt;/summary&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Install libcurl for node-libcurl&#xA;sudo dnf install libcurl-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA; &lt;p&gt;Also on Linux, if Electron is failing during the install process, run the following&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Clear Electron install conflicts&#xA;rm -rf ~/.cache/electron&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Windows&lt;/h3&gt; &#xA; &lt;p&gt;If you are on Windows and have problems, you may need to install &lt;a href=&#34;https://github.com/felixrieseberg/windows-build-tools&#34;&gt;Windows Build Tools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Editor Requirements&lt;/summary&gt; &#xA; &lt;p&gt;You can use any editor you&#39;d like, but make sure to have support/plugins for the following tools:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;http://eslint.org/&#34;&gt;ESLint&lt;/a&gt; - For catching syntax problems and common errors&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://facebook.github.io/react/docs/jsx-in-depth.html&#34;&gt;JSX Syntax&lt;/a&gt; - For React components&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Bugs and Feature Requests&lt;/h2&gt; &#xA;&lt;p&gt;Before submitting a bug or a feature request, you can read the &lt;a href=&#34;https://raw.githubusercontent.com/ArchGPT/insomnium/main/CONTRIBUTING.md#using-the-issue-tracker&#34;&gt;issue guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- For more generic product questions and feedback, join the [Slack Team](https://chat.insomnia.rest). --&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read through our &lt;a href=&#34;https://raw.githubusercontent.com/ArchGPT/insomnium/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/ArchGPT/insomnium/main/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;. Included are directions for opening issues, coding standards, and notes on development.&lt;/p&gt; &#xA;&lt;!-- ## Documentation&#xA;&#xA;Check out our open-source [Insomnium Documentation](https://archgpt.dev/insomnium-doc). --&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ArchGPT/insomnium/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>