<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-06T01:29:05Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>panagiop/node.js-clean-architecture</title>
    <updated>2024-03-06T01:29:05Z</updated>
    <id>tag:github.com,2024-03-06:/panagiop/node.js-clean-architecture</id>
    <link href="https://github.com/panagiop/node.js-clean-architecture" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A use case of Clean Architecture in Node.js comprising of Express.js, MongoDB and Redis as the main (but replaceable) infrastructure.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;node.js-clean-architecture&lt;/h1&gt; &#xA;&lt;p&gt;A use case of Clean Architecture in Node.js comprising of Express.js, MongoDB and Redis as the main (but replaceable) infrastructure.&lt;/p&gt; &#xA;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;This example is a simple RESTful API application in which a user can create / update / delete / find a post, by using the &lt;em&gt;Clean Architecture&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The objective of &lt;em&gt;Clean Architecture&lt;/em&gt; by &lt;a href=&#34;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&#34;&gt;Robert C. Martin&lt;/a&gt; is the separation of concerns in software. This separation is achieved by dividing the software into layers. Each layer is encapsulated by a higher level layer and the way to communicate between the layers is with the &lt;em&gt;Dependency Rule&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://blog.cleancoder.com/uncle-bob/images/2012-08-13-the-clean-architecture/CleanArchitecture.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Dependency Rule&lt;/h4&gt; &#xA;&lt;p&gt;This rule says that nothing in an inner circle can know anything at all about something in an outer circle. The dependency direction is from the outside in. Meaning that the &lt;em&gt;Entities&lt;/em&gt; layer is independent and the &lt;em&gt;Frameworks &amp;amp; Drivers&lt;/em&gt; layer (Web, UI, DB etc.) depends on all the other layers.&lt;/p&gt; &#xA;&lt;h4&gt;Entities&lt;/h4&gt; &#xA;&lt;p&gt;Contains all the business entities an application consists of. In our example the &lt;em&gt;User&lt;/em&gt; and the &lt;em&gt;Post&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Use Cases&lt;/h4&gt; &#xA;&lt;p&gt;Contains application specific business rules. These use cases orchestrate the flow of data to and from the entities. In our example some of the use cases are: &lt;em&gt;AddPost&lt;/em&gt;, &lt;em&gt;AddUser&lt;/em&gt;, &lt;em&gt;DeleteById&lt;/em&gt; etc.&lt;/p&gt; &#xA;&lt;h4&gt;Interface Adapters&lt;/h4&gt; &#xA;&lt;p&gt;This layer is a set of adapters (controllers, presenters, and gateways) that convert data from the format most convenient for the use cases and entities, to the format most convenient for some external agency such as the DB or the Web. In other words, is an entry and exit points to the Use Cases layer. In our example we implemented controllers and presenters together and these are the PostController and the UserController.&lt;/p&gt; &#xA;&lt;h4&gt;Frameworks and Drivers&lt;/h4&gt; &#xA;&lt;p&gt;The outermost layer is generally composed of frameworks and tools such as the Database, the Web Framework, etc.&lt;/p&gt; &#xA;&lt;h3&gt;How to run it&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you have &lt;a href=&#34;https://www.mongodb.com/try/download/community&#34;&gt;mongoDB&lt;/a&gt; installed. At the terminal run the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mongod --dbpath &amp;lt;path_to_data/db_folder&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure &lt;a href=&#34;https://redis.io/download&#34;&gt;Redis&lt;/a&gt; is also installed and running.&lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the server in development mode by typing the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the server in production mode by typing the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to run it (using Docker)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you have &lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt; installed. At the root folder run the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;API documentation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://documenter.getpostman.com/view/1551953/TzCJgpnb&#34;&gt;https://documenter.getpostman.com/view/1551953/TzCJgpnb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://roystack.home.blog/2019/10/22/node-clean-architecture-deep-dive/&#34;&gt;https://roystack.home.blog/2019/10/22/node-clean-architecture-deep-dive/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mannhowie.com/clean-architecture-node&#34;&gt;https://mannhowie.com/clean-architecture-node&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>cmliu/WorkerVless2sub</title>
    <updated>2024-03-06T01:29:05Z</updated>
    <id>tag:github.com,2024-03-06:/cmliu/WorkerVless2sub</id>
    <link href="https://github.com/cmliu/WorkerVless2sub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;这个是一个将 Cloudflare Workers - VLESS 搭配 自建优选域名 的 订阅生成器&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;优选订阅生成器 WorkerVless2sub&lt;/h1&gt; &#xA;&lt;h3&gt;这个是一个通过 Cloudflare Workers 搭建，自动生成优选线路 VLESS 节点订阅内容生成器&lt;/h3&gt; &#xA;&lt;p&gt;Telegram交流群：&lt;a href=&#34;https://t.me/CMLiussss&#34;&gt;@CMLiussss&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Workers 部署方法 &lt;a href=&#34;https://youtu.be/AtCF7eq0hcE&#34;&gt;视频教程&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;1. 部署 Cloudflare Worker：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在 Cloudflare Worker 控制台中创建一个新的 Worker。&lt;/li&gt; &#xA; &lt;li&gt;将 &lt;a href=&#34;https://github.com/cmliu/WorkerVless2sub/raw/main/_worker.js&#34;&gt;worker.js&lt;/a&gt; 的内容粘贴到 Worker 编辑器中。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. 添加你的专属优选线路：&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;2.1 修改 addresses 参数示例&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修改 &lt;code&gt;addresses&lt;/code&gt; 参数添加本地静态的优选线路，若不带端口号默认8443，不支持生成非TLS订阅，#号后为备注别名，例如： &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let addresses = [&#xA;&#x9;&#39;icook.tw:2053#优选域名&#39;,&#xA;&#x9;&#39;cloudflare.cfgo.cc#优选官方线路&#39;,&#xA;&#x9;&#39;185.221.160.203:443#电信优选IP&#39;,&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; 该方式仅推荐添加优选域名的部分，频繁变更的优选推荐通过 &lt;code&gt;addressesapi&lt;/code&gt; 来实现。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2.2 修改 addressesapi 参数示例&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修改 &lt;code&gt;addressesapi&lt;/code&gt; 参数，在脚本中设置 &lt;code&gt;addressesapi&lt;/code&gt; 变量为 &lt;strong&gt;优选IP地址txt文件&lt;/strong&gt; 的 URL。例如： &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let addressesapi = [&#xA;&#x9;&#39;https://raw.githubusercontent.com/cmliu/WorkerVless2sub/main/addressesapi.txt&#39;,&#xA;&#x9;&#39;https://addressesapi.090227.xyz/CloudFlareYes&#39;,&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; 可参考 &lt;a href=&#34;https://raw.githubusercontent.com/cmliu/WorkerVless2sub/main/addressesapi.txt&#34;&gt;addressesapi.txt&lt;/a&gt; 内容格式 自行搭建。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 我不是小白！我有IP库！我知道IPtest是什么！我也有csv测速文件！ 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;2.3 修改 addressescsv 参数示例&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;修改 &lt;code&gt;addressescsv&lt;/code&gt; 参数，在脚本中设置 &lt;code&gt;addressescsv&lt;/code&gt; 变量为 &lt;strong&gt;iptest测速结果csv文件地址&lt;/strong&gt; 的 URL。例如： &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let DLS = 4;//速度下限&#xA;let addressescsv = [&#xA;&#x9;&#39;https://raw.githubusercontent.com/cmliu/WorkerVless2sub/main/addressescsv.csv&#39;,&#xA;&#x9;&#39;https://raw.githubusercontent.com/cmliu/WorkerVless2sub/main/addressescsv.csv&#39;,&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;code&gt;DLS&lt;/code&gt; 为要求满足的最低速度，不满足改数值以上的IP将不会添加至优选订阅内容。注意：不考虑单位，只看数值，请按照您的测速结果而定。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;3. 修改 快速订阅入口 以及 默认内置 Vless 节点信息：&lt;/h3&gt; &#xA;&lt;p&gt;例如您的workers项目域名为：&lt;code&gt;sub.cmliussss.workers.dev&lt;/code&gt;；&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加 &lt;code&gt;TOKEN&lt;/code&gt; 变量，快速订阅访问入口，默认值为: &lt;code&gt;auto&lt;/code&gt; ，获取订阅器默认节点订阅地址即 &lt;code&gt;/auto&lt;/code&gt; ，例如 &lt;code&gt;https://sub.cmliussss.workers.dev/auto&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;添加 &lt;code&gt;HOST&lt;/code&gt; 变量，例如 &lt;code&gt;edgetunnel-2z2.pages.dev&lt;/code&gt;；&lt;/li&gt; &#xA; &lt;li&gt;添加 &lt;code&gt;UUID&lt;/code&gt; 变量，例如 &lt;code&gt;30e9c5c8-ed28-4cd9-b008-dc67277f8b02&lt;/code&gt;；&lt;/li&gt; &#xA; &lt;li&gt;添加 &lt;code&gt;PATH&lt;/code&gt; 变量，例如 &lt;code&gt;/?ed=2048&lt;/code&gt;；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;订阅生成器 使用方法 &lt;a href=&#34;https://youtu.be/OjqCKeEY7DQ&#34;&gt;视频教程&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;例如您的workers项目域名为：&lt;code&gt;sub.cmliussss.workers.dev&lt;/code&gt;；&lt;/p&gt; &#xA;&lt;h3&gt;1. 快速订阅&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加 &lt;code&gt;TOKEN&lt;/code&gt; 变量，快速订阅访问入口，默认值为: &lt;code&gt;auto&lt;/code&gt; ，获取订阅器默认节点订阅地址即 &lt;code&gt;/auto&lt;/code&gt; ，例如： &lt;pre&gt;&lt;code class=&#34;language-url&#34;&gt;https://sub.cmliussss.workers.dev/auto&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. 自定义订阅&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;自定义订阅格式&lt;/strong&gt; &lt;code&gt;https://[你的Workers域名]/sub?host=[你的Vless域名]&amp;amp;uuid=[你的UUID]&amp;amp;path=[你的ws路径]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;host&lt;/strong&gt;：您的 VLESS 伪装域名，例如 &lt;code&gt;edgetunnel-2z2.pages.dev&lt;/code&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;uuid&lt;/strong&gt;：您的 VLESS 客户端 UUID，例如 &lt;code&gt;30e9c5c8-ed28-4cd9-b008-dc67277f8b02&lt;/code&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;（可选）：您的 VLESS 的 WS 路径（没有可留空不填），例如 &lt;code&gt;/?ed=2048&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;自定义订阅地址如下： &lt;pre&gt;&lt;code class=&#34;language-url&#34;&gt;https://sub.cmliussss.workers.dev/sub?host=edgetunnel-2z2.pages.dev&amp;amp;uuid=30e9c5c8-ed28-4cd9-b008-dc67277f8b02&amp;amp;path=/?ed=2048&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;注意路径必须包含 &#34;/sub&#34;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3. 指定 clash、singbox 配置文件&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;添加 &lt;code&gt;format=clash&lt;/code&gt; 键值，获取 clash 订阅配置，例如：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-url&#34;&gt;https://sub.cmliussss.workers.dev/auto?format=clash&#xA;https://sub.cmliussss.workers.dev/sub?format=clash&amp;amp;host=edgetunnel-2z2.pages.dev&amp;amp;uuid=30e9c5c8-ed28-4cd9-b008-dc67277f8b02&amp;amp;path=/?ed=2048&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;添加 &lt;code&gt;format=singbox&lt;/code&gt; 键值，获取 singbox 订阅配置，例如：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-url&#34;&gt;https://sub.cmliussss.workers.dev/auto?format=singbox&#xA;https://sub.cmliussss.workers.dev/sub?format=singbox&amp;amp;host=edgetunnel-2z2.pages.dev&amp;amp;uuid=30e9c5c8-ed28-4cd9-b008-dc67277f8b02&amp;amp;path=/?ed=2048&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star 星星走起&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/cmliu/WorkerVless2sub&#34;&gt;&lt;img src=&#34;https://starchart.cc/cmliu/WorkerVless2sub.svg?variant=adaptive&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;感谢&lt;/h1&gt; &#xA;&lt;p&gt;我自己的脑洞，&lt;a href=&#34;https://github.com/SAKURA-YUMI&#34;&gt;SAKURA-YUMI&lt;/a&gt;，&lt;a href=&#34;https://github.com/EzSync&#34;&gt;EzSync&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>