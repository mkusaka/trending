<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-10T01:32:51Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>shreyashankar/gpt3-sandbox</title>
    <updated>2022-12-10T01:32:51Z</updated>
    <id>tag:github.com,2022-12-10:/shreyashankar/gpt3-sandbox</id>
    <link href="https://github.com/shreyashankar/gpt3-sandbox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The goal of this project is to enable users to create cool web demos using the newly released OpenAI GPT-3 API with just a few lines of Python.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPT-3 Sandbox: Turn your ideas into demos in a matter of minutes&lt;/h1&gt; &#xA;&lt;p&gt;Initial release date: 19 July 2020&lt;/p&gt; &#xA;&lt;p&gt;Note that this repository is not under any active development; just basic maintenance.&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;The goal of this project is to enable users to create cool web demos using the newly released OpenAI GPT-3 API &lt;strong&gt;with just a few lines of Python.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project addresses the following issues:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Automatically formatting a user&#39;s inputs and outputs so that the model can effectively pattern-match&lt;/li&gt; &#xA; &lt;li&gt;Creating a web app for a user to deploy locally and showcase their idea&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Here&#39;s a quick example of priming GPT to convert English to LaTeX:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Construct GPT object and show some examples&#xA;gpt = GPT(engine=&#34;davinci&#34;,&#xA;          temperature=0.5,&#xA;          max_tokens=100)&#xA;gpt.add_example(Example(&#39;Two plus two equals four&#39;, &#39;2 + 2 = 4&#39;))&#xA;gpt.add_example(Example(&#39;The integral from zero to infinity&#39;, &#39;\\int_0^{\\infty}&#39;))&#xA;gpt.add_example(Example(&#39;The gradient of x squared plus two times x with respect to x&#39;, &#39;\\nabla_x x^2 + 2x&#39;))&#xA;gpt.add_example(Example(&#39;The log of two times x&#39;, &#39;\\log{2x}&#39;))&#xA;gpt.add_example(Example(&#39;x squared plus y squared plus equals z squared&#39;, &#39;x^2 + y^2 = z^2&#39;))&#xA;&#xA;# Define UI configuration&#xA;config = UIConfig(description=&#34;Text to equation&#34;,&#xA;                  button_text=&#34;Translate&#34;,&#xA;                  placeholder=&#34;x squared plus 2 times x&#34;)&#xA;&#xA;demo_web_app(gpt, config)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running this code as a python script would automatically launch a web app for you to test new inputs and outputs with. There are already 3 example scripts in the &lt;code&gt;examples&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;You can also prime GPT from the UI. for that, pass &lt;code&gt;show_example_form=True&lt;/code&gt; to &lt;code&gt;UIConfig&lt;/code&gt; along with other parameters.&lt;/p&gt; &#xA;&lt;p&gt;Technical details: the backend is in Flask, and the frontend is in React. Note that this repository is currently not intended for production use.&lt;/p&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;GPT-3 (&lt;a href=&#34;https://arxiv.org/abs/2005.14165&#34;&gt;Brown et al.&lt;/a&gt;) is OpenAI&#39;s latest language model. It incrementally builds on model architectures designed in &lt;a href=&#34;https://arxiv.org/abs/1706.03762&#34;&gt;previous&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/1810.04805&#34;&gt;research&lt;/a&gt; studies, but its key advance is that it&#39;s extremely good at &#34;few-shot&#34; learning. There&#39;s a &lt;a href=&#34;https://twitter.com/sharifshameem/status/1282676454690451457&#34;&gt;lot&lt;/a&gt; &lt;a href=&#34;https://twitter.com/jsngr/status/1284511080715362304?s=20&#34;&gt;it&lt;/a&gt; &lt;a href=&#34;https://twitter.com/paraschopra/status/1284801028676653060?s=20&#34;&gt;can&lt;/a&gt; &lt;a href=&#34;https://www.gwern.net/GPT-3&#34;&gt;do&lt;/a&gt;, but one of the biggest pain points is in &#34;priming,&#34; or seeding, the model with some inputs such that the model can intelligently create new outputs. Many people have ideas for GPT-3 but struggle to make them work, since priming is a new paradigm of machine learning. Additionally, it takes a nontrivial amount of web development to spin up a demo to showcase a cool idea. We built this project to make our own idea generation easier to experiment with.&lt;/p&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://www.notion.so/API-Developer-Toolkit-49595ed6ffcd413e93ebff10d7e70fe7&#34;&gt;developer toolkit&lt;/a&gt; has some great resources for those experimenting with the API, including sample prompts.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Coding-wise, you only need Python. But for the app to run, you will need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;API key from the OpenAI API beta invite&lt;/li&gt; &#xA; &lt;li&gt;Python 3&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Node 16&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instructions to install Python 3 are &lt;a href=&#34;https://realpython.com/installing-python/&#34;&gt;here&lt;/a&gt;, instructions to install &lt;code&gt;yarn&lt;/code&gt; are &lt;a href=&#34;https://classic.yarnpkg.com/en/docs/install/#mac-stable&#34;&gt;here&lt;/a&gt; and we recommend using nvm to install (and manage) Node (instructions are &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;First, clone or fork this repository. Then to set up your virtual environment, do the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a virtual environment in the root directory: &lt;code&gt;python -m venv $ENV_NAME&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Activate the virtual environment: &lt;code&gt; source $ENV_NAME/bin/activate&lt;/code&gt; (for MacOS, Unix, or Linux users) or &lt;code&gt; .\ENV_NAME\Scripts\activate&lt;/code&gt; (for Windows users)&lt;/li&gt; &#xA; &lt;li&gt;Install requirements: &lt;code&gt;pip install -r api/requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To add your secret key: create a file anywhere on your computer called &lt;code&gt;openai.cfg&lt;/code&gt; with the contents &lt;code&gt;OPENAI_KEY=$YOUR_SECRET_KEY&lt;/code&gt;, where &lt;code&gt;$YOUR_SECRET_KEY&lt;/code&gt; looks something like &lt;code&gt;&#39;sk-somerandomcharacters&#39;&lt;/code&gt; (including quotes). If you are unsure what your secret key is, navigate to the &lt;a href=&#34;https://beta.openai.com/account/api-keys&#34;&gt;API Keys page&lt;/a&gt; and click &#34;Copy&#34; next to a token displayed under &#34;Secret Key&#34;. If there is none, click on &#34;Create new secret key&#34; and then copy it.&lt;/li&gt; &#xA; &lt;li&gt;Set your environment variable to read the secret key: run &lt;code&gt;export OPENAI_CONFIG=/path/to/config/openai.cfg&lt;/code&gt; (for MacOS, Unix, or Linux users) or &lt;code&gt;set OPENAI_CONFIG=/path/to/config/openai.cfg&lt;/code&gt; (for Windows users)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn install&lt;/code&gt; in the root directory&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you are a Windows user, to run the demos, you will need to modify the following line inside &lt;code&gt;api/demo_web_app.py&lt;/code&gt;: &lt;code&gt;subprocess.Popen([&#34;yarn&#34;, &#34;start&#34;])&lt;/code&gt; to &lt;code&gt;subprocess.Popen([&#34;yarn&#34;, &#34;start&#34;], shell=True)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To verify that your environment is set up properly, run one of the 3 scripts in the &lt;code&gt;examples&lt;/code&gt; directory: &lt;code&gt;python examples/run_latex_app.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A new tab should pop up in your browser, and you should be able to interact with the UI! To stop this app, run ctrl-c or command-c in your terminal.&lt;/p&gt; &#xA;&lt;p&gt;To create your own example, check out the &lt;a href=&#34;https://github.com/shreyashankar/gpt3-sandbox/raw/master/docs/getting-started.md&#34;&gt;&#34;getting started&#34; docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Interactive Priming&lt;/h2&gt; &#xA;&lt;p&gt;The real power of GPT-3 is in its ability to learn to specialize to tasks given a few examples. However, priming can at times be more of an art than a science. Using the GPT and Example classes, you can easily experiment with different priming examples and immediately see their GPT on GPT-3&#39;s performance. Below is an example showing it improve incrementally at translating English to LaTeX as we feed it more examples in the python interpreter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; from api import GPT, Example, set_openai_key&#xA;&amp;gt;&amp;gt;&amp;gt; gpt = GPT()&#xA;&amp;gt;&amp;gt;&amp;gt; set_openai_key(key)&#xA;&amp;gt;&amp;gt;&amp;gt; prompt = &#34;integral from a to b of f of x&#34;&#xA;&amp;gt;&amp;gt;&amp;gt; print(gpt.get_top_reply(prompt))&#xA;output: integral from a to be of f of x&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; gpt.add_example(Example(&#34;Two plus two equals four&#34;, &#34;2 + 2 = 4&#34;))&#xA;&amp;gt;&amp;gt;&amp;gt; print(gpt.get_top_reply(prompt))&#xA;output:&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; gpt.add_example(Example(&#39;The integral from zero to infinity&#39;, &#39;\\int_0^{\\infty}&#39;))&#xA;&amp;gt;&amp;gt;&amp;gt; print(gpt.get_top_reply(prompt))&#xA;output: \int_a^b f(x) dx&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;We actively encourage people to contribute by adding their own examples or even adding functionalities to the modules. Please make a pull request if you would like to add something, or create an issue if you have a question. We will update the contributors list on a regular basis.&lt;/p&gt; &#xA;&lt;p&gt;Please &lt;em&gt;do not&lt;/em&gt; leave your secret key in plaintext in your pull request!&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;The following authors have committed 20 lines or more (ordered according to the Github contributors page):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shreya Shankar&lt;/li&gt; &#xA; &lt;li&gt;Bora Uyumazturk&lt;/li&gt; &#xA; &lt;li&gt;Devin Stein&lt;/li&gt; &#xA; &lt;li&gt;Gulan&lt;/li&gt; &#xA; &lt;li&gt;Michael Lavelle&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ReactTooltip/react-tooltip</title>
    <updated>2022-12-10T01:32:51Z</updated>
    <id>tag:github.com,2022-12-10:/ReactTooltip/react-tooltip</id>
    <link href="https://github.com/ReactTooltip/react-tooltip" rel="alternate"></link>
    <summary type="html">&lt;p&gt;react tooltip component&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;react-tooltip&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.org/package/react-tooltip&#34;&gt;&lt;img src=&#34;http://img.shields.io/npm/v/react-tooltip.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prettier/prettier&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?sanitize=true&#34; alt=&#34;code style: prettier&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmjs.org/package/react-tooltip&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/react-tooltip.svg?style=flat-square&#34; alt=&#34;npm download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/wwayne/react-tooltip&#34;&gt;&lt;img src=&#34;https://travis-ci.org/wwayne/react-tooltip.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/semantic-release/semantic-release&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&#34; alt=&#34;semantic-release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codesandbox.io/s/still-monad-yfi4fn?fontsize=14&amp;amp;hidenavigation=1&amp;amp;theme=dark&#34;&gt;&lt;img src=&#34;https://codesandbox.io/static/img/play-codesandbox.svg?sanitize=true&#34; alt=&#34;Edit ReactTooltip&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Documentation for V4 - &lt;a href=&#34;https://reacttooltip.github.io/react-tooltip/&#34;&gt;Github Page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Documentation for V5 - &lt;a href=&#34;https://react-tooltip.com/docs/getting-started&#34;&gt;ReactTooltip&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install react-tooltip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add react-tooltip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Using NPM&lt;/h3&gt; &#xA;&lt;p&gt;1 . Require react-tooltip after installation&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { Tooltip } from &#39;react-tooltip&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you want to still use the name ReactTooltip as V4:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { Tooltip as ReactTooltip } from &#39;react-tooltip&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2 . Add data-tooltip-content = &#34;your placeholder&#34; to your element&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;p id=&#34;my-element&#34; data-tooltip-content=&#34;hello world&#34;&amp;gt;&#xA;  Tooltip&#xA;&amp;lt;/p&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3 . Include react-tooltip component&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;ReactTooltip anchorId=&#34;my-element&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Standalone&lt;/h3&gt; &#xA;&lt;p&gt;You can import &lt;code&gt;node_modules/react-tooltip/dist/react-tooltip.[mode].js&lt;/code&gt; into your page. Please make sure that you have already imported &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt; into your page.&lt;/p&gt; &#xA;&lt;p&gt;mode: &lt;code&gt;esm&lt;/code&gt; &lt;code&gt;cjs&lt;/code&gt; &lt;code&gt;umd&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to use default ReactTooltip styles, don&#39;t forget to import the styles: &lt;code&gt;node_modules/react-tooltip/dist/react-tooltip.css&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;PS: all the files has a minified version and a not minified version.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9615850/205637814-c0ef01ae-bd77-4e7f-b4bf-df502c71e5c3.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;p&gt;For all available options, please check &lt;a href=&#34;https://react-tooltip.com/docs/options&#34;&gt;React Tooltip Options&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Security Note&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;html&lt;/code&gt; option allows a tooltip to directly display raw HTML. This is a security risk if any of that content is supplied by the user. Any user-supplied content must be sanitized, using a package like &lt;a href=&#34;https://www.npmjs.com/package/sanitize-html&#34;&gt;sanitize-html&lt;/a&gt;. We chose not to include sanitization after discovering it &lt;a href=&#34;https://github.com/wwayne/react-tooltip/issues/429&#34;&gt;increased our package size&lt;/a&gt; too much - we don&#39;t want to penalize people who don&#39;t use the &lt;code&gt;html&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h4&gt;JSX Note&lt;/h4&gt; &#xA;&lt;p&gt;You can use React&#39;s &lt;a href=&#34;https://reactjs.org/docs/react-dom-server.html#rendertostaticmarkup&#34;&gt;&lt;code&gt;renderToStaticMarkup&lt;/code&gt;-function&lt;/a&gt; to use JSX instead of HTML. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import ReactDOMServer from &#39;react-dom/server&#39;;&#xA;[...]&#xA;&amp;lt;p id=&#34;my-element&#34; data-tooltip-html={ReactDOMServer.renderToString(&amp;lt;div&amp;gt;I am &amp;lt;b&amp;gt;JSX&amp;lt;/b&amp;gt; content&amp;lt;/div&amp;gt;)}&amp;gt;&#xA;  Hover me&#xA;&amp;lt;/p&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Note&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;id&lt;/strong&gt; is necessary, because &lt;code&gt;&amp;lt;ReactTooltip anchorId=&#34;my-element&#34; /&amp;gt;&lt;/code&gt; finds the tooltip via this attribute&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Article&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@wwayne_me/how-i-insert-sass-into-my-npm-react-component-b46b9811c226#.gi4hxu44a&#34;&gt;How I insert sass into react component&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/danielbarion&#34;&gt;danielbarion&lt;/a&gt; Maintainer - Creator of React Tooltip &amp;gt;= V5.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aronhelser&#34;&gt;aronhelser&lt;/a&gt; Passive maintainer - accepting PRs and doing minor testing, but not fixing issues or doing active development.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alexgurr&#34;&gt;alexgurr&lt;/a&gt; (inactive).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pdeszynski&#34;&gt;pdeszynski&lt;/a&gt; (inactive).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/roggervalf&#34;&gt;roggervalf&lt;/a&gt; (inactive).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/huumanoid&#34;&gt;huumanoid&lt;/a&gt; (inactive)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wwayne&#34;&gt;wwayne&lt;/a&gt; (inactive) - Creator of the original React Tooltip (V1.x ~ V4.x.)&lt;/p&gt; &#xA;&lt;p&gt;We would gladly accept a new maintainer to help out!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome your contribution! Fork the repo, make some changes, submit a pull-request! Our &lt;a href=&#34;https://raw.githubusercontent.com/ReactTooltip/react-tooltip/master/contributing.md&#34;&gt;contributing&lt;/a&gt; doc has some details.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DavidAnson/markdownlint</title>
    <updated>2022-12-10T01:32:51Z</updated>
    <id>tag:github.com,2022-12-10:/DavidAnson/markdownlint</id>
    <link href="https://github.com/DavidAnson/markdownlint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Node.js style checker and lint tool for Markdown/CommonMark files.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;markdownlint&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A Node.js style checker and lint tool for Markdown/CommonMark files.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/markdownlint&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/markdownlint.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/l/markdownlint.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install markdownlint --save-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt; markup language is designed to be easy to read, write, and understand. It succeeds - and its flexibility is both a benefit and a drawback. Many styles are possible, so formatting can be inconsistent. Some constructs don&#39;t work well in all parsers and should be avoided. The &lt;a href=&#34;https://commonmark.org/&#34;&gt;CommonMark&lt;/a&gt; specification standardizes parsers - but not authors.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;markdownlint&lt;/code&gt; is a &lt;a href=&#34;https://en.wikipedia.org/wiki/Static_program_analysis&#34;&gt;static analysis&lt;/a&gt; tool for &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; with a library of rules to enforce standards and consistency for Markdown files. It was inspired by - and heavily influenced by - Mark Harrison&#39;s &lt;a href=&#34;https://github.com/markdownlint/markdownlint&#34;&gt;markdownlint&lt;/a&gt; for &lt;a href=&#34;https://www.ruby-lang.org/&#34;&gt;Ruby&lt;/a&gt;. The initial rules, rule documentation, and test cases came directly from that project.&lt;/p&gt; &#xA;&lt;h3&gt;Related&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CLI &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/igorshubovych/markdownlint-cli&#34;&gt;markdownlint-cli&lt;/a&gt; command-line interface for Node.js (&lt;a href=&#34;https://github.com/igorshubovych/markdownlint-cli#use-with-pre-commit&#34;&gt;works with pre-commit&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/DavidAnson/markdownlint-cli2&#34;&gt;markdownlint-cli2&lt;/a&gt; command-line interface for Node.js (&lt;a href=&#34;https://github.com/DavidAnson/markdownlint-cli2#pre-commit&#34;&gt;works with pre-commit&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;GitHub &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/github/super-linter&#34;&gt;GitHub Super-Linter Action&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/xt0rted/markdownlint-problem-matcher&#34;&gt;GitHub Actions problem matcher for markdownlint-cli&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Editor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint&#34;&gt;vscode-markdownlint extension for VS Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://packagecontrol.io/packages/SublimeLinter-contrib-markdownlint&#34;&gt;Sublime Text markdownlint for Sublime Text&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/fannheyward/coc-markdownlint&#34;&gt;coc-markdownlint extension for Vim/Neovim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Tooling &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/paweldrozd/eslint-plugin-markdownlint&#34;&gt;eslint-plugin-markdownlint for the ESLint analyzer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sagiegurari/grunt-markdownlint&#34;&gt;grunt-markdownlint for the Grunt task runner&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/cake-contrib/Cake.Markdownlint&#34;&gt;Cake.Markdownlint addin for Cake build automation system&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Lombiq/NodeJs-Extensions&#34;&gt;Lombiq Node.js Extensions for MSBuild (.NET builds)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Ruby &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://rubygems.org/gems/mdl&#34;&gt;markdownlint/mdl gem for Ruby&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demonstration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dlaa.me/markdownlint/&#34;&gt;&lt;code&gt;markdownlint&lt;/code&gt; demo&lt;/a&gt;, an interactive, in-browser playground for learning and exploring.&lt;/p&gt; &#xA;&lt;h2&gt;Rules / Aliases&lt;/h2&gt; &#xA;&lt;!-- markdownlint-disable line-length --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md001&#34;&gt;MD001&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;heading-increment/header-increment&lt;/em&gt; - Heading levels should only increment by one level at a time&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md002&#34;&gt;MD002&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;first-heading-h1/first-header-h1&lt;/em&gt; - First heading should be a top-level heading&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md003&#34;&gt;MD003&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;heading-style/header-style&lt;/em&gt; - Heading style&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md004&#34;&gt;MD004&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;ul-style&lt;/em&gt; - Unordered list style&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md005&#34;&gt;MD005&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;list-indent&lt;/em&gt; - Inconsistent indentation for list items at the same level&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md006&#34;&gt;MD006&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;ul-start-left&lt;/em&gt; - Consider starting bulleted lists at the beginning of the line&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md007&#34;&gt;MD007&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;ul-indent&lt;/em&gt; - Unordered list indentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md009&#34;&gt;MD009&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-trailing-spaces&lt;/em&gt; - Trailing spaces&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md010&#34;&gt;MD010&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-hard-tabs&lt;/em&gt; - Hard tabs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md011&#34;&gt;MD011&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-reversed-links&lt;/em&gt; - Reversed link syntax&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md012&#34;&gt;MD012&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-multiple-blanks&lt;/em&gt; - Multiple consecutive blank lines&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md013&#34;&gt;MD013&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;line-length&lt;/em&gt; - Line length&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md014&#34;&gt;MD014&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;commands-show-output&lt;/em&gt; - Dollar signs used before commands without showing output&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md018&#34;&gt;MD018&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-missing-space-atx&lt;/em&gt; - No space after hash on atx style heading&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md019&#34;&gt;MD019&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-multiple-space-atx&lt;/em&gt; - Multiple spaces after hash on atx style heading&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md020&#34;&gt;MD020&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-missing-space-closed-atx&lt;/em&gt; - No space inside hashes on closed atx style heading&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md021&#34;&gt;MD021&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-multiple-space-closed-atx&lt;/em&gt; - Multiple spaces inside hashes on closed atx style heading&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md022&#34;&gt;MD022&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;blanks-around-headings/blanks-around-headers&lt;/em&gt; - Headings should be surrounded by blank lines&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md023&#34;&gt;MD023&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;heading-start-left/header-start-left&lt;/em&gt; - Headings must start at the beginning of the line&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md024&#34;&gt;MD024&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-duplicate-heading/no-duplicate-header&lt;/em&gt; - Multiple headings with the same content&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md025&#34;&gt;MD025&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;single-title/single-h1&lt;/em&gt; - Multiple top-level headings in the same document&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md026&#34;&gt;MD026&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-trailing-punctuation&lt;/em&gt; - Trailing punctuation in heading&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md027&#34;&gt;MD027&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-multiple-space-blockquote&lt;/em&gt; - Multiple spaces after blockquote symbol&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md028&#34;&gt;MD028&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-blanks-blockquote&lt;/em&gt; - Blank line inside blockquote&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md029&#34;&gt;MD029&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;ol-prefix&lt;/em&gt; - Ordered list item prefix&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md030&#34;&gt;MD030&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;list-marker-space&lt;/em&gt; - Spaces after list markers&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md031&#34;&gt;MD031&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;blanks-around-fences&lt;/em&gt; - Fenced code blocks should be surrounded by blank lines&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md032&#34;&gt;MD032&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;blanks-around-lists&lt;/em&gt; - Lists should be surrounded by blank lines&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md033&#34;&gt;MD033&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-inline-html&lt;/em&gt; - Inline HTML&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md034&#34;&gt;MD034&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-bare-urls&lt;/em&gt; - Bare URL used&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md035&#34;&gt;MD035&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;hr-style&lt;/em&gt; - Horizontal rule style&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md036&#34;&gt;MD036&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-emphasis-as-heading/no-emphasis-as-header&lt;/em&gt; - Emphasis used instead of a heading&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md037&#34;&gt;MD037&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-space-in-emphasis&lt;/em&gt; - Spaces inside emphasis markers&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md038&#34;&gt;MD038&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-space-in-code&lt;/em&gt; - Spaces inside code span elements&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md039&#34;&gt;MD039&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-space-in-links&lt;/em&gt; - Spaces inside link text&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md040&#34;&gt;MD040&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;fenced-code-language&lt;/em&gt; - Fenced code blocks should have a language specified&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md041&#34;&gt;MD041&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;first-line-heading/first-line-h1&lt;/em&gt; - First line in a file should be a top-level heading&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md042&#34;&gt;MD042&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-empty-links&lt;/em&gt; - No empty links&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md043&#34;&gt;MD043&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;required-headings/required-headers&lt;/em&gt; - Required heading structure&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md044&#34;&gt;MD044&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;proper-names&lt;/em&gt; - Proper names should have the correct capitalization&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md045&#34;&gt;MD045&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;no-alt-text&lt;/em&gt; - Images should have alternate text (alt text)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md046&#34;&gt;MD046&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;code-block-style&lt;/em&gt; - Code block style&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md047&#34;&gt;MD047&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;single-trailing-newline&lt;/em&gt; - Files should end with a single newline character&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md048&#34;&gt;MD048&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;code-fence-style&lt;/em&gt; - Code fence style&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md049&#34;&gt;MD049&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;emphasis-style&lt;/em&gt; - Emphasis style should be consistent&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md050&#34;&gt;MD050&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;strong-style&lt;/em&gt; - Strong style should be consistent&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md051&#34;&gt;MD051&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;link-fragments&lt;/em&gt; - Link fragments should be valid&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md052&#34;&gt;MD052&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;reference-links-images&lt;/em&gt; - Reference links and images should use a label that is defined&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md#md053&#34;&gt;MD053&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;link-image-reference-definitions&lt;/em&gt; - Link and image reference definitions should be needed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/Rules.md&#34;&gt;Rules.md&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;Struck through&lt;/del&gt; rules are deprecated, and provided for backward-compatibility.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All rules with &lt;code&gt;heading&lt;/code&gt; as part of their name are also available as &lt;code&gt;header&lt;/code&gt; aliases (e.g. &lt;code&gt;heading-increment&lt;/code&gt; is also available as &lt;code&gt;header-increment&lt;/code&gt;). The use of &lt;code&gt;header&lt;/code&gt; is deprecated and provided for backward-compatibility.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Tags&lt;/h2&gt; &#xA;&lt;p&gt;Tags group related rules and can be used to enable/disable multiple rules at once.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;accessibility&lt;/strong&gt; - MD045&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;atx&lt;/strong&gt; - MD018, MD019&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;atx_closed&lt;/strong&gt; - MD020, MD021&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;blank_lines&lt;/strong&gt; - MD012, MD022, MD031, MD032, MD047&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;blockquote&lt;/strong&gt; - MD027, MD028&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;bullet&lt;/strong&gt; - MD004, MD005, MD006, MD007, MD032&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;code&lt;/strong&gt; - MD014, MD031, MD038, MD040, MD046, MD048&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;emphasis&lt;/strong&gt; - MD036, MD037, MD049, MD050&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;hard_tab&lt;/strong&gt; - MD010&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;headers&lt;/strong&gt; - MD001, MD002, MD003, MD018, MD019, MD020, MD021, MD022, MD023, MD024, MD025, MD026, MD036, MD041, MD043&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;headings&lt;/strong&gt; - MD001, MD002, MD003, MD018, MD019, MD020, MD021, MD022, MD023, MD024, MD025, MD026, MD036, MD041, MD043&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;hr&lt;/strong&gt; - MD035&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;html&lt;/strong&gt; - MD033&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;images&lt;/strong&gt; - MD045, MD052, MD053&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;indentation&lt;/strong&gt; - MD005, MD006, MD007, MD027&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;language&lt;/strong&gt; - MD040&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;line_length&lt;/strong&gt; - MD013&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;links&lt;/strong&gt; - MD011, MD034, MD039, MD042, MD051, MD052, MD053&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ol&lt;/strong&gt; - MD029, MD030, MD032&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;spaces&lt;/strong&gt; - MD018, MD019, MD020, MD021, MD023&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;spelling&lt;/strong&gt; - MD044&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ul&lt;/strong&gt; - MD004, MD005, MD006, MD007, MD030, MD032&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; - MD034&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;whitespace&lt;/strong&gt; - MD009, MD010, MD012, MD027, MD028, MD030, MD037, MD038, MD039&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Text passed to &lt;code&gt;markdownlint&lt;/code&gt; is parsed as Markdown, analyzed, and any issues reported. Two kinds of text are ignored:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3.org/TR/html5/syntax.html#comments&#34;&gt;HTML comments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jekyllrb.com/docs/frontmatter/&#34;&gt;Front matter&lt;/a&gt; (see &lt;code&gt;options.frontMatter&lt;/code&gt; below)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Rules can be enabled, disabled, and configured via &lt;code&gt;options.config&lt;/code&gt; (described below) to define the expected behavior for a set of inputs. To enable or disable rules at a particular location within a file, add one of these markers to the appropriate place (HTML comments don&#39;t appear in the final markup):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Disable all rules: &lt;code&gt;&amp;lt;!-- markdownlint-disable --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enable all rules: &lt;code&gt;&amp;lt;!-- markdownlint-enable --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Disable all rules for the current line: &lt;code&gt;&amp;lt;!-- markdownlint-disable-line --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Disable all rules for the next line: &lt;code&gt;&amp;lt;!-- markdownlint-disable-next-line --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Disable one or more rules by name: &lt;code&gt;&amp;lt;!-- markdownlint-disable MD001 MD005 --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enable one or more rules by name: &lt;code&gt;&amp;lt;!-- markdownlint-enable MD001 MD005 --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Disable one or more rules by name for the current line: &lt;code&gt;&amp;lt;!-- markdownlint-disable-line MD001 MD005 --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Disable one or more rules by name for the next line: &lt;code&gt;&amp;lt;!-- markdownlint-disable-next-line MD001 MD005 --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Capture the current rule configuration: &lt;code&gt;&amp;lt;!-- markdownlint-capture --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Restore the captured rule configuration: &lt;code&gt;&amp;lt;!-- markdownlint-restore --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;lt;!-- markdownlint-disable-next-line no-space-in-emphasis --&amp;gt;&#xA;deliberate space * in * emphasis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;deliberate space * in * emphasis &amp;lt;!-- markdownlint-disable-line no-space-in-emphasis --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;lt;!-- markdownlint-disable no-space-in-emphasis --&amp;gt;&#xA;deliberate space * in * emphasis&#xA;&amp;lt;!-- markdownlint-enable no-space-in-emphasis --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To temporarily disable rule(s), then restore the former configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;lt;!-- markdownlint-capture --&amp;gt;&#xA;&amp;lt;!-- markdownlint-disable --&amp;gt;&#xA;any violations you want&#xA;&amp;lt;!-- markdownlint-restore --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The initial configuration is captured by default (as if every document began with &lt;code&gt;&amp;lt;!-- markdownlint-capture --&amp;gt;&lt;/code&gt;), so the pattern above can be expressed more simply:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;lt;!-- markdownlint-disable --&amp;gt;&#xA;any violations you want&#xA;&amp;lt;!-- markdownlint-restore --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Changes take effect starting with the line a comment is on, so the following has no effect:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;space * in * emphasis &amp;lt;!-- markdownlint-disable --&amp;gt; &amp;lt;!-- markdownlint-enable --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To apply changes to an entire file regardless of where the comment is located, the following syntax is supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Disable all rules: &lt;code&gt;&amp;lt;!-- markdownlint-disable-file --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enable all rules: &lt;code&gt;&amp;lt;!-- markdownlint-enable-file --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Disable one or more rules by name: &lt;code&gt;&amp;lt;!-- markdownlint-disable-file MD001 --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enable one or more rules by name: &lt;code&gt;&amp;lt;!-- markdownlint-enable-file MD001 --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This can be used to &#34;hide&#34; &lt;code&gt;markdownlint&lt;/code&gt; comments at the bottom of a file.&lt;/p&gt; &#xA;&lt;p&gt;In cases where it is desirable to change the configuration of one or more rules for a file, the following more advanced syntax is supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configure: &lt;code&gt;&amp;lt;!-- markdownlint-configure-file { options.config JSON } --&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;lt;!-- markdownlint-configure-file { &#34;MD013&#34;: { &#34;code_blocks&#34;: false } } --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;lt;!-- markdownlint-configure-file&#xA;{&#xA;  &#34;hr-style&#34;: {&#xA;    &#34;style&#34;: &#34;---&#34;&#xA;  },&#xA;  &#34;no-trailing-spaces&#34;: false&#xA;}&#xA;--&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These changes apply to the entire file regardless of where the comment is located. Multiple such comments (if present) are applied top-to-bottom. By default, content of &lt;code&gt;markdownlint-configure-file&lt;/code&gt; is assumed to be JSON, but &lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/#optionsconfigparsers&#34;&gt;&lt;code&gt;options.configParsers&lt;/code&gt;&lt;/a&gt; can be used to support alternate formats.&lt;/p&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;h3&gt;Linting&lt;/h3&gt; &#xA;&lt;p&gt;Standard asynchronous API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/**&#xA; * Lint specified Markdown files.&#xA; *&#xA; * @param {Options} options Configuration options.&#xA; * @param {LintCallback} callback Callback (err, result) function.&#xA; * @returns {void}&#xA; */&#xA;function markdownlint(options, callback) { ... }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Synchronous API (for build scripts, etc.):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/**&#xA; * Lint specified Markdown files synchronously.&#xA; *&#xA; * @param {Options} options Configuration options.&#xA; * @returns {LintResults} Results object.&#xA; */&#xA;function markdownlint.sync(options) { ... }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Promise API (in the &lt;code&gt;promises&lt;/code&gt; namespace like Node.js&#39;s &lt;a href=&#34;https://nodejs.org/api/fs.html#fs_fs_promises_api&#34;&gt;&lt;code&gt;fs&lt;/code&gt; Promises API&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/**&#xA; * Lint specified Markdown files.&#xA; *&#xA; * @param {Options} options Configuration options.&#xA; * @returns {Promise&amp;lt;LintResults&amp;gt;} Results object.&#xA; */&#xA;function markdownlint(options) { ... }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;options&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Configures the function. All properties are optional, but at least one of &lt;code&gt;files&lt;/code&gt; or &lt;code&gt;strings&lt;/code&gt; should be set to provide input.&lt;/p&gt; &#xA;&lt;h5&gt;options.config&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Object&lt;/code&gt; mapping &lt;code&gt;String&lt;/code&gt; to &lt;code&gt;Boolean | Object&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Configures the rules to use.&lt;/p&gt; &#xA;&lt;p&gt;Object keys are rule names or aliases and values are the rule&#39;s configuration. The value &lt;code&gt;false&lt;/code&gt; disables a rule, &lt;code&gt;true&lt;/code&gt; enables its default configuration, and passing an object customizes its settings. Setting the special &lt;code&gt;default&lt;/code&gt; rule to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; includes/excludes all rules by default. Enabling or disabling a tag name (ex: &lt;code&gt;whitespace&lt;/code&gt;) affects all rules having that tag.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;default&lt;/code&gt; rule is applied first, then keys are processed in order from top to bottom with later values overriding earlier ones. Keys (including rule names, aliases, tags, and &lt;code&gt;default&lt;/code&gt;) are not case-sensitive.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;default&#34;: true,&#xA;  &#34;MD003&#34;: { &#34;style&#34;: &#34;atx_closed&#34; },&#xA;  &#34;MD007&#34;: { &#34;indent&#34;: 4 },&#xA;  &#34;no-hard-tabs&#34;: false,&#xA;  &#34;whitespace&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/schema/.markdownlint.jsonc&#34;&gt;.markdownlint.jsonc&lt;/a&gt; and/or &lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/schema/.markdownlint.yaml&#34;&gt;.markdownlint.yaml&lt;/a&gt; for an example configuration object with all properties set to the default value.&lt;/p&gt; &#xA;&lt;p&gt;Sets of rules (known as a &#34;style&#34;) can be stored separately and loaded as &lt;a href=&#34;https://en.wikipedia.org/wiki/JSON&#34;&gt;JSON&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const options = {&#xA;  &#34;files&#34;: [ &#34;...&#34; ],&#xA;  &#34;config&#34;: require(&#34;style/relaxed.json&#34;)&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/style&#34;&gt;style&lt;/a&gt; directory for more samples.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/schema/markdownlint-config-schema.json&#34;&gt;markdownlint-config-schema.json&lt;/a&gt; for the &lt;a href=&#34;https://json-schema.org/&#34;&gt;JSON Schema&lt;/a&gt; of the &lt;code&gt;options.config&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;p&gt;For more advanced scenarios, styles can reference and extend other styles. The &lt;code&gt;readConfig&lt;/code&gt; and &lt;code&gt;readConfigSync&lt;/code&gt; functions can be used to read such styles.&lt;/p&gt; &#xA;&lt;p&gt;For example, assuming a &lt;code&gt;base.json&lt;/code&gt; configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;default&#34;: true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And a &lt;code&gt;custom.json&lt;/code&gt; configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;extends&#34;: &#34;base.json&#34;,&#xA;  &#34;line-length&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then code like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const options = {&#xA;  &#34;config&#34;: markdownlint.readConfigSync(&#34;./custom.json&#34;)&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Merges &lt;code&gt;custom.json&lt;/code&gt; and &lt;code&gt;base.json&lt;/code&gt; and is equivalent to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const options = {&#xA;  &#34;config&#34;: {&#xA;    &#34;default&#34;: true,&#xA;    &#34;line-length&#34;: false&#xA;  }&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;options.configParsers&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;em&gt;Optional&lt;/em&gt; &lt;code&gt;Array&lt;/code&gt; of &lt;code&gt;Function&lt;/code&gt; taking (&lt;code&gt;String&lt;/code&gt;) and returning &lt;code&gt;Object&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Array of functions to parse the content of &lt;code&gt;markdownlint-configure-file&lt;/code&gt; blocks.&lt;/p&gt; &#xA;&lt;p&gt;As shown in the &lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/#configuration&#34;&gt;Configuration&lt;/a&gt; section, inline comments can be used to customize the &lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/#optionsconfig&#34;&gt;configuration object&lt;/a&gt; for a document. By default, the &lt;code&gt;JSON.parse&lt;/code&gt; built-in is used, but custom parsers can be specified. Content is passed to each parser function until one returns a value (vs. throwing an exception). As such, strict parsers should come before flexible ones.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;[ JSON.parse, require(&#34;toml&#34;).parse, require(&#34;js-yaml&#34;).load ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;options.customRules&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Array&lt;/code&gt; of &lt;code&gt;Object&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;List of custom rules to include with the default rule set for linting.&lt;/p&gt; &#xA;&lt;p&gt;Each array element should define a rule. Rules are typically exported by another package, but can be defined locally. Custom rules are identified by the &lt;a href=&#34;https://www.npmjs.com/search?q=keywords:markdownlint-rule&#34;&gt;keyword &lt;code&gt;markdownlint-rule&lt;/code&gt; on npm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const extraRules = require(&#34;extraRules&#34;);&#xA;const options = {&#xA;  &#34;customRules&#34;: [ extraRules.one, extraRules.two ]&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/doc/CustomRules.md&#34;&gt;CustomRules.md&lt;/a&gt; for details about authoring custom rules.&lt;/p&gt; &#xA;&lt;h5&gt;options.files&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Array&lt;/code&gt; of &lt;code&gt;String&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;List of files to lint.&lt;/p&gt; &#xA;&lt;p&gt;Each array element should be a single file (via relative or absolute path); &lt;a href=&#34;https://en.wikipedia.org/wiki/Glob_%28programming%29&#34;&gt;globbing&lt;/a&gt; is the caller&#39;s responsibility.&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;[ &#34;one.md&#34;, &#34;dir/two.md&#34; ]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;options.frontMatter&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;RegExp&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Matches any &lt;a href=&#34;https://jekyllrb.com/docs/frontmatter/&#34;&gt;front matter&lt;/a&gt; found at the beginning of a file.&lt;/p&gt; &#xA;&lt;p&gt;Some Markdown content begins with metadata; the default &lt;code&gt;RegExp&lt;/code&gt; for this option ignores common forms of &#34;front matter&#34;. To match differently, specify a custom &lt;code&gt;RegExp&lt;/code&gt; or use the value &lt;code&gt;null&lt;/code&gt; to disable the feature.&lt;/p&gt; &#xA;&lt;p&gt;The default value:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/((^---\s*$[^]*?^---\s*$)|(^\+\+\+\s*$[^]*?^(\+\+\+|\.\.\.)\s*$)|(^\{\s*$[^]*?^\}\s*$))(\r\n|\r|\n|$)/m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ignores &lt;a href=&#34;https://en.wikipedia.org/wiki/YAML&#34;&gt;YAML&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/TOML&#34;&gt;TOML&lt;/a&gt;, and &lt;a href=&#34;https://en.wikipedia.org/wiki/JSON&#34;&gt;JSON&lt;/a&gt; front matter such as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;---&#xA;layout: post&#xA;title: Title&#xA;---&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Matches must occur at the start of the file.&lt;/p&gt; &#xA;&lt;h5&gt;options.fs&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Object&lt;/code&gt; implementing the &lt;a href=&#34;https://nodejs.org/api/fs.html&#34;&gt;file system API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In advanced scenarios, it may be desirable to bypass the default file system API. If a custom file system implementation is provided, &lt;code&gt;markdownlint&lt;/code&gt; will use that instead of invoking &lt;code&gt;require(&#34;fs&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note: The only methods called are &lt;code&gt;readFile&lt;/code&gt; and &lt;code&gt;readFileSync&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;options.handleRuleFailures&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Catches exceptions thrown during rule processing and reports the problem as a rule violation.&lt;/p&gt; &#xA;&lt;p&gt;By default, exceptions thrown by rules (or the library itself) are unhandled and bubble up the stack to the caller in the conventional manner. By setting &lt;code&gt;handleRuleFailures&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, exceptions thrown by failing rules will be handled by the library and the exception message logged as a rule violation. This setting can be useful in the presence of (custom) rules that encounter unexpected syntax and fail. By enabling this option, the linting process is allowed to continue and report any violations that were found.&lt;/p&gt; &#xA;&lt;h5&gt;options.markdownItPlugins&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Array&lt;/code&gt; of &lt;code&gt;Array&lt;/code&gt; of &lt;code&gt;Function&lt;/code&gt; and plugin parameters&lt;/p&gt; &#xA;&lt;p&gt;Specifies additional &lt;a href=&#34;https://www.npmjs.com/search?q=keywords:markdown-it-plugin&#34;&gt;markdown-it plugins&lt;/a&gt; to use when parsing input. Plugins can be used to support additional syntax and features for advanced scenarios.&lt;/p&gt; &#xA;&lt;p&gt;Each item in the top-level &lt;code&gt;Array&lt;/code&gt; should be of the form:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;[ require(&#34;markdown-it-plugin&#34;), plugin_param_0, plugin_param_1, ... ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;options.noInlineConfig&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Boolean&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Disables the use of HTML comments like &lt;code&gt;&amp;lt;!-- markdownlint-disable --&amp;gt;&lt;/code&gt; to toggle rules within the body of Markdown content.&lt;/p&gt; &#xA;&lt;p&gt;By default, properly-formatted inline comments can be used to create exceptions for parts of a document. Setting &lt;code&gt;noInlineConfig&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; ignores all such comments.&lt;/p&gt; &#xA;&lt;h5&gt;options.resultVersion&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Specifies which version of the &lt;code&gt;result&lt;/code&gt; object to return (see the &#34;Usage&#34; section below for examples).&lt;/p&gt; &#xA;&lt;p&gt;Passing a &lt;code&gt;resultVersion&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt; corresponds to the original, simple format where each error is identified by rule name and line number. &lt;em&gt;This is deprecated.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Passing a &lt;code&gt;resultVersion&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt; corresponds to a detailed format where each error includes information about the line number, rule name, alias, description, as well as any additional detail or context that is available. &lt;em&gt;This is deprecated.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Passing a &lt;code&gt;resultVersion&lt;/code&gt; of &lt;code&gt;2&lt;/code&gt; corresponds to a detailed format where each error includes information about the line number, rule names, description, as well as any additional detail or context that is available. &lt;em&gt;This is deprecated.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Passing a &lt;code&gt;resultVersion&lt;/code&gt; of &lt;code&gt;3&lt;/code&gt; corresponds to the detailed version &lt;code&gt;2&lt;/code&gt; format with additional information about how to fix automatically-fixable errors. In this mode, all errors that occur on each line are reported (other versions report only the first error for each rule). &lt;em&gt;This is the default.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h5&gt;options.strings&lt;/h5&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Object&lt;/code&gt; mapping &lt;code&gt;String&lt;/code&gt; to &lt;code&gt;String&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Map of identifiers to strings for linting.&lt;/p&gt; &#xA;&lt;p&gt;When Markdown content is not available as files, it can be passed as strings. The keys of the &lt;code&gt;strings&lt;/code&gt; object are used to identify each input value in the &lt;code&gt;result&lt;/code&gt; summary.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;readme&#34;: &#34;# README\n...&#34;,&#xA;  &#34;changelog&#34;: &#34;# CHANGELOG\n...&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;callback&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt; taking (&lt;code&gt;Error&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Standard completion callback.&lt;/p&gt; &#xA;&lt;h4&gt;result&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Call &lt;code&gt;result.toString()&lt;/code&gt; for convenience or see below for an example of the structure of the &lt;code&gt;result&lt;/code&gt; object. Passing the value &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;toString()&lt;/code&gt; uses rule aliases (ex: &lt;code&gt;no-hard-tabs&lt;/code&gt;) instead of names (ex: &lt;code&gt;MD010&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Config&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;options.config&lt;/code&gt; configuration object is simple and can be stored in a file for readability and easy reuse. The &lt;code&gt;readConfig&lt;/code&gt; and &lt;code&gt;readConfigSync&lt;/code&gt; functions load configuration settings and support the &lt;code&gt;extends&lt;/code&gt; keyword for referencing other files (see above).&lt;/p&gt; &#xA;&lt;p&gt;By default, configuration files are parsed as JSON (and named &lt;code&gt;.markdownlint.json&lt;/code&gt;). Custom parsers can be provided to handle other formats like JSONC, YAML, and TOML.&lt;/p&gt; &#xA;&lt;p&gt;Asynchronous API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/**&#xA; * Read specified configuration file.&#xA; *&#xA; * @param {string} file Configuration file name.&#xA; * @param {ConfigurationParser[] | ReadConfigCallback} parsers Parsing function(s).&#xA; * @param {Object} [fs] File system implementation.&#xA; * @param {ReadConfigCallback} [callback] Callback (err, result) function.&#xA; * @returns {void}&#xA; */&#xA;function readConfig(file, parsers, fs, callback) { ... }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Synchronous API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/**&#xA; * Read specified configuration file synchronously.&#xA; *&#xA; * @param {string} file Configuration file name.&#xA; * @param {ConfigurationParser[]} [parsers] Parsing function(s).&#xA; * @param {Object} [fs] File system implementation.&#xA; * @returns {Configuration} Configuration object.&#xA; */&#xA;function readConfigSync(file, parsers, fs) { ... }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Promise API (in the &lt;code&gt;promises&lt;/code&gt; namespace like Node.js&#39;s &lt;a href=&#34;https://nodejs.org/api/fs.html#fs_promises_api&#34;&gt;&lt;code&gt;fs&lt;/code&gt; Promises API&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/**&#xA; * Read specified configuration file.&#xA; *&#xA; * @param {string} file Configuration file name.&#xA; * @param {ConfigurationParser[]} [parsers] Parsing function(s).&#xA; * @param {Object} [fs] File system implementation.&#xA; * @returns {Promise&amp;lt;Configuration&amp;gt;} Configuration object.&#xA; */&#xA;function readConfig(file, parsers, fs) { ... }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;file&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;String&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Location of configuration file to read.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;file&lt;/code&gt; is resolved relative to the current working directory. If an &lt;code&gt;extends&lt;/code&gt; key is present once read, its value will be resolved as a path relative to &lt;code&gt;file&lt;/code&gt; and loaded recursively. Settings from a file referenced by &lt;code&gt;extends&lt;/code&gt; are applied first, then those of &lt;code&gt;file&lt;/code&gt; are applied on top (overriding any of the same keys appearing in the referenced file). If either the &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;extends&lt;/code&gt; path begins with the &lt;code&gt;~&lt;/code&gt; directory, it will act as a placeholder for the home directory.&lt;/p&gt; &#xA;&lt;h4&gt;parsers&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;em&gt;Optional&lt;/em&gt; &lt;code&gt;Array&lt;/code&gt; of &lt;code&gt;Function&lt;/code&gt; taking (&lt;code&gt;String&lt;/code&gt;) and returning &lt;code&gt;Object&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Array of functions to parse configuration files.&lt;/p&gt; &#xA;&lt;p&gt;The contents of a configuration file are passed to each parser function until one of them returns a value (vs. throwing an exception). Consequently, strict parsers should come before flexible parsers.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;[ JSON.parse, require(&#34;toml&#34;).parse, require(&#34;js-yaml&#34;).load ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;fs&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;em&gt;Optional&lt;/em&gt; &lt;code&gt;Object&lt;/code&gt; implementing the &lt;a href=&#34;https://nodejs.org/api/fs.html&#34;&gt;file system API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In advanced scenarios, it may be desirable to bypass the default file system API. If a custom file system implementation is provided, &lt;code&gt;markdownlint&lt;/code&gt; will use that instead of invoking &lt;code&gt;require(&#34;fs&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note: The only methods called are &lt;code&gt;readFile&lt;/code&gt;, &lt;code&gt;readFileSync&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;, and &lt;code&gt;accessSync&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;callback&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt; taking (&lt;code&gt;Error&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Standard completion callback.&lt;/p&gt; &#xA;&lt;h4&gt;result&lt;/h4&gt; &#xA;&lt;p&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Configuration object.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Invoke &lt;code&gt;markdownlint&lt;/code&gt; and use the &lt;code&gt;result&lt;/code&gt; object&#39;s &lt;code&gt;toString&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const markdownlint = require(&#34;markdownlint&#34;);&#xA;&#xA;const options = {&#xA;  &#34;files&#34;: [ &#34;good.md&#34;, &#34;bad.md&#34; ],&#xA;  &#34;strings&#34;: {&#xA;    &#34;good.string&#34;: &#34;# good.string\n\nThis string passes all rules.&#34;,&#xA;    &#34;bad.string&#34;: &#34;#bad.string\n\n#This string fails\tsome rules.&#34;&#xA;  }&#xA;};&#xA;&#xA;markdownlint(options, function callback(err, result) {&#xA;  if (!err) {&#xA;    console.log(result.toString());&#xA;  }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;bad.string: 3: MD010/no-hard-tabs Hard tabs [Column: 19]&#xA;bad.string: 1: MD018/no-missing-space-atx No space after hash on atx style heading [Context: &#34;#bad.string&#34;]&#xA;bad.string: 3: MD018/no-missing-space-atx No space after hash on atx style heading [Context: &#34;#This string fails        some rules.&#34;]&#xA;bad.string: 1: MD041/first-line-heading/first-line-h1 First line in a file should be a top-level heading [Context: &#34;#bad.string&#34;]&#xA;bad.md: 3: MD010/no-hard-tabs Hard tabs [Column: 17]&#xA;bad.md: 1: MD018/no-missing-space-atx No space after hash on atx style heading [Context: &#34;#bad.md&#34;]&#xA;bad.md: 3: MD018/no-missing-space-atx No space after hash on atx style heading [Context: &#34;#This file fails      some rules.&#34;]&#xA;bad.md: 1: MD041/first-line-heading/first-line-h1 First line in a file should be a top-level heading [Context: &#34;#bad.md&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or invoke &lt;code&gt;markdownlint.sync&lt;/code&gt; for a synchronous call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const result = markdownlint.sync(options);&#xA;console.log(result.toString());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To examine the &lt;code&gt;result&lt;/code&gt; object directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;markdownlint(options, function callback(err, result) {&#xA;  if (!err) {&#xA;    console.dir(result, { &#34;colors&#34;: true, &#34;depth&#34;: null });&#xA;  }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;good.md&#34;: [],&#xA;  &#34;bad.md&#34;: [&#xA;    { &#34;lineNumber&#34;: 3,&#xA;      &#34;ruleNames&#34;: [ &#34;MD010&#34;, &#34;no-hard-tabs&#34; ],&#xA;      &#34;ruleDescription&#34;: &#34;Hard tabs&#34;,&#xA;      &#34;ruleInformation&#34;: &#34;https://github.com/DavidAnson/markdownlint/blob/v0.0.0/doc/Rules.md#md010&#34;,&#xA;      &#34;errorDetail&#34;: &#34;Column: 17&#34;,&#xA;      &#34;errorContext&#34;: null,&#xA;      &#34;errorRange&#34;: [ 17, 1 ] },&#xA;    { &#34;lineNumber&#34;: 1,&#xA;      &#34;ruleNames&#34;: [ &#34;MD018&#34;, &#34;no-missing-space-atx&#34; ],&#xA;      &#34;ruleDescription&#34;: &#34;No space after hash on atx style heading&#34;,&#xA;      &#34;ruleInformation&#34;: &#34;https://github.com/DavidAnson/markdownlint/blob/v0.0.0/doc/Rules.md#md018&#34;,&#xA;      &#34;errorDetail&#34;: null,&#xA;      &#34;errorContext&#34;: &#34;#bad.md&#34;,&#xA;      &#34;errorRange&#34;: [ 1, 2 ] },&#xA;    { &#34;lineNumber&#34;: 3,&#xA;      &#34;ruleNames&#34;: [ &#34;MD018&#34;, &#34;no-missing-space-atx&#34; ],&#xA;      &#34;ruleDescription&#34;: &#34;No space after hash on atx style heading&#34;,&#xA;      &#34;ruleInformation&#34;: &#34;https://github.com/DavidAnson/markdownlint/blob/v0.0.0/doc/Rules.md#md018&#34;,&#xA;      &#34;errorDetail&#34;: null,&#xA;      &#34;errorContext&#34;: &#34;#This file fails\tsome rules.&#34;,&#xA;      &#34;errorRange&#34;: [ 1, 2 ] },&#xA;    { &#34;lineNumber&#34;: 1,&#xA;      &#34;ruleNames&#34;: [ &#34;MD041&#34;, &#34;first-line-heading&#34;, &#34;first-line-h1&#34; ],&#xA;      &#34;ruleDescription&#34;: &#34;First line in a file should be a top-level heading&#34;,&#xA;      &#34;ruleInformation&#34;: &#34;https://github.com/DavidAnson/markdownlint/blob/v0.0.0/doc/Rules.md#md041&#34;,&#xA;      &#34;errorDetail&#34;: null,&#xA;      &#34;errorContext&#34;: &#34;#bad.md&#34;,&#xA;      &#34;errorRange&#34;: null }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Integration with the &lt;a href=&#34;https://gulpjs.com/&#34;&gt;gulp&lt;/a&gt; build system is straightforward:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const gulp = require(&#34;gulp&#34;);&#xA;const through2 = require(&#34;through2&#34;);&#xA;const markdownlint = require(&#34;markdownlint&#34;);&#xA;&#xA;gulp.task(&#34;markdownlint&#34;, function task() {&#xA;  return gulp.src(&#34;*.md&#34;, { &#34;read&#34;: false })&#xA;    .pipe(through2.obj(function obj(file, enc, next) {&#xA;      markdownlint(&#xA;        { &#34;files&#34;: [ file.relative ] },&#xA;        function callback(err, result) {&#xA;          const resultString = (result || &#34;&#34;).toString();&#xA;          if (resultString) {&#xA;            console.log(resultString);&#xA;          }&#xA;          next(err, file);&#xA;        });&#xA;    }));&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;[00:00:00] Starting &#39;markdownlint&#39;...&#xA;bad.md: 3: MD010/no-hard-tabs Hard tabs [Column: 17]&#xA;bad.md: 1: MD018/no-missing-space-atx No space after hash on atx style heading [Context: &#34;#bad.md&#34;]&#xA;bad.md: 3: MD018/no-missing-space-atx No space after hash on atx style heading [Context: &#34;#This file fails      some rules.&#34;]&#xA;bad.md: 1: MD041/first-line-heading/first-line-h1 First line in a file should be a top-level heading [Context: &#34;#bad.md&#34;]&#xA;[00:00:00] Finished &#39;markdownlint&#39; after 10 ms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Integration with the &lt;a href=&#34;https://gruntjs.com/&#34;&gt;Grunt&lt;/a&gt; build system is similar:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const markdownlint = require(&#34;markdownlint&#34;);&#xA;&#xA;module.exports = function wrapper(grunt) {&#xA;  grunt.initConfig({&#xA;    &#34;markdownlint&#34;: {&#xA;      &#34;example&#34;: {&#xA;        &#34;src&#34;: [ &#34;*.md&#34; ]&#xA;      }&#xA;    }&#xA;  });&#xA;&#xA;  grunt.registerMultiTask(&#34;markdownlint&#34;, function task() {&#xA;    const done = this.async();&#xA;    markdownlint(&#xA;      { &#34;files&#34;: this.filesSrc },&#xA;      function callback(err, result) {&#xA;        const resultString = err || ((result || &#34;&#34;).toString());&#xA;        if (resultString) {&#xA;          grunt.fail.warn(&#34;\n&#34; + resultString + &#34;\n&#34;);&#xA;        }&#xA;        done(!err || !resultString);&#xA;      });&#xA;  });&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Running &#34;markdownlint:example&#34; (markdownlint) task&#xA;Warning:&#xA;bad.md: 3: MD010/no-hard-tabs Hard tabs [Column: 17]&#xA;bad.md: 1: MD018/no-missing-space-atx No space after hash on atx style heading [Context: &#34;#bad.md&#34;]&#xA;bad.md: 3: MD018/no-missing-space-atx No space after hash on atx style heading [Context: &#34;#This file fails      some rules.&#34;]&#xA;bad.md: 1: MD041/first-line-heading/first-line-h1 First line in a file should be a top-level heading [Context: &#34;#bad.md&#34;]&#xA; Use --force to continue.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Browser&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;markdownlint&lt;/code&gt; also works in the browser.&lt;/p&gt; &#xA;&lt;p&gt;Generate normal and minified scripts with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm run build-demo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then reference &lt;code&gt;markdown-it&lt;/code&gt; and &lt;code&gt;markdownlint&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;demo/markdown-it.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script src=&#34;demo/markdownlint-browser.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And call it like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const options = {&#xA;  &#34;strings&#34;: {&#xA;    &#34;content&#34;: &#34;Some Markdown to lint.&#34;&#xA;  }&#xA;};&#xA;const results = window.markdownlint.sync(options).toString();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;For ideas how to integrate &lt;code&gt;markdownlint&lt;/code&gt; into your workflow, refer to the following projects or one of the tools in the &lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/#related&#34;&gt;Related section&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/&#34;&gt;.NET Documentation&lt;/a&gt; (&lt;a href=&#34;https://github.com/dotnet/docs/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://allyjs.io/&#34;&gt;ally.js&lt;/a&gt; (&lt;a href=&#34;https://github.com/medialize/ally.js/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://boostnote.io/&#34;&gt;Boostnote&lt;/a&gt; (&lt;a href=&#34;https://github.com/BoostIO/Boostnote/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hackmdio/codimd&#34;&gt;CodiMD&lt;/a&gt; (&lt;a href=&#34;https://github.com/hackmdio/codimd/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt; (&lt;a href=&#34;https://github.com/eslint/eslint/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zendeskgarden.github.io/react-components/&#34;&gt;Garden React Components&lt;/a&gt; (&lt;a href=&#34;https://github.com/zendeskgarden/react-components/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/&#34;&gt;MDN Web Docs&lt;/a&gt; (&lt;a href=&#34;https://github.com/mdn/content/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mkdocs.org/&#34;&gt;MkDocs&lt;/a&gt; (&lt;a href=&#34;https://github.com/mkdocs/mkdocs/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mochajs.org/&#34;&gt;Mocha&lt;/a&gt; (&lt;a href=&#34;https://github.com/mochajs/mocha/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.pi-hole.net&#34;&gt;Pi-hole documentation&lt;/a&gt; (&lt;a href=&#34;https://github.com/pi-hole/docs/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://glittershark.github.io/reactable/&#34;&gt;Reactable&lt;/a&gt; (&lt;a href=&#34;https://github.com/glittershark/reactable/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sinonjs.org/&#34;&gt;Sinon.JS&lt;/a&gt; (&lt;a href=&#34;https://github.com/sinonjs/sinon/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devexpress.github.io/testcafe/&#34;&gt;TestCafe&lt;/a&gt; (&lt;a href=&#34;https://github.com/DevExpress/testcafe/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v8.dev/&#34;&gt;V8&lt;/a&gt; (&lt;a href=&#34;https://github.com/v8/v8.dev/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webhint.io/&#34;&gt;webhint&lt;/a&gt; (&lt;a href=&#34;https://github.com/webhintio/hint/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webpack.js.org/&#34;&gt;webpack&lt;/a&gt; (&lt;a href=&#34;https://github.com/webpack/webpack.js.org/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wordpress.org/gutenberg/&#34;&gt;WordPress&lt;/a&gt; (&lt;a href=&#34;https://github.com/WordPress/gutenberg/search?q=markdownlint&#34;&gt;Search repository&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/DavidAnson/markdownlint/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;0.0.1 - Initial release, includes tests MD001-MD032.&lt;/li&gt; &#xA; &lt;li&gt;0.0.2 - Improve documentation, tests, and code.&lt;/li&gt; &#xA; &lt;li&gt;0.0.3 - Add synchronous API, improve documentation and code.&lt;/li&gt; &#xA; &lt;li&gt;0.0.4 - Add tests MD033-MD040, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.0.5 - Add &lt;code&gt;strings&lt;/code&gt; option to enable file-less scenarios, add in-browser demo.&lt;/li&gt; &#xA; &lt;li&gt;0.0.6 - Improve performance, simplify in-browser, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.0.7 - Add MD041, improve MD003, ignore front matter, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.0.8 - Support disabling/enabling rules inline, improve code fence, dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.1.0 - Add aliases, exceptions for MD033, exclusions for MD013, dependencies. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0.1.1 - Fix bug handling HTML in tables, reference markdownlint-cli.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;0.2.0 - Add MD042/MD043, enhance MD002/MD003/MD004/MD007/MD011/MD025/MD041, dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.3.0 - More detailed error reporting with &lt;code&gt;resultVersion&lt;/code&gt;, enhance MD010/MD012/MD036, fixes for MD027/MD029/MD030, include JSON schema, dependencies. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0.3.1 - Fix regressions in MD032/MD038, update dependencies.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;0.4.0 - Add MD044, enhance MD013/MD032/MD041/MD042/MD043, fix for MD038, dependencies. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0.4.1 - Fixes for MD038/front matter, improvements to MD044, update dependencies.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;0.5.0 - Add shareable configuration, &lt;code&gt;noInlineConfig&lt;/code&gt; option, README links, fix MD030, improve MD009/MD041, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.6.0 - &lt;code&gt;resultVersion&lt;/code&gt; defaults to 1 (breaking change), ignore HTML comments, TOML front matter, fixes for MD044, update dependencies. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0.6.1 - Update &lt;code&gt;markdown-it&lt;/code&gt; versioning, exclude demo/test from publishing.&lt;/li&gt; &#xA;   &lt;li&gt;0.6.2 - Improve MD013/MD027/MD034/MD037/MD038/MD041/MD044, update dependencies.&lt;/li&gt; &#xA;   &lt;li&gt;0.6.3 - Improve highlighting for MD020.&lt;/li&gt; &#xA;   &lt;li&gt;0.6.4 - Improve MD029/MD042, update dependencies.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;0.7.0 - &lt;code&gt;resultVersion&lt;/code&gt; defaults to 2 (breaking change), add MD045, improve MD029, remove trimLeft/trimRight, split rules, refactor, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.8.0 - Add support for using and authoring custom rules, improve MD004/MD007/MD013, add &lt;code&gt;engines&lt;/code&gt; to &lt;code&gt;package.json&lt;/code&gt;, refactor, update dependencies. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0.8.1 - Update item loop to be iterative, improve MD014, update dependencies.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;0.9.0 - Remove support for end-of-life Node versions 0.10/0.12/4, change &#34;header&#34; to &#34;heading&#34; per spec (non-breaking), improve MD003/MD009/MD041, handle uncommon line-break characters, refactor for ES6, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.10.0 - Add support for non-JSON configuration files, pass file/string name to custom rules, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.11.0 - Improve MD005/MD024/MD029/MD038, improve custom rule example, add CONTRIBUTING.md, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.12.0 - Add &lt;code&gt;information&lt;/code&gt; link for custom rules, &lt;code&gt;markdownItPlugins&lt;/code&gt; for extensibility, improve MD023/MD032/MD038, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.13.0 - Improve MD013/MD022/MD025/MD029/MD031/MD032/MD037/MD041/, deprecate MD002, improve pandoc YAML support, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.14.0 - Remove support for end-of-life Node version 6, introduce &lt;code&gt;markdownlint-rule-helpers&lt;/code&gt;, add MD046/MD047, improve MD033/MD034/MD039, improve custom rule validation and in-browser demo, update dependencies. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0.14.1 - Improve MD033.&lt;/li&gt; &#xA;   &lt;li&gt;0.14.2 - Improve MD047, add &lt;code&gt;handleRuleFailures&lt;/code&gt; option.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;0.15.0 - Add &lt;code&gt;markdownlint-capture&lt;/code&gt;/&lt;code&gt;markdownlint-restore&lt;/code&gt; inline comments, improve MD009/MD013/MD026/MD033/MD036, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.16.0 - Add custom rule sample for linting code, improve MD026/MD031/MD033/MD038, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.17.0 - Add &lt;code&gt;resultVersion&lt;/code&gt; 3 to support fix information for default and custom rules, add fix information for 24 rules, update newline handling to match latest CommonMark specification, improve MD014/MD037/MD039, update dependencies. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0.17.1 - Fix handling of front matter by fix information.&lt;/li&gt; &#xA;   &lt;li&gt;0.17.2 - Improve MD020/MD033/MD044.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;0.18.0 - Add MD048/code-fence-style, add fix information for MD007/ul-indent, add &lt;code&gt;markdownlint-disable-file&lt;/code&gt;/&lt;code&gt;markdownlint-enable-file&lt;/code&gt; inline comments, add type declaration file (.d.ts) for TypeScript dependents, update schema, improve MD006/MD007/MD009/MD013/MD030, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.19.0 - Remove support for end-of-life Node version 8, add fix information for MD005/list-indent, improve MD007/MD013/MD014, deprecate MD006/ul-start-left, add rationale for every rule, update test runner and code coverage, add more JSDoc comments, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.20.0 - Add &lt;code&gt;markdownlint-configure-file&lt;/code&gt; inline comment, reimplement MD037, improve MD005/MD007/MD013/MD018/MD029/MD031/MD034/MD038/MD039, improve HTML comment handling, update dependencies. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0.20.1 - Fix regression in MD037.&lt;/li&gt; &#xA;   &lt;li&gt;0.20.2 - Fix regression in MD037, improve MD038.&lt;/li&gt; &#xA;   &lt;li&gt;0.20.3 - Fix regression in MD037, improve MD044, add automatic regression testing.&lt;/li&gt; &#xA;   &lt;li&gt;0.20.4 - Fix regression in MD037, improve MD034/MD044, improve documentation.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;0.21.0 - Lint concurrently for better performance (async only), add Promise-based APIs, update TypeScript declaration file, hide &lt;code&gt;toString&lt;/code&gt; on &lt;code&gt;LintResults&lt;/code&gt;, add ability to fix in browser demo, allow custom rules in &lt;code&gt;.markdownlint.json&lt;/code&gt; schema, improve MD042/MD044, improve documentation, update dependencies. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0.21.1 - Improve MD011/MD031, export &lt;code&gt;getVersion&lt;/code&gt; API.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;0.22.0 - Allow &lt;code&gt;extends&lt;/code&gt; in config to reference installed packages by name, add &lt;code&gt;markdownlint-disable-next-line&lt;/code&gt; inline comment, support JSON front matter, improve MD009/MD026/MD028/MD043, update dependencies (including &lt;code&gt;markdown-it&lt;/code&gt; to v12).&lt;/li&gt; &#xA; &lt;li&gt;0.23.0 - Add comprehensive example &lt;code&gt;.markdownlint.jsonc&lt;/code&gt;/&lt;code&gt;.markdownlint.yaml&lt;/code&gt; files, add fix information for MD004/ul-style, improve MD018/MD019/MD020/MD021/MD037/MD041, improve HTML comment handling, update test runner and test suite, update dependencies. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0.23.1 - Work around lack of webpack support for dynamic calls to &lt;code&gt;require&lt;/code&gt; (&lt;code&gt;.resolve&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;0.24.0 - Remove support for end-of-life Node version 10, add support for custom file system module, improve MD010/MD011/MD037/MD043/MD044, improve TypeScript declaration file and JSON schema, update dependencies.&lt;/li&gt; &#xA; &lt;li&gt;0.25.0 - Add MD049/MD050 for consistent emphasis/strong style (both auto-fixable), improve MD007/MD010/MD032/MD033/MD035/MD037/MD039, support asynchronous custom rules, improve performance, improve CI process, reduce dependencies, update dependencies. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0.25.1 - Update dependencies for CVE-2022-21670.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;0.26.0 - Add MD051/MD052/MD053 for validating link fragments &amp;amp; reference links/images &amp;amp; link/image reference definitions (MD053 is auto-fixable), improve MD010/MD031/MD035/MD039/MD042/MD044/MD049/MD050, add &lt;code&gt;markdownlint-disable-line&lt;/code&gt; inline comment, support &lt;code&gt;~&lt;/code&gt; paths in &lt;code&gt;readConfig/Sync&lt;/code&gt;, add &lt;code&gt;configParsers&lt;/code&gt; option, remove support for end-of-life Node version 12, default &lt;code&gt;resultVersion&lt;/code&gt; to 3, update browser script to use ES2015, simplify JSON schema, address remaining CodeQL issues, improve performance, update dependencies. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0.26.1 - Improve MD051.&lt;/li&gt; &#xA;   &lt;li&gt;0.26.2 - Improve MD037/MD051/MD053.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>