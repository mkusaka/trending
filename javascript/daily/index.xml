<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-03T01:36:20Z</updated>
  <subtitle>Daily Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>adrianhajdin/project_threejs_ai</title>
    <updated>2023-04-03T01:36:20Z</updated>
    <id>tag:github.com,2023-04-03:/adrianhajdin/project_threejs_ai</id>
    <link href="https://github.com/adrianhajdin/project_threejs_ai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Build and Deploy an AI-Powered 3D Website Using React | 2023 Three JS Course Tutorial for Beginners&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.ibb.co/Krk39Cf/Thumbnali.png&#34; alt=&#34;3D Website&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Many large corporations already use 3D graphics to showcase their products. Learn how to build your own ThreeJS 3D product website and infuse it with the power of artificial intelligence!&lt;/p&gt; &#xA;&lt;p&gt;In this course, you&#39;ll learn the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ThreeJS - a powerful 3D graphics library for rendering and animating the 3D model&lt;/li&gt; &#xA; &lt;li&gt;React Three Fiber - a popular library for creating 3D graphics with ThreeJS in React&lt;/li&gt; &#xA; &lt;li&gt;TailwindCSS - a popular utility-first CSS styling framework&lt;/li&gt; &#xA; &lt;li&gt;Framer Motion - the most popular library used to bring your React website to life with animations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You&#39;ll also learn how to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Load, create and customize stunning 3D models and geometries with various lights, as well as understand the 3D world with a camera and positioning of an object in space.&lt;/li&gt; &#xA; &lt;li&gt;Make your code reusable and scalable using Higher Order Components (HOCs) and other industry-standard best practices&lt;/li&gt; &#xA; &lt;li&gt;Add custom color and file support.&lt;/li&gt; &#xA; &lt;li&gt;Generate and use images through DALLE AI&lt;/li&gt; &#xA; &lt;li&gt;Download the resulting t-shirt model image&lt;/li&gt; &#xA; &lt;li&gt;Ensure responsiveness across all devices and improve your site&#39;s performance&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Want to land your dream programming job in 3 - 6 months?&lt;/h2&gt; &#xA;&lt;p&gt;‚≠ê JSM Masterclass Experience - &lt;a href=&#34;https://jsmastery.pro/masterclass&#34;&gt;https://jsmastery.pro/masterclass&lt;/a&gt; Become a Software Engineer. Guaranteed.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>twitter/typeahead.js</title>
    <updated>2023-04-03T01:36:20Z</updated>
    <id>tag:github.com,2023-04-03:/twitter/typeahead.js</id>
    <link href="https://github.com/twitter/typeahead.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;typeahead.js is a fast and fully-featured autocomplete library&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;http://travis-ci.org/twitter/typeahead.js&#34;&gt;&lt;img src=&#34;https://secure.travis-ci.org/twitter/typeahead.js.svg?branch=master&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://gruntjs.com/&#34;&gt;&lt;img src=&#34;https://cdn.gruntjs.com/builtwith.png&#34; alt=&#34;Built with Grunt&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;http://twitter.github.io/typeahead.js/&#34;&gt;typeahead.js&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Inspired by &lt;a href=&#34;https://twitter.com&#34;&gt;twitter.com&lt;/a&gt;&#39;s autocomplete search functionality, typeahead.js is a flexible JavaScript library that provides a strong foundation for building robust typeaheads.&lt;/p&gt; &#xA;&lt;p&gt;The typeahead.js library consists of 2 components: the suggestion engine, &lt;a href=&#34;https://github.com/twitter/typeahead.js/raw/master/doc/bloodhound.md&#34;&gt;Bloodhound&lt;/a&gt;, and the UI view, &lt;a href=&#34;https://github.com/twitter/typeahead.js/raw/master/doc/jquery_typeahead.md&#34;&gt;Typeahead&lt;/a&gt;. The suggestion engine is responsible for computing suggestions for a given query. The UI view is responsible for rendering suggestions and handling DOM interactions. Both components can be used separately, but when used together, they can provide a rich typeahead experience.&lt;/p&gt; &#xA;&lt;!-- section links --&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;How you acquire typeahead.js is up to you.&lt;/p&gt; &#xA;&lt;p&gt;Preferred method:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install with &lt;a href=&#34;http://bower.io/&#34;&gt;Bower&lt;/a&gt;: &lt;code&gt;$ bower install typeahead.js&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://twitter.github.com/typeahead.js/releases/latest/typeahead.js.zip&#34;&gt;Download zipball of latest release&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Download the latest dist files individually: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://twitter.github.com/typeahead.js/releases/latest/bloodhound.js&#34;&gt;bloodhound.js&lt;/a&gt;&lt;/em&gt; (standalone suggestion engine)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://twitter.github.com/typeahead.js/releases/latest/typeahead.jquery.js&#34;&gt;typeahead.jquery.js&lt;/a&gt;&lt;/em&gt; (standalone UI view)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://twitter.github.com/typeahead.js/releases/latest/typeahead.bundle.js&#34;&gt;typeahead.bundle.js&lt;/a&gt;&lt;/em&gt; (&lt;em&gt;bloodhound.js&lt;/em&gt; + &lt;em&gt;typeahead.jquery.js&lt;/em&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://twitter.github.com/typeahead.js/releases/latest/typeahead.bundle.min.js&#34;&gt;typeahead.bundle.min.js&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; both &lt;em&gt;bloodhound.js&lt;/em&gt; and &lt;em&gt;typeahead.jquery.js&lt;/em&gt; have a dependency on &lt;a href=&#34;http://jquery.com/&#34;&gt;jQuery&lt;/a&gt; 1.9+.&lt;/p&gt; &#xA;&lt;!-- section links --&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/typeahead.js/raw/master/doc/jquery_typeahead.md&#34;&gt;Typeahead Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/typeahead.js/raw/master/doc/bloodhound.md&#34;&gt;Bloodhound Docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;For some working examples of typeahead.js, visit the &lt;a href=&#34;http://twitter.github.io/typeahead.js/examples&#34;&gt;examples page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- section links --&gt; &#xA;&lt;h2&gt;Browser Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chrome&lt;/li&gt; &#xA; &lt;li&gt;Firefox 3.5+&lt;/li&gt; &#xA; &lt;li&gt;Safari 4+&lt;/li&gt; &#xA; &lt;li&gt;Internet Explorer 8+&lt;/li&gt; &#xA; &lt;li&gt;Opera 11+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; typeahead.js is not tested on mobile browsers.&lt;/p&gt; &#xA;&lt;h2&gt;Customer Support&lt;/h2&gt; &#xA;&lt;p&gt;For general questions about typeahead.js, tweet at &lt;a href=&#34;https://twitter.com/typeahead&#34;&gt;@typeahead&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For technical questions, you should post a question on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; and tag it with &lt;a href=&#34;http://stackoverflow.com/questions/tagged/typeahead.js&#34;&gt;typeahead.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- section links --&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Discovered a bug? Please create an issue here on GitHub!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/twitter/typeahead.js/issues&#34;&gt;https://github.com/twitter/typeahead.js/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;For transparency and insight into our release cycle, releases will be numbered with the following format:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;And constructed with the following guidelines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Breaking backwards compatibility bumps the major&lt;/li&gt; &#xA; &lt;li&gt;New additions without breaking backwards compatibility bumps the minor&lt;/li&gt; &#xA; &lt;li&gt;Bug fixes and misc changes bump the patch&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information on semantic versioning, please visit &lt;a href=&#34;http://semver.org/&#34;&gt;http://semver.org/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Tests are written using &lt;a href=&#34;http://jasmine.github.io/&#34;&gt;Jasmine&lt;/a&gt; and ran with &lt;a href=&#34;http://karma-runner.github.io/&#34;&gt;Karma&lt;/a&gt;. To run the test suite with PhantomJS, run &lt;code&gt;$ npm test&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;!-- section links --&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;p&gt;If you plan on contributing to typeahead.js, be sure to read the &lt;a href=&#34;https://github.com/twitter/typeahead.js/raw/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;. A good starting place for new contributors are issues labeled with &lt;a href=&#34;https://github.com/twitter/typeahead.js/issues?&amp;amp;labels=entry-level&amp;amp;state=open&#34;&gt;entry-level&lt;/a&gt;. Entry-level issues tend to require minor changes and provide developers a chance to get more familiar with typeahead.js before taking on more challenging work.&lt;/p&gt; &#xA;&lt;p&gt;In order to build and test typeahead.js, you&#39;ll need to install its dev dependencies (&lt;code&gt;$ npm install&lt;/code&gt;) and have &lt;a href=&#34;https://github.com/gruntjs/grunt-cli&#34;&gt;grunt-cli&lt;/a&gt; installed (&lt;code&gt;$ npm install -g grunt-cli&lt;/code&gt;). Below is an overview of the available Grunt tasks that&#39;ll be useful in development.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;grunt build&lt;/code&gt; ‚Äì Builds &lt;em&gt;typeahead.js&lt;/em&gt; from source.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;grunt lint&lt;/code&gt; ‚Äì Runs source and test files through JSHint.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;grunt watch&lt;/code&gt; ‚Äì Rebuilds &lt;em&gt;typeahead.js&lt;/em&gt; whenever a source file is modified.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;grunt server&lt;/code&gt; ‚Äì Serves files from the root of typeahead.js on localhost:8888. Useful for using &lt;em&gt;test/playground.html&lt;/em&gt; for debugging/testing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;grunt dev&lt;/code&gt; ‚Äì Runs &lt;code&gt;grunt watch&lt;/code&gt; and &lt;code&gt;grunt server&lt;/code&gt; in parallel.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- section links --&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Jake Harding&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://twitter.com/JakeHarding&#34;&gt;@JakeHarding&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jharding&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;You?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Jake Harding&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://twitter.com/JakeHarding&#34;&gt;@JakeHarding&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jharding&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Veljko Skarich&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://twitter.com/vskarich&#34;&gt;@vskarich&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/vskarich&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tim Trueman&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://twitter.com/timtrueman&#34;&gt;@timtrueman&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/timtrueman&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2013 Twitter, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the MIT License&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>reactjs/server-components-demo</title>
    <updated>2023-04-03T01:36:20Z</updated>
    <id>tag:github.com,2023-04-03:/reactjs/server-components-demo</id>
    <link href="https://github.com/reactjs/server-components-demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Demo app of React Server Components.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Server Components Demo&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#what-is-this&#34;&gt;What is this?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#when-will-i-be-able-to-use-this&#34;&gt;When will I be able to use this?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#should-i-use-this-demo-for-benchmarks&#34;&gt;Should I use this demo for benchmarks?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#setup&#34;&gt;Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#db-setup&#34;&gt;DB Setup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#step-1-create-the-database&#34;&gt;Step 1. Create the Database&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#step-2-connect-to-the-database&#34;&gt;Step 2. Connect to the Database&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#step-3-run-the-seed-script&#34;&gt;Step 3. Run the seed script&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#notes-about-this-app&#34;&gt;Notes about this app&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#interesting-things-to-try&#34;&gt;Interesting things to try&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#built-by-a-z&#34;&gt;Built by (A-Z)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#code-of-conduct&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/reactjs/server-components-demo/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is this?&lt;/h2&gt; &#xA;&lt;p&gt;This is a demo app built with Server Components, an experimental React feature. &lt;strong&gt;We strongly recommend &lt;a href=&#34;https://reactjs.org/server-components&#34;&gt;watching our talk introducing Server Components&lt;/a&gt; before exploring this demo.&lt;/strong&gt; The talk includes a walkthrough of the demo code and highlights key points of how Server Components work and what features they provide.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Update (March 2023):&lt;/strong&gt; This demo has been updated to match the &lt;a href=&#34;https://react.dev/blog/2023/03/22/react-labs-what-we-have-been-working-on-march-2023#react-server-components&#34;&gt;latest conventions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;When will I be able to use this?&lt;/h2&gt; &#xA;&lt;p&gt;Server Components are an experimental feature and &lt;strong&gt;are not ready for adoption&lt;/strong&gt;. For now, we recommend experimenting with Server Components via this demo app. &lt;strong&gt;Use this in your projects at your own risk.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Should I use this demo for benchmarks?&lt;/h2&gt; &#xA;&lt;p&gt;If you use this demo to compare React Server Components to the framework of your choice, keep this in mind:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;This demo doesn‚Äôt have server rendering.&lt;/strong&gt; Server Components are a separate (but complementary) technology from Server Rendering (SSR). Server Components let you run some of your components purely on the server. SSR, on the other hand, lets you generate HTML before any JavaScript loads. This demo &lt;em&gt;only&lt;/em&gt; shows Server Components, and not SSR. Because it doesn&#39;t have SSR, the initial page load in this demo has a client-server network waterfall, and &lt;strong&gt;will be much slower than any SSR framework&lt;/strong&gt;. However, Server Components are meant to be integrated together with SSR, and they &lt;em&gt;will&lt;/em&gt; be in a future release.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;This demo doesn‚Äôt have an efficient bundling strategy.&lt;/strong&gt; When you use Server Components, a bundler plugin will automatically split the client JS bundle. However, the way it&#39;s currently being split is not necessarily optimal. We are investigating more efficient ways to split the bundles, but they are out of scope of this demo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;This demo doesn‚Äôt have partial refetching.&lt;/strong&gt; Currently, when you click on different ‚Äúnotes‚Äù, the entire app shell is refetched from the server. However, that‚Äôs not ideal: for example, it‚Äôs unnecessary to refetch the sidebar content if all that changed is the inner content of the right pane. Partial refetching is an &lt;a href=&#34;https://github.com/reactjs/rfcs/raw/main/text/0188-server-components.md#open-areas-of-research&#34;&gt;open area of research&lt;/a&gt; and we don‚Äôt yet know how exactly it will work.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This demo is provided ‚Äúas is‚Äù to show the parts that are ready for experimentation. It is not intended to reflect the performance characteristics of a real app driven by a future stable release of Server Components.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;You will need to have &lt;a href=&#34;https://nodejs.org/en&#34;&gt;Node 18 LTS&lt;/a&gt; in order to run this demo. (If you use &lt;code&gt;nvm&lt;/code&gt;, run &lt;code&gt;nvm i&lt;/code&gt; before running &lt;code&gt;npm install&lt;/code&gt; to install the recommended Node version.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install --legacy-peer-deps&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Or &lt;code&gt;npm run start:prod&lt;/code&gt; for a production build.)&lt;/p&gt; &#xA;&lt;p&gt;Then open &lt;a href=&#34;http://localhost:4000&#34;&gt;http://localhost:4000&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The app won&#39;t work until you set up the database, as described below.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Setup with Docker (optional)&lt;/summary&gt; &#xA; &lt;p&gt;You can also start dev build of the app by using docker-compose.&lt;/p&gt; &#xA; &lt;p&gt;‚ö†Ô∏è This is &lt;b&gt;completely optional,&lt;/b&gt; and is only for people who &lt;i&gt;prefer&lt;/i&gt; Docker to global installs!&lt;/p&gt; &#xA; &lt;p&gt;If you prefer Docker, make sure you have docker and docker-compose installed then run:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;docker-compose up&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Running seed script&lt;/h4&gt; &#xA; &lt;p&gt;1. Run containers in the detached mode&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;2. Run seed script&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;docker-compose exec notes-app npm run seed&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If you&#39;d rather not use Docker, skip this section and continue below.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;DB Setup&lt;/h2&gt; &#xA;&lt;p&gt;This demo uses Postgres. First, follow its &lt;a href=&#34;https://wiki.postgresql.org/wiki/Detailed_installation_guides&#34;&gt;installation link&lt;/a&gt; for your platform.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can check out this &lt;a href=&#34;https://github.com/pomber/server-components-demo/&#34;&gt;fork&lt;/a&gt; which will let you run the demo app without needing a database. However, you won&#39;t be able to execute SQL queries (but fetch should still work). There is also &lt;a href=&#34;https://github.com/prisma/server-components-demo&#34;&gt;another fork&lt;/a&gt; that uses Prisma with SQLite, so it doesn&#39;t require additional setup.&lt;/p&gt; &#xA;&lt;p&gt;The below example will set up the database for this app, assuming that you have a UNIX-like platform:&lt;/p&gt; &#xA;&lt;h3&gt;Step 1. Create the Database&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;psql postgres&#xA;&#xA;CREATE DATABASE notesapi;&#xA;CREATE ROLE notesadmin WITH LOGIN PASSWORD &#39;password&#39;;&#xA;ALTER ROLE notesadmin WITH SUPERUSER;&#xA;ALTER DATABASE notesapi OWNER TO notesadmin;&#xA;\q&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 2. Connect to the Database&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;psql -d postgres -U notesadmin;&#xA;&#xA;\c notesapi&#xA;&#xA;DROP TABLE IF EXISTS notes;&#xA;CREATE TABLE notes (&#xA;  id SERIAL PRIMARY KEY,&#xA;  created_at TIMESTAMP NOT NULL,&#xA;  updated_at TIMESTAMP NOT NULL,&#xA;  title TEXT,&#xA;  body TEXT&#xA;);&#xA;&#xA;\q&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 3. Run the seed script&lt;/h3&gt; &#xA;&lt;p&gt;Finally, run &lt;code&gt;npm run seed&lt;/code&gt; to populate some data.&lt;/p&gt; &#xA;&lt;p&gt;And you&#39;re done!&lt;/p&gt; &#xA;&lt;h2&gt;Notes about this app&lt;/h2&gt; &#xA;&lt;p&gt;The demo is a note-taking app called &lt;strong&gt;React Notes&lt;/strong&gt;. It consists of a few major parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It uses a Webpack plugin (not defined in this repo) that allows us to only include client components in build artifacts&lt;/li&gt; &#xA; &lt;li&gt;An Express server that: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Serves API endpoints used in the app&lt;/li&gt; &#xA;   &lt;li&gt;Renders Server Components into a special format that we can read on the client&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A React app containing Server and Client components used to build React Notes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This demo is built on top of our Webpack plugin, but this is not how we envision using Server Components when they are stable. They are intended to be used in a framework that supports server rendering ‚Äî for example, in Next.js. This is an early demo -- the real integration will be developed in the coming months. Learn more in the &lt;a href=&#34;https://reactjs.org/server-components&#34;&gt;announcement post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Interesting things to try&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Expand note(s) by hovering over the note in the sidebar, and clicking the expand/collapse toggle. Next, create or delete a note. What happens to the expanded notes?&lt;/li&gt; &#xA; &lt;li&gt;Change a note&#39;s title while editing, and notice how editing an existing item animates in the sidebar. What happens if you edit a note in the middle of the list?&lt;/li&gt; &#xA; &lt;li&gt;Search for any title. With the search text still in the search input, create a new note with a title matching the search text. What happens?&lt;/li&gt; &#xA; &lt;li&gt;Search while on Slow 3G, observe the inline loading indicator.&lt;/li&gt; &#xA; &lt;li&gt;Switch between two notes back and forth. Observe we don&#39;t send new responses next time we switch them again.&lt;/li&gt; &#xA; &lt;li&gt;Uncomment the &lt;code&gt;await fetch(&#39;http://localhost:4000/sleep/....&#39;)&lt;/code&gt; call in &lt;code&gt;Note.js&lt;/code&gt; or &lt;code&gt;NoteList.js&lt;/code&gt; to introduce an artificial delay and trigger Suspense. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you only uncomment it in &lt;code&gt;Note.js&lt;/code&gt;, you&#39;ll see the fallback every time you open a note.&lt;/li&gt; &#xA;   &lt;li&gt;If you only uncomment it in &lt;code&gt;NoteList.js&lt;/code&gt;, you&#39;ll see the list fallback on first page load.&lt;/li&gt; &#xA;   &lt;li&gt;If you uncomment it in both, it won&#39;t be very interesting because we have nothing new to show until they both respond.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add a new Server Component and place it above the search bar in &lt;code&gt;App.js&lt;/code&gt;. Import &lt;code&gt;db&lt;/code&gt; from &lt;code&gt;db.js&lt;/code&gt; and use &lt;code&gt;await db.query()&lt;/code&gt; from it to get the number of notes. Oberserve what happens when you add or delete a note.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can watch a &lt;a href=&#34;https://youtu.be/La4agIEgoNg?t=600&#34;&gt;recorded walkthrough of all these demo points here&lt;/a&gt; with timestamps. (&lt;strong&gt;Note:&lt;/strong&gt; this recording is slightly outdated because the repository has been updated to match the &lt;a href=&#34;https://react.dev/blog/2023/03/22/react-labs-what-we-have-been-working-on-march-2023#react-server-components&#34;&gt;latest conventions&lt;/a&gt;.)&lt;/p&gt; &#xA;&lt;h2&gt;Built by (A-Z)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/acdlite&#34;&gt;Andrew Clark&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/dan_abramov&#34;&gt;Dan Abramov&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/en_JS&#34;&gt;Joe Savona&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/sugarpirate_&#34;&gt;Lauren Tan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/sebmarkbage&#34;&gt;Sebastian Markb√•ge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.tatestrickland.com/&#34;&gt;Tate Strickland&lt;/a&gt; (Design)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://engineering.fb.com/codeofconduct/&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the &lt;a href=&#34;https://engineering.fb.com/codeofconduct/&#34;&gt;full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This demo is MIT licensed.&lt;/p&gt;</summary>
  </entry>
</feed>