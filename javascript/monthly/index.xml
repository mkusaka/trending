<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-04T02:31:22Z</updated>
  <subtitle>Monthly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NARKOZ/hacker-scripts</title>
    <updated>2022-06-04T02:31:22Z</updated>
    <id>tag:github.com,2022-06-04:/NARKOZ/hacker-scripts</id>
    <link href="https://github.com/NARKOZ/hacker-scripts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Based on a true story&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/NARKOZ/hacker-scripts/master/README.zh-CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Hacker Scripts&lt;/h1&gt; &#xA;&lt;p&gt;Based on a &lt;em&gt;&lt;a href=&#34;https://www.jitbit.com/alexblog/249-now-thats-what-i-call-a-hacker/&#34;&gt;true story&lt;/a&gt;&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;xxx: OK, so, our build engineer has left for another company. The dude was literally living inside the terminal. You know, that type of a guy who loves Vim, creates diagrams in Dot and writes wiki-posts in Markdown... If something - anything - requires more than 90 seconds of his time, he writes a script to automate that.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;xxx: So we&#39;re sitting here, looking through his, uhm, &#34;legacy&#34;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;xxx: You&#39;re gonna love this&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;xxx: &lt;a href=&#34;https://github.com/NARKOZ/hacker-scripts/raw/master/smack-my-bitch-up.sh&#34;&gt;&lt;code&gt;smack-my-bitch-up.sh&lt;/code&gt;&lt;/a&gt; - sends a text message &#34;late at work&#34; to his wife (apparently). Automatically picks reasons from an array of strings, randomly. Runs inside a cron-job. The job fires if there are active SSH-sessions on the server after 9pm with his login.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;xxx: &lt;a href=&#34;https://github.com/NARKOZ/hacker-scripts/raw/master/kumar-asshole.sh&#34;&gt;&lt;code&gt;kumar-asshole.sh&lt;/code&gt;&lt;/a&gt; - scans the inbox for emails from &#34;Kumar&#34; (a DBA at our clients). Looks for keywords like &#34;help&#34;, &#34;trouble&#34;, &#34;sorry&#34; etc. If keywords are found - the script SSHes into the clients server and rolls back the staging database to the latest backup. Then sends a reply &#34;no worries mate, be careful next time&#34;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;xxx: &lt;a href=&#34;https://github.com/NARKOZ/hacker-scripts/raw/master/hangover.sh&#34;&gt;&lt;code&gt;hangover.sh&lt;/code&gt;&lt;/a&gt; - another cron-job that is set to specific dates. Sends automated emails like &#34;not feeling well/gonna work from home&#34; etc. Adds a random &#34;reason&#34; from another predefined array of strings. Fires if there are no interactive sessions on the server at 8:45am.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;xxx: (and the oscar goes to) &lt;a href=&#34;https://github.com/NARKOZ/hacker-scripts/raw/master/fucking-coffee.sh&#34;&gt;&lt;code&gt;fucking-coffee.sh&lt;/code&gt;&lt;/a&gt; - this one waits exactly 17 seconds (!), then opens a telnet session to our coffee-machine (we had no frikin idea the coffee machine is on the network, runs linux and has a TCP socket up and running) and sends something like &lt;code&gt;sys brew&lt;/code&gt;. Turns out this thing starts brewing a mid-sized half-caf latte and waits another 24 (!) seconds before pouring it into a cup. The timing is exactly how long it takes to walk to the machine from the dudes desk.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;xxx: holy sh*t I&#39;m keeping those&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Original: &lt;a href=&#34;http://bash.im/quote/436725&#34;&gt;http://bash.im/quote/436725&lt;/a&gt; (in Russian)&lt;br&gt; Pull requests with other implementations (Python, Perl, Shell, etc) are welcome.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You need these environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# used in `smack-my-bitch-up` and `hangover` scripts&#xA;TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#xA;TWILIO_AUTH_TOKEN=yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy&#xA;&#xA;# used in `kumar_asshole` script&#xA;GMAIL_USERNAME=admin@example.org&#xA;GMAIL_PASSWORD=password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Ruby scripts you need to install gems: &lt;code&gt;gem install dotenv twilio-ruby gmail&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cron jobs&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Runs `smack-my-bitch-up.sh` monday to friday at 9:20 pm.&#xA;20 21 * * 1-5 /path/to/scripts/smack-my-bitch-up.sh &amp;gt;&amp;gt; /path/to/smack-my-bitch-up.log 2&amp;gt;&amp;amp;1&#xA;&#xA;# Runs `hangover.sh` monday to friday at 8:45 am.&#xA;45 8 * * 1-5 /path/to/scripts/hangover.sh &amp;gt;&amp;gt; /path/to/hangover.log 2&amp;gt;&amp;amp;1&#xA;&#xA;# Runs `kumar-asshole.sh` every 10 minutes.&#xA;*/10 * * * * /path/to/scripts/kumar-asshole.sh&#xA;&#xA;# Runs `fucking-coffee.sh` hourly from 9am to 6pm on weekdays.&#xA;0 9-18 * * 1-5 /path/to/scripts/fucking-coffee.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Code is released under WTFPL.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>terra-money/classic-core</title>
    <updated>2022-06-04T02:31:22Z</updated>
    <id>tag:github.com,2022-06-04:/terra-money/classic-core</id>
    <link href="https://github.com/terra-money/classic-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GO implementation of the Terra Protocol&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/core_logo.svg?sanitize=true&#34; width=&#34;500&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Full-node software implementing the Terra protocol&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://codecov.io/gh/terra-money/core&#34;&gt; &lt;img src=&#34;https://codecov.io/gh/terra-money/core/branch/main/graph/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/terra-money/core&#34;&gt; &lt;img src=&#34;https://goreportcard.com/badge/github.com/terra-money/core&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://docs.terra.money/&#34;&gt;&lt;strong&gt;Explore the Docs »&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://docs.terra.money/docs/develop/module-specifications/README.html&#34;&gt;Terra Core reference&lt;/a&gt; · &lt;a href=&#34;https://pkg.go.dev/github.com/terra-money/core?tab=subdirectories&#34;&gt;Go API&lt;/a&gt; · &lt;a href=&#34;https://lcd.terra.dev/swagger/#/&#34;&gt;Rest API&lt;/a&gt; · &lt;a href=&#34;https://github.com/terra-money/terra.py&#34;&gt;Python SDK&lt;/a&gt; · &lt;a href=&#34;https://terra-money.github.io/terra.js/&#34;&gt;Terra.js&lt;/a&gt; · &lt;a href=&#34;https://finder.terra.money/&#34;&gt;Finder&lt;/a&gt; · &lt;a href=&#34;https://station.terra.money/&#34;&gt;Station&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Table of Contents &#xA; &lt;!-- omit in toc --&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#what-is-terra&#34;&gt;What is Terra?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#binaries&#34;&gt;Binaries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#from-source&#34;&gt;From Source&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#terrad&#34;&gt;&lt;code&gt;terrad&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#node-setup&#34;&gt;Node Setup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#join-the-mainnet&#34;&gt;Join the mainnet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#join-a-testnet&#34;&gt;Join a testnet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#run-a-local-testnet&#34;&gt;Run a local testnet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#run-a-single-node-testnet&#34;&gt;Run a single node testnet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#set-up-a-production-environment&#34;&gt;Set up a production environment&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#increase-maximum-open-files&#34;&gt;Increase maximum open files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#create-a-dedicated-user&#34;&gt;Create a dedicated user&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#port-configuration&#34;&gt;Port configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#run-the-server-as-a-daemon&#34;&gt;Run the server as a daemon&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#register-terrad-as-a-service&#34;&gt;Register terrad as a service&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#start-stop-or-restart-service&#34;&gt;Start, stop, or restart service&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#access-logs&#34;&gt;Access logs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#resources&#34;&gt;Resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is Terra?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://terra.money&#34;&gt;Terra&lt;/a&gt;&lt;/strong&gt; is a public, open-source blockchain protocol that provides fundamental infrastructure for a decentralized economy and enables open participation in the creation of new financial primitives to power the innovation of money.&lt;/p&gt; &#xA;&lt;p&gt;The Terra blockchain is secured by distributed consensus on staked asset Luna and natively supports the issuance of &lt;a href=&#34;https://docs.terra.money/docs/learn/glossary.html#algorithmic-stablecoin&#34;&gt;price-tracking stablecoins&lt;/a&gt; that are algorithmically pegged to major world currencies, such as UST, KRT, and SDT. Smart contracts on Terra run on WebAssembly and take advantage of core modules, such as on-chain swaps, price oracle, and staking rewards, to power modern &lt;a href=&#34;https://docs.terra.money/docs/learn/glossary.html#defi&#34;&gt;DeFi&lt;/a&gt; apps. Through dynamic fiscal policy managed by community governance, Terra is an evolving, democratized economy directed by its users.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Terra Core&lt;/strong&gt; is the reference implementation of the Terra protocol, written in Golang. Terra Core is built atop &lt;a href=&#34;https://github.com/cosmos/cosmos-sdk&#34;&gt;Cosmos SDK&lt;/a&gt; and uses &lt;a href=&#34;https://github.com/tendermint/tendermint&#34;&gt;Tendermint&lt;/a&gt; BFT consensus. If you intend to work on Terra Core source, it is recommended that you familiarize yourself with the concepts in those projects.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Binaries&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to get started is by downloading a pre-built binary for your operating system. You can find the latest binaries on the &lt;a href=&#34;https://github.com/terra-money/core/releases&#34;&gt;releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h3&gt;From Source&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1. Install Golang&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Go v1.17+ or higher is required for Terra Core.&lt;/p&gt; &#xA;&lt;p&gt;If you haven&#39;t already, install Golang by following the &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;official docs&lt;/a&gt;. Make sure that your &lt;code&gt;GOPATH&lt;/code&gt; and &lt;code&gt;GOBIN&lt;/code&gt; environment variables are properly set up.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2: Get Terra Core source code&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;git&lt;/code&gt; to retrieve Terra Core from the &lt;a href=&#34;https://github.com/terra-money/core/&#34;&gt;official repo&lt;/a&gt; and checkout the &lt;code&gt;main&lt;/code&gt; branch. This branch contains the latest stable release, which will install the &lt;code&gt;terrad&lt;/code&gt; binary.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/terra-money/core/&#xA;cd core&#xA;git checkout main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 3: Build Terra core&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the following command to install the executable &lt;code&gt;terrad&lt;/code&gt; to your &lt;code&gt;GOPATH&lt;/code&gt; and build Terra Core. &lt;code&gt;terrad&lt;/code&gt; is the node daemon and CLI for interacting with a Terra node.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# COSMOS_BUILD_OPTIONS=rocksdb make install&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 4: Verify your installation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Verify that you&#39;ve installed terrad successfully by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;terrad version --long&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If terrad is installed correctly, the following information is returned:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;name: terra&#xA;server_name: terrad&#xA;version: 0.5.0-rc0-9-g640fd0ed&#xA;commit: 640fd0ed921d029f4d1c3d88435bd5dbd67d14cd&#xA;build_tags: netgo,ledger&#xA;go: go version go1.17.2 darwin/amd64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;terrad&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;terracli&lt;/code&gt; has been deprecated and all of its functionalities have been merged into &lt;code&gt;terrad&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;terrad&lt;/code&gt; is the all-in-one command for operating and interacting with a running Terra node. For comprehensive coverage on each of the available functions, see &lt;a href=&#34;https://docs.terra.money/docs/develop/how-to/terrad/README.html&#34;&gt;the terrad reference information&lt;/a&gt;. To view various subcommands and their expected arguments, use the &lt;code&gt;$ terrad --help&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;        &#xA; &lt;div align=&#34;left&#34;&gt;&#xA;        &#xA;  &lt;b&gt;$ terrad --help&lt;/b&gt;&#xA;&#xA;        Stargate Terra App&#xA;&#xA;        Usage:&#xA;          terrad [command]&#xA;&#xA;        Available Commands:&#xA;          add-genesis-account Add a genesis account to genesis.json&#xA;          collect-gentxs      Collect genesis txs and output a genesis.json file&#xA;          debug               Tool for helping with debugging your application&#xA;          export              Export state to JSON&#xA;          gentx               Generate a genesis tx carrying a self delegation&#xA;          help                Help about any command&#xA;          init                Initialize private validator, p2p, genesis, and application configuration files&#xA;          keys                Manage your application&#39;s keys&#xA;          migrate             Migrate genesis to a specified target version&#xA;          query               Querying subcommands&#xA;          rosetta             spin up a rosetta server&#xA;          start               Run the full node&#xA;          status              Query remote node for status&#xA;          tendermint          Tendermint subcommands&#xA;          testnet             Initialize files for a terrad testnet&#xA;          tx                  Transactions subcommands&#xA;          unsafe-reset-all    Resets the blockchain database, removes address book files, and resets data/priv_validator_state.json to the genesis state&#xA;          validate-genesis    validates the genesis file at the default location or at the location passed as an arg&#xA;          version             Print the application binary version information&#xA;&#xA;        Flags:&#xA;          -h, --help                help for terrad&#xA;              --home string         directory for config and data (default &#34;/Users/$HOME/.terra&#34;)&#xA;              --log_format string   The logging format (json|plain) (default &#34;plain&#34;)&#xA;              --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default &#34;info&#34;)&#xA;              --trace               print out full stack trace on errors&#xA;&#xA;        &#xA;  &lt;b&gt;Use &#34;terrad [command] --help&#34; for more information about a command.&lt;/b&gt;&#xA;        &#xA; &lt;/div&gt;&#xA;&lt;/pre&gt; &#xA;&lt;h2&gt;Node Setup&lt;/h2&gt; &#xA;&lt;p&gt;Once you have &lt;code&gt;terrad&lt;/code&gt; installed, you will need to set up your node to be part of the network.&lt;/p&gt; &#xA;&lt;h3&gt;Join the mainnet&lt;/h3&gt; &#xA;&lt;p&gt;The following requirements are recommended for running a &lt;code&gt;columbus-5&lt;/code&gt; mainnet node:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;4 or more&lt;/strong&gt; CPU cores&lt;/li&gt; &#xA; &lt;li&gt;At least &lt;strong&gt;2TB&lt;/strong&gt; of disk storage&lt;/li&gt; &#xA; &lt;li&gt;At least &lt;strong&gt;100mbps&lt;/strong&gt; network bandwidth&lt;/li&gt; &#xA; &lt;li&gt;An Linux distribution&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For configuration and migration instructions for setting up a Columbus-5 mainnet node, visit &lt;a href=&#34;https://github.com/terra-money/mainnet&#34;&gt;The mainnet repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Terra Node Quick Start&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;terrad init nodename&#xA;wget -O ~/.terra/config/genesis.json https://cloudflare-ipfs.com/ipfs/QmZAMcdu85Qr8saFuNpL9VaxVqqLGWNAs72RVFhchL9jWs&#xA;curl https://network.terra.dev/addrbook.json &amp;gt; ~/.terrad/config/addrbook.json&#xA;terrad start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Join a testnet&lt;/h3&gt; &#xA;&lt;p&gt;Several testnets might exist simultaneously. Ensure that your version of &lt;code&gt;terrad&lt;/code&gt; is compatible with the network you want to join.&lt;/p&gt; &#xA;&lt;p&gt;To set up a node on the latest testnet, visit &lt;a href=&#34;https://github.com/terra-money/testnet&#34;&gt;the testnet repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Run a local testnet&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to set up a local testing environment is to run &lt;a href=&#34;https://github.com/terra-money/LocalTerra&#34;&gt;LocalTerra&lt;/a&gt;, which automatically orchestrates a complete testing environment suited for development with zero configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Run a single node testnet&lt;/h3&gt; &#xA;&lt;p&gt;You can also run a local testnet using a single node. On a local testnet, you will be the sole validator signing blocks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1. Create network and account&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;First, initialize your genesis file to bootstrap your network. Create a name for your local testnet and provide a moniker to refer to your node:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;terrad init --chain-id=&amp;lt;testnet_name&amp;gt; &amp;lt;node_moniker&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, create a Terra account by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;terrad keys add &amp;lt;account_name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2. Add account to genesis&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next, add your account to genesis and set an initial balance to start. Run the following commands to add your account and set the initial balance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;terrad add-genesis-account $(terrad keys show &amp;lt;account_name&amp;gt; -a) 100000000uluna,1000usd&#xA;terrad gentx &amp;lt;account_name&amp;gt; 10000000uluna --chain-id=&amp;lt;testnet_name&amp;gt;&#xA;terrad collect-gentxs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 3. Run Terra daemon&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now you can start your private Terra network:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;terrad start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your &lt;code&gt;terrad&lt;/code&gt; node will be running a node on &lt;code&gt;tcp://localhost:26656&lt;/code&gt;, listening for incoming transactions and signing blocks.&lt;/p&gt; &#xA;&lt;p&gt;Congratulations, you&#39;ve successfully set up your local Terra network!&lt;/p&gt; &#xA;&lt;h2&gt;Set up a production environment&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This guide only covers general settings for a production-level full node. You can find further details on considerations for operating a validator node by visiting the &lt;a href=&#34;https://docs.terra.money/docs/full-node/manage-a-terra-validator/README.html&#34;&gt;Terra validator guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This guide has been tested against Linux distributions only. To ensure you successfully set up your production environment, consider setting it up on an Linux system.&lt;/p&gt; &#xA;&lt;h3&gt;Increase maximum open files&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;terrad&lt;/code&gt; can&#39;t open more than 1024 files (the default maximum) concurrently.&lt;/p&gt; &#xA;&lt;p&gt;You can increase this limit by modifying &lt;code&gt;/etc/security/limits.conf&lt;/code&gt; and raising the &lt;code&gt;nofile&lt;/code&gt; capability.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;*                soft    nofile          65535&#xA;*                hard    nofile          65535&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create a dedicated user&lt;/h3&gt; &#xA;&lt;p&gt;It is recommended that you run &lt;code&gt;terrad&lt;/code&gt; as a normal user. Super-user accounts are only recommended during setup to create and modify files.&lt;/p&gt; &#xA;&lt;h3&gt;Port configuration&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;terrad&lt;/code&gt; uses several TCP ports for different purposes.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;26656&lt;/code&gt;: The default port for the P2P protocol. Use this port to communicate with other nodes. While this port must be open to join a network, it does not have to be open to the public. Validator nodes should configure &lt;code&gt;persistent_peers&lt;/code&gt; and close this port to the public.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;26657&lt;/code&gt;: The default port for the RPC protocol. This port is used for querying / sending transactions and must be open to serve queries from &lt;code&gt;terrad&lt;/code&gt;. &lt;strong&gt;DO NOT&lt;/strong&gt; open this port to the public unless you are planning to run a public node.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;1317&lt;/code&gt;: The default port for &lt;a href=&#34;https://docs.terra.money/docs/develop/how-to/start-lcd.html&#34;&gt;Lite Client Daemon&lt;/a&gt; (LCD), which can be enabled in &lt;code&gt;~/.terra/config/app.toml&lt;/code&gt;. The LCD provides an HTTP RESTful API layer to allow applications and services to interact with your &lt;code&gt;terrad&lt;/code&gt; instance through RPC. Check the &lt;a href=&#34;https://lcd.terra.dev/swagger/#/&#34;&gt;Terra REST API&lt;/a&gt; for usage examples. Don&#39;t open this port unless you need to use the LCD.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;26660&lt;/code&gt;: The default port for interacting with the &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt; database. You can use Promethues to monitor an environment. This port is closed by default.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run the server as a daemon&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Keep &lt;code&gt;terrad&lt;/code&gt; running at all times. The simplest solution is to register &lt;code&gt;terrad&lt;/code&gt; as a &lt;code&gt;systemd&lt;/code&gt; service so that it automatically starts after system reboots and other events.&lt;/p&gt; &#xA;&lt;h3&gt;Register terrad as a service&lt;/h3&gt; &#xA;&lt;p&gt;First, create a service definition file in &lt;code&gt;/etc/systemd/system&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sample file: &lt;code&gt;/etc/systemd/system/terrad.service&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Unit]&#xA;Description=Terra Daemon&#xA;After=network.target&#xA;&#xA;[Service]&#xA;Type=simple&#xA;User=terra&#xA;ExecStart=/data/terra/go/bin/terrad start&#xA;Restart=on-abort&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&#xA;&#xA;[Service]&#xA;LimitNOFILE=65535&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Modify the &lt;code&gt;Service&lt;/code&gt; section from the given sample above to suit your settings. Note that even if you raised the number of open files for a process, you still need to include &lt;code&gt;LimitNOFILE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After creating a service definition file, you should execute &lt;code&gt;systemctl daemon-reload&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Start, stop, or restart service&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;systemctl&lt;/code&gt; to control (start, stop, restart)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Start&#xA;systemctl start terrad&#xA;# Stop&#xA;systemctl stop terrad&#xA;# Restart&#xA;systemctl restart terrad&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Access logs&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Entire log&#xA;journalctl -t terrad&#xA;# Entire log reversed&#xA;journalctl -t terrad -r&#xA;# Latest and continuous&#xA;journalctl -t terrad -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Developer Tools&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Terra developer documentation(&lt;a href=&#34;https://docs.terra.money&#34;&gt;https://docs.terra.money&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://terrawiki.org&#34;&gt;TerraWiki.org&lt;/a&gt; - The Terra community wiki.&lt;/li&gt; &#xA;   &lt;li&gt;SDKs &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.github.com/terra-money/terra.js&#34;&gt;Terra.js&lt;/a&gt; for JavaScript&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.github.com/terra-money/terra-sdk-python&#34;&gt;terra-sdk-python&lt;/a&gt; for Python&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://faucet.terra.money&#34;&gt;Faucet&lt;/a&gt; can be used to get tokens for testnets&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.github.com/terra-money/LocalTerra&#34;&gt;LocalTerra&lt;/a&gt; can be used to set up a private local testnet with configurable world state&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Developer Forums&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://discord.com/channels/464241079042965516/591812948867940362&#34;&gt;Terra Developer Discord&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://t.me/+gCxCPohmVBkyNDRl&#34;&gt;Terra DEveloper Telegram room&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Block Explorers&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://finder.terra.money&#34;&gt;Terra Finder&lt;/a&gt; - Terra&#39;s basic block explorer.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://terrascope.info/&#34;&gt;Terrascope&lt;/a&gt; - A community-run block explorer with extra features.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://terra.stake.id&#34;&gt;Stake ID&lt;/a&gt; - A block explorer made by Staking Fund&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://hubble.figment.network/terra/chains/columbus-5&#34;&gt;Hubble&lt;/a&gt; - by Figment&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Wallets&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://station.terra.money&#34;&gt;Terra Station&lt;/a&gt; - The official Terra wallet.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Terra Station Mobile&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/terra-station/id1548434735&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=money.terra.station&amp;amp;hl=en_US&amp;amp;gl=US&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://falconwallet.app/&#34;&gt;Falcon Wallet&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/leap-wallet/aijcbedoijmgnlmjeegjaglmepbmpkpi/?utm_source=Leap&amp;amp;utm_medium=Bio&amp;amp;utm_campaign=Leap&#34;&gt;Leap Wallet&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/xdefi-wallet/hmeobnfnfcmdkdcmlblgagmfpfboieaf&#34;&gt;XDeFi&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://liquality.io/&#34;&gt;Liquality&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Research&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://agora.terra.money&#34;&gt;Agora&lt;/a&gt; - Research forum&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://assets.website-files.com/611153e7af981472d8da199c/618b02d13e938ae1f8ad1e45_Terra_White_paper.pdf&#34;&gt;White Paper&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://terra.money&#34;&gt;Offical Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/e29HWwC2Mz&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/terra_announcements&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/terra_money&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://goo.gl/3G4T1z&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in contributing to Terra Core source, please review our &lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is licensed under the Apache 2.0 license. Read more about it &lt;a href=&#34;https://raw.githubusercontent.com/terra-money/classic-core/main/LICENSE&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;© 2022 Terraform Labs, PTE LTD&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://terra.money/&#34;&gt;&lt;img src=&#34;https://assets.website-files.com/611153e7af981472d8da199c/61794f2b6b1c7a1cb9444489_symbol-terra-blue.svg?sanitize=true&#34; align=&#34;center&#34; width=&#34;200/&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;sub&gt;&lt;em&gt;Powering the innovation of money.&lt;/em&gt;&lt;/sub&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>mrdoob/three.js</title>
    <updated>2022-06-04T02:31:22Z</updated>
    <id>tag:github.com,2022-06-04:/mrdoob/three.js</id>
    <link href="https://github.com/mrdoob/three.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JavaScript 3D Library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/three&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/three&#34; alt=&#34;NPM Package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bundlephobia.com/result?p=three&#34;&gt;&lt;img src=&#34;https://badgen.net/bundlephobia/minzip/three&#34; alt=&#34;Build Size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmtrends.com/three&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dw/three&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://deepscan.io/dashboard#view=project&amp;amp;tid=16600&amp;amp;pid=19901&amp;amp;bid=525701&#34;&gt;&lt;img src=&#34;https://deepscan.io/api/teams/16600/projects/19901/branches/525701/badge/grade.svg?sanitize=true&#34; alt=&#34;DeepScan&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/56GBJwAnUS&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/685241246557667386&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; &#xA;&lt;p&gt;The aim of the project is to create an easy to use, lightweight, cross-browser, general purpose 3D library. The current builds only include a WebGL renderer but WebGPU (experimental), SVG and CSS3D renderers are also available in the examples.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://threejs.org/examples/&#34;&gt;Examples&lt;/a&gt; — &lt;a href=&#34;https://threejs.org/docs/&#34;&gt;Documentation&lt;/a&gt; — &lt;a href=&#34;https://github.com/mrdoob/three.js/wiki&#34;&gt;Wiki&lt;/a&gt; — &lt;a href=&#34;https://github.com/mrdoob/three.js/wiki/Migration-Guide&#34;&gt;Migrating&lt;/a&gt; — &lt;a href=&#34;https://stackoverflow.com/questions/tagged/three.js&#34;&gt;Questions&lt;/a&gt; — &lt;a href=&#34;https://discourse.threejs.org/&#34;&gt;Forum&lt;/a&gt; — &lt;a href=&#34;https://join.slack.com/t/threejs/shared_invite/zt-rnuegz5e-FQpc6YboDVW~5idlp7GfDw&#34;&gt;Slack&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import * as THREE from &#39;three&#39;;&#xA;&#xA;// init&#xA;&#xA;const camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );&#xA;camera.position.z = 1;&#xA;&#xA;const scene = new THREE.Scene();&#xA;&#xA;const geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );&#xA;const material = new THREE.MeshNormalMaterial();&#xA;&#xA;const mesh = new THREE.Mesh( geometry, material );&#xA;scene.add( mesh );&#xA;&#xA;const renderer = new THREE.WebGLRenderer( { antialias: true } );&#xA;renderer.setSize( window.innerWidth, window.innerHeight );&#xA;renderer.setAnimationLoop( animation );&#xA;document.body.appendChild( renderer.domElement );&#xA;&#xA;// animation&#xA;&#xA;function animation( time ) {&#xA;&#xA;&#x9;mesh.rotation.x = time / 2000;&#xA;&#x9;mesh.rotation.y = time / 1000;&#xA;&#xA;&#x9;renderer.render( scene, camera );&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If everything went well, you should see &lt;a href=&#34;https://jsfiddle.net/7u84j6kp/&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Cloning this repository&lt;/h3&gt; &#xA;&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don&#39;t need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Change log&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mrdoob/three.js/releases&#34;&gt;Releases&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>