<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-01T01:55:44Z</updated>
  <subtitle>Monthly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WhiskeySockets/Baileys</title>
    <updated>2025-03-01T01:55:44Z</updated>
    <id>tag:github.com,2025-03-01:/WhiskeySockets/Baileys</id>
    <link href="https://github.com/WhiskeySockets/Baileys" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight full-featured typescript/javascript WhatsApp Web API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Baileys - Typescript/Javascript WhatsApp Web API&#xA; &lt;/div&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/whiskeysockets/baileys/total&#34; alt=&#34;GitHub Downloads (all assets, all releases)&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;amp;color=%23CB3837&#34; alt=&#34;NPM Downloads&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/code-size/whiskeysockets/baileys&#34; alt=&#34;GitHub code size in bytes&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/whiskeysockets/baileys&#34; alt=&#34;GitHub License&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/725839806084546610?label=discord&amp;amp;color=%235865F2&#34; alt=&#34;Discord&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/whiskeysockets/baileys&#34; alt=&#34;GitHub Repo stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/whiskeysockets/baileys&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Important Note&lt;/h3&gt; &#xA;&lt;p&gt;This library was originally a project for &lt;strong&gt;CS-2362 at Ashoka University&lt;/strong&gt; and is in no way affiliated with or endorsed by WhatsApp. Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.&lt;/p&gt; &#xA;&lt;h4&gt;Liability and License Notice&lt;/h4&gt; &#xA;&lt;p&gt;Baileys and its maintainers cannot be held liable for misuse of this application, as stated in the &lt;a href=&#34;https://github.com/WhiskeySockets/Baileys/raw/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;. The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Baileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a &lt;strong&gt;WebSocket&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Not running Selenium or Chromimum saves you like &lt;strong&gt;half a gig&lt;/strong&gt; of ram :/&lt;/li&gt; &#xA; &lt;li&gt;Baileys supports interacting with the multi-device &amp;amp; web versions of WhatsApp.&lt;/li&gt; &#xA; &lt;li&gt;Thank you to &lt;a href=&#34;https://github.com/pokearaujo/multidevice&#34;&gt;@pokearaujo&lt;/a&gt; for writing his observations on the workings of WhatsApp Multi-Device. Also, thank you to &lt;a href=&#34;https://github.com/sigalor/whatsapp-web-reveng&#34;&gt;@Sigalor&lt;/a&gt; for writing his observations on the workings of WhatsApp Web and thanks to &lt;a href=&#34;https://github.com/Rhymen/go-whatsapp/&#34;&gt;@Rhymen&lt;/a&gt; for the &lt;strong&gt;go&lt;/strong&gt; implementation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] The original repository had to be removed by the original author - we now continue development in this repository here. This is the only official repository and is maintained by the community. &lt;strong&gt;Join the Discord &lt;a href=&#34;https://discord.gg/WeJM5FP9GG&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Do check out &amp;amp; run &lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/Example/example.ts&#34;&gt;example.ts&lt;/a&gt; to see an example usage of the library. The script covers most common use cases. To run the example script, download or clone the repo and then type the following in a terminal:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;cd path/to/Baileys&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn example&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Use the stable version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn add baileys&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the edge version (no guarantee of stability, but latest fixes + features)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn add github:WhiskeySockets/Baileys&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then import the default function in your code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import makeWASocket from &#39;baileys&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/WeJM5FP9GG&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guide.whiskeysockets.io/&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Index&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#connecting-account&#34;&gt;Connecting Account&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#starting-socket-with-qr-code&#34;&gt;Connect with QR-CODE&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#starting-socket-with-pairing-code&#34;&gt;Connect with Pairing Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#receive-full-history&#34;&gt;Receive Full History&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#important-notes-about-socket-config&#34;&gt;Important Notes About Socket Config&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#caching-group-metadata-recommended&#34;&gt;Caching Group Metadata (Recommended)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#improve-retry-system--decrypt-poll-votes&#34;&gt;Improve Retry System &amp;amp; Decrypt Poll Votes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#receive-notifications-in-whatsapp-app&#34;&gt;Receive Notifications in Whatsapp App&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#saving--restoring-sessions&#34;&gt;Save Auth Info&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#handling-events&#34;&gt;Handling Events&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#example-to-start&#34;&gt;Example to Start&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#decrypt-poll-votes&#34;&gt;Decrypt Poll Votes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#summary-of-events-on-first-connection&#34;&gt;Summary of Events on First Connection&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#implementing-a-data-store&#34;&gt;Implementing a Data Store&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#whatsapp-ids-explain&#34;&gt;Whatsapp IDs Explain&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#utility-functions&#34;&gt;Utility Functions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#sending-messages&#34;&gt;Sending Messages&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#non-media-messages&#34;&gt;Non-Media Messages&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#text-message&#34;&gt;Text Message&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#quote-message-works-with-all-types&#34;&gt;Quote Message&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#mention-user-works-with-most-types&#34;&gt;Mention User&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#forward-messages&#34;&gt;Forward Messages&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#location-message&#34;&gt;Location Message&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#contact-message&#34;&gt;Contact Message&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#reaction-message&#34;&gt;Reaction Message&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#pin-message&#34;&gt;Pin Message&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#poll-message&#34;&gt;Poll Message&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#sending-messages-with-link-previews&#34;&gt;Sending with Link Preview&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#media-messages&#34;&gt;Media Messages&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#gif-message&#34;&gt;Gif Message&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#video-message&#34;&gt;Video Message&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#audio-message&#34;&gt;Audio Message&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#image-message&#34;&gt;Image Message&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#view-once-message&#34;&gt;ViewOnce Message&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#modify-messages&#34;&gt;Modify Messages&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#deleting-messages-for-everyone&#34;&gt;Delete Messages (for everyone)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#editing-messages&#34;&gt;Edit Messages&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#manipulating-media-messages&#34;&gt;Manipulating Media Messages&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#thumbnail-in-media-messages&#34;&gt;Thumbnail in Media Messages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#downloading-media-messages&#34;&gt;Downloading Media Messages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#re-upload-media-message-to-whatsapp&#34;&gt;Re-upload Media Message to Whatsapp&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#reject-call&#34;&gt;Reject Call&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#send-states-in-chat&#34;&gt;Send States in Chat&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#reading-messages&#34;&gt;Reading Messages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#update-presence&#34;&gt;Update Presence&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#modifying-chats&#34;&gt;Modifying Chats&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#archive-a-chat&#34;&gt;Archive a Chat&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#muteunmute-a-chat&#34;&gt;Mute/Unmute a Chat&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#mark-a-chat-readunread&#34;&gt;Mark a Chat Read/Unread&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#delete-a-message-for-me&#34;&gt;Delete a Message for Me&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#delete-a-chat&#34;&gt;Delete a Chat&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#starunstar-a-message&#34;&gt;Star/Unstar a Message&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#disappearing-messages&#34;&gt;Disappearing Messages&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#user-querys&#34;&gt;User Querys&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#check-if-id-exists-in-whatsapp&#34;&gt;Check If ID Exists in Whatsapp&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#query-chat-history-groups-too&#34;&gt;Query Chat History (groups too)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#fetch-status&#34;&gt;Fetch Status&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#fetch-profile-picture-groups-too&#34;&gt;Fetch Profile Picture (groups too)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#fetch-bussines-profile-such-as-description-or-category&#34;&gt;Fetch Bussines Profile (such as description or category)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#fetch-someones-presence-if-theyre-typing-or-online&#34;&gt;Fetch Someone&#39;s Presence (if they&#39;re typing or online)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#change-profile&#34;&gt;Change Profile&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#change-profile-status&#34;&gt;Change Profile Status&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#change-profile-name&#34;&gt;Change Profile Name&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#change-display-picture-groups-too&#34;&gt;Change Display Picture (groups too)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#remove-display-picture-groups-too&#34;&gt;Remove display picture (groups too)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#groups&#34;&gt;Groups&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#create-a-group&#34;&gt;Create a Group&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#addremove-or-demotepromote&#34;&gt;Add/Remove or Demote/Promote&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#change-subject-name&#34;&gt;Change Subject (name)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#change-description&#34;&gt;Change Description&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#change-settings&#34;&gt;Change Settings&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#leave-a-group&#34;&gt;Leave a Group&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#get-invite-code&#34;&gt;Get Invite Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#revoke-invite-code&#34;&gt;Revoke Invite Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#join-using-invitation-code&#34;&gt;Join Using Invitation Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#get-group-info-by-invite-code&#34;&gt;Get Group Info by Invite Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#query-metadata-participants-name-description&#34;&gt;Query Metadata (participants, name, description...)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#join-using-groupinvitemessage&#34;&gt;Join using groupInviteMessage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#get-request-join-list&#34;&gt;Get Request Join List&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#approvereject-request-join&#34;&gt;Approve/Reject Request Join&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#get-all-participating-groups-metadata&#34;&gt;Get All Participating Groups Metadata&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#toggle-ephemeral&#34;&gt;Toggle Ephemeral&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#change-add-mode&#34;&gt;Change Add Mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#privacy&#34;&gt;Privacy&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#blockunblock-user&#34;&gt;Block/Unblock User&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#get-privacy-settings&#34;&gt;Get Privacy Settings&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#get-blocklist&#34;&gt;Get BlockList&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#update-lastseen-privacy&#34;&gt;Update LastSeen Privacy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#update-online-privacy&#34;&gt;Update Online Privacy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#update-profile-picture-privacy&#34;&gt;Update Profile Picture Privacy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#update-status-privacy&#34;&gt;Update Status Privacy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#update-read-receipts-privacy&#34;&gt;Update Read Receipts Privacy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#update-groups-add-privacy&#34;&gt;Update Groups Add Privacy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#update-default-disappearing-mode&#34;&gt;Update Default Disappearing Mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#broadcast-lists--stories&#34;&gt;Broadcast Lists &amp;amp; Stories&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#send-broadcast--stories&#34;&gt;Send Broadcast &amp;amp; Stories&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#query-a-broadcast-lists-recipients--name&#34;&gt;Query a Broadcast List&#39;s Recipients &amp;amp; Name&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#writing-custom-functionality&#34;&gt;Writing Custom Functionality&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#enabling-debug-level-in-baileys-logs&#34;&gt;Enabling Debug Level in Baileys Logs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#how-whatsapp-communicate-with-us&#34;&gt;How Whatsapp Communicate With Us&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#register-a-callback-for-websocket-events&#34;&gt;Register a Callback for Websocket Events&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Connecting Account&lt;/h2&gt; &#xA;&lt;p&gt;WhatsApp provides a multi-device API that allows Baileys to be authenticated as a second WhatsApp client by scanning a &lt;strong&gt;QR code&lt;/strong&gt; or &lt;strong&gt;Pairing Code&lt;/strong&gt; with WhatsApp on your phone.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#example-to-start&#34;&gt;Here&lt;/a&gt; is a simple example of event handling&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] &lt;strong&gt;You can see all supported socket configs &lt;a href=&#34;https://baileys.whiskeysockets.io/types/SocketConfig.html&#34;&gt;here&lt;/a&gt; (Recommended)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Starting socket with &lt;strong&gt;QR-CODE&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] You can customize browser name if you connect with &lt;strong&gt;QR-CODE&lt;/strong&gt;, with &lt;code&gt;Browser&lt;/code&gt; constant, we have some browsers config, &lt;strong&gt;see &lt;a href=&#34;https://baileys.whiskeysockets.io/types/BrowsersMap.html&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import makeWASocket from &#39;baileys&#39;&#xA;&#xA;const sock = makeWASocket({&#xA;    // can provide additional config here&#xA;    browser: Browsers.ubuntu(&#39;My App&#39;),&#xA;    printQRInTerminal: true&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you&#39;ll be logged in!&lt;/p&gt; &#xA;&lt;h3&gt;Starting socket with &lt;strong&gt;Pairing Code&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Pairing Code isn&#39;t Mobile API, it&#39;s a method to connect Whatsapp Web without QR-CODE, you can connect only with one device, see &lt;a href=&#34;https://faq.whatsapp.com/1324084875126592/?cms_platform=web&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The phone number can&#39;t have &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;()&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;, only numbers, you must provide country code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import makeWASocket from &#39;baileys&#39;&#xA;&#xA;const sock = makeWASocket({&#xA;    // can provide additional config here&#xA;    printQRInTerminal: false //need to be false&#xA;})&#xA;// NOTE: WAIT TILL QR EVENT BEFORE REQUESTING THE PAIRING CODE&#xA;if (!sock.authState.creds.registered) {&#xA;    const number = &#39;XXXXXXXXXXX&#39;&#xA;    const code = await sock.requestPairingCode(number)&#xA;    console.log(code)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Receive Full History&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Set &lt;code&gt;syncFullHistory&lt;/code&gt; as &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Baileys, by default, use chrome browser config &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you&#39;d like to emulate a desktop connection (and receive more message history), this browser setting to your Socket config:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const sock = makeWASocket({&#xA;    ...otherOpts,&#xA;    // can use Windows, Ubuntu here too&#xA;    browser: Browsers.macOS(&#39;Desktop&#39;),&#xA;    syncFullHistory: true&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Important Notes About Socket Config&lt;/h2&gt; &#xA;&lt;h3&gt;Caching Group Metadata (Recommended)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you use baileys for groups, we recommend you to set &lt;code&gt;cachedGroupMetadata&lt;/code&gt; in socket config, you need to implement a cache like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const groupCache = new NodeCache({stdTTL: 5 * 60, useClones: false})&#xA;&#xA;const sock = makeWASocket({&#xA;    cachedGroupMetadata: async (jid) =&amp;gt; groupCache.get(jid)&#xA;})&#xA;&#xA;sock.ev.on(&#39;groups.update&#39;, async ([event]) =&amp;gt; {&#xA;    const metadata = await sock.groupMetadata(event.id)&#xA;    groupCache.set(event.id, metadata)&#xA;})&#xA;&#xA;sock.ev.on(&#39;group-participants.update&#39;, async (event) =&amp;gt; {&#xA;    const metadata = await sock.groupMetadata(event.id)&#xA;    groupCache.set(event.id, metadata)&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Improve Retry System &amp;amp; Decrypt Poll Votes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to improve sending message, retrying when error occurs and decrypt poll votes, you need to have a store and set &lt;code&gt;getMessage&lt;/code&gt; config in socket like this: &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const sock = makeWASocket({&#xA;    getMessage: async (key) =&amp;gt; await getMessageFromStore(key)&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Receive Notifications in Whatsapp App&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to receive notifications in whatsapp app, set &lt;code&gt;markOnlineOnConnect&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const sock = makeWASocket({&#xA;    markOnlineOnConnect: false&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Saving &amp;amp; Restoring Sessions&lt;/h2&gt; &#xA;&lt;p&gt;You obviously don&#39;t want to keep scanning the QR code every time you want to connect.&lt;/p&gt; &#xA;&lt;p&gt;So, you can load the credentials to log back in:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import makeWASocket, { useMultiFileAuthState } from &#39;baileys&#39;&#xA;&#xA;const { state, saveCreds } = await useMultiFileAuthState(&#39;auth_info_baileys&#39;)&#xA;&#xA;// will use the given state to connect&#xA;// so if valid credentials are available -- it&#39;ll connect without QR&#xA;const sock = makeWASocket({ auth: state })&#xA;&#xA;// this will be called as soon as the credentials are updated&#xA;sock.ev.on(&#39;creds.update&#39;, saveCreds)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] &lt;code&gt;useMultiFileAuthState&lt;/code&gt; is a utility function to help save the auth state in a single folder, this function serves as a good guide to help write auth &amp;amp; key states for SQL/no-SQL databases, which I would recommend in any production grade system.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] When a message is received/sent, due to signal sessions needing updating, the auth keys (&lt;code&gt;authState.keys&lt;/code&gt;) will update. Whenever that happens, you must save the updated keys (&lt;code&gt;authState.keys.set()&lt;/code&gt; is called). Not doing so will prevent your messages from reaching the recipient &amp;amp; cause other unexpected consequences. The &lt;code&gt;useMultiFileAuthState&lt;/code&gt; function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Handling Events&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Baileys uses the EventEmitter syntax for events. They&#39;re all nicely typed up, so you shouldn&#39;t have any issues with an Intellisense editor like VS Code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] &lt;strong&gt;The events are &lt;a href=&#34;https://baileys.whiskeysockets.io/types/BaileysEventMap.html&#34;&gt;these&lt;/a&gt;&lt;/strong&gt;, it&#39;s important you see all events&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can listen to these events like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const sock = makeWASocket()&#xA;sock.ev.on(&#39;messages.upsert&#39;, ({ messages }) =&amp;gt; {&#xA;    console.log(&#39;got messages&#39;, messages)&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example to Start&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] This example includes basic auth storage too&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import makeWASocket, { DisconnectReason, useMultiFileAuthState } from &#39;baileys&#39;&#xA;import { Boom } from &#39;@hapi/boom&#39;&#xA;&#xA;async function connectToWhatsApp () {&#xA;    const { state, saveCreds } = await useMultiFileAuthState(&#39;auth_info_baileys&#39;)&#xA;    const sock = makeWASocket({&#xA;        // can provide additional config here&#xA;        auth: state,&#xA;        printQRInTerminal: true&#xA;    })&#xA;    sock.ev.on(&#39;connection.update&#39;, (update) =&amp;gt; {&#xA;        const { connection, lastDisconnect } = update&#xA;        if(connection === &#39;close&#39;) {&#xA;            const shouldReconnect = (lastDisconnect.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut&#xA;            console.log(&#39;connection closed due to &#39;, lastDisconnect.error, &#39;, reconnecting &#39;, shouldReconnect)&#xA;            // reconnect if not logged out&#xA;            if(shouldReconnect) {&#xA;                connectToWhatsApp()&#xA;            }&#xA;        } else if(connection === &#39;open&#39;) {&#xA;            console.log(&#39;opened connection&#39;)&#xA;        }&#xA;    })&#xA;    sock.ev.on(&#39;messages.upsert&#39;, event =&amp;gt; {&#xA;        for (const m of event.messages) {&#xA;            console.log(JSON.stringify(m, undefined, 2))&#xA;&#xA;            console.log(&#39;replying to&#39;, m.key.remoteJid)&#xA;            await sock.sendMessage(m.key.remoteJid!, { text: &#39;Hello Word&#39; })&#xA;        }&#xA;    })&#xA;&#xA;    // to storage creds (session info) when it updates&#xA;    sock.ev.on(&#39;creds.update&#39;, saveCreds)&#xA;}&#xA;// run in main file&#xA;connectToWhatsApp()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] In &lt;code&gt;messages.upsert&lt;/code&gt; it&#39;s recommended to use a loop like &lt;code&gt;for (const message of event.messages)&lt;/code&gt; to handle all messages in array&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Decrypt Poll Votes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;By default poll votes are encrypted and handled in &lt;code&gt;messages.update&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;That&#39;s a simple example&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;sock.ev.on(&#39;messages.update&#39;, event =&amp;gt; {&#xA;    for(const { key, update } of event) {&#xA;        if(update.pollUpdates) {&#xA;            const pollCreation = await getMessage(key)&#xA;            if(pollCreation) {&#xA;                console.log(&#xA;                    &#39;got poll update, aggregation: &#39;,&#xA;                    getAggregateVotesInPollMessage({&#xA;                        message: pollCreation,&#xA;                        pollUpdates: update.pollUpdates,&#xA;                    })&#xA;                )&#xA;            }&#xA;        }&#xA;    }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;getMessage&lt;/code&gt; is a &lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#implementing-a-data-store&#34;&gt;store&lt;/a&gt; implementation (in your end)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Summary of Events on First Connection&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;When you connect first time, &lt;code&gt;connection.update&lt;/code&gt; will be fired requesting you to restart sock&lt;/li&gt; &#xA; &lt;li&gt;Then, history messages will be received in &lt;code&gt;messaging.history-set&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Implementing a Data Store&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Baileys does not come with a defacto storage for chats, contacts, or messages. However, a simple in-memory implementation has been provided. The store listens for chat updates, new messages, message updates, etc., to always have an up-to-date version of the data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] I highly recommend building your own data store, as storing someone&#39;s entire chat history in memory is a terrible waste of RAM.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;It can be used as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import makeWASocket, { makeInMemoryStore } from &#39;baileys&#39;&#xA;// the store maintains the data of the WA connection in memory&#xA;// can be written out to a file &amp;amp; read from it&#xA;const store = makeInMemoryStore({ })&#xA;// can be read from a file&#xA;store.readFromFile(&#39;./baileys_store.json&#39;)&#xA;// saves the state to a file every 10s&#xA;setInterval(() =&amp;gt; {&#xA;    store.writeToFile(&#39;./baileys_store.json&#39;)&#xA;}, 10_000)&#xA;&#xA;const sock = makeWASocket({ })&#xA;// will listen from this socket&#xA;// the store can listen from a new socket once the current socket outlives its lifetime&#xA;store.bind(sock.ev)&#xA;&#xA;sock.ev.on(&#39;chats.upsert&#39;, () =&amp;gt; {&#xA;    // can use &#39;store.chats&#39; however you want, even after the socket dies out&#xA;    // &#39;chats&#39; =&amp;gt; a KeyedDB instance&#xA;    console.log(&#39;got chats&#39;, store.chats.all())&#xA;})&#xA;&#xA;sock.ev.on(&#39;contacts.upsert&#39;, () =&amp;gt; {&#xA;    console.log(&#39;got contacts&#39;, Object.values(store.contacts))&#xA;})&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The store also provides some simple functions such as &lt;code&gt;loadMessages&lt;/code&gt; that utilize the store to speed up data retrieval.&lt;/p&gt; &#xA;&lt;h2&gt;Whatsapp IDs Explain&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;id&lt;/code&gt; is the WhatsApp ID, called &lt;code&gt;jid&lt;/code&gt; too, of the person or group you&#39;re sending the message to. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It must be in the format &lt;code&gt;[country code][phone number]@s.whatsapp.net&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Example for people: &lt;code&gt;+19999999999@s.whatsapp.net&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;For groups, it must be in the format &lt;code&gt;123456789-123345@g.us&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;For broadcast lists, it&#39;s &lt;code&gt;[timestamp of creation]@broadcast&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;For stories, the ID is &lt;code&gt;status@broadcast&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Utility Functions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;getContentType&lt;/code&gt;, returns the content type for any message&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;getDevice&lt;/code&gt;, returns the device from message&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;makeCacheableSignalKeyStore&lt;/code&gt;, make auth store more fast&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;downloadContentFromMessage&lt;/code&gt;, download content from any message&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sending Messages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Send all types of messages with a single function&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://baileys.whiskeysockets.io/types/AnyMessageContent.html&#34;&gt;Here&lt;/a&gt; you can see all message contents supported, like text message&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://baileys.whiskeysockets.io/types/MiscMessageGenerationOptions.html&#34;&gt;Here&lt;/a&gt; you can see all options supported, like quote message&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const jid: string&#xA;const content: AnyMessageContent&#xA;const options: MiscMessageGenerationOptions&#xA;&#xA;sock.sendMessage(jid, content, options)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Non-Media Messages&lt;/h3&gt; &#xA;&lt;h4&gt;Text Message&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(jid, { text: &#39;hello word&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Quote Message (works with all types)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(jid, { text: &#39;hello word&#39; }, { quoted: message })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Mention User (works with most types)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;@number is to mention in text, it&#39;s optional&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(&#xA;    jid,&#xA;    {&#xA;        text: &#39;@12345678901&#39;,&#xA;        mentions: [&#39;12345678901@s.whatsapp.net&#39;]&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Forward Messages&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to have message object, can be retrieved from &lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#implementing-a-data-store&#34;&gt;store&lt;/a&gt; or use a &lt;a href=&#34;https://baileys.whiskeysockets.io/types/WAMessage.html&#34;&gt;message&lt;/a&gt; object&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const msg = getMessageFromStore() // implement this on your end&#xA;await sock.sendMessage(jid, { forward: msg }) // WA forward the message!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Location Message&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(&#xA;    jid, &#xA;    {&#xA;        location: {&#xA;            degreesLatitude: 24.121231,&#xA;            degreesLongitude: 55.1121221&#xA;        }&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Contact Message&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const vcard = &#39;BEGIN:VCARD\n&#39; // metadata of the contact card&#xA;            + &#39;VERSION:3.0\n&#39; &#xA;            + &#39;FN:Jeff Singh\n&#39; // full name&#xA;            + &#39;ORG:Ashoka Uni;\n&#39; // the organization of the contact&#xA;            + &#39;TEL;type=CELL;type=VOICE;waid=911234567890:+91 12345 67890\n&#39; // WhatsApp ID + phone number&#xA;            + &#39;END:VCARD&#39;&#xA;&#xA;await sock.sendMessage(&#xA;    id,&#xA;    { &#xA;        contacts: { &#xA;            displayName: &#39;Jeff&#39;, &#xA;            contacts: [{ vcard }] &#xA;        }&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Reaction Message&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to pass the key of message, you can retrieve from &lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#implementing-a-data-store&#34;&gt;store&lt;/a&gt; or use a &lt;a href=&#34;https://baileys.whiskeysockets.io/types/WAMessageKey.html&#34;&gt;key&lt;/a&gt; object&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(&#xA;    jid,&#xA;    {&#xA;        react: {&#xA;            text: &#39;💖&#39;, // use an empty string to remove the reaction&#xA;            key: message.key&#xA;        }&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Pin Message&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You need to pass the key of message, you can retrieve from &lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#implementing-a-data-store&#34;&gt;store&lt;/a&gt; or use a &lt;a href=&#34;https://baileys.whiskeysockets.io/types/WAMessageKey.html&#34;&gt;key&lt;/a&gt; object&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Time can be:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Time&lt;/th&gt; &#xA;   &lt;th&gt;Seconds&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24h&lt;/td&gt; &#xA;   &lt;td&gt;86.400&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7d&lt;/td&gt; &#xA;   &lt;td&gt;604.800&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;30d&lt;/td&gt; &#xA;   &lt;td&gt;2.592.000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(&#xA;    jid,&#xA;    {&#xA;        pin: {&#xA;            type: 1, // 0 to remove&#xA;            time: 86400&#xA;            key: message.key&#xA;        }&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Poll Message&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(&#xA;    jid,&#xA;    {&#xA;        poll: {&#xA;            name: &#39;My Poll&#39;,&#xA;            values: [&#39;Option 1&#39;, &#39;Option 2&#39;, ...],&#xA;            selectableCount: 1,&#xA;            toAnnouncementGroup: false // or true&#xA;        }&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sending Messages with Link Previews&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;By default, wa does not have link generation when sent from the web&lt;/li&gt; &#xA; &lt;li&gt;Baileys has a function to generate the content for these link previews&lt;/li&gt; &#xA; &lt;li&gt;To enable this function&#39;s usage, add &lt;code&gt;link-preview-js&lt;/code&gt; as a dependency to your project with &lt;code&gt;yarn add link-preview-js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Send a link:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(&#xA;    jid,&#xA;    {&#xA;        text: &#39;Hi, this was sent using https://github.com/whiskeysockets/baileys&#39;&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Media Messages&lt;/h3&gt; &#xA;&lt;p&gt;Sending media (video, stickers, images) is easier &amp;amp; more efficient than ever.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] In media messages, you can pass &lt;code&gt;{ stream: Stream }&lt;/code&gt; or &lt;code&gt;{ url: Url }&lt;/code&gt; or &lt;code&gt;Buffer&lt;/code&gt; directly, you can see more &lt;a href=&#34;https://baileys.whiskeysockets.io/types/WAMediaUpload.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When specifying a media url, Baileys never loads the entire buffer into memory; it even encrypts the media as a readable stream.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] It&#39;s recommended to use Stream or Url to save memory&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Gif Message&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Whatsapp doesn&#39;t support &lt;code&gt;.gif&lt;/code&gt; files, that&#39;s why we send gifs as common &lt;code&gt;.mp4&lt;/code&gt; video with &lt;code&gt;gifPlayback&lt;/code&gt; flag&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(&#xA;    jid, &#xA;    { &#xA;        video: fs.readFileSync(&#39;Media/ma_gif.mp4&#39;),&#xA;        caption: &#39;hello word&#39;,&#xA;        gifPlayback: true&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Video Message&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(&#xA;    id, &#xA;    { &#xA;        video: {&#xA;            url: &#39;./Media/ma_gif.mp4&#39;&#xA;        },&#xA;        caption: &#39;hello word&#39;,&#xA;&#x9;    ptv: false // if set to true, will send as a `video note`&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Audio Message&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To audio message work in all devices you need to convert with some tool like &lt;code&gt;ffmpeg&lt;/code&gt; with this flags: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    codec: libopus //ogg file&#xA;    ac: 1 //one channel&#xA;    avoid_negative_ts&#xA;    make_zero&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ffmpeg -i input.mp4 -avoid_negative_ts make_zero -ac 1 output.ogg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(&#xA;    jid, &#xA;    {&#xA;        audio: {&#xA;            url: &#39;./Media/audio.mp3&#39;&#xA;        },&#xA;        mimetype: &#39;audio/mp4&#39;&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Image Message&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(&#xA;    id, &#xA;    { &#xA;        image: {&#xA;            url: &#39;./Media/ma_img.png&#39;&#xA;        },&#xA;        caption: &#39;hello word&#39;&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;View Once Message&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can send all messages above as &lt;code&gt;viewOnce&lt;/code&gt;, you only need to pass &lt;code&gt;viewOnce: true&lt;/code&gt; in content object&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(&#xA;    id, &#xA;    { &#xA;        image: {&#xA;            url: &#39;./Media/ma_img.png&#39;&#xA;        },&#xA;        viewOnce: true, //works with video, audio too&#xA;        caption: &#39;hello word&#39;&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Modify Messages&lt;/h2&gt; &#xA;&lt;h3&gt;Deleting Messages (for everyone)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const msg = await sock.sendMessage(jid, { text: &#39;hello word&#39; })&#xA;await sock.sendMessage(jid, { delete: msg.key })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; deleting for oneself is supported via &lt;code&gt;chatModify&lt;/code&gt;, see in &lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#modifying-chats&#34;&gt;this section&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Editing Messages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can pass all editable contents here&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(jid, {&#xA;      text: &#39;updated text goes here&#39;,&#xA;      edit: response.key,&#xA;    });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manipulating Media Messages&lt;/h2&gt; &#xA;&lt;h3&gt;Thumbnail in Media Messages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For media messages, the thumbnail can be generated automatically for images &amp;amp; stickers provided you add &lt;code&gt;jimp&lt;/code&gt; or &lt;code&gt;sharp&lt;/code&gt; as a dependency in your project using &lt;code&gt;yarn add jimp&lt;/code&gt; or &lt;code&gt;yarn add sharp&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Thumbnails for videos can also be generated automatically, though, you need to have &lt;code&gt;ffmpeg&lt;/code&gt; installed on your system.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Downloading Media Messages&lt;/h3&gt; &#xA;&lt;p&gt;If you want to save the media you received&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { createWriteStream } from &#39;fs&#39;&#xA;import { downloadMediaMessage, getContentType } from &#39;baileys&#39;&#xA;&#xA;sock.ev.on(&#39;messages.upsert&#39;, async ({ [m] }) =&amp;gt; {&#xA;    if (!m.message) return // if there is no text or media message&#xA;    const messageType = getContentType(m) // get what type of message it is (text, image, video...)&#xA;&#xA;    // if the message is an image&#xA;    if (messageType === &#39;imageMessage&#39;) {&#xA;        // download the message&#xA;        const stream = await downloadMediaMessage(&#xA;            m,&#xA;            &#39;stream&#39;, // can be &#39;buffer&#39; too&#xA;            { },&#xA;            { &#xA;                logger,&#xA;                // pass this so that baileys can request a reupload of media&#xA;                // that has been deleted&#xA;                reuploadRequest: sock.updateMediaMessage&#xA;            }&#xA;        )&#xA;        // save to file&#xA;        const writeStream = createWriteStream(&#39;./my-download.jpeg&#39;)&#xA;        stream.pipe(writeStream)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Re-upload Media Message to Whatsapp&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WhatsApp automatically removes old media from their servers. For the device to access said media -- a re-upload is required by another device that has it. This can be accomplished using:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.updateMediaMessage(msg)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reject Call&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can obtain &lt;code&gt;callId&lt;/code&gt; and &lt;code&gt;callFrom&lt;/code&gt; from &lt;code&gt;call&lt;/code&gt; event&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.rejectCall(callId, callFrom)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Send States in Chat&lt;/h2&gt; &#xA;&lt;h3&gt;Reading Messages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A set of message &lt;a href=&#34;https://baileys.whiskeysockets.io/types/WAMessageKey.html&#34;&gt;keys&lt;/a&gt; must be explicitly marked read now.&lt;/li&gt; &#xA; &lt;li&gt;You cannot mark an entire &#39;chat&#39; read as it were with Baileys Web. This means you have to keep track of unread messages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const key: WAMessageKey&#xA;// can pass multiple keys to read multiple messages as well&#xA;await sock.readMessages([key])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The message ID is the unique identifier of the message that you are marking as read. On a &lt;code&gt;WAMessage&lt;/code&gt;, the &lt;code&gt;messageID&lt;/code&gt; can be accessed using &lt;code&gt;messageID = message.key.id&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Update Presence&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;presence&lt;/code&gt; can be one of &lt;a href=&#34;https://baileys.whiskeysockets.io/types/WAPresence.html&#34;&gt;these&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The presence expires after about 10 seconds.&lt;/li&gt; &#xA; &lt;li&gt;This lets the person/group with &lt;code&gt;jid&lt;/code&gt; know whether you&#39;re online, offline, typing etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendPresenceUpdate(&#39;available&#39;, jid) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] If a desktop client is active, WA doesn&#39;t send push notifications to the device. If you would like to receive said notifications -- mark your Baileys client offline using &lt;code&gt;sock.sendPresenceUpdate(&#39;unavailable&#39;)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Modifying Chats&lt;/h2&gt; &#xA;&lt;p&gt;WA uses an encrypted form of communication to send chat/app updates. This has been implemented mostly and you can send the following updates:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] If you mess up one of your updates, WA can log you out of all your devices and you&#39;ll have to log in again.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Archive a Chat&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const lastMsgInChat = await getLastMessageInChat(jid) // implement this on your end&#xA;await sock.chatModify({ archive: true, lastMessages: [lastMsgInChat] }, jid)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mute/Unmute a Chat&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supported times:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Time&lt;/th&gt; &#xA;   &lt;th&gt;Miliseconds&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Remove&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8h&lt;/td&gt; &#xA;   &lt;td&gt;86.400.000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7d&lt;/td&gt; &#xA;   &lt;td&gt;604.800.000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// mute for 8 hours&#xA;await sock.chatModify({ mute: 8 * 60 * 60 * 1000 }, jid)&#xA;// unmute&#xA;await sock.chatModify({ mute: null }, jid)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mark a Chat Read/Unread&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const lastMsgInChat = await getLastMessageInChat(jid) // implement this on your end&#xA;// mark it unread&#xA;await sock.chatModify({ markRead: false, lastMessages: [lastMsgInChat] }, jid)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delete a Message for Me&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.chatModify(&#xA;    {&#xA;        clear: {&#xA;            messages: [&#xA;                {&#xA;                    id: &#39;ATWYHDNNWU81732J&#39;,&#xA;                    fromMe: true, &#xA;                    timestamp: &#39;1654823909&#39;&#xA;                }&#xA;            ]&#xA;        }&#xA;    }, &#xA;    jid&#xA;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delete a Chat&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const lastMsgInChat = await getLastMessageInChat(jid) // implement this on your end&#xA;await sock.chatModify({&#xA;        delete: true,&#xA;        lastMessages: [&#xA;            {&#xA;                key: lastMsgInChat.key,&#xA;                messageTimestamp: lastMsgInChat.messageTimestamp&#xA;            }&#xA;        ]&#xA;    },&#xA;    jid&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pin/Unpin a Chat&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.chatModify({&#xA;        pin: true // or `false` to unpin&#xA;    },&#xA;    jid&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Star/Unstar a Message&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.chatModify({&#xA;        star: {&#xA;            messages: [&#xA;                {&#xA;                    id: &#39;messageID&#39;,&#xA;                    fromMe: true // or `false`&#xA;                }&#xA;            ],&#xA;            star: true // - true: Star Message; false: Unstar Message&#xA;        }&#xA;    },&#xA;    jid&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Disappearing Messages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ephemeral can be:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Time&lt;/th&gt; &#xA;   &lt;th&gt;Seconds&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Remove&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24h&lt;/td&gt; &#xA;   &lt;td&gt;86.400&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7d&lt;/td&gt; &#xA;   &lt;td&gt;604.800&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;90d&lt;/td&gt; &#xA;   &lt;td&gt;7.776.000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to pass in &lt;strong&gt;Seconds&lt;/strong&gt;, default is 7 days&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// turn on disappearing messages&#xA;await sock.sendMessage(&#xA;    jid, &#xA;    // this is 1 week in seconds -- how long you want messages to appear for&#xA;    { disappearingMessagesInChat: WA_DEFAULT_EPHEMERAL }&#xA;)&#xA;&#xA;// will send as a disappearing message&#xA;await sock.sendMessage(jid, { text: &#39;hello&#39; }, { ephemeralExpiration: WA_DEFAULT_EPHEMERAL })&#xA;&#xA;// turn off disappearing messages&#xA;await sock.sendMessage(&#xA;    jid, &#xA;    { disappearingMessagesInChat: false }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User Querys&lt;/h2&gt; &#xA;&lt;h3&gt;Check If ID Exists in Whatsapp&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const [result] = await sock.onWhatsApp(jid)&#xA;if (result.exists) console.log (`${jid} exists on WhatsApp, as jid: ${result.jid}`)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Query Chat History (groups too)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to have oldest message in chat&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const msg = await getOldestMessageInChat(jid)&#xA;await sock.fetchMessageHistory(&#xA;    50, //quantity (max: 50 per query)&#xA;    msg.key,&#xA;    msg.messageTimestamp&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Messages will be received in &lt;code&gt;messaging.history-set&lt;/code&gt; event&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Fetch Status&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const status = await sock.fetchStatus(jid)&#xA;console.log(&#39;status: &#39; + status)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fetch Profile Picture (groups too)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To get the display picture of some person/group&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// for low res picture&#xA;const ppUrl = await sock.profilePictureUrl(jid)&#xA;console.log(ppUrl)&#xA;&#xA;// for high res picture&#xA;const ppUrl = await sock.profilePictureUrl(jid, &#39;image&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fetch Bussines Profile (such as description or category)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const profile = await sock.getBusinessProfile(jid)&#xA;console.log(&#39;business description: &#39; + profile.description + &#39;, category: &#39; + profile.category)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fetch Someone&#39;s Presence (if they&#39;re typing or online)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// the presence update is fetched and called here&#xA;sock.ev.on(&#39;presence.update&#39;, console.log)&#xA;&#xA;// request updates for a chat&#xA;await sock.presenceSubscribe(jid) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Change Profile&lt;/h2&gt; &#xA;&lt;h3&gt;Change Profile Status&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.updateProfileStatus(&#39;Hello World!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Change Profile Name&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.updateProfileName(&#39;My name&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Change Display Picture (groups too)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To change your display picture or a group&#39;s&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Like media messages, you can pass &lt;code&gt;{ stream: Stream }&lt;/code&gt; or &lt;code&gt;{ url: Url }&lt;/code&gt; or &lt;code&gt;Buffer&lt;/code&gt; directly, you can see more &lt;a href=&#34;https://baileys.whiskeysockets.io/types/WAMediaUpload.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.updateProfilePicture(jid, { url: &#39;./new-profile-picture.jpeg&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Remove display picture (groups too)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.removeProfilePicture(jid)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Groups&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To change group properties you need to be admin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Create a Group&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// title &amp;amp; participants&#xA;const group = await sock.groupCreate(&#39;My Fab Group&#39;, [&#39;1234@s.whatsapp.net&#39;, &#39;4564@s.whatsapp.net&#39;])&#xA;console.log(&#39;created group with id: &#39; + group.gid)&#xA;await sock.sendMessage(group.id, { text: &#39;hello there&#39; }) // say hello to everyone on the group&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add/Remove or Demote/Promote&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// id &amp;amp; people to add to the group (will throw error if it fails)&#xA;await sock.groupParticipantsUpdate(&#xA;    jid, &#xA;    [&#39;abcd@s.whatsapp.net&#39;, &#39;efgh@s.whatsapp.net&#39;],&#xA;    &#39;add&#39; // replace this parameter with &#39;remove&#39; or &#39;demote&#39; or &#39;promote&#39;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Change Subject (name)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.groupUpdateSubject(jid, &#39;New Subject!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Change Description&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.groupUpdateDescription(jid, &#39;New Description!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Change Settings&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// only allow admins to send messages&#xA;await sock.groupSettingUpdate(jid, &#39;announcement&#39;)&#xA;// allow everyone to send messages&#xA;await sock.groupSettingUpdate(jid, &#39;not_announcement&#39;)&#xA;// allow everyone to modify the group&#39;s settings -- like display picture etc.&#xA;await sock.groupSettingUpdate(jid, &#39;unlocked&#39;)&#xA;// only allow admins to modify the group&#39;s settings&#xA;await sock.groupSettingUpdate(jid, &#39;locked&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Leave a Group&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// will throw error if it fails&#xA;await sock.groupLeave(jid)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get Invite Code&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To create link with code use &lt;code&gt;&#39;https://chat.whatsapp.com/&#39; + code&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const code = await sock.groupInviteCode(jid)&#xA;console.log(&#39;group code: &#39; + code)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Revoke Invite Code&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const code = await sock.groupRevokeInvite(jid)&#xA;console.log(&#39;New group code: &#39; + code)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Join Using Invitation Code&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code can&#39;t have &lt;code&gt;https://chat.whatsapp.com/&lt;/code&gt;, only code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const response = await sock.groupAcceptInvite(code)&#xA;console.log(&#39;joined to: &#39; + response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get Group Info by Invite Code&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const response = await sock.groupGetInviteInfo(code)&#xA;console.log(&#39;group information: &#39; + response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Query Metadata (participants, name, description...)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const metadata = await sock.groupMetadata(jid) &#xA;console.log(metadata.id + &#39;, title: &#39; + metadata.subject + &#39;, description: &#39; + metadata.desc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Join using &lt;code&gt;groupInviteMessage&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const response = await sock.groupAcceptInviteV4(jid, groupInviteMessage)&#xA;console.log(&#39;joined to: &#39; + response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get Request Join List&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const response = await sock.groupRequestParticipantsList(jid)&#xA;console.log(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Approve/Reject Request Join&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const response = await sock.groupRequestParticipantsUpdate(&#xA;    jid, // group id&#xA;    [&#39;abcd@s.whatsapp.net&#39;, &#39;efgh@s.whatsapp.net&#39;],&#xA;    &#39;approve&#39; // or &#39;reject&#39; &#xA;)&#xA;console.log(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get All Participating Groups Metadata&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const response = await sock.groupFetchAllParticipating()&#xA;console.log(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Toggle Ephemeral&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ephemeral can be:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Time&lt;/th&gt; &#xA;   &lt;th&gt;Seconds&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Remove&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24h&lt;/td&gt; &#xA;   &lt;td&gt;86.400&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7d&lt;/td&gt; &#xA;   &lt;td&gt;604.800&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;90d&lt;/td&gt; &#xA;   &lt;td&gt;7.776.000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.groupToggleEphemeral(jid, 86400)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Change Add Mode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.groupMemberAddMode(&#xA;    jid,&#xA;    &#39;all_member_add&#39; // or &#39;admin_add&#39;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Privacy&lt;/h2&gt; &#xA;&lt;h3&gt;Block/Unblock User&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.updateBlockStatus(jid, &#39;block&#39;) // Block user&#xA;await sock.updateBlockStatus(jid, &#39;unblock&#39;) // Unblock user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get Privacy Settings&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const privacySettings = await sock.fetchPrivacySettings(true)&#xA;console.log(&#39;privacy settings: &#39; + privacySettings)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get BlockList&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const response = await sock.fetchBlocklist()&#xA;console.log(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update LastSeen Privacy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const value = &#39;all&#39; // &#39;contacts&#39; | &#39;contact_blacklist&#39; | &#39;none&#39;&#xA;await sock.updateLastSeenPrivacy(value)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update Online Privacy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const value = &#39;all&#39; // &#39;match_last_seen&#39;&#xA;await sock.updateOnlinePrivacy(value)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update Profile Picture Privacy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const value = &#39;all&#39; // &#39;contacts&#39; | &#39;contact_blacklist&#39; | &#39;none&#39;&#xA;await sock.updateProfilePicturePrivacy(value)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update Status Privacy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const value = &#39;all&#39; // &#39;contacts&#39; | &#39;contact_blacklist&#39; | &#39;none&#39;&#xA;await sock.updateStatusPrivacy(value)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update Read Receipts Privacy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const value = &#39;all&#39; // &#39;none&#39;&#xA;await sock.updateReadReceiptsPrivacy(value)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update Groups Add Privacy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const value = &#39;all&#39; // &#39;contacts&#39; | &#39;contact_blacklist&#39;&#xA;await sock.updateGroupsAddPrivacy(value)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update Default Disappearing Mode&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Like &lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/#disappearing-messages&#34;&gt;this&lt;/a&gt;, ephemeral can be:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Time&lt;/th&gt; &#xA;   &lt;th&gt;Seconds&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Remove&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24h&lt;/td&gt; &#xA;   &lt;td&gt;86.400&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7d&lt;/td&gt; &#xA;   &lt;td&gt;604.800&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;90d&lt;/td&gt; &#xA;   &lt;td&gt;7.776.000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const ephemeral = 86400 &#xA;await sock.updateDefaultDisappearingMode(ephemeral)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Broadcast Lists &amp;amp; Stories&lt;/h2&gt; &#xA;&lt;h3&gt;Send Broadcast &amp;amp; Stories&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Messages can be sent to broadcasts &amp;amp; stories. You need to add the following message options in sendMessage, like this:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;await sock.sendMessage(&#xA;    jid,&#xA;    {&#xA;        image: {&#xA;            url: url&#xA;        },&#xA;        caption: caption&#xA;    },&#xA;    {&#xA;        backgroundColor: backgroundColor,&#xA;        font: font,&#xA;        statusJidList: statusJidList,&#xA;        broadcast: true&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Message body can be a &lt;code&gt;extendedTextMessage&lt;/code&gt; or &lt;code&gt;imageMessage&lt;/code&gt; or &lt;code&gt;videoMessage&lt;/code&gt; or &lt;code&gt;voiceMessage&lt;/code&gt;, see &lt;a href=&#34;https://baileys.whiskeysockets.io/types/AnyRegularMessageContent.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can add &lt;code&gt;backgroundColor&lt;/code&gt; and other options in the message options, see &lt;a href=&#34;https://baileys.whiskeysockets.io/types/MiscMessageGenerationOptions.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;broadcast: true&lt;/code&gt; enables broadcast mode&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;statusJidList&lt;/code&gt;: a list of people that you can get which you need to provide, which are the people who will get this status message.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can send messages to broadcast lists the same way you send messages to groups &amp;amp; individual chats.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Right now, WA Web does not support creating broadcast lists, but you can still delete them.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Broadcast IDs are in the format &lt;code&gt;12345678@broadcast&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Query a Broadcast List&#39;s Recipients &amp;amp; Name&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const bList = await sock.getBroadcastListInfo(&#39;1234@broadcast&#39;)&#xA;console.log (`list name: ${bList.name}, recps: ${bList.recipients}`)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Writing Custom Functionality&lt;/h2&gt; &#xA;&lt;p&gt;Baileys is written with custom functionality in mind. Instead of forking the project &amp;amp; re-writing the internals, you can simply write your own extensions.&lt;/p&gt; &#xA;&lt;h3&gt;Enabling Debug Level in Baileys Logs&lt;/h3&gt; &#xA;&lt;p&gt;First, enable the logging of unhandled messages from WhatsApp by setting:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const sock = makeWASocket({&#xA;    logger: P({ level: &#39;debug&#39; }),&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will enable you to see all sorts of messages WhatsApp sends in the console.&lt;/p&gt; &#xA;&lt;h3&gt;How Whatsapp Communicate With Us&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] If you want to learn whatsapp protocol, we recommend to study about Libsignal Protocol and Noise Protocol&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; Functionality to track the battery percentage of your phone. You enable logging and you&#39;ll see a message about your battery pop up in the console: &lt;pre&gt;&lt;code&gt;{&#xA;    &#34;level&#34;: 10,&#xA;    &#34;fromMe&#34;: false,&#xA;    &#34;frame&#34;: {&#xA;        &#34;tag&#34;: &#34;ib&#34;,&#xA;        &#34;attrs&#34;: {&#xA;            &#34;from&#34;: &#34;@s.whatsapp.net&#34;&#xA;        },&#xA;        &#34;content&#34;: [&#xA;            {&#xA;                &#34;tag&#34;: &#34;edge_routing&#34;,&#xA;                &#34;attrs&#34;: {},&#xA;                &#34;content&#34;: [&#xA;                    {&#xA;                        &#34;tag&#34;: &#34;routing_info&#34;,&#xA;                        &#34;attrs&#34;: {},&#xA;                        &#34;content&#34;: {&#xA;                            &#34;type&#34;: &#34;Buffer&#34;,&#xA;                            &#34;data&#34;: [8,2,8,5]&#xA;                        }&#xA;                    }&#xA;                ]&#xA;            }&#xA;        ]&#xA;    },&#xA;    &#34;msg&#34;:&#34;communication&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;&#39;frame&#39;&lt;/code&gt; is what the message received is, it has three components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;tag&lt;/code&gt; -- what this frame is about (eg. message will have &#39;message&#39;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;attrs&lt;/code&gt; -- a string key-value pair with some metadata (contains ID of the message usually)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;content&lt;/code&gt; -- the actual data (eg. a message node will have the actual message content in it)&lt;/li&gt; &#xA; &lt;li&gt;read more about this format &lt;a href=&#34;https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/src/WABinary/readme.md&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Register a Callback for Websocket Events&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] Recommended to see &lt;code&gt;onMessageReceived&lt;/code&gt; function in &lt;code&gt;socket.ts&lt;/code&gt; file to understand how websockets events are fired&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// for any message with tag &#39;edge_routing&#39;&#xA;sock.ws.on(&#39;CB:edge_routing&#39;, (node: BinaryNode) =&amp;gt; { })&#xA;&#xA;// for any message with tag &#39;edge_routing&#39; and id attribute = abcd&#xA;sock.ws.on(&#39;CB:edge_routing,id:abcd&#39;, (node: BinaryNode) =&amp;gt; { })&#xA;&#xA;// for any message with tag &#39;edge_routing&#39;, id attribute = abcd &amp;amp; first content node routing_info&#xA;sock.ws.on(&#39;CB:edge_routing,id:abcd,routing_info&#39;, (node: BinaryNode) =&amp;gt; { })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Also, this repo is now licenced under GPL 3 since it uses &lt;a href=&#34;https://git.questbook.io/backend/service-coderunner/-/merge_requests/1&#34;&gt;libsignal-node&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>is-a-dev/register</title>
    <updated>2025-03-01T01:55:44Z</updated>
    <id>tag:github.com,2025-03-01:/is-a-dev/register</id>
    <link href="https://github.com/is-a-dev/register" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Grab your own sweet-looking &#39;.is-a.dev&#39; subdomain.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;is-a.dev Banner&#34; src=&#34;https://raw.githubusercontent.com/is-a-dev/register/main/media/banner.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Domains&#34; src=&#34;https://img.shields.io/github/directory-file-count/is-a-dev/register/domains?color=5c46eb&amp;amp;label=domains&amp;amp;style=for-the-badge&#34;&gt; &lt;img alt=&#34;Open Pull Requests&#34; src=&#34;https://img.shields.io/github/issues-raw/is-a-dev/register?color=5c46eb&amp;amp;label=issues&amp;amp;style=for-the-badge&#34;&gt; &lt;img alt=&#34;Open Issues&#34; src=&#34;https://img.shields.io/github/issues-pr-raw/is-a-dev/register?color=5c46eb&amp;amp;label=pull%20requests&amp;amp;style=for-the-badge&#34;&gt; &lt;br&gt; &lt;img alt=&#34;Publish&#34; src=&#34;https://github.com/is-a-dev/register/actions/workflows/publish.yml/badge.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;is-a.dev&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;strong&gt;is-a.dev&lt;/strong&gt; is a service that allows developers to get a sweet-looking &lt;code&gt;.is-a.dev&lt;/code&gt; domain for their personal websites.&lt;/p&gt; &#xA;&lt;h2&gt;Announcements &amp;amp; Status Updates&lt;/h2&gt; &#xA;&lt;p&gt;Please join our &lt;a href=&#34;https://discord.gg/is-a-dev-830872854677422150&#34;&gt;Discord server&lt;/a&gt; for announcements, updates &amp;amp; upgrades, and downtimes regarding the service. Not all of these will be posted on GitHub, however they will always be posted in our Discord server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/is-a-dev-830872854677422150&#34;&gt;&lt;img alt=&#34;Discord Server&#34; src=&#34;https://invidget.wdh.app/is-a-dev-830872854677422150&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Register&lt;/h1&gt; &#xA;&lt;h2&gt;How to Register&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you want a more visual guide, check out &lt;a href=&#34;https://wdh.gg/tX3ghge&#34;&gt;this blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/is-a-dev/register/fork&#34;&gt;Fork&lt;/a&gt; this repository&lt;/li&gt; &#xA; &lt;li&gt;Add a new file called &lt;code&gt;your-domain-name.json&lt;/code&gt; in the &lt;code&gt;domains&lt;/code&gt; folder to register &lt;code&gt;your-domain-name.is-a.dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.is-a.dev&#34;&gt;Read the documentation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you are applying for NS records please read &lt;a href=&#34;https://raw.githubusercontent.com/is-a-dev/register/main/#ns-records&#34;&gt;this&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Your pull request will be reviewed and merged. &lt;em&gt;Make sure to keep an eye on it incase we need you to make any changes!&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;After the pull request is merged, please allow up to 24 hours for the changes to propagate&lt;/li&gt; &#xA; &lt;li&gt;Enjoy your new &lt;code&gt;.is-a.dev&lt;/code&gt; domain! Please consider leaving us a star ⭐️ to help support us!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;NS Records&lt;/h3&gt; &#xA;&lt;p&gt;When applying for NS records, please be aware we already support a &lt;a href=&#34;https://docs.is-a.dev/faq/#which-records-are-supported&#34;&gt;wide range of DNS records&lt;/a&gt;, so you may not need them.&lt;/p&gt; &#xA;&lt;p&gt;In your PR, please explain why you need NS records, including examples, to help mitigate potential abuse. Refer to the &lt;a href=&#34;https://docs.is-a.dev/faq/#who-can-use-ns-records&#34;&gt;FAQ&lt;/a&gt; for guidelines on allowed usage. Good examples of NS record requests are &lt;a href=&#34;https://github.com/is-a-dev/register/pull/17592&#34;&gt;#17592&lt;/a&gt; and &lt;a href=&#34;https://github.com/is-a-dev/register/pull/18026&#34;&gt;#18026&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Pull requests adding NS records without sufficient reasoning will be closed.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Also see: &lt;a href=&#34;https://docs.is-a.dev/faq/#why-are-you-so-strict-with-ns-records&#34;&gt;Why are you so strict with NS records?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] You can bypass these requirements[^1] by donating just $2 &lt;a href=&#34;https://wdh.gg/pvNCdvs&#34;&gt;here&lt;/a&gt;, or via &lt;a href=&#34;https://wdh.gg/sponsor&#34;&gt;GitHub Sponsors&lt;/a&gt;. As a thank-you, you&#39;ll also receive a special role in our &lt;a href=&#34;https://discord.gg/is-a-dev-830872854677422150&#34;&gt;Discord server&lt;/a&gt;!&lt;/p&gt; &#xA; &lt;p&gt;If you donate, email &lt;a href=&#34;mailto:william@is-a.dev&#34;&gt;william@is-a.dev&lt;/a&gt; or DM &lt;code&gt;@williamharrison&lt;/code&gt; on Discord with your receipt and PR link.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;[^1]: Requests deemed to be made with malicious intent may be denied, with a refund provided.&lt;/p&gt; &#xA;&lt;h2&gt;Report Abuse&lt;/h2&gt; &#xA;&lt;p&gt;If you find any subdomains being used for abusive purposes, please report them by &lt;a href=&#34;https://github.com/is-a-dev/register/issues/new?assignees=&amp;amp;labels=report-abuse&amp;amp;projects=&amp;amp;template=report-abuse.md&amp;amp;title=Report+abuse&#34;&gt;creating an issue&lt;/a&gt; with the relevant evidence.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;We are proud to announce that we are supported by Cloudflare&#39;s &lt;a href=&#34;https://www.cloudflare.com/lp/project-alexandria&#34;&gt;Project Alexandria&lt;/a&gt; sponsorship program. We would not be able to operate without their help! 💖&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.cloudflare.com&#34;&gt; &lt;img alt=&#34;Cloudflare Logo&#34; src=&#34;https://raw.githubusercontent.com/is-a-dev/register/main/media/cloudflare.png&#34; height=&#34;96&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>wangrongding/wechat-bot</title>
    <updated>2025-03-01T01:55:44Z</updated>
    <id>tag:github.com,2025-03-01:/wangrongding/wechat-bot</id>
    <link href="https://github.com/wangrongding/wechat-bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤖一个基于 WeChaty 结合 DeepSeek / ChatGPT / Kimi / 讯飞等Ai服务实现的微信机器人 ，可以用来帮助你自动回复微信消息，或者管理微信群/好友，检测僵尸粉等...&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WeChat Bot&lt;/h1&gt; &#xA;&lt;p&gt;一个 基于 &lt;code&gt;chatgpt&lt;/code&gt; + &lt;code&gt;wechaty&lt;/code&gt; 的微信机器人&lt;/p&gt; &#xA;&lt;p&gt;可以用来帮助你自动回复微信消息，或者管理微信群/好友.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;简单&lt;/code&gt;，&lt;code&gt;好用&lt;/code&gt;，&lt;code&gt;2分钟（4 个步骤）&lt;/code&gt; 就能玩起来了。🌸 如果对您有所帮助，请点个 Star ⭐️ 支持一下。&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://trendshift.io/repositories/11077&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/11077&#34; alt=&#34;wangrongding%2Fwechat-bot | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;贡献者们&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/wangrongding/wechat-bot/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=wangrongding/wechat-bot&amp;amp;columns=20&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;欢迎大家提交 PR 接入更多的 ai 服务(比如扣子等...)，积极贡献更好的功能实现，让 wechat-bot 变得更强！&lt;/p&gt; &#xA;&lt;h2&gt;使用前需要配置的 AI 服务（目前支持 9 种，可任选其一）&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;deepseek&lt;/p&gt; &lt;p&gt;获取自己的 &lt;code&gt;api key&lt;/code&gt;，地址戳这里 👉🏻 ：&lt;a href=&#34;https://platform.deepseek.com/usage&#34;&gt;deepseek 开放平台&lt;/a&gt;&lt;br&gt; 将获取到的&lt;code&gt;api key&lt;/code&gt;填入 &lt;code&gt;.evn&lt;/code&gt; 文件中的 &lt;code&gt;DEEPSEEK_FREE_TOKEN&lt;/code&gt; 中。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ChatGPT&lt;/p&gt; &lt;p&gt;先获取自己的 &lt;code&gt;api key&lt;/code&gt;，地址戳这里 👉🏻 ：&lt;a href=&#34;https://platform.openai.com/settings/organization/api-keys&#34;&gt;创建你的 api key&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;注意：这个是需要去付费购买的，很多人过来问为什么请求不通，请确保终端走了代理，并且付费购买了它的服务&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 执行下面命令，拷贝一份 .env.example 文件为 .env&#xA;cp .env.example .env&#xA;# 填写完善 .env 文件中的内容&#xA;OPENAI_API_KEY=&#39;你的key&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;通义千问&lt;/p&gt; &lt;p&gt;通义千问是阿里云提供的 AI 服务，获取到你的 api key 之后, 填写到 .env 文件中即可&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 执行下面命令，拷贝一份 .env.example 文件为 .env&#xA;cp .env.example .env&#xA;# 填写完善 .env 文件中的内容&#xA;# 通义千问, URL 包含 uri 路径&#xA;TONGYI_URL = &#34;https://dashscope.aliyuncs.com/compatible-mode/v1&#34;&#xA;# 通义千问的 API_KEY&#xA;TONGYI_API_KEY = &#39;&#39;&#xA;# 通义千问使用的模型&#xA;TONGYI_MODEL=&#39;qwen-plus&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;科大讯飞&lt;/p&gt; &lt;p&gt;新增科大讯飞，去这里申请一个 key：&lt;a href=&#34;https://console.xfyun.cn/services/bm35&#34;&gt;科大讯飞&lt;/a&gt;，每个模型都有 200 万的免费 token ，感觉很难用完。&lt;br&gt; 注意： 讯飞的配置文件几个 key，别填反了，很多人找到我说为什么不回复，都是填反了。&lt;br&gt; 而且还有一个好处就是，接口不会像 Kimi 一样限制请求频次，相对来说稳定很多。&lt;br&gt; 服务出错可参考： &lt;a href=&#34;https://github.com/wangrongding/wechat-bot/issues/170&#34;&gt;issues/170&lt;/a&gt;, &lt;a href=&#34;https://github.com/wangrongding/wechat-bot/issues/180&#34;&gt;issues/180&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Kimi （请求限制较严重）&lt;/p&gt; &lt;p&gt;可以去 ： &lt;a href=&#34;https://platform.moonshot.cn/console/api-keys&#34;&gt;kimi apikey&lt;/a&gt; 获取你的 key&lt;br&gt; 最近比较忙，大家感兴趣可以提交 PR，我会尽快合并。目前 Kimi 刚刚集成，还可以实现上传文件等功能，然后有其它较好的服务也可以提交 PR 。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;dify&lt;/p&gt; &lt;p&gt;地址：&lt;a href=&#34;https://dify.ai/&#34;&gt;dify&lt;/a&gt;, 创建你的应用之后, 获取到你的 api key 之后, 填写到 .env 文件中即可, 也支持私有化部署dify版本&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 执行下面命令，拷贝一份 .env.example 文件为 .env&#xA;cp .env.example .env&#xA;# 填写完善 .env 文件中的内容&#xA;DIFY_API_KEY=&#39;你的key&#39;&#xA;# 如果需要私有化部署，请修改.env中下面的配置&#xA;# DIFY_URL=&#39;https://[你的私有化部署地址]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ollama&lt;/p&gt; &lt;p&gt;Ollama 是一个本地化的 AI 服务，它的 API 与 OpenAI 非常接近。配置 Ollama 的过程与各种在线服务略有不同&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 执行下面命令，拷贝一份 .env.example 文件为 .env&#xA;cp .env.example .env&#xA;# 填写完善 .env 文件中的内容&#xA;OLLAMA_URL=&#39;http://127.0.0.1:11434/api/chat&#39;&#xA;OLLAMA_MODEL=&#39;qwen2.5:7b&#39;&#xA;OLLAMA_SYSTEM_MESSAGE=&#39;You are a personal assistant.&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;302.AI&lt;/p&gt; &lt;p&gt;AI聚合平台，有套壳GPT的API，也有其他模型，点这里可以&lt;a href=&#34;https://dash.302.ai/apis/list&#34;&gt;添加API&lt;/a&gt;，添加之后把API KEY配置到.env里，如下，MODEL可以自行选择配置&lt;/p&gt; &lt;pre&gt;&lt;code&gt;_302AI_API_KEY = &#39;xxxx&#39;&#xA;_302AI_MODEL= &#39;gpt-4o-mini&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;由于openai充值需要国外信用卡，流程比较繁琐，大多需要搞国外虚拟卡，手续费也都不少，该平台可以直接支付宝，算是比较省事的，注册填问卷可领1刀额度，后续充值也有手续费，用户可自行酌情选择。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;claude&lt;/p&gt; &lt;p&gt;前往 &lt;a href=&#34;https://console.anthropic.com&#34;&gt;官网&lt;/a&gt; 注册并获取API KEY后进行配置即可&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 执行下面命令，拷贝一份 .env.example 文件为 .env，如果已存在则忽略此步&#xA;cp .env.example .env&#xA;&#xA;# 编辑.env文件并添加claude相关配置&#xA;&#xA;CLAUDE_API_VERSION = &#39;2023-06-01&#39;&#xA;CLAUDE_API_KEY = &#39;你的API KEY&#39;&#xA;CLAUDE_MODEL = &#39;claude-3-5-sonnet-latest&#39;&#xA;# 系统人设&#xA;CLAUDE_SYSTEM = &#39;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;其他&lt;br&gt; （待实践）理论上使用 openAI 格式的 api，都可以使用，在 env 文件中修改对应的 api_key、model、proxy_url 即可。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API资源/平台收录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xtekky/gpt4free&#34;&gt;gpt4free&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chatanywhere/GPT_API_free&#34;&gt;chatanywhere&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;赞助商&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;!-- Header --&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34; width=&#34;100%&#34;&gt; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://gpt302.saaslink.net/hqRIfk&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wangrongding/wechat-bot/main/sponsors/302AI.png&#34; alt=&#34;Hi&#34; width=&#34;300px&#34;&gt; &lt;/a&gt; &lt;/p&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;!-- des --&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt; 302.AI是一个按需付费的一站式企业级AI应用平台，开放平台，开源生态，让AI为每个需求找到答案。 &lt;a href=&#34;https://gpt302.saaslink.net/hqRIfk&#34; target=&#34;_blank&#34;&gt;产品链接&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;目前该项目流量较大，已经上过 27 次 &lt;a href=&#34;https://github.com/trending&#34;&gt;Github Trending 榜&lt;/a&gt;，如果您的公司或者产品需要推广，可以在下方二维码处联系我，我会在项目中加入您的广告，帮助您的产品获得更多的曝光。&lt;/p&gt; &#xA;&lt;h2&gt;开发/使用&lt;/h2&gt; &#xA;&lt;p&gt;检查好自己的开发环境，确保已经安装了 &lt;code&gt;nodejs&lt;/code&gt; , 版本需要满足 Node.js &amp;gt;= v18.0 ，版本太低会导致运行报错,最好使用 LTS 版本。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;安装依赖&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;安装依赖时，大陆的朋友推荐切到 taobao 镜像源后再安装，命令：&lt;br&gt; &lt;code&gt;npm config set registry https://registry.npmmirror.com&lt;/code&gt;&lt;br&gt; 想要灵活切换，推荐使用我的工具 👉🏻 &lt;a href=&#34;https://github.com/wangrongding/prm-cli&#34;&gt;prm-cli&lt;/a&gt; 快速切换。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 安装依赖&#xA;npm i&#xA;# 推荐用 yarn 吧，npm 安装有时会遇到 wechaty 内部依赖安装失败的问题&#xA;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;运行服务&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 启动服务&#xA;npm run dev # 或者 npm run start&#xA;# 启动服务&#xA;yarn dev # 或者 yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后就可以扫码登录了，然后根据你的需求，自己修改相关逻辑文件。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://assets.fedtop.com/picbed/202403261420468.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://assets.fedtop.com/picbed/202212071315670.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;为了兼容 docker 部署，避免不必要的选择交互，新增指定服务运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 运行指定服务 （ 目前支持 ChatGPT | Kimi | Xunfei ）&#xA;npm run start -- --serve Kimi&#xA;# 交互选择服务，仍然保持原有的逻辑&#xA;npm run start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;测试&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;安装完依赖后，运行 &lt;code&gt;npm run dev&lt;/code&gt; 前，可以先测试下 openai 的接口是否可用，运行 &lt;code&gt;npm run test&lt;/code&gt; 即可。&lt;/p&gt; &#xA;&lt;p&gt;遇到 timeout 问题需要自行用魔法解决。（一般就是代理未成功，或者你的魔法服务限制了 openai api 的服务）&lt;/p&gt; &#xA;&lt;h2&gt;你要修改的&lt;/h2&gt; &#xA;&lt;p&gt;很多人说运行后不会自动收发信息，不是的哈，为了防止给每一条收到的消息都自动回复（太恐怖了），所以加了限制条件。&lt;/p&gt; &#xA;&lt;p&gt;你要把下面提到的地方自定义修改下。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;群聊，记得把机器人名称改成你自己微信号的名称，然后添加对应群聊的名称到白名单中，这样就可以自动回复群聊消息了。&lt;/li&gt; &#xA; &lt;li&gt;私聊，记得把需要自动回复的好友名称添加到白名单中，这样就可以自动回复私聊消息了。&lt;/li&gt; &#xA; &lt;li&gt;更深入的可以通过修改 &lt;code&gt;src/wechaty/sendMessage.js&lt;/code&gt; 文件来满足你自己的业务场景。（大多人反馈可能无法自动回复，也可以通过调试这个文件来排查具体原因）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;在.env 文件中修改你的配置即可，示例如下&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 白名单配置&#xA;#定义机器人的名称，这里是为了防止群聊消息太多，所以只有艾特机器人才会回复，&#xA;#这里不要把@去掉，在@后面加上你启动机器人账号的微信名称&#xA;BOT_NAME=@可乐&#xA;#联系人白名单&#xA;ALIAS_WHITELIST=微信名1,备注名2&#xA;#群聊白名单&#xA;ROOM_WHITELIST=XX群1,群2&#xA;#自动回复前缀匹配，文本消息匹配到指定前缀时，才会触发自动回复，不配或配空串情况下该配置不生效（适用于用大号，不期望每次被@或者私聊时都触发自动回复的人群）&#xA;#匹配规则：群聊消息去掉${BOT_NAME}并trim后进行前缀匹配，私聊消息trim后直接进行前缀匹配&#xA;AUTO_REPLY_PREFIX=&#39;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;可以看到，自动回复都是基于 &lt;code&gt;chatgpt&lt;/code&gt; 的，记得要开代理，或者填写代理地址。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/1c312cf4-73d8-44a1-8f36-5ea288ac0aa4&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;注意项&lt;/h2&gt; &#xA;&lt;p&gt;近期微信审查很严格，大量用户反映弹出外挂警告，由于项目内默认使用的是免费版的 web 协议，所以目前来说很容易会被微信检测到，建议使用 pad 协议，或者自行购买企业版协议，避免被封号。&lt;/p&gt; &#xA;&lt;p&gt;修改可参考： &lt;a href=&#34;https://github.com/wangrongding/wechat-bot/pull/263/files&#34;&gt;https://github.com/wangrongding/wechat-bot/pull/263/files&lt;/a&gt;&lt;br&gt; 自行购买 pad 协议渠道（wechaty 出的，购买仍需谨慎）：&lt;a href=&#34;http://pad-local.com&#34;&gt;http://pad-local.com&lt;/a&gt;&lt;br&gt; 由于底层依赖的 wechaty 本身不怎么维护了，听说是被腾讯告了，所以大家购买也要谨慎，群友分享目前 pad 协议可正常使用(但频繁登录登出也会收到警告)，最好别一次性买太久的。&lt;/p&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;p&gt;可以进交流群,一起交流探讨相关问题和解决方案，添加的时候记得备注来意。（如果项目对你有所帮助，也可以请我喝杯咖啡 ☕️ ~）&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/902b1a20-0ea0-4348-9ac1-b9eb6645223c&#34; width=&#34;180px&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangrongding/image-house/master/202502201503306.png&#34; width=&#34;180px&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;运行报错等问题&lt;/h3&gt; &#xA;&lt;p&gt;首先你需要做到以下几点：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;拉取最新代码，重新安装依赖（删除 lock 文件，删除 node_modules）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装依赖时最好不要设置 npm 镜像&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;遇到 puppeteer 安装失败设置环境变量：&lt;/p&gt; &lt;pre&gt;&lt;code&gt;# Mac&#xA;export PUPPETEER_SKIP_DOWNLOAD=&#39;true&#39;&#xA;&#xA;# Windows&#xA;SET PUPPETEER_SKIP_DOWNLOAD=&#39;true&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;确保你们的终端走了代理 (开全局代理，或者手动设置终端走代理)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 设置代理&#xA;export https_proxy=http://127.0.0.1:你的代理服务端口号;export http_proxy=http://127.0.0.1:你的代理服务端口号;export all_proxy=socks5://127.0.0.1:你的代理服务端口号&#xA;# 然后再执行 npm run test&#xA;npm run test&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangrongding/image-house/master/202403231002859.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;确保你的 openai key 有余额&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;配置好 .env 文件&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;执行 npm run test 能成功拿到 openai 的回复(设置完代理后，仍然请求不通？ 可以参考： &lt;a href=&#34;https://medium.com/@chanter2d/%E5%85%B3%E4%BA%8E%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8clash%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E7%9A%84%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86-385b2d745871&#34;&gt;https://medium.com/@chanter2d/%E5%85%B3%E4%BA%8E%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8clash%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E7%9A%84%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86-385b2d745871&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;执行 npm run dev 愉快的玩耍吧~ 🎉&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;也可以参考这条 &lt;a href=&#34;https://github.com/wangrongding/wechat-bot/issues/54#issuecomment-1347880291&#34;&gt;issue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;怎么玩？ 完成自定义修改后，群聊时，在白名单中的群，有人 @你 时会触发自动回复，私聊中，联系人白名单中的人发消息给你时会触发自动回复。&lt;/li&gt; &#xA; &lt;li&gt;运行报错？检查 node 版本是否符合，如果不符合，升级 node 版本即可，检查依赖是否安装完整，如果不完整，大陆推荐切换下 npm 镜像源，然后重新安装依赖即可。（可以用我的 &lt;a href=&#34;https://github.com/wangrongding/prm-cli&#34;&gt;prm-cli&lt;/a&gt; 工具快速切换）&lt;/li&gt; &#xA; &lt;li&gt;调整对话模式？可以修改&lt;a href=&#34;https://raw.githubusercontent.com/wangrongding/wechat-bot/main/src/openai/index.js&#34;&gt;openai/index.js&lt;/a&gt; ,具体可以根据官方文档给出的示例（非常多，自己对应调整参数即可） ：&lt;a href=&#34;https://beta.openai.com/examples&#34;&gt;https://beta.openai.com/examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用 Docker 部署&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker build . -t wechat-bot&#xA;&#xA;$ docker run -d --rm --name wechat-bot -v $(pwd)/.env:/app/.env wechat-bot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Star History Chart&lt;/h2&gt; &#xA;&lt;p&gt;该项目于 2023/2/13 日成为 Github Trending 榜首。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#wangrongding/wechat-bot&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=wangrongding/wechat-bot&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wangrongding/wechat-bot/main/LICENSE&#34;&gt;MIT&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>