<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-01T01:59:34Z</updated>
  <subtitle>Monthly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gchq/CyberChef</title>
    <updated>2022-10-01T01:59:34Z</updated>
    <id>tag:github.com,2022-10-01:/gchq/CyberChef</id>
    <link href="https://github.com/gchq/CyberChef" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CyberChef&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gchq/CyberChef/actions?query=workflow%3A%22Master+Build%2C+Test+%26+Deploy%22&#34;&gt;&lt;img src=&#34;https://github.com/gchq/CyberChef/workflows/Master%20Build,%20Test%20&amp;amp;%20Deploy/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/gchq/CyberChef/context:javascript&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/javascript/g/gchq/CyberChef.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: JavaScript&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/cyberchef&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/cyberchef.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gchq/CyberChef/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/gchq/CyberChef?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/gchq/CyberChef.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;em&gt;The Cyber Swiss Army Knife&lt;/em&gt;&lt;/h4&gt; &#xA;&lt;p&gt;CyberChef is a simple, intuitive web app for carrying out all manner of &#34;cyber&#34; operations within a web browser. These operations include simple encoding like XOR and Base64, more complex encryption like AES, DES and Blowfish, creating binary and hexdumps, compression and decompression of data, calculating hashes and checksums, IPv6 and X.509 parsing, changing character encodings, and much more.&lt;/p&gt; &#xA;&lt;p&gt;The tool is designed to enable both technical and non-technical analysts to manipulate data in complex ways without having to deal with complex tools or algorithms. It was conceived, designed, built and incrementally improved by an analyst in their 10% innovation time over several years.&lt;/p&gt; &#xA;&lt;h2&gt;Live demo&lt;/h2&gt; &#xA;&lt;p&gt;CyberChef is still under active development. As a result, it shouldn&#39;t be considered a finished product. There is still testing and bug fixing to do, new features to be added and additional documentation to write. Please contribute!&lt;/p&gt; &#xA;&lt;p&gt;Cryptographic operations in CyberChef should not be relied upon to provide security in any situation. No guarantee is offered for their correctness.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef&#34;&gt;A live demo can be found here&lt;/a&gt; - have fun!&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;There are four main areas in CyberChef:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The &lt;strong&gt;input&lt;/strong&gt; box in the top right, where you can paste, type or drag the text or file you want to operate on.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;strong&gt;output&lt;/strong&gt; box in the bottom right, where the outcome of your processing will be displayed.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;strong&gt;operations&lt;/strong&gt; list on the far left, where you can find all the operations that CyberChef is capable of in categorised lists, or by searching.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;strong&gt;recipe&lt;/strong&gt; area in the middle, where you can drag the operations that you want to use and specify arguments and options.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can use as many operations as you like in simple or complex ways. Some examples are as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/#recipe=From_Base64(&#39;A-Za-z0-9%2B/%3D&#39;,true)&amp;amp;input=VTI4Z2JHOXVaeUJoYm1RZ2RHaGhibXR6SUdadmNpQmhiR3dnZEdobElHWnBjMmd1&#34;&gt;Decode a Base64-encoded string&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/#recipe=Translate_DateTime_Format(&#39;Standard%20date%20and%20time&#39;,&#39;DD/MM/YYYY%20HH:mm:ss&#39;,&#39;UTC&#39;,&#39;dddd%20Do%20MMMM%20YYYY%20HH:mm:ss%20Z%20z&#39;,&#39;Australia/Queensland&#39;)&amp;amp;input=MTUvMDYvMjAxNSAyMDo0NTowMA&#34;&gt;Convert a date and time to a different time zone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/#recipe=Parse_IPv6_address()&amp;amp;input=MjAwMTowMDAwOjQxMzY6ZTM3ODo4MDAwOjYzYmY6M2ZmZjpmZGQy&#34;&gt;Parse a Teredo IPv6 address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/#recipe=From_Hexdump()Gunzip()&amp;amp;input=MDAwMDAwMDAgIDFmIDhiIDA4IDAwIDEyIGJjIGYzIDU3IDAwIGZmIDBkIGM3IGMxIDA5IDAwIDIwICB8Li4uLi6881cu/y7HwS4uIHwKMDAwMDAwMTAgIDA4IDA1IGQwIDU1IGZlIDA0IDJkIGQzIDA0IDFmIGNhIDhjIDQ0IDIxIDViIGZmICB8Li7QVf4uLdMuLsouRCFb/3wKMDAwMDAwMjAgIDYwIGM3IGQ3IDAzIDE2IGJlIDQwIDFmIDc4IDRhIDNmIDA5IDg5IDBiIDlhIDdkICB8YMfXLi6%2BQC54Sj8uLi4ufXwKMDAwMDAwMzAgIDRlIGM4IDRlIDZkIDA1IDFlIDAxIDhiIDRjIDI0IDAwIDAwIDAwICAgICAgICAgICB8TshObS4uLi5MJC4uLnw&#34;&gt;Convert data from a hexdump, then decompress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/#recipe=RC4(%7B&#39;option&#39;:&#39;UTF8&#39;,&#39;string&#39;:&#39;secret&#39;%7D,&#39;Hex&#39;,&#39;Hex&#39;)Disassemble_x86(&#39;64&#39;,&#39;Full%20x86%20architecture&#39;,16,0,true,true)&amp;amp;input=MjFkZGQyNTQwMTYwZWU2NWZlMDc3NzEwM2YyYTM5ZmJlNWJjYjZhYTBhYWJkNDE0ZjkwYzZjYWY1MzEyNzU0YWY3NzRiNzZiM2JiY2QxOTNjYjNkZGZkYmM1YTI2NTMzYTY4NmI1OWI4ZmVkNGQzODBkNDc0NDIwMWFlYzIwNDA1MDcxMzhlMmZlMmIzOTUwNDQ2ZGIzMWQyYmM2MjliZTRkM2YyZWIwMDQzYzI5M2Q3YTVkMjk2MmMwMGZlNmRhMzAwNzJkOGM1YTZiNGZlN2Q4NTlhMDQwZWVhZjI5OTczMzYzMDJmNWEwZWMxOQ&#34;&gt;Decrypt and disassemble shellcode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/#recipe=Fork(&#39;%5C%5Cn&#39;,&#39;%5C%5Cn&#39;,false)From_UNIX_Timestamp(&#39;Seconds%20(s)&#39;)&amp;amp;input=OTc4MzQ2ODAwCjEwMTI2NTEyMDAKMTA0NjY5NjQwMAoxMDgxMDg3MjAwCjExMTUzMDUyMDAKMTE0OTYwOTYwMA&#34;&gt;Display multiple timestamps as full dates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/#recipe=Fork(&#39;%5C%5Cn&#39;,&#39;%5C%5Cn&#39;,false)Conditional_Jump(&#39;1&#39;,false,&#39;base64&#39;,10)To_Hex(&#39;Space&#39;)Return()Label(&#39;base64&#39;)To_Base64(&#39;A-Za-z0-9%2B/%3D&#39;)&amp;amp;input=U29tZSBkYXRhIHdpdGggYSAxIGluIGl0ClNvbWUgZGF0YSB3aXRoIGEgMiBpbiBpdA&#34;&gt;Carry out different operations on data of different types&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/#recipe=Register(&#39;key%3D(%5B%5C%5Cda-f%5D*)&#39;,true,false)Find_/_Replace(%7B&#39;option&#39;:&#39;Regex&#39;,&#39;string&#39;:&#39;.*data%3D(.*)&#39;%7D,&#39;$1&#39;,true,false,true)RC4(%7B&#39;option&#39;:&#39;Hex&#39;,&#39;string&#39;:&#39;$R0&#39;%7D,&#39;Hex&#39;,&#39;Latin1&#39;)&amp;amp;input=aHR0cDovL21hbHdhcmV6LmJpei9iZWFjb24ucGhwP2tleT0wZTkzMmE1YyZkYXRhPThkYjdkNWViZTM4NjYzYTU0ZWNiYjMzNGUzZGIxMQ&#34;&gt;Use parts of the input as arguments to operations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/#recipe=Register(&#39;(.%7B32%7D)&#39;,true,false)Drop_bytes(0,32,false)AES_Decrypt(%7B&#39;option&#39;:&#39;Hex&#39;,&#39;string&#39;:&#39;1748e7179bd56570d51fa4ba287cc3e5&#39;%7D,%7B&#39;option&#39;:&#39;Hex&#39;,&#39;string&#39;:&#39;$R0&#39;%7D,&#39;CTR&#39;,&#39;Hex&#39;,&#39;Raw&#39;,%7B&#39;option&#39;:&#39;Hex&#39;,&#39;string&#39;:&#39;&#39;%7D)&amp;amp;input=NTFlMjAxZDQ2MzY5OGVmNWY3MTdmNzFmNWI0NzEyYWYyMGJlNjc0YjNiZmY1M2QzODU0NjM5NmVlNjFkYWFjNDkwOGUzMTljYTNmY2Y3MDg5YmZiNmIzOGVhOTllNzgxZDI2ZTU3N2JhOWRkNmYzMTFhMzk0MjBiODk3OGU5MzAxNGIwNDJkNDQ3MjZjYWVkZjU0MzZlYWY2NTI0MjljMGRmOTRiNTIxNjc2YzdjMmNlODEyMDk3YzI3NzI3M2M3YzcyY2Q4OWFlYzhkOWZiNGEyNzU4NmNjZjZhYTBhZWUyMjRjMzRiYTNiZmRmN2FlYjFkZGQ0Nzc2MjJiOTFlNzJjOWU3MDlhYjYwZjhkYWY3MzFlYzBjYzg1Y2UwZjc0NmZmMTU1NGE1YTNlYzI5MWNhNDBmOWU2MjlhODcyNTkyZDk4OGZkZDgzNDUzNGFiYTc5YzFhZDE2NzY3NjlhN2MwMTBiZjA0NzM5ZWNkYjY1ZDk1MzAyMzcxZDYyOWQ5ZTM3ZTdiNGEzNjFkYTQ2OGYxZWQ1MzU4OTIyZDJlYTc1MmRkMTFjMzY2ZjMwMTdiMTRhYTAxMWQyYWYwM2M0NGY5NTU3OTA5OGExNWUzY2Y5YjQ0ODZmOGZmZTljMjM5ZjM0ZGU3MTUxZjZjYTY1MDBmZTRiODUwYzNmMWMwMmU4MDFjYWYzYTI0NDY0NjE0ZTQyODAxNjE1YjhmZmFhMDdhYzgyNTE0OTNmZmRhN2RlNWRkZjMzNjg4ODBjMmI5NWIwMzBmNDFmOGYxNTA2NmFkZDA3MWE2NmNmNjBlNWY0NmYzYTIzMGQzOTdiNjUyOTYzYTIxYTUzZg&#34;&gt;Perform AES decryption, extracting the IV from the beginning of the cipher stream&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/#recipe=Magic(3,false,false)&amp;amp;input=V1VhZ3dzaWFlNm1QOGdOdENDTFVGcENwQ0IyNlJtQkRvREQ4UGFjZEFtekF6QlZqa0syUXN0RlhhS2hwQzZpVVM3UkhxWHJKdEZpc29SU2dvSjR3aGptMWFybTg2NHFhTnE0UmNmVW1MSHJjc0FhWmM1VFhDWWlmTmRnUzgzZ0RlZWpHWDQ2Z2FpTXl1QlY2RXNrSHQxc2NnSjg4eDJ0TlNvdFFEd2JHWTFtbUNvYjJBUkdGdkNLWU5xaU45aXBNcTFaVTFtZ2tkYk51R2NiNzZhUnRZV2hDR1VjOGc5M1VKdWRoYjhodHNoZVpud1RwZ3FoeDgzU1ZKU1pYTVhVakpUMnptcEM3dVhXdHVtcW9rYmRTaTg4WXRrV0RBYzFUb291aDJvSDRENGRkbU5LSldVRHBNd21uZ1VtSzE0eHdtb21jY1BRRTloTTE3MkFQblNxd3hkS1ExNzJSa2NBc3lzbm1qNWdHdFJtVk5OaDJzMzU5d3I2bVMyUVJQ&#34;&gt;Automagically detect several layers of nested encoding&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Drag and drop &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Operations can be dragged in and out of the recipe list, or reorganised.&lt;/li&gt; &#xA;   &lt;li&gt;Files up to 2GB can be dragged over the input box to load them directly into the browser.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Auto Bake &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Whenever you modify the input or the recipe, CyberChef will automatically &#34;bake&#34; for you and produce the output immediately.&lt;/li&gt; &#xA;   &lt;li&gt;This can be turned off and operated manually if it is affecting performance (if the input is very large, for instance).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Automated encoding detection &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;CyberChef uses &lt;a href=&#34;https://github.com/gchq/CyberChef/wiki/Automatic-detection-of-encoded-data-using-CyberChef-Magic&#34;&gt;a number of techniques&lt;/a&gt; to attempt to automatically detect which encodings your data is under. If it finds a suitable operation that make sense of your data, it displays the &#39;magic&#39; icon in the Output field which you can click to decode your data.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Breakpoints &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can set breakpoints on any operation in your recipe to pause execution before running it.&lt;/li&gt; &#xA;   &lt;li&gt;You can also step through the recipe one operation at a time to see what the data looks like at each stage.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Save and load recipes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you come up with an awesome recipe that you know you’ll want to use again, just click &#34;Save recipe&#34; and add it to your local storage. It&#39;ll be waiting for you next time you visit CyberChef.&lt;/li&gt; &#xA;   &lt;li&gt;You can also copy the URL, which includes your recipe and input, to easily share it with others.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Search &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you know the name of the operation you want or a word associated with it, start typing it into the search field and any matching operations will immediately be shown.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Highlighting &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When you highlight text in the input or output, the offset and length values will be displayed and, if possible, the corresponding data will be highlighted in the output or input respectively (example: &lt;a href=&#34;https://gchq.github.io/CyberChef/#recipe=XOR(%7B&#39;option&#39;:&#39;Hex&#39;,&#39;string&#39;:&#39;3a&#39;%7D,&#39;Standard&#39;,false)To_Hexdump(16,false,false)&amp;amp;input=VGhlIGFuc3dlciB0byB0aGUgdWx0aW1hdGUgcXVlc3Rpb24gb2YgbGlmZSwgdGhlIFVuaXZlcnNlLCBhbmQgZXZlcnl0aGluZyBpcyA0Mi4&#34;&gt;highlight the word &#39;question&#39; in the input to see where it appears in the output&lt;/a&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Save to file and load from file &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can save the output to a file at any time or load a file by dragging and dropping it into the input field. Files up to around 2GB are supported (depending on your browser), however, some operations may take a very long time to run over this much data.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;CyberChef is entirely client-side &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It should be noted that none of your recipe configuration or input (either text or files) is ever sent to the CyberChef web server - all processing is carried out within your browser, on your own computer.&lt;/li&gt; &#xA;   &lt;li&gt;Due to this feature, CyberChef can be downloaded and run locally. You can use the link in the top left corner of the app to download a full copy of CyberChef and drop it into a virtual machine, share it with other people, or host it in a closed network.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deep linking&lt;/h2&gt; &#xA;&lt;p&gt;By manipulating CyberChef&#39;s URL hash, you can change the initial settings with which the page opens. The format is &lt;code&gt;https://gchq.github.io/CyberChef/#recipe=Operation()&amp;amp;input=...&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Supported arguments are &lt;code&gt;recipe&lt;/code&gt;, &lt;code&gt;input&lt;/code&gt; (encoded in Base64), and &lt;code&gt;theme&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Browser support&lt;/h2&gt; &#xA;&lt;p&gt;CyberChef is built to support&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Google Chrome 50+&lt;/li&gt; &#xA; &lt;li&gt;Mozilla Firefox 38+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Node.js support&lt;/h2&gt; &#xA;&lt;p&gt;CyberChef is built to fully support Node.js &lt;code&gt;v16&lt;/code&gt;. For more information, see the Node API page in the project &lt;a href=&#34;https://github.com/gchq/CyberChef/wiki&#34;&gt;wiki pages&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributing a new operation to CyberChef is super easy! The quickstart script will walk you through the process. If you can write basic JavaScript, you can write a CyberChef operation.&lt;/p&gt; &#xA;&lt;p&gt;An installation walkthrough, how-to guides for adding new operations and themes, descriptions of the repository structure, available data types and coding conventions can all be found in the project &lt;a href=&#34;https://github.com/gchq/CyberChef/wiki&#34;&gt;wiki pages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Push your changes to your fork.&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request. If you are doing this for the first time, you will be prompted to sign the &lt;a href=&#34;https://cla-assistant.io/gchq/CyberChef&#34;&gt;GCHQ Contributor Licence Agreement&lt;/a&gt; via the CLA assistant on the pull request. This will also ask whether you are happy for GCHQ to contact you about a token of thanks for your contribution, or about job opportunities at GCHQ.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Licencing&lt;/h2&gt; &#xA;&lt;p&gt;CyberChef is released under the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache 2.0 Licence&lt;/a&gt; and is covered by &lt;a href=&#34;https://www.nationalarchives.gov.uk/information-management/re-using-public-sector-information/uk-government-licensing-framework/crown-copyright/&#34;&gt;Crown Copyright&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>louislam/uptime-kuma</title>
    <updated>2022-10-01T01:59:34Z</updated>
    <id>tag:github.com,2022-10-01:/louislam/uptime-kuma</id>
    <link href="https://github.com/louislam/uptime-kuma" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fancy self-hosted monitoring tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Uptime Kuma&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/louislam/uptime-kuma&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/louislam/uptime-kuma&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://hub.docker.com/r/louislam/uptime-kuma&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/louislam/uptime-kuma&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://hub.docker.com/r/louislam/uptime-kuma&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/louislam/uptime-kuma&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/louislam/uptime-kuma&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://opencollective.com/uptime-kuma&#34;&gt;&lt;img src=&#34;https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;amp;color=brightgreen&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/louislam&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors&#34; alt=&#34;GitHub Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34; width=&#34;100%&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/louislam/uptime-kuma/master/public/icon.svg?sanitize=true&#34; width=&#34;128&#34; alt=&#34;&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;It is a self-hosted monitoring tool like &#34;Uptime Robot&#34;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://uptime.kuma.pet/img/dark.jpg&#34; width=&#34;700&#34; alt=&#34;&#34;&gt; &#xA;&lt;h2&gt;🥔 Live Demo&lt;/h2&gt; &#xA;&lt;p&gt;Try it!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://demo.uptime.kuma.pet&#34;&gt;https://demo.uptime.kuma.pet&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is a temporary live demo, all data will be deleted after 10 minutes. The server is located in Tokyo, so if you live far from there, it may affect your experience. I suggest that you should install and try it out for the best demo experience.&lt;/p&gt; &#xA;&lt;p&gt;VPS is sponsored by Uptime Kuma sponsors on &lt;a href=&#34;https://opencollective.com/uptime-kuma&#34;&gt;Open Collective&lt;/a&gt;! Thank you so much!&lt;/p&gt; &#xA;&lt;h2&gt;⭐ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / Ping / DNS Record / Push / Steam Game Server / Docker Containers.&lt;/li&gt; &#xA; &lt;li&gt;Fancy, Reactive, Fast UI/UX.&lt;/li&gt; &#xA; &lt;li&gt;Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and &lt;a href=&#34;https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications&#34;&gt;90+ notification services, click here for the full list&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;20 second intervals.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/louislam/uptime-kuma/tree/master/src/languages&#34;&gt;Multi Languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Multiple Status Pages&lt;/li&gt; &#xA; &lt;li&gt;Map Status Page to Domain&lt;/li&gt; &#xA; &lt;li&gt;Ping Chart&lt;/li&gt; &#xA; &lt;li&gt;Certificate Info&lt;/li&gt; &#xA; &lt;li&gt;Proxy Support&lt;/li&gt; &#xA; &lt;li&gt;2FA available&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔧 How to Install&lt;/h2&gt; &#xA;&lt;h3&gt;🐳 Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;⚠️ Please use a &lt;strong&gt;local volume&lt;/strong&gt; only. Other types such as NFS are not supported.&lt;/p&gt; &#xA;&lt;p&gt;Browse to &lt;a href=&#34;http://localhost:3001&#34;&gt;http://localhost:3001&lt;/a&gt; after starting.&lt;/p&gt; &#xA;&lt;h3&gt;💪🏻 Non-Docker&lt;/h3&gt; &#xA;&lt;p&gt;Required Tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;Node.js&lt;/a&gt; &amp;gt;= 14&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pm2.keymetrics.io/&#34;&gt;pm2&lt;/a&gt; - For run in background&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Update your npm to the latest version&#xA;npm install npm -g&#xA;&#xA;git clone https://github.com/louislam/uptime-kuma.git&#xA;cd uptime-kuma&#xA;npm run setup&#xA;&#xA;# Option 1. Try it&#xA;node server/server.js&#xA;&#xA;# (Recommended) Option 2. Run in background using PM2&#xA;# Install PM2 if you don&#39;t have it: &#xA;npm install pm2 -g &amp;amp;&amp;amp; pm2 install pm2-logrotate&#xA;&#xA;# Start Server&#xA;pm2 start server/server.js --name uptime-kuma&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Browse to &lt;a href=&#34;http://localhost:3001&#34;&gt;http://localhost:3001&lt;/a&gt; after starting.&lt;/p&gt; &#xA;&lt;p&gt;More useful PM2 Commands&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# If you want to see the current console output&#xA;pm2 monit&#xA;&#xA;# If you want to add it to startup&#xA;pm2 save &amp;amp;&amp;amp; pm2 startup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Advanced Installation&lt;/h3&gt; &#xA;&lt;p&gt;If you need more options or need to browse via a reverse proxy, please read:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&#34;&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🆙 How to Update&lt;/h2&gt; &#xA;&lt;p&gt;Please read:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&#34;&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🆕 What&#39;s Next?&lt;/h2&gt; &#xA;&lt;p&gt;I will mark requests/issues to the next milestone.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/louislam/uptime-kuma/milestones&#34;&gt;https://github.com/louislam/uptime-kuma/milestones&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Project Plan:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/users/louislam/projects/4/views/1&#34;&gt;https://github.com/users/louislam/projects/4/views/1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;❤️ Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)&lt;/p&gt; &#xA;&lt;img src=&#34;https://uptime.kuma.pet/sponsors?v=6&#34; alt&gt; &#xA;&lt;h2&gt;🖼 More Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;Light Mode:&lt;/p&gt; &#xA;&lt;img src=&#34;https://uptime.kuma.pet/img/light.jpg&#34; width=&#34;512&#34; alt=&#34;&#34;&gt; &#xA;&lt;p&gt;Status Page:&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png&#34; width=&#34;512&#34; alt=&#34;&#34;&gt; &#xA;&lt;p&gt;Settings Page:&lt;/p&gt; &#xA;&lt;img src=&#34;https://louislam.net/uptimekuma/2.jpg&#34; width=&#34;400&#34; alt=&#34;&#34;&gt; &#xA;&lt;p&gt;Telegram Notification Sample:&lt;/p&gt; &#xA;&lt;img src=&#34;https://louislam.net/uptimekuma/3.jpg&#34; width=&#34;400&#34; alt=&#34;&#34;&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I was looking for a self-hosted monitoring tool like &#34;Uptime Robot&#34;, but it is hard to find a suitable one. One of the close ones is statping. Unfortunately, it is not stable and no longer maintained.&lt;/li&gt; &#xA; &lt;li&gt;Want to build a fancy UI.&lt;/li&gt; &#xA; &lt;li&gt;Learn Vue 3 and vite.js.&lt;/li&gt; &#xA; &lt;li&gt;Show the power of Bootstrap 5.&lt;/li&gt; &#xA; &lt;li&gt;Try to use WebSocket with SPA instead of REST API.&lt;/li&gt; &#xA; &lt;li&gt;Deploy my first Docker image to Docker Hub.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you love this project, please consider giving me a ⭐.&lt;/p&gt; &#xA;&lt;h2&gt;🗣️ Discussion&lt;/h2&gt; &#xA;&lt;h3&gt;Issues Page&lt;/h3&gt; &#xA;&lt;p&gt;You can discuss or ask for help in &lt;a href=&#34;https://github.com/louislam/uptime-kuma/issues&#34;&gt;issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Subreddit&lt;/h3&gt; &#xA;&lt;p&gt;My Reddit account: &lt;a href=&#34;https://reddit.com/u/louislamlam&#34;&gt;u/louislamlam&lt;/a&gt;.&lt;br&gt; You can mention me if you ask a question on Reddit. &lt;a href=&#34;https://www.reddit.com/r/UptimeKuma/&#34;&gt;r/Uptime kuma&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;h3&gt;Test Pull Requests&lt;/h3&gt; &#xA;&lt;p&gt;There are a lot of pull requests right now, but I don&#39;t have time to test them all.&lt;/p&gt; &#xA;&lt;p&gt;If you want to help, you can check this: &lt;a href=&#34;https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests&#34;&gt;https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Test Beta Version&lt;/h3&gt; &#xA;&lt;p&gt;Check out the latest beta release here: &lt;a href=&#34;https://github.com/louislam/uptime-kuma/releases&#34;&gt;https://github.com/louislam/uptime-kuma/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bug Reports / Feature Requests&lt;/h3&gt; &#xA;&lt;p&gt;If you want to report a bug or request a new feature, feel free to open a &lt;a href=&#34;https://github.com/louislam/uptime-kuma/issues&#34;&gt;new issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Translations&lt;/h3&gt; &#xA;&lt;p&gt;If you want to translate Uptime Kuma into your language, please read: &lt;a href=&#34;https://github.com/louislam/uptime-kuma/tree/master/src/languages&#34;&gt;https://github.com/louislam/uptime-kuma/tree/master/src/languages&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Feel free to correct my grammar in this README, source code, or wiki, as my mother language is not English and my grammar is not that great.&lt;/p&gt; &#xA;&lt;h3&gt;Create Pull Requests&lt;/h3&gt; &#xA;&lt;p&gt;If you want to modify Uptime Kuma, please read this guide and follow the rules here: &lt;a href=&#34;https://github.com/louislam/uptime-kuma/raw/master/CONTRIBUTING.md&#34;&gt;https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mrdoob/three.js</title>
    <updated>2022-10-01T01:59:34Z</updated>
    <id>tag:github.com,2022-10-01:/mrdoob/three.js</id>
    <link href="https://github.com/mrdoob/three.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JavaScript 3D Library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/three&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/three&#34; alt=&#34;NPM Package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bundlephobia.com/result?p=three&#34;&gt;&lt;img src=&#34;https://badgen.net/bundlephobia/minzip/three&#34; alt=&#34;Build Size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmtrends.com/three&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dw/three&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://deepscan.io/dashboard#view=project&amp;amp;tid=16600&amp;amp;pid=19901&amp;amp;bid=525701&#34;&gt;&lt;img src=&#34;https://deepscan.io/api/teams/16600/projects/19901/branches/525701/badge/grade.svg?sanitize=true&#34; alt=&#34;DeepScan&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/56GBJwAnUS&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/685241246557667386&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; &#xA;&lt;p&gt;The aim of the project is to create an easy to use, lightweight, cross-browser, general purpose 3D library. The current builds only include a WebGL renderer but WebGPU (experimental), SVG and CSS3D renderers are also available in the examples.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://threejs.org/examples/&#34;&gt;Examples&lt;/a&gt; — &lt;a href=&#34;https://threejs.org/docs/&#34;&gt;Docs&lt;/a&gt; — &lt;a href=&#34;https://threejs.org/manual/&#34;&gt;Manual&lt;/a&gt; — &lt;a href=&#34;https://github.com/mrdoob/three.js/wiki&#34;&gt;Wiki&lt;/a&gt; — &lt;a href=&#34;https://github.com/mrdoob/three.js/wiki/Migration-Guide&#34;&gt;Migrating&lt;/a&gt; — &lt;a href=&#34;https://stackoverflow.com/questions/tagged/three.js&#34;&gt;Questions&lt;/a&gt; — &lt;a href=&#34;https://discourse.threejs.org/&#34;&gt;Forum&lt;/a&gt; — &lt;a href=&#34;https://discord.gg/56GBJwAnUS&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import * as THREE from &#39;three&#39;;&#xA;&#xA;// init&#xA;&#xA;const camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );&#xA;camera.position.z = 1;&#xA;&#xA;const scene = new THREE.Scene();&#xA;&#xA;const geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );&#xA;const material = new THREE.MeshNormalMaterial();&#xA;&#xA;const mesh = new THREE.Mesh( geometry, material );&#xA;scene.add( mesh );&#xA;&#xA;const renderer = new THREE.WebGLRenderer( { antialias: true } );&#xA;renderer.setSize( window.innerWidth, window.innerHeight );&#xA;renderer.setAnimationLoop( animation );&#xA;document.body.appendChild( renderer.domElement );&#xA;&#xA;// animation&#xA;&#xA;function animation( time ) {&#xA;&#xA;&#x9;mesh.rotation.x = time / 2000;&#xA;&#x9;mesh.rotation.y = time / 1000;&#xA;&#xA;&#x9;renderer.render( scene, camera );&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If everything went well, you should see &lt;a href=&#34;https://jsfiddle.net/7u84j6kp/&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Cloning this repository&lt;/h3&gt; &#xA;&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don&#39;t need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Change log&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mrdoob/three.js/releases&#34;&gt;Releases&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>