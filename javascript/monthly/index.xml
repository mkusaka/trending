<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-01T01:52:05Z</updated>
  <subtitle>Monthly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>anuraghazra/github-readme-stats</title>
    <updated>2024-08-01T01:52:05Z</updated>
    <id>tag:github.com,2024-08-01:/anuraghazra/github-readme-stats</id>
    <link href="https://github.com/anuraghazra/github-readme-stats" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚡ Dynamically generated stats for your github readmes&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;100px&#34; src=&#34;https://res.cloudinary.com/anuraghazra/image/upload/v1594908242/logo_ccswme.svg?sanitize=true&#34; align=&#34;center&#34; alt=&#34;GitHub Readme Stats&#34;&gt; &lt;/p&gt;&#xA;&lt;h2 align=&#34;center&#34;&gt;GitHub Readme Stats&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Get dynamically generated GitHub stats on your READMEs!&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/actions&#34;&gt; &lt;img alt=&#34;Tests Passing&#34; src=&#34;https://github.com/anuraghazra/github-readme-stats/workflows/Test/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/graphs/contributors&#34;&gt; &lt;img alt=&#34;GitHub Contributors&#34; src=&#34;https://img.shields.io/github/contributors/anuraghazra/github-readme-stats&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/anuraghazra/github-readme-stats&#34;&gt; &lt;img alt=&#34;Tests Coverage&#34; src=&#34;https://codecov.io/gh/anuraghazra/github-readme-stats/branch/master/graph/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/issues&#34;&gt; &lt;img alt=&#34;Issues&#34; src=&#34;https://img.shields.io/github/issues/anuraghazra/github-readme-stats?color=0088ff&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/pulls&#34;&gt; &lt;img alt=&#34;GitHub pull requests&#34; src=&#34;https://img.shields.io/github/issues-pr/anuraghazra/github-readme-stats?color=0088ff&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://securityscorecards.dev/viewer/?uri=github.com/anuraghazra/github-readme-stats&#34;&gt; &lt;img alt=&#34;OpenSSF Scorecard&#34; src=&#34;https://api.securityscorecards.dev/projects/github.com/anuraghazra/github-readme-stats/badge&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://vercel.com?utm%5C_source=github%5C_readme%5C_stats%5C_team%5C&amp;amp;utm%5C_campaign=oss&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#all-demos&#34;&gt;View Demo&lt;/a&gt; · &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.yml&#34;&gt;Report Bug&lt;/a&gt; · &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.yml&#34;&gt;Request Feature&lt;/a&gt; · &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/discussions/1770&#34;&gt;FAQ&lt;/a&gt; · &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/discussions/new?category=q-a&#34;&gt;Ask Question&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_fr.md&#34;&gt;Français &lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_cn.md&#34;&gt;简体中文&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_es.md&#34;&gt;Español&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_de.md&#34;&gt;Deutsch&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_ja.md&#34;&gt;日本語&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_pt-BR.md&#34;&gt;Português Brasileiro&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_it.md&#34;&gt;Italiano&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_kr.md&#34;&gt;한국어&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_nl.md&#34;&gt;Nederlands&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_np.md&#34;&gt;नेपाली&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_tr.md&#34;&gt;Türkçe&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Please note that documentation translations may be outdated; try to use English documentation if possible.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Love the project? Please consider &lt;a href=&#34;https://www.paypal.me/anuraghazra&#34;&gt;donating&lt;/a&gt; to help it improve!&lt;/p&gt; &#xA;&lt;a href=&#34;https://indiafightscorona.giveindia.org&#34;&gt; &lt;img src=&#34;https://cfstatic.give.do/logo.png&#34; alt=&#34;Give india logo&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Are you considering supporting the project by donating to me? Please DO NOT!!!&lt;/p&gt; &#xA;&lt;img src=&#34;https://cfstatic.give.do/910ede2a-7892-43fe-8c8a-dea45e96d950.webp&#34; alt=&#34;Picture of Coromandel Express train tragedy&#34; width=&#34;35%&#34;&gt; &#xA;&lt;p&gt;India has recently suffered one of the most devastating train accidents, and your help will be immensely valuable for the people who were affected by this tragedy.&lt;/p&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;https://give.do/fundraisers/stand-beside-the-victims-of-the-coromandel-express-train-tragedy-in-odisha-donate-now&#34;&gt;this link&lt;/a&gt; and make a small donation to help the people in need. A small donation goes a long way. &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features &#xA; &lt;!-- omit in toc --&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-stats-card&#34;&gt;GitHub Stats Card&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hiding-individual-stats&#34;&gt;Hiding individual stats&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-additional-individual-stats&#34;&gt;Showing additional individual stats&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-icons&#34;&gt;Showing icons&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes&#34;&gt;Themes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&#34;&gt;Customization&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-extra-pins&#34;&gt;GitHub Extra Pins&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-gist-pins&#34;&gt;GitHub Gist Pins&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage-1&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-1&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#top-languages-card&#34;&gt;Top Languages Card&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage-2&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm&#34;&gt;Language stats algorithm&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#exclude-individual-repositories&#34;&gt;Exclude individual repositories&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-individual-languages&#34;&gt;Hide individual languages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#show-more-languages&#34;&gt;Show more languages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#compact-language-card-layout&#34;&gt;Compact Language Card Layout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#donut-chart-language-card-layout&#34;&gt;Donut Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#donut-vertical-chart-language-card-layout&#34;&gt;Donut Vertical Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#pie-chart-language-card-layout&#34;&gt;Pie Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-progress-bars&#34;&gt;Hide Progress Bars&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-2&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#wakatime-stats-card&#34;&gt;WakaTime Stats Card&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-3&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#all-demos&#34;&gt;All Demos&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#quick-tip-align-the-cards&#34;&gt;Quick Tip (Align The Cards)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own&#34;&gt;Deploy on your own&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#on-vercel&#34;&gt;On Vercel&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#film_projector-check-out-step-by-step-video-tutorial-by-codestackr&#34;&gt;&lt;span&gt;📽&lt;/span&gt; Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#on-other-platforms&#34;&gt;On other platforms&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections&#34;&gt;Disable rate limit protections&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#keep-your-fork-up-to-date&#34;&gt;Keep your fork up to date&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#sparkling_heart-support-the-project&#34;&gt;&lt;span&gt;💖&lt;/span&gt; Support the project&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Important Notices &#xA; &lt;!-- omit in toc --&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;br&gt; Since the GitHub API only &lt;a href=&#34;https://docs.github.com/en/graphql/overview/resource-limitations&#34;&gt;allows 5k requests per hour per user account&lt;/a&gt;, the public Vercel instance hosted on &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter (see &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/issues/1471&#34;&gt;#1471&lt;/a&gt;). We use caching to prevent this from happening (see &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats#common-options&#34;&gt;https://github.com/anuraghazra/github-readme-stats#common-options&lt;/a&gt;). You can turn off these rate limit protections by deploying &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections&#34;&gt;your own Vercel instance&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;img alt=&#34;Uptime Badge&#34; src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fgithub-readme-stats-git-monitoring-github-readme-stats-team.vercel.app%2Fapi%2Fstatus%2Fup%3Ftype%3Dshields&#34;&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;br&gt; We&#39;re a small team, and to prioritize, we rely on upvotes &lt;span&gt;👍&lt;/span&gt;. We use the Top Issues dashboard for tracking community demand (see &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/issues/1935&#34;&gt;#1935&lt;/a&gt;). Do not hesitate to upvote the issues and pull requests you are interested in. We will work on the most upvoted first.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;GitHub Stats Card&lt;/h1&gt; &#xA;&lt;p&gt;Copy and paste this into your markdown, and that&#39;s it. Simple!&lt;/p&gt; &#xA;&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your GitHub username.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; By default, the stats card only shows statistics like stars, commits, and pull requests from public repositories. To show private statistics on the stats card, you should &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own&#34;&gt;deploy your own instance&lt;/a&gt; using your own GitHub API token.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; Available ranks are S (top 1%), A+ (12.5%), A (25%), A- (37.5%), B+ (50%), B (62.5%), B- (75%), C+ (87.5%) and C (everyone). This ranking scheme is based on the &lt;a href=&#34;https://wikipedia.org/wiki/Academic_grading_in_Japan&#34;&gt;Japanese academic grading&lt;/a&gt; system. The global percentile is calculated as a weighted sum of percentiles for each statistic (number of commits, pull requests, reviews, issues, stars, and followers), based on the cumulative distribution function of the &lt;a href=&#34;https://wikipedia.org/wiki/exponential_distribution&#34;&gt;exponential&lt;/a&gt; and the &lt;a href=&#34;https://wikipedia.org/wiki/Log-normal_distribution&#34;&gt;log-normal&lt;/a&gt; distributions. The implementation can be investigated at &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/raw/master/src/calculateRank.js&#34;&gt;src/calculateRank.js&lt;/a&gt;. The circle around the rank shows 100 minus the global percentile.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Hiding individual stats&lt;/h3&gt; &#xA;&lt;p&gt;You can pass a query parameter &lt;code&gt;&amp;amp;hide=&lt;/code&gt; to hide any specific stats with comma-separated values.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Options: &lt;code&gt;&amp;amp;hide=stars,commits,prs,issues,contribs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,prs)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Showing additional individual stats&lt;/h3&gt; &#xA;&lt;p&gt;You can pass a query parameter &lt;code&gt;&amp;amp;show=&lt;/code&gt; to show any specific additional stats with comma-separated values.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Options: &lt;code&gt;&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Showing icons&lt;/h3&gt; &#xA;&lt;p&gt;To enable icons, you can pass &lt;code&gt;&amp;amp;show_icons=true&lt;/code&gt; in the query param, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Themes&lt;/h3&gt; &#xA;&lt;p&gt;With inbuilt themes, you can customize the look of the card without doing any &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&#34;&gt;manual customization&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;&amp;amp;theme=THEME_NAME&lt;/code&gt; parameter like so :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;All inbuilt themes&lt;/h4&gt; &#xA;&lt;p&gt;GitHub Readme Stats comes with several built-in themes (e.g. &lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;radical&lt;/code&gt;, &lt;code&gt;merko&lt;/code&gt;, &lt;code&gt;gruvbox&lt;/code&gt;, &lt;code&gt;tokyonight&lt;/code&gt;, &lt;code&gt;onedark&lt;/code&gt;, &lt;code&gt;cobalt&lt;/code&gt;, &lt;code&gt;synthwave&lt;/code&gt;, &lt;code&gt;highcontrast&lt;/code&gt;, &lt;code&gt;dracula&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;img src=&#34;https://res.cloudinary.com/anuraghazra/image/upload/v1595174536/grs-themes_l4ynja.png&#34; alt=&#34;GitHub Readme Stats Themes&#34; width=&#34;600px&#34;&gt; &#xA;&lt;p&gt;You can look at a preview for &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md&#34;&gt;all available themes&lt;/a&gt; or checkout the &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/index.js&#34;&gt;theme config file&lt;/a&gt;. Please note that we paused the addition of new themes to decrease maintenance efforts; all pull requests related to new themes will be closed.&lt;/p&gt; &#xA;&lt;h4&gt;Responsive Card Theme&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats#responsive-card-theme%23gh-dark-mode-only&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only&#34; alt=&#34;Anurag&#39;s GitHub stats-Dark&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats#responsive-card-theme%23gh-light-mode-only&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only&#34; alt=&#34;Anurag&#39;s GitHub stats-Light&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Since GitHub will re-upload the cards and serve them from their &lt;a href=&#34;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/about-anonymized-urls&#34;&gt;CDN&lt;/a&gt;, we can not infer the browser/GitHub theme on the server side. There are, however, four methods you can use to create dynamics themes on the client side.&lt;/p&gt; &#xA;&lt;h5&gt;Use the transparent theme&lt;/h5&gt; &#xA;&lt;p&gt;We have included a &lt;code&gt;transparent&lt;/code&gt; theme that has a transparent background. This theme is optimized to look good on GitHub&#39;s dark and light default themes. You can enable this theme using the &lt;code&gt;&amp;amp;theme=transparent&lt;/code&gt; parameter like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=transparent)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=transparent&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Add transparent alpha channel to a themes bg_color&lt;/h5&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;bg_color&lt;/code&gt; parameter to make any of &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md&#34;&gt;the available themes&lt;/a&gt; transparent. This is done by setting the &lt;code&gt;bg_color&lt;/code&gt; to a color with a transparent alpha channel (i.e. &lt;code&gt;bg_color=00000000&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;bg_color=00000000)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;bg_color=00000000&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Use GitHub&#39;s theme context tag&lt;/h5&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://github.blog/changelog/2021-11-24-specify-theme-context-for-images-in-markdown/&#34;&gt;GitHub&#39;s theme context&lt;/a&gt; tags to switch the theme based on the user GitHub theme automatically. This is done by appending &lt;code&gt;#gh-dark-mode-only&lt;/code&gt; or &lt;code&gt;#gh-light-mode-only&lt;/code&gt; to the end of an image URL. This tag will define whether the image specified in the markdown is only shown to viewers using a light or a dark GitHub theme:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![Anurag&#39;s GitHub stats-Dark](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only)&#xA;[![Anurag&#39;s GitHub stats-Light](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only&#34; alt=&#34;Anurag&#39;s GitHub stats-Dark&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only&#34; alt=&#34;Anurag&#39;s GitHub stats-Light&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Use GitHub&#39;s new media feature&lt;/h5&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://github.blog/changelog/2022-05-19-specify-theme-context-for-images-in-markdown-beta/&#34;&gt;GitHub&#39;s new media feature&lt;/a&gt; in HTML to specify whether to display images for light or dark themes. This is done using the HTML &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element in combination with the &lt;code&gt;prefers-color-scheme&lt;/code&gt; media feature.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;picture&amp;gt;&#xA;  &amp;lt;source&#xA;    srcset=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark&#34;&#xA;    media=&#34;(prefers-color-scheme: dark)&#34;&#xA;  /&amp;gt;&#xA;  &amp;lt;source&#xA;    srcset=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&#34;&#xA;    media=&#34;(prefers-color-scheme: light), (prefers-color-scheme: no-preference)&#34;&#xA;  /&amp;gt;&#xA;  &amp;lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&#34; /&amp;gt;&#xA;&amp;lt;/picture&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source srcset=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark&#34; media=&#34;(prefers-color-scheme: dark)&#34;&gt; &#xA;  &lt;source srcset=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&#34; media=&#34;(prefers-color-scheme: light), (prefers-color-scheme: no-preference)&#34;&gt; &#xA;  &lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Customization&lt;/h3&gt; &#xA;&lt;p&gt;You can customize the appearance of all your cards however you wish with URL parameters.&lt;/p&gt; &#xA;&lt;h4&gt;Common Options&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;title_color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Card&#39;s title color.&lt;/td&gt; &#xA;   &lt;td&gt;string (hex color)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2f80ed&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;text_color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Body text color.&lt;/td&gt; &#xA;   &lt;td&gt;string (hex color)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;434d58&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;icon_color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Icons color if available.&lt;/td&gt; &#xA;   &lt;td&gt;string (hex color)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;4c71f2&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;border_color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Card&#39;s border color. Does not apply when &lt;code&gt;hide_border&lt;/code&gt; is enabled.&lt;/td&gt; &#xA;   &lt;td&gt;string (hex color)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;e4e2e2&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;bg_color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Card&#39;s background color.&lt;/td&gt; &#xA;   &lt;td&gt;string (hex color or a gradient in the form of &lt;em&gt;angle,start,end&lt;/em&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;fffefe&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;hide_border&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hides the card&#39;s border.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Name of the theme, choose from &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md&#34;&gt;all available themes&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;enum&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cache_seconds&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets the cache header manually (min: 21600, max: 86400).&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;21600&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets the language in the card, you can check full list of available locales &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#available-locales&#34;&gt;here&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;enum&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;border_radius&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Corner rounding on the card.&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;4.5&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; We use caching to decrease the load on our servers (see &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425&#34;&gt;https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425&lt;/a&gt;). Our cards have a default cache of 6 hours (21600 seconds). Also, note that the cache is clamped to a minimum of 6 hours and a maximum of 24 hours. If you want the data on your statistics card to be updated more often you can &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own&#34;&gt;deploy your own instance&lt;/a&gt; and set &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections&#34;&gt;environment variable&lt;/a&gt; &lt;code&gt;CACHE_SECONDS&lt;/code&gt; to a value of your choosing.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h5&gt;Gradient in bg_color&lt;/h5&gt; &#xA;&lt;p&gt;You can provide multiple comma-separated values in the bg_color option to render a gradient with the following format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;amp;bg_color=DEG,COLOR1,COLOR2,COLOR3...COLOR10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Available locales&lt;/h5&gt; &#xA;&lt;p&gt;Here is a list of all available locales:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Code&lt;/th&gt; &#xA;       &lt;th&gt;Locale&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;cn&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Chinese&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;zh-tw&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Chinese (Taiwan)&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;ar&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Arabic&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;cs&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Czech&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;de&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;German&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;English&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;bn&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Bengali&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;es&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Spanish&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;fr&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;French&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;hu&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Hungarian&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &lt;/td&gt;&#xA;   &lt;td&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Code&lt;/th&gt; &#xA;       &lt;th&gt;Locale&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;it&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Italian&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;ja&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Japanese&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;kr&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Korean&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;nl&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Dutch&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;pt-pt&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Portuguese (Portugal)&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;pt-br&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Portuguese (Brazil)&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;np&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Nepali&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;el&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Greek&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;ru&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Russian&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;uk-ua&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Ukrainian&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &lt;/td&gt;&#xA;   &lt;td&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Code&lt;/th&gt; &#xA;       &lt;th&gt;Locale&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Indonesian&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;ml&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Malayalam&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;my&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Burmese&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;sk&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Slovak&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;tr&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Turkish&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;pl&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Polish&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;uz&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Uzbek&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;vi&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Vietnamese&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;se&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Swedish&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;If we don&#39;t support your language, please consider contributing! You can find more information about how to do it in our &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/CONTRIBUTING.md#translations-contribution&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Stats Card Exclusive Options&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hides the &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hiding-individual-stats&#34;&gt;specified items&lt;/a&gt; from stats.&lt;/td&gt; &#xA;   &lt;td&gt;string (comma-separated values)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hides the title of your stats card.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets the card&#39;s width manually.&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;500px (approx.)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;hide_rank&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hides the rank and automatically resizes the card width.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;rank_icon&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Shows alternative rank icon (i.e. &lt;code&gt;github&lt;/code&gt;, &lt;code&gt;percentile&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;).&lt;/td&gt; &#xA;   &lt;td&gt;enum&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;show_icons&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Shows icons near all stats.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;include_all_commits&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Count total commits instead of just the current year commits.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;line_height&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets the line height between text.&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;exclude_repo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Excludes specified repositories.&lt;/td&gt; &#xA;   &lt;td&gt;string (comma-separated values)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;username&amp;gt; GitHub Stats&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;text_bold&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uses bold text.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ring_color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Color of the rank circle.&lt;/td&gt; &#xA;   &lt;td&gt;string (hex color)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2f80ed&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;number_format&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Switches between two available formats for displaying the card values &lt;code&gt;short&lt;/code&gt; (i.e. &lt;code&gt;6.6k&lt;/code&gt;) and &lt;code&gt;long&lt;/code&gt; (i.e. &lt;code&gt;6626&lt;/code&gt;).&lt;/td&gt; &#xA;   &lt;td&gt;enum&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;short&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;show&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Shows &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-additional-individual-stats&#34;&gt;additional items&lt;/a&gt; on stats card (i.e. &lt;code&gt;reviews&lt;/code&gt;, &lt;code&gt;discussions_started&lt;/code&gt;, &lt;code&gt;discussions_answered&lt;/code&gt;, &lt;code&gt;prs_merged&lt;/code&gt; or &lt;code&gt;prs_merged_percentage&lt;/code&gt;).&lt;/td&gt; &#xA;   &lt;td&gt;string (comma-separated values)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; When hide_rank=&lt;code&gt;true&lt;/code&gt;, the minimum card width is 270 px + the title length and padding.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Repo Card Exclusive Options&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;show_owner&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Shows the repo&#39;s owner name.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;description_lines_count&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Manually set the number of lines for the description. Specified value will be clamped between 1 and 3. If this parameter is not specified, the number of lines will be automatically adjusted according to the actual length of the description.&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Gist Card Exclusive Options&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;show_owner&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Shows the gist&#39;s owner name.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Language Card Exclusive Options&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hides the &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-individual-languages&#34;&gt;specified languages&lt;/a&gt; from card.&lt;/td&gt; &#xA;   &lt;td&gt;string (comma-separated values)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hides the title of your card.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Switches between five available layouts &lt;code&gt;normal&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt; &amp;amp; &lt;code&gt;donut&lt;/code&gt; &amp;amp; &lt;code&gt;donut-vertical&lt;/code&gt; &amp;amp; &lt;code&gt;pie&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;enum&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;normal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets the card&#39;s width manually.&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;langs_count&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Shows more languages on the card, between 1-20.&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;5&lt;/code&gt; for &lt;code&gt;normal&lt;/code&gt; and &lt;code&gt;donut&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt; for other layouts&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;exclude_repo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Excludes specified repositories.&lt;/td&gt; &#xA;   &lt;td&gt;string (comma-separated values)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Most Used Languages&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;hide_progress&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uses the compact layout option, hides percentages, and removes the bars.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;size_weight&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configures language stats algorithm (see &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm&#34;&gt;Language stats algorithm&lt;/a&gt;).&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;count_weight&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configures language stats algorithm (see &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm&#34;&gt;Language stats algorithm&lt;/a&gt;).&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; Language names should be URI-escaped, as specified in &lt;a href=&#34;https://en.wikipedia.org/wiki/Percent-encoding&#34;&gt;Percent Encoding&lt;/a&gt; (i.e: &lt;code&gt;c++&lt;/code&gt; should become &lt;code&gt;c%2B%2B&lt;/code&gt;, &lt;code&gt;jupyter notebook&lt;/code&gt; should become &lt;code&gt;jupyter%20notebook&lt;/code&gt;, etc.) You can use &lt;a href=&#34;https://www.urlencoder.org/&#34;&gt;urlencoder.org&lt;/a&gt; to help you do this automatically.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;WakaTime Card Exclusive Options&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hides the languages specified from the card.&lt;/td&gt; &#xA;   &lt;td&gt;string (comma-separated values)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hides the title of your card.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;line_height&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets the line height between text.&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;hide_progress&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hides the progress bar and percentage.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;WakaTime Stats&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Switches between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;enum&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;langs_count&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Limits the number of languages on the card, defaults to all reported languages.&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;api_domain&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets a custom API domain for the card, e.g. to use services like &lt;a href=&#34;https://github.com/mujx/hakatime&#34;&gt;Hakatime&lt;/a&gt; or &lt;a href=&#34;https://github.com/muety/wakapi&#34;&gt;Wakapi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;wakatime.com&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;display_format&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sets the WakaTime stats display format. Choose &lt;code&gt;time&lt;/code&gt; to display time-based stats or &lt;code&gt;percent&lt;/code&gt; to show percentages.&lt;/td&gt; &#xA;   &lt;td&gt;enum&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;time&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;GitHub Extra Pins&lt;/h1&gt; &#xA;&lt;p&gt;GitHub extra pins allow you to pin more than 6 repositories in your profile using a GitHub readme profile.&lt;/p&gt; &#xA;&lt;p&gt;Yay! You are no longer limited to 6 pinned repositories.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; &#xA;&lt;p&gt;Endpoint: &lt;code&gt;api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats)](https://github.com/anuraghazra/github-readme-stats)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&#34; alt=&#34;Readme Card&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#repo-card-exclusive-options&#34;&gt;show_owner&lt;/a&gt; query option to include the repo&#39;s owner username&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;show_owner=true&#34; alt=&#34;Readme Card&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;GitHub Gist Pins&lt;/h1&gt; &#xA;&lt;p&gt;GitHub gist pins allow you to pin gists in your GitHub profile using a GitHub readme profile.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; &#xA;&lt;p&gt;Endpoint: &lt;code&gt;api/gist?id=bbfce31e0217a3689c8d961a356cb10d&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![Gist Card](https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d)](https://gist.github.com/Yizack/bbfce31e0217a3689c8d961a356cb10d/)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&#34; alt=&#34;Gist Card&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#gist-card-exclusive-options&#34;&gt;show_owner&lt;/a&gt; query option to include the gist&#39;s owner username&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&amp;amp;show_owner=true&#34; alt=&#34;Gist Card&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Top Languages Card&lt;/h1&gt; &#xA;&lt;p&gt;The top languages card shows a GitHub user&#39;s most frequently used languages.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; By default, the language card shows language results only from public repositories. To include languages used in private repositories, you should &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own&#34;&gt;deploy your own instance&lt;/a&gt; using your own GitHub API token.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; Top Languages does not indicate the user&#39;s skill level or anything like that; it&#39;s a GitHub metric to determine which languages have the most code on GitHub. It is a new feature of github-readme-stats.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; This card shows language usage only inside your own non-forked repositories, not depending on who the author of the commits is. It does not include your contributions into another users/organizations repositories. Currently there are no way to get this data from GitHub API. If you want this behavior to be improved you can support &lt;a href=&#34;https://github.com/orgs/community/discussions/18230&#34;&gt;this feature request&lt;/a&gt; created by &lt;a href=&#34;https://github.com/rickstaa&#34;&gt;@rickstaa&lt;/a&gt; inside GitHub Community.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; Currently this card shows data only about first 100 repositories. This is because GitHub API limitations which cause downtimes of public instances (see &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/issues/1471&#34;&gt;#1471&lt;/a&gt;). In future this behavior will be improved by releasing GitHub action or providing environment variables for user&#39;s own instances.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; &#xA;&lt;p&gt;Endpoint: &lt;code&gt;api/top-langs?username=anuraghazra&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Language stats algorithm&lt;/h3&gt; &#xA;&lt;p&gt;We use the following algorithm to calculate the languages percentages on the language card:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;ranking_index = (byte_count ^ size_weight) * (repo_count ^ count_weight)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, only the byte count is used for determining the languages percentages shown on the language card (i.e. &lt;code&gt;size_weight=1&lt;/code&gt; and &lt;code&gt;count_weight=0&lt;/code&gt;). You can, however, use the &lt;code&gt;&amp;amp;size_weight=&lt;/code&gt; and &lt;code&gt;&amp;amp;count_weight=&lt;/code&gt; options to weight the language usage calculation. The values must be positive real numbers. &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/issues/1600#issuecomment-1046056305&#34;&gt;More details about the algorithm can be found here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=1&amp;amp;count_weight=0&lt;/code&gt; - &lt;em&gt;(default)&lt;/em&gt; Orders by byte count.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=0.5&amp;amp;count_weight=0.5&lt;/code&gt; - &lt;em&gt;(recommended)&lt;/em&gt; Uses both byte and repo count for ranking&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=0&amp;amp;count_weight=1&lt;/code&gt; - Orders by repo count&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;size_weight=0.5&amp;amp;count_weight=0.5)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Exclude individual repositories&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;&amp;amp;exclude_repo=repo1,repo2&lt;/code&gt; parameter to exclude individual repositories.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;exclude_repo=github-readme-stats,anuraghazra.github.io)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hide individual languages&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;&amp;amp;hide=language1,language2&lt;/code&gt; parameter to hide individual languages.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide=javascript,html)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Show more languages&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;&amp;amp;langs_count=&lt;/code&gt; option to increase or decrease the number of languages shown on the card. Valid values are integers between 1 and 20 (inclusive). By default it was set to &lt;code&gt;5&lt;/code&gt; for &lt;code&gt;normal&lt;/code&gt; &amp;amp; &lt;code&gt;donut&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt; for other layouts.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;langs_count=8)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compact Language Card Layout&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=compact&lt;/code&gt; option to change the card design.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Donut Chart Language Card Layout&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=donut&lt;/code&gt; option to change the card design.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut)](https://github.com/anuraghazra/github-readme-stats)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Donut Vertical Chart Language Card Layout&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=donut-vertical&lt;/code&gt; option to change the card design.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut-vertical)](https://github.com/anuraghazra/github-readme-stats)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pie Chart Language Card Layout&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=pie&lt;/code&gt; option to change the card design.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=pie)](https://github.com/anuraghazra/github-readme-stats)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hide Progress Bars&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;&amp;amp;hide_progress=true&lt;/code&gt; option to hide the percentages and the progress bars (layout will be automatically set to &lt;code&gt;compact&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide_progress=true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&#34; alt=&#34;Top Langs&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compact layout&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact&#34; alt=&#34;Top Langs&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Donut Chart layout&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut&#34; alt=&#34;Top Langs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Donut Vertical Chart layout&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut-vertical&#34; alt=&#34;Top Langs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pie Chart layout&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=pie&#34; alt=&#34;Top Langs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hidden progress bars&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide_progress=true&#34; alt=&#34;Top Langs&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;WakaTime Stats Card&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; Please be aware that we currently only show data from WakaTime profiles that are public. You therefore have to make sure that &lt;strong&gt;BOTH&lt;/strong&gt; &lt;code&gt;Display code time publicly&lt;/code&gt; and &lt;code&gt;Display languages, editors, os, categories publicly&lt;/code&gt; are enabled.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your &lt;a href=&#34;https://wakatime.com&#34;&gt;WakaTime&lt;/a&gt; username.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![Harlok&#39;s WakaTime stats](https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs)](https://github.com/anuraghazra/github-readme-stats)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&#34; alt=&#34;Harlok&#39;s WakaTime stats&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&amp;amp;hide_progress=true&#34; alt=&#34;Harlok&#39;s WakaTime stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compact layout&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&amp;amp;layout=compact&#34; alt=&#34;Harlok&#39;s WakaTime stats&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;All Demos&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hiding specific stats&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,issues&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Showing additional stats&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Showing icons&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=issues&amp;amp;show_icons=true&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shows Github logo instead rank level&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;rank_icon=github&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shows user rank percentile instead of rank level&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;rank_icon=percentile&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customize Border Color&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;border_color=2e4058&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Include All Commits&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;include_all_commits=true&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Themes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Choose from any of the &lt;a href=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes&#34;&gt;default themes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gradient&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;bg_color=30,e96443,904e95&amp;amp;title_color=fff&amp;amp;text_color=fff&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customizing stats card&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;show_icons=true&amp;amp;title_color=fff&amp;amp;icon_color=79ff97&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Setting card locale&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;locale=es&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customizing repo card&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;title_color=fff&amp;amp;icon_color=f9f9f9&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515&#34; alt=&#34;Customized Card&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gist card&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&#34; alt=&#34;Gist Card&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customizing gist card&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&amp;amp;theme=calm&#34; alt=&#34;Gist Card&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Top languages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&#34; alt=&#34;Top Langs&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WakaTime card&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&#34; alt=&#34;Harlok&#39;s WakaTime stats&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Quick Tip (Align The Cards)&lt;/h2&gt; &#xA;&lt;p&gt;By default, GitHub does not lay out the cards side by side. To do that, you can use this approach:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats&#34;&amp;gt;&#xA;  &amp;lt;img height=200 align=&#34;center&#34; src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&#34; /&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/anuraghazra/convoychat&#34;&amp;gt;&#xA;  &amp;lt;img height=200 align=&#34;center&#34; src=&#34;https://github-readme-stats.vercel.app/api/top-langs?username=anuraghazra&amp;amp;layout=compact&amp;amp;langs_count=8&amp;amp;card_width=320&#34; /&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats&#34;&amp;gt;&#xA;  &amp;lt;img align=&#34;center&#34; src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&#34; /&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&amp;lt;a href=&#34;https://github.com/anuraghazra/convoychat&#34;&amp;gt;&#xA;  &amp;lt;img align=&#34;center&#34; src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat&#34; /&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; &#xA; &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats&#34;&gt; &lt;img height=&#34;200&#34; align=&#34;center&#34; src=&#34;https://github-readme-stats.vercel.app/api?username=anuraghazra&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/anuraghazra/convoychat&#34;&gt; &lt;img height=&#34;200&#34; align=&#34;center&#34; src=&#34;https://github-readme-stats.vercel.app/api/top-langs?username=anuraghazra&amp;amp;layout=compact&amp;amp;langs_count=8&amp;amp;card_width=320&#34;&gt; &lt;/a&gt; &#xA; &lt;hr&gt; &#xA; &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/anuraghazra/convoychat&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat&#34;&gt; &lt;/a&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;Deploy on your own&lt;/h1&gt; &#xA;&lt;h2&gt;On Vercel&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;📽&lt;/span&gt; &lt;a href=&#34;https://youtu.be/n6d4KHSKqGk?t=107&#34;&gt;Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Since the GitHub API only allows 5k requests per hour, my &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter. If you host it on your own Vercel server, then you do not have to worry about anything. Click on the deploy button to get started!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; Since &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/pull/58&#34;&gt;#58&lt;/a&gt;, we should be able to handle more than 5k requests and have fewer issues with downtime &lt;span&gt;😁&lt;/span&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; If you are on the &lt;a href=&#34;https://vercel.com/pricing&#34;&gt;Pro (i.e. paid)&lt;/a&gt; Vercel plan, the &lt;a href=&#34;https://vercel.com/docs/concepts/projects/project-configuration#value-definition&#34;&gt;maxDuration&lt;/a&gt; value found in the &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/raw/master/vercel.json&#34;&gt;vercel.json&lt;/a&gt; can be increased when your Vercel instance frequently times out during the card request. You are advised to keep this value lower than &lt;code&gt;30&lt;/code&gt; seconds to prevent high memory usage.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/import/project?template=https://github.com/anuraghazra/github-readme-stats&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy to Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;&lt;span&gt;🛠&lt;/span&gt; Step-by-step guide on setting up your own Vercel instance&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Go to &lt;a href=&#34;https://vercel.com/&#34;&gt;vercel.com&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Click on &lt;code&gt;Log in&lt;/code&gt;. &lt;img src=&#34;https://files.catbox.moe/pcxk33.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Sign in with GitHub by pressing &lt;code&gt;Continue with GitHub&lt;/code&gt;. &lt;img src=&#34;https://files.catbox.moe/b9oxey.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Sign in to GitHub and allow access to all repositories if prompted.&lt;/li&gt; &#xA;  &lt;li&gt;Fork this repo.&lt;/li&gt; &#xA;  &lt;li&gt;Go back to your &lt;a href=&#34;https://vercel.com/dashboard&#34;&gt;Vercel dashboard&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;To import a project, click the &lt;code&gt;Add New...&lt;/code&gt; button and select the &lt;code&gt;Project&lt;/code&gt; option. &lt;img src=&#34;https://files.catbox.moe/3n76fh.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Click the &lt;code&gt;Continue with GitHub&lt;/code&gt; button, search for the required Git Repository and import it by clicking the &lt;code&gt;Import&lt;/code&gt; button. Alternatively, you can import a Third-Party Git Repository using the &lt;code&gt;Import Third-Party Git Repository -&amp;gt;&lt;/code&gt; link at the bottom of the page. &lt;img src=&#34;https://files.catbox.moe/mg5p04.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Create a personal access token (PAT) &lt;a href=&#34;https://github.com/settings/tokens/new&#34;&gt;here&lt;/a&gt; and enable the &lt;code&gt;repo&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt; permissions (this allows access to see private repo and user stats).&lt;/li&gt; &#xA;  &lt;li&gt;Add the PAT as an environment variable named &lt;code&gt;PAT_1&lt;/code&gt; (as shown). &lt;img src=&#34;https://files.catbox.moe/0yclio.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Click deploy, and you&#39;re good to go. See your domains to use the API!&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;On other platforms&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; This way of using GRS is not officially supported and was added to cater to some particular use cases where Vercel could not be used (e.g. &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/discussions/2341&#34;&gt;#2341&lt;/a&gt;). The support for this method, therefore, is limited.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;&lt;span&gt;🛠&lt;/span&gt; Step-by-step guide for deploying on other platforms&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Fork or clone this repo as per your needs&lt;/li&gt; &#xA;  &lt;li&gt;Add &lt;code&gt;express&lt;/code&gt; to the dependencies section of &lt;code&gt;package.json&lt;/code&gt; &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/raw/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61&#34;&gt;https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Run &lt;code&gt;npm i&lt;/code&gt; if needed (initial setup)&lt;/li&gt; &#xA;  &lt;li&gt;Run &lt;code&gt;node express.js&lt;/code&gt; to start the server, or set the entry point to &lt;code&gt;express.js&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt; if you&#39;re deploying on a managed service &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/raw/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11&#34;&gt;https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;You&#39;re done 🎉 &lt;/li&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;   &#xA;&lt;h2&gt;Disable rate limit protections&lt;/h2&gt; &#xA;&lt;p&gt;Github Readme Stats contains several Vercel environment variables that can be used to remove the rate limit protections:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CACHE_SECONDS&lt;/code&gt;: This environment variable takes precedence over our cache minimum and maximum values and can circumvent these values for self-hosted Vercel instances.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://vercel.com/docs/concepts/projects/environment-variables&#34;&gt;the Vercel documentation&lt;/a&gt; on adding these environment variables to your Vercel instance.&lt;/p&gt; &#xA;&lt;h2&gt;Keep your fork up to date&lt;/h2&gt; &#xA;&lt;p&gt;You can keep your fork, and thus your private Vercel instance up to date with the upstream using GitHub&#39;s &lt;a href=&#34;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork&#34;&gt;Sync Fork button&lt;/a&gt;. You can also use the &lt;a href=&#34;https://github.com/wei/pull&#34;&gt;pull&lt;/a&gt; package created by &lt;a href=&#34;https://github.com/wei&#34;&gt;@wei&lt;/a&gt; to automate this process.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;span&gt;💖&lt;/span&gt; Support the project&lt;/h1&gt; &#xA;&lt;p&gt;I open-source almost everything I can and try to reply to everyone needing help using these projects. Obviously, this takes time. You can use this service for free.&lt;/p&gt; &#xA;&lt;p&gt;However, if you are using this project and are happy with it or just want to encourage me to continue creating stuff, there are a few ways you can do it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Giving proper credit when you use github-readme-stats on your readme, linking back to it. :D&lt;/li&gt; &#xA; &lt;li&gt;Starring and sharing the project. &lt;span&gt;🚀&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.paypal.me/anuraghazra&#34;&gt;&lt;img src=&#34;https://ionicabizau.github.io/badges/paypal.svg?sanitize=true&#34; alt=&#34;paypal.me/anuraghazra&#34;&gt;&lt;/a&gt; - You can make a one-time donations via PayPal. I&#39;ll probably buy a &lt;del&gt;coffee&lt;/del&gt; tea. &lt;span&gt;🍵&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks! &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true&#34; alt=&#34;https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contributions are welcome! &amp;lt;3&lt;/p&gt; &#xA;&lt;p&gt;Made with &lt;span&gt;❤️&lt;/span&gt; and JavaScript.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>airbnb/javascript</title>
    <updated>2024-08-01T01:52:05Z</updated>
    <id>tag:github.com,2024-08-01:/airbnb/javascript</id>
    <link href="https://github.com/airbnb/javascript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JavaScript Style Guide&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Airbnb JavaScript Style Guide() {&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;A mostly reasonable approach to JavaScript&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this guide assumes you are using &lt;a href=&#34;https://babeljs.io&#34;&gt;Babel&lt;/a&gt;, and requires that you use &lt;a href=&#34;https://npmjs.com/babel-preset-airbnb&#34;&gt;babel-preset-airbnb&lt;/a&gt; or the equivalent. It also assumes you are installing shims/polyfills in your app, with &lt;a href=&#34;https://npmjs.com/airbnb-browser-shims&#34;&gt;airbnb-browser-shims&lt;/a&gt; or the equivalent.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/eslint-config-airbnb&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/eslint-config-airbnb.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/eslint-config-airbnb-base&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/airbnb/javascript?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This guide is available in other languages too. See &lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&#34;&gt;Translation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Other Style Guides&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/airbnb/javascript/tree/es5-deprecated/es5&#34;&gt;ES5 (Deprecated)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/react/&#34;&gt;React&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/css-in-javascript/&#34;&gt;CSS-in-JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/airbnb/css&#34;&gt;CSS &amp;amp; Sass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/airbnb/ruby&#34;&gt;Ruby&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#types&#34;&gt;Types&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#objects&#34;&gt;Objects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays&#34;&gt;Arrays&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&#34;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#strings&#34;&gt;Strings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions&#34;&gt;Functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&#34;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&#34;&gt;Classes &amp;amp; Constructors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&#34;&gt;Modules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&#34;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#properties&#34;&gt;Properties&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#variables&#34;&gt;Variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting&#34;&gt;Hoisting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison-operators--equality&#34;&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks&#34;&gt;Blocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&#34;&gt;Control Statements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comments&#34;&gt;Comments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace&#34;&gt;Whitespace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#commas&#34;&gt;Commas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons&#34;&gt;Semicolons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#type-casting--coercion&#34;&gt;Type Casting &amp;amp; Coercion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#naming-conventions&#34;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors&#34;&gt;Accessors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#events&#34;&gt;Events&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery&#34;&gt;jQuery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-5-compatibility&#34;&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-6-es-2015-styles&#34;&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library&#34;&gt;Standard Library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#testing&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#resources&#34;&gt;Resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#in-the-wild&#34;&gt;In the Wild&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&#34;&gt;Translation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#the-javascript-style-guide-guide&#34;&gt;The JavaScript Style Guide Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#chat-with-us-about-javascript&#34;&gt;Chat With Us About JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#amendments&#34;&gt;Amendments&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Types&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;types--primitives&#34;&gt;&lt;/a&gt;&lt;a name=&#34;1.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#types--primitives&#34;&gt;1.1&lt;/a&gt; &lt;strong&gt;Primitives&lt;/strong&gt;: When you access a primitive type you work directly on its value.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;bigint&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;br&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const foo = 1;&#xA;let bar = foo;&#xA;&#xA;bar = 9;&#xA;&#xA;console.log(foo, bar); // =&amp;gt; 1, 9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don’t support them natively.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;types--complex&#34;&gt;&lt;/a&gt;&lt;a name=&#34;1.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#types--complex&#34;&gt;1.2&lt;/a&gt; &lt;strong&gt;Complex&lt;/strong&gt;: When you access a complex type you work on a reference to its value.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;br&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const foo = [1, 2];&#xA;const bar = foo;&#xA;&#xA;bar[0] = 9;&#xA;&#xA;console.log(foo[0], bar[0]); // =&amp;gt; 9, 9&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;references--prefer-const&#34;&gt;&lt;/a&gt;&lt;a name=&#34;2.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#references--prefer-const&#34;&gt;2.1&lt;/a&gt; Use &lt;code&gt;const&lt;/code&gt; for all of your references; avoid using &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/prefer-const&#34;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://eslint.org/docs/rules/no-const-assign&#34;&gt;&lt;code&gt;no-const-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? This ensures that you can’t reassign your references, which can lead to bugs and difficult to comprehend code.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;var a = 1;&#xA;var b = 2;&#xA;&#xA;// good&#xA;const a = 1;&#xA;const b = 2;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;references--disallow-var&#34;&gt;&lt;/a&gt;&lt;a name=&#34;2.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#references--disallow-var&#34;&gt;2.2&lt;/a&gt; If you must reassign references, use &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-var&#34;&gt;&lt;code&gt;no-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; is block-scoped rather than function-scoped like &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;var count = 1;&#xA;if (true) {&#xA;  count += 1;&#xA;}&#xA;&#xA;// good, use the let.&#xA;let count = 1;&#xA;if (true) {&#xA;  count += 1;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;references--block-scope&#34;&gt;&lt;/a&gt;&lt;a name=&#34;2.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#references--block-scope&#34;&gt;2.3&lt;/a&gt; Note that both &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block-scoped, whereas &lt;code&gt;var&lt;/code&gt; is function-scoped.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// const and let only exist in the blocks they are defined in.&#xA;{&#xA;  let a = 1;&#xA;  const b = 1;&#xA;  var c = 1;&#xA;}&#xA;console.log(a); // ReferenceError&#xA;console.log(b); // ReferenceError&#xA;console.log(c); // Prints 1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, you can see that referencing &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will produce a ReferenceError, while &lt;code&gt;c&lt;/code&gt; contains the number. This is because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are block scoped, while &lt;code&gt;c&lt;/code&gt; is scoped to the containing function.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Objects&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;objects--no-new&#34;&gt;&lt;/a&gt;&lt;a name=&#34;3.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--no-new&#34;&gt;3.1&lt;/a&gt; Use the literal syntax for object creation. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-new-object&#34;&gt;&lt;code&gt;no-new-object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const item = new Object();&#xA;&#xA;// good&#xA;const item = {};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;es6-computed-properties&#34;&gt;&lt;/a&gt;&lt;a name=&#34;3.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&#34;&gt;3.2&lt;/a&gt; Use computed property names when creating objects with dynamic property names.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? They allow you to define all the properties of an object in one place.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#xA;function getKey(k) {&#xA;  return `a key named ${k}`;&#xA;}&#xA;&#xA;// bad&#xA;const obj = {&#xA;  id: 5,&#xA;  name: &#39;San Francisco&#39;,&#xA;};&#xA;obj[getKey(&#39;enabled&#39;)] = true;&#xA;&#xA;// good&#xA;const obj = {&#xA;  id: 5,&#xA;  name: &#39;San Francisco&#39;,&#xA;  [getKey(&#39;enabled&#39;)]: true,&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;es6-object-shorthand&#34;&gt;&lt;/a&gt;&lt;a name=&#34;3.5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&#34;&gt;3.3&lt;/a&gt; Use object method shorthand. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/object-shorthand&#34;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const atom = {&#xA;  value: 1,&#xA;&#xA;  addValue: function (value) {&#xA;    return atom.value + value;&#xA;  },&#xA;};&#xA;&#xA;// good&#xA;const atom = {&#xA;  value: 1,&#xA;&#xA;  addValue(value) {&#xA;    return atom.value + value;&#xA;  },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;es6-object-concise&#34;&gt;&lt;/a&gt;&lt;a name=&#34;3.6&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&#34;&gt;3.4&lt;/a&gt; Use property value shorthand. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/object-shorthand&#34;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? It is shorter and descriptive.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const lukeSkywalker = &#39;Luke Skywalker&#39;;&#xA;&#xA;// bad&#xA;const obj = {&#xA;  lukeSkywalker: lukeSkywalker,&#xA;};&#xA;&#xA;// good&#xA;const obj = {&#xA;  lukeSkywalker,&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;objects--grouped-shorthand&#34;&gt;&lt;/a&gt;&lt;a name=&#34;3.7&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--grouped-shorthand&#34;&gt;3.5&lt;/a&gt; Group your shorthand properties at the beginning of your object declaration.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? It’s easier to tell which properties are using the shorthand.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const anakinSkywalker = &#39;Anakin Skywalker&#39;;&#xA;const lukeSkywalker = &#39;Luke Skywalker&#39;;&#xA;&#xA;// bad&#xA;const obj = {&#xA;  episodeOne: 1,&#xA;  twoJediWalkIntoACantina: 2,&#xA;  lukeSkywalker,&#xA;  episodeThree: 3,&#xA;  mayTheFourth: 4,&#xA;  anakinSkywalker,&#xA;};&#xA;&#xA;// good&#xA;const obj = {&#xA;  lukeSkywalker,&#xA;  anakinSkywalker,&#xA;  episodeOne: 1,&#xA;  twoJediWalkIntoACantina: 2,&#xA;  episodeThree: 3,&#xA;  mayTheFourth: 4,&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;objects--quoted-props&#34;&gt;&lt;/a&gt;&lt;a name=&#34;3.8&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--quoted-props&#34;&gt;3.6&lt;/a&gt; Only quote properties that are invalid identifiers. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/quote-props&#34;&gt;&lt;code&gt;quote-props&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const bad = {&#xA;  &#39;foo&#39;: 3,&#xA;  &#39;bar&#39;: 4,&#xA;  &#39;data-blah&#39;: 5,&#xA;};&#xA;&#xA;// good&#xA;const good = {&#xA;  foo: 3,&#xA;  bar: 4,&#xA;  &#39;data-blah&#39;: 5,&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;objects--prototype-builtins&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--prototype-builtins&#34;&gt;3.7&lt;/a&gt; Do not call &lt;code&gt;Object.prototype&lt;/code&gt; methods directly, such as &lt;code&gt;hasOwnProperty&lt;/code&gt;, &lt;code&gt;propertyIsEnumerable&lt;/code&gt;, and &lt;code&gt;isPrototypeOf&lt;/code&gt;. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-prototype-builtins&#34;&gt;&lt;code&gt;no-prototype-builtins&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? These methods may be shadowed by properties on the object in question - consider &lt;code&gt;{ hasOwnProperty: false }&lt;/code&gt; - or, the object may be a null object (&lt;code&gt;Object.create(null)&lt;/code&gt;). In modern browsers that support ES2022, or with a polyfill such as &lt;a href=&#34;https://npmjs.com/object.hasown&#34;&gt;https://npmjs.com/object.hasown&lt;/a&gt;, &lt;code&gt;Object.hasOwn&lt;/code&gt; can also be used as an alternative to &lt;code&gt;Object.prototype.hasOwnProperty.call&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;console.log(object.hasOwnProperty(key));&#xA;&#xA;// good&#xA;console.log(Object.prototype.hasOwnProperty.call(object, key));&#xA;&#xA;// better&#xA;const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.&#xA;console.log(has.call(object, key));&#xA;&#xA;// best&#xA;console.log(Object.hasOwn(object, key)); // only supported in browsers that support ES2022&#xA;&#xA;/* or */&#xA;import has from &#39;has&#39;; // https://www.npmjs.com/package/has&#xA;console.log(has(object, key));&#xA;/* or */&#xA;console.log(Object.hasOwn(object, key)); // https://www.npmjs.com/package/object.hasown&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;objects--rest-spread&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--rest-spread&#34;&gt;3.8&lt;/a&gt; Prefer the object spread syntax over &lt;a href=&#34;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&#34;&gt;&lt;code&gt;Object.assign&lt;/code&gt;&lt;/a&gt; to shallow-copy objects. Use the object rest parameter syntax to get a new object with certain properties omitted. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/prefer-object-spread&#34;&gt;&lt;code&gt;prefer-object-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// very bad&#xA;const original = { a: 1, b: 2 };&#xA;const copy = Object.assign(original, { c: 3 }); // this mutates `original` ಠ_ಠ&#xA;delete copy.a; // so does this&#xA;&#xA;// bad&#xA;const original = { a: 1, b: 2 };&#xA;const copy = Object.assign({}, original, { c: 3 }); // copy =&amp;gt; { a: 1, b: 2, c: 3 }&#xA;&#xA;// good&#xA;const original = { a: 1, b: 2 };&#xA;const copy = { ...original, c: 3 }; // copy =&amp;gt; { a: 1, b: 2, c: 3 }&#xA;&#xA;const { a, ...noA } = copy; // noA =&amp;gt; { b: 2, c: 3 }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Arrays&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;arrays--literals&#34;&gt;&lt;/a&gt;&lt;a name=&#34;4.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--literals&#34;&gt;4.1&lt;/a&gt; Use the literal syntax for array creation. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-array-constructor&#34;&gt;&lt;code&gt;no-array-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const items = new Array();&#xA;&#xA;// good&#xA;const items = [];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;arrays--push&#34;&gt;&lt;/a&gt;&lt;a name=&#34;4.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--push&#34;&gt;4.2&lt;/a&gt; Use &lt;a href=&#34;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push&#34;&gt;Array#push&lt;/a&gt; instead of direct assignment to add items to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const someStack = [];&#xA;&#xA;// bad&#xA;someStack[someStack.length] = &#39;abracadabra&#39;;&#xA;&#xA;// good&#xA;someStack.push(&#39;abracadabra&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;es6-array-spreads&#34;&gt;&lt;/a&gt;&lt;a name=&#34;4.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&#34;&gt;4.3&lt;/a&gt; Use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const len = items.length;&#xA;const itemsCopy = [];&#xA;let i;&#xA;&#xA;for (i = 0; i &amp;lt; len; i += 1) {&#xA;  itemsCopy[i] = items[i];&#xA;}&#xA;&#xA;// good&#xA;const itemsCopy = [...items];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;arrays--from&#34;&gt;&lt;/a&gt; &lt;a name=&#34;arrays--from-iterable&#34;&gt;&lt;/a&gt;&lt;a name=&#34;4.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-iterable&#34;&gt;4.4&lt;/a&gt; To convert an iterable object to an array, use spreads &lt;code&gt;...&lt;/code&gt; instead of &lt;a href=&#34;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&#34;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const foo = document.querySelectorAll(&#39;.foo&#39;);&#xA;&#xA;// good&#xA;const nodes = Array.from(foo);&#xA;&#xA;// best&#xA;const nodes = [...foo];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;arrays--from-array-like&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-array-like&#34;&gt;4.5&lt;/a&gt; Use &lt;a href=&#34;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&#34;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; for converting an array-like object to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const arrLike = { 0: &#39;foo&#39;, 1: &#39;bar&#39;, 2: &#39;baz&#39;, length: 3 };&#xA;&#xA;// bad&#xA;const arr = Array.prototype.slice.call(arrLike);&#xA;&#xA;// good&#xA;const arr = Array.from(arrLike);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;arrays--mapping&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--mapping&#34;&gt;4.6&lt;/a&gt; Use &lt;a href=&#34;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&#34;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; instead of spread &lt;code&gt;...&lt;/code&gt; for mapping over iterables, because it avoids creating an intermediate array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const baz = [...foo].map(bar);&#xA;&#xA;// good&#xA;const baz = Array.from(foo, bar);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;arrays--callback-return&#34;&gt;&lt;/a&gt;&lt;a name=&#34;4.5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--callback-return&#34;&gt;4.7&lt;/a&gt; Use return statements in array method callbacks. It’s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following &lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&#34;&gt;8.2&lt;/a&gt;. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/array-callback-return&#34;&gt;&lt;code&gt;array-callback-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// good&#xA;[1, 2, 3].map((x) =&amp;gt; {&#xA;  const y = x + 1;&#xA;  return x * y;&#xA;});&#xA;&#xA;// good&#xA;[1, 2, 3].map((x) =&amp;gt; x + 1);&#xA;&#xA;// bad - no returned value means `acc` becomes undefined after the first iteration&#xA;[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {&#xA;  const flatten = acc.concat(item);&#xA;});&#xA;&#xA;// good&#xA;[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {&#xA;  const flatten = acc.concat(item);&#xA;  return flatten;&#xA;});&#xA;&#xA;// bad&#xA;inbox.filter((msg) =&amp;gt; {&#xA;  const { subject, author } = msg;&#xA;  if (subject === &#39;Mockingbird&#39;) {&#xA;    return author === &#39;Harper Lee&#39;;&#xA;  } else {&#xA;    return false;&#xA;  }&#xA;});&#xA;&#xA;// good&#xA;inbox.filter((msg) =&amp;gt; {&#xA;  const { subject, author } = msg;&#xA;  if (subject === &#39;Mockingbird&#39;) {&#xA;    return author === &#39;Harper Lee&#39;;&#xA;  }&#xA;&#xA;  return false;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;arrays--bracket-newline&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--bracket-newline&#34;&gt;4.8&lt;/a&gt; Use line breaks after opening array brackets and before closing array brackets, if an array has multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const arr = [&#xA;  [0, 1], [2, 3], [4, 5],&#xA;];&#xA;&#xA;const objectInArray = [{&#xA;  id: 1,&#xA;}, {&#xA;  id: 2,&#xA;}];&#xA;&#xA;const numberInArray = [&#xA;  1, 2,&#xA;];&#xA;&#xA;// good&#xA;const arr = [[0, 1], [2, 3], [4, 5]];&#xA;&#xA;const objectInArray = [&#xA;  {&#xA;    id: 1,&#xA;  },&#xA;  {&#xA;    id: 2,&#xA;  },&#xA;];&#xA;&#xA;const numberInArray = [&#xA;  1,&#xA;  2,&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Destructuring&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;destructuring--object&#34;&gt;&lt;/a&gt;&lt;a name=&#34;5.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object&#34;&gt;5.1&lt;/a&gt; Use object destructuring when accessing and using multiple properties of an object. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/prefer-destructuring&#34;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function getFullName(user) {&#xA;  const firstName = user.firstName;&#xA;  const lastName = user.lastName;&#xA;&#xA;  return `${firstName} ${lastName}`;&#xA;}&#xA;&#xA;// good&#xA;function getFullName(user) {&#xA;  const { firstName, lastName } = user;&#xA;  return `${firstName} ${lastName}`;&#xA;}&#xA;&#xA;// best&#xA;function getFullName({ firstName, lastName }) {&#xA;  return `${firstName} ${lastName}`;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;destructuring--array&#34;&gt;&lt;/a&gt;&lt;a name=&#34;5.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--array&#34;&gt;5.2&lt;/a&gt; Use array destructuring. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/prefer-destructuring&#34;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const arr = [1, 2, 3, 4];&#xA;&#xA;// bad&#xA;const first = arr[0];&#xA;const second = arr[1];&#xA;&#xA;// good&#xA;const [first, second] = arr;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;destructuring--object-over-array&#34;&gt;&lt;/a&gt;&lt;a name=&#34;5.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object-over-array&#34;&gt;5.3&lt;/a&gt; Use object destructuring for multiple return values, not array destructuring.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? You can add new properties over time or change the order of things without breaking call sites.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function processInput(input) {&#xA;  // then a miracle occurs&#xA;  return [left, right, top, bottom];&#xA;}&#xA;&#xA;// the caller needs to think about the order of return data&#xA;const [left, __, top] = processInput(input);&#xA;&#xA;// good&#xA;function processInput(input) {&#xA;  // then a miracle occurs&#xA;  return { left, right, top, bottom };&#xA;}&#xA;&#xA;// the caller selects only the data they need&#xA;const { left, top } = processInput(input);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Strings&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;strings--quotes&#34;&gt;&lt;/a&gt;&lt;a name=&#34;6.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--quotes&#34;&gt;6.1&lt;/a&gt; Use single quotes &lt;code&gt;&#39;&#39;&lt;/code&gt; for strings. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/quotes&#34;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const name = &#34;Capt. Janeway&#34;;&#xA;&#xA;// bad - template literals should contain interpolation or newlines&#xA;const name = `Capt. Janeway`;&#xA;&#xA;// good&#xA;const name = &#39;Capt. Janeway&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;strings--line-length&#34;&gt;&lt;/a&gt;&lt;a name=&#34;6.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&#34;&gt;6.2&lt;/a&gt; Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Broken strings are painful to work with and make code less searchable.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const errorMessage = &#39;This is a super long error that was thrown because \&#xA;of Batman. When you stop to think about how Batman had anything to do \&#xA;with this, you would get nowhere \&#xA;fast.&#39;;&#xA;&#xA;// bad&#xA;const errorMessage = &#39;This is a super long error that was thrown because &#39; +&#xA;  &#39;of Batman. When you stop to think about how Batman had anything to do &#39; +&#xA;  &#39;with this, you would get nowhere fast.&#39;;&#xA;&#xA;// good&#xA;const errorMessage = &#39;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;es6-template-literals&#34;&gt;&lt;/a&gt;&lt;a name=&#34;6.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&#34;&gt;6.3&lt;/a&gt; When programmatically building up strings, use template strings instead of concatenation. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/prefer-template&#34;&gt;&lt;code&gt;prefer-template&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://eslint.org/docs/rules/template-curly-spacing&#34;&gt;&lt;code&gt;template-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function sayHi(name) {&#xA;  return &#39;How are you, &#39; + name + &#39;?&#39;;&#xA;}&#xA;&#xA;// bad&#xA;function sayHi(name) {&#xA;  return [&#39;How are you, &#39;, name, &#39;?&#39;].join();&#xA;}&#xA;&#xA;// bad&#xA;function sayHi(name) {&#xA;  return `How are you, ${ name }?`;&#xA;}&#xA;&#xA;// good&#xA;function sayHi(name) {&#xA;  return `How are you, ${name}?`;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;strings--eval&#34;&gt;&lt;/a&gt;&lt;a name=&#34;6.5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--eval&#34;&gt;6.4&lt;/a&gt; Never use &lt;code&gt;eval()&lt;/code&gt; on a string; it opens too many vulnerabilities. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-eval&#34;&gt;&lt;code&gt;no-eval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;strings--escaping&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--escaping&#34;&gt;6.5&lt;/a&gt; Do not unnecessarily escape characters in strings. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-useless-escape&#34;&gt;&lt;code&gt;no-useless-escape&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Backslashes harm readability, thus they should only be present when necessary.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const foo = &#39;\&#39;this\&#39; \i\s \&#34;quoted\&#34;&#39;;&#xA;&#xA;// good&#xA;const foo = &#39;\&#39;this\&#39; is &#34;quoted&#34;&#39;;&#xA;const foo = `my name is &#39;${name}&#39;`;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Functions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--declarations&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--declarations&#34;&gt;7.1&lt;/a&gt; Use named function expressions instead of function declarations. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/func-style&#34;&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://eslint.org/docs/latest/rules/func-names&#34;&gt;&lt;code&gt;func-names&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Function declarations are hoisted, which means that it’s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function’s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it’s time to extract it to its own module! Don’t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error’s call stack. (&lt;a href=&#34;https://github.com/airbnb/javascript/issues/794&#34;&gt;Discussion&lt;/a&gt;)&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function foo() {&#xA;  // ...&#xA;}&#xA;&#xA;// bad&#xA;const foo = function () {&#xA;  // ...&#xA;};&#xA;&#xA;// good&#xA;// lexical name distinguished from the variable-referenced invocation(s)&#xA;const short = function longUniqueMoreDescriptiveLexicalFoo() {&#xA;  // ...&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--iife&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--iife&#34;&gt;7.2&lt;/a&gt; Wrap immediately invoked function expressions in parentheses. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/wrap-iife&#34;&gt;&lt;code&gt;wrap-iife&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// immediately-invoked function expression (IIFE)&#xA;(function () {&#xA;  console.log(&#39;Welcome to the Internet. Please follow me.&#39;);&#xA;}());&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--in-blocks&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--in-blocks&#34;&gt;7.3&lt;/a&gt; Never declare a function in a non-function block (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-loop-func&#34;&gt;&lt;code&gt;no-loop-func&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--note-on-blocks&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--note-on-blocks&#34;&gt;7.4&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; ECMA-262 defines a &lt;code&gt;block&lt;/code&gt; as a list of statements. A function declaration is not a statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;if (currentUser) {&#xA;  function test() {&#xA;    console.log(&#39;Nope.&#39;);&#xA;  }&#xA;}&#xA;&#xA;// good&#xA;let test;&#xA;if (currentUser) {&#xA;  test = () =&amp;gt; {&#xA;    console.log(&#39;Yup.&#39;);&#xA;  };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--arguments-shadow&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--arguments-shadow&#34;&gt;7.5&lt;/a&gt; Never name a parameter &lt;code&gt;arguments&lt;/code&gt;. This will take precedence over the &lt;code&gt;arguments&lt;/code&gt; object that is given to every function scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function foo(name, options, arguments) {&#xA;  // ...&#xA;}&#xA;&#xA;// good&#xA;function foo(name, options, args) {&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;es6-rest&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.6&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&#34;&gt;7.6&lt;/a&gt; Never use &lt;code&gt;arguments&lt;/code&gt;, opt to use rest syntax &lt;code&gt;...&lt;/code&gt; instead. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/prefer-rest-params&#34;&gt;&lt;code&gt;prefer-rest-params&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? &lt;code&gt;...&lt;/code&gt; is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like &lt;code&gt;arguments&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function concatenateAll() {&#xA;  const args = Array.prototype.slice.call(arguments);&#xA;  return args.join(&#39;&#39;);&#xA;}&#xA;&#xA;// good&#xA;function concatenateAll(...args) {&#xA;  return args.join(&#39;&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;es6-default-parameters&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.7&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&#34;&gt;7.7&lt;/a&gt; Use default parameter syntax rather than mutating function arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// really bad&#xA;function handleThings(opts) {&#xA;  // No! We shouldn’t mutate function arguments.&#xA;  // Double bad: if opts is falsy it&#39;ll be set to an object which may&#xA;  // be what you want but it can introduce subtle bugs.&#xA;  opts = opts || {};&#xA;  // ...&#xA;}&#xA;&#xA;// still bad&#xA;function handleThings(opts) {&#xA;  if (opts === void 0) {&#xA;    opts = {};&#xA;  }&#xA;  // ...&#xA;}&#xA;&#xA;// good&#xA;function handleThings(opts = {}) {&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--default-side-effects&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.8&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--default-side-effects&#34;&gt;7.8&lt;/a&gt; Avoid side effects with default parameters.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? They are confusing to reason about.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;let b = 1;&#xA;// bad&#xA;function count(a = b++) {&#xA;  console.log(a);&#xA;}&#xA;count();  // 1&#xA;count();  // 2&#xA;count(3); // 3&#xA;count();  // 3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--defaults-last&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.9&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--defaults-last&#34;&gt;7.9&lt;/a&gt; Always put default parameters last. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/default-param-last&#34;&gt;&lt;code&gt;default-param-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function handleThings(opts = {}, name) {&#xA;  // ...&#xA;}&#xA;&#xA;// good&#xA;function handleThings(name, opts = {}) {&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--constructor&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.10&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--constructor&#34;&gt;7.10&lt;/a&gt; Never use the Function constructor to create a new function. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-new-func&#34;&gt;&lt;code&gt;no-new-func&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Creating a function in this way evaluates a string similarly to &lt;code&gt;eval()&lt;/code&gt;, which opens vulnerabilities.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const add = new Function(&#39;a&#39;, &#39;b&#39;, &#39;return a + b&#39;);&#xA;&#xA;// still bad&#xA;const subtract = Function(&#39;a&#39;, &#39;b&#39;, &#39;return a - b&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--signature-spacing&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.11&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-spacing&#34;&gt;7.11&lt;/a&gt; Spacing in a function signature. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/space-before-function-paren&#34;&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://eslint.org/docs/rules/space-before-blocks&#34;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Consistency is good, and you shouldn’t have to add or remove a space when adding or removing a name.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const f = function(){};&#xA;const g = function (){};&#xA;const h = function() {};&#xA;&#xA;// good&#xA;const x = function () {};&#xA;const y = function a() {};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--mutate-params&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.12&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--mutate-params&#34;&gt;7.12&lt;/a&gt; Never mutate parameters. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-param-reassign&#34;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function f1(obj) {&#xA;  obj.key = 1;&#xA;}&#xA;&#xA;// good&#xA;function f2(obj) {&#xA;  const key = Object.prototype.hasOwnProperty.call(obj, &#39;key&#39;) ? obj.key : 1;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--reassign-params&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.13&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--reassign-params&#34;&gt;7.13&lt;/a&gt; Never reassign parameters. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-param-reassign&#34;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the &lt;code&gt;arguments&lt;/code&gt; object. It can also cause optimization issues, especially in V8.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function f1(a) {&#xA;  a = 1;&#xA;  // ...&#xA;}&#xA;&#xA;function f2(a) {&#xA;  if (!a) { a = 1; }&#xA;  // ...&#xA;}&#xA;&#xA;// good&#xA;function f3(a) {&#xA;  const b = a || 1;&#xA;  // ...&#xA;}&#xA;&#xA;function f4(a = 1) {&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--spread-vs-apply&#34;&gt;&lt;/a&gt;&lt;a name=&#34;7.14&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--spread-vs-apply&#34;&gt;7.14&lt;/a&gt; Prefer the use of the spread syntax &lt;code&gt;...&lt;/code&gt; to call variadic functions. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/prefer-spread&#34;&gt;&lt;code&gt;prefer-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? It’s cleaner, you don’t need to supply a context, and you can not easily compose &lt;code&gt;new&lt;/code&gt; with &lt;code&gt;apply&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const x = [1, 2, 3, 4, 5];&#xA;console.log.apply(console, x);&#xA;&#xA;// good&#xA;const x = [1, 2, 3, 4, 5];&#xA;console.log(...x);&#xA;&#xA;// bad&#xA;new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));&#xA;&#xA;// good&#xA;new Date(...[2016, 8, 5]);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;functions--signature-invocation-indentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-invocation-indentation&#34;&gt;7.15&lt;/a&gt; Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/function-paren-newline&#34;&gt;&lt;code&gt;function-paren-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function foo(bar,&#xA;             baz,&#xA;             quux) {&#xA;  // ...&#xA;}&#xA;&#xA;// good&#xA;function foo(&#xA;  bar,&#xA;  baz,&#xA;  quux,&#xA;) {&#xA;  // ...&#xA;}&#xA;&#xA;// bad&#xA;console.log(foo,&#xA;  bar,&#xA;  baz);&#xA;&#xA;// good&#xA;console.log(&#xA;  foo,&#xA;  bar,&#xA;  baz,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Arrow Functions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;arrows--use-them&#34;&gt;&lt;/a&gt;&lt;a name=&#34;8.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--use-them&#34;&gt;8.1&lt;/a&gt; When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/prefer-arrow-callback&#34;&gt;&lt;code&gt;prefer-arrow-callback&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://eslint.org/docs/rules/arrow-spacing&#34;&gt;&lt;code&gt;arrow-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? It creates a version of the function that executes in the context of &lt;code&gt;this&lt;/code&gt;, which is usually what you want, and is a more concise syntax.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;[1, 2, 3].map(function (x) {&#xA;  const y = x + 1;&#xA;  return x * y;&#xA;});&#xA;&#xA;// good&#xA;[1, 2, 3].map((x) =&amp;gt; {&#xA;  const y = x + 1;&#xA;  return x * y;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;arrows--implicit-return&#34;&gt;&lt;/a&gt;&lt;a name=&#34;8.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&#34;&gt;8.2&lt;/a&gt; If the function body consists of a single statement returning an &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&#34;&gt;expression&lt;/a&gt; without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a &lt;code&gt;return&lt;/code&gt; statement. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/arrow-parens&#34;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://eslint.org/docs/rules/arrow-body-style&#34;&gt;&lt;code&gt;arrow-body-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Syntactic sugar. It reads well when multiple functions are chained together.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;[1, 2, 3].map((number) =&amp;gt; {&#xA;  const nextNumber = number + 1;&#xA;  `A string containing the ${nextNumber}.`;&#xA;});&#xA;&#xA;// good&#xA;[1, 2, 3].map((number) =&amp;gt; `A string containing the ${number + 1}.`);&#xA;&#xA;// good&#xA;[1, 2, 3].map((number) =&amp;gt; {&#xA;  const nextNumber = number + 1;&#xA;  return `A string containing the ${nextNumber}.`;&#xA;});&#xA;&#xA;// good&#xA;[1, 2, 3].map((number, index) =&amp;gt; ({&#xA;  [index]: number,&#xA;}));&#xA;&#xA;// No implicit return with side effects&#xA;function foo(callback) {&#xA;  const val = callback();&#xA;  if (val === true) {&#xA;    // Do something if callback returns true&#xA;  }&#xA;}&#xA;&#xA;let bool = false;&#xA;&#xA;// bad&#xA;foo(() =&amp;gt; bool = true);&#xA;&#xA;// good&#xA;foo(() =&amp;gt; {&#xA;  bool = true;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;arrows--paren-wrap&#34;&gt;&lt;/a&gt;&lt;a name=&#34;8.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--paren-wrap&#34;&gt;8.3&lt;/a&gt; In case the expression spans over multiple lines, wrap it in parentheses for better readability.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? It shows clearly where the function starts and ends.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; Object.prototype.hasOwnProperty.call(&#xA;    httpMagicObjectWithAVeryLongName,&#xA;    httpMethod,&#xA;  )&#xA;);&#xA;&#xA;// good&#xA;[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; (&#xA;  Object.prototype.hasOwnProperty.call(&#xA;    httpMagicObjectWithAVeryLongName,&#xA;    httpMethod,&#xA;  )&#xA;));&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;arrows--one-arg-parens&#34;&gt;&lt;/a&gt;&lt;a name=&#34;8.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--one-arg-parens&#34;&gt;8.4&lt;/a&gt; Always include parentheses around arguments for clarity and consistency. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/arrow-parens&#34;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Minimizes diff churn when adding or removing arguments.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;[1, 2, 3].map(x =&amp;gt; x * x);&#xA;&#xA;// good&#xA;[1, 2, 3].map((x) =&amp;gt; x * x);&#xA;&#xA;// bad&#xA;[1, 2, 3].map(number =&amp;gt; (&#xA;  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`&#xA;));&#xA;&#xA;// good&#xA;[1, 2, 3].map((number) =&amp;gt; (&#xA;  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`&#xA;));&#xA;&#xA;// bad&#xA;[1, 2, 3].map(x =&amp;gt; {&#xA;  const y = x + 1;&#xA;  return x * y;&#xA;});&#xA;&#xA;// good&#xA;[1, 2, 3].map((x) =&amp;gt; {&#xA;  const y = x + 1;&#xA;  return x * y;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;arrows--confusing&#34;&gt;&lt;/a&gt;&lt;a name=&#34;8.5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--confusing&#34;&gt;8.5&lt;/a&gt; Avoid confusing arrow function syntax (&lt;code&gt;=&amp;gt;&lt;/code&gt;) with comparison operators (&lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;). eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-confusing-arrow&#34;&gt;&lt;code&gt;no-confusing-arrow&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const itemHeight = (item) =&amp;gt; item.height &amp;lt;= 256 ? item.largeSize : item.smallSize;&#xA;&#xA;// bad&#xA;const itemHeight = (item) =&amp;gt; item.height &amp;gt;= 256 ? item.largeSize : item.smallSize;&#xA;&#xA;// good&#xA;const itemHeight = (item) =&amp;gt; (item.height &amp;lt;= 256 ? item.largeSize : item.smallSize);&#xA;&#xA;// good&#xA;const itemHeight = (item) =&amp;gt; {&#xA;  const { height, largeSize, smallSize } = item;&#xA;  return height &amp;lt;= 256 ? largeSize : smallSize;&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--implicit-arrow-linebreak&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--implicit-arrow-linebreak&#34;&gt;8.6&lt;/a&gt; Enforce the location of arrow function bodies with implicit returns. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/implicit-arrow-linebreak&#34;&gt;&lt;code&gt;implicit-arrow-linebreak&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;(foo) =&amp;gt;&#xA;  bar;&#xA;&#xA;(foo) =&amp;gt;&#xA;  (bar);&#xA;&#xA;// good&#xA;(foo) =&amp;gt; bar;&#xA;(foo) =&amp;gt; (bar);&#xA;(foo) =&amp;gt; (&#xA;   bar&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Classes &amp;amp; Constructors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;constructors--use-class&#34;&gt;&lt;/a&gt;&lt;a name=&#34;9.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--use-class&#34;&gt;9.1&lt;/a&gt; Always use &lt;code&gt;class&lt;/code&gt;. Avoid manipulating &lt;code&gt;prototype&lt;/code&gt; directly.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? &lt;code&gt;class&lt;/code&gt; syntax is more concise and easier to reason about.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function Queue(contents = []) {&#xA;  this.queue = [...contents];&#xA;}&#xA;Queue.prototype.pop = function () {&#xA;  const value = this.queue[0];&#xA;  this.queue.splice(0, 1);&#xA;  return value;&#xA;};&#xA;&#xA;// good&#xA;class Queue {&#xA;  constructor(contents = []) {&#xA;    this.queue = [...contents];&#xA;  }&#xA;  pop() {&#xA;    const value = this.queue[0];&#xA;    this.queue.splice(0, 1);&#xA;    return value;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;constructors--extends&#34;&gt;&lt;/a&gt;&lt;a name=&#34;9.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--extends&#34;&gt;9.2&lt;/a&gt; Use &lt;code&gt;extends&lt;/code&gt; for inheritance.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? It is a built-in way to inherit prototype functionality without breaking &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const inherits = require(&#39;inherits&#39;);&#xA;function PeekableQueue(contents) {&#xA;  Queue.apply(this, contents);&#xA;}&#xA;inherits(PeekableQueue, Queue);&#xA;PeekableQueue.prototype.peek = function () {&#xA;  return this.queue[0];&#xA;};&#xA;&#xA;// good&#xA;class PeekableQueue extends Queue {&#xA;  peek() {&#xA;    return this.queue[0];&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;constructors--chaining&#34;&gt;&lt;/a&gt;&lt;a name=&#34;9.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--chaining&#34;&gt;9.3&lt;/a&gt; Methods can return &lt;code&gt;this&lt;/code&gt; to help with method chaining.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;Jedi.prototype.jump = function () {&#xA;  this.jumping = true;&#xA;  return true;&#xA;};&#xA;&#xA;Jedi.prototype.setHeight = function (height) {&#xA;  this.height = height;&#xA;};&#xA;&#xA;const luke = new Jedi();&#xA;luke.jump(); // =&amp;gt; true&#xA;luke.setHeight(20); // =&amp;gt; undefined&#xA;&#xA;// good&#xA;class Jedi {&#xA;  jump() {&#xA;    this.jumping = true;&#xA;    return this;&#xA;  }&#xA;&#xA;  setHeight(height) {&#xA;    this.height = height;&#xA;    return this;&#xA;  }&#xA;}&#xA;&#xA;const luke = new Jedi();&#xA;&#xA;luke.jump()&#xA;  .setHeight(20);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;constructors--tostring&#34;&gt;&lt;/a&gt;&lt;a name=&#34;9.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--tostring&#34;&gt;9.4&lt;/a&gt; It’s okay to write a custom &lt;code&gt;toString()&lt;/code&gt; method, just make sure it works successfully and causes no side effects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class Jedi {&#xA;  constructor(options = {}) {&#xA;    this.name = options.name || &#39;no name&#39;;&#xA;  }&#xA;&#xA;  getName() {&#xA;    return this.name;&#xA;  }&#xA;&#xA;  toString() {&#xA;    return `Jedi - ${this.getName()}`;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;constructors--no-useless&#34;&gt;&lt;/a&gt;&lt;a name=&#34;9.5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--no-useless&#34;&gt;9.5&lt;/a&gt; Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-useless-constructor&#34;&gt;&lt;code&gt;no-useless-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;class Jedi {&#xA;  constructor() {}&#xA;&#xA;  getName() {&#xA;    return this.name;&#xA;  }&#xA;}&#xA;&#xA;// bad&#xA;class Rey extends Jedi {&#xA;  constructor(...args) {&#xA;    super(...args);&#xA;  }&#xA;}&#xA;&#xA;// good&#xA;class Rey extends Jedi {&#xA;  constructor(...args) {&#xA;    super(...args);&#xA;    this.name = &#39;Rey&#39;;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;classes--no-duplicate-members&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--no-duplicate-members&#34;&gt;9.6&lt;/a&gt; Avoid duplicate class members. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-dupe-class-members&#34;&gt;&lt;code&gt;no-dupe-class-members&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;class Foo {&#xA;  bar() { return 1; }&#xA;  bar() { return 2; }&#xA;}&#xA;&#xA;// good&#xA;class Foo {&#xA;  bar() { return 1; }&#xA;}&#xA;&#xA;// good&#xA;class Foo {&#xA;  bar() { return 2; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;classes--methods-use-this&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--methods-use-this&#34;&gt;9.7&lt;/a&gt; Class methods should use &lt;code&gt;this&lt;/code&gt; or be made into a static method unless an external library or framework requires using specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/class-methods-use-this&#34;&gt;&lt;code&gt;class-methods-use-this&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;class Foo {&#xA;  bar() {&#xA;    console.log(&#39;bar&#39;);&#xA;  }&#xA;}&#xA;&#xA;// good - this is used&#xA;class Foo {&#xA;  bar() {&#xA;    console.log(this.bar);&#xA;  }&#xA;}&#xA;&#xA;// good - constructor is exempt&#xA;class Foo {&#xA;  constructor() {&#xA;    // ...&#xA;  }&#xA;}&#xA;&#xA;// good - static methods aren&#39;t expected to use this&#xA;class Foo {&#xA;  static bar() {&#xA;    console.log(&#39;bar&#39;);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;modules--use-them&#34;&gt;&lt;/a&gt;&lt;a name=&#34;10.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--use-them&#34;&gt;10.1&lt;/a&gt; Always use modules (&lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt;) over a non-standard module system. You can always transpile to your preferred module system.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Modules are the future, let’s start using the future now.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const AirbnbStyleGuide = require(&#39;./AirbnbStyleGuide&#39;);&#xA;module.exports = AirbnbStyleGuide.es6;&#xA;&#xA;// ok&#xA;import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;&#xA;export default AirbnbStyleGuide.es6;&#xA;&#xA;// best&#xA;import { es6 } from &#39;./AirbnbStyleGuide&#39;;&#xA;export default es6;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;modules--no-wildcard&#34;&gt;&lt;/a&gt;&lt;a name=&#34;10.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-wildcard&#34;&gt;10.2&lt;/a&gt; Do not use wildcard imports.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? This makes sure you have a single default export.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;import * as AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;&#xA;&#xA;// good&#xA;import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;modules--no-export-from-import&#34;&gt;&lt;/a&gt;&lt;a name=&#34;10.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-export-from-import&#34;&gt;10.3&lt;/a&gt; And do not export directly from an import.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;// filename es6.js&#xA;export { es6 as default } from &#39;./AirbnbStyleGuide&#39;;&#xA;&#xA;// good&#xA;// filename es6.js&#xA;import { es6 } from &#39;./AirbnbStyleGuide&#39;;&#xA;export default es6;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;modules--no-duplicate-imports&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-duplicate-imports&#34;&gt;10.4&lt;/a&gt; Only import from a path in one place. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-duplicate-imports&#34;&gt;&lt;code&gt;no-duplicate-imports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Having multiple lines that import from the same path can make code harder to maintain.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;import foo from &#39;foo&#39;;&#xA;// … some other imports … //&#xA;import { named1, named2 } from &#39;foo&#39;;&#xA;&#xA;// good&#xA;import foo, { named1, named2 } from &#39;foo&#39;;&#xA;&#xA;// good&#xA;import foo, {&#xA;  named1,&#xA;  named2,&#xA;} from &#39;foo&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;modules--no-mutable-exports&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-mutable-exports&#34;&gt;10.5&lt;/a&gt; Do not export mutable bindings. eslint: &lt;a href=&#34;https://github.com/import-js/eslint-plugin-import/raw/master/docs/rules/no-mutable-exports.md&#34;&gt;&lt;code&gt;import/no-mutable-exports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;let foo = 3;&#xA;export { foo };&#xA;&#xA;// good&#xA;const foo = 3;&#xA;export { foo };&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;modules--prefer-default-export&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--prefer-default-export&#34;&gt;10.6&lt;/a&gt; In modules with a single export, prefer default export over named export. eslint: &lt;a href=&#34;https://github.com/import-js/eslint-plugin-import/raw/master/docs/rules/prefer-default-export.md&#34;&gt;&lt;code&gt;import/prefer-default-export&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;export function foo() {}&#xA;&#xA;// good&#xA;export default function foo() {}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;modules--imports-first&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--imports-first&#34;&gt;10.7&lt;/a&gt; Put all &lt;code&gt;import&lt;/code&gt;s above non-import statements. eslint: &lt;a href=&#34;https://github.com/import-js/eslint-plugin-import/raw/master/docs/rules/first.md&#34;&gt;&lt;code&gt;import/first&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Since &lt;code&gt;import&lt;/code&gt;s are hoisted, keeping them all at the top prevents surprising behavior.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;import foo from &#39;foo&#39;;&#xA;foo.init();&#xA;&#xA;import bar from &#39;bar&#39;;&#xA;&#xA;// good&#xA;import foo from &#39;foo&#39;;&#xA;import bar from &#39;bar&#39;;&#xA;&#xA;foo.init();&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;modules--multiline-imports-over-newlines&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--multiline-imports-over-newlines&#34;&gt;10.8&lt;/a&gt; Multiline imports should be indented just like multiline array and object literals. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/object-curly-newline&#34;&gt;&lt;code&gt;object-curly-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;import {longNameA, longNameB, longNameC, longNameD, longNameE} from &#39;path&#39;;&#xA;&#xA;// good&#xA;import {&#xA;  longNameA,&#xA;  longNameB,&#xA;  longNameC,&#xA;  longNameD,&#xA;  longNameE,&#xA;} from &#39;path&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;modules--no-webpack-loader-syntax&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-webpack-loader-syntax&#34;&gt;10.9&lt;/a&gt; Disallow Webpack loader syntax in module import statements. eslint: &lt;a href=&#34;https://github.com/import-js/eslint-plugin-import/raw/master/docs/rules/no-webpack-loader-syntax.md&#34;&gt;&lt;code&gt;import/no-webpack-loader-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in &lt;code&gt;webpack.config.js&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;import fooSass from &#39;css!sass!foo.scss&#39;;&#xA;import barCss from &#39;style!css!bar.css&#39;;&#xA;&#xA;// good&#xA;import fooSass from &#39;foo.scss&#39;;&#xA;import barCss from &#39;bar.css&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;modules--import-extensions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--import-extensions&#34;&gt;10.10&lt;/a&gt; Do not include JavaScript filename extensions eslint: &lt;a href=&#34;https://github.com/import-js/eslint-plugin-import/raw/master/docs/rules/extensions.md&#34;&gt;&lt;code&gt;import/extensions&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you&#39;re importing in every consumer.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;import foo from &#39;./foo.js&#39;;&#xA;import bar from &#39;./bar.jsx&#39;;&#xA;import baz from &#39;./baz/index.jsx&#39;;&#xA;&#xA;// good&#xA;import foo from &#39;./foo&#39;;&#xA;import bar from &#39;./bar&#39;;&#xA;import baz from &#39;./baz&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Iterators and Generators&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;iterators--nope&#34;&gt;&lt;/a&gt;&lt;a name=&#34;11.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators--nope&#34;&gt;11.1&lt;/a&gt; Don’t use iterators. Prefer JavaScript’s higher-order functions instead of loops like &lt;code&gt;for-in&lt;/code&gt; or &lt;code&gt;for-of&lt;/code&gt;. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-iterator&#34;&gt;&lt;code&gt;no-iterator&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://eslint.org/docs/rules/no-restricted-syntax&#34;&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Use &lt;code&gt;map()&lt;/code&gt; / &lt;code&gt;every()&lt;/code&gt; / &lt;code&gt;filter()&lt;/code&gt; / &lt;code&gt;find()&lt;/code&gt; / &lt;code&gt;findIndex()&lt;/code&gt; / &lt;code&gt;reduce()&lt;/code&gt; / &lt;code&gt;some()&lt;/code&gt; / ... to iterate over arrays, and &lt;code&gt;Object.keys()&lt;/code&gt; / &lt;code&gt;Object.values()&lt;/code&gt; / &lt;code&gt;Object.entries()&lt;/code&gt; to produce arrays so you can iterate over objects.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const numbers = [1, 2, 3, 4, 5];&#xA;&#xA;// bad&#xA;let sum = 0;&#xA;for (let num of numbers) {&#xA;  sum += num;&#xA;}&#xA;sum === 15;&#xA;&#xA;// good&#xA;let sum = 0;&#xA;numbers.forEach((num) =&amp;gt; {&#xA;  sum += num;&#xA;});&#xA;sum === 15;&#xA;&#xA;// best (use the functional force)&#xA;const sum = numbers.reduce((total, num) =&amp;gt; total + num, 0);&#xA;sum === 15;&#xA;&#xA;// bad&#xA;const increasedByOne = [];&#xA;for (let i = 0; i &amp;lt; numbers.length; i++) {&#xA;  increasedByOne.push(numbers[i] + 1);&#xA;}&#xA;&#xA;// good&#xA;const increasedByOne = [];&#xA;numbers.forEach((num) =&amp;gt; {&#xA;  increasedByOne.push(num + 1);&#xA;});&#xA;&#xA;// best (keeping it functional)&#xA;const increasedByOne = numbers.map((num) =&amp;gt; num + 1);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;generators--nope&#34;&gt;&lt;/a&gt;&lt;a name=&#34;11.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&#34;&gt;11.2&lt;/a&gt; Don’t use generators for now.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? They don’t transpile well to ES5.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;generators--spacing&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--spacing&#34;&gt;11.3&lt;/a&gt; If you must use generators, or if you disregard &lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&#34;&gt;our advice&lt;/a&gt;, make sure their function signature is spaced properly. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/generator-star-spacing&#34;&gt;&lt;code&gt;generator-star-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; are part of the same conceptual keyword - &lt;code&gt;*&lt;/code&gt; is not a modifier for &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;function*&lt;/code&gt; is a unique construct, different from &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function * foo() {&#xA;  // ...&#xA;}&#xA;&#xA;// bad&#xA;const bar = function * () {&#xA;  // ...&#xA;};&#xA;&#xA;// bad&#xA;const baz = function *() {&#xA;  // ...&#xA;};&#xA;&#xA;// bad&#xA;const quux = function*() {&#xA;  // ...&#xA;};&#xA;&#xA;// bad&#xA;function*foo() {&#xA;  // ...&#xA;}&#xA;&#xA;// bad&#xA;function *foo() {&#xA;  // ...&#xA;}&#xA;&#xA;// very bad&#xA;function&#xA;*&#xA;foo() {&#xA;  // ...&#xA;}&#xA;&#xA;// very bad&#xA;const wat = function&#xA;*&#xA;() {&#xA;  // ...&#xA;};&#xA;&#xA;// good&#xA;function* foo() {&#xA;  // ...&#xA;}&#xA;&#xA;// good&#xA;const foo = function* () {&#xA;  // ...&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Properties&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;properties--dot&#34;&gt;&lt;/a&gt;&lt;a name=&#34;12.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--dot&#34;&gt;12.1&lt;/a&gt; Use dot notation when accessing properties. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/dot-notation&#34;&gt;&lt;code&gt;dot-notation&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const luke = {&#xA;  jedi: true,&#xA;  age: 28,&#xA;};&#xA;&#xA;// bad&#xA;const isJedi = luke[&#39;jedi&#39;];&#xA;&#xA;// good&#xA;const isJedi = luke.jedi;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;properties--bracket&#34;&gt;&lt;/a&gt;&lt;a name=&#34;12.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--bracket&#34;&gt;12.2&lt;/a&gt; Use bracket notation &lt;code&gt;[]&lt;/code&gt; when accessing properties with a variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const luke = {&#xA;  jedi: true,&#xA;  age: 28,&#xA;};&#xA;&#xA;function getProp(prop) {&#xA;  return luke[prop];&#xA;}&#xA;&#xA;const isJedi = getProp(&#39;jedi&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;es2016-properties--exponentiation-operator&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&#34;&gt;12.3&lt;/a&gt; Use exponentiation operator &lt;code&gt;**&lt;/code&gt; when calculating exponentiations. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/prefer-exponentiation-operator&#34;&gt;&lt;code&gt;prefer-exponentiation-operator&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const binary = Math.pow(2, 10);&#xA;&#xA;// good&#xA;const binary = 2 ** 10;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Variables&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;variables--const&#34;&gt;&lt;/a&gt;&lt;a name=&#34;13.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const&#34;&gt;13.1&lt;/a&gt; Always use &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-undef&#34;&gt;&lt;code&gt;no-undef&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://eslint.org/docs/rules/prefer-const&#34;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;superPower = new SuperPower();&#xA;&#xA;// good&#xA;const superPower = new SuperPower();&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;variables--one-const&#34;&gt;&lt;/a&gt;&lt;a name=&#34;13.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--one-const&#34;&gt;13.2&lt;/a&gt; Use one &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; declaration per variable or assignment. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/one-var&#34;&gt;&lt;code&gt;one-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? It’s easier to add new variable declarations this way, and you never have to worry about swapping out a &lt;code&gt;;&lt;/code&gt; for a &lt;code&gt;,&lt;/code&gt; or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const items = getItems(),&#xA;    goSportsTeam = true,&#xA;    dragonball = &#39;z&#39;;&#xA;&#xA;// bad&#xA;// (compare to above, and try to spot the mistake)&#xA;const items = getItems(),&#xA;    goSportsTeam = true;&#xA;    dragonball = &#39;z&#39;;&#xA;&#xA;// good&#xA;const items = getItems();&#xA;const goSportsTeam = true;&#xA;const dragonball = &#39;z&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;variables--const-let-group&#34;&gt;&lt;/a&gt;&lt;a name=&#34;13.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const-let-group&#34;&gt;13.3&lt;/a&gt; Group all your &lt;code&gt;const&lt;/code&gt;s and then group all your &lt;code&gt;let&lt;/code&gt;s.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;let i, len, dragonball,&#xA;    items = getItems(),&#xA;    goSportsTeam = true;&#xA;&#xA;// bad&#xA;let i;&#xA;const items = getItems();&#xA;let dragonball;&#xA;const goSportsTeam = true;&#xA;let len;&#xA;&#xA;// good&#xA;const goSportsTeam = true;&#xA;const items = getItems();&#xA;let dragonball;&#xA;let i;&#xA;let length;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;variables--define-where-used&#34;&gt;&lt;/a&gt;&lt;a name=&#34;13.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--define-where-used&#34;&gt;13.4&lt;/a&gt; Assign variables where you need them, but place them in a reasonable place.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped and not function scoped.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad - unnecessary function call&#xA;function checkName(hasName) {&#xA;  const name = getName();&#xA;&#xA;  if (hasName === &#39;test&#39;) {&#xA;    return false;&#xA;  }&#xA;&#xA;  if (name === &#39;test&#39;) {&#xA;    this.setName(&#39;&#39;);&#xA;    return false;&#xA;  }&#xA;&#xA;  return name;&#xA;}&#xA;&#xA;// good&#xA;function checkName(hasName) {&#xA;  if (hasName === &#39;test&#39;) {&#xA;    return false;&#xA;  }&#xA;&#xA;  const name = getName();&#xA;&#xA;  if (name === &#39;test&#39;) {&#xA;    this.setName(&#39;&#39;);&#xA;    return false;&#xA;  }&#xA;&#xA;  return name;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;variables--no-chain-assignment&#34;&gt;&lt;/a&gt;&lt;a name=&#34;13.5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-chain-assignment&#34;&gt;13.5&lt;/a&gt; Don’t chain variable assignments. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-multi-assign&#34;&gt;&lt;code&gt;no-multi-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Chaining variable assignments creates implicit global variables.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;(function example() {&#xA;  // JavaScript interprets this as&#xA;  // let a = ( b = ( c = 1 ) );&#xA;  // The let keyword only applies to variable a; variables b and c become&#xA;  // global variables.&#xA;  let a = b = c = 1;&#xA;}());&#xA;&#xA;console.log(a); // throws ReferenceError&#xA;console.log(b); // 1&#xA;console.log(c); // 1&#xA;&#xA;// good&#xA;(function example() {&#xA;  let a = 1;&#xA;  let b = a;&#xA;  let c = a;&#xA;}());&#xA;&#xA;console.log(a); // throws ReferenceError&#xA;console.log(b); // throws ReferenceError&#xA;console.log(c); // throws ReferenceError&#xA;&#xA;// the same applies for `const`&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;variables--unary-increment-decrement&#34;&gt;&lt;/a&gt;&lt;a name=&#34;13.6&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--unary-increment-decrement&#34;&gt;13.6&lt;/a&gt; Avoid using unary increments and decrements (&lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;). eslint &lt;a href=&#34;https://eslint.org/docs/rules/no-plusplus&#34;&gt;&lt;code&gt;no-plusplus&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like &lt;code&gt;num += 1&lt;/code&gt; instead of &lt;code&gt;num++&lt;/code&gt; or &lt;code&gt;num ++&lt;/code&gt;. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;&#xA;const array = [1, 2, 3];&#xA;let num = 1;&#xA;num++;&#xA;--num;&#xA;&#xA;let sum = 0;&#xA;let truthyCount = 0;&#xA;for (let i = 0; i &amp;lt; array.length; i++) {&#xA;  let value = array[i];&#xA;  sum += value;&#xA;  if (value) {&#xA;    truthyCount++;&#xA;  }&#xA;}&#xA;&#xA;// good&#xA;&#xA;const array = [1, 2, 3];&#xA;let num = 1;&#xA;num += 1;&#xA;num -= 1;&#xA;&#xA;const sum = array.reduce((a, b) =&amp;gt; a + b, 0);&#xA;const truthyCount = array.filter(Boolean).length;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;variables--linebreak&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--linebreak&#34;&gt;13.7&lt;/a&gt; Avoid linebreaks before or after &lt;code&gt;=&lt;/code&gt; in an assignment. If your assignment violates &lt;a href=&#34;https://eslint.org/docs/rules/max-len&#34;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;, surround the value in parens. eslint &lt;a href=&#34;https://eslint.org/docs/rules/operator-linebreak&#34;&gt;&lt;code&gt;operator-linebreak&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Linebreaks surrounding &lt;code&gt;=&lt;/code&gt; can obfuscate the value of an assignment.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const foo =&#xA;  superLongLongLongLongLongLongLongLongFunctionName();&#xA;&#xA;// bad&#xA;const foo&#xA;  = &#39;superLongLongLongLongLongLongLongLongString&#39;;&#xA;&#xA;// good&#xA;const foo = (&#xA;  superLongLongLongLongLongLongLongLongFunctionName()&#xA;);&#xA;&#xA;// good&#xA;const foo = &#39;superLongLongLongLongLongLongLongLongString&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;variables--no-unused-vars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-unused-vars&#34;&gt;13.8&lt;/a&gt; Disallow unused variables. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-unused-vars&#34;&gt;&lt;code&gt;no-unused-vars&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;&#xA;const some_unused_var = 42;&#xA;&#xA;// Write-only variables are not considered as used.&#xA;let y = 10;&#xA;y = 5;&#xA;&#xA;// A read for a modification of itself is not considered as used.&#xA;let z = 0;&#xA;z = z + 1;&#xA;&#xA;// Unused function arguments.&#xA;function getX(x, y) {&#xA;    return x;&#xA;}&#xA;&#xA;// good&#xA;&#xA;function getXPlusY(x, y) {&#xA;  return x + y;&#xA;}&#xA;&#xA;const x = 1;&#xA;const y = a + 2;&#xA;&#xA;alert(getXPlusY(x, y));&#xA;&#xA;// &#39;type&#39; is ignored even if unused because it has a rest property sibling.&#xA;// This is a form of extracting an object that omits the specified keys.&#xA;const { type, ...coords } = data;&#xA;// &#39;coords&#39; is now the &#39;data&#39; object without its &#39;type&#39; property.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hoisting&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;hoisting--about&#34;&gt;&lt;/a&gt;&lt;a name=&#34;14.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--about&#34;&gt;14.1&lt;/a&gt; &lt;code&gt;var&lt;/code&gt; declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declarations are blessed with a new concept called &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#temporal_dead_zone_tdz&#34;&gt;Temporal Dead Zones (TDZ)&lt;/a&gt;. It’s important to know why &lt;a href=&#34;https://web.archive.org/web/20200121061528/http://es-discourse.com/t/why-typeof-is-no-longer-safe/15&#34;&gt;typeof is no longer safe&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// we know this wouldn’t work (assuming there&#xA;// is no notDefined global variable)&#xA;function example() {&#xA;  console.log(notDefined); // =&amp;gt; throws a ReferenceError&#xA;}&#xA;&#xA;// creating a variable declaration after you&#xA;// reference the variable will work due to&#xA;// variable hoisting. Note: the assignment&#xA;// value of `true` is not hoisted.&#xA;function example() {&#xA;  console.log(declaredButNotAssigned); // =&amp;gt; undefined&#xA;  var declaredButNotAssigned = true;&#xA;}&#xA;&#xA;// the interpreter is hoisting the variable&#xA;// declaration to the top of the scope,&#xA;// which means our example could be rewritten as:&#xA;function example() {&#xA;  let declaredButNotAssigned;&#xA;  console.log(declaredButNotAssigned); // =&amp;gt; undefined&#xA;  declaredButNotAssigned = true;&#xA;}&#xA;&#xA;// using const and let&#xA;function example() {&#xA;  console.log(declaredButNotAssigned); // =&amp;gt; throws a ReferenceError&#xA;  console.log(typeof declaredButNotAssigned); // =&amp;gt; throws a ReferenceError&#xA;  const declaredButNotAssigned = true;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;hoisting--anon-expressions&#34;&gt;&lt;/a&gt;&lt;a name=&#34;14.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--anon-expressions&#34;&gt;14.2&lt;/a&gt; Anonymous function expressions hoist their variable name, but not the function assignment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function example() {&#xA;  console.log(anonymous); // =&amp;gt; undefined&#xA;&#xA;  anonymous(); // =&amp;gt; TypeError anonymous is not a function&#xA;&#xA;  var anonymous = function () {&#xA;    console.log(&#39;anonymous function expression&#39;);&#xA;  };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;hoisting--named-expresions&#34;&gt;&lt;/a&gt;&lt;a name=&#34;hoisting--named-expressions&#34;&gt;&lt;/a&gt;&lt;a name=&#34;14.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--named-expressions&#34;&gt;14.3&lt;/a&gt; Named function expressions hoist the variable name, not the function name or the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function example() {&#xA;  console.log(named); // =&amp;gt; undefined&#xA;&#xA;  named(); // =&amp;gt; TypeError named is not a function&#xA;&#xA;  superPower(); // =&amp;gt; ReferenceError superPower is not defined&#xA;&#xA;  var named = function superPower() {&#xA;    console.log(&#39;Flying&#39;);&#xA;  };&#xA;}&#xA;&#xA;// the same is true when the function name&#xA;// is the same as the variable name.&#xA;function example() {&#xA;  console.log(named); // =&amp;gt; undefined&#xA;&#xA;  named(); // =&amp;gt; TypeError named is not a function&#xA;&#xA;  var named = function named() {&#xA;    console.log(&#39;named&#39;);&#xA;  };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;hoisting--declarations&#34;&gt;&lt;/a&gt;&lt;a name=&#34;14.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--declarations&#34;&gt;14.4&lt;/a&gt; Function declarations hoist their name and the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function example() {&#xA;  superPower(); // =&amp;gt; Flying&#xA;&#xA;  function superPower() {&#xA;    console.log(&#39;Flying&#39;);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;no-use-before-define&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#no-use-before-define&#34;&gt;14.5&lt;/a&gt; Variables, classes, and functions should be defined before they can be used. eslint: &lt;a href=&#34;https://eslint.org/docs/latest/rules/no-use-before-define&#34;&gt;&lt;code&gt;no-use-before-define&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? When variables, classes, or functions are declared after being used, it can harm readability since a reader won&#39;t know what a thing that&#39;s referenced is. It&#39;s much clearer for a reader to first encounter the source of a thing (whether imported from another module, or defined in the file) before encountering a use of the thing.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;&#xA;// Variable a is being used before it is being defined.&#xA;console.log(a); // this will be undefined, since while the declaration is hoisted, the initialization is not&#xA;var a = 10;&#xA;&#xA;// Function fun is being called before being defined.&#xA;fun();&#xA;function fun() {}&#xA;&#xA;// Class A is being used before being defined.&#xA;new A(); // ReferenceError: Cannot access &#39;A&#39; before initialization&#xA;class A {&#xA;}&#xA;&#xA;// `let` and `const` are hoisted, but they don&#39;t have a default initialization.&#xA;// The variables &#39;a&#39; and &#39;b&#39; are in a Temporal Dead Zone where JavaScript&#xA;// knows they exist (declaration is hoisted) but they are not accessible&#xA;// (as they are not yet initialized).&#xA;&#xA;console.log(a); // ReferenceError: Cannot access &#39;a&#39; before initialization&#xA;console.log(b); // ReferenceError: Cannot access &#39;b&#39; before initialization&#xA;let a = 10;&#xA;const b = 5;&#xA;&#xA;&#xA;// good&#xA;&#xA;var a = 10;&#xA;console.log(a); // 10&#xA;&#xA;function fun() {}&#xA;fun();&#xA;&#xA;class A {&#xA;}&#xA;new A();&#xA;&#xA;let a = 10;&#xA;const b = 5;&#xA;console.log(a); // 10&#xA;console.log(b); // 5&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For more information refer to &lt;a href=&#34;https://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/&#34;&gt;JavaScript Scoping &amp;amp; Hoisting&lt;/a&gt; by &lt;a href=&#34;https://www.adequatelygood.com/&#34;&gt;Ben Cherry&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Comparison Operators &amp;amp; Equality&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comparison--eqeqeq&#34;&gt;&lt;/a&gt;&lt;a name=&#34;15.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--eqeqeq&#34;&gt;15.1&lt;/a&gt; Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; over &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/eqeqeq&#34;&gt;&lt;code&gt;eqeqeq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comparison--if&#34;&gt;&lt;/a&gt;&lt;a name=&#34;15.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--if&#34;&gt;15.2&lt;/a&gt; Conditional statements such as the &lt;code&gt;if&lt;/code&gt; statement evaluate their expression using coercion with the &lt;code&gt;ToBoolean&lt;/code&gt; abstract method and always follow these simple rules:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt; evaluate to &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt; evaluate to &lt;strong&gt;the value of the boolean&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if &lt;strong&gt;+0, -0, or NaN&lt;/strong&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;if ([0] &amp;amp;&amp;amp; []) {&#xA;  // true&#xA;  // an array (even an empty one) is an object, objects will evaluate to true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comparison--shortcuts&#34;&gt;&lt;/a&gt;&lt;a name=&#34;15.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--shortcuts&#34;&gt;15.3&lt;/a&gt; Use shortcuts for booleans, but explicit comparisons for strings and numbers.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;if (isValid === true) {&#xA;  // ...&#xA;}&#xA;&#xA;// good&#xA;if (isValid) {&#xA;  // ...&#xA;}&#xA;&#xA;// bad&#xA;if (name) {&#xA;  // ...&#xA;}&#xA;&#xA;// good&#xA;if (name !== &#39;&#39;) {&#xA;  // ...&#xA;}&#xA;&#xA;// bad&#xA;if (collection.length) {&#xA;  // ...&#xA;}&#xA;&#xA;// good&#xA;if (collection.length &amp;gt; 0) {&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comparison--moreinfo&#34;&gt;&lt;/a&gt;&lt;a name=&#34;15.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--moreinfo&#34;&gt;15.4&lt;/a&gt; For more information see &lt;a href=&#34;https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108&#34;&gt;Truth, Equality, and JavaScript&lt;/a&gt; by Angus Croll.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comparison--switch-blocks&#34;&gt;&lt;/a&gt;&lt;a name=&#34;15.5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--switch-blocks&#34;&gt;15.5&lt;/a&gt; Use braces to create blocks in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses that contain lexical declarations (e.g. &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, and &lt;code&gt;class&lt;/code&gt;). eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-case-declarations&#34;&gt;&lt;code&gt;no-case-declarations&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Lexical declarations are visible in the entire &lt;code&gt;switch&lt;/code&gt; block but only get initialized when assigned, which only happens when its &lt;code&gt;case&lt;/code&gt; is reached. This causes problems when multiple &lt;code&gt;case&lt;/code&gt; clauses attempt to define the same thing.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;switch (foo) {&#xA;  case 1:&#xA;    let x = 1;&#xA;    break;&#xA;  case 2:&#xA;    const y = 2;&#xA;    break;&#xA;  case 3:&#xA;    function f() {&#xA;      // ...&#xA;    }&#xA;    break;&#xA;  default:&#xA;    class C {}&#xA;}&#xA;&#xA;// good&#xA;switch (foo) {&#xA;  case 1: {&#xA;    let x = 1;&#xA;    break;&#xA;  }&#xA;  case 2: {&#xA;    const y = 2;&#xA;    break;&#xA;  }&#xA;  case 3: {&#xA;    function f() {&#xA;      // ...&#xA;    }&#xA;    break;&#xA;  }&#xA;  case 4:&#xA;    bar();&#xA;    break;&#xA;  default: {&#xA;    class C {}&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comparison--nested-ternaries&#34;&gt;&lt;/a&gt;&lt;a name=&#34;15.6&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--nested-ternaries&#34;&gt;15.6&lt;/a&gt; Ternaries should not be nested and generally be single line expressions. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-nested-ternary&#34;&gt;&lt;code&gt;no-nested-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const foo = maybe1 &amp;gt; maybe2&#xA;  ? &#34;bar&#34;&#xA;  : value1 &amp;gt; value2 ? &#34;baz&#34; : null;&#xA;&#xA;// split into 2 separated ternary expressions&#xA;const maybeNull = value1 &amp;gt; value2 ? &#39;baz&#39; : null;&#xA;&#xA;// better&#xA;const foo = maybe1 &amp;gt; maybe2&#xA;  ? &#39;bar&#39;&#xA;  : maybeNull;&#xA;&#xA;// best&#xA;const foo = maybe1 &amp;gt; maybe2 ? &#39;bar&#39; : maybeNull;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comparison--unneeded-ternary&#34;&gt;&lt;/a&gt;&lt;a name=&#34;15.7&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--unneeded-ternary&#34;&gt;15.7&lt;/a&gt; Avoid unneeded ternary statements. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-unneeded-ternary&#34;&gt;&lt;code&gt;no-unneeded-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const foo = a ? a : b;&#xA;const bar = c ? true : false;&#xA;const baz = c ? false : true;&#xA;const quux = a != null ? a : b;&#xA;&#xA;// good&#xA;const foo = a || b;&#xA;const bar = !!c;&#xA;const baz = !c;&#xA;const quux = a ?? b;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comparison--no-mixed-operators&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--no-mixed-operators&#34;&gt;15.8&lt;/a&gt; When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;**&lt;/code&gt; since their precedence is broadly understood. We recommend enclosing &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in parentheses because their precedence can be ambiguous when they are mixed. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-mixed-operators&#34;&gt;&lt;code&gt;no-mixed-operators&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? This improves readability and clarifies the developer’s intention.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const foo = a &amp;amp;&amp;amp; b &amp;lt; 0 || c &amp;gt; 0 || d + 1 === 0;&#xA;&#xA;// bad&#xA;const bar = a ** b - 5 % d;&#xA;&#xA;// bad&#xA;// one may be confused into thinking (a || b) &amp;amp;&amp;amp; c&#xA;if (a || b &amp;amp;&amp;amp; c) {&#xA;  return d;&#xA;}&#xA;&#xA;// bad&#xA;const bar = a + b / c * d;&#xA;&#xA;// good&#xA;const foo = (a &amp;amp;&amp;amp; b &amp;lt; 0) || c &amp;gt; 0 || (d + 1 === 0);&#xA;&#xA;// good&#xA;const bar = a ** b - (5 % d);&#xA;&#xA;// good&#xA;if (a || (b &amp;amp;&amp;amp; c)) {&#xA;  return d;&#xA;}&#xA;&#xA;// good&#xA;const bar = a + (b / c) * d;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;nullish-coalescing-operator&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#nullish-coalescing-operator&#34;&gt;15.9&lt;/a&gt; The nullish coalescing operator (&lt;code&gt;??&lt;/code&gt;) is a logical operator that returns its right-hand side operand when its left-hand side operand is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. Otherwise, it returns the left-hand side operand.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? It provides precision by distinguishing null/undefined from other falsy values, enhancing code clarity and predictability.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const value = 0 ?? &#39;default&#39;;&#xA;// returns 0, not &#39;default&#39;&#xA;&#xA;// bad&#xA;const value = &#39;&#39; ?? &#39;default&#39;;&#xA;// returns &#39;&#39;, not &#39;default&#39;&#xA;&#xA;// good&#xA;const value = null ?? &#39;default&#39;;&#xA;// returns &#39;default&#39;&#xA;&#xA;// good&#xA;const user = {&#xA;  name: &#39;John&#39;,&#xA;  age: null&#xA;};&#xA;const age = user.age ?? 18;&#xA;// returns 18&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Blocks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;blocks--braces&#34;&gt;&lt;/a&gt;&lt;a name=&#34;16.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--braces&#34;&gt;16.1&lt;/a&gt; Use braces with all multiline blocks. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/nonblock-statement-body-position&#34;&gt;&lt;code&gt;nonblock-statement-body-position&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;if (test)&#xA;  return false;&#xA;&#xA;// good&#xA;if (test) return false;&#xA;&#xA;// good&#xA;if (test) {&#xA;  return false;&#xA;}&#xA;&#xA;// bad&#xA;function foo() { return false; }&#xA;&#xA;// good&#xA;function bar() {&#xA;  return false;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;blocks--cuddled-elses&#34;&gt;&lt;/a&gt;&lt;a name=&#34;16.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--cuddled-elses&#34;&gt;16.2&lt;/a&gt; If you’re using multiline blocks with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt;, put &lt;code&gt;else&lt;/code&gt; on the same line as your &lt;code&gt;if&lt;/code&gt; block’s closing brace. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/brace-style&#34;&gt;&lt;code&gt;brace-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;if (test) {&#xA;  thing1();&#xA;  thing2();&#xA;}&#xA;else {&#xA;  thing3();&#xA;}&#xA;&#xA;// good&#xA;if (test) {&#xA;  thing1();&#xA;  thing2();&#xA;} else {&#xA;  thing3();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;blocks--no-else-return&#34;&gt;&lt;/a&gt;&lt;a name=&#34;16.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--no-else-return&#34;&gt;16.3&lt;/a&gt; If an &lt;code&gt;if&lt;/code&gt; block always executes a &lt;code&gt;return&lt;/code&gt; statement, the subsequent &lt;code&gt;else&lt;/code&gt; block is unnecessary. A &lt;code&gt;return&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; block following an &lt;code&gt;if&lt;/code&gt; block that contains a &lt;code&gt;return&lt;/code&gt; can be separated into multiple &lt;code&gt;if&lt;/code&gt; blocks. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-else-return&#34;&gt;&lt;code&gt;no-else-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function foo() {&#xA;  if (x) {&#xA;    return x;&#xA;  } else {&#xA;    return y;&#xA;  }&#xA;}&#xA;&#xA;// bad&#xA;function cats() {&#xA;  if (x) {&#xA;    return x;&#xA;  } else if (y) {&#xA;    return y;&#xA;  }&#xA;}&#xA;&#xA;// bad&#xA;function dogs() {&#xA;  if (x) {&#xA;    return x;&#xA;  } else {&#xA;    if (y) {&#xA;      return y;&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;// good&#xA;function foo() {&#xA;  if (x) {&#xA;    return x;&#xA;  }&#xA;&#xA;  return y;&#xA;}&#xA;&#xA;// good&#xA;function cats() {&#xA;  if (x) {&#xA;    return x;&#xA;  }&#xA;&#xA;  if (y) {&#xA;    return y;&#xA;  }&#xA;}&#xA;&#xA;// good&#xA;function dogs(x) {&#xA;  if (x) {&#xA;    if (z) {&#xA;      return y;&#xA;    }&#xA;  } else {&#xA;    return z;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Control Statements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;control-statements&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&#34;&gt;17.1&lt;/a&gt; In case your control statement (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;if ((foo === 123 || bar === &#39;abc&#39;) &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong() &amp;amp;&amp;amp; isThisReallyHappening()) {&#xA;  thing1();&#xA;}&#xA;&#xA;// bad&#xA;if (foo === 123 &amp;amp;&amp;amp;&#xA;  bar === &#39;abc&#39;) {&#xA;  thing1();&#xA;}&#xA;&#xA;// bad&#xA;if (foo === 123&#xA;  &amp;amp;&amp;amp; bar === &#39;abc&#39;) {&#xA;  thing1();&#xA;}&#xA;&#xA;// bad&#xA;if (&#xA;  foo === 123 &amp;amp;&amp;amp;&#xA;  bar === &#39;abc&#39;&#xA;) {&#xA;  thing1();&#xA;}&#xA;&#xA;// good&#xA;if (&#xA;  foo === 123&#xA;  &amp;amp;&amp;amp; bar === &#39;abc&#39;&#xA;) {&#xA;  thing1();&#xA;}&#xA;&#xA;// good&#xA;if (&#xA;  (foo === 123 || bar === &#39;abc&#39;)&#xA;  &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong()&#xA;  &amp;amp;&amp;amp; isThisReallyHappening()&#xA;) {&#xA;  thing1();&#xA;}&#xA;&#xA;// good&#xA;if (foo === 123 &amp;amp;&amp;amp; bar === &#39;abc&#39;) {&#xA;  thing1();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;control-statement--value-selection&#34;&gt;&lt;/a&gt;&lt;a name=&#34;control-statements--value-selection&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements--value-selection&#34;&gt;17.2&lt;/a&gt; Don&#39;t use selection operators in place of control statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;!isRunning &amp;amp;&amp;amp; startRunning();&#xA;&#xA;// good&#xA;if (!isRunning) {&#xA;  startRunning();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Comments&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comments--multiline&#34;&gt;&lt;/a&gt;&lt;a name=&#34;17.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--multiline&#34;&gt;18.1&lt;/a&gt; Use &lt;code&gt;/** ... */&lt;/code&gt; for multiline comments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;// make() returns a new element&#xA;// based on the passed in tag name&#xA;//&#xA;// @param {String} tag&#xA;// @return {Element} element&#xA;function make(tag) {&#xA;&#xA;  // ...&#xA;&#xA;  return element;&#xA;}&#xA;&#xA;// good&#xA;/**&#xA; * make() returns a new element&#xA; * based on the passed-in tag name&#xA; */&#xA;function make(tag) {&#xA;&#xA;  // ...&#xA;&#xA;  return element;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comments--singleline&#34;&gt;&lt;/a&gt;&lt;a name=&#34;17.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--singleline&#34;&gt;18.2&lt;/a&gt; Use &lt;code&gt;//&lt;/code&gt; for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it’s on the first line of a block.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const active = true;  // is current tab&#xA;&#xA;// good&#xA;// is current tab&#xA;const active = true;&#xA;&#xA;// bad&#xA;function getType() {&#xA;  console.log(&#39;fetching type...&#39;);&#xA;  // set the default type to &#39;no type&#39;&#xA;  const type = this.type || &#39;no type&#39;;&#xA;&#xA;  return type;&#xA;}&#xA;&#xA;// good&#xA;function getType() {&#xA;  console.log(&#39;fetching type...&#39;);&#xA;&#xA;  // set the default type to &#39;no type&#39;&#xA;  const type = this.type || &#39;no type&#39;;&#xA;&#xA;  return type;&#xA;}&#xA;&#xA;// also good&#xA;function getType() {&#xA;  // set the default type to &#39;no type&#39;&#xA;  const type = this.type || &#39;no type&#39;;&#xA;&#xA;  return type;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comments--spaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--spaces&#34;&gt;18.3&lt;/a&gt; Start all comments with a space to make it easier to read. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/spaced-comment&#34;&gt;&lt;code&gt;spaced-comment&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;//is current tab&#xA;const active = true;&#xA;&#xA;// good&#xA;// is current tab&#xA;const active = true;&#xA;&#xA;// bad&#xA;/**&#xA; *make() returns a new element&#xA; *based on the passed-in tag name&#xA; */&#xA;function make(tag) {&#xA;&#xA;  // ...&#xA;&#xA;  return element;&#xA;}&#xA;&#xA;// good&#xA;/**&#xA; * make() returns a new element&#xA; * based on the passed-in tag name&#xA; */&#xA;function make(tag) {&#xA;&#xA;  // ...&#xA;&#xA;  return element;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comments--actionitems&#34;&gt;&lt;/a&gt;&lt;a name=&#34;17.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--actionitems&#34;&gt;18.4&lt;/a&gt; Prefixing your comments with &lt;code&gt;FIXME&lt;/code&gt; or &lt;code&gt;TODO&lt;/code&gt; helps other developers quickly understand if you’re pointing out a problem that needs to be revisited, or if you’re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are &lt;code&gt;FIXME: -- need to figure this out&lt;/code&gt; or &lt;code&gt;TODO: -- need to implement&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comments--fixme&#34;&gt;&lt;/a&gt;&lt;a name=&#34;17.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--fixme&#34;&gt;18.5&lt;/a&gt; Use &lt;code&gt;// FIXME:&lt;/code&gt; to annotate problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class Calculator extends Abacus {&#xA;  constructor() {&#xA;    super();&#xA;&#xA;    // FIXME: shouldn’t use a global here&#xA;    total = 0;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;comments--todo&#34;&gt;&lt;/a&gt;&lt;a name=&#34;17.5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--todo&#34;&gt;18.6&lt;/a&gt; Use &lt;code&gt;// TODO:&lt;/code&gt; to annotate solutions to problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class Calculator extends Abacus {&#xA;  constructor() {&#xA;    super();&#xA;&#xA;    // TODO: total should be configurable by an options param&#xA;    this.total = 0;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Whitespace&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--spaces&#34;&gt;&lt;/a&gt;&lt;a name=&#34;18.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--spaces&#34;&gt;19.1&lt;/a&gt; Use soft tabs (space character) set to 2 spaces. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/indent&#34;&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function foo() {&#xA;∙∙∙∙let name;&#xA;}&#xA;&#xA;// bad&#xA;function bar() {&#xA;∙let name;&#xA;}&#xA;&#xA;// good&#xA;function baz() {&#xA;∙∙let name;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--before-blocks&#34;&gt;&lt;/a&gt;&lt;a name=&#34;18.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--before-blocks&#34;&gt;19.2&lt;/a&gt; Place 1 space before the leading brace. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/space-before-blocks&#34;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function test(){&#xA;  console.log(&#39;test&#39;);&#xA;}&#xA;&#xA;// good&#xA;function test() {&#xA;  console.log(&#39;test&#39;);&#xA;}&#xA;&#xA;// bad&#xA;dog.set(&#39;attr&#39;,{&#xA;  age: &#39;1 year&#39;,&#xA;  breed: &#39;Bernese Mountain Dog&#39;,&#xA;});&#xA;&#xA;// good&#xA;dog.set(&#39;attr&#39;, {&#xA;  age: &#39;1 year&#39;,&#xA;  breed: &#39;Bernese Mountain Dog&#39;,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--around-keywords&#34;&gt;&lt;/a&gt;&lt;a name=&#34;18.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--around-keywords&#34;&gt;19.3&lt;/a&gt; Place 1 space before the opening parenthesis in control statements (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/keyword-spacing&#34;&gt;&lt;code&gt;keyword-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;if(isJedi) {&#xA;  fight ();&#xA;}&#xA;&#xA;// good&#xA;if (isJedi) {&#xA;  fight();&#xA;}&#xA;&#xA;// bad&#xA;function fight () {&#xA;  console.log (&#39;Swooosh!&#39;);&#xA;}&#xA;&#xA;// good&#xA;function fight() {&#xA;  console.log(&#39;Swooosh!&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--infix-ops&#34;&gt;&lt;/a&gt;&lt;a name=&#34;18.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--infix-ops&#34;&gt;19.4&lt;/a&gt; Set off operators with spaces. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/space-infix-ops&#34;&gt;&lt;code&gt;space-infix-ops&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const x=y+5;&#xA;&#xA;// good&#xA;const x = y + 5;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--newline-at-end&#34;&gt;&lt;/a&gt;&lt;a name=&#34;18.5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--newline-at-end&#34;&gt;19.5&lt;/a&gt; End files with a single newline character. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/eol-last&#34;&gt;&lt;code&gt;eol-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;import { es6 } from &#39;./AirbnbStyleGuide&#39;;&#xA;  // ...&#xA;export default es6;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;import { es6 } from &#39;./AirbnbStyleGuide&#39;;&#xA;  // ...&#xA;export default es6;↵&#xA;↵&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// good&#xA;import { es6 } from &#39;./AirbnbStyleGuide&#39;;&#xA;  // ...&#xA;export default es6;↵&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--chains&#34;&gt;&lt;/a&gt;&lt;a name=&#34;18.6&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--chains&#34;&gt;19.6&lt;/a&gt; Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which emphasizes that the line is a method call, not a new statement. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/newline-per-chained-call&#34;&gt;&lt;code&gt;newline-per-chained-call&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://eslint.org/docs/rules/no-whitespace-before-property&#34;&gt;&lt;code&gt;no-whitespace-before-property&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;$(&#39;#items&#39;).find(&#39;.selected&#39;).highlight().end().find(&#39;.open&#39;).updateCount();&#xA;&#xA;// bad&#xA;$(&#39;#items&#39;).&#xA;  find(&#39;.selected&#39;).&#xA;    highlight().&#xA;    end().&#xA;  find(&#39;.open&#39;).&#xA;    updateCount();&#xA;&#xA;// good&#xA;$(&#39;#items&#39;)&#xA;  .find(&#39;.selected&#39;)&#xA;    .highlight()&#xA;    .end()&#xA;  .find(&#39;.open&#39;)&#xA;    .updateCount();&#xA;&#xA;// bad&#xA;const leds = stage.selectAll(&#39;.led&#39;).data(data).enter().append(&#39;svg:svg&#39;).classed(&#39;led&#39;, true)&#xA;    .attr(&#39;width&#39;, (radius + margin) * 2).append(&#39;svg:g&#39;)&#xA;    .attr(&#39;transform&#39;, `translate(${radius + margin}, ${radius + margin})`)&#xA;    .call(tron.led);&#xA;&#xA;// good&#xA;const leds = stage.selectAll(&#39;.led&#39;)&#xA;    .data(data)&#xA;  .enter().append(&#39;svg:svg&#39;)&#xA;    .classed(&#39;led&#39;, true)&#xA;    .attr(&#39;width&#39;, (radius + margin) * 2)&#xA;  .append(&#39;svg:g&#39;)&#xA;    .attr(&#39;transform&#39;, `translate(${radius + margin}, ${radius + margin})`)&#xA;    .call(tron.led);&#xA;&#xA;// good&#xA;const leds = stage.selectAll(&#39;.led&#39;).data(data);&#xA;const svg = leds.enter().append(&#39;svg:svg&#39;);&#xA;svg.classed(&#39;led&#39;, true).attr(&#39;width&#39;, (radius + margin) * 2);&#xA;const g = svg.append(&#39;svg:g&#39;);&#xA;g.attr(&#39;transform&#39;, `translate(${radius + margin}, ${radius + margin})`).call(tron.led);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--after-blocks&#34;&gt;&lt;/a&gt;&lt;a name=&#34;18.7&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--after-blocks&#34;&gt;19.7&lt;/a&gt; Leave a blank line after blocks and before the next statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;if (foo) {&#xA;  return bar;&#xA;}&#xA;return baz;&#xA;&#xA;// good&#xA;if (foo) {&#xA;  return bar;&#xA;}&#xA;&#xA;return baz;&#xA;&#xA;// bad&#xA;const obj = {&#xA;  foo() {&#xA;  },&#xA;  bar() {&#xA;  },&#xA;};&#xA;return obj;&#xA;&#xA;// good&#xA;const obj = {&#xA;  foo() {&#xA;  },&#xA;&#xA;  bar() {&#xA;  },&#xA;};&#xA;&#xA;return obj;&#xA;&#xA;// bad&#xA;const arr = [&#xA;  function foo() {&#xA;  },&#xA;  function bar() {&#xA;  },&#xA;];&#xA;return arr;&#xA;&#xA;// good&#xA;const arr = [&#xA;  function foo() {&#xA;  },&#xA;&#xA;  function bar() {&#xA;  },&#xA;];&#xA;&#xA;return arr;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--padded-blocks&#34;&gt;&lt;/a&gt;&lt;a name=&#34;18.8&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--padded-blocks&#34;&gt;19.8&lt;/a&gt; Do not pad your blocks with blank lines. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/padded-blocks&#34;&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function bar() {&#xA;&#xA;  console.log(foo);&#xA;&#xA;}&#xA;&#xA;// bad&#xA;if (baz) {&#xA;&#xA;  console.log(quux);&#xA;} else {&#xA;  console.log(foo);&#xA;&#xA;}&#xA;&#xA;// bad&#xA;class Foo {&#xA;&#xA;  constructor(bar) {&#xA;    this.bar = bar;&#xA;  }&#xA;}&#xA;&#xA;// good&#xA;function bar() {&#xA;  console.log(foo);&#xA;}&#xA;&#xA;// good&#xA;if (baz) {&#xA;  console.log(quux);&#xA;} else {&#xA;  console.log(foo);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--no-multiple-blanks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-blanks&#34;&gt;19.9&lt;/a&gt; Do not use multiple blank lines to pad your code. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-multiple-empty-lines&#34;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;class Person {&#xA;  constructor(fullName, email, birthday) {&#xA;    this.fullName = fullName;&#xA;&#xA;&#xA;    this.email = email;&#xA;&#xA;&#xA;    this.setAge(birthday);&#xA;  }&#xA;&#xA;&#xA;  setAge(birthday) {&#xA;    const today = new Date();&#xA;&#xA;&#xA;    const age = this.getAge(today, birthday);&#xA;&#xA;&#xA;    this.age = age;&#xA;  }&#xA;&#xA;&#xA;  getAge(today, birthday) {&#xA;    // ..&#xA;  }&#xA;}&#xA;&#xA;// good&#xA;class Person {&#xA;  constructor(fullName, email, birthday) {&#xA;    this.fullName = fullName;&#xA;    this.email = email;&#xA;    this.setAge(birthday);&#xA;  }&#xA;&#xA;  setAge(birthday) {&#xA;    const today = new Date();&#xA;    const age = getAge(today, birthday);&#xA;    this.age = age;&#xA;  }&#xA;&#xA;  getAge(today, birthday) {&#xA;    // ..&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--in-parens&#34;&gt;&lt;/a&gt;&lt;a name=&#34;18.9&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-parens&#34;&gt;19.10&lt;/a&gt; Do not add spaces inside parentheses. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/space-in-parens&#34;&gt;&lt;code&gt;space-in-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function bar( foo ) {&#xA;  return foo;&#xA;}&#xA;&#xA;// good&#xA;function bar(foo) {&#xA;  return foo;&#xA;}&#xA;&#xA;// bad&#xA;if ( foo ) {&#xA;  console.log(foo);&#xA;}&#xA;&#xA;// good&#xA;if (foo) {&#xA;  console.log(foo);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--in-brackets&#34;&gt;&lt;/a&gt;&lt;a name=&#34;18.10&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-brackets&#34;&gt;19.11&lt;/a&gt; Do not add spaces inside brackets. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/array-bracket-spacing&#34;&gt;&lt;code&gt;array-bracket-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const foo = [ 1, 2, 3 ];&#xA;console.log(foo[ 0 ]);&#xA;&#xA;// good&#xA;const foo = [1, 2, 3];&#xA;console.log(foo[0]);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--in-braces&#34;&gt;&lt;/a&gt;&lt;a name=&#34;18.11&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-braces&#34;&gt;19.12&lt;/a&gt; Add spaces inside curly braces. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/object-curly-spacing&#34;&gt;&lt;code&gt;object-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const foo = {clark: &#39;kent&#39;};&#xA;&#xA;// good&#xA;const foo = { clark: &#39;kent&#39; };&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--max-len&#34;&gt;&lt;/a&gt;&lt;a name=&#34;18.12&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--max-len&#34;&gt;19.13&lt;/a&gt; Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per &lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&#34;&gt;above&lt;/a&gt;, long strings are exempt from this rule, and should not be broken up. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/max-len&#34;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? This ensures readability and maintainability.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const foo = jsonData &amp;amp;&amp;amp; jsonData.foo &amp;amp;&amp;amp; jsonData.foo.bar &amp;amp;&amp;amp; jsonData.foo.bar.baz &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;&#xA;&#xA;// bad&#xA;$.ajax({ method: &#39;POST&#39;, url: &#39;https://airbnb.com/&#39;, data: { name: &#39;John&#39; } }).done(() =&amp;gt; console.log(&#39;Congratulations!&#39;)).fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));&#xA;&#xA;// good&#xA;const foo = jsonData&#xA;  &amp;amp;&amp;amp; jsonData.foo&#xA;  &amp;amp;&amp;amp; jsonData.foo.bar&#xA;  &amp;amp;&amp;amp; jsonData.foo.bar.baz&#xA;  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux&#xA;  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;&#xA;&#xA;// better&#xA;const foo = jsonData&#xA;  ?.foo&#xA;  ?.bar&#xA;  ?.baz&#xA;  ?.quux&#xA;  ?.xyzzy;&#xA;&#xA;// good&#xA;$.ajax({&#xA;  method: &#39;POST&#39;,&#xA;  url: &#39;https://airbnb.com/&#39;,&#xA;  data: { name: &#39;John&#39; },&#xA;})&#xA;  .done(() =&amp;gt; console.log(&#39;Congratulations!&#39;))&#xA;  .fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--block-spacing&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--block-spacing&#34;&gt;19.14&lt;/a&gt; Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/block-spacing&#34;&gt;&lt;code&gt;block-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function foo() {return true;}&#xA;if (foo) { bar = 0;}&#xA;&#xA;// good&#xA;function foo() { return true; }&#xA;if (foo) { bar = 0; }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--comma-spacing&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--comma-spacing&#34;&gt;19.15&lt;/a&gt; Avoid spaces before commas and require a space after commas. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/comma-spacing&#34;&gt;&lt;code&gt;comma-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const foo = 1,bar = 2;&#xA;const arr = [1 , 2];&#xA;&#xA;// good&#xA;const foo = 1, bar = 2;&#xA;const arr = [1, 2];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--computed-property-spacing&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--computed-property-spacing&#34;&gt;19.16&lt;/a&gt; Enforce spacing inside of computed property brackets. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/computed-property-spacing&#34;&gt;&lt;code&gt;computed-property-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;obj[foo ]&#xA;obj[ &#39;foo&#39;]&#xA;const x = {[ b ]: a}&#xA;obj[foo[ bar ]]&#xA;&#xA;// good&#xA;obj[foo]&#xA;obj[&#39;foo&#39;]&#xA;const x = { [b]: a }&#xA;obj[foo[bar]]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--func-call-spacing&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--func-call-spacing&#34;&gt;19.17&lt;/a&gt; Avoid spaces between functions and their invocations. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/func-call-spacing&#34;&gt;&lt;code&gt;func-call-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;func ();&#xA;&#xA;func&#xA;();&#xA;&#xA;// good&#xA;func();&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--key-spacing&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--key-spacing&#34;&gt;19.18&lt;/a&gt; Enforce spacing between keys and values in object literal properties. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/key-spacing&#34;&gt;&lt;code&gt;key-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const obj = { foo : 42 };&#xA;const obj2 = { foo:42 };&#xA;&#xA;// good&#xA;const obj = { foo: 42 };&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--no-trailing-spaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-trailing-spaces&#34;&gt;19.19&lt;/a&gt; Avoid trailing spaces at the end of lines. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-trailing-spaces&#34;&gt;&lt;code&gt;no-trailing-spaces&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;whitespace--no-multiple-empty-lines&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-empty-lines&#34;&gt;19.20&lt;/a&gt; Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-multiple-empty-lines&#34;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad - multiple empty lines&#xA;const x = 1;&#xA;&#xA;&#xA;const y = 2;&#xA;&#xA;// bad - 2+ newlines at end of file&#xA;const x = 1;&#xA;const y = 2;&#xA;&#xA;&#xA;// bad - 1+ newline(s) at beginning of file&#xA;&#xA;const x = 1;&#xA;const y = 2;&#xA;&#xA;// good&#xA;const x = 1;&#xA;const y = 2;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;!-- markdownlint-enable MD012 --&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Commas&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;commas--leading-trailing&#34;&gt;&lt;/a&gt;&lt;a name=&#34;19.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--leading-trailing&#34;&gt;20.1&lt;/a&gt; Leading commas: &lt;strong&gt;Nope.&lt;/strong&gt; eslint: &lt;a href=&#34;https://eslint.org/docs/rules/comma-style&#34;&gt;&lt;code&gt;comma-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const story = [&#xA;    once&#xA;  , upon&#xA;  , aTime&#xA;];&#xA;&#xA;// good&#xA;const story = [&#xA;  once,&#xA;  upon,&#xA;  aTime,&#xA;];&#xA;&#xA;// bad&#xA;const hero = {&#xA;    firstName: &#39;Ada&#39;&#xA;  , lastName: &#39;Lovelace&#39;&#xA;  , birthYear: 1815&#xA;  , superPower: &#39;computers&#39;&#xA;};&#xA;&#xA;// good&#xA;const hero = {&#xA;  firstName: &#39;Ada&#39;,&#xA;  lastName: &#39;Lovelace&#39;,&#xA;  birthYear: 1815,&#xA;  superPower: &#39;computers&#39;,&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;commas--dangling&#34;&gt;&lt;/a&gt;&lt;a name=&#34;19.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--dangling&#34;&gt;20.2&lt;/a&gt; Additional trailing comma: &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&#34;https://eslint.org/docs/rules/comma-dangle&#34;&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don’t have to worry about the &lt;a href=&#34;https://github.com/airbnb/javascript/raw/es5-deprecated/es5/README.md#commas&#34;&gt;trailing comma problem&lt;/a&gt; in legacy browsers.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;// bad - git diff without trailing comma&#xA;const hero = {&#xA;     firstName: &#39;Florence&#39;,&#xA;-    lastName: &#39;Nightingale&#39;&#xA;+    lastName: &#39;Nightingale&#39;,&#xA;+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;]&#xA;};&#xA;&#xA;// good - git diff with trailing comma&#xA;const hero = {&#xA;     firstName: &#39;Florence&#39;,&#xA;     lastName: &#39;Nightingale&#39;,&#xA;+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;],&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const hero = {&#xA;  firstName: &#39;Dana&#39;,&#xA;  lastName: &#39;Scully&#39;&#xA;};&#xA;&#xA;const heroes = [&#xA;  &#39;Batman&#39;,&#xA;  &#39;Superman&#39;&#xA;];&#xA;&#xA;// good&#xA;const hero = {&#xA;  firstName: &#39;Dana&#39;,&#xA;  lastName: &#39;Scully&#39;,&#xA;};&#xA;&#xA;const heroes = [&#xA;  &#39;Batman&#39;,&#xA;  &#39;Superman&#39;,&#xA;];&#xA;&#xA;// bad&#xA;function createHero(&#xA;  firstName,&#xA;  lastName,&#xA;  inventorOf&#xA;) {&#xA;  // does nothing&#xA;}&#xA;&#xA;// good&#xA;function createHero(&#xA;  firstName,&#xA;  lastName,&#xA;  inventorOf,&#xA;) {&#xA;  // does nothing&#xA;}&#xA;&#xA;// good (note that a comma must not appear after a &#34;rest&#34; element)&#xA;function createHero(&#xA;  firstName,&#xA;  lastName,&#xA;  inventorOf,&#xA;  ...heroArgs&#xA;) {&#xA;  // does nothing&#xA;}&#xA;&#xA;// bad&#xA;createHero(&#xA;  firstName,&#xA;  lastName,&#xA;  inventorOf&#xA;);&#xA;&#xA;// good&#xA;createHero(&#xA;  firstName,&#xA;  lastName,&#xA;  inventorOf,&#xA;);&#xA;&#xA;// good (note that a comma must not appear after a &#34;rest&#34; element)&#xA;createHero(&#xA;  firstName,&#xA;  lastName,&#xA;  inventorOf,&#xA;  ...heroArgs&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Semicolons&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;semicolons--required&#34;&gt;&lt;/a&gt;&lt;a name=&#34;20.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons--required&#34;&gt;21.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&#34;https://eslint.org/docs/rules/semi&#34;&gt;&lt;code&gt;semi&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called &lt;a href=&#34;https://tc39.github.io/ecma262/#sec-automatic-semicolon-insertion&#34;&gt;Automatic Semicolon Insertion&lt;/a&gt; to determine whether it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad - raises exception&#xA;const luke = {}&#xA;const leia = {}&#xA;[luke, leia].forEach((jedi) =&amp;gt; jedi.father = &#39;vader&#39;)&#xA;&#xA;// bad - raises exception&#xA;const reaction = &#34;No! That’s impossible!&#34;&#xA;(async function meanwhileOnTheFalcon() {&#xA;  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`&#xA;  // ...&#xA;}())&#xA;&#xA;// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!&#xA;function foo() {&#xA;  return&#xA;    &#39;search your feelings, you know it to be foo&#39;&#xA;}&#xA;&#xA;// good&#xA;const luke = {};&#xA;const leia = {};&#xA;[luke, leia].forEach((jedi) =&amp;gt; {&#xA;  jedi.father = &#39;vader&#39;;&#xA;});&#xA;&#xA;// good&#xA;const reaction = &#39;No! That’s impossible!&#39;;&#xA;(async function meanwhileOnTheFalcon() {&#xA;  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`&#xA;  // ...&#xA;}());&#xA;&#xA;// good&#xA;function foo() {&#xA;  return &#39;search your feelings, you know it to be foo&#39;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function/7365214#7365214&#34;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Type Casting &amp;amp; Coercion&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;coercion--explicit&#34;&gt;&lt;/a&gt;&lt;a name=&#34;21.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--explicit&#34;&gt;22.1&lt;/a&gt; Perform type coercion at the beginning of the statement.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;coercion--strings&#34;&gt;&lt;/a&gt;&lt;a name=&#34;21.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--strings&#34;&gt;22.2&lt;/a&gt; Strings: eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-new-wrappers&#34;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// =&amp;gt; this.reviewScore = 9;&#xA;&#xA;// bad&#xA;const totalScore = new String(this.reviewScore); // typeof totalScore is &#34;object&#34; not &#34;string&#34;&#xA;&#xA;// bad&#xA;const totalScore = this.reviewScore + &#39;&#39;; // invokes this.reviewScore.valueOf()&#xA;&#xA;// bad&#xA;const totalScore = this.reviewScore.toString(); // isn’t guaranteed to return a string&#xA;&#xA;// good&#xA;const totalScore = String(this.reviewScore);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;coercion--numbers&#34;&gt;&lt;/a&gt;&lt;a name=&#34;21.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--numbers&#34;&gt;22.3&lt;/a&gt; Numbers: Use &lt;code&gt;Number&lt;/code&gt; for type casting and &lt;code&gt;parseInt&lt;/code&gt; always with a radix for parsing strings. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/radix&#34;&gt;&lt;code&gt;radix&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://eslint.org/docs/rules/no-new-wrappers&#34;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const inputValue = &#39;4&#39;;&#xA;&#xA;// bad&#xA;const val = new Number(inputValue);&#xA;&#xA;// bad&#xA;const val = +inputValue;&#xA;&#xA;// bad&#xA;const val = inputValue &amp;gt;&amp;gt; 0;&#xA;&#xA;// bad&#xA;const val = parseInt(inputValue);&#xA;&#xA;// good&#xA;const val = Number(inputValue);&#xA;&#xA;// good&#xA;const val = parseInt(inputValue, 10);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;coercion--comment-deviations&#34;&gt;&lt;/a&gt;&lt;a name=&#34;21.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--comment-deviations&#34;&gt;22.4&lt;/a&gt; If for whatever reason you are doing something wild and &lt;code&gt;parseInt&lt;/code&gt; is your bottleneck and need to use Bitshift for &lt;a href=&#34;https://web.archive.org/web/20200414205431/https://jsperf.com/coercion-vs-casting/3&#34;&gt;performance reasons&lt;/a&gt;, leave a comment explaining why and what you’re doing.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// good&#xA;/**&#xA; * parseInt was the reason my code was slow.&#xA; * Bitshifting the String to coerce it to a&#xA; * Number made it a lot faster.&#xA; */&#xA;const val = inputValue &amp;gt;&amp;gt; 0;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;coercion--bitwise&#34;&gt;&lt;/a&gt;&lt;a name=&#34;21.5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--bitwise&#34;&gt;22.5&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; Be careful when using bitshift operations. Numbers are represented as &lt;a href=&#34;https://es5.github.io/#x4.3.19&#34;&gt;64-bit values&lt;/a&gt;, but bitshift operations always return a 32-bit integer (&lt;a href=&#34;https://es5.github.io/#x11.7&#34;&gt;source&lt;/a&gt;). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. &lt;a href=&#34;https://github.com/airbnb/javascript/issues/109&#34;&gt;Discussion&lt;/a&gt;. Largest signed 32-bit Int is 2,147,483,647:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;2147483647 &amp;gt;&amp;gt; 0; // =&amp;gt; 2147483647&#xA;2147483648 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483648&#xA;2147483649 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483647&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;coercion--booleans&#34;&gt;&lt;/a&gt;&lt;a name=&#34;21.6&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--booleans&#34;&gt;22.6&lt;/a&gt; Booleans: eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-new-wrappers&#34;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const age = 0;&#xA;&#xA;// bad&#xA;const hasAge = new Boolean(age);&#xA;&#xA;// good&#xA;const hasAge = Boolean(age);&#xA;&#xA;// best&#xA;const hasAge = !!age;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Naming Conventions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;naming--descriptive&#34;&gt;&lt;/a&gt;&lt;a name=&#34;22.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--descriptive&#34;&gt;23.1&lt;/a&gt; Avoid single letter names. Be descriptive with your naming. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/id-length&#34;&gt;&lt;code&gt;id-length&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function q() {&#xA;  // ...&#xA;}&#xA;&#xA;// good&#xA;function query() {&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;naming--camelCase&#34;&gt;&lt;/a&gt;&lt;a name=&#34;22.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase&#34;&gt;23.2&lt;/a&gt; Use camelCase when naming objects, functions, and instances. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/camelcase&#34;&gt;&lt;code&gt;camelcase&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const OBJEcttsssss = {};&#xA;const this_is_my_object = {};&#xA;function c() {}&#xA;&#xA;// good&#xA;const thisIsMyObject = {};&#xA;function thisIsMyFunction() {}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;naming--PascalCase&#34;&gt;&lt;/a&gt;&lt;a name=&#34;22.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase&#34;&gt;23.3&lt;/a&gt; Use PascalCase only when naming constructors or classes. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/new-cap&#34;&gt;&lt;code&gt;new-cap&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function user(options) {&#xA;  this.name = options.name;&#xA;}&#xA;&#xA;const bad = new user({&#xA;  name: &#39;nope&#39;,&#xA;});&#xA;&#xA;// good&#xA;class User {&#xA;  constructor(options) {&#xA;    this.name = options.name;&#xA;  }&#xA;}&#xA;&#xA;const good = new User({&#xA;  name: &#39;yup&#39;,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;naming--leading-underscore&#34;&gt;&lt;/a&gt;&lt;a name=&#34;22.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--leading-underscore&#34;&gt;23.4&lt;/a&gt; Do not use trailing or leading underscores. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-underscore-dangle&#34;&gt;&lt;code&gt;no-underscore-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean “private”, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won’t count as breaking, or that tests aren’t needed. tl;dr: if you want something to be “private”, it must not be observably present.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;this.__firstName__ = &#39;Panda&#39;;&#xA;this.firstName_ = &#39;Panda&#39;;&#xA;this._firstName = &#39;Panda&#39;;&#xA;&#xA;// good&#xA;this.firstName = &#39;Panda&#39;;&#xA;&#xA;// good, in environments where WeakMaps are available&#xA;// see https://compat-table.github.io/compat-table/es6/#test-WeakMap&#xA;const firstNames = new WeakMap();&#xA;firstNames.set(this, &#39;Panda&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;naming--self-this&#34;&gt;&lt;/a&gt;&lt;a name=&#34;22.5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--self-this&#34;&gt;23.5&lt;/a&gt; Don’t save references to &lt;code&gt;this&lt;/code&gt;. Use arrow functions or &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&#34;&gt;Function#bind&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function foo() {&#xA;  const self = this;&#xA;  return function () {&#xA;    console.log(self);&#xA;  };&#xA;}&#xA;&#xA;// bad&#xA;function foo() {&#xA;  const that = this;&#xA;  return function () {&#xA;    console.log(that);&#xA;  };&#xA;}&#xA;&#xA;// good&#xA;function foo() {&#xA;  return () =&amp;gt; {&#xA;    console.log(this);&#xA;  };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;naming--filename-matches-export&#34;&gt;&lt;/a&gt;&lt;a name=&#34;22.6&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--filename-matches-export&#34;&gt;23.6&lt;/a&gt; A base filename should exactly match the name of its default export.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// file 1 contents&#xA;class CheckBox {&#xA;  // ...&#xA;}&#xA;export default CheckBox;&#xA;&#xA;// file 2 contents&#xA;export default function fortyTwo() { return 42; }&#xA;&#xA;// file 3 contents&#xA;export default function insideDirectory() {}&#xA;&#xA;// in some other file&#xA;// bad&#xA;import CheckBox from &#39;./checkBox&#39;; // PascalCase import/export, camelCase filename&#xA;import FortyTwo from &#39;./FortyTwo&#39;; // PascalCase import/filename, camelCase export&#xA;import InsideDirectory from &#39;./InsideDirectory&#39;; // PascalCase import/filename, camelCase export&#xA;&#xA;// bad&#xA;import CheckBox from &#39;./check_box&#39;; // PascalCase import/export, snake_case filename&#xA;import forty_two from &#39;./forty_two&#39;; // snake_case import/filename, camelCase export&#xA;import inside_directory from &#39;./inside_directory&#39;; // snake_case import, camelCase export&#xA;import index from &#39;./inside_directory/index&#39;; // requiring the index file explicitly&#xA;import insideDirectory from &#39;./insideDirectory/index&#39;; // requiring the index file explicitly&#xA;&#xA;// good&#xA;import CheckBox from &#39;./CheckBox&#39;; // PascalCase export/import/filename&#xA;import fortyTwo from &#39;./fortyTwo&#39;; // camelCase export/import/filename&#xA;import insideDirectory from &#39;./insideDirectory&#39;; // camelCase export/import/directory name/implicit &#34;index&#34;&#xA;// ^ supports both insideDirectory.js and insideDirectory/index.js&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;naming--camelCase-default-export&#34;&gt;&lt;/a&gt;&lt;a name=&#34;22.7&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase-default-export&#34;&gt;23.7&lt;/a&gt; Use camelCase when you export-default a function. Your filename should be identical to your function’s name.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function makeStyleGuide() {&#xA;  // ...&#xA;}&#xA;&#xA;export default makeStyleGuide;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;naming--PascalCase-singleton&#34;&gt;&lt;/a&gt;&lt;a name=&#34;22.8&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase-singleton&#34;&gt;23.8&lt;/a&gt; Use PascalCase when you export a constructor / class / singleton / function library / bare object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const AirbnbStyleGuide = {&#xA;  es6: {&#xA;  },&#xA;};&#xA;&#xA;export default AirbnbStyleGuide;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;naming--Acronyms-and-Initialisms&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--Acronyms-and-Initialisms&#34;&gt;23.9&lt;/a&gt; Acronyms and initialisms should always be all uppercased, or all lowercased.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? Names are for readability, not to appease a computer algorithm.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;import SmsContainer from &#39;./containers/SmsContainer&#39;;&#xA;&#xA;// bad&#xA;const HttpRequests = [&#xA;  // ...&#xA;];&#xA;&#xA;// good&#xA;import SMSContainer from &#39;./containers/SMSContainer&#39;;&#xA;&#xA;// good&#xA;const HTTPRequests = [&#xA;  // ...&#xA;];&#xA;&#xA;// also good&#xA;const httpRequests = [&#xA;  // ...&#xA;];&#xA;&#xA;// best&#xA;import TextMessageContainer from &#39;./containers/TextMessageContainer&#39;;&#xA;&#xA;// best&#xA;const requests = [&#xA;  // ...&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;naming--uppercase&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--uppercase&#34;&gt;23.10&lt;/a&gt; You may optionally uppercase a constant only if it (1) is exported, (2) is a &lt;code&gt;const&lt;/code&gt; (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;What about all &lt;code&gt;const&lt;/code&gt; variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.&lt;/li&gt; &#xA;   &lt;li&gt;What about exported objects? - Uppercase at the top level of export (e.g. &lt;code&gt;EXPORTED_OBJECT.key&lt;/code&gt;) and maintain that all nested properties do not change.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const PRIVATE_VARIABLE = &#39;should not be unnecessarily uppercased within a file&#39;;&#xA;&#xA;// bad&#xA;export const THING_TO_BE_CHANGED = &#39;should obviously not be uppercased&#39;;&#xA;&#xA;// bad&#xA;export let REASSIGNABLE_VARIABLE = &#39;do not use let with uppercase variables&#39;;&#xA;&#xA;// ---&#xA;&#xA;// allowed but does not supply semantic value&#xA;export const apiKey = &#39;SOMEKEY&#39;;&#xA;&#xA;// better in most cases&#xA;export const API_KEY = &#39;SOMEKEY&#39;;&#xA;&#xA;// ---&#xA;&#xA;// bad - unnecessarily uppercases key while adding no semantic value&#xA;export const MAPPING = {&#xA;  KEY: &#39;value&#39;&#xA;};&#xA;&#xA;// good&#xA;export const MAPPING = {&#xA;  key: &#39;value&#39;,&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Accessors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;accessors--not-required&#34;&gt;&lt;/a&gt;&lt;a name=&#34;23.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--not-required&#34;&gt;24.1&lt;/a&gt; Accessor functions for properties are not required.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;accessors--no-getters-setters&#34;&gt;&lt;/a&gt;&lt;a name=&#34;23.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--no-getters-setters&#34;&gt;24.2&lt;/a&gt; Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use &lt;code&gt;getVal()&lt;/code&gt; and &lt;code&gt;setVal(&#39;hello&#39;)&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;class Dragon {&#xA;  get age() {&#xA;    // ...&#xA;  }&#xA;&#xA;  set age(value) {&#xA;    // ...&#xA;  }&#xA;}&#xA;&#xA;// good&#xA;class Dragon {&#xA;  getAge() {&#xA;    // ...&#xA;  }&#xA;&#xA;  setAge(value) {&#xA;    // ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;accessors--boolean-prefix&#34;&gt;&lt;/a&gt;&lt;a name=&#34;23.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--boolean-prefix&#34;&gt;24.3&lt;/a&gt; If the property/method is a &lt;code&gt;boolean&lt;/code&gt;, use &lt;code&gt;isVal()&lt;/code&gt; or &lt;code&gt;hasVal()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;if (!dragon.age()) {&#xA;  return false;&#xA;}&#xA;&#xA;// good&#xA;if (!dragon.hasAge()) {&#xA;  return false;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;accessors--consistent&#34;&gt;&lt;/a&gt;&lt;a name=&#34;23.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--consistent&#34;&gt;24.4&lt;/a&gt; It’s okay to create &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt; functions, but be consistent.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class Jedi {&#xA;  constructor(options = {}) {&#xA;    const lightsaber = options.lightsaber || &#39;blue&#39;;&#xA;    this.set(&#39;lightsaber&#39;, lightsaber);&#xA;  }&#xA;&#xA;  set(key, val) {&#xA;    this[key] = val;&#xA;  }&#xA;&#xA;  get(key) {&#xA;    return this[key];&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Events&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;events--hash&#34;&gt;&lt;/a&gt;&lt;a name=&#34;24.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#events--hash&#34;&gt;25.1&lt;/a&gt; When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a &#34;hash&#34;) instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;$(this).trigger(&#39;listingUpdated&#39;, listing.id);&#xA;&#xA;// ...&#xA;&#xA;$(this).on(&#39;listingUpdated&#39;, (e, listingID) =&amp;gt; {&#xA;  // do something with listingID&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;prefer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// good&#xA;$(this).trigger(&#39;listingUpdated&#39;, { listingID: listing.id });&#xA;&#xA;// ...&#xA;&#xA;$(this).on(&#39;listingUpdated&#39;, (e, data) =&amp;gt; {&#xA;  // do something with data.listingID&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;jQuery&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;jquery--dollar-prefix&#34;&gt;&lt;/a&gt;&lt;a name=&#34;25.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--dollar-prefix&#34;&gt;26.1&lt;/a&gt; Prefix jQuery object variables with a &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;const sidebar = $(&#39;.sidebar&#39;);&#xA;&#xA;// good&#xA;const $sidebar = $(&#39;.sidebar&#39;);&#xA;&#xA;// good&#xA;const $sidebarBtn = $(&#39;.sidebar-btn&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;jquery--cache&#34;&gt;&lt;/a&gt;&lt;a name=&#34;25.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--cache&#34;&gt;26.2&lt;/a&gt; Cache jQuery lookups.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;function setSidebar() {&#xA;  $(&#39;.sidebar&#39;).hide();&#xA;&#xA;  // ...&#xA;&#xA;  $(&#39;.sidebar&#39;).css({&#xA;    &#39;background-color&#39;: &#39;pink&#39;,&#xA;  });&#xA;}&#xA;&#xA;// good&#xA;function setSidebar() {&#xA;  const $sidebar = $(&#39;.sidebar&#39;);&#xA;  $sidebar.hide();&#xA;&#xA;  // ...&#xA;&#xA;  $sidebar.css({&#xA;    &#39;background-color&#39;: &#39;pink&#39;,&#xA;  });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;jquery--queries&#34;&gt;&lt;/a&gt;&lt;a name=&#34;25.3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--queries&#34;&gt;26.3&lt;/a&gt; For DOM queries use Cascading &lt;code&gt;$(&#39;.sidebar ul&#39;)&lt;/code&gt; or parent &amp;gt; child &lt;code&gt;$(&#39;.sidebar &amp;gt; ul&#39;)&lt;/code&gt;. &lt;a href=&#34;https://web.archive.org/web/20200414183810/https://jsperf.com/jquery-find-vs-context-sel/16&#34;&gt;jsPerf&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;jquery--find&#34;&gt;&lt;/a&gt;&lt;a name=&#34;25.4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--find&#34;&gt;26.4&lt;/a&gt; Use &lt;code&gt;find&lt;/code&gt; with scoped jQuery object queries.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;$(&#39;ul&#39;, &#39;.sidebar&#39;).hide();&#xA;&#xA;// bad&#xA;$(&#39;.sidebar&#39;).find(&#39;ul&#39;).hide();&#xA;&#xA;// good&#xA;$(&#39;.sidebar ul&#39;).hide();&#xA;&#xA;// good&#xA;$(&#39;.sidebar &amp;gt; ul&#39;).hide();&#xA;&#xA;// good&#xA;$sidebar.find(&#39;ul&#39;).hide();&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ECMAScript 5 Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;es5-compat--kangax&#34;&gt;&lt;/a&gt;&lt;a name=&#34;26.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es5-compat--kangax&#34;&gt;27.1&lt;/a&gt; Refer to &lt;a href=&#34;https://twitter.com/kangax/&#34;&gt;Kangax&lt;/a&gt;’s ES5 &lt;a href=&#34;https://kangax.github.io/es5-compat-table/&#34;&gt;compatibility table&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;ecmascript-6-styles&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;es6-styles&#34;&gt;&lt;/a&gt;&lt;a name=&#34;27.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-styles&#34;&gt;28.1&lt;/a&gt; This is a collection of links to the various ES6+ features.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&#34;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&#34;&gt;Classes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&#34;&gt;Object Shorthand&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&#34;&gt;Object Concise&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&#34;&gt;Object Computed Properties&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&#34;&gt;Template Strings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&#34;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&#34;&gt;Default Parameters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&#34;&gt;Rest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&#34;&gt;Array Spreads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#references&#34;&gt;Let and Const&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&#34;&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&#34;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&#34;&gt;Modules&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a name=&#34;tc39-proposals&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#tc39-proposals&#34;&gt;28.2&lt;/a&gt; Do not use &lt;a href=&#34;https://github.com/tc39/proposals&#34;&gt;TC39 proposals&lt;/a&gt; that have not reached stage 3.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? &lt;a href=&#34;https://tc39.github.io/process-document/&#34;&gt;They are not finalized&lt;/a&gt;, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Standard Library&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects&#34;&gt;Standard Library&lt;/a&gt; contains utilities that are functionally broken but remain for legacy reasons.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;standard-library--isnan&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isnan&#34;&gt;29.1&lt;/a&gt; Use &lt;code&gt;Number.isNaN&lt;/code&gt; instead of global &lt;code&gt;isNaN&lt;/code&gt;. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-restricted-globals&#34;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? The global &lt;code&gt;isNaN&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to NaN. If this behavior is desired, make it explicit.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;isNaN(&#39;1.2&#39;); // false&#xA;isNaN(&#39;1.2.3&#39;); // true&#xA;&#xA;// good&#xA;Number.isNaN(&#39;1.2.3&#39;); // false&#xA;Number.isNaN(Number(&#39;1.2.3&#39;)); // true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;standard-library--isfinite&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isfinite&#34;&gt;29.2&lt;/a&gt; Use &lt;code&gt;Number.isFinite&lt;/code&gt; instead of global &lt;code&gt;isFinite&lt;/code&gt;. eslint: &lt;a href=&#34;https://eslint.org/docs/rules/no-restricted-globals&#34;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Why? The global &lt;code&gt;isFinite&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to a finite number. If this behavior is desired, make it explicit.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// bad&#xA;isFinite(&#39;2e3&#39;); // true&#xA;&#xA;// good&#xA;Number.isFinite(&#39;2e3&#39;); // false&#xA;Number.isFinite(parseInt(&#39;2e3&#39;, 10)); // true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;testing--yup&#34;&gt;&lt;/a&gt;&lt;a name=&#34;28.1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--yup&#34;&gt;30.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function foo() {&#xA;  return true;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;testing--for-real&#34;&gt;&lt;/a&gt;&lt;a name=&#34;28.2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--for-real&#34;&gt;30.2&lt;/a&gt; &lt;strong&gt;No, but seriously&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Whichever testing framework you use, you should be writing tests!&lt;/li&gt; &#xA;   &lt;li&gt;Strive to write many small pure functions, and minimize where mutations occur.&lt;/li&gt; &#xA;   &lt;li&gt;Be cautious about stubs and mocks - they can make your tests more brittle.&lt;/li&gt; &#xA;   &lt;li&gt;We primarily use &lt;a href=&#34;https://www.npmjs.com/package/mocha&#34;&gt;&lt;code&gt;mocha&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://www.npmjs.com/package/jest&#34;&gt;&lt;code&gt;jest&lt;/code&gt;&lt;/a&gt; at Airbnb. &lt;a href=&#34;https://www.npmjs.com/package/tape&#34;&gt;&lt;code&gt;tape&lt;/code&gt;&lt;/a&gt; is also used occasionally for small, separate modules.&lt;/li&gt; &#xA;   &lt;li&gt;100% test coverage is a good goal to strive for, even if it’s not always practical to reach it.&lt;/li&gt; &#xA;   &lt;li&gt;Whenever you fix a bug, &lt;em&gt;write a regression test&lt;/em&gt;. A bug fixed without a regression test is almost certainly going to break again in the future.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kellegous.com/j/2013/01/26/layout-performance/&#34;&gt;On Layout &amp;amp; Web Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20200414200857/https://jsperf.com/string-vs-array-concat/2&#34;&gt;String vs Array Concat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20200414190827/https://jsperf.com/try-catch-in-loop-cost/12&#34;&gt;Try/Catch Cost In a Loop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20200414205426/https://jsperf.com/bang-function&#34;&gt;Bang Function&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20200414200850/https://jsperf.com/jquery-find-vs-context-sel/164&#34;&gt;jQuery Find vs Context, Selector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20200414205428/https://jsperf.com/innerhtml-vs-textcontent-for-script-text&#34;&gt;innerHTML vs textContent for script text&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20200414203914/https://jsperf.com/ya-string-concat/38&#34;&gt;Long String Concatenation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta&#34;&gt;Are JavaScript functions like &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, and &lt;code&gt;filter()&lt;/code&gt; optimized for traversing arrays?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Loading...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Learning ES6+&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tc39.github.io/ecma262/&#34;&gt;Latest ECMA spec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://exploringjs.com/&#34;&gt;ExploringJS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://compat-table.github.io/compat-table/es6/&#34;&gt;ES6 Compatibility Table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20240404212626/http://es6-features.org/&#34;&gt;Comprehensive Overview of ES6 Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://roadmap.sh/javascript&#34;&gt;JavaScript Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Read This&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ecma-international.org/ecma-262/6.0/index.html&#34;&gt;Standard ECMA-262&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code Style Linters &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;ESlint&lt;/a&gt; - &lt;a href=&#34;https://github.com/airbnb/javascript/raw/master/linters/.eslintrc&#34;&gt;Airbnb Style .eslintrc&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://jshint.com/&#34;&gt;JSHint&lt;/a&gt; - &lt;a href=&#34;https://github.com/airbnb/javascript/raw/master/linters/.jshintrc&#34;&gt;Airbnb Style .jshintrc&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Neutrino Preset - &lt;a href=&#34;https://neutrinojs.org/packages/airbnb/&#34;&gt;@neutrinojs/airbnb&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Other Style Guides&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://google.github.io/styleguide/jsguide.html&#34;&gt;Google JavaScript Style Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://google.github.io/styleguide/javascriptguide.xml&#34;&gt;Google JavaScript Style Guide (Old)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://contribute.jquery.org/style-guide/js/&#34;&gt;jQuery Core Style Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rwaldron/idiomatic.js&#34;&gt;Principles of Writing Consistent, Idiomatic JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://standardjs.com&#34;&gt;StandardJS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Other Styles&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/cjohansen/4135065&#34;&gt;Naming this in nested functions&lt;/a&gt; - Christian Johansen&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/airbnb/javascript/issues/52&#34;&gt;Conditional Callbacks&lt;/a&gt; - Ross Allen&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://sideeffect.kr/popularconvention/#javascript&#34;&gt;Popular JavaScript Coding Conventions on GitHub&lt;/a&gt; - JeongHoon Byun&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://benalman.com/news/2012/05/multiple-var-statements-javascript/&#34;&gt;Multiple var statements in JavaScript, not superfluous&lt;/a&gt; - Ben Alman&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/&#34;&gt;Understanding JavaScript Closures&lt;/a&gt; - Angus Croll&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.2ality.com/2013/06/basic-javascript.html&#34;&gt;Basic JavaScript for the impatient programmer&lt;/a&gt; - Dr. Axel Rauschmayer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youmightnotneedjquery.com/&#34;&gt;You Might Not Need jQuery&lt;/a&gt; - Zack Bloom &amp;amp; Adam Schwartz&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukehoban/es6features&#34;&gt;ES6 Features&lt;/a&gt; - Luke Hoban&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bendc/frontend-guidelines&#34;&gt;Frontend Guidelines&lt;/a&gt; - Benjamin De Cock&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&#34;&gt;JavaScript: The Good Parts&lt;/a&gt; - Douglas Crockford&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752&#34;&gt;JavaScript Patterns&lt;/a&gt; - Stoyan Stefanov&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X&#34;&gt;Pro JavaScript Design Patterns&lt;/a&gt; - Ross Harmes and Dustin Diaz&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309&#34;&gt;High Performance Web Sites: Essential Knowledge for Front-End Engineers&lt;/a&gt; - Steve Souders&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680&#34;&gt;Maintainable JavaScript&lt;/a&gt; - Nicholas C. Zakas&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X&#34;&gt;JavaScript Web Applications&lt;/a&gt; - Alex MacCaw&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273&#34;&gt;Pro JavaScript Techniques&lt;/a&gt; - John Resig&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595&#34;&gt;Smashing Node.js: JavaScript Everywhere&lt;/a&gt; - Guillermo Rauch&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X&#34;&gt;Secrets of the JavaScript Ninja&lt;/a&gt; - John Resig and Bear Bibeault&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://humanjavascript.com/&#34;&gt;Human JavaScript&lt;/a&gt; - Henrik Joreteg&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://superherojs.com/&#34;&gt;Superhero.js&lt;/a&gt; - Kim Joar Bekkelund, Mads Mobæk, &amp;amp; Olav Bjorkoy&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jsbooks.revolunet.com/&#34;&gt;JSBooks&lt;/a&gt; - Julien Bouquillon&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.manning.com/books/third-party-javascript&#34;&gt;Third Party JavaScript&lt;/a&gt; - Ben Vinegar and Anton Kovalyov&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.com/dp/0321812182&#34;&gt;Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript&lt;/a&gt; - David Herman&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eloquentjavascript.net/&#34;&gt;Eloquent JavaScript&lt;/a&gt; - Marijn Haverbeke&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shop.oreilly.com/product/0636920033769.do&#34;&gt;You Don’t Know JS: ES6 &amp;amp; Beyond&lt;/a&gt; - Kyle Simpson&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javascriptweekly.com/&#34;&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javascriptweblog.wordpress.com/&#34;&gt;JavaScript, JavaScript...&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bocoup.com/weblog&#34;&gt;Bocoup Weblog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.adequatelygood.com/&#34;&gt;Adequately Good&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nczonline.net/&#34;&gt;NCZOnline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://perfectionkills.com/&#34;&gt;Perfection Kills&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://benalman.com/&#34;&gt;Ben Alman&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dmitry.baranovskiy.com/&#34;&gt;Dmitry Baranovskiy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.tutsplus.com/?s=javascript&#34;&gt;nettuts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Podcasts&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javascriptair.com/&#34;&gt;JavaScript Air&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devchat.tv/js-jabber/&#34;&gt;JavaScript Jabber&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;In the Wild&lt;/h2&gt; &#xA;&lt;p&gt;This is a list of organizations that are using this style guide. Send us a pull request and we&#39;ll add you to the list.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;123erfasst&lt;/strong&gt;: &lt;a href=&#34;https://github.com/123erfasst/javascript&#34;&gt;123erfasst/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;4Catalyzer&lt;/strong&gt;: &lt;a href=&#34;https://github.com/4Catalyzer/javascript&#34;&gt;4Catalyzer/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Aan Zee&lt;/strong&gt;: &lt;a href=&#34;https://github.com/AanZee/javascript&#34;&gt;AanZee/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Airbnb&lt;/strong&gt;: &lt;a href=&#34;https://github.com/airbnb/javascript&#34;&gt;airbnb/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AloPeyk&lt;/strong&gt;: &lt;a href=&#34;https://github.com/AloPeyk&#34;&gt;AloPeyk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AltSchool&lt;/strong&gt;: &lt;a href=&#34;https://github.com/AltSchool/javascript&#34;&gt;AltSchool/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Apartmint&lt;/strong&gt;: &lt;a href=&#34;https://github.com/apartmint/javascript&#34;&gt;apartmint/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ascribe&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ascribe/javascript&#34;&gt;ascribe/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Avant&lt;/strong&gt;: &lt;a href=&#34;https://github.com/avantcredit/javascript&#34;&gt;avantcredit/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Axept&lt;/strong&gt;: &lt;a href=&#34;https://github.com/axept/javascript&#34;&gt;axept/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Billabong&lt;/strong&gt;: &lt;a href=&#34;https://github.com/billabong/javascript&#34;&gt;billabong/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bisk&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Bisk/&#34;&gt;bisk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bonhomme&lt;/strong&gt;: &lt;a href=&#34;https://github.com/bonhommeparis/javascript&#34;&gt;bonhommeparis/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Brainshark&lt;/strong&gt;: &lt;a href=&#34;https://github.com/brainshark/javascript&#34;&gt;brainshark/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CaseNine&lt;/strong&gt;: &lt;a href=&#34;https://github.com/CaseNine/javascript&#34;&gt;CaseNine/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cerner&lt;/strong&gt;: &lt;a href=&#34;https://github.com/cerner/&#34;&gt;Cerner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chartboost&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ChartBoost/javascript-style-guide&#34;&gt;ChartBoost/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Coeur d&#39;Alene Tribe&lt;/strong&gt;: &lt;a href=&#34;https://www.cdatribe-nsn.gov&#34;&gt;www.cdatribe-nsn.gov&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ComparaOnline&lt;/strong&gt;: &lt;a href=&#34;https://github.com/comparaonline/javascript-style-guide&#34;&gt;comparaonline/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compass Learning&lt;/strong&gt;: &lt;a href=&#34;https://github.com/compasslearning/javascript-style-guide&#34;&gt;compasslearning/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DailyMotion&lt;/strong&gt;: &lt;a href=&#34;https://github.com/dailymotion/javascript&#34;&gt;dailymotion/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DoSomething&lt;/strong&gt;: &lt;a href=&#34;https://github.com/DoSomething/eslint-config&#34;&gt;DoSomething/eslint-config&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Digitpaint&lt;/strong&gt; &lt;a href=&#34;https://github.com/digitpaint/javascript&#34;&gt;digitpaint/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: &lt;a href=&#34;https://git.drupalcode.org/project/drupal/blob/8.6.x/core/.eslintrc.json&#34;&gt;www.drupal.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ecosia&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ecosia/javascript&#34;&gt;ecosia/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Evernote&lt;/strong&gt;: &lt;a href=&#34;https://github.com/evernote/javascript-style-guide&#34;&gt;evernote/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Evolution Gaming&lt;/strong&gt;: &lt;a href=&#34;https://github.com/evolution-gaming/javascript&#34;&gt;evolution-gaming/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;EvozonJs&lt;/strong&gt;: &lt;a href=&#34;https://github.com/evozonjs/javascript&#34;&gt;evozonjs/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ExactTarget&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ExactTarget/javascript&#34;&gt;ExactTarget/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexberry&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Flexberry/javascript-style-guide&#34;&gt;Flexberry/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Gawker Media&lt;/strong&gt;: &lt;a href=&#34;https://github.com/gawkermedia/&#34;&gt;gawkermedia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;General Electric&lt;/strong&gt;: &lt;a href=&#34;https://github.com/GeneralElectric/javascript&#34;&gt;GeneralElectric/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Generation Tux&lt;/strong&gt;: &lt;a href=&#34;https://github.com/generationtux/styleguide&#34;&gt;GenerationTux/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GoodData&lt;/strong&gt;: &lt;a href=&#34;https://github.com/gooddata/gdc-js-style&#34;&gt;gooddata/gdc-js-style&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GreenChef&lt;/strong&gt;: &lt;a href=&#34;https://github.com/greenchef/javascript&#34;&gt;greenchef/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Grooveshark&lt;/strong&gt;: &lt;a href=&#34;https://github.com/grooveshark/javascript&#34;&gt;grooveshark/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Grupo-Abraxas&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Grupo-Abraxas/javascript&#34;&gt;Grupo-Abraxas/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Happeo&lt;/strong&gt;: &lt;a href=&#34;https://github.com/happeo/javascript&#34;&gt;happeo/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Honey&lt;/strong&gt;: &lt;a href=&#34;https://github.com/honeyscience/javascript&#34;&gt;honeyscience/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;How About We&lt;/strong&gt;: &lt;a href=&#34;https://github.com/howaboutwe/javascript-style-guide&#34;&gt;howaboutwe/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;HubSpot&lt;/strong&gt;: &lt;a href=&#34;https://github.com/HubSpot/javascript&#34;&gt;HubSpot/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hyper&lt;/strong&gt;: &lt;a href=&#34;https://github.com/hyperoslo/javascript-playbook/raw/master/style.md&#34;&gt;hyperoslo/javascript-playbook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;InterCity Group&lt;/strong&gt;: &lt;a href=&#34;https://github.com/intercitygroup/javascript-style-guide&#34;&gt;intercitygroup/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Jam3&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Jam3/Javascript-Code-Conventions&#34;&gt;Jam3/Javascript-Code-Conventions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;JSSolutions&lt;/strong&gt;: &lt;a href=&#34;https://github.com/JSSolutions/javascript&#34;&gt;JSSolutions/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kaplan Komputing&lt;/strong&gt;: &lt;a href=&#34;https://github.com/kaplankomputing/javascript&#34;&gt;kaplankomputing/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;KickorStick&lt;/strong&gt;: &lt;a href=&#34;https://github.com/kickorstick/&#34;&gt;kickorstick&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kinetica Solutions&lt;/strong&gt;: &lt;a href=&#34;https://github.com/kinetica/Javascript-style-guide&#34;&gt;kinetica/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LEINWAND&lt;/strong&gt;: &lt;a href=&#34;https://github.com/LEINWAND/javascript&#34;&gt;LEINWAND/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lonely Planet&lt;/strong&gt;: &lt;a href=&#34;https://github.com/lonelyplanet/javascript&#34;&gt;lonelyplanet/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;M2GEN&lt;/strong&gt;: &lt;a href=&#34;https://github.com/M2GEN/javascript&#34;&gt;M2GEN/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mighty Spring&lt;/strong&gt;: &lt;a href=&#34;https://github.com/mightyspring/javascript&#34;&gt;mightyspring/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MinnPost&lt;/strong&gt;: &lt;a href=&#34;https://github.com/MinnPost/javascript&#34;&gt;MinnPost/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MitocGroup&lt;/strong&gt;: &lt;a href=&#34;https://github.com/MitocGroup/javascript&#34;&gt;MitocGroup/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Muber&lt;/strong&gt;: &lt;a href=&#34;https://github.com/muber/&#34;&gt;muber&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;National Geographic Society&lt;/strong&gt;: &lt;a href=&#34;https://github.com/natgeosociety/&#34;&gt;natgeosociety&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NullDev&lt;/strong&gt;: &lt;a href=&#34;https://github.com/NullDevCo/JavaScript-Styleguide&#34;&gt;NullDevCo/JavaScript-Styleguide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Nulogy&lt;/strong&gt;: &lt;a href=&#34;https://github.com/nulogy/javascript&#34;&gt;nulogy/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Orange Hill Development&lt;/strong&gt;: &lt;a href=&#34;https://github.com/orangehill/javascript&#34;&gt;orangehill/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Orion Health&lt;/strong&gt;: &lt;a href=&#34;https://github.com/orionhealth/javascript&#34;&gt;orionhealth/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Peerby&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Peerby/javascript&#34;&gt;Peerby/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pier 1&lt;/strong&gt;: &lt;a href=&#34;https://github.com/pier1/javascript&#34;&gt;Pier1/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Qotto&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Qotto/javascript-style-guide&#34;&gt;Qotto/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;a href=&#34;https://reactjs.org/docs/how-to-contribute.html#style-guide&#34;&gt;reactjs.org/docs/how-to-contribute.html#style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;REI&lt;/strong&gt;: &lt;a href=&#34;https://github.com/rei/code-style-guides/&#34;&gt;reidev/js-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ripple&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ripple/javascript-style-guide&#34;&gt;ripple/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sainsbury’s Supermarkets&lt;/strong&gt;: &lt;a href=&#34;https://github.com/jsainsburyplc&#34;&gt;jsainsburyplc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shutterfly&lt;/strong&gt;: &lt;a href=&#34;https://github.com/shutterfly/javascript&#34;&gt;shutterfly/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sourcetoad&lt;/strong&gt;: &lt;a href=&#34;https://github.com/sourcetoad/javascript&#34;&gt;sourcetoad/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Springload&lt;/strong&gt;: &lt;a href=&#34;https://github.com/springload/&#34;&gt;springload&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;StratoDem Analytics&lt;/strong&gt;: &lt;a href=&#34;https://github.com/stratodem/javascript&#34;&gt;stratodem/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SteelKiwi Development&lt;/strong&gt;: &lt;a href=&#34;https://github.com/steelkiwi/javascript&#34;&gt;steelkiwi/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;StudentSphere&lt;/strong&gt;: &lt;a href=&#34;https://github.com/studentsphere/guide-javascript&#34;&gt;studentsphere/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SwoopApp&lt;/strong&gt;: &lt;a href=&#34;https://github.com/swoopapp/javascript&#34;&gt;swoopapp/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SysGarage&lt;/strong&gt;: &lt;a href=&#34;https://github.com/sysgarage/javascript-style-guide&#34;&gt;sysgarage/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Syzygy Warsaw&lt;/strong&gt;: &lt;a href=&#34;https://github.com/syzygypl/javascript&#34;&gt;syzygypl/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Target&lt;/strong&gt;: &lt;a href=&#34;https://github.com/target/javascript&#34;&gt;target/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Terra&lt;/strong&gt;: &lt;a href=&#34;https://github.com/cerner?utf8=%E2%9C%93&amp;amp;q=terra&amp;amp;type=&amp;amp;language=&#34;&gt;terra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TheLadders&lt;/strong&gt;: &lt;a href=&#34;https://github.com/TheLadders/javascript&#34;&gt;TheLadders/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;The Nerdery&lt;/strong&gt;: &lt;a href=&#34;https://github.com/thenerdery/javascript-standards&#34;&gt;thenerdery/javascript-standards&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tomify&lt;/strong&gt;: &lt;a href=&#34;https://github.com/tomprats&#34;&gt;tomprats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Traitify&lt;/strong&gt;: &lt;a href=&#34;https://github.com/traitify/eslint-config-traitify&#34;&gt;traitify/eslint-config-traitify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;T4R Technology&lt;/strong&gt;: &lt;a href=&#34;https://github.com/T4R-Technology/javascript&#34;&gt;T4R-Technology/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UrbanSim&lt;/strong&gt;: &lt;a href=&#34;https://github.com/urbansim/&#34;&gt;urbansim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;VoxFeed&lt;/strong&gt;: &lt;a href=&#34;https://github.com/VoxFeed/javascript-style-guide&#34;&gt;VoxFeed/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WeBox Studio&lt;/strong&gt;: &lt;a href=&#34;https://github.com/weboxstudio/javascript&#34;&gt;weboxstudio/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Weggo&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Weggo/javascript&#34;&gt;Weggo/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zillow&lt;/strong&gt;: &lt;a href=&#34;https://github.com/zillow/javascript&#34;&gt;zillow/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ZocDoc&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ZocDoc/javascript&#34;&gt;ZocDoc/javascript&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Translation&lt;/h2&gt; &#xA;&lt;p&gt;This style guide is also available in other languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&#34; alt=&#34;br&#34;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&#34;https://github.com/armoucar/javascript-style-guide&#34;&gt;armoucar/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bulgaria.png&#34; alt=&#34;bg&#34;&gt; &lt;strong&gt;Bulgarian&lt;/strong&gt;: &lt;a href=&#34;https://github.com/borislavvv/javascript&#34;&gt;borislavvv/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fpmweb/javascript-style-guide/master/img/catala.png&#34; alt=&#34;ca&#34;&gt; &lt;strong&gt;Catalan&lt;/strong&gt;: &lt;a href=&#34;https://github.com/fpmweb/javascript-style-guide&#34;&gt;fpmweb/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&#34; alt=&#34;cn&#34;&gt; &lt;strong&gt;Chinese (Simplified)&lt;/strong&gt;: &lt;a href=&#34;https://github.com/lin-123/javascript&#34;&gt;lin-123/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&#34; alt=&#34;tw&#34;&gt; &lt;strong&gt;Chinese (Traditional)&lt;/strong&gt;: &lt;a href=&#34;https://github.com/jigsawye/javascript&#34;&gt;jigsawye/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&#34; alt=&#34;fr&#34;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&#34;https://github.com/nmussy/javascript-style-guide&#34;&gt;nmussy/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&#34; alt=&#34;de&#34;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&#34;https://github.com/timofurrer/javascript-style-guide&#34;&gt;timofurrer/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&#34; alt=&#34;it&#34;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&#34;https://github.com/sinkswim/javascript-style-guide&#34;&gt;sinkswim/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&#34; alt=&#34;jp&#34;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&#34;https://github.com/mitsuruog/javascript-style-guide&#34;&gt;mitsuruog/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&#34; alt=&#34;kr&#34;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ParkSB/javascript-style-guide&#34;&gt;ParkSB/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&#34; alt=&#34;ru&#34;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: &lt;a href=&#34;https://github.com/leonidlebedev/javascript-airbnb&#34;&gt;leonidlebedev/javascript-airbnb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&#34; alt=&#34;es&#34;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&#34;https://github.com/paolocarrasco/javascript-style-guide&#34;&gt;paolocarrasco/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Thailand.png&#34; alt=&#34;th&#34;&gt; &lt;strong&gt;Thai&lt;/strong&gt;: &lt;a href=&#34;https://github.com/lvarayut/javascript-style-guide&#34;&gt;lvarayut/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&#34; alt=&#34;tr&#34;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&#34;https://github.com/eraycetinay/javascript&#34;&gt;eraycetinay/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&#34; alt=&#34;ua&#34;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ivanzusko/javascript&#34;&gt;ivanzusko/javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&#34; alt=&#34;vn&#34;&gt; &lt;strong&gt;Vietnam&lt;/strong&gt;: &lt;a href=&#34;https://github.com/dangkyokhoang/javascript-style-guide&#34;&gt;dangkyokhoang/javascript-style-guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The JavaScript Style Guide Guide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide&#34;&gt;Reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Chat With Us About JavaScript&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Find us on &lt;a href=&#34;https://gitter.im/airbnb/javascript&#34;&gt;gitter&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/airbnb/javascript/graphs/contributors&#34;&gt;View Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;(The MIT License)&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2012 Airbnb&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#39;Software&#39;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#39;AS IS&#39;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&#34;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Amendments&lt;/h2&gt; &#xA;&lt;p&gt;We encourage you to fork this guide and change the rules to fit your team’s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.&lt;/p&gt; &#xA;&lt;h1&gt;};&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>nodejs/node</title>
    <updated>2024-08-01T01:52:05Z</updated>
    <id>tag:github.com,2024-08-01:/nodejs/node</id>
    <link href="https://github.com/nodejs/node" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Node.js JavaScript runtime ✨🐢🚀✨&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js&lt;/h1&gt; &#xA;&lt;p&gt;Node.js is an open-source, cross-platform JavaScript runtime environment.&lt;/p&gt; &#xA;&lt;p&gt;For information on using Node.js, see the &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Node.js project uses an &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md&#34;&gt;open governance model&lt;/a&gt;. The &lt;a href=&#34;https://openjsf.org/&#34;&gt;OpenJS Foundation&lt;/a&gt; provides support for the project.&lt;/p&gt; &#xA;&lt;p&gt;Contributors are expected to act in a collaborative manner to move the project forward. We encourage the constructive exchange of contrary opinions and compromise. The &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md#technical-steering-committee&#34;&gt;TSC&lt;/a&gt; reserves the right to limit or block contributors who repeatedly act in ways that discourage, exhaust, or otherwise negatively affect other participants.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This project has a &lt;a href=&#34;https://github.com/nodejs/admin/raw/HEAD/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#release-types&#34;&gt;Release types&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#download&#34;&gt;Download&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#current-and-lts-releases&#34;&gt;Current and LTS releases&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#nightly-releases&#34;&gt;Nightly releases&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#api-documentation&#34;&gt;API documentation&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#verifying-binaries&#34;&gt;Verifying binaries&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#building-nodejs&#34;&gt;Building Node.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#contributing-to-nodejs&#34;&gt;Contributing to Node.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#current-project-team-members&#34;&gt;Current project team members&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#tsc-technical-steering-committee&#34;&gt;TSC (Technical Steering Committee)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#collaborators&#34;&gt;Collaborators&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#triagers&#34;&gt;Triagers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#release-keys&#34;&gt;Release keys&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Looking for help? Check out the &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/.github/SUPPORT.md&#34;&gt;instructions for getting support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Release types&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Current&lt;/strong&gt;: Under active development. Code for the Current release is in the branch for its major version number (for example, &lt;a href=&#34;https://github.com/nodejs/node/tree/v19.x&#34;&gt;v19.x&lt;/a&gt;). Node.js releases a new major version every 6 months, allowing for breaking changes. This happens in April and October every year. Releases appearing each October have a support life of 8 months. Releases appearing each April convert to LTS (see below) each October.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LTS&lt;/strong&gt;: Releases that receive Long Term Support, with a focus on stability and security. Every even-numbered major version will become an LTS release. LTS releases receive 12 months of &lt;em&gt;Active LTS&lt;/em&gt; support and a further 18 months of &lt;em&gt;Maintenance&lt;/em&gt;. LTS release lines have alphabetically-ordered code names, beginning with v4 Argon. There are no breaking changes or feature additions, except in some special circumstances.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Nightly&lt;/strong&gt;: Code from the Current branch built every 24-hours when there are changes. Use with caution.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Current and LTS releases follow &lt;a href=&#34;https://semver.org&#34;&gt;semantic versioning&lt;/a&gt;. A member of the Release Team &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#release-keys&#34;&gt;signs&lt;/a&gt; each Current and LTS release. For more information, see the &lt;a href=&#34;https://github.com/nodejs/Release#readme&#34;&gt;Release README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;Binaries, installers, and source tarballs are available at &lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;https://nodejs.org/en/download/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Current and LTS releases&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nodejs.org/download/release/&#34;&gt;https://nodejs.org/download/release/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://nodejs.org/download/release/latest/&#34;&gt;latest&lt;/a&gt; directory is an alias for the latest Current release. The latest-&lt;em&gt;codename&lt;/em&gt; directory is an alias for the latest release from an LTS line. For example, the &lt;a href=&#34;https://nodejs.org/download/release/latest-hydrogen/&#34;&gt;latest-hydrogen&lt;/a&gt; directory contains the latest Hydrogen (Node.js 18) release.&lt;/p&gt; &#xA;&lt;h4&gt;Nightly releases&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nodejs.org/download/nightly/&#34;&gt;https://nodejs.org/download/nightly/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Each directory name and filename contains a date (in UTC) and the commit SHA at the HEAD of the release.&lt;/p&gt; &#xA;&lt;h4&gt;API documentation&lt;/h4&gt; &#xA;&lt;p&gt;Documentation for the latest Current release is at &lt;a href=&#34;https://nodejs.org/api/&#34;&gt;https://nodejs.org/api/&lt;/a&gt;. Version-specific documentation is available in each release directory in the &lt;em&gt;docs&lt;/em&gt; subdirectory. Version-specific documentation is also at &lt;a href=&#34;https://nodejs.org/download/docs/&#34;&gt;https://nodejs.org/download/docs/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Verifying binaries&lt;/h3&gt; &#xA;&lt;p&gt;Download directories contain a &lt;code&gt;SHASUMS256.txt&lt;/code&gt; file with SHA checksums for the files.&lt;/p&gt; &#xA;&lt;p&gt;To download &lt;code&gt;SHASUMS256.txt&lt;/code&gt; using &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To check that a downloaded file matches the checksum, run it through &lt;code&gt;sha256sum&lt;/code&gt; with a command such as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;grep node-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Current and LTS, the GPG detached signature of &lt;code&gt;SHASUMS256.txt&lt;/code&gt; is in &lt;code&gt;SHASUMS256.txt.sig&lt;/code&gt;. You can use it with &lt;code&gt;gpg&lt;/code&gt; to verify the integrity of &lt;code&gt;SHASUMS256.txt&lt;/code&gt;. You will first need to import &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#release-keys&#34;&gt;the GPG keys of individuals authorized to create releases&lt;/a&gt;. To import the keys:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gpg --keyserver hkps://keys.openpgp.org --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#release-keys&#34;&gt;Release keys&lt;/a&gt; for a script to import active release keys.&lt;/p&gt; &#xA;&lt;p&gt;Next, download the &lt;code&gt;SHASUMS256.txt.sig&lt;/code&gt; for the release:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt.sig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use &lt;code&gt;gpg --verify SHASUMS256.txt.sig SHASUMS256.txt&lt;/code&gt; to verify the file&#39;s signature.&lt;/p&gt; &#xA;&lt;h2&gt;Building Node.js&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/BUILDING.md&#34;&gt;BUILDING.md&lt;/a&gt; for instructions on how to build Node.js from source and a list of supported platforms.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;For information on reporting security vulnerabilities in Node.js, see &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Node.js&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/CONTRIBUTING.md&#34;&gt;Contributing to the project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nodejs/TSC/raw/HEAD/WORKING_GROUPS.md&#34;&gt;Working Groups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/strategic-initiatives.md&#34;&gt;Strategic initiatives&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/technical-values.md&#34;&gt;Technical values and prioritization&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Current project team members&lt;/h2&gt; &#xA;&lt;p&gt;For information about the governance of the Node.js project, see &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md&#34;&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- node-core-utils and find-inactive-tsc.mjs depend on the format of the TSC&#xA;     list. If the format changes, those utilities need to be tested and&#xA;     updated. --&gt; &#xA;&lt;h3&gt;TSC (Technical Steering Committee)&lt;/h3&gt; &#xA;&lt;h4&gt;TSC voting members&lt;/h4&gt; &#xA;&lt;!--lint disable prohibited-strings--&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aduh95&#34;&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:duhamelantoine1995@gmail.com&#34;&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anonrig&#34;&gt;anonrig&lt;/a&gt; - &lt;strong&gt;Yagiz Nizipli&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:yagiz@nizipli.com&#34;&gt;yagiz@nizipli.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/benjamingr&#34;&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:benjamingr@gmail.com&#34;&gt;benjamingr@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BridgeAR&#34;&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ruben@bridgewater.de&#34;&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gireeshpunathil&#34;&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:gpunathi@in.ibm.com&#34;&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jasnell&#34;&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:jasnell@gmail.com&#34;&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joyeecheung&#34;&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:joyeec9h3@gmail.com&#34;&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/legendecas&#34;&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:legendecas@gmail.com&#34;&gt;legendecas@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marco-ippolito&#34;&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:marcoippolito54@gmail.com&#34;&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mcollina&#34;&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:matteo.collina@gmail.com&#34;&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mhdawson&#34;&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:midawson@redhat.com&#34;&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MoLow&#34;&gt;MoLow&lt;/a&gt; - &lt;strong&gt;Moshe Atlow&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:moshe@atlow.co.il&#34;&gt;moshe@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RafaelGSS&#34;&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rafael.nunu@hotmail.com&#34;&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/richardlau&#34;&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rlau@redhat.com&#34;&gt;rlau@redhat.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronag&#34;&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ronagy@icloud.com&#34;&gt;ronagy@icloud.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ruyadorno&#34;&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ruy@vlt.sh&#34;&gt;ruy@vlt.sh&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ShogunPanda&#34;&gt;ShogunPanda&lt;/a&gt; - &lt;strong&gt;Paolo Insogna&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:paolo@cowtech.it&#34;&gt;paolo@cowtech.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/targos&#34;&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:targos@protonmail.com&#34;&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tniessen&#34;&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:tniessen@tnie.de&#34;&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;TSC regular members&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apapirovski&#34;&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:apapirovski@mac.com&#34;&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BethGriggs&#34;&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bethanyngriggs@gmail.com&#34;&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bnoordhuis&#34;&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:info@bnoordhuis.nl&#34;&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cjihrig&#34;&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:cjihrig@gmail.com&#34;&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/codebytere&#34;&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:shelley.vohr@gmail.com&#34;&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GeoffreyBooth&#34;&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:webadmin@geoffreybooth.com&#34;&gt;webadmin@geoffreybooth.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Trott&#34;&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rtrott@gmail.com&#34;&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;TSC emeriti members&lt;/summary&gt; &#xA; &lt;h4&gt;TSC emeriti members&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/addaleax&#34;&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:anna@addaleax.net&#34;&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ChALkeR&#34;&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:chalkerx@gmail.com&#34;&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/chrisdickinson&#34;&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:christopher.s.dickinson@gmail.com&#34;&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/danbev&#34;&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:daniel.bevenius@gmail.com&#34;&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/danielleadams&#34;&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:adamzdanielle@gmail.com&#34;&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/evanlucas&#34;&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:evanlucas@me.com&#34;&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/fhinkel&#34;&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:franziska.hinkelmann@gmail.com&#34;&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/Fishrock123&#34;&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:fishrock123@rocketmail.com&#34;&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/gabrielschulhof&#34;&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:gabrielschulhof@gmail.com&#34;&gt;gabrielschulhof@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/gibfahn&#34;&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:gibfahn@gmail.com&#34;&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/indutny&#34;&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:fedor@indutny.com&#34;&gt;fedor@indutny.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/isaacs&#34;&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:i@izs.me&#34;&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/joshgav&#34;&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:josh.gavant@outlook.com&#34;&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/mmarchini&#34;&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:oss@mmarchini.me&#34;&gt;oss@mmarchini.me&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/mscdex&#34;&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:mscdex@mscdex.net&#34;&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/MylesBorins&#34;&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:myles.borins@gmail.com&#34;&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/nebrius&#34;&gt;nebrius&lt;/a&gt; - &lt;strong&gt;Bryan Hughes&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bryan@nebri.us&#34;&gt;bryan@nebri.us&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ofrobots&#34;&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ofrobots@google.com&#34;&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/orangemocha&#34;&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:orangemocha@nodejs.org&#34;&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/piscisaureus&#34;&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bertbelder@gmail.com&#34;&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/RaisinTen&#34;&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:raisinten@gmail.com&#34;&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/rvagg&#34;&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:r@va.gg&#34;&gt;r@va.gg&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/sam-github&#34;&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:vieuxtech@gmail.com&#34;&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/shigeki&#34;&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ohtsu@ohtsu.org&#34;&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/thefourtheye&#34;&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:thechargingvolcano@gmail.com&#34;&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/TimothyGu&#34;&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng &#34;Timothy&#34; Gu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:timothygu99@gmail.com&#34;&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/trevnorris&#34;&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:trev.norris@gmail.com&#34;&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;!-- node-core-utils and find-inactive-collaborators.mjs depend on the format&#xA;     of the collaborator list. If the format changes, those utilities need to be&#xA;     tested and updated. --&gt; &#xA;&lt;h3&gt;Collaborators&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/addaleax&#34;&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:anna@addaleax.net&#34;&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aduh95&#34;&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:duhamelantoine1995@gmail.com&#34;&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anonrig&#34;&gt;anonrig&lt;/a&gt; - &lt;strong&gt;Yagiz Nizipli&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:yagiz@nizipli.com&#34;&gt;yagiz@nizipli.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apapirovski&#34;&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:apapirovski@mac.com&#34;&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atlowChemi&#34;&gt;atlowChemi&lt;/a&gt; - &lt;strong&gt;Chemi Atlow&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:chemi@atlow.co.il&#34;&gt;chemi@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ayase-252&#34;&gt;Ayase-252&lt;/a&gt; - &lt;strong&gt;Qingyu Deng&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:i@ayase-lab.com&#34;&gt;i@ayase-lab.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bengl&#34;&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bryan@bryanenglish.com&#34;&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/benjamingr&#34;&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:benjamingr@gmail.com&#34;&gt;benjamingr@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BethGriggs&#34;&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bethanyngriggs@gmail.com&#34;&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bnb&#34;&gt;bnb&lt;/a&gt; - &lt;strong&gt;Tierney Cyren&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:hello@bnb.im&#34;&gt;hello@bnb.im&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bnoordhuis&#34;&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:info@bnoordhuis.nl&#34;&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BridgeAR&#34;&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ruben@bridgewater.de&#34;&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cclauss&#34;&gt;cclauss&lt;/a&gt; - &lt;strong&gt;Christian Clauss&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:cclauss@me.com&#34;&gt;cclauss@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cjihrig&#34;&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:cjihrig@gmail.com&#34;&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/codebytere&#34;&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:shelley.vohr@gmail.com&#34;&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cola119&#34;&gt;cola119&lt;/a&gt; - &lt;strong&gt;Kohei Ueno&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:kohei.ueno119@gmail.com&#34;&gt;kohei.ueno119@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/daeyeon&#34;&gt;daeyeon&lt;/a&gt; - &lt;strong&gt;Daeyeon Jeong&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:daeyeon.dev@gmail.com&#34;&gt;daeyeon.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danielleadams&#34;&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:adamzdanielle@gmail.com&#34;&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/debadree25&#34;&gt;debadree25&lt;/a&gt; - &lt;strong&gt;Debadree Chatterjee&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:debadree333@gmail.com&#34;&gt;debadree333@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/deokjinkim&#34;&gt;deokjinkim&lt;/a&gt; - &lt;strong&gt;Deokjin Kim&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:deokjin81.kim@gmail.com&#34;&gt;deokjin81.kim@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edsadr&#34;&gt;edsadr&lt;/a&gt; - &lt;strong&gt;Adrian Estrada&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:edsadr@gmail.com&#34;&gt;edsadr@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ErickWendel&#34;&gt;ErickWendel&lt;/a&gt; - &lt;strong&gt;Erick Wendel&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:erick.workspace@gmail.com&#34;&gt;erick.workspace@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ethan-Arrowood&#34;&gt;Ethan-Arrowood&lt;/a&gt; - &lt;strong&gt;Ethan Arrowood&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ethan@arrowood.dev&#34;&gt;ethan@arrowood.dev&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/F3n67u&#34;&gt;F3n67u&lt;/a&gt; - &lt;strong&gt;Feng Yu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:F3n67u@outlook.com&#34;&gt;F3n67u@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fhinkel&#34;&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:franziska.hinkelmann@gmail.com&#34;&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Flarna&#34;&gt;Flarna&lt;/a&gt; - &lt;strong&gt;Gerhard Stöbich&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:deb2001-github@yahoo.de&#34;&gt;deb2001-github@yahoo.de&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gabrielschulhof&#34;&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:gabrielschulhof@gmail.com&#34;&gt;gabrielschulhof@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gengjiawen&#34;&gt;gengjiawen&lt;/a&gt; - &lt;strong&gt;Jiawen Geng&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:technicalcute@gmail.com&#34;&gt;technicalcute@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GeoffreyBooth&#34;&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:webadmin@geoffreybooth.com&#34;&gt;webadmin@geoffreybooth.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gireeshpunathil&#34;&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:gpunathi@in.ibm.com&#34;&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/guybedford&#34;&gt;guybedford&lt;/a&gt; - &lt;strong&gt;Guy Bedford&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:guybedford@gmail.com&#34;&gt;guybedford@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/H4ad&#34;&gt;H4ad&lt;/a&gt; - &lt;strong&gt;Vinícius Lourenço Claro Cardoso&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:contact@viniciusl.com.br&#34;&gt;contact@viniciusl.com.br&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HarshithaKP&#34;&gt;HarshithaKP&lt;/a&gt; - &lt;strong&gt;Harshitha K P&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:harshitha014@gmail.com&#34;&gt;harshitha014@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/himself65&#34;&gt;himself65&lt;/a&gt; - &lt;strong&gt;Zeyu &#34;Alex&#34; Yang&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:himself65@outlook.com&#34;&gt;himself65@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jakecastelli&#34;&gt;jakecastelli&lt;/a&gt; - &lt;strong&gt;Jake Yuesong Li&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:jake.yuesong@gmail.com&#34;&gt;jake.yuesong@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JakobJingleheimer&#34;&gt;JakobJingleheimer&lt;/a&gt; - &lt;strong&gt;Jacob Smith&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:jacob@frende.me&#34;&gt;jacob@frende.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jasnell&#34;&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:jasnell@gmail.com&#34;&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jkrems&#34;&gt;jkrems&lt;/a&gt; - &lt;strong&gt;Jan Krems&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:jan.krems@gmail.com&#34;&gt;jan.krems@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joesepi&#34;&gt;joesepi&lt;/a&gt; - &lt;strong&gt;Joe Sepi&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:sepi@joesepi.com&#34;&gt;sepi@joesepi.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joyeecheung&#34;&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:joyeec9h3@gmail.com&#34;&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/juanarbol&#34;&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:soyjuanarbol@gmail.com&#34;&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JungMinu&#34;&gt;JungMinu&lt;/a&gt; - &lt;strong&gt;Minwoo Jung&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:nodecorelab@gmail.com&#34;&gt;nodecorelab@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KhafraDev&#34;&gt;KhafraDev&lt;/a&gt; - &lt;strong&gt;Matthew Aitken&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:maitken033380023@gmail.com&#34;&gt;maitken033380023@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kuriyosh&#34;&gt;kuriyosh&lt;/a&gt; - &lt;strong&gt;Yoshiki Kurihara&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:yosyos0306@gmail.com&#34;&gt;yosyos0306@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kvakil&#34;&gt;kvakil&lt;/a&gt; - &lt;strong&gt;Keyhan Vakil&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:kvakil@sylph.kvakil.me&#34;&gt;kvakil@sylph.kvakil.me&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/legendecas&#34;&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:legendecas@gmail.com&#34;&gt;legendecas@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lemire&#34;&gt;lemire&lt;/a&gt; - &lt;strong&gt;Daniel Lemire&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:daniel@lemire.me&#34;&gt;daniel@lemire.me&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Linkgoron&#34;&gt;Linkgoron&lt;/a&gt; - &lt;strong&gt;Nitzan Uziely&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:linkgoron@gmail.com&#34;&gt;linkgoron@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LiviaMedeiros&#34;&gt;LiviaMedeiros&lt;/a&gt; - &lt;strong&gt;LiviaMedeiros&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:livia@cirno.name&#34;&gt;livia@cirno.name&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lpinca&#34;&gt;lpinca&lt;/a&gt; - &lt;strong&gt;Luigi Pinca&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:luigipinca@gmail.com&#34;&gt;luigipinca@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukekarrys&#34;&gt;lukekarrys&lt;/a&gt; - &lt;strong&gt;Luke Karrys&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:luke@lukekarrys.com&#34;&gt;luke@lukekarrys.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Lxxyx&#34;&gt;Lxxyx&lt;/a&gt; - &lt;strong&gt;Zijian Liu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:lxxyxzj@gmail.com&#34;&gt;lxxyxzj@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marco-ippolito&#34;&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:marcoippolito54@gmail.com&#34;&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marsonya&#34;&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Akhil Marsonya&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:akhil.marsonya27@gmail.com&#34;&gt;akhil.marsonya27@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MattiasBuelens&#34;&gt;MattiasBuelens&lt;/a&gt; - &lt;strong&gt;Mattias Buelens&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:mattias@buelens.com&#34;&gt;mattias@buelens.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mcollina&#34;&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:matteo.collina@gmail.com&#34;&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/meixg&#34;&gt;meixg&lt;/a&gt; - &lt;strong&gt;Xuguang Mei&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:meixuguang@gmail.com&#34;&gt;meixuguang@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mhdawson&#34;&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:midawson@redhat.com&#34;&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mildsunrise&#34;&gt;mildsunrise&lt;/a&gt; - &lt;strong&gt;Alba Mendez&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:me@alba.sh&#34;&gt;me@alba.sh&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MoLow&#34;&gt;MoLow&lt;/a&gt; - &lt;strong&gt;Moshe Atlow&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:moshe@atlow.co.il&#34;&gt;moshe@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MrJithil&#34;&gt;MrJithil&lt;/a&gt; - &lt;strong&gt;Jithil P Ponnan&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:jithil@outlook.com&#34;&gt;jithil@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ovflowd&#34;&gt;ovflowd&lt;/a&gt; - &lt;strong&gt;Claudio Wunder&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:cwunder@gnome.org&#34;&gt;cwunder@gnome.org&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/panva&#34;&gt;panva&lt;/a&gt; - &lt;strong&gt;Filip Skokan&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:panva.ip@gmail.com&#34;&gt;panva.ip@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pimterry&#34;&gt;pimterry&lt;/a&gt; - &lt;strong&gt;Tim Perry&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:pimterry@gmail.com&#34;&gt;pimterry@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Qard&#34;&gt;Qard&lt;/a&gt; - &lt;strong&gt;Stephen Belanger&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:admin@stephenbelanger.com&#34;&gt;admin@stephenbelanger.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RafaelGSS&#34;&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rafael.nunu@hotmail.com&#34;&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/richardlau&#34;&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rlau@redhat.com&#34;&gt;rlau@redhat.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rluvaton&#34;&gt;rluvaton&lt;/a&gt; - &lt;strong&gt;Raz Luvaton&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rluvaton@gmail.com&#34;&gt;rluvaton@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronag&#34;&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ronagy@icloud.com&#34;&gt;ronagy@icloud.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ruyadorno&#34;&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ruy@vlt.sh&#34;&gt;ruy@vlt.sh&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/santigimeno&#34;&gt;santigimeno&lt;/a&gt; - &lt;strong&gt;Santiago Gimeno&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:santiago.gimeno@gmail.com&#34;&gt;santiago.gimeno@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ShogunPanda&#34;&gt;ShogunPanda&lt;/a&gt; - &lt;strong&gt;Paolo Insogna&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:paolo@cowtech.it&#34;&gt;paolo@cowtech.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/srl295&#34;&gt;srl295&lt;/a&gt; - &lt;strong&gt;Steven R Loomis&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:srl295@gmail.com&#34;&gt;srl295@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/StefanStojanovic&#34;&gt;StefanStojanovic&lt;/a&gt; - &lt;strong&gt;Stefan Stojanovic&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:stefan.stojanovic@janeasystems.com&#34;&gt;stefan.stojanovic@janeasystems.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sxa&#34;&gt;sxa&lt;/a&gt; - &lt;strong&gt;Stewart X Addison&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:sxa@redhat.com&#34;&gt;sxa@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/targos&#34;&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:targos@protonmail.com&#34;&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/theanarkh&#34;&gt;theanarkh&lt;/a&gt; - &lt;strong&gt;theanarkh&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:theratliter@gmail.com&#34;&gt;theratliter@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tniessen&#34;&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:tniessen@tnie.de&#34;&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trivikr&#34;&gt;trivikr&lt;/a&gt; - &lt;strong&gt;Trivikram Kamat&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:trivikr.dev@gmail.com&#34;&gt;trivikr.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Trott&#34;&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rtrott@gmail.com&#34;&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UlisesGascon&#34;&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gascón&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ulisesgascongonzalez@gmail.com&#34;&gt;ulisesgascongonzalez@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vmoroz&#34;&gt;vmoroz&lt;/a&gt; - &lt;strong&gt;Vladimir Morozov&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:vmorozov@microsoft.com&#34;&gt;vmorozov@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VoltrexKeyva&#34;&gt;VoltrexKeyva&lt;/a&gt; - &lt;strong&gt;Mohammed Keyvanzadeh&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:mohammadkeyvanzade94@gmail.com&#34;&gt;mohammadkeyvanzade94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/watilde&#34;&gt;watilde&lt;/a&gt; - &lt;strong&gt;Daijiro Wachi&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:daijiro.wachi@gmail.com&#34;&gt;daijiro.wachi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zcbenz&#34;&gt;zcbenz&lt;/a&gt; - &lt;strong&gt;Cheng Zhao&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:zcbenz@gmail.com&#34;&gt;zcbenz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ZYSzys&#34;&gt;ZYSzys&lt;/a&gt; - &lt;strong&gt;Yongsheng Zhang&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:zyszys98@gmail.com&#34;&gt;zyszys98@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Emeriti&lt;/summary&gt; &#xA; &lt;!-- find-inactive-collaborators.mjs depends on the format of the emeriti list.&#xA;     If the format changes, those utilities need to be tested and updated. --&gt; &#xA; &lt;h3&gt;Collaborator emeriti&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ak239&#34;&gt;ak239&lt;/a&gt; - &lt;strong&gt;Aleksei Koziatinskii&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ak239spb@gmail.com&#34;&gt;ak239spb@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/andrasq&#34;&gt;andrasq&lt;/a&gt; - &lt;strong&gt;Andras&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:andras@kinvey.com&#34;&gt;andras@kinvey.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/AndreasMadsen&#34;&gt;AndreasMadsen&lt;/a&gt; - &lt;strong&gt;Andreas Madsen&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:amwebdk@gmail.com&#34;&gt;amwebdk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/AnnaMag&#34;&gt;AnnaMag&lt;/a&gt; - &lt;strong&gt;Anna M. Kedzierska&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:anna.m.kedzierska@gmail.com&#34;&gt;anna.m.kedzierska@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/antsmartian&#34;&gt;antsmartian&lt;/a&gt; - &lt;strong&gt;Anto Aravinth&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:anto.aravinth.cse@gmail.com&#34;&gt;anto.aravinth.cse@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/aqrln&#34;&gt;aqrln&lt;/a&gt; - &lt;strong&gt;Alexey Orlenko&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:eaglexrlnk@gmail.com&#34;&gt;eaglexrlnk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/AshCripps&#34;&gt;AshCripps&lt;/a&gt; - &lt;strong&gt;Ash Cripps&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:email@ashleycripps.co.uk&#34;&gt;email@ashleycripps.co.uk&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/bcoe&#34;&gt;bcoe&lt;/a&gt; - &lt;strong&gt;Ben Coe&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bencoe@gmail.com&#34;&gt;bencoe@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/bmeck&#34;&gt;bmeck&lt;/a&gt; - &lt;strong&gt;Bradley Farias&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bradley.meck@gmail.com&#34;&gt;bradley.meck@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/bmeurer&#34;&gt;bmeurer&lt;/a&gt; - &lt;strong&gt;Benedikt Meurer&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:benedikt.meurer@gmail.com&#34;&gt;benedikt.meurer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/boneskull&#34;&gt;boneskull&lt;/a&gt; - &lt;strong&gt;Christopher Hiller&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:boneskull@boneskull.com&#34;&gt;boneskull@boneskull.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/brendanashworth&#34;&gt;brendanashworth&lt;/a&gt; - &lt;strong&gt;Brendan Ashworth&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:brendan.ashworth@me.com&#34;&gt;brendan.ashworth@me.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/bzoz&#34;&gt;bzoz&lt;/a&gt; - &lt;strong&gt;Bartosz Sosnowski&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bartosz@janeasystems.com&#34;&gt;bartosz@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/calvinmetcalf&#34;&gt;calvinmetcalf&lt;/a&gt; - &lt;strong&gt;Calvin Metcalf&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:calvin.metcalf@gmail.com&#34;&gt;calvin.metcalf@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ChALkeR&#34;&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:chalkerx@gmail.com&#34;&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/chrisdickinson&#34;&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:christopher.s.dickinson@gmail.com&#34;&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/claudiorodriguez&#34;&gt;claudiorodriguez&lt;/a&gt; - &lt;strong&gt;Claudio Rodriguez&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:cjrodr@yahoo.com&#34;&gt;cjrodr@yahoo.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/danbev&#34;&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:daniel.bevenius@gmail.com&#34;&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/DavidCai1993&#34;&gt;DavidCai1993&lt;/a&gt; - &lt;strong&gt;David Cai&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:davidcai1993@yahoo.com&#34;&gt;davidcai1993@yahoo.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/davisjam&#34;&gt;davisjam&lt;/a&gt; - &lt;strong&gt;Jamie Davis&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:davisjam@vt.edu&#34;&gt;davisjam@vt.edu&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/devnexen&#34;&gt;devnexen&lt;/a&gt; - &lt;strong&gt;David Carlier&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:devnexen@gmail.com&#34;&gt;devnexen@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/devsnek&#34;&gt;devsnek&lt;/a&gt; - &lt;strong&gt;Gus Caplan&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:me@gus.host&#34;&gt;me@gus.host&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/digitalinfinity&#34;&gt;digitalinfinity&lt;/a&gt; - &lt;strong&gt;Hitesh Kanwathirtha&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:digitalinfinity@gmail.com&#34;&gt;digitalinfinity@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/dmabupt&#34;&gt;dmabupt&lt;/a&gt; - &lt;strong&gt;Xu Meng&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:dmabupt@gmail.com&#34;&gt;dmabupt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/dnlup&#34;&gt;dnlup&lt;/a&gt; &lt;strong&gt;dnlup&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:dnlup.dev@gmail.com&#34;&gt;dnlup.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/eljefedelrodeodeljefe&#34;&gt;eljefedelrodeodeljefe&lt;/a&gt; - &lt;strong&gt;Robert Jefe Lindstaedt&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:robert.lindstaedt@gmail.com&#34;&gt;robert.lindstaedt@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/estliberitas&#34;&gt;estliberitas&lt;/a&gt; - &lt;strong&gt;Alexander Makarenko&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:estliberitas@gmail.com&#34;&gt;estliberitas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/eugeneo&#34;&gt;eugeneo&lt;/a&gt; - &lt;strong&gt;Eugene Ostroukhov&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:eostroukhov@google.com&#34;&gt;eostroukhov@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/evanlucas&#34;&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:evanlucas@me.com&#34;&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/firedfox&#34;&gt;firedfox&lt;/a&gt; - &lt;strong&gt;Daniel Wang&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:wangyang0123@gmail.com&#34;&gt;wangyang0123@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/Fishrock123&#34;&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:fishrock123@rocketmail.com&#34;&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/gdams&#34;&gt;gdams&lt;/a&gt; - &lt;strong&gt;George Adams&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:gadams@microsoft.com&#34;&gt;gadams@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/geek&#34;&gt;geek&lt;/a&gt; - &lt;strong&gt;Wyatt Preul&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:wpreul@gmail.com&#34;&gt;wpreul@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/gibfahn&#34;&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:gibfahn@gmail.com&#34;&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/glentiki&#34;&gt;glentiki&lt;/a&gt; - &lt;strong&gt;Glen Keane&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:glenkeane.94@gmail.com&#34;&gt;glenkeane.94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/hashseed&#34;&gt;hashseed&lt;/a&gt; - &lt;strong&gt;Yang Guo&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:yangguo@chromium.org&#34;&gt;yangguo@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/hiroppy&#34;&gt;hiroppy&lt;/a&gt; - &lt;strong&gt;Yuta Hiroto&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:hello@hiroppy.me&#34;&gt;hello@hiroppy.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/iansu&#34;&gt;iansu&lt;/a&gt; - &lt;strong&gt;Ian Sutherland&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ian@iansutherland.ca&#34;&gt;ian@iansutherland.ca&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/iarna&#34;&gt;iarna&lt;/a&gt; - &lt;strong&gt;Rebecca Turner&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:me@re-becca.org&#34;&gt;me@re-becca.org&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/imran-iq&#34;&gt;imran-iq&lt;/a&gt; - &lt;strong&gt;Imran Iqbal&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:imran@imraniqbal.org&#34;&gt;imran@imraniqbal.org&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/imyller&#34;&gt;imyller&lt;/a&gt; - &lt;strong&gt;Ilkka Myller&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ilkka.myller@nodefield.com&#34;&gt;ilkka.myller@nodefield.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/indutny&#34;&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:fedor@indutny.com&#34;&gt;fedor@indutny.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/isaacs&#34;&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:i@izs.me&#34;&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/italoacasas&#34;&gt;italoacasas&lt;/a&gt; - &lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:me@italoacasas.com&#34;&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/JacksonTian&#34;&gt;JacksonTian&lt;/a&gt; - &lt;strong&gt;Jackson Tian&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:shyvo1987@gmail.com&#34;&gt;shyvo1987@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/jasongin&#34;&gt;jasongin&lt;/a&gt; - &lt;strong&gt;Jason Ginchereau&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:jasongin@microsoft.com&#34;&gt;jasongin@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/jbergstroem&#34;&gt;jbergstroem&lt;/a&gt; - &lt;strong&gt;Johan Bergström&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bugs@bergstroem.nu&#34;&gt;bugs@bergstroem.nu&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/jdalton&#34;&gt;jdalton&lt;/a&gt; - &lt;strong&gt;John-David Dalton&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:john.david.dalton@gmail.com&#34;&gt;john.david.dalton@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/jhamhader&#34;&gt;jhamhader&lt;/a&gt; - &lt;strong&gt;Yuval Brik&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:yuval@brik.org.il&#34;&gt;yuval@brik.org.il&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/joaocgreis&#34;&gt;joaocgreis&lt;/a&gt; - &lt;strong&gt;João Reis&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:reis@janeasystems.com&#34;&gt;reis@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/joshgav&#34;&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:josh.gavant@outlook.com&#34;&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/julianduque&#34;&gt;julianduque&lt;/a&gt; - &lt;strong&gt;Julian Duque&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:julianduquej@gmail.com&#34;&gt;julianduquej@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/kfarnung&#34;&gt;kfarnung&lt;/a&gt; - &lt;strong&gt;Kyle Farnung&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:kfarnung@microsoft.com&#34;&gt;kfarnung@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/kunalspathak&#34;&gt;kunalspathak&lt;/a&gt; - &lt;strong&gt;Kunal Pathak&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:kunal.pathak@microsoft.com&#34;&gt;kunal.pathak@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/lance&#34;&gt;lance&lt;/a&gt; - &lt;strong&gt;Lance Ball&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:lball@redhat.com&#34;&gt;lball@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/Leko&#34;&gt;Leko&lt;/a&gt; - &lt;strong&gt;Shingo Inoue&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:leko.noor@gmail.com&#34;&gt;leko.noor@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/lucamaraschi&#34;&gt;lucamaraschi&lt;/a&gt; - &lt;strong&gt;Luca Maraschi&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:luca.maraschi@gmail.com&#34;&gt;luca.maraschi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/lundibundi&#34;&gt;lundibundi&lt;/a&gt; - &lt;strong&gt;Denys Otrishko&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:shishugi@gmail.com&#34;&gt;shishugi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/lxe&#34;&gt;lxe&lt;/a&gt; - &lt;strong&gt;Aleksey Smolenchuk&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:lxe@lxe.co&#34;&gt;lxe@lxe.co&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/maclover7&#34;&gt;maclover7&lt;/a&gt; - &lt;strong&gt;Jon Moss&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:me@jonathanmoss.me&#34;&gt;me@jonathanmoss.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/mafintosh&#34;&gt;mafintosh&lt;/a&gt; - &lt;strong&gt;Mathias Buus&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:mathiasbuus@gmail.com&#34;&gt;mathiasbuus@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/matthewloring&#34;&gt;matthewloring&lt;/a&gt; - &lt;strong&gt;Matthew Loring&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:mattloring@google.com&#34;&gt;mattloring@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/Mesteery&#34;&gt;Mesteery&lt;/a&gt; - &lt;strong&gt;Mestery&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:mestery@protonmail.com&#34;&gt;mestery@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/micnic&#34;&gt;micnic&lt;/a&gt; - &lt;strong&gt;Nicu Micleușanu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:micnic90@gmail.com&#34;&gt;micnic90@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/mikeal&#34;&gt;mikeal&lt;/a&gt; - &lt;strong&gt;Mikeal Rogers&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:mikeal.rogers@gmail.com&#34;&gt;mikeal.rogers@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/miladfarca&#34;&gt;miladfarca&lt;/a&gt; - &lt;strong&gt;Milad Fa&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:mfarazma@redhat.com&#34;&gt;mfarazma@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/misterdjules&#34;&gt;misterdjules&lt;/a&gt; - &lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:jgilli@netflix.com&#34;&gt;jgilli@netflix.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/mmarchini&#34;&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:oss@mmarchini.me&#34;&gt;oss@mmarchini.me&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/monsanto&#34;&gt;monsanto&lt;/a&gt; - &lt;strong&gt;Christopher Monsanto&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:chris@monsan.to&#34;&gt;chris@monsan.to&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/MoonBall&#34;&gt;MoonBall&lt;/a&gt; - &lt;strong&gt;Chen Gang&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:gangc.cxy@foxmail.com&#34;&gt;gangc.cxy@foxmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/mscdex&#34;&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:mscdex@mscdex.net&#34;&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/MylesBorins&#34;&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:myles.borins@gmail.com&#34;&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/not-an-aardvark&#34;&gt;not-an-aardvark&lt;/a&gt; - &lt;strong&gt;Teddy Katz&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:teddy.katz@gmail.com&#34;&gt;teddy.katz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ofrobots&#34;&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ofrobots@google.com&#34;&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/Olegas&#34;&gt;Olegas&lt;/a&gt; - &lt;strong&gt;Oleg Elifantiev&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:oleg@elifantiev.ru&#34;&gt;oleg@elifantiev.ru&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/orangemocha&#34;&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:orangemocha@nodejs.org&#34;&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/othiym23&#34;&gt;othiym23&lt;/a&gt; - &lt;strong&gt;Forrest L Norvell&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ogd@aoaioxxysz.net&#34;&gt;ogd@aoaioxxysz.net&lt;/a&gt;&amp;gt; (they/them/themself)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/oyyd&#34;&gt;oyyd&lt;/a&gt; - &lt;strong&gt;Ouyang Yadong&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:oyydoibh@gmail.com&#34;&gt;oyydoibh@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/petkaantonov&#34;&gt;petkaantonov&lt;/a&gt; - &lt;strong&gt;Petka Antonov&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:petka_antonov@hotmail.com&#34;&gt;petka_antonov@hotmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/phillipj&#34;&gt;phillipj&lt;/a&gt; - &lt;strong&gt;Phillip Johnsen&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:johphi@gmail.com&#34;&gt;johphi@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/piscisaureus&#34;&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bertbelder@gmail.com&#34;&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/pmq20&#34;&gt;pmq20&lt;/a&gt; - &lt;strong&gt;Minqi Pan&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:pmq2001@gmail.com&#34;&gt;pmq2001@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/PoojaDurgad&#34;&gt;PoojaDurgad&lt;/a&gt; - &lt;strong&gt;Pooja D P&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:Pooja.D.P@ibm.com&#34;&gt;Pooja.D.P@ibm.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/princejwesley&#34;&gt;princejwesley&lt;/a&gt; - &lt;strong&gt;Prince John Wesley&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:princejohnwesley@gmail.com&#34;&gt;princejohnwesley@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/psmarshall&#34;&gt;psmarshall&lt;/a&gt; - &lt;strong&gt;Peter Marshall&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:petermarshall@chromium.org&#34;&gt;petermarshall@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/puzpuzpuz&#34;&gt;puzpuzpuz&lt;/a&gt; - &lt;strong&gt;Andrey Pechkurov&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:apechkurov@gmail.com&#34;&gt;apechkurov@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/RaisinTen&#34;&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:raisinten@gmail.com&#34;&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/refack&#34;&gt;refack&lt;/a&gt; - &lt;strong&gt;Refael Ackermann (רפאל פלחי)&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:refack@gmail.com&#34;&gt;refack@gmail.com&lt;/a&gt;&amp;gt; (he/him/הוא/אתה)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/rexagod&#34;&gt;rexagod&lt;/a&gt; - &lt;strong&gt;Pranshu Srivastava&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rexagod@gmail.com&#34;&gt;rexagod@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/rickyes&#34;&gt;rickyes&lt;/a&gt; - &lt;strong&gt;Ricky Zhou&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:0x19951125@gmail.com&#34;&gt;0x19951125@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/rlidwka&#34;&gt;rlidwka&lt;/a&gt; - &lt;strong&gt;Alex Kocharin&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:alex@kocharin.ru&#34;&gt;alex@kocharin.ru&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/rmg&#34;&gt;rmg&lt;/a&gt; - &lt;strong&gt;Ryan Graham&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:r.m.graham@gmail.com&#34;&gt;r.m.graham@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/robertkowalski&#34;&gt;robertkowalski&lt;/a&gt; - &lt;strong&gt;Robert Kowalski&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rok@kowalski.gd&#34;&gt;rok@kowalski.gd&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/romankl&#34;&gt;romankl&lt;/a&gt; - &lt;strong&gt;Roman Klauke&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:romaaan.git@gmail.com&#34;&gt;romaaan.git@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ronkorving&#34;&gt;ronkorving&lt;/a&gt; - &lt;strong&gt;Ron Korving&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ron@ronkorving.nl&#34;&gt;ron@ronkorving.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/RReverser&#34;&gt;RReverser&lt;/a&gt; - &lt;strong&gt;Ingvar Stepanyan&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:me@rreverser.com&#34;&gt;me@rreverser.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/rubys&#34;&gt;rubys&lt;/a&gt; - &lt;strong&gt;Sam Ruby&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rubys@intertwingly.net&#34;&gt;rubys@intertwingly.net&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/rvagg&#34;&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rod@vagg.org&#34;&gt;rod@vagg.org&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ryzokuken&#34;&gt;ryzokuken&lt;/a&gt; - &lt;strong&gt;Ujjwal Sharma&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ryzokuken@disroot.org&#34;&gt;ryzokuken@disroot.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/saghul&#34;&gt;saghul&lt;/a&gt; - &lt;strong&gt;Saúl Ibarra Corretgé&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:s@saghul.net&#34;&gt;s@saghul.net&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/sam-github&#34;&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:vieuxtech@gmail.com&#34;&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/sebdeckers&#34;&gt;sebdeckers&lt;/a&gt; - &lt;strong&gt;Sebastiaan Deckers&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:sebdeckers83@gmail.com&#34;&gt;sebdeckers83@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/seishun&#34;&gt;seishun&lt;/a&gt; - &lt;strong&gt;Nikolai Vavilov&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:vvnicholas@gmail.com&#34;&gt;vvnicholas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/shigeki&#34;&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ohtsu@ohtsu.org&#34;&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/shisama&#34;&gt;shisama&lt;/a&gt; - &lt;strong&gt;Masashi Hirano&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:shisama07@gmail.com&#34;&gt;shisama07@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/silverwind&#34;&gt;silverwind&lt;/a&gt; - &lt;strong&gt;Roman Reiss&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:me@silverwind.io&#34;&gt;me@silverwind.io&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/starkwang&#34;&gt;starkwang&lt;/a&gt; - &lt;strong&gt;Weijia Wang&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:starkwang@126.com&#34;&gt;starkwang@126.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/stefanmb&#34;&gt;stefanmb&lt;/a&gt; - &lt;strong&gt;Stefan Budeanu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:stefan@budeanu.com&#34;&gt;stefan@budeanu.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/tellnes&#34;&gt;tellnes&lt;/a&gt; - &lt;strong&gt;Christian Tellnes&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:christian@tellnes.no&#34;&gt;christian@tellnes.no&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/thefourtheye&#34;&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:thechargingvolcano@gmail.com&#34;&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/thlorenz&#34;&gt;thlorenz&lt;/a&gt; - &lt;strong&gt;Thorsten Lorenz&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:thlorenz@gmx.de&#34;&gt;thlorenz@gmx.de&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/TimothyGu&#34;&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng &#34;Timothy&#34; Gu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:timothygu99@gmail.com&#34;&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/trevnorris&#34;&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:trev.norris@gmail.com&#34;&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/tunniclm&#34;&gt;tunniclm&lt;/a&gt; - &lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:m.j.tunnicliffe@gmail.com&#34;&gt;m.j.tunnicliffe@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/vdeturckheim&#34;&gt;vdeturckheim&lt;/a&gt; - &lt;strong&gt;Vladimir de Turckheim&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:vlad2t@hotmail.com&#34;&gt;vlad2t@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/vkurchatkin&#34;&gt;vkurchatkin&lt;/a&gt; - &lt;strong&gt;Vladimir Kurchatkin&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:vladimir.kurchatkin@gmail.com&#34;&gt;vladimir.kurchatkin@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/vsemozhetbyt&#34;&gt;vsemozhetbyt&lt;/a&gt; - &lt;strong&gt;Vse Mozhet Byt&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:vsemozhetbyt@gmail.com&#34;&gt;vsemozhetbyt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/watson&#34;&gt;watson&lt;/a&gt; - &lt;strong&gt;Thomas Watson&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:w@tson.dk&#34;&gt;w@tson.dk&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/whitlockjc&#34;&gt;whitlockjc&lt;/a&gt; - &lt;strong&gt;Jeremy Whitlock&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:jwhitlock@apache.org&#34;&gt;jwhitlock@apache.org&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/XadillaX&#34;&gt;XadillaX&lt;/a&gt; - &lt;strong&gt;Khaidi Chu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:i@2333.moe&#34;&gt;i@2333.moe&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/yashLadha&#34;&gt;yashLadha&lt;/a&gt; - &lt;strong&gt;Yash Ladha&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:yash@yashladha.in&#34;&gt;yash@yashladha.in&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/yhwang&#34;&gt;yhwang&lt;/a&gt; - &lt;strong&gt;Yihong Wang&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:yh.wang@ibm.com&#34;&gt;yh.wang@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/yorkie&#34;&gt;yorkie&lt;/a&gt; - &lt;strong&gt;Yorkie Liu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:yorkiefixer@gmail.com&#34;&gt;yorkiefixer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/yosuke-furukawa&#34;&gt;yosuke-furukawa&lt;/a&gt; - &lt;strong&gt;Yosuke Furukawa&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:yosuke.furukawa@gmail.com&#34;&gt;yosuke.furukawa@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;!--lint enable prohibited-strings--&gt; &#xA;&lt;p&gt;Collaborators follow the &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/collaborator-guide.md&#34;&gt;Collaborator Guide&lt;/a&gt; in maintaining the Node.js project.&lt;/p&gt; &#xA;&lt;h3&gt;Triagers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atlowChemi&#34;&gt;atlowChemi&lt;/a&gt; - &lt;strong&gt;Chemi Atlow&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:chemi@atlow.co.il&#34;&gt;chemi@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ayase-252&#34;&gt;Ayase-252&lt;/a&gt; - &lt;strong&gt;Qingyu Deng&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:i@ayase-lab.com&#34;&gt;i@ayase-lab.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bmuenzenmeyer&#34;&gt;bmuenzenmeyer&lt;/a&gt; - &lt;strong&gt;Brian Muenzenmeyer&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:brian.muenzenmeyer@gmail.com&#34;&gt;brian.muenzenmeyer@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CanadaHonk&#34;&gt;CanadaHonk&lt;/a&gt; - &lt;strong&gt;Oliver Medhurst&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:honk@goose.icu&#34;&gt;honk@goose.icu&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/daeyeon&#34;&gt;daeyeon&lt;/a&gt; - &lt;strong&gt;Daeyeon Jeong&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:daeyeon.dev@gmail.com&#34;&gt;daeyeon.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/F3n67u&#34;&gt;F3n67u&lt;/a&gt; - &lt;strong&gt;Feng Yu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:F3n67u@outlook.com&#34;&gt;F3n67u@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/himadriganguly&#34;&gt;himadriganguly&lt;/a&gt; - &lt;strong&gt;Himadri Ganguly&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:himadri.tech@gmail.com&#34;&gt;himadri.tech@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iam-frankqiu&#34;&gt;iam-frankqiu&lt;/a&gt; - &lt;strong&gt;Frank Qiu&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:iam.frankqiu@gmail.com&#34;&gt;iam.frankqiu@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marsonya&#34;&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Akhil Marsonya&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:akhil.marsonya27@gmail.com&#34;&gt;akhil.marsonya27@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/meixg&#34;&gt;meixg&lt;/a&gt; - &lt;strong&gt;Xuguang Mei&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:meixuguang@gmail.com&#34;&gt;meixuguang@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mertcanaltin&#34;&gt;mertcanaltin&lt;/a&gt; - &lt;strong&gt;Mert Can Altin&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:mertgold60@gmail.com&#34;&gt;mertgold60@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Mesteery&#34;&gt;Mesteery&lt;/a&gt; - &lt;strong&gt;Mestery&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:mestery@protonmail.com&#34;&gt;mestery@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PoojaDurgad&#34;&gt;PoojaDurgad&lt;/a&gt; - &lt;strong&gt;Pooja Durgad&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:Pooja.D.P@ibm.com&#34;&gt;Pooja.D.P@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/preveen-stack&#34;&gt;preveen-stack&lt;/a&gt; - &lt;strong&gt;Preveen Padmanabhan&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:wide4head@gmail.com&#34;&gt;wide4head@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/redyetidev&#34;&gt;RedYetiDev&lt;/a&gt; - &lt;strong&gt;Aviv Keller&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:redyetidev@gmail.com&#34;&gt;redyetidev@gmail.com&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VoltrexKeyva&#34;&gt;VoltrexKeyva&lt;/a&gt; - &lt;strong&gt;Mohammed Keyvanzadeh&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:mohammadkeyvanzade94@gmail.com&#34;&gt;mohammadkeyvanzade94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Triagers follow the &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/issues.md#triaging-a-bug-report&#34;&gt;Triage Guide&lt;/a&gt; when responding to new issues.&lt;/p&gt; &#xA;&lt;h3&gt;Release keys&lt;/h3&gt; &#xA;&lt;p&gt;Primary GPG keys for Node.js Releasers (some Releasers sign with subkeys):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bethanyngriggs@gmail.com&#34;&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;4ED778F539E3634C779C87C6D7062848A1AB005C&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bryan@bryanenglish.com&#34;&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; &lt;code&gt;141F07595B7B3FFE74309A937405533BE57C7D57&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:adamzdanielle@gmail.com&#34;&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;74F12602B6F1C4E913FAA37AD3A89613643B6201&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:soyjuanarbol@gmail.com&#34;&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:marcoippolito54@gmail.com&#34;&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;CC68F5A3106FF448322E48ED27F5E38D5B0A215F&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:targos@protonmail.com&#34;&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:myles.borins@gmail.com&#34;&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rafael.nunu@hotmail.com&#34;&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rlau@redhat.com&#34;&gt;rlau@redhat.com&lt;/a&gt;&amp;gt; &lt;code&gt;C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ruyadorno@hotmail.com&#34;&gt;ruyadorno@hotmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;108F52B48DB57BB0CC439B2997B01419BD92F80A&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ulises Gascón&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ulisesgascongonzalez@gmail.com&#34;&gt;ulisesgascongonzalez@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;A363A499291CBBC940DD62E41F10027AF002F8B0&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To import the full set of trusted release keys (including subkeys possibly used to sign releases):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gpg --keyserver hkps://keys.openpgp.org --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C # Beth Griggs&#xA;gpg --keyserver hkps://keys.openpgp.org --recv-keys 141F07595B7B3FFE74309A937405533BE57C7D57 # Bryan English&#xA;gpg --keyserver hkps://keys.openpgp.org --recv-keys 74F12602B6F1C4E913FAA37AD3A89613643B6201 # Danielle Adams&#xA;gpg --keyserver hkps://keys.openpgp.org --recv-keys DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7 # Juan José Arboleda&#xA;gpg --keyserver hkps://keys.openpgp.org --recv-keys CC68F5A3106FF448322E48ED27F5E38D5B0A215F # Marco Ippolito&#xA;gpg --keyserver hkps://keys.openpgp.org --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 # Michaël Zasso&#xA;gpg --keyserver hkps://keys.openpgp.org --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 # Myles Borins&#xA;gpg --keyserver hkps://keys.openpgp.org --recv-keys 890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4 # Rafael Gonzaga&#xA;gpg --keyserver hkps://keys.openpgp.org --recv-keys C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C # Richard Lau&#xA;gpg --keyserver hkps://keys.openpgp.org --recv-keys 108F52B48DB57BB0CC439B2997B01419BD92F80A # Ruy Adorno&#xA;gpg --keyserver hkps://keys.openpgp.org --recv-keys A363A499291CBBC940DD62E41F10027AF002F8B0 # Ulises Gascón&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/#verifying-binaries&#34;&gt;Verifying binaries&lt;/a&gt; for how to use these keys to verify a downloaded file.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Other keys used to sign some previous releases&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:christopher.s.dickinson@gmail.com&#34;&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;9554F04D7259F04124DE6B476D5A82AC7E37093B&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:cjihrig@gmail.com&#34;&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;94AE36675C464D64BAFA68DD7434390BDBE9B9C5&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:adamzdanielle@gmail.com&#34;&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;1C050899334244A8AF75E53792EF661D867B9DFA&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:evanlucas@me.com&#34;&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; &lt;code&gt;B9AE9905FFD7803F25714661B63B535A4C206CA9&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:gibfahn@gmail.com&#34;&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;77984A986EBC2AA786BC0F66B01FBB92821C587A&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:i@izs.me&#34;&gt;i@izs.me&lt;/a&gt;&amp;gt; &lt;code&gt;93C7E9E91B49E432C2F75674B0A78B0A6C481CF6&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:me@italoacasas.com&#34;&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; &lt;code&gt;56730D5401028683275BD23C23EFEFE93C4CFFFE&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:jasnell@keybase.io&#34;&gt;jasnell@keybase.io&lt;/a&gt;&amp;gt; &lt;code&gt;71DCFD284A79C3B38668286BC97EC7A07EDE3FC1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:fishrock@keybase.io&#34;&gt;fishrock@keybase.io&lt;/a&gt;&amp;gt; &lt;code&gt;FD3A5288F042B6850C66B31F09FE44734EB7990E&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:soyjuanarbol@gmail.com&#34;&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;61FC681DFB92A079F1685E77973F295594EC4689&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:jgilli@fastmail.fm&#34;&gt;jgilli@fastmail.fm&lt;/a&gt;&amp;gt; &lt;code&gt;114F43EE0176B71C7BC219DD50A3051F888C628D&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rod@vagg.org&#34;&gt;rod@vagg.org&lt;/a&gt;&amp;gt; &lt;code&gt;DD8F2338BAE7501E3DD5AC78C273792F7D83545D&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:ruben@bridgewater.de&#34;&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; &lt;code&gt;A48C2BEE680E841632CD4E44F07496B3EB3C1762&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:shelley.vohr@gmail.com&#34;&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;B9E2F5981AA6E0CD28160D9FF13993A75599653C&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Timothy J Fontaine&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:tjfontaine@gmail.com&#34;&gt;tjfontaine@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;7937DFD2AB06298B2293C3187D33FF9D0246406D&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Security release stewards&lt;/h3&gt; &#xA;&lt;p&gt;When possible, the commitment to take slots in the security release steward rotation is made by companies in order to ensure individuals who act as security stewards have the support and recognition from their employer to be able to prioritize security releases. Security release stewards manage security releases on a rotation basis as outlined in the &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/security-release-process.md&#34;&gt;security release process&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Datadog &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/bengl&#34;&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:bryan@bryanenglish.com&#34;&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;NodeSource &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/juanarbol&#34;&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:soyjuanarbol@gmail.com&#34;&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/RafaelGSS&#34;&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:rafael.nunu@hotmail.com&#34;&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Platformatic &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mcollina&#34;&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:matteo.collina@gmail.com&#34;&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Red Hat and IBM &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/joesepi&#34;&gt;joesepi&lt;/a&gt; - &lt;strong&gt;Joe Sepi&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:joesepi@ibm.com&#34;&gt;joesepi@ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mhdawson&#34;&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href=&#34;mailto:midawson@redhat.com&#34;&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Node.js is available under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT license&lt;/a&gt;. Node.js also includes external libraries that are available under a variety of licenses. See &lt;a href=&#34;https://github.com/nodejs/node/raw/HEAD/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</summary>
  </entry>
</feed>