<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub JavaScript Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-01T01:54:45Z</updated>
  <subtitle>Monthly Trending of JavaScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stdlib-js/stdlib</title>
    <updated>2024-12-01T01:54:45Z</updated>
    <id>tag:github.com,2024-12-01:/stdlib-js/stdlib</id>
    <link href="https://github.com/stdlib-js/stdlib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;âœ¨ Standard library for JavaScript and Node.js. âœ¨&lt;/p&gt;&lt;hr&gt;&lt;section class=&#34;announcement&#34;&gt; &#xA;&lt;/section&gt; &#xA;&lt;!-- /.announcement --&gt; &#xA;&lt;!-- Section to include assets such as the project logo, etc. Make sure to keep an empty line after the `section` element and another before the `/section` close. --&gt; &#xA;&lt;section class=&#34;banner&#34;&gt; &#xA; &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;  &lt;br&gt; &#xA;  &lt;br&gt; &#xA;  &lt;a href=&#34;https://stdlib.io/&#34;&gt;&lt;/a&gt; &#xA;  &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@9f7d30f089ecc458a8b836a75afab75caf5c0b36/docs/assets/logo_banner.svg?sanitize=true&#34; alt=&#34;stdlib logo&#34;&gt;  &#xA;  &lt;br&gt; &#xA;  &lt;br&gt; &#xA;  &lt;br&gt; &#xA;  &lt;br&gt; &#xA; &lt;/div&gt; &#xA;&lt;/section&gt; &#xA;&lt;!-- /.banner --&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- Section to include introductory text. Make sure to keep an empty line after the intro `section` element and another before the `/section` close. --&gt; &#xA;&lt;section class=&#34;intro&#34;&gt; &#xA; &lt;p&gt;We believe in a future in which the web is a preferred environment for numerical computation. To help realize this future, we&#39;ve built stdlib.&lt;/p&gt; &#xA; &lt;p&gt;stdlib (&lt;a href=&#34;https://en.wikipedia.org/wiki/Help:IPA/English&#34;&gt;/ËˆstÃ¦ndÉ™rd lÉªb/&lt;/a&gt; &#34;standard lib&#34;) is a standard library with an emphasis on numerical and scientific computation, written in JavaScript (and C) for execution in browsers and in Node.js. The library provides a collection of robust, high performance libraries for mathematics, statistics, data processing, streams, and more and includes many of the utilities you would expect from a standard library.&lt;/p&gt; &#xA; &lt;p&gt;What sets stdlib apart is its fully decomposable architecture, which allows you to swap out and mix and match APIs and functionality to cater to your exact preferences and use cases.&lt;/p&gt; &#xA; &lt;p&gt;When you use stdlib, you can be confident that you are using the most thorough, rigorous, well-written, studied, documented, tested, measured, and high-quality code available.&lt;/p&gt; &#xA; &lt;p&gt;Want to join us in bringing numerical computing to the web? &lt;strong&gt;Start by starring the project.&lt;/strong&gt; &lt;span&gt;ðŸŒŸ&lt;/span&gt;&lt;/p&gt; &#xA; &lt;p&gt;Explore this GitHub repository for stdlib&#39;s source code and documentation. For guidance on developing stdlib, refer to the &lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/docs/development.md&#34;&gt;development guide&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Thank you for being a part of our community! Your support is invaluable to us!&lt;/p&gt; &#xA; &lt;h2&gt;Resources&lt;/h2&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#installation&#34;&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://stdlib.io&#34;&gt;&lt;strong&gt;Homepage&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://stdlib.io/docs/api&#34;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib&#34;&gt;&lt;strong&gt;Source code&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://codecov.io/github/stdlib-js/stdlib/branch/develop&#34;&gt;&lt;strong&gt;Code coverage&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/FAQ.md&#34;&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;External Resources&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://opencollective.com/stdlib&#34;&gt;&lt;strong&gt;Open Collective&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://twitter.com/stdlibjs&#34;&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://gitter.im/stdlib-js/stdlib&#34;&gt;&lt;strong&gt;Gitter&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h2&gt;Features&lt;/h2&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;150+ &lt;a href=&#34;https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/math/base/special&#34;&gt;special math functions&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@203839353bc74297fe641207270f7917d2bda560/docs/assets/readme/base_special_math.png&#34; alt=&#34;Demo showcasing special math functions&#34;&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;35+ &lt;a href=&#34;https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/stats/base/dists&#34;&gt;probability distributions&lt;/a&gt;, with support for evaluating probability density functions (PDFs), cumulative distribution functions (CDFs), quantiles, moments, and more.&lt;/p&gt; &#xA;   &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@e13885087939c064c69aa43ee80ea52710de5591/docs/assets/readme/base_dists.png&#34; alt=&#34;Demo showcasing probability distributions&#34;&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;40+ &lt;a href=&#34;https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/random/base&#34;&gt;seedable pseudorandom number generators&lt;/a&gt; (PRNGs).&lt;/p&gt; &#xA;   &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@83dcd0fad98883320a8b1efc801b2fc1ed2a003d/docs/assets/readme/base_prngs.png&#34; alt=&#34;Demo showcasing PRNGs&#34;&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;200+ general &lt;a href=&#34;https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/utils&#34;&gt;utilities&lt;/a&gt; for data transformation, functional programming, and asynchronous control flow.&lt;/p&gt; &#xA;   &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@e6eeea31e49d6db1b6f57ae59d2988d4b427e285/docs/assets/readme/utils.png&#34; alt=&#34;Demo showcasing general utilities&#34;&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;200+ &lt;a href=&#34;https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/assert&#34;&gt;assertion utilities&lt;/a&gt; for data validation and feature detection.&lt;/p&gt; &#xA;   &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@6970c8b4eb546a10712734d225c15863db9b2c92/docs/assets/readme/assert.png&#34; alt=&#34;Demo showcasing assertion utilities&#34;&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;50+ &lt;a href=&#34;https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/datasets&#34;&gt;sample datasets&lt;/a&gt; for testing and development.&lt;/p&gt; &#xA;   &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@f71a38e62247e31dc47d248f6f1b3e434abeb971/docs/assets/readme/datasets.png&#34; alt=&#34;Demo showcasing sample datasets&#34;&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;A &lt;a href=&#34;https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/plot/ctor&#34;&gt;plot API&lt;/a&gt; for data visualization and exploratory data analysis.&lt;/p&gt; &#xA;   &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@39d75174b24ea2a84828d9624643776a164478e4/docs/assets/readme/plot.png&#34; alt=&#34;Demo showcasing plot API&#34;&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Native add-ons for interfacing with BLAS libraries, with pure JavaScript fallbacks.&lt;/p&gt; &#xA;   &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@efede6af3ef957da08838903b0558441263adf85/docs/assets/readme/base_blas.png&#34; alt=&#34;Demo showcasing BLAS APIs&#34;&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;A &lt;a href=&#34;https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/bench/harness&#34;&gt;benchmark framework&lt;/a&gt; supporting TAP.&lt;/p&gt; &#xA;   &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@4833049f8d1895585bd51ec6fa97b8ca0d37c6fb/docs/assets/readme/benchmark.gif&#34; alt=&#34;Demo showcasing benchmark framework&#34;&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;REPL environment with integrated help and examples.&lt;/p&gt; &#xA;   &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@3864ae6f86bbc215956c0e667d82d49a6eaca780/docs/assets/readme/repl.gif&#34; alt=&#34;Demo showcasing REPL environment&#34;&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Can be bundled using &lt;a href=&#34;https://github.com/substack/node-browserify&#34;&gt;Browserify&lt;/a&gt;, &lt;a href=&#34;https://webpack.js.org/&#34;&gt;Webpack&lt;/a&gt;, and other bundlers for use in web browsers.&lt;/p&gt; &#xA;   &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@e54894a93697653dda22d11cd0aec1ccb292b7b8/docs/assets/readme/bundled.png&#34; alt=&#34;Demo showcasing browser support&#34;&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Every function is accompanied by &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; declaration files, ensuring type safety and facilitating intelligent code completion in IDEs.&lt;/p&gt; &#xA;   &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@f5f1f915a7178d9bc76a95d34afd799e6092ec3a/docs/assets/readme/typescript.png&#34; alt=&#34;Demo showcasing TypeScript declaration files&#34;&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;hr&gt; &#xA; &lt;h2&gt;Installation&lt;/h2&gt; &#xA; &lt;p&gt;To accommodate various use cases, stdlib can be used in multiple ways. The preferred method of use depends on your individual use case. We&#39;ve provided some user stories to help you identify the best approach. ðŸ˜ƒ&lt;/p&gt; &#xA; &lt;p&gt;While this project&#39;s installation instructions defaults to using &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt; for package management, installation via other package managers, such as &lt;a href=&#34;https://yarnpkg.com/&#34;&gt;yarn&lt;/a&gt;, should be a matter of simply swapping out &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt; commands with those of the relevant package manager.&lt;/p&gt; &#xA; &lt;h3&gt;User Stories&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;I want to perform &lt;strong&gt;data analysis&lt;/strong&gt; and &lt;strong&gt;data science&lt;/strong&gt; tasks in JavaScript and Node.js, similar to how I might use Python, Julia, R, and MATLAB.&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Install the entire project as a &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_command_line_utility&#34;&gt;command-line utility&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;I am building a &lt;strong&gt;web application&lt;/strong&gt;.&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;I plan on using &lt;a href=&#34;https://github.com/substack/node-browserify&#34;&gt;Browserify&lt;/a&gt;, &lt;a href=&#34;https://webpack.js.org/&#34;&gt;Webpack&lt;/a&gt;, and other bundlers for use in web browsers.&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Install &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_individual_packages&#34;&gt;individual packages&lt;/a&gt;. Installing the entire project is likely unnecessary and will lead to slower installation times.&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;I would like to &lt;strong&gt;vendor&lt;/strong&gt; a custom bundle containing various stdlib functionality.&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Follow the steps for creating &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_custom_bundles&#34;&gt;custom bundles&lt;/a&gt;.&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;I would like to include stdlib functionality by just using a &lt;code&gt;script&lt;/code&gt; tag.&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;I would like to use ES Modules.&lt;/p&gt; &#xA;       &lt;ul&gt; &#xA;        &lt;li&gt;Use an individual package&#39;s ES Module &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_env_builds_esm&#34;&gt;build&lt;/a&gt;.&lt;/li&gt; &#xA;       &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;I would like to use a pre-built bundle (possibly via a CDN, such as &lt;a href=&#34;https://unpkg.com/#/&#34;&gt;unpkg&lt;/a&gt; or &lt;a href=&#34;https://www.jsdelivr.com/&#34;&gt;jsDelivr&lt;/a&gt;).&lt;/p&gt; &#xA;       &lt;ul&gt; &#xA;        &lt;li&gt;Install (or consume via a CDN) an individual package&#39;s pre-built UMD &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_env_builds_umd&#34;&gt;browser bundle&lt;/a&gt;.&lt;/li&gt; &#xA;       &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;I am interested in using a substantial amount of functionality found in a top-level stdlib namespace and don&#39;t want to separately install hundreds of individual packages (e.g., if building an on-line calculator application and wanting all of stdlib&#39;s math functionality).&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Install one or more top-level &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_namespaces&#34;&gt;namespaces&lt;/a&gt;. Installing the entire project is likely unnecessary and will lead to slower installation times. Installing a top-level namespace is likely to mean installing functionality which will never be used; however, installing a top-level namespace is likely to be easier and less time-consuming than installing many individual packages separately.&lt;/p&gt; &lt;p&gt;When bundling, installing a top-level namespace should not be a concern, as individual functionality can still be independently required/imported. Project installation times may, however, be somewhat slower.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;I am building a &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt; &lt;strong&gt;server application&lt;/strong&gt;.&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;I am interested in using various functionality found in stdlib.&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Install &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_individual_packages&#34;&gt;individual packages&lt;/a&gt;. Installing the entire project is likely unnecessary and will lead to slower installation times.&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;I would like to &lt;strong&gt;vendor&lt;/strong&gt; stdlib functionality and avoid dependency trees.&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Install individual package UMD &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_env_builds_nodejs&#34;&gt;bundles&lt;/a&gt;.&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;I am interested in using a &lt;em&gt;substantial&lt;/em&gt; amount of functionality found in a top-level stdlib namespace and don&#39;t want to separately install hundreds of individual packages.&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Install one or more top-level &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_namespaces&#34;&gt;namespaces&lt;/a&gt;. Installing the entire project is likely unnecessary and will lead to slower installation times. Installing a top-level namespace is likely to mean installing functionality which will never be used; however, installing a top-level namespace is likely to be easier and less time-consuming than installing many individual packages separately.&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;I am using &lt;strong&gt;Deno&lt;/strong&gt;.&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Import &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_env_builds_deno&#34;&gt;individual packages&lt;/a&gt; using pre-built Deno builds.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;I would like to use stdlib functionality in an &lt;a href=&#34;https://observablehq.com/&#34;&gt;Observable&lt;/a&gt; notebook.&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Consume a pre-built &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_env_builds_umd&#34;&gt;browser bundles&lt;/a&gt; via a CDN, such as &lt;a href=&#34;https://unpkg.com/#/&#34;&gt;unpkg&lt;/a&gt; or &lt;a href=&#34;https://www.jsdelivr.com/&#34;&gt;jsDelivr&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;I want to hack at stdlib, possibly even creating &lt;strong&gt;customized&lt;/strong&gt; builds to link to platform-specific native libraries (such as Intel&#39;s MKL or some other numerical library).&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Install the project as a &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_system_library&#34;&gt;system library&lt;/a&gt; by cloning this repository and following the &lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/docs/development.md&#34;&gt;installation&lt;/a&gt; instructions as described in the &lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/docs/development.md&#34;&gt;development guide&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;a name=&#34;install_complete_library&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Complete Library&lt;/h3&gt; &#xA; &lt;p&gt;To install the entire project as a library or application dependency,&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @stdlib/stdlib&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Once installed, stdlib packages can be individually required/imported to minimize load times and decrease bundle sizes. For example, to use &lt;code&gt;require&lt;/code&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var ndarray = require( &#39;@stdlib/ndarray/array&#39; );&#xA;&#xA;var arr = ndarray( [ [ 1, 2 ], [ 3, 4 ] ] );&#xA;// returns &amp;lt;ndarray&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;and to use &lt;code&gt;import&lt;/code&gt;&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import ndarray from &#39;@stdlib/ndarray/array&#39;;&#xA;&#xA;var arr = ndarray( [ [ 1, 2 ], [ 3, 4 ] ] );&#xA;// returns &amp;lt;ndarray&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a name=&#34;install_individual_packages&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Individual Packages&lt;/h3&gt; &#xA; &lt;p&gt;stdlib is designed to allow decomposition of the main project into individual packages which can be independently consumed. Accordingly, users of the project can avoid installing all project functionality and only install the exact functionality they need.&lt;/p&gt; &#xA; &lt;p&gt;To install individual packages, replace forward slashes &lt;code&gt;/&lt;/code&gt; after &lt;code&gt;@stdlib/&lt;/code&gt; with hyphens &lt;code&gt;-&lt;/code&gt;. For example,&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @stdlib/ndarray-array&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Once installed, individual packages can be required/imported. For example, to use &lt;code&gt;require&lt;/code&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var ndarray = require( &#39;@stdlib/ndarray-array&#39; );&#xA;&#xA;var arr = ndarray( [ [ 1, 2 ], [ 3, 4 ] ] );&#xA;// returns &amp;lt;ndarray&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;and to use &lt;code&gt;import&lt;/code&gt;&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import ndarray from &#39;@stdlib/ndarray-array&#39;;&#xA;&#xA;var arr = ndarray( [ [ 1, 2 ], [ 3, 4 ] ] );&#xA;// returns &amp;lt;ndarray&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a name=&#34;install_namespaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Namespaces&lt;/h3&gt; &#xA; &lt;p&gt;stdlib is comprised of various top-level namespaces (i.e., collections of related functionality united by common themes). For example, to install all math functionality found in the top-level &lt;code&gt;math&lt;/code&gt; namespace,&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @stdlib/math&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Once installed, packages within a top-level namespace can be individually required/imported to minimize load times and decrease bundle sizes. For example, to use &lt;code&gt;require&lt;/code&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var sin = require( &#39;@stdlib/math/base/special/sin&#39; );&#xA;&#xA;var v = sin( 3.14 );&#xA;// returns &amp;lt;number&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;and to use &lt;code&gt;import&lt;/code&gt;&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import sin from &#39;@stdlib/math/base/special/sin&#39;;&#xA;&#xA;var v = sin( 3.14 );&#xA;// returns &amp;lt;number&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: installing nested namespaces found within top-level namespaces (e.g., &lt;code&gt;math/base&lt;/code&gt;) is &lt;strong&gt;not&lt;/strong&gt; supported. Consider installing individual packages or the relevant top-level namespace.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a name=&#34;install_command_line_utility&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Command-line Utility&lt;/h3&gt; &#xA; &lt;p&gt;To install globally for use as a command-line utility and/or use the &lt;a href=&#34;https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/repl&#34;&gt;REPL&lt;/a&gt;,&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install -g @stdlib/stdlib&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;which will expose the &lt;code&gt;stdlib&lt;/code&gt; command. For example, to see available sub-commands&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ stdlib help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;and to run the &lt;a href=&#34;https://github.com/stdlib-js/stdlib/tree/develop/lib/node_modules/%40stdlib/repl&#34;&gt;REPL&lt;/a&gt;&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ stdlib repl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a name=&#34;install_env_builds&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Environment Builds&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a name=&#34;install_env_builds_esm&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h4&gt;ES Modules&lt;/h4&gt; &#xA; &lt;p&gt;To use ES Modules via a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag, use &lt;strong&gt;ES Module builds&lt;/strong&gt; available in each package&#39;s repository via a dedicated &lt;code&gt;esm&lt;/code&gt; branch (e.g., see the &lt;a href=&#34;https://github.com/stdlib-js/math-base-special-erf/tree/esm&#34;&gt;&lt;code&gt;esm&lt;/code&gt;&lt;/a&gt; branch for &lt;a href=&#34;https://github.com/stdlib-js/math-base-special-erf/tree/esm&#34;&gt;&lt;code&gt;@stdlib/math-base-special-erf&lt;/code&gt;&lt;/a&gt;). For example,&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&#34;module&#34;&amp;gt;&#xA;import linspace from &#39;https://cdn.jsdelivr.net/gh/stdlib-js/array-base-linspace@esm/index.mjs&#39;;&#xA;import erf from &#39;https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-erf@esm/index.mjs&#39;;&#xA;&#xA;const x = linspace( -10.0, 10.0, 100 );&#xA;&#xA;for ( let i = 0; i &amp;lt; x.length; i++ ) {&#xA;    console.log( &#39;x: %d, erf(x): %d&#39;, x[ i ], erf( x[ i ] ) );&#xA;}&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a name=&#34;install_env_builds_deno&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h4&gt;Deno&lt;/h4&gt; &#xA; &lt;p&gt;To use individual packages in Deno, use &lt;strong&gt;Deno builds&lt;/strong&gt; available in each package&#39;s repository via a dedicated &lt;code&gt;deno&lt;/code&gt; branch (e.g., see the &lt;a href=&#34;https://github.com/stdlib-js/ndarray-array/tree/deno&#34;&gt;&lt;code&gt;deno&lt;/code&gt;&lt;/a&gt; branch for &lt;a href=&#34;https://github.com/stdlib-js/ndarray-array/tree/deno&#34;&gt;&lt;code&gt;@stdlib/ndarray-array&lt;/code&gt;&lt;/a&gt;). For example,&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import ndarray from &#39;https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-array@deno/mod.js&#39;;&#xA;&#xA;var arr = ndarray( [ [ 1, 2 ], [ 3, 4 ] ] );&#xA;// returns &amp;lt;ndarray&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a name=&#34;install_env_builds_jquery&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h4&gt;jQuery-like Bundle&lt;/h4&gt; &#xA; &lt;p&gt;For those wanting a jQuery-like bundle, one can use pre-built distributable UMD bundles for use in browser environments or as shared (&#34;vendored&#34;) libraries in server environments available in each package&#39;s repository via a dedicated &lt;code&gt;umd&lt;/code&gt; branch. See sections &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_env_builds_umd&#34;&gt;UMD&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/#install_env_builds_nodejs&#34;&gt;Node.js&lt;/a&gt; for more details.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a name=&#34;install_env_builds_umd&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h4&gt;UMD&lt;/h4&gt; &#xA; &lt;p&gt;To use UMD bundles either via a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag or in &lt;a href=&#34;https://observablehq.com/&#34;&gt;Observable&lt;/a&gt;, use UMD &lt;strong&gt;browser builds&lt;/strong&gt; available in each package&#39;s repository via a dedicated &lt;code&gt;umd&lt;/code&gt; branch (e.g., see the &lt;a href=&#34;https://github.com/stdlib-js/math-base-special-erf/tree/umd&#34;&gt;&lt;code&gt;umd&lt;/code&gt;&lt;/a&gt; branch for &lt;a href=&#34;https://github.com/stdlib-js/math-base-special-erf/tree/umd&#34;&gt;&lt;code&gt;@stdlib/math-base-special-erf&lt;/code&gt;&lt;/a&gt;). For example,&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&#34;text/javascript&#34; src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/array-base-linspace@umd/browser.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script type=&#34;text/javascript&#34; src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-erf@umd/browser.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script type=&#34;text/javascript&#34;&amp;gt;&#xA;(function () {&#xA;&#xA;var x = linspace( -10.0, 10.0, 100 );&#xA;&#xA;for ( var i = 0; i &amp;lt; x.length; i++ ) {&#xA;    console.log( &#39;x: %d, erf(x): %d&#39;, x[ i ], erf( x[ i ] ) );&#xA;}&#xA;&#xA;})();&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a name=&#34;install_env_builds_nodejs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h4&gt;Node.js&lt;/h4&gt; &#xA; &lt;p&gt;To &lt;strong&gt;vendor&lt;/strong&gt; stdlib functionality and avoid installing dependency trees, use UMD &lt;strong&gt;server builds&lt;/strong&gt; available in each package&#39;s repository via a dedicated &lt;code&gt;umd&lt;/code&gt; branch (e.g., see the &lt;a href=&#34;https://github.com/stdlib-js/math-base-special-erf/tree/umd&#34;&gt;&lt;code&gt;umd&lt;/code&gt;&lt;/a&gt; branch for &lt;a href=&#34;https://github.com/stdlib-js/math-base-special-erf/tree/umd&#34;&gt;&lt;code&gt;@stdlib/math-base-special-erf&lt;/code&gt;&lt;/a&gt;). For example,&lt;/p&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var linspace = require( &#39;/path/to/vendor/umd/@stdlib/array-base-linspace&#39; );&#xA;var erf = require( &#39;/path/to/vendor/umd/@stdlib/math-base-special-erf&#39; );&#xA;&#xA;var x = linspace( -10.0, 10.0, 100 );&#xA;&#xA;for ( var i = 0; i &amp;lt; x.length; i++ ) {&#xA;    console.log( &#39;x: %d, erf(x): %d&#39;, x[ i ], erf( x[ i ] ) );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a name=&#34;install_custom_bundles&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Custom Bundles&lt;/h3&gt; &#xA; &lt;p&gt;To create a custom bundle based on project needs,&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;follow the &lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/docs/development.md&#34;&gt;download&lt;/a&gt;, &lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/docs/development.md&#34;&gt;configuration&lt;/a&gt;, and &lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/docs/development.md&#34;&gt;installation&lt;/a&gt; instructions as described in the &lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/docs/development.md&#34;&gt;development guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;navigate to the local installation directory.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;run the following command to print help documentation for providing a list of stdlib package names to bundle&lt;/p&gt; &#xA;   &lt;!-- run-disable --&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ NODE_PATH=./lib/node_modules node ./bin/cli bundle-pkg-list -- -h&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;modify and run the above command with the list of packages to bundle&lt;/p&gt; &#xA;   &lt;!-- run-disable --&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ NODE_PATH=./lib/node_modules node ./bin/cli bundle-pkg-list -- &amp;lt;pkg&amp;gt; &amp;lt;pkg&amp;gt; &amp;lt;pkg&amp;gt; ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;!-- FIXME: the following is not possible atm as we don&#39;t publish `@stdlib/_tools` which is needed in order for the command-line utility to work!&#xA;&#xA;Alternatively, install stdlib as a command-line utility (as described above) and run the following command&#xA;--&gt; &#xA; &lt;!-- run-disable --&gt; &#xA; &lt;!--&#xA;```bash&#xA;$ stdlib bundle-pkg-list -- &lt;pkg&gt; &lt;pkg&gt; &lt;pkg&gt; ...&#xA;```&#xA;--&gt; &#xA; &lt;p&gt;Upon generating a bundle, the bundle can be loaded via a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag as described above for pre-built distributable UMD bundles.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a name=&#34;install_system_library&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;System Library&lt;/h3&gt; &#xA; &lt;p&gt;To install as a system library (e.g., for the purposes of creating custom builds), follow the &lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/docs/development.md&#34;&gt;download&lt;/a&gt;, &lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/docs/development.md&#34;&gt;configuration&lt;/a&gt;, and &lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/docs/development.md&#34;&gt;installation&lt;/a&gt; instructions as described in the &lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/docs/development.md&#34;&gt;development guide&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA; &lt;p&gt;Installing and running stdlib for use in &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt; &lt;strong&gt;requires&lt;/strong&gt; the following prerequisites:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt;: JavaScript runtime (version &lt;code&gt;&amp;gt;= 0.10&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt;: package manager (version &lt;code&gt;&amp;gt; 2.7.0&lt;/code&gt;; if Node &lt;code&gt;&amp;lt; 1.0.0&lt;/code&gt;, version &lt;code&gt;&amp;gt; 2.7.0&lt;/code&gt; and &lt;code&gt;&amp;lt; 4.0.0&lt;/code&gt;; if Node &lt;code&gt;&amp;lt;= 10.x.x&lt;/code&gt;, version &lt;code&gt;&amp;gt; 2.7.0&lt;/code&gt; and &lt;code&gt;&amp;lt; 6.0.0&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Most functionality in stdlib is implemented in JavaScript and no further prerequisites are required to use stdlib (i.e., you can safely avoid installing any additional prerequisites); however, some implementations try to capture performance benefits by using &lt;a href=&#34;https://nodejs.org/api/addons.html&#34;&gt;native bindings&lt;/a&gt; and/or &lt;a href=&#34;https://webassembly.org/&#34;&gt;WebAssembly&lt;/a&gt;. While &lt;strong&gt;not&lt;/strong&gt; required to run stdlib, as &lt;strong&gt;every&lt;/strong&gt; stdlib implementation has a JavaScript fallback, the following dependencies are &lt;strong&gt;required&lt;/strong&gt; for building native add-ons, including linking to BLAS and LAPACK libraries:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/make/&#34;&gt;GNU make&lt;/a&gt;: development utility and task runner&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/bash/&#34;&gt;GNU bash&lt;/a&gt;: an sh-compatible shell&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;http://gcc.gnu.org/&#34;&gt;gcc &amp;amp; g++&lt;/a&gt; or &lt;a href=&#34;https://clang.llvm.org/&#34;&gt;Clang&lt;/a&gt;: C/C++ compilation and linking (g++ version &lt;code&gt;&amp;gt;= 4.8&lt;/code&gt;; clang version &lt;code&gt;&amp;gt;= 3.5&lt;/code&gt;, Xcode version &lt;code&gt;&amp;gt;=8.3.1&lt;/code&gt; on OS X)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://gcc.gnu.org/fortran/&#34;&gt;gfortran&lt;/a&gt;: Fortran compilation and linking (version &lt;code&gt;&amp;gt;= 4.8&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;While &lt;strong&gt;not&lt;/strong&gt; required to run stdlib, the following dependencies are &lt;strong&gt;required&lt;/strong&gt; for automatically downloading external libraries:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://curl.se/&#34;&gt;curl&lt;/a&gt;, &lt;a href=&#34;https://www.gnu.org/software/wget/&#34;&gt;wget&lt;/a&gt;, or &lt;a href=&#34;https://www.freebsd.org/cgi/man.cgi?fetch%281%29&#34;&gt;fetch&lt;/a&gt; (FreeBSD): utilities for downloading remote resources&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;The following external libraries can be automatically downloaded and compiled from source using &lt;code&gt;make&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/xianyi/OpenBLAS&#34;&gt;OpenBLAS&lt;/a&gt;: optimized BLAS library&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.electronjs.org/&#34;&gt;Electron&lt;/a&gt;: framework for cross-platform desktop applications&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;hr&gt; &#xA; &lt;h2&gt;Contributing&lt;/h2&gt; &#xA; &lt;p&gt;First time contributor?&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;See the &lt;a href=&#34;https://github.com/stdlib-js/stdlib/raw/develop/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Already an expert?&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Fork the repository.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Clone the forked repository&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone --depth=1 https://github.com/&amp;lt;username&amp;gt;/stdlib.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;where &lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt; is your GitHub username.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Navigate to the &lt;code&gt;stdlib&lt;/code&gt; directory&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd stdlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Install dependencies&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make install-node-modules&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Initialize your stdlib development environment&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make init&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;!-- Project sponsors. If sponsors are included, add a horizontal rule *before* the section. Make sure to keep an empty line after the `section` element and another before the `/section` close. --&gt; &#xA; &lt;hr&gt; &#xA; &lt;section class=&#34;sponsors&#34;&gt; &#xA;  &lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;  &lt;p&gt;stdlib development is generously supported by the following sponsors:&lt;/p&gt; &#xA;  &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;   &lt;br&gt; &#xA;   &lt;a href=&#34;https://labs.quansight.org/&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@2719e1d3ecab2cc29985bca35fd33594e65adb55/docs/assets/sponsors/quansight_labs_logo.png&#34; alt=&#34;Quansight Labs&#34;&gt; &lt;/a&gt; &#xA;   &lt;br&gt; &#xA;   &lt;br&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;p&gt;Are you interested in supporting stdlib? If so, join our &lt;a href=&#34;https://opencollective.com/stdlib&#34;&gt;Open Collective&lt;/a&gt;!&lt;/p&gt; &#xA; &lt;/section&gt; &#xA; &lt;!-- /.sponsors --&gt; &#xA; &lt;!-- Project users. If users are included, add a horizontal rule *before* the section. Make sure to keep an empty line after the `section` element and another before the `/section` close. --&gt; &#xA; &lt;hr&gt; &#xA; &lt;section class=&#34;users&#34;&gt; &#xA;  &lt;h2&gt;Users&lt;/h2&gt; &#xA;  &lt;p&gt;The following organizations and key stakeholders trust and rely on stdlib:&lt;/p&gt; &#xA;  &lt;div class=&#34;image&#34; align=&#34;center&#34;&gt; &#xA;   &lt;br&gt; &#xA;   &lt;a href=&#34;https://www.cmu.edu/&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@1c8c7dbc9d081eeb13e16c62764f27a65c6553f8/docs/assets/misc/cmu_logo.png&#34; alt=&#34;Carnegie Mellon University&#34;&gt; &lt;/a&gt; &#xA;   &lt;br&gt; &#xA;   &lt;br&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;p&gt;Does your organization use stdlib? If so, we&#39;d love to hear from you!&lt;/p&gt; &#xA; &lt;/section&gt; &#xA; &lt;!-- /.users --&gt; &#xA; &lt;hr&gt; &#xA; &lt;h2&gt;Governance&lt;/h2&gt; &#xA; &lt;p&gt;For information about the governance of the stdlib project, see &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/GOVERNANCE.md&#34;&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;License&lt;/h2&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/stdlib-js/stdlib/develop/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Copyright&lt;/h2&gt; &#xA; &lt;p&gt;Copyright Â© 2016-2024. The Stdlib &lt;a href=&#34;https://github.com/stdlib-js/stdlib/graphs/contributors&#34;&gt;Authors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/section&gt; &#xA;&lt;!-- /.intro --&gt; &#xA;&lt;!-- Project badges. If badges are included, add a horizontal rule *before* the section. Make sure to keep an empty line after the `section` element and another before the `/section` close. --&gt; &#xA;&lt;hr&gt; &#xA;&lt;section class=&#34;badges&#34;&gt; &#xA; &lt;h2&gt;Status&lt;/h2&gt; &#xA; &lt;h4&gt;Version&lt;/h4&gt; &#xA; &lt;!-- lint disable no-paragraph-content-indent --&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/stdlib-js/stdlib/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/stdlib-js/stdlib.svg?sanitize=true&#34; alt=&#34;git tag&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmjs.com/package/@stdlib/stdlib&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@stdlib/stdlib.svg?sanitize=true&#34; alt=&#34;NPM version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/stdlib-js/stdlib&#34;&gt;&lt;img src=&#34;https://img.shields.io/node/v/@stdlib/stdlib.svg?sanitize=true&#34; alt=&#34;Node.js version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;!-- lint enable no-paragraph-content-indent --&gt; &#xA; &lt;!-- #### Build --&gt; &#xA; &lt;!-- TODO: distinguish between Linux and Windows code coverage --&gt; &#xA; &lt;!-- lint disable table-pipe-alignment --&gt; &#xA; &lt;!-- | OS         | Build (master)                                                                           | Coverage (master)                                                  | Build (develop)                                                                             | Coverage (develop)                                                    |&#xA;| ---------- | ---------------------------------------------------------------------------------------- | ------------------------------------------------------------------ | ------------------------------------------------------------------------------------------- | --------------------------------------------------------------------- |&#xA;| Linux/OS X | [![Linux/OS X build status (master)][build-image-master]][build-url-master]              | [![coverage (master)][coverage-image-master]][coverage-url-master] | [![Linux/OS X build status (develop)][build-image-develop]][build-url-develop]              | [![coverage (develop)][coverage-image-develop]][coverage-url-develop] |&#xA;| Windows    | [![Windows build status (master)][windows-build-image-master]][windows-build-url-master] | [![coverage (master)][coverage-image-master]][coverage-url-master] | [![Windows build status (develop)][windows-build-image-develop]][windows-build-url-develop] | [![coverage (develop)][coverage-image-develop]][coverage-url-develop] | --&gt; &#xA; &lt;!-- lint enable table-pipe-alignment --&gt; &#xA; &lt;!-- #### Dependencies --&gt; &#xA; &lt;!-- lint disable no-paragraph-content-indent --&gt; &#xA; &lt;!-- [![Dependencies][dependencies-image]][dependencies-url] [![DevDependencies][dev-dependencies-image]][dev-dependencies-url] --&gt; &#xA; &lt;!-- lint enable no-paragraph-content-indent --&gt; &#xA; &lt;h4&gt;Community&lt;/h4&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://app.gitter.im/#/room/%23stdlib-js_stdlib:gitter.im&#34;&gt;&lt;img src=&#34;https://img.shields.io/gitter/room/stdlib-js/stdlib.svg?sanitize=true&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/section&gt; &#xA;&lt;!-- /.badges&gt; --&gt; &#xA;&lt;!-- Project acknowledgments. If section is included, add a horizontal rule *before* the section. Make sure to keep an empty line after the `section` element and another before the `/section` close. --&gt; &#xA;&lt;!-- * * *&#xA;&#xA;&lt;section class=&#34;acknowledgments&#34;&gt;&#xA;&#xA;## Acknowledgments&#xA;&#xA;### Build Infrastructure&#xA;&#xA;Test and build infrastructure is generously provided by the following services:&#xA;&#xA;&lt;div class=&#34;image&#34; align=&#34;center&#34;&gt;&#xA;    &lt;img src=&#34;https://cdn.jsdelivr.net/gh/stdlib-js/stdlib@3de52540666d1635df046d7e5dd07a1fc5b87d85/docs/assets/misc/ci_logo_banner.svg&#34; alt=&#34;Continuous Integration Service Logos&#34;&gt;&#xA;    &lt;br&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;/section&gt; --&gt; &#xA;&lt;!-- /.acknowledgments --&gt; &#xA;&lt;!-- Section for all links. Make sure to keep an empty line after the `section` element and another before the `/section` close. --&gt; &#xA;&lt;section class=&#34;links&#34;&gt; &#xA; &lt;!-- [build-image-develop]: https://img.shields.io/travis/stdlib-js/stdlib/develop.svg&#xA;&#xA;[build-url-develop]: https://travis-ci.org/stdlib-js/stdlib&#xA;&#xA;[coverage-image-develop]: https://img.shields.io/codecov/c/github/stdlib-js/stdlib/develop.svg&#xA;&#xA;[coverage-url-develop]: https://codecov.io/github/stdlib-js/stdlib/branch/develop&#xA;&#xA;[dependencies-url]: https://socket.dev/npm/package/@stdlib/stdlib/dependencies&#xA;&#xA;[dev-dependencies-url]: https://socket.dev/npm/package/@stdlib/stdlib/dependencies --&gt; &#xA;&lt;/section&gt; &#xA;&lt;!-- /.links --&gt;</summary>
  </entry>
  <entry>
    <title>GitSquared/edex-ui</title>
    <updated>2024-12-01T01:54:45Z</updated>
    <id>tag:github.com,2024-12-01:/GitSquared/edex-ui</id>
    <link href="https://github.com/GitSquared/edex-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cross-platform, customizable science fiction terminal emulator with advanced monitoring &amp; touchscreen support.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;img alt=&#34;Logo&#34; src=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/logo.png&#34;&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://lgtm.com/projects/g/GitSquared/edex-ui/context:javascript&#34;&gt;&lt;img alt=&#34;undefined&#34; src=&#34;https://img.shields.io/lgtm/grade/javascript/g/GitSquared/edex-ui.svg?logo=lgtm&amp;amp;logoWidth=18&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/GitSquared/edex-ui/releases/latest&#34;&gt;&lt;img alt=&#34;undefined&#34; src=&#34;https://img.shields.io/github/release/GitSquared/edex-ui.svg?style=popout&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#featured-in&#34;&gt;&lt;img alt=&#34;undefined&#34; src=&#34;https://img.shields.io/github/downloads/GitSquared/edex-ui/total.svg?style=popout&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/GitSquared/edex-ui/raw/master/LICENSE&#34;&gt;&lt;img alt=&#34;undefined&#34; src=&#34;https://img.shields.io/github/license/GitSquared/edex-ui.svg?style=popout&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Windows.exe&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;undefined&#34; src=&#34;https://badgen.net/badge/Download/Windows/?color=blue&amp;amp;icon=windows&amp;amp;label&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-macOS.dmg&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;undefined&#34; src=&#34;https://badgen.net/badge/Download/macOS/?color=grey&amp;amp;icon=apple&amp;amp;label&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-x86_64.AppImage&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;undefined&#34; src=&#34;https://badgen.net/badge/Download/Linux64/?color=orange&amp;amp;icon=terminal&amp;amp;label&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-arm64-AppImage&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;undefined&#34; src=&#34;https://badgen.net/badge/Download/LinuxArm64/?color=orange&amp;amp;icon=terminal&amp;amp;label&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aur.archlinux.org/packages/edex-ui&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;undefined&#34; src=&#34;https://badgen.net/badge/AUR/Package/cyan&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/GitSquared/edex-ui/releases/tag/v2.2.8&#34;&gt;&lt;strong&gt;&lt;i&gt;(Project archived oct. 18th 2021)&lt;/i&gt;&lt;/strong&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;eDEX-UI is a fullscreen, cross-platform terminal emulator and system monitor that looks and feels like a sci-fi computer interface.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;a href=&#34;https://youtu.be/BGeY1rK19zA&#34;&gt; &lt;img align=&#34;right&#34; width=&#34;400&#34; alt=&#34;Demo on YouTube&#34; src=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/youtube-demo-teaser.gif&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Heavily inspired from the &lt;a href=&#34;https://web.archive.org/web/20170511000410/http://jtnimoy.com/blogs/projects/14881671&#34;&gt;TRON Legacy movie effects&lt;/a&gt; (especially the &lt;a href=&#34;https://gmunk.com/TRON-Board-Room&#34;&gt;Board Room sequence&lt;/a&gt;), the eDEX-UI project was originally meant to be &lt;em&gt;&#34;&lt;a href=&#34;https://github.com/seenaburns/dex-ui&#34;&gt;DEX-UI&lt;/a&gt; with less Â« art Â» and more Â« distributable software Â»&#34;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;While keeping a futuristic look and feel, it strives to maintain a certain level of functionality and to be usable in real-life scenarios, with the larger goal of bringing science-fiction UXs to the mainstream.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;It might or might not be a joke taken too seriously.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;em&gt;Jump to: &lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#features&#34;&gt;Features&lt;/a&gt; â€” &lt;a href=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#screenshots&#34;&gt;Screenshots&lt;/a&gt; â€” &lt;a href=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#qa&#34;&gt;Questions &amp;amp; Answers&lt;/a&gt; â€” &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#how-do-i-get-it&#34;&gt;Download&lt;/a&gt;&lt;/strong&gt; â€” &lt;a href=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#featured-in&#34;&gt;Featured In&lt;/a&gt; â€” &lt;a href=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#useful-commands-for-the-nerds&#34;&gt;Contributor Instructions&lt;/a&gt; â€” &lt;a href=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/em&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Want to help support my open-source experiments and learn some cool JavaScript tricks at the same time?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Click the banner below and sign up to &lt;strong&gt;Bytes&lt;/strong&gt;, the only newsletter cool enough to be recommended by eDEX-UI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.dev/bytes/?r=gabriel&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/sponsor-uidev-bytes.jpg&#34; alt=&#34;Bytes by UI.dev&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully featured terminal emulator with tabs, colors, mouse events, and support for &lt;code&gt;curses&lt;/code&gt; and &lt;code&gt;curses&lt;/code&gt;-like applications.&lt;/li&gt; &#xA; &lt;li&gt;Real-time system (CPU, RAM, swap, processes) and network (GeoIP, active connections, transfer rates) monitoring.&lt;/li&gt; &#xA; &lt;li&gt;Full support for touch-enabled displays, including an on-screen keyboard.&lt;/li&gt; &#xA; &lt;li&gt;Directory viewer that follows the CWD (current working directory) of the terminal.&lt;/li&gt; &#xA; &lt;li&gt;Advanced customization using themes, on-screen keyboard layouts, CSS injections. See the &lt;a href=&#34;https://github.com/GitSquared/edex-ui/wiki&#34;&gt;wiki&lt;/a&gt; for more info.&lt;/li&gt; &#xA; &lt;li&gt;Optional sound effects made by a talented sound designer for maximum hollywood hacking vibe.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/screenshot_default.png&#34; alt=&#34;Default screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://github.com/dylanaraps/neofetch&#34;&gt;neofetch&lt;/a&gt; on eDEX-UI 2.2 with the default &#34;tron&#34; theme &amp;amp; QWERTY keyboard&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/screenshot_blade.png&#34; alt=&#34;Blade screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Checking out available themes in &lt;a href=&#34;https://github.com/GitSquared/edex-ui/wiki/userData&#34;&gt;eDEX&#39;s config dir&lt;/a&gt; with &lt;a href=&#34;https://github.com/ranger/ranger&#34;&gt;&lt;code&gt;ranger&lt;/code&gt;&lt;/a&gt; on eDEX-UI 2.2 with the &#34;blade&#34; theme&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/screenshot_disrupted.png&#34; alt=&#34;Disrupted screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://github.com/abishekvashok/cmatrix&#34;&gt;cmatrix&lt;/a&gt; on eDEX-UI 2.2 with the experimental &#34;tron-disrupted&#34; theme, and the user-contributed DVORAK keyboard&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/screenshot_horizon.png&#34; alt=&#34;Horizon screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Editing eDEX-UI source code with &lt;code&gt;nvim&lt;/code&gt; on eDEX-UI 2.2 with the custom &lt;a href=&#34;https://github.com/GitSquared/horizon-edex-theme&#34;&gt;&lt;code&gt;horizon-full&lt;/code&gt;&lt;/a&gt; theme&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Q&amp;amp;A&lt;/h2&gt; &#xA;&lt;h4&gt;How do I get it?&lt;/h4&gt; &#xA;&lt;p&gt;Click on the little badges under the eDEX logo at the top of this page, or go to the &lt;a href=&#34;https://github.com/GitSquared/edex-ui/releases&#34;&gt;Releases&lt;/a&gt; tab, or download it through &lt;a href=&#34;https://repology.org/project/edex-ui/versions&#34;&gt;one of the available repositories&lt;/a&gt; (Homebrew, AUR...).&lt;/p&gt; &#xA;&lt;p&gt;Public release binaries are unsigned (&lt;a href=&#34;https://gaby.dev/posts/code-signing&#34;&gt;why&lt;/a&gt;). On Linux, you will need to &lt;code&gt;chmod +x&lt;/code&gt; the AppImage file in order to run it.&lt;/p&gt; &#xA;&lt;h4&gt;I have a problem!&lt;/h4&gt; &#xA;&lt;p&gt;Search through the &lt;a href=&#34;https://github.com/GitSquared/edex-ui/issues&#34;&gt;Issues&lt;/a&gt; to see if yours has already been reported. If you&#39;re confident it hasn&#39;t been reported yet, feel free to open up a new one. If you see your issue and it&#39;s been closed, it probably means that the fix for it will ship in the next version, and you&#39;ll have to wait a bit.&lt;/p&gt; &#xA;&lt;h4&gt;Can you disable the keyboard/the filesystem display?&lt;/h4&gt; &#xA;&lt;p&gt;You can&#39;t disable them (yet) but you can hide them. See the &lt;code&gt;tron-notype&lt;/code&gt; theme.&lt;/p&gt; &#xA;&lt;h4&gt;Why is the file browser saying that &#34;Tracking Failed&#34;? (Windows only)&lt;/h4&gt; &#xA;&lt;p&gt;On Linux and macOS, eDEX tracks where you&#39;re going in your terminal tab to display the content of the current folder on-screen. Sadly, this is technically impossible to do on Windows right now, so the file browser reverts back to a &#34;detached&#34; mode. You can still use it to browse files &amp;amp; directories and click on files to input their path in the terminal.&lt;/p&gt; &#xA;&lt;h4&gt;Can this run on a Raspberry Pi / ARM device?&lt;/h4&gt; &#xA;&lt;p&gt;We provide prebuilt arm64 builds. For other platforms, see &lt;a href=&#34;https://github.com/GitSquared/edex-ui/issues/313#issuecomment-443465345&#34;&gt;this issue comment&lt;/a&gt;, and the thread on issue &lt;a href=&#34;https://github.com/GitSquared/edex-ui/issues/818&#34;&gt;#818&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Is this repo actively maintained?&lt;/h4&gt; &#xA;&lt;p&gt;No, after a 3 years run, this project has been archived. See the &lt;a href=&#34;https://github.com/GitSquared/edex-ui/releases/tag/v2.2.8&#34;&gt;announcement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;How did you make this?&lt;/h4&gt; &#xA;&lt;p&gt;Glad you&#39;re interested! See &lt;a href=&#34;https://github.com/GitSquared/edex-ui/issues/272&#34;&gt;#272&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;This is so cool.&lt;/h4&gt; &#xA;&lt;p&gt;Thanks! If you feel like it, you can &lt;a href=&#34;https://gaby.dev/twitter&#34;&gt;follow me on Twitter&lt;/a&gt; to hear about new stuff I&#39;m making.&lt;/p&gt; &#xA;&lt;img width=&#34;220&#34; src=&#34;https://78.media.tumblr.com/35d4ef4447e0112f776b629bffd99188/tumblr_mk4gf8zvyC1s567uwo1_500.gif&#34;&gt; &#xA;&lt;h2&gt;Featured in...&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linuxuprising.com/2018/11/edex-ui-fully-functioning-sci-fi.html&#34;&gt;Linux Uprising Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/unixporn/comments/9ysbx7/oc_a_little_project_that_ive_been_working_on/&#34;&gt;My post on r/unixporn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://korben.info/une-interface-futuriste-pour-vos-ecrans-tactiles.html&#34;&gt;Korben article (in french)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=18509828&#34;&gt;Hacker News&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/mikemaccana/status/1065615451940667396&#34;&gt;This tweet that made me smile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://boingboing.net/2018/11/23/simulacrum-sf.html&#34;&gt;BoingBoing article&lt;/a&gt; - Apparently i&#39;m a &#34;French hacker&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.oreilly.com/ideas/four-short-links-23-november-2018&#34;&gt;OReilly 4 short links&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackaday.com/2018/11/23/look-like-a-movie-hacker/&#34;&gt;Hackaday&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.developpez.com/actu/234808/Une-application-de-bureau-ressemble-a-une-interface-d-ordinateur-de-science-fiction-inspiree-des-effets-du-film-TRON-Legacy/&#34;&gt;Developpez.com (another french link)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.github.com/2018-12-21-release-radar-november-2018/&#34;&gt;GitHub Blog&#39;s Release Radar November 2018&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opensource.com/article/19/1/productivity-tool-edex-ui&#34;&gt;opensource.com Productive Tools for 2019&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.oreilly.com/radar/four-short-links-7-july-2020/&#34;&gt;O&#39;Reilly 4 short links (again)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linuxlinks.com/linux-candy-edex-ui-sci-fi-computer-terminal-emulator-system-monitor/&#34;&gt;LinuxLinks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gbzqCAjm--g&#34;&gt;Linux For Everyone (Youtube)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://risingstars.js.org/2020/en#edex-ui&#34;&gt;BestOfJS Rising Stars 2020&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/TSjMIeLG0Sk&#34;&gt;The Geek Freaks (Youtube/German)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://osawards.com/javascript/#nominees&#34;&gt;JSNation Open Source Awards 2021&lt;/a&gt; (Nominee - Fun Side Project of the Year)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful commands for the nerds&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE:&lt;/strong&gt; the following instructions are meant for running eDEX from the latest unoptimized, unreleased, development version. If you&#39;d like to get stable software instead, refer to &lt;a href=&#34;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#how-do-i-get-it&#34;&gt;these&lt;/a&gt; instructions.&lt;/p&gt; &#xA;&lt;h4&gt;Starting from source:&lt;/h4&gt; &#xA;&lt;p&gt;on *nix systems (You&#39;ll need the Xcode command line tools on macOS):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;clone the repository&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run install-linux&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;on Windows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;start cmd or powershell &lt;strong&gt;as administrator&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;clone the repository&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run install-windows&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Building&lt;/h4&gt; &#xA;&lt;p&gt;Note: Due to native modules, you can only build targets for the host OS you are using.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (NOT &lt;code&gt;install-linux&lt;/code&gt; or &lt;code&gt;install-windows&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run build-linux&lt;/code&gt; or &lt;code&gt;build-windows&lt;/code&gt; or &lt;code&gt;build-darwin&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The script will minify the source code, recompile native dependencies and create distributable assets in the &lt;code&gt;dist&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h4&gt;Getting the bleeding edge&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re interested in running the latest in-development version but don&#39;t want to compile source code yourself, you can can get pre-built nightly binaries on &lt;a href=&#34;https://github.com/GitSquared/edex-ui/actions&#34;&gt;GitHub Actions&lt;/a&gt;: click the latest commits, and download the artifacts bundle for your OS.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;eDEX-UI&#39;s source code was primarily written by me, &lt;a href=&#34;https://github.com/GitSquared&#34;&gt;Squared&lt;/a&gt;. If you want to get in touch with me or find other projects I&#39;m involved in, check out &lt;a href=&#34;https://gaby.dev&#34;&gt;my website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/PixelyIon&#34;&gt;PixelyIon&lt;/a&gt; helped me get started with Windows compatibility and offered some precious advice when I started to work on this project seriously.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://soundcloud.com/iamicewolf&#34;&gt;IceWolf&lt;/a&gt; composed the sound effects on v2.1.x and above. He makes really cool stuff, check out his music!&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Of course, eDEX would never have existed if I hadn&#39;t stumbled upon the amazing work of &lt;a href=&#34;https://github.com/seenaburns&#34;&gt;Seena&lt;/a&gt; on &lt;a href=&#34;https://reddit.com/r/unixporn&#34;&gt;r/unixporn&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project uses a bunch of open-source libraries, frameworks and tools, see &lt;a href=&#34;https://github.com/GitSquared/edex-ui/network/dependencies&#34;&gt;the full dependency graph&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I want to namely thank the developers behind &lt;a href=&#34;https://github.com/xtermjs/xterm.js&#34;&gt;xterm.js&lt;/a&gt;, &lt;a href=&#34;https://github.com/sebhildebrandt/systeminformation&#34;&gt;systeminformation&lt;/a&gt; and &lt;a href=&#34;https://github.com/joewalnes/smoothie&#34;&gt;SmoothieCharts&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Huge thanks to &lt;a href=&#34;https://github.com/arscan&#34;&gt;Rob &#34;Arscan&#34; Scanlon&lt;/a&gt; for making the fantastic &lt;a href=&#34;https://github.com/arscan/encom-globe&#34;&gt;ENCOM Globe&lt;/a&gt;, also inspired by the TRON: Legacy movie, and distributing it freely. His work really puts the icing on the cake.&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://github.com/GitSquared/edex-ui/raw/master/LICENSE&#34;&gt;GPLv3.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alexlenail/NN-SVG</title>
    <updated>2024-12-01T01:54:45Z</updated>
    <id>tag:github.com,2024-12-01:/alexlenail/NN-SVG</id>
    <link href="https://github.com/alexlenail/NN-SVG" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Publication-ready NN-architecture schematics.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://alexlenail.me/NN-SVG/&#34;&gt;NN-SVG&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://joss.theoj.org/papers/52b511ab107595a805107aa4ad70161d&#34;&gt;&lt;img src=&#34;https://joss.theoj.org/papers/52b511ab107595a805107aa4ad70161d/status.svg?sanitize=true&#34; alt=&#34;status&#34;&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/zfrenchee/NN-SVG/wiki&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://github.com/zfrenchee/NN-SVG/wiki/Contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Illustrations of Neural Network architectures are often time-consuming to produce, and machine learning researchers all too often find themselves constructing these diagrams from scratch by hand.&lt;/p&gt; &#xA;&lt;p&gt;NN-SVG is a tool for creating Neural Network (NN) architecture drawings parametrically rather than manually. It also provides the ability to export those drawings to Scalable Vector Graphics (SVG) files, suitable for inclusion in academic papers or web pages.&lt;/p&gt; &#xA;&lt;p&gt;The tool provides the ability to generate figures of three kinds: classic Fully-Connected Neural Network (FCNN) figures, Convolutional Neural Network (CNN) figures of the sort introduced in &lt;a href=&#34;http://yann.lecun.com/exdb/publis/pdf/lecun-01a.pdf&#34;&gt;the LeNet paper&lt;/a&gt;, and Deep Neural Network figures following the style introduced in &lt;a href=&#34;https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf&#34;&gt;the AlexNet paper&lt;/a&gt;. The former two are accomplished using the &lt;a href=&#34;https://d3js.org/&#34;&gt;D3 javascript library&lt;/a&gt; and the latter with the javascript library &lt;a href=&#34;https://threejs.org/&#34;&gt;Three.js&lt;/a&gt;. NN-SVG provides the ability to style the figure to the user&#39;s liking via many size, color, and layout parameters.&lt;/p&gt; &#xA;&lt;p&gt;I hope this tool will save machine learning researchers time, and I hope this software might also serve as a pedagogical tool in some contexts.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/alexlenail/NN-SVG/master/example.svg?sanitize=true&#34;&gt; &#xA;&lt;h3&gt;Citation&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;LeNail, (2019). NN-SVG: Publication-Ready Neural Network Architecture Schematics. &lt;br&gt; Journal of Open Source Software, 4(33), 747, &lt;a href=&#34;https://doi.org/10.21105/joss.00747&#34;&gt;https://doi.org/10.21105/joss.00747&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Related&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vdumoulin/conv_arithmetic&#34;&gt;vdumoulin/conv_arithmetic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tensorspace-team/tensorspace&#34;&gt;TensorSpace&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>