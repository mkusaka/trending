<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-19T02:02:25Z</updated>
  <subtitle>Weekly Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nunomaduro/larastan</title>
    <updated>2023-03-19T02:02:25Z</updated>
    <id>tag:github.com,2023-03-19:/nunomaduro/larastan</id>
    <link href="https://github.com/nunomaduro/larastan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚öóÔ∏è Adds code analysis to Laravel improving developer productivity and code quality.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/nunomaduro/larastan/master/docs/logo.png&#34; alt=&#34;Larastan Logo&#34; width=&#34;300&#34;&gt; &lt;br&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/nunomaduro/larastan/master/docs/example.png&#34; alt=&#34;Larastan Example&#34; height=&#34;300&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/nunomaduro/larastan/actions&#34;&gt;&lt;img src=&#34;https://github.com/nunomaduro/larastan/workflows/tests/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/nunomaduro/larastan/stats&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/nunomaduro/larastan/d/total.svg?sanitize=true&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/nunomaduro/larastan&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/nunomaduro/larastan/v/stable.svg?sanitize=true&#34; alt=&#34;Latest Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nunomaduro/larastan/raw/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/nunomaduro/larastan/license.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;‚öóÔ∏è About Larastan&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you are using a Laravel version older than 9.x, please refer to &lt;a href=&#34;https://github.com/nunomaduro/larastan/tree/1.x&#34;&gt;Larastan v1.x&lt;/a&gt; with &lt;a href=&#34;https://github.com/nunomaduro/larastan/pull/1431#issuecomment-1303332293&#34;&gt;PHPStan 1.8.x&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Larastan was created by &lt;a href=&#34;https://github.com/canvural&#34;&gt;Can Vural&lt;/a&gt; and &lt;a href=&#34;https://github.com/nunomaduro&#34;&gt;Nuno Maduro&lt;/a&gt;, got artwork designed by &lt;a href=&#34;http://github.com/caneco&#34;&gt;@Caneco&lt;/a&gt;, is maintained by &lt;a href=&#34;https://github.com/canvural&#34;&gt;Can Vural&lt;/a&gt;, &lt;a href=&#34;https://github.com/nunomaduro&#34;&gt;Nuno Maduro&lt;/a&gt;, and &lt;a href=&#34;https://github.com/szepeviktor&#34;&gt;Viktor Sz√©pe&lt;/a&gt;, and is a &lt;a href=&#34;https://phpstan.org/&#34;&gt;PHPStan&lt;/a&gt; wrapper for Laravel. Larastan focuses on &lt;strong&gt;finding errors in your code&lt;/strong&gt;. It catches whole classes of bugs even &lt;strong&gt;before you write tests&lt;/strong&gt; for the code.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adds static typing to Laravel to improve developer productivity and &lt;strong&gt;code quality&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Supports most of &lt;a href=&#34;https://laravel.com&#34;&gt;Laravel&lt;/a&gt;&#39;s &lt;strong&gt;beautiful magic&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discovers bugs in your code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;While by definition, &#34;static analysis&#34; doesn&#39;t load any of your application&#39;s code. Larastan boots your application&#39;s container, so it can resolve types that are only possible to compute at runtime. That&#39;s why we use the term &#34;code analysis&#34; instead of &#34;static analysis&#34;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;‚ú® Getting Started In 3 Steps&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Requires:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://php.net/releases/&#34;&gt;PHP 8.0+&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/laravel/laravel&#34;&gt;Laravel 9.0+&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt;: First, you may use &lt;a href=&#34;https://getcomposer.org&#34;&gt;Composer&lt;/a&gt; to install Larastan as a development dependency into your Laravel project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require nunomaduro/larastan:^2.0 --dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Using Larastan for analysing Laravel packages? You may need to install &lt;code&gt;orchestra/testbench&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;2&lt;/strong&gt;: Then, create a &lt;code&gt;phpstan.neon&lt;/code&gt; or &lt;code&gt;phpstan.neon.dist&lt;/code&gt; file in the root of your application. It might look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;includes:&#xA;    - ./vendor/nunomaduro/larastan/extension.neon&#xA;&#xA;parameters:&#xA;&#xA;    paths:&#xA;        - app/&#xA;&#xA;    # Level 9 is the highest level&#xA;    level: 5&#xA;&#xA;#    ignoreErrors:&#xA;#        - &#39;#PHPDoc tag @var#&#39;&#xA;#&#xA;#    excludePaths:&#xA;#        - ./*/*/FileToBeExcluded.php&#xA;#&#xA;#    checkMissingIterableValueType: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For all available options, please take a look at the PHPStan documentation: &lt;strong&gt;&lt;a href=&#34;https://phpstan.org/config-reference&#34;&gt;https://phpstan.org/config-reference&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt;: Finally, you may start analyzing your code using the phpstan console command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/phpstan analyse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are getting the error &lt;code&gt;Allowed memory size exhausted&lt;/code&gt;, then you can use the &lt;code&gt;--memory-limit&lt;/code&gt; option fix the problem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/phpstan analyse --memory-limit=2G&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ignoring errors&lt;/h2&gt; &#xA;&lt;p&gt;Ignoring a specific error can be done either with a php comment or in the configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// @phpstan-ignore-next-line&#xA;$test-&amp;gt;badMethod();&#xA;&#xA;$test-&amp;gt;badMethod(); // @phpstan-ignore-line&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When ignoring errors in PHPStan&#39;s configuration file, they are ignored by writing a regex based on error messages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;parameters:&#xA;    ignoreErrors:&#xA;        - &#39;#Call to an undefined method .*badMethod\(\)#&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Baseline file&lt;/h3&gt; &#xA;&lt;p&gt;In older codebases it might be hard to spend the time fixing all the code to pass a high PHPStan Level.&lt;/p&gt; &#xA;&lt;p&gt;To get around this a baseline file can be generated. The baseline file will create a configuration file with all of the current errors, so new code can be written following a higher standard than the old code. (&lt;a href=&#34;https://phpstan.org/user-guide/baseline&#34;&gt;PHPStan Docs&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/phpstan analyse --generate-baseline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Rules&lt;/h2&gt; &#xA;&lt;p&gt;A list of configurable rules specific to Laravel can be found &lt;a href=&#34;https://raw.githubusercontent.com/nunomaduro/larastan/master/docs/rules.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;A list of Larastan features can be found &lt;a href=&#34;https://raw.githubusercontent.com/nunomaduro/larastan/master/docs/features.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Custom PHPDoc types&lt;/h2&gt; &#xA;&lt;p&gt;A list of PHPDoc types specific to Larastan can be found &lt;a href=&#34;https://raw.githubusercontent.com/nunomaduro/larastan/master/docs/custom-types.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Custom PHPStan config parameters&lt;/h2&gt; &#xA;&lt;p&gt;A list of custom config parameters that you can use in your PHPStan config file can be found &lt;a href=&#34;https://raw.githubusercontent.com/nunomaduro/larastan/master/docs/custom-config-parameters.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Errors To Ignore&lt;/h2&gt; &#xA;&lt;p&gt;Some parts of Laravel are currently too magical for Larastan/PHPStan to understand. We listed common &lt;a href=&#34;https://raw.githubusercontent.com/nunomaduro/larastan/master/docs/errors-to-ignore.md&#34;&gt;errors to ignore&lt;/a&gt;, add them as needed&lt;/p&gt; &#xA;&lt;h2&gt;üëäüèª Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for considering contributing to Larastan. All the contribution guidelines are mentioned &lt;a href=&#34;https://raw.githubusercontent.com/nunomaduro/larastan/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can have a look at the &lt;a href=&#34;https://raw.githubusercontent.com/nunomaduro/larastan/master/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for constant updates &amp;amp; detailed information about the changes. You can also follow the Twitter account for the latest announcements or just come say hi!: &lt;a href=&#34;https://twitter.com/enunomaduro&#34;&gt;@enunomaduro&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/can__vural&#34;&gt;@can__vural&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üìñ License&lt;/h2&gt; &#xA;&lt;p&gt;Larastan is an open-sourced software licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/nunomaduro/larastan/master/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>barryvdh/laravel-dompdf</title>
    <updated>2023-03-19T02:02:25Z</updated>
    <id>tag:github.com,2023-03-19:/barryvdh/laravel-dompdf</id>
    <link href="https://github.com/barryvdh/laravel-dompdf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A DOMPDF Wrapper for Laravel&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;DOMPDF Wrapper for Laravel&lt;/h2&gt; &#xA;&lt;h3&gt;Laravel wrapper for &lt;a href=&#34;https://github.com/dompdf/dompdf&#34;&gt;Dompdf HTML to PDF Converter&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/barryvdh/laravel-dompdf/actions&#34;&gt;&lt;img src=&#34;https://github.com/barryvdh/laravel-dompdf/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://choosealicense.com/licenses/mit/&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/barryvdh/laravel-dompdf/license.png&#34; alt=&#34;Packagist License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/barryvdh/laravel-dompdf&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/barryvdh/laravel-dompdf/version.png&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/barryvdh/laravel-dompdf&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/barryvdh/laravel-dompdf/d/total.png&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fruitcake.nl/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20By-Fruitcake-b2bc35.svg?sanitize=true&#34; alt=&#34;Fruitcake&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Laravel&lt;/h3&gt; &#xA;&lt;p&gt;Require this package in your composer.json and update composer. This will download the package and the dompdf + fontlib libraries also.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;composer require barryvdh/laravel-dompdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Lumen&lt;/h3&gt; &#xA;&lt;p&gt;After updating composer add the following lines to register provider in &lt;code&gt;bootstrap/app.php&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$app-&amp;gt;register(\Barryvdh\DomPDF\ServiceProvider::class);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To change the configuration, copy the config file to your config folder and enable it in &lt;code&gt;bootstrap/app.php&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$app-&amp;gt;configure(&#39;dompdf&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using&lt;/h2&gt; &#xA;&lt;p&gt;You can create a new DOMPDF instance and load a HTML string, file or view name. You can save it to a file, or stream (show in browser) or download.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    use Barryvdh\DomPDF\Facade\Pdf;&#xA;&#xA;    $pdf = Pdf::loadView(&#39;pdf.invoice&#39;, $data);&#xA;    return $pdf-&amp;gt;download(&#39;invoice.pdf&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or use the App container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    $pdf = App::make(&#39;dompdf.wrapper&#39;);&#xA;    $pdf-&amp;gt;loadHTML(&#39;&amp;lt;h1&amp;gt;Test&amp;lt;/h1&amp;gt;&#39;);&#xA;    return $pdf-&amp;gt;stream();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use the facade:&lt;/p&gt; &#xA;&lt;p&gt;You can chain the methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    return Pdf::loadFile(public_path().&#39;/myfile.html&#39;)-&amp;gt;save(&#39;/path-to/my_stored_file.pdf&#39;)-&amp;gt;stream(&#39;download.pdf&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can change the orientation and paper size, and hide or show errors (by default, errors are shown when debug is on)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    Pdf::loadHTML($html)-&amp;gt;setPaper(&#39;a4&#39;, &#39;landscape&#39;)-&amp;gt;setWarnings(false)-&amp;gt;save(&#39;myfile.pdf&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need the output as a string, you can get the rendered PDF with the output() function, so you can save/output it yourself.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;php artisan vendor:publish&lt;/code&gt; to create a config file located at &lt;code&gt;config/dompdf.php&lt;/code&gt; which will allow you to define local configurations to change some settings (default paper etc). You can also use your ConfigProvider to set certain keys.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;The defaults configuration settings are set in &lt;code&gt;config/dompdf.php&lt;/code&gt;. Copy this file to your own config directory to modify the values. You can publish the config using this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    php artisan vendor:publish --provider=&#34;Barryvdh\DomPDF\ServiceProvider&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can still alter the dompdf options in your code before generating the pdf using this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    Pdf::setOption([&#39;dpi&#39; =&amp;gt; 150, &#39;defaultFont&#39; =&amp;gt; &#39;sans-serif&#39;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Available options and their defaults:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;rootDir&lt;/strong&gt;: &#34;{app_directory}/vendor/dompdf/dompdf&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;tempDir&lt;/strong&gt;: &#34;/tmp&#34; &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;fontDir&lt;/strong&gt;: &#34;{app_directory}/storage/fonts&#34; &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;fontCache&lt;/strong&gt;: &#34;{app_directory}/storage/fonts&#34; &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;chroot&lt;/strong&gt;: &#34;{app_directory}&#34; &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;logOutputFile&lt;/strong&gt;: &#34;/tmp/log.htm&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;defaultMediaType&lt;/strong&gt;: &#34;screen&#34; &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;defaultPaperSize&lt;/strong&gt;: &#34;a4&#34; &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;defaultFont&lt;/strong&gt;: &#34;serif&#34; &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;dpi&lt;/strong&gt;: 96 &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;fontHeightRatio&lt;/strong&gt;: 1.1 &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;isPhpEnabled&lt;/strong&gt;: false &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;isRemoteEnabled&lt;/strong&gt;: true &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;isJavascriptEnabled&lt;/strong&gt;: true &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;isHtml5ParserEnabled&lt;/strong&gt;: false &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;isFontSubsettingEnabled&lt;/strong&gt;: false &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;debugPng&lt;/strong&gt;: false&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;debugKeepTemp&lt;/strong&gt;: false&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;debugCss&lt;/strong&gt;: false&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;debugLayout&lt;/strong&gt;: false&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;debugLayoutLines&lt;/strong&gt;: true&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;debugLayoutBlocks&lt;/strong&gt;: true&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;debugLayoutInline&lt;/strong&gt;: true&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;debugLayoutPaddingBox&lt;/strong&gt;: true&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;pdfBackend&lt;/strong&gt;: &#34;CPDF&#34; &lt;em&gt;(available in config/dompdf.php)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;pdflibLicense&lt;/strong&gt;: &#34;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;adminUsername&lt;/strong&gt;: &#34;user&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;adminPassword&lt;/strong&gt;: &#34;password&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tip: UTF-8 support&lt;/h3&gt; &#xA;&lt;p&gt;In your templates, set the UTF-8 Metatag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;text/html; charset=utf-8&#34;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tip: Page breaks&lt;/h3&gt; &#xA;&lt;p&gt;You can use the CSS &lt;code&gt;page-break-before&lt;/code&gt;/&lt;code&gt;page-break-after&lt;/code&gt; properties to create a new page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;&#xA;.page-break {&#xA;    page-break-after: always;&#xA;}&#xA;&amp;lt;/style&amp;gt;&#xA;&amp;lt;h1&amp;gt;Page 1&amp;lt;/h1&amp;gt;&#xA;&amp;lt;div class=&#34;page-break&#34;&amp;gt;&amp;lt;/div&amp;gt;&#xA;&amp;lt;h1&amp;gt;Page 2&amp;lt;/h1&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;This DOMPDF Wrapper for Laravel is open-sourced software licensed under the &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT license&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>YOURLS/YOURLS</title>
    <updated>2023-03-19T02:02:25Z</updated>
    <id>tag:github.com,2023-03-19:/YOURLS/YOURLS</id>
    <link href="https://github.com/YOURLS/YOURLS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üîó The de facto standard self hosted URL shortener in PHP&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://yourls.org&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/YOURLS/YOURLS/master/images/yourls-logo.svg?sanitize=true&#34; width=&#34;66%&#34; alt=&#34;YOURLS&#34;&gt; &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Your Own URL Shortener&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/YOURLS/YOURLS/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt; &lt;a href=&#34;https://scrutinizer-ci.com/g/YOURLS/YOURLS/?branch=master&#34;&gt;&lt;img src=&#34;https://scrutinizer-ci.com/g/YOURLS/YOURLS/badges/quality-score.png?b=master&#34; alt=&#34;Scrutinizer Code Quality&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/packagist/php-v/yourls/yourls&#34; alt=&#34;PHP Version Support&#34;&gt; &lt;a href=&#34;https://packagist.org/packages/yourls/yourls&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/yourls/yourls.svg?sanitize=true&#34; alt=&#34;Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls#contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backers/badge.svg?sanitize=true&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/YOURLS/YOURLS/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsors/badge.svg?sanitize=true&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;YOURLS&lt;/strong&gt; is a set of PHP scripts that will allow you to run &lt;strong&gt;Y&lt;/strong&gt;our &lt;strong&gt;O&lt;/strong&gt;wn &lt;strong&gt;URL&lt;/strong&gt; &lt;strong&gt;S&lt;/strong&gt;hortener, on &lt;strong&gt;your&lt;/strong&gt; server. You&#39;ll have full control over your data, detailed stats, analytics, plugins, and more. It&#39;s free and open-source.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Get YOURLS :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the latest &lt;a href=&#34;https://github.com/YOURLS/YOURLS/releases&#34;&gt;release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using Composer? You can simply &lt;code&gt;composer create-project yourls/yourls .&lt;/code&gt; in an empty directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install YOURLS:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read &lt;a href=&#34;https://yourls.org&#34;&gt;yourls.org&lt;/a&gt; for starters&lt;/li&gt; &#xA; &lt;li&gt;The complete documentation is on &lt;a href=&#34;https://docs.yourls.org&#34;&gt;docs.yourls.org&lt;/a&gt; and contains everything from beginners to experts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community news, tips and tricks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read and subscribe to the &lt;a href=&#34;http://blog.yourls.org&#34;&gt;The Official YOURLS Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check what the user community makes: plugins, tools, guides and more on &lt;a href=&#34;https://github.com/YOURLS/awesome-yourls&#34;&gt;Awesome YOURLS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Engage users and ask for help in our &lt;a href=&#34;https://github.com/YOURLS/YOURLS/discussions&#34;&gt;community discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Keep track of development: &#34;Star&#34; and &#34;Watch&#34; this project, follow &lt;a href=&#34;https://github.com/YOURLS/YOURLS/commits/master&#34;&gt;commit messages&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Feature suggestion? Bug to report?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Before opening any issue, please search for existing &lt;a href=&#34;https://github.com/YOURLS/YOURLS/issues&#34;&gt;issues&lt;/a&gt; (open and closed) and read the &lt;a href=&#34;https://github.com/YOURLS/.github/raw/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backers&lt;/h2&gt; &#xA;&lt;p&gt;Do you use and enjoy YOURLS? &lt;a href=&#34;https://opencollective.com/yourls#backer&#34;&gt;Become a backer&lt;/a&gt; and show your support to our open source project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/yourls/backer/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/0/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/1/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/2/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/3/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/4/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/5/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/6/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/7/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/8/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/9/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/10/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/10/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/11/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/11/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/12/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/12/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/13/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/13/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/14/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/14/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/15/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/15/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/16/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/16/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/17/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/17/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/18/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/18/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/19/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/19/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/20/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/20/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/21/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/21/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/22/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/22/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/23/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/23/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/24/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/24/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/25/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/25/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/26/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/26/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/27/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/27/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/28/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/28/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/backer/29/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/backer/29/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Does your company use YOURLS? Ask your manager or marketing team if your company would be interested in supporting our project. Your company logo will show here. Help support our open-source development efforts by &lt;a href=&#34;https://opencollective.com/yourls&#34;&gt;becoming a sponsor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/yourls/sponsor/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/0/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/1/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/2/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/3/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/4/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/5/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/6/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/7/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/8/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/9/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/10/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/10/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/11/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/11/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/12/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/12/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/13/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/13/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/14/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/14/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/15/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/15/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/16/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/16/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/17/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/17/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/18/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/18/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/yourls/sponsor/19/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/yourls/sponsor/19/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Free software. Do whatever the hell you want with it.&lt;br&gt; YOURLS is released under the &lt;a href=&#34;https://raw.githubusercontent.com/YOURLS/YOURLS/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>