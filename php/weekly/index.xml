<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-21T02:04:28Z</updated>
  <subtitle>Weekly Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nikic/PHP-Parser</title>
    <updated>2022-08-21T02:04:28Z</updated>
    <id>tag:github.com,2022-08-21:/nikic/PHP-Parser</id>
    <link href="https://github.com/nikic/PHP-Parser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A PHP parser written in PHP&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PHP Parser&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coveralls.io/github/nikic/PHP-Parser?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/nikic/PHP-Parser/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a PHP 5.2 to PHP 8.1 parser written in PHP. Its purpose is to simplify static code analysis and manipulation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nikic/PHP-Parser/tree/master/doc&#34;&gt;Documentation for version 5.x&lt;/a&gt; (in development; for running on PHP &amp;gt;= 7.1; for parsing PHP 7.0 to PHP 8.2, with limited support for parsing PHP 5.x).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nikic/PHP-Parser/tree/4.x/doc&#34;&gt;&lt;strong&gt;Documentation for version 4.x&lt;/strong&gt;&lt;/a&gt; (stable; for running on PHP &amp;gt;= 7.0; for parsing PHP 5.2 to PHP 8.1).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nikic/PHP-Parser/tree/3.x/doc&#34;&gt;Documentation for version 3.x&lt;/a&gt; (unsupported; for running on PHP &amp;gt;= 5.5; for parsing PHP 5.2 to PHP 7.2).&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The main features provided by this library are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Parsing PHP 5, PHP 7, and PHP 8 code into an abstract syntax tree (AST). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Invalid code can be parsed into a partial AST.&lt;/li&gt; &#xA;   &lt;li&gt;The AST contains accurate location information.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dumping the AST in human-readable form.&lt;/li&gt; &#xA; &lt;li&gt;Converting an AST back to PHP code. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Experimental: Formatting can be preserved for partially changed ASTs.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Infrastructure to traverse and modify ASTs.&lt;/li&gt; &#xA; &lt;li&gt;Resolution of namespaced names.&lt;/li&gt; &#xA; &lt;li&gt;Evaluation of constant expressions.&lt;/li&gt; &#xA; &lt;li&gt;Builders to simplify AST construction for code generation.&lt;/li&gt; &#xA; &lt;li&gt;Converting an AST into JSON and back.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Install the library using &lt;a href=&#34;https://getcomposer.org&#34;&gt;composer&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php composer.phar require nikic/php-parser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Parse some PHP code into an AST and dump the result in human-readable form:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;use PhpParser\Error;&#xA;use PhpParser\NodeDumper;&#xA;use PhpParser\ParserFactory;&#xA;&#xA;$code = &amp;lt;&amp;lt;&amp;lt;&#39;CODE&#39;&#xA;&amp;lt;?php&#xA;&#xA;function test($foo)&#xA;{&#xA;    var_dump($foo);&#xA;}&#xA;CODE;&#xA;&#xA;$parser = (new ParserFactory)-&amp;gt;create(ParserFactory::PREFER_PHP7);&#xA;try {&#xA;    $ast = $parser-&amp;gt;parse($code);&#xA;} catch (Error $error) {&#xA;    echo &#34;Parse error: {$error-&amp;gt;getMessage()}\n&#34;;&#xA;    return;&#xA;}&#xA;&#xA;$dumper = new NodeDumper;&#xA;echo $dumper-&amp;gt;dump($ast) . &#34;\n&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This dumps an AST looking something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;array(&#xA;    0: Stmt_Function(&#xA;        byRef: false&#xA;        name: Identifier(&#xA;            name: test&#xA;        )&#xA;        params: array(&#xA;            0: Param(&#xA;                type: null&#xA;                byRef: false&#xA;                variadic: false&#xA;                var: Expr_Variable(&#xA;                    name: foo&#xA;                )&#xA;                default: null&#xA;            )&#xA;        )&#xA;        returnType: null&#xA;        stmts: array(&#xA;            0: Stmt_Expression(&#xA;                expr: Expr_FuncCall(&#xA;                    name: Name(&#xA;                        parts: array(&#xA;                            0: var_dump&#xA;                        )&#xA;                    )&#xA;                    args: array(&#xA;                        0: Arg(&#xA;                            value: Expr_Variable(&#xA;                                name: foo&#xA;                            )&#xA;                            byRef: false&#xA;                            unpack: false&#xA;                        )&#xA;                    )&#xA;                )&#xA;            )&#xA;        )&#xA;    )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let&#39;s traverse the AST and perform some kind of modification. For example, drop all function bodies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use PhpParser\Node;&#xA;use PhpParser\Node\Stmt\Function_;&#xA;use PhpParser\NodeTraverser;&#xA;use PhpParser\NodeVisitorAbstract;&#xA;&#xA;$traverser = new NodeTraverser();&#xA;$traverser-&amp;gt;addVisitor(new class extends NodeVisitorAbstract {&#xA;    public function enterNode(Node $node) {&#xA;        if ($node instanceof Function_) {&#xA;            // Clean out the function body&#xA;            $node-&amp;gt;stmts = [];&#xA;        }&#xA;    }&#xA;});&#xA;&#xA;$ast = $traverser-&amp;gt;traverse($ast);&#xA;echo $dumper-&amp;gt;dump($ast) . &#34;\n&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This gives us an AST where the &lt;code&gt;Function_::$stmts&lt;/code&gt; are empty:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;array(&#xA;    0: Stmt_Function(&#xA;        byRef: false&#xA;        name: Identifier(&#xA;            name: test&#xA;        )&#xA;        params: array(&#xA;            0: Param(&#xA;                type: null&#xA;                byRef: false&#xA;                variadic: false&#xA;                var: Expr_Variable(&#xA;                    name: foo&#xA;                )&#xA;                default: null&#xA;            )&#xA;        )&#xA;        returnType: null&#xA;        stmts: array(&#xA;        )&#xA;    )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, we can convert the new AST back to PHP code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use PhpParser\PrettyPrinter;&#xA;&#xA;$prettyPrinter = new PrettyPrinter\Standard;&#xA;echo $prettyPrinter-&amp;gt;prettyPrintFile($ast);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This gives us our original code, minus the &lt;code&gt;var_dump()&lt;/code&gt; call inside the function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;function test($foo)&#xA;{&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a more comprehensive introduction, see the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikic/PHP-Parser/master/doc/0_Introduction.markdown&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikic/PHP-Parser/master/doc/2_Usage_of_basic_components.markdown&#34;&gt;Usage of basic components&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Component documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikic/PHP-Parser/master/doc/component/Walking_the_AST.markdown&#34;&gt;Walking the AST&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Node visitors&lt;/li&gt; &#xA;   &lt;li&gt;Modifying the AST from a visitor&lt;/li&gt; &#xA;   &lt;li&gt;Short-circuiting traversals&lt;/li&gt; &#xA;   &lt;li&gt;Interleaved visitors&lt;/li&gt; &#xA;   &lt;li&gt;Simple node finding API&lt;/li&gt; &#xA;   &lt;li&gt;Parent and sibling references&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikic/PHP-Parser/master/doc/component/Name_resolution.markdown&#34;&gt;Name resolution&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Name resolver options&lt;/li&gt; &#xA;   &lt;li&gt;Name resolution context&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikic/PHP-Parser/master/doc/component/Pretty_printing.markdown&#34;&gt;Pretty printing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Converting AST back to PHP code&lt;/li&gt; &#xA;   &lt;li&gt;Customizing formatting&lt;/li&gt; &#xA;   &lt;li&gt;Formatting-preserving code transformations&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikic/PHP-Parser/master/doc/component/AST_builders.markdown&#34;&gt;AST builders&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fluent builders for AST nodes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikic/PHP-Parser/master/doc/component/Lexer.markdown&#34;&gt;Lexer&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Lexer options&lt;/li&gt; &#xA;   &lt;li&gt;Token and file positions for nodes&lt;/li&gt; &#xA;   &lt;li&gt;Custom attributes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikic/PHP-Parser/master/doc/component/Error_handling.markdown&#34;&gt;Error handling&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Column information for errors&lt;/li&gt; &#xA;   &lt;li&gt;Error recovery (parsing of syntactically incorrect code)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikic/PHP-Parser/master/doc/component/Constant_expression_evaluation.markdown&#34;&gt;Constant expression evaluation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Evaluating constant/property/etc initializers&lt;/li&gt; &#xA;   &lt;li&gt;Handling errors and unsupported expressions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikic/PHP-Parser/master/doc/component/JSON_representation.markdown&#34;&gt;JSON representation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;JSON encoding and decoding of ASTs&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikic/PHP-Parser/master/doc/component/Performance.markdown&#34;&gt;Performance&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Disabling Xdebug&lt;/li&gt; &#xA;   &lt;li&gt;Reusing objects&lt;/li&gt; &#xA;   &lt;li&gt;Garbage collection impact&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikic/PHP-Parser/master/doc/component/FAQ.markdown&#34;&gt;Frequently asked questions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Parent and sibling references&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>RSS-Bridge/rss-bridge</title>
    <updated>2022-08-21T02:04:28Z</updated>
    <id>tag:github.com,2022-08-21:/RSS-Bridge/rss-bridge</id>
    <link href="https://github.com/RSS-Bridge/rss-bridge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The RSS feed for websites missing it&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RSS-Bridge&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/RSS-Bridge/rss-bridge/master/static/logo_600px.png&#34; alt=&#34;RSS-Bridge&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;RSS-Bridge is a PHP project capable of generating RSS and Atom feeds for websites that don&#39;t have one.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RSS-Bridge/rss-bridge/master/UNLICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-UNLICENSE-blue.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rss-bridge/rss-bridge/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/rss-bridge/rss-bridge.svg?logo=github&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://web.libera.chat/#rssbridge&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/irc.libera.chat-%23rssbridge-blue.svg?sanitize=true&#34; alt=&#34;irc.libera.chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#rssbridge:libera.chat&#34;&gt;&lt;img src=&#34;https://matrix.to/img/matrix-badge.svg?sanitize=true&#34; alt=&#34;Chat on Matrix&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/RSS-Bridge/rss-bridge/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/RSS-Bridge/rss-bridge/Tests/master?label=GitHub%20Actions&amp;amp;logo=github&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Screenshot of the Twitter bridge configuration:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/RSS-Bridge/rss-bridge/master/static/twitter-form.png?raw=true&#34; alt=&#34;Screenshot #1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Screenshot of the Twitter bridge for Rasmus Lerdorf:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/RSS-Bridge/rss-bridge/master/static/twitter-rasmus.png?raw=true&#34; alt=&#34;Screenshot #2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rss-bridge.github.io/rss-bridge/index.html&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out RSS-Bridge right now on &lt;a href=&#34;https://rss-bridge.org/bridge01&#34;&gt;https://rss-bridge.org/bridge01&lt;/a&gt; or find another &lt;a href=&#34;https://rss-bridge.github.io/rss-bridge/General/Public_Hosts.html&#34;&gt;public instance&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;h3&gt;Install with git:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /var/www&#xA;git clone https://github.com/RSS-Bridge/rss-bridge.git&#xA;&#xA;# Give the http user write permission to the cache folder&#xA;chown www-data:www-data /var/www/rss-bridge/cache&#xA;&#xA;# Optionally copy over the default config file&#xA;cp config.default.ini.php config.ini.php&#xA;&#xA;# Optionally copy over the default whitelist file&#xA;cp whitelist.default.txt whitelist.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example config for nginx:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;# /etc/nginx/sites-enabled/rssbridge&#xA;server {&#xA;    listen 80;&#xA;    # server_name example.com;&#xA;    root /var/www/rss-bridge;&#xA;    index index.php;&#xA;&#xA;    location ~ \.php$ {&#xA;        include snippets/fastcgi-php.conf;&#xA;        fastcgi_pass unix:/run/php/php-fpm.sock;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install with Docker:&lt;/h3&gt; &#xA;&lt;p&gt;Install by using docker image from Docker Hub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create container&#xA;docker create --name=rss-bridge --publish 3000:80 rssbridge/rss-bridge&#xA;&#xA;# Start container&#xA;docker start rss-bridge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Browse &lt;a href=&#34;http://localhost:3000/&#34;&gt;http://localhost:3000/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install by locally building the image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Build image from Dockerfile&#xA;docker build -t rss-bridge .&#xA;&#xA;# Create container&#xA;docker create --name rss-bridge --publish 3000:80 rss-bridge&#xA;&#xA;# Start the container&#xA;docker start rss-bridge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Browse &lt;a href=&#34;http://localhost:3000/&#34;&gt;http://localhost:3000/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alternative installation methods&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://my.scalingo.com/deploy?source=https://github.com/sebsauvage/rss-bridge&#34;&gt;&lt;img src=&#34;https://cdn.scalingo.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy on Scalingo&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://heroku.com/deploy&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy to Heroku&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.cloudron.io/store/com.rssbridgeapp.cloudronapp.html&#34;&gt;&lt;img src=&#34;https://cloudron.io/img/button.svg?sanitize=true&#34; alt=&#34;Deploy to Cloudron&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Heroku quick deploy currently does not work. It might possibly work if you fork this repo and modify the &lt;code&gt;repository&lt;/code&gt; in &lt;code&gt;scalingo.json&lt;/code&gt;. See &lt;a href=&#34;https://github.com/RSS-Bridge/rss-bridge/issues/2688&#34;&gt;https://github.com/RSS-Bridge/rss-bridge/issues/2688&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Learn more in &lt;a href=&#34;https://rss-bridge.github.io/rss-bridge/For_Hosts/Installation.html&#34;&gt;Installation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Create a bridge&lt;/h3&gt; &#xA;&lt;p&gt;Create the new bridge in &lt;code&gt;bridges/ExecuteBridge.php&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;class ExecuteBridge extends BridgeAbstract&#xA;{&#xA;    const NAME = &#39;Execute Program Blog&#39;;&#xA;&#xA;    public function collectData()&#xA;    {&#xA;        $url = &#39;https://www.executeprogram.com/api/pages/blog&#39;;&#xA;        $data = json_decode(getContents($url));&#xA;&#xA;        foreach ($data-&amp;gt;posts as $post) {&#xA;            $this-&amp;gt;items[] = [&#xA;                &#39;uri&#39;       =&amp;gt; sprintf(&#39;https://www.executeprogram.com/blog/%s&#39;, $post-&amp;gt;slug),&#xA;                &#39;title&#39;     =&amp;gt; $post-&amp;gt;title,&#xA;                &#39;content&#39;   =&amp;gt; $post-&amp;gt;body,&#xA;            ];&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Learn more in &lt;a href=&#34;https://rss-bridge.github.io/rss-bridge/Bridge_API/index.html&#34;&gt;bridge api&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How-to&lt;/h2&gt; &#xA;&lt;h3&gt;How to enable all bridges&lt;/h3&gt; &#xA;&lt;p&gt;Write an asterisks in &lt;code&gt;whitelist.txt&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo &#39;*&#39; &amp;gt; whitelist.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Learn more in &lt;a href=&#34;https://rss-bridge.github.io/rss-bridge/For_Hosts/Whitelisting.html&#34;&gt;enabling briges&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How to enable a bridge&lt;/h3&gt; &#xA;&lt;p&gt;Add the bridge name to &lt;code&gt;whitelist.txt&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo &#39;FirefoxAddonsBridge&#39; &amp;gt;&amp;gt; whitelist.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to enable debug mode&lt;/h3&gt; &#xA;&lt;p&gt;Create a file named &lt;code&gt;DEBUG&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;touch DEBUG&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Learn more in &lt;a href=&#34;https://rss-bridge.github.io/rss-bridge/For_Developers/Debug_mode.html&#34;&gt;debug mode&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How to create a new output format&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rss-bridge.github.io/rss-bridge/Format_API/index.html&#34;&gt;Create a new format&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Explanation&lt;/h2&gt; &#xA;&lt;p&gt;We are RSS-Bridge community, a group of developers continuing the project initiated by sebsauvage, webmaster of &lt;a href=&#34;https://sebsauvage.net&#34;&gt;sebsauvage.net&lt;/a&gt;, author of &lt;a href=&#34;https://sebsauvage.net/wiki/doku.php?id=php:shaarli&#34;&gt;Shaarli&lt;/a&gt; and &lt;a href=&#34;https://sebsauvage.net/wiki/doku.php?id=php:zerobin&#34;&gt;ZeroBin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/RSS-Bridge/rss-bridge/master/CONTRIBUTORS.md&#34;&gt;CONTRIBUTORS.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RSS-Bridge uses caching to prevent services from banning your server for repeatedly updating feeds. The specific cache duration can be different between bridges. Cached files are deleted automatically after 24 hours.&lt;/p&gt; &#xA;&lt;p&gt;RSS-Bridge allows you to take full control over which bridges are displayed to the user. That way you can host your own RSS-Bridge service with your favorite collection of bridges!&lt;/p&gt; &#xA;&lt;p&gt;Supported output formats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Atom&lt;/code&gt; : Atom feed, for use in feed readers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Html&lt;/code&gt; : Simple HTML page&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Json&lt;/code&gt; : JSON, for consumption by other applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Mrss&lt;/code&gt; : MRSS feed, for use in feed readers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Plaintext&lt;/code&gt; : Raw text, for consumption by other applications&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;h3&gt;A selection of bridges&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Bandcamp&lt;/code&gt; : Returns last release from &lt;a href=&#34;https://bandcamp.com/&#34;&gt;bandcamp&lt;/a&gt; for a tag&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Cryptome&lt;/code&gt; : Returns the most recent documents from &lt;a href=&#34;https://cryptome.org/&#34;&gt;Cryptome.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DansTonChat&lt;/code&gt;: Most recent quotes from &lt;a href=&#34;https://danstonchat.com/&#34;&gt;danstonchat.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DuckDuckGo&lt;/code&gt;: Most recent results from &lt;a href=&#34;https://duckduckgo.com/&#34;&gt;DuckDuckGo.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Facebook&lt;/code&gt; : Returns the latest posts on a page or profile on &lt;a href=&#34;https://facebook.com/&#34;&gt;Facebook&lt;/a&gt; (There is an &lt;a href=&#34;https://github.com/RSS-Bridge/rss-bridge/issues/2047&#34;&gt;issue&lt;/a&gt; for public instances)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FlickrExplore&lt;/code&gt; : &lt;a href=&#34;https://www.flickr.com/explore&#34;&gt;Latest interesting images&lt;/a&gt; from Flickr&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GoogleSearch&lt;/code&gt; : Most recent results from Google Search&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Identi.ca&lt;/code&gt; : Identica user timeline (Should be compatible with other Pump.io instances)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Instagram&lt;/code&gt;: Most recent photos from an Instagram user (It is recommended to &lt;a href=&#34;https://rss-bridge.github.io/rss-bridge/Bridge_Specific/Instagram.html&#34;&gt;configure&lt;/a&gt; this bridge to work)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;OpenClassrooms&lt;/code&gt;: Lastest tutorials from &lt;a href=&#34;https://openclassrooms.com/&#34;&gt;openclassrooms.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Pinterest&lt;/code&gt;: Most recent photos from user or search&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ScmbBridge&lt;/code&gt;: Newest stories from &lt;a href=&#34;https://secouchermoinsbete.fr/&#34;&gt;secouchermoinsbete.fr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ThePirateBay&lt;/code&gt; : Returns the newest indexed torrents from &lt;a href=&#34;https://thepiratebay.se/&#34;&gt;The Pirate Bay&lt;/a&gt; with keywords&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Twitter&lt;/code&gt; : Return keyword/hashtag search or user timeline&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Wikipedia&lt;/code&gt;: highlighted articles from &lt;a href=&#34;https://wikipedia.org/&#34;&gt;Wikipedia&lt;/a&gt; in English, German, French or Esperanto&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;YouTube&lt;/code&gt; : YouTube user channel, playlist or search&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And &lt;a href=&#34;https://raw.githubusercontent.com/RSS-Bridge/rss-bridge/master/bridges/&#34;&gt;many more&lt;/a&gt;, thanks to the community!&lt;/p&gt; &#xA;&lt;h3&gt;Licenses&lt;/h3&gt; &#xA;&lt;p&gt;The source code for RSS-Bridge is &lt;a href=&#34;https://raw.githubusercontent.com/RSS-Bridge/rss-bridge/master/UNLICENSE&#34;&gt;Public Domain&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;RSS-Bridge uses third party libraries with their own license:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/erusev/parsedown&#34;&gt;&lt;code&gt;Parsedown&lt;/code&gt;&lt;/a&gt; licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://simplehtmldom.sourceforge.io/docs/1.9/index.html&#34;&gt;&lt;code&gt;PHP Simple HTML DOM Parser&lt;/code&gt;&lt;/a&gt; licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fluffy-critter/php-urljoin&#34;&gt;&lt;code&gt;php-urljoin&lt;/code&gt;&lt;/a&gt; licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/laravel/framework/&#34;&gt;&lt;code&gt;Laravel framework&lt;/code&gt;&lt;/a&gt; licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Rant&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Dear so-called &#34;social&#34; websites.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Your catchword is &#34;share&#34;, but you don&#39;t want us to share. You want to keep us within your walled gardens. That&#39;s why you&#39;ve been removing RSS links from webpages, hiding them deep on your website, or removed feeds entirely, replacing it with crippled or demented proprietary API. &lt;strong&gt;FUCK YOU.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You&#39;re not social when you hamper sharing by removing feeds. You&#39;re happy to have customers creating content for your ecosystem, but you don&#39;t want this content out - a content you do not even own. Google Takeout is just a gimmick. We want our data to flow, we want RSS or Atom feeds.&lt;/p&gt; &#xA;&lt;p&gt;We want to share with friends, using open protocols: RSS, Atom, XMPP, whatever. Because no one wants to have &lt;em&gt;your&lt;/em&gt; service with &lt;em&gt;your&lt;/em&gt; applications using &lt;em&gt;your&lt;/em&gt; API force-feeding them. Friends must be free to choose whatever software and service they want.&lt;/p&gt; &#xA;&lt;p&gt;We are rebuilding bridges you have willfully destroyed.&lt;/p&gt; &#xA;&lt;p&gt;Get your shit together: Put RSS/Atom back in.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>crater-invoice/crater</title>
    <updated>2022-08-21T02:04:28Z</updated>
    <id>tag:github.com,2022-08-21:/crater-invoice/crater</id>
    <link href="https://github.com/crater-invoice/crater" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source Invoicing Solution for Individuals &amp; Businesses&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://res.cloudinary.com/bytefury/image/upload/v1574149856/Crater/craterframe.png&#34;&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Crater is an open-source web &amp;amp; mobile app that helps you track expenses, payments &amp;amp; create professional invoices &amp;amp; estimates.&lt;/p&gt; &#xA;&lt;p&gt;Web Application is made using Laravel &amp;amp; VueJS while the Mobile Apps are built using React Native.&lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crater-invoice/crater/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crater-invoice/crater/master/#download&#34;&gt;Download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crater-invoice/crater/master/#mobile-apps&#34;&gt;Mobile Apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crater-invoice/crater/master/#discord&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crater-invoice/crater/master/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crater-invoice/crater/master/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crater-invoice/crater/master/#translate&#34;&gt;Help us translate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crater-invoice/crater/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.craterapp.com/installation.html&#34;&gt;Installation Steps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.craterapp.com/&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.craterapp.com/developer-guide.html&#34;&gt;Developer Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api-docs.craterapp.com&#34;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://craterapp.com/downloads&#34;&gt;Download Link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mobile Apps&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.craterapp.app&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/app/id1489169767&#34;&gt;IOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bytefury/crater-mobile&#34;&gt;Source&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Discord&lt;/h2&gt; &#xA;&lt;p&gt;Join the Crater discord server to discuss: &lt;a href=&#34;https://discord.gg/nyTstm6&#34;&gt;Invite Link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;~~Here&#39;s a rough roadmap of things to come (not in any specific order):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatic Update&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Email Configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Installation Wizard&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Address Customisation &amp;amp; Default notes&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Edit Email before Sending Invoice&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Available as a docker image&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Performance Improvements&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Customer View page&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add and Use Custom Fields on Invoices &amp;amp; Estimates.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multiple Companies&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Recurring Invoices&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Customer Portal&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Accept Payments (Stripe Integration)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; White Labeling (Easy Invoice, Email &amp;amp; Consumer Portal Theme customisation)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Modules API&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Blockchain Integration&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Web 3.0 Accounting&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Vendors &amp;amp; Bills&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Inventory Management&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Payment Reminders&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Improve Accessibility&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Debit &amp;amp; Credit Notes&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Time Tracking&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Full service Payroll&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;© 2022 Crater Invoice, Inc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Special thanks to:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BirkhoffLee&#34;&gt;Birkhoff Lee&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akaunting/akaunting&#34;&gt;Akaunting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MakerLab-Dev&#34;&gt;MakerLab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sebastiancretu&#34;&gt;Sebastian Cretu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TheZoker&#34;&gt;Florian Gareis&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translate&lt;/h2&gt; &#xA;&lt;p&gt;Help us translate on &lt;a href=&#34;https://crowdin.com/project/crater-invoice&#34;&gt;https://crowdin.com/project/crater-invoice&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Thanks to Translation Contributors:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hsnapps&#34;&gt;Hassan A. Ba Abdullah (Arabic)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PHClement&#34;&gt;Clément de Louvencourt (French)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RobinDev&#34;&gt;Robin Delattre (French)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Loosie94&#34;&gt;René Loos (Dutch)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/azaricstefan&#34;&gt;Stefan Azarić (Serbian)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rexlManu&#34;&gt;Emmanuel Lampe (German)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edevrob&#34;&gt;edevrob (Latvian)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Crater is released under the GNU AFFERO GENERAL PUBLIC LICENSE Version 3. See &lt;a href=&#34;https://raw.githubusercontent.com/crater-invoice/crater/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
</feed>