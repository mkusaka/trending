<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-30T01:43:56Z</updated>
  <subtitle>Weekly Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bezhanSalleh/filament-shield</title>
    <updated>2024-06-30T01:43:56Z</updated>
    <id>tag:github.com,2024-06-30:/bezhanSalleh/filament-shield</id>
    <link href="https://github.com/bezhanSalleh/filament-shield" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The easiest and most intuitive way to add access management to your Filament Admin Resources, Pages &amp; Widgets through `spatie/laravel-permission`&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://github.com/bezhansalleh/filament-shield&#34; class=&#34;filament-hidden&#34;&gt; &lt;img style=&#34;width: 100%; max-width: 100%;&#34; alt=&#34;filament-shield-art&#34; src=&#34;https://user-images.githubusercontent.com/10007504/148662315-35d4bd74-fc1c-4f8c-8c02-689309b414b0.png&#34;&gt; &lt;/a&gt; &#xA;&lt;p align=&#34;center&#34; class=&#34;flex items-center justify-center&#34;&gt; &lt;a href=&#34;https://filamentadmin.com/docs/2.x/admin/installation&#34;&gt; &lt;img alt=&#34;FILAMENT 8.x&#34; src=&#34;https://img.shields.io/badge/FILAMENT-3.x-EBB304?style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/bezhansalleh/filament-shield&#34;&gt; &lt;img alt=&#34;Packagist&#34; src=&#34;https://img.shields.io/packagist/v/bezhansalleh/filament-shield.svg?style=for-the-badge&amp;amp;logo=packagist&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/bezhansalleh/filament-shield/actions?query=workflow%3Arun-tests+branch%3A3.x&#34;&gt; &lt;img alt=&#34;Tests Passing&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/bezhansalleh/filament-shield/run-tests.yml?style=for-the-badge&amp;amp;logo=github&amp;amp;label=tests&#34; class=&#34;filament-hidden&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/bezhansalleh/filament-shield/actions?query=workflow%3A&#34; check+%26+fix+styling&#34;+branch%3a3.x&#34; class=&#34;filament-hidden&#34;&gt; &lt;img alt=&#34;Code Style Passing&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/bezhansalleh/filament-shield/laravel-pint.yml?style=for-the-badge&amp;amp;logo=github&amp;amp;label=code%20style&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/bezhansalleh/filament-shield&#34;&gt; &lt;img alt=&#34;Downloads&#34; src=&#34;https://img.shields.io/packagist/dt/bezhansalleh/filament-shield.svg?style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Shield&lt;/h1&gt; &#xA;&lt;p&gt;The easiest and most intuitive way to add access management to your Filament Admin:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;🔥&lt;/span&gt; &lt;strong&gt;Resources&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔥&lt;/span&gt; &lt;strong&gt;Pages&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔥&lt;/span&gt; &lt;strong&gt;Widgets&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔥&lt;/span&gt; &lt;strong&gt;Custom Permissions&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] For &lt;strong&gt;Filament 2.x&lt;/strong&gt; use &lt;strong&gt;&lt;a href=&#34;https://github.com/bezhanSalleh/filament-shield/tree/2.x&#34;&gt;2.x&lt;/a&gt;&lt;/strong&gt; branch&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Prior to &lt;code&gt;v3.1.0&lt;/code&gt; Shield supported &lt;a href=&#34;https://packagist.org/packages/spatie/laravel-permission&#34;&gt;spatie/laravel-permission&lt;/a&gt;:&lt;code&gt;^5.0&lt;/code&gt; and now it supports version &lt;code&gt;^6.0&lt;/code&gt;. Which has some breaking changes around migrations. If you are upgrading from a version prior to &lt;code&gt;v3.1.0&lt;/code&gt; please make sure to remove the old migration file and republish the new one.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the package via composer:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require bezhansalleh/filament-shield&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add the &lt;code&gt;Spatie\Permission\Traits\HasRoles&lt;/code&gt; trait to your User model(s):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Illuminate\Foundation\Auth\User as Authenticatable;&#xA;use Spatie\Permission\Traits\HasRoles;&#xA;&#xA;class User extends Authenticatable&#xA;{&#xA;    use HasRoles;&#xA;&#xA;    // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Publish the &lt;code&gt;config&lt;/code&gt; file then setup your configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=filament-shield-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Register the plugin for the Filament Panels you want&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function panel(Panel $panel): Panel&#xA;{&#xA;    return $panel&#xA;        -&amp;gt;plugins([&#xA;            \BezhanSalleh\FilamentShield\FilamentShieldPlugin::make()&#xA;        ]);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Now run the following command to install shield:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan shield:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Follow the prompts and enjoy!&lt;/p&gt; &#xA;&lt;h2&gt;Filament Panels&lt;/h2&gt; &#xA;&lt;p&gt;If you want to enable &lt;code&gt;Shield&lt;/code&gt; for more than one panel then you need to register the plugin for each panel as mentioned above.&lt;/p&gt; &#xA;&lt;h3&gt;Panel Access&lt;/h3&gt; &#xA;&lt;p&gt;Shield comes with the &lt;code&gt;HasPanelShield&lt;/code&gt; trait which provides an easy way to integrate Shield&#39;s conventions with the Filament&#39;s panel access system.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;HasPanelShield&lt;/code&gt; trait provides an implementation for the &lt;code&gt;canAccessPanel&lt;/code&gt; method, determining access based on whether the user possesses the &lt;code&gt;super_admin&lt;/code&gt; role or the &lt;code&gt;panel_user&lt;/code&gt; role. It also assigns the &lt;code&gt;panel_user&lt;/code&gt; role to the user upon creation and removes it upon deletion. Ofcourse the role names can be changed from the plugin&#39;s configuration file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use BezhanSalleh\FilamentShield\Traits\HasPanelShield;&#xA;use Filament\Models\Contracts\FilamentUser;&#xA;use Illuminate\Foundation\Auth\User as Authenticatable;&#xA;use Spatie\Permission\Traits\HasRoles;&#xA;&#xA;class User extends Authenticatable implements FilamentUser&#xA;{&#xA;    use HasRoles;&#xA;    use HasPanelShield;&#xA;    // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Resources&lt;/h4&gt; &#xA;&lt;p&gt;Generally there are two scenarios that shield handles permissions for your &lt;code&gt;Filament&lt;/code&gt; resources.&lt;/p&gt; &#xA;&lt;h5&gt;Default&lt;/h5&gt; &#xA;&lt;p&gt;Out of the box &lt;code&gt;Shield&lt;/code&gt; handles the predefined permissions for &lt;code&gt;Filament&lt;/code&gt; resources. So if that&#39;s all that you need you are all set. If you need to add a single permission (for instance &lt;code&gt;lock&lt;/code&gt;) and have it available for all your resources just append it to the following &lt;code&gt;config&lt;/code&gt; key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    permission_prefixes&#39; =&amp;gt; [&#xA;        &#39;resource&#39; =&amp;gt; [&#xA;            &#39;view&#39;,&#xA;            &#39;view_any&#39;,&#xA;            &#39;create&#39;,&#xA;            &#39;update&#39;,&#xA;            &#39;restore&#39;,&#xA;            &#39;restore_any&#39;,&#xA;            &#39;replicate&#39;,&#xA;            &#39;reorder&#39;,&#xA;            &#39;delete&#39;,&#xA;            &#39;delete_any&#39;,&#xA;            &#39;force_delete&#39;,&#xA;            &#39;force_delete_any&#39;,&#xA;            &#39;lock&#39;&#xA;        ],&#xA;        ...&#xA;    ],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;💡&lt;/span&gt; Now you are thinking &lt;strong&gt;&lt;code&gt;what if I need a permission to be only available for just one resource?&lt;/code&gt;&lt;/strong&gt; No worries, that&#39;s where &lt;a href=&#34;https://raw.githubusercontent.com/bezhanSalleh/filament-shield/3.x/#custom-permissions&#34;&gt;Custom Permissions&lt;/a&gt; come to play.&lt;/p&gt; &#xA;&lt;h5&gt;Custom Permissions&lt;/h5&gt; &#xA;&lt;p&gt;To define custom permissions per &lt;code&gt;Resource&lt;/code&gt; your &lt;code&gt;Resource&lt;/code&gt; must implement the &lt;code&gt;HasShieldPermissions&lt;/code&gt; contract. This contract has a &lt;code&gt;getPermissionPrefixes()&lt;/code&gt; method which returns an array of permission prefixes for your &lt;code&gt;Resource&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Consider you have a &lt;code&gt;PostResource&lt;/code&gt; and you want a couple of the predefined permissions plus a new permission called &lt;code&gt;publish_posts&lt;/code&gt; to be only available for &lt;code&gt;PostResource&lt;/code&gt; only.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace BezhanSalleh\FilamentShield\Resources;&#xA;&#xA;use BezhanSalleh\FilamentShield\Contracts\HasShieldPermissions;&#xA;...&#xA;&#xA;class PostResource extends Resource implements HasShieldPermissions&#xA;{&#xA;    ...&#xA;&#xA;    public static function getPermissionPrefixes(): array&#xA;    {&#xA;        return [&#xA;            &#39;view&#39;,&#xA;            &#39;view_any&#39;,&#xA;            &#39;create&#39;,&#xA;            &#39;update&#39;,&#xA;            &#39;delete&#39;,&#xA;            &#39;delete_any&#39;,&#xA;            &#39;publish&#39;&#xA;        ];&#xA;    }&#xA;&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the above example the &lt;code&gt;getPermissionPrefixes()&lt;/code&gt; method returns the permission prefixes &lt;code&gt;Shield&lt;/code&gt; needs to generate the permissions.&lt;/p&gt; &#xA;&lt;p&gt;✅ Now to enforce &lt;code&gt;publish_post&lt;/code&gt; permission headover to your &lt;code&gt;PostPolicy&lt;/code&gt; and add a &lt;code&gt;publish()&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    /**&#xA;     * Determine whether the user can publish posts.&#xA;     *&#xA;     * @param  \App\Models\User  $admin&#xA;     * @return \Illuminate\Auth\Access\Response|bool&#xA;     */&#xA;    public function publish(User $user)&#xA;    {&#xA;        return $user-&amp;gt;can(&#39;publish_post&#39;);&#xA;    } &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;🅰️/🈯️ To make the prefix translatable, publish &lt;code&gt;Shield&lt;/code&gt;&#39;s translations and append the prefix inside &lt;code&gt;resource_permission_prefixes_labels&lt;/code&gt; as key and it&#39;s translation as value for the languages you need.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;//lang/en/filament-shield.php&#xA;&#39;resource_permission_prefixes_labels&#39; =&amp;gt; [&#xA;    &#39;publish&#39; =&amp;gt; &#39;Publish&#39;    &#xA;],&#xA;//lang/es/filament-shield.php&#xA;&#39;resource_permission_prefixes_labels&#39; =&amp;gt; [&#xA;    &#39;publish&#39; =&amp;gt; &#39;Publicar&#39;    &#xA;],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Configure Permission Identifier&lt;/h5&gt; &#xA;&lt;p&gt;By default the permission identifier is generated as follow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Str::of($resource)&#xA;    -&amp;gt;afterLast(&#39;Resources\\&#39;)&#xA;    -&amp;gt;before(&#39;Resource&#39;)&#xA;    -&amp;gt;replace(&#39;\\&#39;, &#39;&#39;)&#xA;    -&amp;gt;snake()&#xA;    -&amp;gt;replace(&#39;_&#39;, &#39;::&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So for instance if you have a resource like &lt;code&gt;App\Filament\Resources\Shop\CategoryResource&lt;/code&gt; then the permission identifier would be &lt;code&gt;shop::category&lt;/code&gt; and then it would be prefixed with your defined prefixes or what comes default with shield.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to change the default behaviour, then you can call the static &lt;code&gt;configurePermissionIdentifierUsing()&lt;/code&gt; method inside a service provider&#39;s &lt;code&gt;boot()&lt;/code&gt; method, to which you pass a Closure to modify the logic. The Closure receives the fully qualified class name of the resource as &lt;code&gt;$resource&lt;/code&gt; which gives you the ability to access any property or method defined within the resource.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you wish to use the model name as the permission identifier, you can do it like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use BezhanSalleh\FilamentShield\Facades\FilamentShield;&#xA;&#xA;FilamentShield::configurePermissionIdentifierUsing(&#xA;    fn($resource) =&amp;gt; str($resource::getModel())&#xA;        -&amp;gt;afterLast(&#39;\\&#39;)&#xA;        -&amp;gt;lower()&#xA;        -&amp;gt;toString()&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; Keep in mind that ensuring the uniqueness of the permission identifier is now up to you.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h5&gt;Custom Navigation Group&lt;/h5&gt; &#xA;&lt;p&gt;By default the english translation renders Roles and Permissions under &#39;Filament Shield&#39; if you wish to change this, first publish the &lt;a href=&#34;https://raw.githubusercontent.com/bezhanSalleh/filament-shield/3.x/#translations&#34;&gt;translations files&lt;/a&gt; and change the relative locale to the group of your choosing for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&#39;nav.group&#39; =&amp;gt; &#39;Filament Shield&#39;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&#39;nav.group&#39; =&amp;gt; &#39;User Management&#39;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;apply this to each language you have groups in.&lt;/p&gt; &#xA;&lt;h4&gt;Pages&lt;/h4&gt; &#xA;&lt;p&gt;If you have generated permissions for &lt;code&gt;Pages&lt;/code&gt; you can toggle the page&#39;s navigation from sidebar and restricted access to the page. You can set this up manually but this package comes with a &lt;code&gt;HasPageShield&lt;/code&gt; trait to speed up this process. All you have to do is use the trait in you pages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace App\Filament\Pages;&#xA;&#xA;use ...;&#xA;use BezhanSalleh\FilamentShield\Traits\HasPageShield;&#xA;&#xA;class MyPage extends Page&#xA;{&#xA;    use HasPageShield;&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;📕 &lt;b style=&#34;color:darkred&#34;&gt;&lt;code&gt;HasPageShield&lt;/code&gt; uses the &lt;code&gt;booted&lt;/code&gt; method to check the user&#39;s permissions and makes sure to execute the &lt;code&gt;booted&lt;/code&gt; page method in the parent page if exists.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h6&gt;Pages Hooks&lt;/h6&gt; &#xA;&lt;p&gt;However if you need to perform some methods before and after the booted method you can declare the next hooks methods in your filament page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace App\Filament\Pages;&#xA;&#xA;use ...;&#xA;use BezhanSalleh\FilamentShield\Traits\HasPageShield;&#xA;&#xA;class MyPage extends Page&#xA;{&#xA;    use HasPageShield;&#xA;    ...&#xA;&#xA;    protected function beforeBooted : void() {&#xA;        ...&#xA;    }&#xA;&#xA;    protected function afterBooted : void() {&#xA;        ...&#xA;    }&#xA;&#xA;    /**&#xA;     * Hook to perform an action before redirect if the user&#xA;     * doesn&#39;t have access to the page.  &#xA;     * */&#xA;    protected function beforeShieldRedirects : void() {&#xA;        ...&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Pages Redirect Path&lt;/h6&gt; &#xA;&lt;p&gt;&lt;code&gt;HasPageShield&lt;/code&gt; uses the &lt;code&gt;config(&#39;filament.path&#39;)&lt;/code&gt; value by default to perform the shield redirection. If you need to overwrite the rediretion path, just add the next method to your page:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace App\Filament\Pages;&#xA;&#xA;use ...;&#xA;use BezhanSalleh\FilamentShield\Traits\HasPageShield;&#xA;&#xA;class MyPage extends Page&#xA;{&#xA;    use HasPageShield;&#xA;    ...&#xA;&#xA;    protected function getShieldRedirectPath(): string {&#xA;        return &#39;/&#39;; // redirect to the root index...&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Widgets&lt;/h4&gt; &#xA;&lt;p&gt;if you have generated permissions for &lt;code&gt;Widgets&lt;/code&gt; you can toggle their state based on whether a user have permission or not. You can set this up manually but this package comes with a &lt;code&gt;HasWidgetShield&lt;/code&gt; trait to speed up this process. All you have to do is use the trait in you widgets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace App\Filament\Widgets;&#xA;&#xA;use ...;&#xA;use BezhanSalleh\FilamentShield\Traits\HasWidgetShield;&#xA;&#xA;class IncomeWidget extends LineChartWidget&#xA;{&#xA;    use HasWidgetShield;&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Policies&lt;/h3&gt; &#xA;&lt;h4&gt;Role Policy&lt;/h4&gt; &#xA;&lt;p&gt;To ensure &lt;code&gt;RoleResource&lt;/code&gt; access via &lt;code&gt;RolePolicy&lt;/code&gt; you would need to add the following to your &lt;code&gt;AuthServiceProvider&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;//AuthServiceProvider.php&#xA;...&#xA;protected $policies = [&#xA;    &#39;Spatie\Permission\Models\Role&#39; =&amp;gt; &#39;App\Policies\RolePolicy&#39;,&#xA;];&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;You can skip it if you have enabled it from the &lt;code&gt;config&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// config/filament-shield.php&#xA;...&#xA;&#xA;&#39;register_role_policy&#39; =&amp;gt; [&#xA;    &#39;enabled&#39; =&amp;gt; true,&#xA;],&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Policy Path&lt;/h4&gt; &#xA;&lt;p&gt;If your policies are not in the default &lt;code&gt;Policies&lt;/code&gt; directory in the &lt;code&gt;app_path()&lt;/code&gt; you can change the directory name in the config file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;...&#xA;&#39;generator&#39; =&amp;gt; [&#xA;    &#39;option&#39; =&amp;gt; &#39;policies_and_permissions&#39;,&#xA;    &#39;policy_directory&#39; =&amp;gt; &#39;Policies&#39;,&#xA;],&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Custom folder structure for Models or Third-Party Plugins&lt;/h4&gt; &#xA;&lt;p&gt;Shield also generates policies and permissions for third-party plugins and &lt;code&gt;Models&lt;/code&gt; with custom folder structure and to enforce the generated policies you will need to register them in your application&#39;s &lt;code&gt;AuthServiceProvider&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;...&#xA;class AuthServiceProvider extends ServiceProvider&#xA;{&#xA;    ...&#xA;    protected $policies = [&#xA;        ...,&#xA;        &#39;App\Models\Blog\Author&#39; =&amp;gt; &#39;App\Policies\Blog\AuthorPolicy&#39;,&#xA;        &#39;Ramnzys\FilamentEmailLog\Models\Email&#39; =&amp;gt; &#39;App\Policies\EmailPolicy&#39;&#xA;&#xA;    ];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Users (Assigning Roles to Users)&lt;/h4&gt; &#xA;&lt;p&gt;Shield does not come with a way to assign roles to your users out of the box, however you can easily assign roles to your users using Filament &lt;code&gt;Forms&lt;/code&gt;&#39;s &lt;code&gt;Select&lt;/code&gt; or &lt;code&gt;CheckboxList&lt;/code&gt; component. Inside your users &lt;code&gt;Resource&lt;/code&gt;&#39;s form add one of these components and configure them as you need:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// Using Select Component&#xA;Forms\Components\Select::make(&#39;roles&#39;)&#xA;    -&amp;gt;relationship(&#39;roles&#39;, &#39;name&#39;)&#xA;    -&amp;gt;multiple()&#xA;    -&amp;gt;preload()&#xA;    -&amp;gt;searchable()&#xA;                    &#xA;// Using CheckboxList Component&#xA;Forms\Components\CheckboxList::make(&#39;roles&#39;)&#xA;    -&amp;gt;relationship(&#39;roles&#39;, &#39;name&#39;)&#xA;    -&amp;gt;searchable()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find out more about these components in the &lt;a href=&#34;https://filamentphp.com/docs/3.x/forms/installation&#34;&gt;Filament Docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://filamentphp.com/docs/3.x/forms/fields/select&#34;&gt;Select&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://filamentphp.com/docs/3.x/forms/fields/checkbox-list&#34;&gt;CheckboxList&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Layout Customization&lt;/h4&gt; &#xA;&lt;p&gt;You can easily customize the &lt;code&gt;Grid&lt;/code&gt;, &lt;code&gt;Section&lt;/code&gt; and &lt;code&gt;CheckboxList&lt;/code&gt;&#39;s &lt;code&gt;columns()&lt;/code&gt; and &lt;code&gt;columnSpan()&lt;/code&gt; without publishing the resource.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use BezhanSalleh\FilamentShield\FilamentShieldPlugin;&#xA;&#xA;public function panel(Panel $panel): Panel&#xA;{&#xA;        return $panel&#xA;            ...&#xA;            ...&#xA;            -&amp;gt;plugins([&#xA;                FilamentShieldPlugin::make()&#xA;                    -&amp;gt;gridColumns([&#xA;                        &#39;default&#39; =&amp;gt; 1,&#xA;                        &#39;sm&#39; =&amp;gt; 2,&#xA;                        &#39;lg&#39; =&amp;gt; 3&#xA;                    ])&#xA;                    -&amp;gt;sectionColumnSpan(1)&#xA;                    -&amp;gt;checkboxListColumns([&#xA;                        &#39;default&#39; =&amp;gt; 1,&#xA;                        &#39;sm&#39; =&amp;gt; 2,&#xA;                        &#39;lg&#39; =&amp;gt; 4,&#xA;                    ])&#xA;                    -&amp;gt;resourceCheckboxListColumns([&#xA;                        &#39;default&#39; =&amp;gt; 1,&#xA;                        &#39;sm&#39; =&amp;gt; 2,&#xA;                    ]),&#xA;            ]);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;1161&#34; alt=&#34;Screenshot 2023-09-24 at 10 34 31 PM&#34; src=&#34;https://github.com/bezhanSalleh/filament-shield/assets/10007504/be42bab2-72d1-4db0-8de4-8b8fba2d4e68&#34;&gt; &#xA;&lt;h4&gt;Translations&lt;/h4&gt; &#xA;&lt;p&gt;Publish the translations using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=&#34;filament-shield-translations&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Available Filament Shield Commands&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;code&gt;shield:doctor&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Show useful info about Filament Shield.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;shield:install&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Setup Core Package requirements and Install Shield. Accepts the following flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--fresh&lt;/code&gt; re-run the migrations&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--only&lt;/code&gt; Only setups shield without generating permissions and creating super-admin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;shield:generate&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate Permissions and/or Policies for Filament entities. Accepts the following flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--all&lt;/code&gt; Generate permissions/policies for all entities&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--option[=OPTION]&lt;/code&gt; Override the config generator option(&lt;code&gt;policies_and_permissions&lt;/code&gt;,&lt;code&gt;policies&lt;/code&gt;,&lt;code&gt;permissions&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--resource[=RESOURCE]&lt;/code&gt; One or many resources separated by comma (,)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--page[=PAGE]&lt;/code&gt; One or many pages separated by comma (,)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--widget[=WIDGET]&lt;/code&gt; One or many widgets separated by comma (,)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--exclude&lt;/code&gt; Exclude the given entities during generation&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ignore-config-exclude&lt;/code&gt; Ignore config &lt;code&gt;exclude&lt;/code&gt; option during generation&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ignore-existing-policies&lt;/code&gt; Do not overwrite the existing policies.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;shield:super-admin&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Create a user with super_admin role.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Accepts an &lt;code&gt;--user=&lt;/code&gt; argument that will use the provided ID to find the user to be made super admin.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;shield:publish&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Publish the Shield &lt;code&gt;RoleResource&lt;/code&gt; and customize it however you like&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;shield:seeder&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Deploy easily by setting up your roles and permissions or add your custom seeds&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/bezhanSalleh/filament-shield/3.x/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/bezhanSalleh/filament-shield/3.x/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please review &lt;a href=&#34;https://raw.githubusercontent.com/bezhanSalleh/security/policy&#34;&gt;our security policy&lt;/a&gt; on how to report security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bezhanSalleh&#34;&gt;Bezhan Salleh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bezhanSalleh/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/bezhanSalleh/filament-shield/3.x/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>