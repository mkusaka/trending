<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-07T02:01:04Z</updated>
  <subtitle>Weekly Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>shlinkio/shlink</title>
    <updated>2024-04-07T02:01:04Z</updated>
    <id>tag:github.com,2024-04-07:/shlinkio/shlink</id>
    <link href="https://github.com/shlinkio/shlink" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The definitive self-hosted URL shortener&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shlinkio/shlink.io/main/public/images/shlink-hero.png&#34; alt=&#34;Shlink&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shlinkio/shlink/actions/workflows/ci.yml?query=workflow%3A%22Continuous+integration%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/shlinkio/shlink/ci.yml?branch=develop&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/shlinkio/shlink&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/gh/shlinkio/shlink/develop?style=flat-square&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/shlinkio/shlink&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/shlinkio/shlink.svg?style=flat-square&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/shlinkio/shlink/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/shlinkio/shlink.svg?logo=docker&amp;amp;style=flat-square&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/shlinkio/shlink/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/shlinkio/shlink.svg?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fosstodon.org/@shlinkio&#34;&gt;&lt;img src=&#34;https://img.shields.io/mastodon/follow/109329425426175098?color=%236364ff&amp;amp;domain=https%3A%2F%2Ffosstodon.org&amp;amp;label=follow&amp;amp;logo=mastodon&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;Mastodon&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bsky.app/profile/shlinkio.bsky.social&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/follow-shlinkio-0285FF.svg?style=flat-square&amp;amp;logo=bluesky&amp;amp;logoColor=white&#34; alt=&#34;Bluesky&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/shlinkio&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/follow-shlinkio-blue.svg?style=flat-square&amp;amp;logo=x&amp;amp;color=black&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://slnk.to/donate&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-paypal-blue.svg?style=flat-square&amp;amp;logo=paypal&amp;amp;colorA=aaaaaa&#34; alt=&#34;Paypal donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A PHP-based self-hosted URL shortener that can be used to serve shortened URLs under your own domain.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shlinkio/shlink/develop/#full-documentation&#34;&gt;Full documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shlinkio/shlink/develop/#docker-image&#34;&gt;Docker image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shlinkio/shlink/develop/#self-hosted&#34;&gt;Self-hosted&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shlinkio/shlink/develop/#download&#34;&gt;Download&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shlinkio/shlink/develop/#configure&#34;&gt;Configure&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shlinkio/shlink/develop/#using-shlink&#34;&gt;Using shlink&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shlinkio/shlink/develop/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Full documentation&lt;/h2&gt; &#xA;&lt;p&gt;This document contains the very basics to get started with Shlink. If you want to learn everything you can do with it, visit the &lt;a href=&#34;https://shlink.io/documentation/&#34;&gt;full searchable documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docker image&lt;/h2&gt; &#xA;&lt;p&gt;You can learn how to use the official docker image by reading &lt;a href=&#34;https://shlink.io/documentation/install-docker-image/&#34;&gt;the docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The idea is that you can just generate a container using the image and provide the custom config via env vars.&lt;/p&gt; &#xA;&lt;h2&gt;Self-hosted&lt;/h2&gt; &#xA;&lt;p&gt;First, make sure the host where you are going to run shlink fulfills these requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP 8.2 or 8.3&lt;/li&gt; &#xA; &lt;li&gt;The next PHP extensions: json, curl, pdo, intl, gd and gmp/bcmath. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;apcu extension is recommended if you don&#39;t plan to use RoadRunner.&lt;/li&gt; &#xA;   &lt;li&gt;xml extension is required if you want to generate QR codes in svg format.&lt;/li&gt; &#xA;   &lt;li&gt;sockets and bcmath extensions are required if you want to integrate with a RabbitMQ instance.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;MySQL, MariaDB, PostgreSQL, MicrosoftSQL or SQLite. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You will also need the corresponding pdo variation for the database you are planning to use: &lt;code&gt;pdo_mysql&lt;/code&gt;, &lt;code&gt;pdo_pgsql&lt;/code&gt;, &lt;code&gt;pdo_sqlsrv&lt;/code&gt; or &lt;code&gt;pdo_sqlite&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;In order to run Shlink, you will need a built version of the project. There are two ways to get it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using a dist file&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The easiest way to install shlink is by using one of the pre-bundled distributable packages.&lt;/p&gt; &lt;p&gt;Go to the &lt;a href=&#34;https://github.com/shlinkio/shlink/releases/latest&#34;&gt;latest version&lt;/a&gt; and download the &lt;code&gt;shlink*_dist.zip&lt;/code&gt; file that suits your needs. You will find one for every supported PHP version.&lt;/p&gt; &lt;p&gt;Finally, decompress the file in the location of your choice.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Building from sources&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;If for any reason you want to build the project yourself, follow these steps:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clone the project with git (&lt;code&gt;git clone https://github.com/shlinkio/shlink.git&lt;/code&gt;), or download it by clicking the &lt;strong&gt;Clone or download&lt;/strong&gt; green button.&lt;/li&gt; &#xA;   &lt;li&gt;Download the &lt;a href=&#34;https://getcomposer.org/download/&#34;&gt;Composer&lt;/a&gt; PHP package manager inside the project folder.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;./build.sh 3.0.0&lt;/code&gt;, replacing the version with the version number you are going to build (the version number is used as part of the generated dist file name, and to set the value returned when running &lt;code&gt;shlink -V&lt;/code&gt; from the command line).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;After that, you will have a dist file inside the &lt;code&gt;build&lt;/code&gt; directory, that you need to decompress in the location of your choice.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;p&gt;This is the process used when releasing new Shlink versions. After tagging the new version with git, the GitHub release is automatically created by a &lt;a href=&#34;https://github.com/shlinkio/shlink/actions?query=workflow%3A%22Publish+release%22&#34;&gt;GitHub workflow&lt;/a&gt;, attaching the generated dist file to it.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Configure&lt;/h3&gt; &#xA;&lt;p&gt;Despite how you built the project, you now need to configure it, by following these steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you are going to use MySQL, MariaDB, PostgreSQL or Microsoft SQL Server, create an empty database with the name of your choice.&lt;/li&gt; &#xA; &lt;li&gt;Recursively grant write permissions to the &lt;code&gt;data&lt;/code&gt; directory. Shlink uses it to cache some information.&lt;/li&gt; &#xA; &lt;li&gt;Set up the application by running the &lt;code&gt;vendor/bin/shlink-installer install&lt;/code&gt; script. It is a command line tool that will guide you through the installation process. &lt;strong&gt;Take into account that this tool has to be run directly on the server where you plan to host Shlink. Do not run it before uploading/moving it there.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate your first API key by running &lt;code&gt;bin/cli api-key:generate&lt;/code&gt;. You will need the key in order to interact with Shlink&#39;s API.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using shlink&lt;/h2&gt; &#xA;&lt;p&gt;Once shlink is installed, there are two main ways to interact with it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;The command line&lt;/strong&gt;: Try running &lt;code&gt;bin/cli&lt;/code&gt; to see all the available commands.&lt;/p&gt; &lt;p&gt;All of them can be run with the &lt;code&gt;--help&lt;/code&gt;/&lt;code&gt;-h&lt;/code&gt; flag in order to see how to use them and all the available options.&lt;/p&gt; &lt;p&gt;It is probably a good idea to symlink the CLI entry point (&lt;code&gt;bin/cli&lt;/code&gt;) to somewhere in your path, so that you can run shlink from any directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;The REST API&lt;/strong&gt;: The complete docs on how to use the API can be found &lt;a href=&#34;https://shlink.io/documentation/api-docs&#34;&gt;here&lt;/a&gt;, and a sandbox which also documents every endpoint can be found in the &lt;a href=&#34;https://api-spec.shlink.io/&#34;&gt;API Spec&lt;/a&gt; portal.&lt;/p&gt; &lt;p&gt;However, you probably don&#39;t want to consume the raw API yourself. That&#39;s why a nice &lt;a href=&#34;https://github.com/shlinkio/shlink-web-client&#34;&gt;web client&lt;/a&gt; is provided that can be directly used from &lt;a href=&#34;https://app.shlink.io&#34;&gt;https://app.shlink.io&lt;/a&gt;, or hosted by yourself.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both the API and CLI allow you to do mostly the same operations, except for API key management, which can be done from the command line interface only.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you are trying to find out how to run the project in development mode or how to provide contributions, read the &lt;a href=&#34;https://raw.githubusercontent.com/shlinkio/shlink/develop/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; doc.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This product includes GeoLite2 data created by MaxMind, available from &lt;a href=&#34;https://www.maxmind.com&#34;&gt;https://www.maxmind.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>tempestphp/highlight</title>
    <updated>2024-04-07T02:01:04Z</updated>
    <id>tag:github.com,2024-04-07:/tempestphp/highlight</id>
    <link href="https://github.com/tempestphp/highlight" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎨 Fast, extensible, server-side code highlighting for web and terminal&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fast, extensible, server-side code highlighting&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coveralls.io/github/tempestphp/highlight?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/tempestphp/highlight/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can read about why I started this package &lt;a href=&#34;https://stitcher.io/blog/a-syntax-highlighter-that-doesnt-suck&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#quickstart&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#supported-languages&#34;&gt;Supported languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#themes&#34;&gt;Themes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#gutter&#34;&gt;Gutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#special-highlighting-tags&#34;&gt;Special highlighting tags&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#emphasize-strong-and-blur&#34;&gt;Emphasize strong and blur&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#additions-and-deletions&#34;&gt;Additions and deletions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#custom-classes&#34;&gt;Custom classes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#inline-languages&#34;&gt;Inline languages&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#commonmark-integration&#34;&gt;Commonmark integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#adding-or-extending-languages&#34;&gt;Adding or extending languages&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;composer require tempest/highlight&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Highlight code like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$highlighter = new \Tempest\Highlight\Highlighter();&#xA;&#xA;$code = $highlighter-&amp;gt;parse($code, &#39;php&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported languages&lt;/h2&gt; &#xA;&lt;p&gt;All supported languages can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/src/Languages&#34;&gt;Languages folder&lt;/a&gt;. We welcome PRs with additional languages. You can read about creating your own languages &lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#adding-or-extending-languages&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Themes&lt;/h2&gt; &#xA;&lt;p&gt;There are a &lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/src/Themes&#34;&gt;bunch of themes&lt;/a&gt; included in this package. You can load them either by importing the correct CSS file into your project&#39;s CSS file, or you can manually copy a stylesheet.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;@import &#34;../vendor/tempest/highlight/src/Themes/highlight-light-lite.css&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can build your own CSS theme with just a couple of classes, copy over &lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/src/Themes/highlight-light-lite.css&#34;&gt;the base stylesheet&lt;/a&gt;, and make adjustments however you like. Note that &lt;code&gt;pre&lt;/code&gt; tag styling isn&#39;t included in this package.&lt;/p&gt; &#xA;&lt;h3&gt;Inline themes&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t want to or can&#39;t load a CSS file, you can opt to use the &lt;code&gt;InlineTheme&lt;/code&gt; class. This theme takes the path to a CSS file, and will parse it into inline styles:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$highlighter = (new Highlighter(new InlineTheme(__DIR__ . &#39;/../src/Themes/solarized-dark.css&#39;)));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Terminal themes&lt;/h3&gt; &#xA;&lt;p&gt;Terminal themes are more limited because of their limited styling options. Right now there&#39;s one terminal theme provided: &lt;code&gt;LightTerminalTheme&lt;/code&gt;. More terminal themes are planned to be added in the future.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Tempest\Highlight\Highlighter;&#xA;use Tempest\Highlight\Themes\LightTerminalTheme;&#xA;&#xA;$highlighter = new Highlighter(new LightTerminalTheme());&#xA;&#xA;echo $highlighter-&amp;gt;parse($code, &#39;php&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/.github/terminal.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Gutter&lt;/h2&gt; &#xA;&lt;p&gt;This package can render an optional gutter if needed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$highlighter = (new Highlighter())-&amp;gt;withGutter(startAt: 10);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The gutter will show additions and deletions, and can start at any given line number:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/.github/highlight-4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, you can enable gutter rendering on the fly if you&#39;re using &lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#commonmark-integration&#34;&gt;commonmark code blocks&lt;/a&gt; by appending &lt;code&gt;{startAt}&lt;/code&gt; to the language definition:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;```php{1}&#xA;echo &#39;hi&#39;!&#xA;```&#xA;&lt;/pre&gt; &#xA;&lt;h2&gt;Special highlighting tags&lt;/h2&gt; &#xA;&lt;p&gt;This package offers a collection of special tags that you can use within your code snippets. These tags won&#39;t be shown in the final output, but rather adjust the highlighter&#39;s default styling. All these tags work multi-line, and will still properly render its wrapped content.&lt;/p&gt; &#xA;&lt;h3&gt;Emphasize, strong, and blur&lt;/h3&gt; &#xA;&lt;p&gt;You can add these tags within your code to emphasize or blur parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;{_ content _}&lt;/code&gt; adds the &lt;code&gt;.hl-em&lt;/code&gt; class&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;{* content *}&lt;/code&gt; adds the &lt;code&gt;.hl-strong&lt;/code&gt; class&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;{~ content ~}&lt;/code&gt; adds the &lt;code&gt;.hl-blur&lt;/code&gt; class&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here&#39;s an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;{~public function parse(string $content, Highlighter $highlighter): string&#xA;{&#xA;    $pattern = &#39;/\{\~(?&amp;lt;match&amp;gt;(.|\n)*)\~\}/&#39;;&#xA;    &#xA;    preg_match($pattern, $content, $matches);&#xA;&#xA;    if ($matches === []) {&#xA;        return $content;&#xA;    }~} // This part is blurred&#xA;&#xA;    {*$content = preg_replace_callback(*} // This line is bold&#xA;        $pattern,&#xA;        function (array $matches) use ($highlighter) {&#xA;            $parsed = $highlighter-&amp;gt;parse($matches[&#39;match&#39;], $highlighter-&amp;gt;getCurrentLanguage());&#xA;            &#xA;            return &#39;&amp;lt;span class=&#34;hl-blur&#34;&amp;gt;&#39; . $parsed . &#39;&amp;lt;/span&amp;gt;&#39;;&#xA;        },&#xA;        {_$content_} // This line is cursive&#xA;    );&#xA;    &#xA;    {~return $highlighter-&amp;gt;parse($content, $highlighter-&amp;gt;getCurrentLanguage());&#xA;}~}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is the end result:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/.github/highlight.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Additions and deletions&lt;/h3&gt; &#xA;&lt;p&gt;You can use these two tags to mark lines as additions and deletions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;{+ content +}&lt;/code&gt; adds the &lt;code&gt;.hl-addition&lt;/code&gt; class&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;{- content -}&lt;/code&gt; adds the &lt;code&gt;.hl-deletion&lt;/code&gt; class&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;{-public class Foo {}-}&#xA;{+public class Bar {}+}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/.github/highlight-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;As a reminder: all these tags work multi-line as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;  public function before(TokenType $tokenType): string&#xA;  {&#xA;      $style = match ($tokenType) {&#xA;          {-TokenType::KEYWORD =&amp;gt; TerminalStyle::FG_DARK_BLUE,&#xA;          TokenType::PROPERTY =&amp;gt; TerminalStyle::FG_DARK_GREEN,&#xA;          TokenType::TYPE =&amp;gt; TerminalStyle::FG_DARK_RED,&#xA;          TokenType::GENERIC =&amp;gt; TerminalStyle::FG_DARK_CYAN,&#xA;          TokenType::VALUE =&amp;gt; TerminalStyle::FG_BLACK,&#xA;          TokenType::COMMENT =&amp;gt; TerminalStyle::FG_GRAY,&#xA;          TokenType::ATTRIBUTE =&amp;gt; TerminalStyle::RESET,-}&#xA;      };&#xA;  &#xA;      return TerminalStyle::ESC-&amp;gt;value . $style-&amp;gt;value;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom classes&lt;/h3&gt; &#xA;&lt;p&gt;You can add any class you&#39;d like by using the &lt;code&gt;{:classname: content :}&lt;/code&gt; tag:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&amp;lt;style&amp;gt;&#xA;.hl-a {&#xA;    background-color: #FFFF0077;&#xA;}&#xA;&#xA;.hl-b {&#xA;    background-color: #FF00FF33;&#xA;}&#xA;&amp;lt;/style&amp;gt;&#xA;&#xA;```php&#xA;{:hl-a:public class Foo {}:}&#xA;{:hl-b:public class Bar {}:}&#xA;```&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/.github/highlight-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Inline languages&lt;/h3&gt; &#xA;&lt;p&gt;Within inline Markdown code tags, you can specify the language by prepending it between curly brackets:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;`{php}public function before(TokenType $tokenType): string`&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll need to set up &lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#commonmark-integration&#34;&gt;commonmark&lt;/a&gt; properly to get this to work.&lt;/p&gt; &#xA;&lt;h2&gt;CommonMark integration&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re using &lt;code&gt;league/commonmark&lt;/code&gt;, you can highlight codeblocks and inline code like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use League\CommonMark\Environment\Environment;&#xA;use League\CommonMark\Extension\CommonMark\CommonMarkCoreExtension;&#xA;use League\CommonMark\Extension\CommonMark\Node\Block\FencedCode;&#xA;use League\CommonMark\MarkdownConverter;&#xA;use Tempest\Highlight\CommonMark\CodeBlockRenderer;&#xA;use Tempest\Highlight\CommonMark\InlineCodeBlockRenderer;&#xA;&#xA;$environment = new Environment();&#xA;&#xA;$environment&#xA;    -&amp;gt;addExtension(new CommonMarkCoreExtension())&#xA;    -&amp;gt;addRenderer(FencedCode::class, new CodeBlockRenderer())&#xA;    -&amp;gt;addRenderer(Code::class, new InlineCodeBlockRenderer())&#xA;    ;&#xA;&#xA;$markdown = new MarkdownConverter($environment);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Keep in mind that you need to manually install &lt;code&gt;league/commonmark&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;composer require league/commonmark;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Adding or extending languages&lt;/h2&gt; &#xA;&lt;p&gt;This package makes it easy for developers to add new languages or extend existing languages.&lt;/p&gt; &#xA;&lt;p&gt;In order to build your own highlighter functionality, you need to understand &lt;em&gt;three&lt;/em&gt; concepts of how code is highlighted: &lt;em&gt;patterns&lt;/em&gt;, &lt;em&gt;injections&lt;/em&gt;, and &lt;em&gt;languages&lt;/em&gt;. &lt;a href=&#34;https://stitcher.io/blog/building-a-custom-language-in-tempest-highlight&#34;&gt;Continue reading&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also watch &lt;a href=&#34;https://www.youtube.com/watch?v=cZugbAR8Fyg&#34;&gt;this video&lt;/a&gt; to get a better understand of the package&#39;s architecture:&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>easychen/one-person-businesses-methodology-v2.0</title>
    <updated>2024-04-07T02:01:04Z</updated>
    <id>tag:github.com,2024-04-07:/easychen/one-person-businesses-methodology-v2.0</id>
    <link href="https://github.com/easychen/one-person-businesses-methodology-v2.0" rel="alternate"></link>
    <summary type="html">&lt;p&gt;《一人企业方法论》第二版，也适合做其他副业（比如自媒体、电商、数字商品）的非技术人群。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;《一人企业方法论》第二版&lt;/h1&gt; &#xA;&lt;h2&gt;对第一版的改进&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;从长文到一本近6万字的小书，从有感而发的分享到两年迭代而得的&lt;strong&gt;完整方法论&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;不再局限在独立开发，发展为&lt;strong&gt;更为通用的方法论&lt;/strong&gt;，非技术读者也可创作数字商品或基于NoCode/开源项目+AI辅助构建在线服务&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/easychen/one-person-businesses-methodology-v2.0/master/src/images/opb-book-cover.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;作者信息&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;作者 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ftqq.com&#34;&gt;Easy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Email: &lt;a href=&#34;mailto:easychen@gmail.com&#34;&gt;easychen@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;微博：&lt;a href=&#34;https://weibo.com/easy&#34;&gt;https://weibo.com/easy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;X：&lt;a href=&#34;https://twitter.com/easychen&#34;&gt;https://twitter.com/easychen&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;授权说明&lt;/h2&gt; &#xA;&lt;p&gt;本书采用&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh-hans&#34;&gt;CC-BY-NC-SA协议&lt;/a&gt;发布。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;您可以复制、发行、展览、表演、放映、广播或通过信息网络传播本作品，但必须署名作者并添加链接到&lt;a href=&#34;https://github.com/easychen/one-person-businesses-methodology-v2.0&#34;&gt;本书GitHub仓库&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;不得为商业目的而使用本作品。&lt;/li&gt; &#xA; &lt;li&gt;仅在遵守与本作品相同的许可条款下，您才能散布由本作品产生的派生作品。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;电子书&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可使用 mdbook-epub 工具自行编译&lt;/li&gt; &#xA; &lt;li&gt;扫码订阅《方法论》更新频道后下载: &lt;a href=&#34;https://subdeer.cn/channel/landing/11&#34;&gt;进入&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;在线阅读&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;定义一人企业&lt;/strong&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/opb-methodology-new-version-and-author?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;新版方法论概述&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/define-opb?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;一人企业的定义&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;规划一人企业&lt;/strong&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/why-thinking-big-is-possible?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;底层逻辑:为什么以小博大是可能的&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/why-scalability-is-possible?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;底层逻辑:为什么规模化是可能的&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/assets-and-passive-income?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;底层逻辑:资产和被动收入&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/snowballing-and-chain-propagation?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;底层逻辑:滚雪球和链式传播&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/race-track-selection-for-opb?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;赛道选择:一人企业如何选择赛道&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/non-competition-strategy?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;竞争策略:不竞争策略&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/structured-advantage?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;竞争策略:结构化优势&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/opb-canvas-and-opb-report?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;思考工具:《一人企业画布》和《一人企业月报》&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;构建一人业务&lt;/strong&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/one-person-enterprise-does-not-equal-one-person-business?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;一人企业≠一人业务&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/discovery-of-by-product-advantages?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;优势发现:副产品优势&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/start-from-side-project?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;风险评控:从副业开始&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/managing-and-utilizing-uncertainty?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;风险评控:管理和利用不确定性&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>