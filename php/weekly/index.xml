<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-11T01:45:52Z</updated>
  <subtitle>Weekly Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>getgrav/grav</title>
    <updated>2022-09-11T01:45:52Z</updated>
    <id>tag:github.com,2022-09-11:/getgrav/grav</id>
    <link href="https://github.com/getgrav/grav" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modern, Crazy Fast, Ridiculously Easy and Amazingly Powerful Flat-File CMS powered by PHP, Markdown, Twig, and Symfony&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/8237355?v=2&amp;amp;s=50&#34; alt=&#34;&#34;&gt; Grav&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/phpstan/phpstan&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PHPStan-enabled-brightgreen.svg?style=flat&#34; alt=&#34;PHPStan&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://chat.getgrav.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/501836936584101899.svg?logo=discord&amp;amp;colorB=728ADA&amp;amp;label=Discord%20Chat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/getgrav/grav/actions?query=workflow%3A%22PHP+Tests%22&#34;&gt;&lt;img src=&#34;https://github.com/getgrav/grav/workflows/PHP%20Tests/badge.svg?branch=develop&#34; alt=&#34;PHP Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/getgrav/grav/develop/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/grav/tiers/backers/badge.svg?label=Backers&amp;amp;color=brightgreen&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/getgrav/grav/develop/#supporters&#34;&gt;&lt;img src=&#34;https://opencollective.com/grav/tiers/supporters/badge.svg?label=Supporters&amp;amp;color=brightgreen&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/getgrav/grav/develop/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/grav/tiers/sponsors/badge.svg?label=Sponsors&amp;amp;color=brightgreen&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Grav is a &lt;strong&gt;Fast&lt;/strong&gt;, &lt;strong&gt;Simple&lt;/strong&gt;, and &lt;strong&gt;Flexible&lt;/strong&gt;, file-based Web-platform. There is &lt;strong&gt;Zero&lt;/strong&gt; installation required. Just extract the ZIP archive, and you are already up and running. It follows similar principles to other flat-file CMS platforms, but has a different design philosophy than most. Grav comes with a powerful &lt;strong&gt;Package Management System&lt;/strong&gt; to allow for simple installation and upgrading of plugins and themes, as well as simple updating of Grav itself.&lt;/p&gt; &#xA;&lt;p&gt;The underlying architecture of Grav is designed to use well-established and &lt;em&gt;best-in-class&lt;/em&gt; technologies to ensure that Grav is simple to use and easy to extend. Some of these key technologies include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twig.symfony.com/&#34;&gt;Twig Templating&lt;/a&gt;: for powerful control of the user interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt;: for easy content creation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yaml.org&#34;&gt;YAML&lt;/a&gt;: for simple configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://parsedown.org/&#34;&gt;Parsedown&lt;/a&gt;: for fast Markdown and Markdown Extra support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.doctrine-project.org/projects/doctrine-orm/en/latest/reference/caching.html&#34;&gt;Doctrine Cache&lt;/a&gt;: layer for performance&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/silexphp/Pimple&#34;&gt;Pimple Dependency Injection Container&lt;/a&gt;: for extensibility and maintainability&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://symfony.com/doc/current/components/event_dispatcher/introduction.html&#34;&gt;Symfony Event Dispatcher&lt;/a&gt;: for plugin event handling&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://symfony.com/doc/current/components/console/introduction.html&#34;&gt;Symfony Console&lt;/a&gt;: for CLI interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Gregwar/Image&#34;&gt;Gregwar Image Library&lt;/a&gt;: for dynamic image manipulation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP 7.3.6 or higher. Check the &lt;a href=&#34;https://learn.getgrav.org/basics/requirements#php-requirements&#34;&gt;required modules list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check the &lt;a href=&#34;https://learn.getgrav.org/basics/requirements#apache-requirements&#34;&gt;Apache&lt;/a&gt; or &lt;a href=&#34;https://learn.getgrav.org/basics/requirements#iis-requirements&#34;&gt;IIS&lt;/a&gt; requirements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;The full documentation can be found from &lt;a href=&#34;https://learn.getgrav.org&#34;&gt;learn.getgrav.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;QuickStart&lt;/h1&gt; &#xA;&lt;p&gt;These are the options to get Grav:&lt;/p&gt; &#xA;&lt;h3&gt;Downloading a Grav Package&lt;/h3&gt; &#xA;&lt;p&gt;You can download a &lt;strong&gt;ready-built&lt;/strong&gt; package from the &lt;a href=&#34;https://getgrav.org/downloads&#34;&gt;Downloads page on https://getgrav.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;With Composer&lt;/h3&gt; &#xA;&lt;p&gt;You can create a new project with the latest &lt;strong&gt;stable&lt;/strong&gt; Grav release with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ composer create-project getgrav/grav ~/webroot/grav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From GitHub&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the Grav repository from &lt;a href=&#34;&#34;&gt;https://github.com/getgrav/grav&lt;/a&gt; to a folder in the webroot of your server, e.g. &lt;code&gt;~/webroot/grav&lt;/code&gt;. Launch a &lt;strong&gt;terminal&lt;/strong&gt; or &lt;strong&gt;console&lt;/strong&gt; and navigate to the webroot folder:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ cd ~/webroot&#xA;$ git clone https://github.com/getgrav/grav.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the &lt;strong&gt;plugin&lt;/strong&gt; and &lt;strong&gt;theme dependencies&lt;/strong&gt; by using the &lt;a href=&#34;https://learn.getgrav.org/advanced/grav-cli&#34;&gt;Grav CLI application&lt;/a&gt; &lt;code&gt;bin/grav&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ cd ~/webroot/grav&#xA;$ bin/grav install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://learn.getgrav.org/basics/installation&#34;&gt;install procedures&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h1&gt;Adding Functionality&lt;/h1&gt; &#xA;&lt;p&gt;You can download &lt;a href=&#34;https://getgrav.org/downloads/plugins&#34;&gt;plugins&lt;/a&gt; or &lt;a href=&#34;https://getgrav.org/downloads/themes&#34;&gt;themes&lt;/a&gt; manually from the appropriate tab on the &lt;a href=&#34;https://getgrav.org/downloads&#34;&gt;Downloads page on https://getgrav.org&lt;/a&gt;, but the preferred solution is to use the &lt;a href=&#34;https://learn.getgrav.org/advanced/grav-gpm&#34;&gt;Grav Package Manager&lt;/a&gt; or &lt;code&gt;GPM&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bin/gpm index&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will display all the available plugins and then you can install one or more with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bin/gpm install &amp;lt;plugin/theme&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Updating&lt;/h1&gt; &#xA;&lt;p&gt;To update Grav you should use the &lt;a href=&#34;https://learn.getgrav.org/advanced/grav-gpm&#34;&gt;Grav Package Manager&lt;/a&gt; or &lt;code&gt;GPM&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bin/gpm selfupgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update plugins and themes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bin/gpm update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrading from older version&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.getgrav.org/16/advanced/grav-development/grav-17-upgrade-guide&#34;&gt;Upgrading to Grav 1.7&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.getgrav.org/16/advanced/grav-development/grav-16-upgrade-guide&#34;&gt;Upgrading to Grav 1.6&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.getgrav.org/16/advanced/grav-development/grav-15-upgrade-guide&#34;&gt;Upgrading from Grav &amp;lt;1.6&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;We appreciate any contribution to Grav, whether it is related to bugs, grammar, or simply a suggestion or improvement! Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/getgrav/grav/develop/CONTRIBUTING.md&#34;&gt;Contributing guide&lt;/a&gt; for more guidance on this topic.&lt;/p&gt; &#xA;&lt;h2&gt;Security issues&lt;/h2&gt; &#xA;&lt;p&gt;If you discover a possible security issue related to Grav or one of its plugins, please email the core team at &lt;a href=&#34;mailto:contact@getgrav.org&#34;&gt;contact@getgrav.org&lt;/a&gt; and we&#39;ll address it as soon as possible.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.getgrav.org/basics/what-is-grav&#34;&gt;What is Grav?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.getgrav.org/basics/installation&#34;&gt;Install&lt;/a&gt; Grav in few seconds&lt;/li&gt; &#xA; &lt;li&gt;Understand the &lt;a href=&#34;https://learn.getgrav.org/basics/grav-configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Take a peek at our available free &lt;a href=&#34;https://getgrav.org/downloads/skeletons&#34;&gt;Skeletons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you have questions, jump on our &lt;a href=&#34;https://chat.getgrav.org&#34;&gt;Discord Chat Server&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;Have fun!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Exploring More&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Have a look at our &lt;a href=&#34;https://learn.getgrav.org/basics/basic-tutorial&#34;&gt;Basic Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dive into more &lt;a href=&#34;https://learn.getgrav.org/advanced&#34;&gt;advanced&lt;/a&gt; functions&lt;/li&gt; &#xA; &lt;li&gt;Learn about the &lt;a href=&#34;https://learn.getgrav.org/cli-console/grav-cli&#34;&gt;Grav CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Review examples in the &lt;a href=&#34;https://learn.getgrav.org/cookbook&#34;&gt;Grav Cookbook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;More &lt;a href=&#34;https://github.com/getgrav/awesome-grav&#34;&gt;Awesome Grav Stuff&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Backers&lt;/h1&gt; &#xA;&lt;p&gt;Support Grav with a monthly donation to help us continue development. [&lt;a href=&#34;https://opencollective.com/grav/contribute&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;img src=&#34;https://opencollective.com/grav/tiers/backers.svg?avatarHeight=36&amp;amp;width=600&#34;&gt; &#xA;&lt;h1&gt;Supporters&lt;/h1&gt; &#xA;&lt;p&gt;Support Grav with a monthly donation to help us continue development. [&lt;a href=&#34;https://opencollective.com/grav/contribute&#34;&gt;Become a supporter&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;img src=&#34;https://opencollective.com/grav/tiers/supporters.svg?avatarHeight=36&amp;amp;width=600&#34;&gt; &#xA;&lt;h1&gt;Sponsors&lt;/h1&gt; &#xA;&lt;p&gt;Support Grav with a yearly donation to help us continue development. [&lt;a href=&#34;https://opencollective.com/grav/contribute&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;img src=&#34;https://opencollective.com/grav/tiers/sponsors.svg?avatarHeight=36&amp;amp;width=600&#34;&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/getgrav/grav/develop/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Running Tests&lt;/h1&gt; &#xA;&lt;p&gt;First install the dev dependencies by running &lt;code&gt;composer install&lt;/code&gt; from the Grav root.&lt;/p&gt; &#xA;&lt;p&gt;Then &lt;code&gt;composer test&lt;/code&gt; will run the Unit Tests, which should be always executed successfully on any site. Windows users should use the &lt;code&gt;composer test-windows&lt;/code&gt; command. You can also run a single unit test file, e.g. &lt;code&gt;composer test tests/unit/Grav/Common/AssetsTest.php&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run phpstan tests, you should run:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;composer phpstan&lt;/code&gt; for global tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;composer phpstan-framework&lt;/code&gt; for more strict tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;composer phpstan-plugins&lt;/code&gt; to test all installed plugins&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>googleapis/google-api-php-client</title>
    <updated>2022-09-11T01:45:52Z</updated>
    <id>tag:github.com,2022-09-11:/googleapis/google-api-php-client</id>
    <link href="https://github.com/googleapis/google-api-php-client" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A PHP client library for accessing Google APIs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/googleapis/google-api-php-client/workflows/.github/workflows/tests.yml/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Google APIs Client Library for PHP&lt;/h1&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;  Reference Docs&#xA; &lt;/dt&gt;&#xA; &lt;dd&gt;&#xA;  &lt;a href=&#34;https://googleapis.github.io/google-api-php-client/main/&#34;&gt;https://googleapis.github.io/google-api-php-client/main/&lt;/a&gt;&#xA; &lt;/dd&gt; &#xA; &lt;dt&gt;&#xA;  License&#xA; &lt;/dt&gt;&#xA; &lt;dd&gt;&#xA;  Apache 2.0&#xA; &lt;/dd&gt; &#xA;&lt;/dl&gt; &#xA;&lt;p&gt;The Google API Client Library enables you to work with Google APIs such as Gmail, Drive or YouTube on your server.&lt;/p&gt; &#xA;&lt;p&gt;These client libraries are officially supported by Google. However, the libraries are considered complete and are in maintenance mode. This means that we will address critical bugs and security issues but will not add any new features.&lt;/p&gt; &#xA;&lt;h2&gt;Google Cloud Platform&lt;/h2&gt; &#xA;&lt;p&gt;For Google Cloud Platform APIs such as &lt;a href=&#34;https://github.com/googleapis/google-cloud-php-datastore&#34;&gt;Datastore&lt;/a&gt;, &lt;a href=&#34;https://github.com/googleapis/google-cloud-php-storage&#34;&gt;Cloud Storage&lt;/a&gt;, &lt;a href=&#34;https://github.com/googleapis/google-cloud-php-pubsub&#34;&gt;Pub/Sub&lt;/a&gt;, and &lt;a href=&#34;https://github.com/googleapis/google-cloud-php-compute&#34;&gt;Compute Engine&lt;/a&gt;, we recommend using the Google Cloud client libraries. For a complete list of supported Google Cloud client libraries, see &lt;a href=&#34;https://github.com/googleapis/google-cloud-php&#34;&gt;googleapis/google-cloud-php&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.php.net/&#34;&gt;PHP 5.6.0 or higher&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developer Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-api-php-client/main/docs/&#34;&gt;docs folder&lt;/a&gt; provides detailed guides for using this library.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can use &lt;strong&gt;Composer&lt;/strong&gt; or simply &lt;strong&gt;Download the Release&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Composer&lt;/h3&gt; &#xA;&lt;p&gt;The preferred method is via &lt;a href=&#34;https://getcomposer.org/&#34;&gt;composer&lt;/a&gt;. Follow the &lt;a href=&#34;https://getcomposer.org/doc/00-intro.md&#34;&gt;installation instructions&lt;/a&gt; if you do not already have composer installed.&lt;/p&gt; &#xA;&lt;p&gt;Once composer is installed, execute the following command in your project root to install this library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;composer require google/apiclient:^2.12.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, be sure to include the autoloader:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;require_once &#39;/path/to/your-project/vendor/autoload.php&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This library relies on &lt;code&gt;google/apiclient-services&lt;/code&gt;. That library provides up-to-date API wrappers for a large number of Google APIs. In order that users may make use of the latest API clients, this library does not pin to a specific version of &lt;code&gt;google/apiclient-services&lt;/code&gt;. &lt;strong&gt;In order to prevent the accidental installation of API wrappers with breaking changes&lt;/strong&gt;, it is highly recommended that you pin to the &lt;a href=&#34;https://github.com/googleapis/google-api-php-client-services/releases&#34;&gt;latest version&lt;/a&gt; yourself prior to using this library in production.&lt;/p&gt; &#xA;&lt;h4&gt;Cleaning up unused services&lt;/h4&gt; &#xA;&lt;p&gt;There are over 200 Google API services. The chances are good that you will not want them all. In order to avoid shipping these dependencies with your code, you can run the &lt;code&gt;Google\Task\Composer::cleanup&lt;/code&gt; task and specify the services you want to keep in &lt;code&gt;composer.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;require&#34;: {&#xA;        &#34;google/apiclient&#34;: &#34;^2.12.1&#34;&#xA;    },&#xA;    &#34;scripts&#34;: {&#xA;        &#34;pre-autoload-dump&#34;: &#34;Google\\Task\\Composer::cleanup&#34;&#xA;    },&#xA;    &#34;extra&#34;: {&#xA;        &#34;google/apiclient-services&#34;: [&#xA;            &#34;Drive&#34;,&#xA;            &#34;YouTube&#34;&#xA;        ]&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This example will remove all services other than &#34;Drive&#34; and &#34;YouTube&#34; when &lt;code&gt;composer update&lt;/code&gt; or a fresh &lt;code&gt;composer install&lt;/code&gt; is run.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: If you add any services back in &lt;code&gt;composer.json&lt;/code&gt;, you will need to remove the &lt;code&gt;vendor/google/apiclient-services&lt;/code&gt; directory explicitly for the change you made to have effect:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rm -r vendor/google/apiclient-services&#xA;composer update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This command performs an exact match on the service name, so to keep &lt;code&gt;YouTubeReporting&lt;/code&gt; and &lt;code&gt;YouTubeAnalytics&lt;/code&gt; as well, you&#39;d need to add each of them explicitly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;extra&#34;: {&#xA;        &#34;google/apiclient-services&#34;: [&#xA;            &#34;Drive&#34;,&#xA;            &#34;YouTube&#34;,&#xA;            &#34;YouTubeAnalytics&#34;,&#xA;            &#34;YouTubeReporting&#34;&#xA;        ]&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download the Release&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer not to use composer, you can download the package in its entirety. The &lt;a href=&#34;https://github.com/googleapis/google-api-php-client/releases&#34;&gt;Releases&lt;/a&gt; page lists all stable versions. Download any file with the name &lt;code&gt;google-api-php-client-[RELEASE_NAME].zip&lt;/code&gt; for a package including this library and its dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Uncompress the zip file you download, and include the autoloader in your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;require_once &#39;/path/to/google-api-php-client/vendor/autoload.php&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For additional installation and setup instructions, see &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-api-php-client/main/docs/&#34;&gt;the documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-api-php-client/main/examples&#34;&gt;&lt;code&gt;examples/&lt;/code&gt;&lt;/a&gt; directory for examples of the key client features. You can view them in your browser by running the php built-in web server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ php -S localhost:8000 -t examples/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then browsing to the host and port you specified (in the above example, &lt;code&gt;http://localhost:8000&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Basic Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// include your composer dependencies&#xA;require_once &#39;vendor/autoload.php&#39;;&#xA;&#xA;$client = new Google\Client();&#xA;$client-&amp;gt;setApplicationName(&#34;Client_Library_Examples&#34;);&#xA;$client-&amp;gt;setDeveloperKey(&#34;YOUR_APP_KEY&#34;);&#xA;&#xA;$service = new Google\Service\Books($client);&#xA;$query = &#39;Henry David Thoreau&#39;;&#xA;$optParams = [&#xA;  &#39;filter&#39; =&amp;gt; &#39;free-ebooks&#39;,&#xA;];&#xA;$results = $service-&amp;gt;volumes-&amp;gt;listVolumes($query, $optParams);&#xA;&#xA;foreach ($results-&amp;gt;getItems() as $item) {&#xA;  echo $item[&#39;volumeInfo&#39;][&#39;title&#39;], &#34;&amp;lt;br /&amp;gt; \n&#34;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Authentication with OAuth&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;An example of this can be seen in &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-api-php-client/main/examples/simple-file-upload.php&#34;&gt;&lt;code&gt;examples/simple-file-upload.php&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the instructions to &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-api-php-client/main/docs/oauth-web.md#create-authorization-credentials&#34;&gt;Create Web Application Credentials&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the JSON credentials&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set the path to these credentials using &lt;code&gt;Google\Client::setAuthConfig&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$client = new Google\Client();&#xA;$client-&amp;gt;setAuthConfig(&#39;/path/to/client_credentials.json&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set the scopes required for the API you are going to call&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$client-&amp;gt;addScope(Google\Service\Drive::DRIVE);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set your application&#39;s redirect URI&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// Your redirect URI can be any registered URI, but in this example&#xA;// we redirect back to this same page&#xA;$redirect_uri = &#39;http://&#39; . $_SERVER[&#39;HTTP_HOST&#39;] . $_SERVER[&#39;PHP_SELF&#39;];&#xA;$client-&amp;gt;setRedirectUri($redirect_uri);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the script handling the redirect URI, exchange the authorization code for an access token:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;if (isset($_GET[&#39;code&#39;])) {&#xA;    $token = $client-&amp;gt;fetchAccessTokenWithAuthCode($_GET[&#39;code&#39;]);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Authentication with Service Accounts&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;An example of this can be seen in &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-api-php-client/main/examples/service-account.php&#34;&gt;&lt;code&gt;examples/service-account.php&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Some APIs (such as the &lt;a href=&#34;https://developers.google.com/youtube/v3/&#34;&gt;YouTube Data API&lt;/a&gt;) do not support service accounts. Check with the specific API documentation if API calls return unexpected 401 or 403 errors.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the instructions to &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-api-php-client/main/docs/oauth-server.md#creating-a-service-account&#34;&gt;Create a Service Account&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the JSON credentials&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set the path to these credentials using the &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; environment variable:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;putenv(&#39;GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tell the Google client to use your service account credentials to authenticate:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$client = new Google\Client();&#xA;$client-&amp;gt;useApplicationDefaultCredentials();&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set the scopes required for the API you are going to call&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$client-&amp;gt;addScope(Google\Service\Drive::DRIVE);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have delegated domain-wide access to the service account and you want to impersonate a user account, specify the email address of the user account using the method setSubject:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$client-&amp;gt;setSubject($user_to_impersonate);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;How to use a specific JSON key&lt;/h4&gt; &#xA;&lt;p&gt;If you want to a specific JSON key instead of using &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; environment variable, you can do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$jsonKey = [&#xA;   &#39;type&#39; =&amp;gt; &#39;service_account&#39;,&#xA;   // ...&#xA;];&#xA;$client = new Google\Client();&#xA;$client-&amp;gt;setAuthConfig($jsonKey);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Making Requests&lt;/h3&gt; &#xA;&lt;p&gt;The classes used to call the API in &lt;a href=&#34;https://github.com/googleapis/google-api-php-client-services&#34;&gt;google-api-php-client-services&lt;/a&gt; are autogenerated. They map directly to the JSON requests and responses found in the &lt;a href=&#34;https://developers.google.com/apis-explorer/#p/&#34;&gt;APIs Explorer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A JSON request to the &lt;a href=&#34;https://developers.google.com/apis-explorer/#p/datastore/v1beta3/datastore.projects.runQuery&#34;&gt;Datastore API&lt;/a&gt; would look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;POST https://datastore.googleapis.com/v1beta3/projects/YOUR_PROJECT_ID:runQuery?key=YOUR_API_KEY&#xA;&#xA;{&#xA;    &#34;query&#34;: {&#xA;        &#34;kind&#34;: [{&#xA;            &#34;name&#34;: &#34;Book&#34;&#xA;        }],&#xA;        &#34;order&#34;: [{&#xA;            &#34;property&#34;: {&#xA;                &#34;name&#34;: &#34;title&#34;&#xA;            },&#xA;            &#34;direction&#34;: &#34;descending&#34;&#xA;        }],&#xA;        &#34;limit&#34;: 10&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using this library, the same call would look something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// create the datastore service class&#xA;$datastore = new Google\Service\Datastore($client);&#xA;&#xA;// build the query - this maps directly to the JSON&#xA;$query = new Google\Service\Datastore\Query([&#xA;    &#39;kind&#39; =&amp;gt; [&#xA;        [&#xA;            &#39;name&#39; =&amp;gt; &#39;Book&#39;,&#xA;        ],&#xA;    ],&#xA;    &#39;order&#39; =&amp;gt; [&#xA;        &#39;property&#39; =&amp;gt; [&#xA;            &#39;name&#39; =&amp;gt; &#39;title&#39;,&#xA;        ],&#xA;        &#39;direction&#39; =&amp;gt; &#39;descending&#39;,&#xA;    ],&#xA;    &#39;limit&#39; =&amp;gt; 10,&#xA;]);&#xA;&#xA;// build the request and response&#xA;$request = new Google\Service\Datastore\RunQueryRequest([&#39;query&#39; =&amp;gt; $query]);&#xA;$response = $datastore-&amp;gt;projects-&amp;gt;runQuery(&#39;YOUR_DATASET_ID&#39;, $request);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, as each property of the JSON API has a corresponding generated class, the above code could also be written like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// create the datastore service class&#xA;$datastore = new Google\Service\Datastore($client);&#xA;&#xA;// build the query&#xA;$request = new Google\Service\Datastore_RunQueryRequest();&#xA;$query = new Google\Service\Datastore\Query();&#xA;//   - set the order&#xA;$order = new Google\Service\Datastore_PropertyOrder();&#xA;$order-&amp;gt;setDirection(&#39;descending&#39;);&#xA;$property = new Google\Service\Datastore\PropertyReference();&#xA;$property-&amp;gt;setName(&#39;title&#39;);&#xA;$order-&amp;gt;setProperty($property);&#xA;$query-&amp;gt;setOrder([$order]);&#xA;//   - set the kinds&#xA;$kind = new Google\Service\Datastore\KindExpression();&#xA;$kind-&amp;gt;setName(&#39;Book&#39;);&#xA;$query-&amp;gt;setKinds([$kind]);&#xA;//   - set the limit&#xA;$query-&amp;gt;setLimit(10);&#xA;&#xA;// add the query to the request and make the request&#xA;$request-&amp;gt;setQuery($query);&#xA;$response = $datastore-&amp;gt;projects-&amp;gt;runQuery(&#39;YOUR_DATASET_ID&#39;, $request);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The method used is a matter of preference, but &lt;em&gt;it will be very difficult to use this library without first understanding the JSON syntax for the API&lt;/em&gt;, so it is recommended to look at the &lt;a href=&#34;https://developers.google.com/apis-explorer/#p/&#34;&gt;APIs Explorer&lt;/a&gt; before using any of the services here.&lt;/p&gt; &#xA;&lt;h3&gt;Making HTTP Requests Directly&lt;/h3&gt; &#xA;&lt;p&gt;If Google Authentication is desired for external applications, or a Google API is not available yet in this library, HTTP requests can be made directly.&lt;/p&gt; &#xA;&lt;p&gt;If you are installing this client only to authenticate your own HTTP client requests, you should use &lt;a href=&#34;https://github.com/googleapis/google-auth-library-php#call-the-apis&#34;&gt;&lt;code&gt;google/auth&lt;/code&gt;&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;authorize&lt;/code&gt; method returns an authorized &lt;a href=&#34;http://docs.guzzlephp.org/&#34;&gt;Guzzle Client&lt;/a&gt;, so any request made using the client will contain the corresponding authorization.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// create the Google client&#xA;$client = new Google\Client();&#xA;&#xA;/**&#xA; * Set your method for authentication. Depending on the API, This could be&#xA; * directly with an access token, API key, or (recommended) using&#xA; * Application Default Credentials.&#xA; */&#xA;$client-&amp;gt;useApplicationDefaultCredentials();&#xA;$client-&amp;gt;addScope(Google\Service\Plus::PLUS_ME);&#xA;&#xA;// returns a Guzzle HTTP Client&#xA;$httpClient = $client-&amp;gt;authorize();&#xA;&#xA;// make an HTTP request&#xA;$response = $httpClient-&amp;gt;get(&#39;https://www.googleapis.com/plus/v1/people/me&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Caching&lt;/h3&gt; &#xA;&lt;p&gt;It is recommended to use another caching library to improve performance. This can be done by passing a &lt;a href=&#34;https://www.php-fig.org/psr/psr-6/&#34;&gt;PSR-6&lt;/a&gt; compatible library to the client:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use League\Flysystem\Adapter\Local;&#xA;use League\Flysystem\Filesystem;&#xA;use Cache\Adapter\Filesystem\FilesystemCachePool;&#xA;&#xA;$filesystemAdapter = new Local(__DIR__.&#39;/&#39;);&#xA;$filesystem        = new Filesystem($filesystemAdapter);&#xA;&#xA;$cache = new FilesystemCachePool($filesystem);&#xA;$client-&amp;gt;setCache($cache);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example we use &lt;a href=&#34;http://www.php-cache.com/&#34;&gt;PHP Cache&lt;/a&gt;. Add this to your project with composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;composer require cache/filesystem-adapter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Updating Tokens&lt;/h3&gt; &#xA;&lt;p&gt;When using &lt;a href=&#34;https://developers.google.com/identity/protocols/OAuth2InstalledApp#offline&#34;&gt;Refresh Tokens&lt;/a&gt; or &lt;a href=&#34;https://developers.google.com/identity/protocols/OAuth2ServiceAccount#overview&#34;&gt;Service Account Credentials&lt;/a&gt;, it may be useful to perform some action when a new access token is granted. To do this, pass a callable to the &lt;code&gt;setTokenCallback&lt;/code&gt; method on the client:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$logger = new Monolog\Logger();&#xA;$tokenCallback = function ($cacheKey, $accessToken) use ($logger) {&#xA;  $logger-&amp;gt;debug(sprintf(&#39;new access token received at cache key %s&#39;, $cacheKey));&#xA;};&#xA;$client-&amp;gt;setTokenCallback($tokenCallback);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debugging Your HTTP Request using Charles&lt;/h3&gt; &#xA;&lt;p&gt;It is often very useful to debug your API calls by viewing the raw HTTP request. This library supports the use of &lt;a href=&#34;https://www.charlesproxy.com/documentation/getting-started/&#34;&gt;Charles Web Proxy&lt;/a&gt;. Download and run Charles, and then capture all HTTP traffic through Charles with the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// FOR DEBUGGING ONLY&#xA;$httpClient = new GuzzleHttp\Client([&#xA;    &#39;proxy&#39; =&amp;gt; &#39;localhost:8888&#39;, // by default, Charles runs on localhost port 8888&#xA;    &#39;verify&#39; =&amp;gt; false, // otherwise HTTPS requests will fail.&#xA;]);&#xA;&#xA;$client = new Google\Client();&#xA;$client-&amp;gt;setHttpClient($httpClient);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now all calls made by this library will appear in the Charles UI.&lt;/p&gt; &#xA;&lt;p&gt;One additional step is required in Charles to view SSL requests. Go to &lt;strong&gt;Charles &amp;gt; Proxy &amp;gt; SSL Proxying Settings&lt;/strong&gt; and add the domain you&#39;d like captured. In the case of the Google APIs, this is usually &lt;code&gt;*.googleapis.com&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Controlling HTTP Client Configuration Directly&lt;/h3&gt; &#xA;&lt;p&gt;Google API Client uses &lt;a href=&#34;http://docs.guzzlephp.org/&#34;&gt;Guzzle&lt;/a&gt; as its default HTTP client. That means that you can control your HTTP requests in the same manner you would for any application using Guzzle.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s say, for instance, we wished to apply a referrer to each request.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use GuzzleHttp\Client;&#xA;&#xA;$httpClient = new Client([&#xA;    &#39;headers&#39; =&amp;gt; [&#xA;        &#39;referer&#39; =&amp;gt; &#39;mysite.com&#39;&#xA;    ]&#xA;]);&#xA;&#xA;$client = new Google\Client();&#xA;$client-&amp;gt;setHttpClient($httpClient);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Other Guzzle features such as &lt;a href=&#34;http://docs.guzzlephp.org/en/stable/handlers-and-middleware.html&#34;&gt;Handlers and Middleware&lt;/a&gt; offer even more control.&lt;/p&gt; &#xA;&lt;h3&gt;Service Specific Examples&lt;/h3&gt; &#xA;&lt;p&gt;YouTube: &lt;a href=&#34;https://github.com/youtube/api-samples/tree/master/php&#34;&gt;https://github.com/youtube/api-samples/tree/master/php&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How Do I Contribute?&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-api-php-client/main/.github/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt; page for more information. In particular, we love pull requests - but please make sure to sign the contributor license agreement.&lt;/p&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;h3&gt;What do I do if something isn&#39;t working?&lt;/h3&gt; &#xA;&lt;p&gt;For support with the library the best place to ask is via the google-api-php-client tag on StackOverflow: &lt;a href=&#34;https://stackoverflow.com/questions/tagged/google-api-php-client&#34;&gt;https://stackoverflow.com/questions/tagged/google-api-php-client&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If there is a specific bug with the library, please &lt;a href=&#34;https://github.com/googleapis/google-api-php-client/issues&#34;&gt;file an issue&lt;/a&gt; in the GitHub issues tracker, including an example of the failing code and any specific errors retrieved. Feature requests can also be filed, as long as they are core library requests, and not-API specific: for those, refer to the documentation for the individual APIs for the best place to file requests. Please try to provide a clear statement of the problem that the feature would address.&lt;/p&gt; &#xA;&lt;h3&gt;I want an example of X!&lt;/h3&gt; &#xA;&lt;p&gt;If X is a feature of the library, file away! If X is an example of using a specific service, the best place to go is to the teams for those specific APIs - our preference is to link to their examples rather than add them to the library, as they can then pin to specific versions of the library. If you have any examples for other APIs, let us know and we will happily add a link to the README above!&lt;/p&gt; &#xA;&lt;h3&gt;Why do some Google\Service classes have weird names?&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;em&gt;Google\Service&lt;/em&gt; classes are generally automatically generated from the API discovery documents: &lt;a href=&#34;https://developers.google.com/discovery/&#34;&gt;https://developers.google.com/discovery/&lt;/a&gt;. Sometimes new features are added to APIs with unusual names, which can cause some unexpected or non-standard style naming in the PHP classes.&lt;/p&gt; &#xA;&lt;h3&gt;How do I deal with non-JSON response types?&lt;/h3&gt; &#xA;&lt;p&gt;Some services return XML or similar by default, rather than JSON, which is what the library supports. You can request a JSON response by adding an &#39;alt&#39; argument to optional params that is normally the last argument to a method call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$opt_params = array(&#xA;  &#39;alt&#39; =&amp;gt; &#34;json&#34;&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How do I set a field to null?&lt;/h3&gt; &#xA;&lt;p&gt;The library strips out nulls from the objects sent to the Google APIs as it is the default value of all of the uninitialized properties. To work around this, set the field you want to null to &lt;code&gt;Google\Model::NULL_VALUE&lt;/code&gt;. This is a placeholder that will be replaced with a true null when sent over the wire.&lt;/p&gt; &#xA;&lt;h2&gt;Code Quality&lt;/h2&gt; &#xA;&lt;p&gt;Run the PHPUnit tests with PHPUnit. You can configure an API key and token in BaseTest.php to run all calls, but this will require some setup on the Google Developer Console.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;phpunit tests/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Coding Style&lt;/h3&gt; &#xA;&lt;p&gt;To check for coding style violations, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;vendor/bin/phpcs src --standard=style/ruleset.xml -np&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To automatically fix (fixable) coding style violations, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;vendor/bin/phpcbf src --standard=style/ruleset.xml&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>nextcloud/server</title>
    <updated>2022-09-11T01:45:52Z</updated>
    <id>tag:github.com,2022-09-11:/nextcloud/server</id>
    <link href="https://github.com/nextcloud/server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;☁️ Nextcloud server, a safe home for all your data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nextcloud Server ☁&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scrutinizer-ci.com/g/nextcloud/server/?branch=master&#34;&gt;&lt;img src=&#34;https://scrutinizer-ci.com/g/nextcloud/server/badges/quality-score.png?b=master&#34; alt=&#34;Scrutinizer Code Quality&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/nextcloud/server&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/nextcloud/server/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/209&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/209/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A safe home for all your data.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nextcloud/screenshots/master/files/Files%20Sharing.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why is this so awesome? 🤩&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📁 &lt;strong&gt;Access your Data&lt;/strong&gt; You can store your files, contacts, calendars, and more on a server of your choosing.&lt;/li&gt; &#xA; &lt;li&gt;🔄 &lt;strong&gt;Sync your Data&lt;/strong&gt; You keep your files, contacts, calendars, and more synchronized amongst your devices.&lt;/li&gt; &#xA; &lt;li&gt;🙌 &lt;strong&gt;Share your Data&lt;/strong&gt; …by giving others access to the stuff you want them to see or to collaborate with.&lt;/li&gt; &#xA; &lt;li&gt;🚀 &lt;strong&gt;Expandable with hundreds of Apps&lt;/strong&gt; ...like &lt;a href=&#34;https://github.com/nextcloud/calendar&#34;&gt;Calendar&lt;/a&gt;, &lt;a href=&#34;https://github.com/nextcloud/contacts&#34;&gt;Contacts&lt;/a&gt;, &lt;a href=&#34;https://github.com/nextcloud/mail&#34;&gt;Mail&lt;/a&gt;, &lt;a href=&#34;https://github.com/nextcloud/spreed&#34;&gt;Video Chat&lt;/a&gt; and all those you can discover in our &lt;a href=&#34;https://apps.nextcloud.com&#34;&gt;App Store&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔒 &lt;strong&gt;Security&lt;/strong&gt; with our encryption mechanisms, &lt;a href=&#34;https://hackerone.com/nextcloud&#34;&gt;HackerOne bounty program&lt;/a&gt; and two-factor authentication.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Do you want to learn more about how you can use Nextcloud to access, share and protect your files, calendars, contacts, communication &amp;amp; more at home and in your organization? &lt;a href=&#34;https://nextcloud.com/athome/&#34;&gt;&lt;strong&gt;Learn about all our Features&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get your Nextcloud 🚚&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;☑️ &lt;a href=&#34;https://nextcloud.com/signup/&#34;&gt;&lt;strong&gt;Simply sign up&lt;/strong&gt;&lt;/a&gt; at one of our providers either through our website or through the apps directly.&lt;/li&gt; &#xA; &lt;li&gt;🖥 &lt;a href=&#34;https://nextcloud.com/install/#instructions-server&#34;&gt;&lt;strong&gt;Install&lt;/strong&gt; a server by yourself&lt;/a&gt; on your hardware or by using one of our ready to use &lt;strong&gt;appliances&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;📦 Buy one of the &lt;a href=&#34;https://nextcloud.com/devices/&#34;&gt;awesome &lt;strong&gt;devices&lt;/strong&gt; coming with a preinstalled Nextcloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🏢 Find a &lt;a href=&#34;https://nextcloud.com/providers/&#34;&gt;service &lt;strong&gt;provider&lt;/strong&gt;&lt;/a&gt; who hosts Nextcloud for you or your company&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enterprise? Public Sector or Education user? You may want to have a look into &lt;a href=&#34;https://nextcloud.com/enterprise/&#34;&gt;&lt;strong&gt;Nextcloud Enterprise&lt;/strong&gt;&lt;/a&gt; provided by Nextcloud GmbH.&lt;/p&gt; &#xA;&lt;h2&gt;Get in touch 💬&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.nextcloud.com&#34;&gt;📋 Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/nextclouders&#34;&gt;👥 Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/Nextclouders&#34;&gt;🐣 Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mastodon.xyz/@nextcloud&#34;&gt;🐘 Mastodon&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also &lt;a href=&#34;https://nextcloud.com/support&#34;&gt;get support for Nextcloud&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Join the team 👪&lt;/h2&gt; &#xA;&lt;p&gt;There are many ways to contribute, of which development is only one! Find out &lt;a href=&#34;https://nextcloud.com/contribute/&#34;&gt;how to get involved&lt;/a&gt;, including as a translator, designer, tester, helping others, and much more! 😍&lt;/p&gt; &#xA;&lt;h3&gt;Development setup 👩‍💻&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;🚀 &lt;a href=&#34;https://docs.nextcloud.com/server/latest/developer_manual/getting_started/devenv.html&#34;&gt;Set up your local development environment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🐛 &lt;a href=&#34;https://github.com/nextcloud/server/labels/good%20first%20issue&#34;&gt;Pick a good first issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;👩‍🔧 Create a branch and make your changes. Remember to sign off your commits using &lt;code&gt;git commit -sm &#34;Your commit message&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;⬆ Create a &lt;a href=&#34;https://opensource.guide/how-to-contribute/#opening-a-pull-request&#34;&gt;pull request&lt;/a&gt; and &lt;code&gt;@mention&lt;/code&gt; the people from the issue to review&lt;/li&gt; &#xA; &lt;li&gt;👍 Fix things that come up during a review&lt;/li&gt; &#xA; &lt;li&gt;🎉 Wait for it to get merged!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Third-party components are handled as git submodules which have to be initialized first. So aside from the regular git checkout invoking &lt;code&gt;git submodule update --init&lt;/code&gt; or a similar command is needed, for details see Git documentation.&lt;/p&gt; &#xA;&lt;p&gt;Several apps that are included by default in regular releases such as &lt;a href=&#34;https://github.com/nextcloud/firstrunwizard&#34;&gt;First run wizard&lt;/a&gt; or &lt;a href=&#34;https://github.com/nextcloud/activity&#34;&gt;Activity&lt;/a&gt; are missing in &lt;code&gt;master&lt;/code&gt; and have to be installed manually by cloning them into the &lt;code&gt;apps&lt;/code&gt; subfolder.&lt;/p&gt; &#xA;&lt;p&gt;Otherwise, git checkouts can be handled the same as release archives, by using the &lt;code&gt;stable*&lt;/code&gt; branches. Note they should never be used on production systems.&lt;/p&gt; &#xA;&lt;h3&gt;Working with front-end code 🏗&lt;/h3&gt; &#xA;&lt;h4&gt;Building&lt;/h4&gt; &#xA;&lt;p&gt;We are moving more and more toward using Vue.js in the front-end, starting with Settings. For building the code on changes, use these terminal commands in the root folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install dependencies&#xA;make dev-setup&#xA;&#xA;# build for development&#xA;make build-js&#xA;&#xA;# build for development and watch edits&#xA;make watch-js&#xA;&#xA;# build for production with minification&#xA;make build-js-production&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Committing changes&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;When making changes, also commit the compiled files!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We still use Handlebars templates in some places in Files and Settings. We will replace these step-by-step with Vue.js, but in the meantime, you need to compile them separately.&lt;/p&gt; &#xA;&lt;p&gt;If you don’t have Handlebars installed yet, you can do it with this terminal command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo npm install -g handlebars&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then inside the root folder of your local Nextcloud development installation, run this command in the terminal every time you changed a &lt;code&gt;.handlebars&lt;/code&gt; file to compile it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./build/compile-handlebars-templates.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Before checking in JS changes, make sure to also build for production:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make build-js-production&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then add the compiled files for committing.&lt;/p&gt; &#xA;&lt;p&gt;To save some time, to only rebuild for a specific app, use the following and replace the module with the app name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;MODULE=user_status make build-js-production&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that if you used &lt;code&gt;make build-js&lt;/code&gt; or &lt;code&gt;make watch-js&lt;/code&gt; before, you&#39;ll notice that a lot of files were marked as changed, so might need to clear the workspace first.&lt;/p&gt; &#xA;&lt;h3&gt;Working with back-end code 🏗&lt;/h3&gt; &#xA;&lt;p&gt;When changing back-end PHP code, in general, no additional steps are needed before checking in.&lt;/p&gt; &#xA;&lt;p&gt;However, if new files were created, you will need to run the following command to update the autoloader files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;build/autoloaderchecker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After that, please also include the autoloader file changes in your commits.&lt;/p&gt; &#xA;&lt;h3&gt;Tools we use 🛠&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://browserstack.com&#34;&gt;👀 BrowserStack&lt;/a&gt; for cross-browser testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wave.webaim.org/extension/&#34;&gt;🌊 WAVE&lt;/a&gt; for accessibility testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/tools/lighthouse/&#34;&gt;🚨 Lighthouse&lt;/a&gt; for testing performance, accessibility, and more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution guidelines 📜&lt;/h2&gt; &#xA;&lt;p&gt;All contributions to this repository from June 16, 2016, and onward are considered to be licensed under the AGPLv3 or any later version.&lt;/p&gt; &#xA;&lt;p&gt;Nextcloud doesn&#39;t require a CLA (Contributor License Agreement). The copyright belongs to all the individual contributors. Therefore we recommend that every contributor adds the following line to the header of a file if they changed it substantially:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@copyright Copyright (c) &amp;lt;year&amp;gt;, &amp;lt;your name&amp;gt; (&amp;lt;your email address&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://nextcloud.com/community/code-of-conduct/&#34;&gt;Code of Conduct&lt;/a&gt;. This document offers some guidance to ensure Nextcloud participants can cooperate effectively in a positive and inspiring atmosphere, and to explain how together we can strengthen and support each other.&lt;/p&gt; &#xA;&lt;p&gt;Please review the &lt;a href=&#34;https://raw.githubusercontent.com/nextcloud/server/master/.github/CONTRIBUTING.md&#34;&gt;guidelines for contributing&lt;/a&gt; to this repository.&lt;/p&gt; &#xA;&lt;p&gt;More information how to contribute: &lt;a href=&#34;https://nextcloud.com/contribute/&#34;&gt;https://nextcloud.com/contribute/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>