<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-22T01:58:21Z</updated>
  <subtitle>Weekly Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mike42/escpos-php</title>
    <updated>2023-10-22T01:58:21Z</updated>
    <id>tag:github.com,2023-10-22:/mike42/escpos-php</id>
    <link href="https://github.com/mike42/escpos-php" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PHP library for printing to ESC/POS-compatible thermal and impact printers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ESC/POS Print Driver for PHP&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/mike42/escpos-php&#34;&gt;&lt;img src=&#34;https://travis-ci.org/mike42/escpos-php.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mike42/escpos-php&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/mike42/escpos-php/v/stable&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mike42/escpos-php&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/mike42/escpos-php/downloads&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mike42/escpos-php&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/mike42/escpos-php/license&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/mike42/escpos-php?branch=development&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/mike42/escpos-php/badge.svg?branch=development&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project implements a subset of Epson&#39;s ESC/POS protocol for thermal receipt printers. It allows you to generate and print receipts with basic formatting, cutting, and barcodes on a compatible printer.&lt;/p&gt; &#xA;&lt;p&gt;The library was developed to add drop-in support for receipt printing to any PHP app, including web-based point-of-sale (POS) applications.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;h3&gt;Interfaces and operating systems&lt;/h3&gt; &#xA;&lt;p&gt;This driver is known to work with the following OS/interface combinations:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&amp;nbsp;&lt;/th&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;   &lt;th&gt;Mac&lt;/th&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Ethernet&lt;/th&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/ethernet.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/ethernet.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/ethernet.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;USB&lt;/th&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/linux-usb.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Not tested&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/windows-usb.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;USB-serial&lt;/th&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Serial&lt;/th&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parallel&lt;/th&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/windows-lpt.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Not tested&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;SMB shared&lt;/th&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/smb.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/smb.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;CUPS hosted&lt;/th&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/cups.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/cups.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Printers&lt;/h3&gt; &#xA;&lt;p&gt;Many thermal receipt printers support ESC/POS to some degree. This driver has been known to work with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;3nStar RPT-008&lt;/li&gt; &#xA; &lt;li&gt;Approx APPPOS80AM&lt;/li&gt; &#xA; &lt;li&gt;AURES ODP-333&lt;/li&gt; &#xA; &lt;li&gt;AURES ODP-500&lt;/li&gt; &#xA; &lt;li&gt;Bematech-4200-TH&lt;/li&gt; &#xA; &lt;li&gt;Bematech LR2000E&lt;/li&gt; &#xA; &lt;li&gt;Birch PRP-085III&lt;/li&gt; &#xA; &lt;li&gt;Bixolon SRP-350III&lt;/li&gt; &#xA; &lt;li&gt;Bixolon SRP-350Plus&lt;/li&gt; &#xA; &lt;li&gt;Black Copper BC-85AC&lt;/li&gt; &#xA; &lt;li&gt;CHD TH-305N&lt;/li&gt; &#xA; &lt;li&gt;Citizen CBM1000-II&lt;/li&gt; &#xA; &lt;li&gt;Citizen CT-S310II&lt;/li&gt; &#xA; &lt;li&gt;Dapper-Geyi Q583P&lt;/li&gt; &#xA; &lt;li&gt;Daruma DR800&lt;/li&gt; &#xA; &lt;li&gt;DR-MP200 (manufacturer unknown)&lt;/li&gt; &#xA; &lt;li&gt;EPOS TEP 220M&lt;/li&gt; &#xA; &lt;li&gt;Elgin i9&lt;/li&gt; &#xA; &lt;li&gt;Epson EU-T332C&lt;/li&gt; &#xA; &lt;li&gt;Epson FX-890 (requires &lt;code&gt;feedForm()&lt;/code&gt; to release paper).&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T20&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T20II&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T70&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T70II&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T81&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T82II&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T88II&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T88III&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T88IV&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T88V&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-U220&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-U295 (requires &lt;code&gt;release()&lt;/code&gt; to release slip).&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-U590 and TM-U590P&lt;/li&gt; &#xA; &lt;li&gt;Equal (EQ-IT-001) POS-58&lt;/li&gt; &#xA; &lt;li&gt;Everycom EC-58&lt;/li&gt; &#xA; &lt;li&gt;Excelvan HOP-E200&lt;/li&gt; &#xA; &lt;li&gt;Excelvan HOP-E58&lt;/li&gt; &#xA; &lt;li&gt;Excelvan HOP-E801&lt;/li&gt; &#xA; &lt;li&gt;Gainscha GP-2120TF&lt;/li&gt; &#xA; &lt;li&gt;Gainscha GP-5890x (Also marketed as EC Line 5890x)&lt;/li&gt; &#xA; &lt;li&gt;Gainscha GP-U80300I (Also marketed as gprinter GP-U80300I)&lt;/li&gt; &#xA; &lt;li&gt;gprinter GP-U80160I&lt;/li&gt; &#xA; &lt;li&gt;HOIN HOP-H58&lt;/li&gt; &#xA; &lt;li&gt;Ithaca iTherm 28&lt;/li&gt; &#xA; &lt;li&gt;Hasar HTP 250&lt;/li&gt; &#xA; &lt;li&gt;Metapace T-1&lt;/li&gt; &#xA; &lt;li&gt;Metapace T-25&lt;/li&gt; &#xA; &lt;li&gt;Nexa PX700&lt;/li&gt; &#xA; &lt;li&gt;Nyear NP100&lt;/li&gt; &#xA; &lt;li&gt;OKI RT322&lt;/li&gt; &#xA; &lt;li&gt;OKI 80 Plus III&lt;/li&gt; &#xA; &lt;li&gt;Orient BTP-R580&lt;/li&gt; &#xA; &lt;li&gt;P-822D&lt;/li&gt; &#xA; &lt;li&gt;P85A-401 (make unknown)&lt;/li&gt; &#xA; &lt;li&gt;Partner Tech RP320&lt;/li&gt; &#xA; &lt;li&gt;POSLIGNE ODP200H-III-G&lt;/li&gt; &#xA; &lt;li&gt;QPOS Q58M&lt;/li&gt; &#xA; &lt;li&gt;Rongta RP326US&lt;/li&gt; &#xA; &lt;li&gt;Rongta RP58-U&lt;/li&gt; &#xA; &lt;li&gt;Rongta RP80USE&lt;/li&gt; &#xA; &lt;li&gt;SAM4S GIANT-100DB&lt;/li&gt; &#xA; &lt;li&gt;Senor TP-100&lt;/li&gt; &#xA; &lt;li&gt;Sewoo SLK-TS400&lt;/li&gt; &#xA; &lt;li&gt;SEYPOS PRP-96&lt;/li&gt; &#xA; &lt;li&gt;SEYPOS PRP-300 (Also marketed as TYSSO PRP-300)&lt;/li&gt; &#xA; &lt;li&gt;SNBC BTP-R880NPIII&lt;/li&gt; &#xA; &lt;li&gt;Solux SX-TP-88300&lt;/li&gt; &#xA; &lt;li&gt;Sicar POS-80&lt;/li&gt; &#xA; &lt;li&gt;Silicon SP-201 / RP80USE&lt;/li&gt; &#xA; &lt;li&gt;SPRT SP-POS88V&lt;/li&gt; &#xA; &lt;li&gt;Star BSC10&lt;/li&gt; &#xA; &lt;li&gt;Star TSP100 ECO&lt;/li&gt; &#xA; &lt;li&gt;Star TSP100III FuturePRNT&lt;/li&gt; &#xA; &lt;li&gt;Star TSP-650&lt;/li&gt; &#xA; &lt;li&gt;Star TUP-592&lt;/li&gt; &#xA; &lt;li&gt;TVS RP45 Shoppe&lt;/li&gt; &#xA; &lt;li&gt;Venus V248T&lt;/li&gt; &#xA; &lt;li&gt;Xeumior SM-8330&lt;/li&gt; &#xA; &lt;li&gt;Xprinter F-900&lt;/li&gt; &#xA; &lt;li&gt;Xprinter XP-365B&lt;/li&gt; &#xA; &lt;li&gt;Xprinter XP-58 Series&lt;/li&gt; &#xA; &lt;li&gt;Xprinter XP-80C&lt;/li&gt; &#xA; &lt;li&gt;Xprinter XP-90&lt;/li&gt; &#xA; &lt;li&gt;XPrinter XP-Q20011&lt;/li&gt; &#xA; &lt;li&gt;Xprinter XP-Q800&lt;/li&gt; &#xA; &lt;li&gt;Zjiang NT-58H&lt;/li&gt; &#xA; &lt;li&gt;Zjiang ZJ-5870&lt;/li&gt; &#xA; &lt;li&gt;Zjiang ZJ-5890 (Also sold as POS-5890 by many vendors; ZJ-5890K, ZJ-5890T also work).&lt;/li&gt; &#xA; &lt;li&gt;Zjiang ZJ-8220 (Also marketed as Excelvan ZJ-8220)&lt;/li&gt; &#xA; &lt;li&gt;Zjiang ZJ-8250&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you use any other printer with this code, please &lt;a href=&#34;https://github.com/mike42/escpos-php/issues/new&#34;&gt;let us know&lt;/a&gt; so that it can be added to the list.&lt;/p&gt; &#xA;&lt;h2&gt;Basic usage&lt;/h2&gt; &#xA;&lt;h3&gt;Include the library&lt;/h3&gt; &#xA;&lt;h4&gt;Composer&lt;/h4&gt; &#xA;&lt;p&gt;This library is designed for use with the &lt;code&gt;composer&lt;/code&gt; PHP dependency manager. Simply add the &lt;code&gt;mike42/escpos-php&lt;/code&gt; package to get started:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require mike42/escpos-php&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you haven&#39;t used &lt;code&gt;composer&lt;/code&gt; before, you can read about it at &lt;a href=&#34;https://getcomposer.org/&#34;&gt;getcomposer.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;p&gt;This project has few hard dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP 7.3 or newer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;json&lt;/code&gt; extension, used to load bundled printer definitions (see &lt;a href=&#34;https://www.php.net/manual/en/book.json.php&#34;&gt;documentation&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;intl&lt;/code&gt; extension, used for character encoding (see &lt;a href=&#34;https://www.php.net/manual/en/book.intl.php&#34;&gt;documentation&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zlib&lt;/code&gt; extension, used for de-compressing bundled resources (see &lt;a href=&#34;https://www.php.net/manual/en/book.zlib.php&#34;&gt;documentation&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is also suggested that you install either &lt;code&gt;imagick&lt;/code&gt; or &lt;code&gt;gd&lt;/code&gt;, as these can be used to speed up image processing.&lt;/p&gt; &#xA;&lt;p&gt;A number of optional extensions can be added to enable more specific features. These are described in the &#34;suggest&#34; section of &lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/composer.json&#34;&gt;composer.json&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;The &#39;Hello World&#39; receipt&lt;/h3&gt; &#xA;&lt;p&gt;To make use of this driver, your server (where PHP is installed) must be able to communicate with your printer. Start by generating a simple receipt and sending it to your printer using the command-line.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;/* Call this file &#39;hello-world.php&#39; */&#xA;require __DIR__ . &#39;/vendor/autoload.php&#39;;&#xA;use Mike42\Escpos\PrintConnectors\FilePrintConnector;&#xA;use Mike42\Escpos\Printer;&#xA;$connector = new FilePrintConnector(&#34;php://stdout&#34;);&#xA;$printer = new Printer($connector);&#xA;$printer -&amp;gt; text(&#34;Hello World!\n&#34;);&#xA;$printer -&amp;gt; cut();&#xA;$printer -&amp;gt; close();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some examples are below for common interfaces.&lt;/p&gt; &#xA;&lt;p&gt;Communicate with a printer with an Ethernet interface using &lt;code&gt;netcat&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php hello-world.php | nc 10.x.x.x. 9100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A USB local printer connected with &lt;code&gt;usblp&lt;/code&gt; on Linux has a device file (Includes USB-parallel interfaces):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php hello-world.php &amp;gt; /dev/usb/lp0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A computer installed into the local &lt;code&gt;cups&lt;/code&gt; server is accessed through &lt;code&gt;lp&lt;/code&gt; or &lt;code&gt;lpr&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php hello-world.php &amp;gt; foo.txt&#xA;lpr -o raw -H localhost -P printer foo.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A local or networked printer on a Windows computer is mapped in to a file, and generally requires you to share the printer first:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php hello-world.php &amp;gt; foo.txt&#xA;net use LPT1 \\server\printer&#xA;copy foo.txt LPT1&#xA;del foo.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have troubles at this point, then you should consult your OS and printer system documentation to try to find a working print command.&lt;/p&gt; &#xA;&lt;h3&gt;Using a PrintConnector&lt;/h3&gt; &#xA;&lt;p&gt;To print receipts from PHP, use the most applicable &lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/src/Mike42/Escpos/PrintConnectors&#34;&gt;PrintConnector&lt;/a&gt; for your setup. The connector simply provides the plumbing to get data to the printer.&lt;/p&gt; &#xA;&lt;p&gt;For example, a &lt;code&gt;NetworkPrintConnector&lt;/code&gt; accepts an IP address and port:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mike42\Escpos\PrintConnectors\NetworkPrintConnector;&#xA;use Mike42\Escpos\Printer;&#xA;$connector = new NetworkPrintConnector(&#34;10.x.x.x&#34;, 9100);&#xA;$printer = new Printer($connector);&#xA;try {&#xA;    // ... Print stuff&#xA;} finally {&#xA;    $printer -&amp;gt; close();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;While a serial printer might use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mike42\Escpos\PrintConnectors\FilePrintConnector;&#xA;use Mike42\Escpos\Printer;&#xA;$connector = new FilePrintConnector(&#34;/dev/ttyS0&#34;);&#xA;$printer = new Printer($connector);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For each OS/interface combination that&#39;s supported, there are examples in the compatibility section of how a &lt;code&gt;PrintConnector&lt;/code&gt; would be constructed. If you can&#39;t get a &lt;code&gt;PrintConnector&lt;/code&gt; to work, then be sure to include the working print command in your issue.&lt;/p&gt; &#xA;&lt;h3&gt;Using a CapabilityProfile&lt;/h3&gt; &#xA;&lt;p&gt;Support for commands and code pages varies between printer vendors and models. By default, the driver will accept UTF-8, and output commands that are suitable for Epson TM-series printers.&lt;/p&gt; &#xA;&lt;p&gt;When trying out a new brand of printer, it&#39;s a good idea to use the &#34;simple&#34; &lt;code&gt;CapabilityProfile&lt;/code&gt;, which instructs the driver to avoid the use of advanced features (generally simpler image handling, ASCII-only text).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mike42\Escpos\PrintConnectors\WindowsPrintConnector;&#xA;use Mike42\Escpos\CapabilityProfile;&#xA;$profile = CapabilityProfile::load(&#34;simple&#34;);&#xA;$connector = new WindowsPrintConnector(&#34;smb://computer/printer&#34;);&#xA;$printer = new Printer($connector, $profile);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As another example, Star-branded printers use different commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mike42\Escpos\PrintConnectors\WindowsPrintConnector;&#xA;use Mike42\Escpos\CapabilityProfile;&#xA;$profile = CapabilityProfile::load(&#34;SP2000&#34;)&#xA;$connector = new WindowsPrintConnector(&#34;smb://computer/printer&#34;);&#xA;$printer = new Printer($connector, $profile);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a list of available profiles, or to have support for your printer improved, please see the upstream &lt;a href=&#34;https://github.com/receipt-print-hq/escpos-printer-db&#34;&gt;receipt-print-hq/escpos-printer-db&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;h3&gt;Tips &amp;amp; examples&lt;/h3&gt; &#xA;&lt;p&gt;On Linux, your printer device file will be somewhere like &lt;code&gt;/dev/lp0&lt;/code&gt; (parallel), &lt;code&gt;/dev/usb/lp1&lt;/code&gt; (USB), &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; (USB-Serial), &lt;code&gt;/dev/ttyS0&lt;/code&gt; (serial).&lt;/p&gt; &#xA;&lt;p&gt;On Windows, the device files will be along the lines of &lt;code&gt;LPT1&lt;/code&gt; (parallel) or &lt;code&gt;COM1&lt;/code&gt; (serial). Use the &lt;code&gt;WindowsPrintConnector&lt;/code&gt; to tap into system printing on Windows (eg. &lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/windows-usb.php&#34;&gt;Windows USB&lt;/a&gt;, &lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/smb.php&#34;&gt;SMB&lt;/a&gt; or &lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/windows-lpt.php&#34;&gt;Windows LPT&lt;/a&gt;) - this submits print jobs via a queue rather than communicating directly with the printer.&lt;/p&gt; &#xA;&lt;p&gt;A complete real-world receipt can be found in the code of &lt;a href=&#34;https://github.com/mike42/Auth&#34;&gt;Auth&lt;/a&gt; in &lt;a href=&#34;https://github.com/mike42/Auth/raw/master/lib/misc/ReceiptPrinter.php&#34;&gt;ReceiptPrinter.php&lt;/a&gt;. It includes justification, boldness, and a barcode.&lt;/p&gt; &#xA;&lt;p&gt;Other examples are located in the &lt;a href=&#34;https://github.com/mike42/escpos-php/raw/master/example/&#34;&gt;example/&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Available methods&lt;/h2&gt; &#xA;&lt;h3&gt;__construct(PrintConnector $connector, CapabilityProfile $profile)&lt;/h3&gt; &#xA;&lt;p&gt;Construct new print object.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PrintConnector $connector&lt;/code&gt;: The PrintConnector to send data to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CapabilityProfile $profile&lt;/code&gt; Supported features of this printer. If not set, the &#34;default&#34; CapabilityProfile will be used, which is suitable for Epson printers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/&#34;&gt;example/interface/&lt;/a&gt; for ways to open connections for different platforms and interfaces.&lt;/p&gt; &#xA;&lt;h3&gt;barcode($content, $type)&lt;/h3&gt; &#xA;&lt;p&gt;Print a barcode.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;string $content&lt;/code&gt;: The information to encode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $type&lt;/code&gt;: The barcode standard to output. If not specified, &lt;code&gt;Printer::BARCODE_CODE39&lt;/code&gt; will be used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Currently supported barcode standards are (depending on your printer):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_UPCA&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_UPCE&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_JAN13&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_JAN8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_CODE39&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_ITF&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_CODABAR&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that some barcode standards can only encode numbers, so attempting to print non-numeric codes with them may result in strange behaviour.&lt;/p&gt; &#xA;&lt;h3&gt;bitImage(EscposImage $image, $size)&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/mike42/escpos-php/development/#graphicsescposimage-image-size&#34;&gt;graphics()&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;h3&gt;cut($mode, $lines)&lt;/h3&gt; &#xA;&lt;p&gt;Cut the paper.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $mode&lt;/code&gt;: Cut mode, either &lt;code&gt;Printer::CUT_FULL&lt;/code&gt; or &lt;code&gt;Printer::CUT_PARTIAL&lt;/code&gt;. If not specified, &lt;code&gt;Printer::CUT_FULL&lt;/code&gt; will be used.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $lines&lt;/code&gt;: Number of lines to feed before cutting. If not specified, 3 will be used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;feed($lines)&lt;/h3&gt; &#xA;&lt;p&gt;Print and feed line / Print and feed n lines.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $lines&lt;/code&gt;: Number of lines to feed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;feedForm()&lt;/h3&gt; &#xA;&lt;p&gt;Some printers require a form feed to release the paper. On most printers, this command is only useful in page mode, which is not implemented in this driver.&lt;/p&gt; &#xA;&lt;h3&gt;feedReverse($lines)&lt;/h3&gt; &#xA;&lt;p&gt;Print and reverse feed n lines.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $lines&lt;/code&gt;: number of lines to feed. If not specified, 1 line will be fed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;graphics(EscposImage $image, $size)&lt;/h3&gt; &#xA;&lt;p&gt;Print an image to the printer.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;EscposImage $img&lt;/code&gt;: The image to print.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $size&lt;/code&gt;: Output size modifier for the image.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Size modifiers are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;IMG_DEFAULT&lt;/code&gt; (leave image at original size)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IMG_DOUBLE_WIDTH&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IMG_DOUBLE_HEIGHT&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A minimal example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;$img = EscposImage::load(&#34;logo.png&#34;);&#xA;$printer -&amp;gt; graphics($img);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/mike42/escpos-php/raw/master/example/&#34;&gt;example/&lt;/a&gt; folder for detailed examples.&lt;/p&gt; &#xA;&lt;p&gt;The function &lt;a href=&#34;https://raw.githubusercontent.com/mike42/escpos-php/development/#bitimageescposimage-image-size&#34;&gt;bitImage()&lt;/a&gt; takes the same parameters, and can be used if your printer doesn&#39;t support the newer graphics commands. As an additional fallback, the &lt;code&gt;bitImageColumnFormat()&lt;/code&gt; function is also provided.&lt;/p&gt; &#xA;&lt;h3&gt;initialize()&lt;/h3&gt; &#xA;&lt;p&gt;Initialize printer. This resets formatting back to the defaults.&lt;/p&gt; &#xA;&lt;h3&gt;pdf417Code($content, $width, $heightMultiplier, $dataColumnCount, $ec, $options)&lt;/h3&gt; &#xA;&lt;p&gt;Print a two-dimensional data code using the PDF417 standard.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;string $content&lt;/code&gt;: Text or numbers to store in the code&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;number $width&lt;/code&gt;: Width of a module (pixel) in the printed code. Default is 3 dots.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;number $heightMultiplier&lt;/code&gt;: Multiplier for height of a module. Default is 3 times the width.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;number $dataColumnCount&lt;/code&gt;: Number of data columns to use. 0 (default) is to auto-calculate. Smaller numbers will result in a narrower code, making larger pixel sizes possible. Larger numbers require smaller pixel sizes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;real $ec&lt;/code&gt;: Error correction ratio, from 0.01 to 4.00. Default is 0.10 (10%).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;number $options&lt;/code&gt;: Standard code &lt;code&gt;Printer::PDF417_STANDARD&lt;/code&gt; with start/end bars, or truncated code &lt;code&gt;Printer::PDF417_TRUNCATED&lt;/code&gt; with start bars only.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;pulse($pin, $on_ms, $off_ms)&lt;/h3&gt; &#xA;&lt;p&gt;Generate a pulse, for opening a cash drawer if one is connected. The default settings (0, 120, 240) should open an Epson drawer.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $pin&lt;/code&gt;: 0 or 1, for pin 2 or pin 5 kick-out connector respectively.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $on_ms&lt;/code&gt;: pulse ON time, in milliseconds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $off_ms&lt;/code&gt;: pulse OFF time, in milliseconds.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;qrCode($content, $ec, $size, $model)&lt;/h3&gt; &#xA;&lt;p&gt;Print the given data as a QR code on the printer.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;string $content&lt;/code&gt;: The content of the code. Numeric data will be more efficiently compacted.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $ec&lt;/code&gt; Error-correction level to use. One of &lt;code&gt;Printer::QR_ECLEVEL_L&lt;/code&gt; (default), &lt;code&gt;Printer::QR_ECLEVEL_M&lt;/code&gt;, &lt;code&gt;Printer::QR_ECLEVEL_Q&lt;/code&gt; or &lt;code&gt;Printer::QR_ECLEVEL_H&lt;/code&gt;. Higher error correction results in a less compact code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $size&lt;/code&gt;: Pixel size to use. Must be 1-16 (default 3)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $model&lt;/code&gt;: QR code model to use. Must be one of &lt;code&gt;Printer::QR_MODEL_1&lt;/code&gt;, &lt;code&gt;Printer::QR_MODEL_2&lt;/code&gt; (default) or &lt;code&gt;Printer::QR_MICRO&lt;/code&gt; (not supported by all printers).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;selectPrintMode($mode)&lt;/h3&gt; &#xA;&lt;p&gt;Select print mode(s).&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $mode&lt;/code&gt;: The mode to use. Default is &lt;code&gt;Printer::MODE_FONT_A&lt;/code&gt;, with no special formatting. This has a similar effect to running &lt;code&gt;initialize()&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Several MODE_* constants can be OR&#39;d together passed to this function&#39;s &lt;code&gt;$mode&lt;/code&gt; argument. The valid modes are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MODE_FONT_A&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MODE_FONT_B&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MODE_EMPHASIZED&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MODE_DOUBLE_HEIGHT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MODE_DOUBLE_WIDTH&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MODE_UNDERLINE&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setBarcodeHeight($height)&lt;/h3&gt; &#xA;&lt;p&gt;Set barcode height.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $height&lt;/code&gt;: Height in dots. If not specified, 8 will be used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setBarcodeWidth($width)&lt;/h3&gt; &#xA;&lt;p&gt;Set barcode bar width.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $width&lt;/code&gt;: Bar width in dots. If not specified, 3 will be used. Values above 6 appear to have no effect.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setColor($color)&lt;/h3&gt; &#xA;&lt;p&gt;Select print color - on printers that support multiple colors.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $color&lt;/code&gt;: Color to use. Must be either &lt;code&gt;Printer::COLOR_1&lt;/code&gt; (default), or &lt;code&gt;Printer::COLOR_2&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setDoubleStrike($on)&lt;/h3&gt; &#xA;&lt;p&gt;Turn double-strike mode on/off.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;boolean $on&lt;/code&gt;: true for double strike, false for no double strike.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setEmphasis($on)&lt;/h3&gt; &#xA;&lt;p&gt;Turn emphasized mode on/off.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;boolean $on&lt;/code&gt;: true for emphasis, false for no emphasis.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setFont($font)&lt;/h3&gt; &#xA;&lt;p&gt;Select font. Most printers have two fonts (Fonts A and B), and some have a third (Font C).&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $font&lt;/code&gt;: The font to use. Must be either &lt;code&gt;Printer::FONT_A&lt;/code&gt;, &lt;code&gt;Printer::FONT_B&lt;/code&gt;, or &lt;code&gt;Printer::FONT_C&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setJustification($justification)&lt;/h3&gt; &#xA;&lt;p&gt;Select justification.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $justification&lt;/code&gt;: One of &lt;code&gt;Printer::JUSTIFY_LEFT&lt;/code&gt;, &lt;code&gt;Printer::JUSTIFY_CENTER&lt;/code&gt;, or &lt;code&gt;Printer::JUSTIFY_RIGHT&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setLineSpacing($height)&lt;/h3&gt; &#xA;&lt;p&gt;Set the height of the line.&lt;/p&gt; &#xA;&lt;p&gt;Some printers will allow you to overlap lines with a smaller line feed.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $height&lt;/code&gt;: The height of each line, in dots. If not set, the printer will reset to its default line spacing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setPrintLeftMargin($margin)&lt;/h3&gt; &#xA;&lt;p&gt;Set print area left margin. Reset to default with &lt;code&gt;Printer::initialize()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $margin&lt;/code&gt;: The left margin to set on to the print area, in dots.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setPrintWidth($width)&lt;/h3&gt; &#xA;&lt;p&gt;Set print area width. This can be used to add a right margin to the print area. Reset to default with &lt;code&gt;Printer::initialize()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $width&lt;/code&gt;: The width of the page print area, in dots.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setReverseColors($on)&lt;/h3&gt; &#xA;&lt;p&gt;Set black/white reverse mode on or off. In this mode, text is printed white on a black background.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;boolean $on&lt;/code&gt;: True to enable, false to disable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setTextSize($widthMultiplier, $heightMultiplier)&lt;/h3&gt; &#xA;&lt;p&gt;Set the size of text, as a multiple of the normal size.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $widthMultiplier&lt;/code&gt;: Multiple of the regular height to use (range 1 - 8).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $heightMultiplier&lt;/code&gt;: Multiple of the regular height to use (range 1 - 8).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setUnderline($underline)&lt;/h3&gt; &#xA;&lt;p&gt;Set underline for printed text.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $underline&lt;/code&gt;: Either &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;, or one of &lt;code&gt;Printer::UNDERLINE_NONE&lt;/code&gt;, &lt;code&gt;Printer::UNDERLINE_SINGLE&lt;/code&gt; or &lt;code&gt;Printer::UNDERLINE_DOUBLE&lt;/code&gt;. Defaults to &lt;code&gt;Printer::UNDERLINE_SINGLE&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;text($str)&lt;/h3&gt; &#xA;&lt;p&gt;Add text to the buffer. Text should either be followed by a line-break, or &lt;code&gt;feed()&lt;/code&gt; should be called after this.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;string $str&lt;/code&gt;: The string to print.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Further notes&lt;/h1&gt; &#xA;&lt;p&gt;Posts I&#39;ve written up for people who are learning how to use receipt printers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mike42.me/blog/what-is-escpos-and-how-do-i-use-it&#34;&gt;What is ESC/POS, and how do I use it?&lt;/a&gt;, which documents the output of &lt;code&gt;example/demo.php&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mike42.me/blog/2014-20-26-setting-up-an-epson-receipt-printer&#34;&gt;Setting up an Epson receipt printer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mike42.me/blog/2015-03-getting-a-usb-receipt-printer-working-on-linux&#34;&gt;Getting a USB receipt printer working on Linux&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;This code is MIT licensed, and you are encouraged to contribute any modifications back to the project.&lt;/p&gt; &#xA;&lt;p&gt;For development, it&#39;s suggested that you load &lt;code&gt;imagick&lt;/code&gt;, &lt;code&gt;gd&lt;/code&gt; and &lt;code&gt;Xdebug&lt;/code&gt; PHP extensions.&lt;/p&gt; &#xA;&lt;p&gt;The tests are executed on &lt;a href=&#34;https://travis-ci.org/mike42/escpos-php&#34;&gt;Travis CI&lt;/a&gt; over PHP 7.3, 7.4 and 8.0. Older versions of PHP are not supported in the current release, nor is HHVM.&lt;/p&gt; &#xA;&lt;p&gt;Fetch a copy of this code and load dependencies with composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/mike42/escpos-php&#xA;cd escpos-php/&#xA;composer install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute unit tests via &lt;code&gt;phpunit&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php vendor/bin/phpunit --coverage-text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This project uses the PSR-2 standard, which can be checked via &lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34;&gt;PHP_CodeSniffer&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php vendor/bin/phpcs --standard=psr2 src/ -n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The developer docs are build with &lt;a href=&#34;https://github.com/doxygen/doxygen&#34;&gt;doxygen&lt;/a&gt;. Re-build them to check for documentation warnings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make -C doc clean &amp;amp;&amp;amp; make -C doc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pull requests and bug reports welcome.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flucont/btcloud</title>
    <updated>2023-10-22T01:58:21Z</updated>
    <id>tag:github.com,2023-10-22:/flucont/btcloud</id>
    <link href="https://github.com/flucont/btcloud" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PHP开发的宝塔面板第三方云端&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;宝塔面板第三方云端&lt;/h1&gt; &#xA;&lt;p&gt;这是一个用php开发的宝塔面板第三方云端站点程序。&lt;/p&gt; &#xA;&lt;p&gt;你可以使用此程序搭建属于自己的宝塔面板第三方云端，实现最新版宝塔面板私有化部署，不与宝塔官方接口通信，满足隐私安全合规需求。同时还可以去除面板强制绑定账号，DIY面板功能等。&lt;/p&gt; &#xA;&lt;p&gt;网站后台管理可一键同步宝塔官方的插件列表与增量更新插件包，还有云端使用记录、IP黑白名单、操作日志、定时任务等功能。&lt;/p&gt; &#xA;&lt;p&gt;本项目自带的宝塔安装包和更新包是8.0.x最新版，已修改适配此第三方云端，并且全开源，无so等加密文件。&lt;/p&gt; &#xA;&lt;p&gt;觉得该项目不错的可以给个Star~&lt;/p&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;p&gt;1.此项目只能以自用为目的，不得侵犯堡塔公司及其他第三方的知识产权和其他合法权利。&lt;/p&gt; &#xA;&lt;p&gt;2.搭建使用此项目必须有一定的编程和Linux运维基础，纯小白不建议使用。&lt;/p&gt; &#xA;&lt;h2&gt;环境要求&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PHP&lt;/code&gt; &amp;gt;= 7.4&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MySQL&lt;/code&gt; &amp;gt;= 5.6&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fileinfo&lt;/code&gt;扩展&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ZipArchive&lt;/code&gt;扩展&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;部署方法&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flucont/btcloud/releases&#34;&gt;下载最新版的Release包&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;如果是下载的源码包，需要执行 &lt;code&gt;composer install --no-dev&lt;/code&gt; 安装依赖，如果是下载的Release包，则不需要&lt;/li&gt; &#xA; &lt;li&gt;设置网站运行目录为&lt;code&gt;public&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;设置伪静态为&lt;code&gt;ThinkPHP&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;访问网站，会自动跳转到安装页面，根据提示安装完成&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在&lt;code&gt;批量替换工具&lt;/code&gt;，执行页面显示的命令，可将bt安装包、更新包和脚本文件里面的&lt;code&gt;http://www.example.com&lt;/code&gt;批量替换成当前网站的网址。&lt;/li&gt; &#xA; &lt;li&gt;在&lt;code&gt;系统基本设置&lt;/code&gt;修改宝塔面板接口设置。你需要准备一个使用官方最新脚本安装并绑定账号的宝塔面板，用于获取最新插件列表及插件包。并根据界面提示安装好专用插件。&lt;/li&gt; &#xA; &lt;li&gt;在&lt;code&gt;定时任务设置&lt;/code&gt;执行所显示的命令从宝塔官方获取最新的插件列表并批量下载插件包（增量更新）。当然你也可以去插件列表，一个一个点击下载。&lt;/li&gt; &#xA; &lt;li&gt;访问网站&lt;code&gt;/download&lt;/code&gt;查看使用此第三方云端的一键安装脚本。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;更新方法&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flucont/btcloud/releases&#34;&gt;下载最新版的Release包&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;上传覆盖除data文件夹以外的全部文件&lt;/li&gt; &#xA; &lt;li&gt;后台使用批量替换工具-&amp;gt;获取最新插件列表-&amp;gt;修改Linux面板等版本号&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;其他&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flucont/btcloud/main/wiki/update.md&#34;&gt;Linux面板官方更新包修改记录&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flucont/btcloud/main/wiki/updatewin.md&#34;&gt;Windows面板官方更新包修改记录&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flucont/btcloud/main/wiki/btmonitor.md&#34;&gt;宝塔云监控安装包修改记录&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;宝塔面板官方版与此第三方云端版对比：&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;&lt;/th&gt; &#xA;     &lt;th&gt;官方版&lt;/th&gt; &#xA;     &lt;th&gt;此第三方云端版&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;版本更新&lt;/td&gt; &#xA;     &lt;td&gt;支持&lt;/td&gt; &#xA;     &lt;td&gt;支持&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;面板广告&lt;/td&gt; &#xA;     &lt;td&gt;有广告&lt;/td&gt; &#xA;     &lt;td&gt;无广告&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;是否全开源&lt;/td&gt; &#xA;     &lt;td&gt;没有全开源&lt;/td&gt; &#xA;     &lt;td&gt;全开源&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;资源占用&lt;/td&gt; &#xA;     &lt;td&gt;各种统计上报等任务，资源占用略高&lt;/td&gt; &#xA;     &lt;td&gt;去除了很多无用的定时任务，资源占较少&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;兼容性&lt;/td&gt; &#xA;     &lt;td&gt;由于编译的so文件有系统架构限制，兼容的系统仅限已编译的so对应的系统架构&lt;/td&gt; &#xA;     &lt;td&gt;由于全开源，没有已编译的so文件，因此无系统架构限制&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>xing61/xiaoyi-robot</title>
    <updated>2023-10-22T01:58:21Z</updated>
    <id>tag:github.com,2023-10-22:/xing61/xiaoyi-robot</id>
    <link href="https://github.com/xing61/xiaoyi-robot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;优质稳定的OpenAI的API接口-For企业和开发者。openai的国内代理，国内接口请求转发，api proxy，提供ChatGPT的API调用，支持openai的API接口，支持：gpt-4，gpt-3.5。不需要使用 API Key, 不需要买openai的账号，不需要科学上网，不需要美元的银行卡，通通不用的，直接调用就行，稳定好用！！智增增，小一机器人&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;优质稳定的OpenAI的API接口-For企业和开发者&lt;/h1&gt; &#xA;&lt;h4&gt;介绍&lt;/h4&gt; &#xA;&lt;p&gt;为企业和开发者提供优质稳定的OpenAI相关的API调用接口。&lt;br&gt; 智增增-大模型的API接口服务商，提供ChatGPT的API调用，支持openai的API接口，支持：gpt-4，gpt-3.5。&lt;br&gt; 要买openai的账号？&lt;br&gt; 要科学上网？&lt;br&gt; 要美元的银行卡？&lt;br&gt; 通通不用的，直接调用就行，简单粗暴，关键稳定好用！！&lt;br&gt; openai的国内代理，国内接口请求转发，api proxy&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;项目主要优势&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;不限制使用，可以用微信充值，没有封号风险。&lt;/li&gt; &#xA;   &lt;li&gt;不用买openai的账号，不用美元的银行卡。&lt;/li&gt; &#xA;   &lt;li&gt;无需代理即可访问，没有任何的阻拦。&lt;/li&gt; &#xA;   &lt;li&gt;强大的接口能力，支持openai所有接口和模型：支持GPT-3.5，GPT-4，Embedding，Whisper，Fine-tuning，Image等&lt;/li&gt; &#xA;   &lt;li&gt;最广泛的插件支持能力：Sidebar，沉浸式翻译，ChatHub，Chatbox，CodeGPT，ChatGPT-Next-Web等各类大模型插件。如果不想写代码，仅仅想在插件中使用，可以使用我们这个工具：&lt;a href=&#34;https://github.com/xing61/chatgpt-plugin-key&#34;&gt;https://github.com/xing61/chatgpt-plugin-key&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;兼容OpenAI接口格式，可以做到平替。&lt;/li&gt; &#xA;   &lt;li&gt;支持对Embeddings支持，可以用接口运行向量库、AutoGPT等应用。&lt;/li&gt; &#xA;   &lt;li&gt;支持对stream模式的支持，可以支持原生的各种应用&lt;/li&gt; &#xA;   &lt;li&gt;支持文字生成图片&lt;/li&gt; &#xA;   &lt;li&gt;支持官方的Whisper模型，支持transcriptions和translations，可以做语音识别和翻译&lt;/li&gt; &#xA;   &lt;li&gt;支持fine-tune（微调），可以使用自己的数据来微调GPT的模型，详见示例&lt;/li&gt; &#xA;   &lt;li&gt;支持函数调用(function_call)，详见示例&lt;/li&gt; &#xA;   &lt;li&gt;更多特性支持，敬请期待。也可直接向我们提交需求哦&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;项目地址&lt;/strong&gt;&lt;br&gt; 1、项目官方网址：&lt;a href=&#34;http://gpt.zhizengzeng.com/#/login&#34;&gt;http://gpt.zhizengzeng.com/#/login&lt;/a&gt;&lt;br&gt; 智增增-大模型的API接口服务商&lt;br&gt; 开发者单独的Secret Key、余额查询、示例代码等可以从管理后台中获取。&lt;br&gt; 2、微信交流群（如果你也对本项目感兴趣，欢迎加入群聊参与讨论交流）：&lt;br&gt; &lt;img src=&#34;https://github.com/xing61/xiaoyi-robot/assets/38256442/bb859bef-85f0-4451-9061-1a4d6a1b9083&#34; alt=&#34;微信截图_20231021132523&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;注意事项&lt;/strong&gt;&lt;br&gt; 注意事项！！&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;现在主要发现是有3个问题，  &#xA;1、要加一个请求头，api接口文档中有说明：&#xA;curl -H &#34;Content-Type: application/json&#34; -H &#34;Authorization: Bearer $api_secret_key&#34; -XPOST https://flag.smarttrot.com/v1/chat/completions -d &#39;{&#34;messages&#34;: [{&#34;role&#34;:&#34;user&#34;,&#34;content&#34;:&#34;请介绍一下你自己&#34;}]}&#39;  | iconv -f utf-8 -t utf-8  &#xA;2、messages传的不对，messages是array&#xA;3、api_secret_key传的不对，亲，不能再传openai的了，你要传你从智增增拿到的key（不需要有openai的key哈）       &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;注：&lt;br&gt; 1、以下所有接口的base_url: &lt;code&gt;https://flag.smarttrot.com/&lt;/code&gt; （支持https）&lt;br&gt; 2、API通过HTTP请求调用。每次请求，需要在HTTP头中携带用户的api_secret_key，用于认证。 开发者单独的api_secret_key，请从智增增管理后台获得。 请求头形如：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Content-Type: application/json&#xA;Authorization: Bearer $api_secret_key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;典型用法&lt;/strong&gt;&lt;br&gt; 典型用法：&lt;br&gt; 1、设置OPENAI_API_KEY环境变量为：智增增后台获取的api_secret_key，替换官方的API_KEY: sk-****** &lt;br&gt; 2、设置OPENAI_API_BASE_URL环境变量为：&lt;code&gt;https://flag.smarttrot.com/v1&lt;/code&gt;, 替换官方的域名: &lt;code&gt;https://api.openai.com/v1&lt;/code&gt; &lt;br&gt; &lt;img src=&#34;https://github.com/xing61/xiaoyi-robot/assets/38256442/14cf6382-c6e8-465c-ab13-49989020fd5e&#34; alt=&#34;官方库示例-智增增&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API文档&lt;/h2&gt; &#xA;&lt;p&gt;（接口请求规范完全和openai一样，可以直接以openai的接口文档为准：&lt;a href=&#34;https://platform.openai.com/docs/api-reference/introduction%EF%BC%89&#34;&gt;https://platform.openai.com/docs/api-reference/introduction）&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;1、创建chat&lt;/h4&gt; &#xA;&lt;p&gt;调用本接口，发起一次对话请求&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求URL&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;v1/chat/completions&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求方式&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Header参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;值&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Content-Type&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/json&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Authorization&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bearer $api_secret_key&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;开发者单独的api_secret_key，请从智增增管理后台获得。推荐在header中设置此字段&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;请求参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;是否必须&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;model&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大模型的类别，目前支持：gpt-4, gpt-4-0314, gpt-4-0613, gpt-4-32k, gpt-4-32k-0613, gpt-3.5-turbo, gpt-3.5-turbo-0613, gpt-3.5-turbo-16k, gpt-3.5-turbo-16k-0613。默认gpt-3.5-turbo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;messages&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;List(message)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;聊天上下文信息。说明:&lt;br&gt;（1）messages成员不能为空，1个成员表示单轮对话，多个成员表示多轮对话。&lt;br&gt;（2）最后一个message为当前请求的信息，前面的message为历史对话信息。&lt;br&gt;（3）必须为奇数个成员，成员中message的role必须依次为user、assistant。&lt;br&gt;（4）最后一个message的content长度（即此轮对话的问题）不能超过2000个字符；如果messages中content总长度大于2000字符，系统会依次遗忘最早的历史会话，直到content的总长度不超过2000个字符。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;stream&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bool&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是否以流式接口的形式返回数据，默认false。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;user&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;表示最终用户的唯一标识符，可以监视和检测滥用行为，防止接口恶意调用。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;其它高级参数：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;请求参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;是否必须&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;api_secret_key&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;兼容老版接口，api_secret_key在header和此字段二者传其一即可。&lt;br&gt;注意：此字段将在后续版本中逐渐废弃&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;temperature&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.We generally recommend altering this or top_p but not both.，默认：1。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;top_p&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.We generally recommend altering this or temperature but not both.，默认：1。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;How many chat completion choices to generate for each input message. 默认:1。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;stop&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Up to 4 sequences where the API will stop generating further tokens.，默认null。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;max_tokens&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The maximum number of tokens to generate in the chat completion.The total length of input tokens and generated tokens is limited by the model&#39;s context length. Example Python code for counting tokens.默认: 不限制。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;presence_penalty&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model&#39;s likelihood to talk about new topics.，默认:0。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;frequency_penalty&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model&#39;s likelihood to repeat the same line verbatim.，默认：0。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;logit_bias&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;map&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Modify the likelihood of specified tokens appearing in the completion.Accepts a json object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.，默认:null。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;message说明&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;role&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The role of the messages author. One of system, user, assistant, or function.&lt;br&gt; user: 表示用户&lt;br&gt;assistant: 表示对话助手&lt;br&gt;function：表示函数调用&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;content&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;对话内容，不能为空。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;返回参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;返回参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;code&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;执行结果code，0表示成功，其它表示失败，失败信息见msg字段&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;msg&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;String&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;执行结果消息&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;id&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;本轮对话的id。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;created&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;时间戳。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;choices&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;List(choice)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;对话返回结果。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;usage&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;usage&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;token统计信息，token数 = 汉字数+单词数*1.3 （仅为估算逻辑）。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;choice说明&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;message&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;message&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;见上文message说明。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;index&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;当前choice的序号。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;finish_reason&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;结束原因。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;usage说明&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;prompt_tokens&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;问题tokens数。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;completion_tokens&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;回答tokens数。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;total_tokens&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tokens总数。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;更多示例见本页：&lt;a href=&#34;https://github.com/xing61/xiaoyi-robot/tree/main/%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81&#34;&gt;https://github.com/xing61/xiaoyi-robot/tree/main/%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -H &#34;Content-Type: application/json&#34; &#xA;     -H &#34;Authorization: Bearer $api_secret_key&#34; &#xA;     -XPOST https://flag.smarttrot.com/v1/chat/completions -d &#39;{&#xA;  &#34;messages&#34;: [&#xA;    {&#34;role&#34;:&#34;user&#34;,&#34;content&#34;:&#34;请介绍一下你自己&#34;},&#xA;    {&#34;role&#34;:&#34;assistant&#34;,&#34;content&#34;:&#34;您好，我是智增增机器人。我能够与人对话互动，回答问题，协助创作，高效便捷地帮助人们获取信息、知识和灵感。&#34;},&#xA;    {&#34;role&#34;:&#34;user&#34;,&#34;content&#34;: &#34;1+100=&#34;}&#xA;  ]&#xA;}&#39;  | iconv -f utf-8 -t utf-8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;php示例代码：  &#xA;// 设置请求头&#xA;$api_secret_key = &#39;xxxxxxxxxxxxxxxxxx&#39;; // 你的api_secret_key&#xA;$headers = array(&#xA;    &#34;Content-Type: application/json&#34;,&#xA;    &#34;Authorization: Bearer &#34;.$api_secret_key&#xA;);&#xA;// 设置请求参数&#xA;$params = array();&#xA;$params[&#39;user&#39;] = &#39;张三&#39;;&#xA;{&#xA;    $one = [&#34;role&#34; =&amp;gt; &#39;user&#39;, &#34;content&#34; =&amp;gt; &#34;1+100=&#34;];&#xA;    $messages = array(); $messages[] = $one;&#xA;    $params[&#39;messages&#39;] = $messages;&#xA;}&#xA;// 调用请求&#xA;$cburl = &#39;https://flag.smarttrot.com/v1/chat/completions&#39;;&#xA;$chatgpt_resp = Tool::_request(&#39;post&#39;, $cburl, $params, $headers);&#xA;$data = json_decode($chatgpt_resp, true);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;python使用官方库示例代码：&#xA;import os&#xA;import openai&#xA;&#xA;openai.api_key = &#34;您的api_secret_key&#34;&#xA;openai.api_base = &#34;https://flag.smarttrot.com/v1&#34;&#xA;&#xA;chat_completion = openai.ChatCompletion.create(&#xA;    model=&#34;gpt-3.5-turbo&#34;,&#xA;    messages=[{ &#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hello world&#34; }]&#xA;)&#xA;print(chat_completion.choices[0].message.content) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;python示例代码：&#xA;import os&#xA;import requests&#xA;import time&#xA;import json&#xA;&#xA;def chat_completions():&#xA;    url=&#34;https://flag.smarttrot.com/v1/chat/completions&#34;&#xA;    api_secret_key = &#39;xxxxxxxxx&#39;;  # 你的api_secret_key&#xA;    headers = {&#39;Content-Type&#39;: &#39;application/json&#39;, &#39;Accept&#39;:&#39;application/json&#39;,&#xA;               &#39;Authorization&#39;: &#34;Bearer &#34;+api_secret_key}&#xA;    params = {&#39;user&#39;:&#39;张三&#39;,&#xA;              &#39;messages&#39;:[{&#39;role&#39;:&#39;user&#39;, &#39;content&#39;:&#39;1+100=&#39;}]};&#xA;    r = requests.post(url, json.dumps(params), headers=headers)&#xA;    print(r.json())&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    chat_completions();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;返回示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;code&#34;: 0,&#xA;  &#34;msg&#34;: &#34;&#34;,&#xA;  &#34;id&#34;: &#34;as-bcmt5ct4iy&#34;,&#xA;  &#34;created&#34;: 1680167072,&#xA;  &#34;choices&#34;:[{&#34;message&#34;:{&#34;role&#34;:&#34;assistant&#34;,&#34;content&#34;:&#34;1+100=101&#34;},&#34;finish_reason&#34;:&#34;stop&#34;,&#34;index&#34;:0}],&#xA;  &#34;usage&#34;: {&#xA;    &#34;prompt_tokens&#34;: 470,&#xA;    &#34;completion_tokens&#34;: 198,&#xA;    &#34;total_tokens&#34;: 668&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2、Completions&lt;/h4&gt; &#xA;&lt;p&gt;Given a prompt, the model will return one or more predicted completions, and can also return the probabilities of alternative tokens at each position.&lt;/p&gt; &#xA;&lt;h4&gt;2.1、Create completion&lt;/h4&gt; &#xA;&lt;p&gt;Creates a completion for the provided prompt and parameters.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求URL&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;v1/completions&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求方式&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Header参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;值&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Content-Type&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Authorization&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bearer $api_secret_key&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;请求参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;是否必须&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;model&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ID of the model to use. You can use the List models API to see all of your available models, &lt;br&gt;or see our Model overview for descriptions of them.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;prompt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string or array&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The prompt(s) to generate completions for, encoded as a string, array of strings,&lt;br&gt; array of tokens, or array of token arrays.&lt;br&gt;Note that &amp;lt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;suffix&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The suffix that comes after a completion of inserted text.Defaults to null&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;max_tokens&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The maximum number of tokens to generate in the completion.&lt;br&gt;The token count of your prompt plus max_tokens cannot exceed the model&#39;s context length. &lt;br&gt;Example Python code for counting tokens.Defaults to 16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;temperature&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;What sampling temperature to use, between 0 and 2. &lt;br&gt;Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.&lt;br&gt;We generally recommend altering this or top_p but not both.Defaults to 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;top_p&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;An alternative to sampling with temperature, called nucleus sampling, &lt;br&gt;where the model considers the results of the tokens with top_p probability mass. &lt;br&gt;So 0.1 means only the tokens comprising the top 10% probability mass are considered.&lt;br&gt;We generally recommend altering this or temperature but not both.Defaults to 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;How many completions to generate for each prompt.&lt;br&gt;Note: Because this parameter generates many completions, &lt;br&gt;it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for max_tokens and stop.Defaults to 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;stream&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bool&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Whether to stream back partial progress. &lt;br&gt;If set, tokens will be sent as data-only server-sent events as they become available, &lt;br&gt;with the stream terminated by a data: [DONE] message. Example Python code.Defaults to false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;logprobs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Include the log probabilities on the logprobs most likely tokens, &lt;br&gt;as well the chosen tokens. For example, if logprobs is 5, the API will return a list of the 5 most likely tokens. &lt;br&gt;The API will always return the logprob of the sampled token, so there may be up to logprobs+1 elements in the response.&lt;br&gt;The maximum value for logprobs is 5. If you need more than this, &lt;br&gt;please contact us through our Help center and describe your use case.Defaults to null&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;echo&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bool&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Echo back the prompt in addition to the completion。Defaults to false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;stop&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Up to 4 sequences where the API will stop generating further tokens. &lt;br&gt;The returned text will not contain the stop sequence.Defaults to null&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;presence_penalty&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Number between -2.0 and 2.0. Positive values penalize new tokens &lt;br&gt;based on whether they appear in the text so far, &lt;br&gt;increasing the model&#39;s likelihood to talk about new topics.&lt;br&gt;See more information about frequency and presence penalties.Defaults to 0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;frequency_penalty&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Number between -2.0 and 2.0. &lt;br&gt;Positive values penalize new tokens based on their existing frequency in the text so far,&lt;br&gt; decreasing the model&#39;s likelihood to repeat the same line verbatim.&lt;br&gt;See more information about frequency and presence penalties.Defaults to 0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;best_of&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Generates best_of completions server-side and returns the &#34;best&#34; (the one with the highest log probability per token). &lt;br&gt;Results cannot be streamed.&lt;br&gt;When used with n, best_of controls the number of candidate completions and n specifies how many to return – &lt;br&gt;best_of must be greater than n.&lt;br&gt;Note: Because this parameter generates many completions, it can quickly consume your token quota. &lt;br&gt;Use carefully and ensure that you have reasonable settings for max_tokens and stop.Defaults to 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;logit_bias&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;map&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Modify the likelihood of specified tokens appearing in the completion.&lt;br&gt;Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100.&lt;br&gt; You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to token IDs.&lt;br&gt; Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, &lt;br&gt;but values between -1 and 1 should decrease or increase likelihood of &lt;br&gt;selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.&lt;br&gt;As an example, you can pass {&#34;50256&#34;: -100} to prevent the &amp;lt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;user&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;表示最终用户的唯一标识符，可以监视和检测滥用行为，防止接口恶意调用。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;返回参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;返回参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;code&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;执行结果code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;msg&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;String&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;执行结果消息&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;id&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;本轮对话的id。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;object&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;text_completion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;created&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;时间戳。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;model&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;本次调用的模型&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;choices&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;List(choice)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;对话返回结果。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;usage&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;usage&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;token统计信息，token数 = 汉字数+单词数*1.3 （仅为估算逻辑）。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;choice说明&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;text&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;返回的文本&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;index&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;当前choice的序号。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;logprobs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;当前choice的logprobs。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;finish_reason&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;结束原因。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;usage说明&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;prompt_tokens&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;问题tokens数。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;completion_tokens&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;回答tokens数。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;total_tokens&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tokens总数。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -H &#34;Content-Type: application/json&#34; -H &#34;Authorization: Bearer $api_secret_key&#34; -XPOST xxxxx/v1/chat/completions -d &#39;{&#xA;  &#34;messages&#34;: [&#xA;    {&#34;role&#34;:&#34;user&#34;,&#34;content&#34;:&#34;请介绍一下你自己&#34;}&#xA;  ]&#xA;}&#39;  | iconv -f utf-8 -t utf-8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;返回示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;code&#34;: 0,&#xA;  &#34;msg&#34;: &#34;&#34;,&#xA;  &#34;id&#34;: &#34;cmpl-uqkvlQyYK7bGYrRHQ0eXlWi7&#34;,&#xA;  &#34;object&#34;: &#34;text_completion&#34;,&#xA;  &#34;created&#34;: 1589478378,&#xA;  &#34;model&#34;: &#34;text-davinci-003&#34;,&#xA;  &#34;choices&#34;: [&#xA;    {&#xA;      &#34;text&#34;: &#34;\n\nThis is indeed a test&#34;,&#xA;      &#34;index&#34;: 0,&#xA;      &#34;logprobs&#34;: null,&#xA;      &#34;finish_reason&#34;: &#34;length&#34;&#xA;    }&#xA;  ],&#xA;  &#34;usage&#34;: {&#xA;    &#34;prompt_tokens&#34;: 5,&#xA;    &#34;completion_tokens&#34;: 7,&#xA;    &#34;total_tokens&#34;: 12&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3、图片-创建图片&lt;/h4&gt; &#xA;&lt;p&gt;Given a prompt and/or an input image, the model will generate a new image.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求URL&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;v1/images/generations&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求方式&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Header参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;值&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Content-Type&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Authorization&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bearer $api_secret_key&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;请求参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;是否必须&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;prompt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A text description of the desired image(s). The maximum length is 1000 characters.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The number of images to generate. Must be between 1 and 10. Defaults to 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;size&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024. Defaults to 1024x1024&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;response_format&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The format in which the generated images are returned. Must be one of url or b64_json. Defaults to url&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;user&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;表示最终用户的唯一标识符，可以监视和检测滥用行为，防止接口恶意调用。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;返回参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;返回参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;code&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;执行结果code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;msg&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;String&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;执行结果消息&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;created&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;时间戳。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;data&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;List(img)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;对话返回结果。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;img说明&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;url&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;当前图片的地址url&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -H &#34;Content-Type: application/json&#34; -H &#34;Authorization: Bearer $api_secret_key&#34; -XPOST xxxxx/v1/images/generations -d &#39;{&#xA;  &#34;prompt&#34;: &#34;A cute baby sea otter&#34;,&#xA;}&#39;  | iconv -f utf-8 -t utf-8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;返回示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;code&#34;: 0,&#xA;  &#34;msg&#34;: &#34;&#34;,&#xA;  &#34;created&#34;: 1680167072,&#xA;  &#34;data&#34;: [&#xA;    {&#xA;      &#34;url&#34;: &#34;https://...&#34;&#xA;    },&#xA;    {&#xA;      &#34;url&#34;: &#34;https://...&#34;&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4、Embeddings&lt;/h4&gt; &#xA;&lt;p&gt;Get a vector representation of a given input that can be easily consumed by machine learning models and algorithms. Related guide: Embeddings&lt;/p&gt; &#xA;&lt;h4&gt;4.1、Create embeddings&lt;/h4&gt; &#xA;&lt;p&gt;Creates an embedding vector representing the input text.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求URL&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;v1/embeddings&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求方式&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Header参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;值&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Content-Type&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Authorization&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bearer $api_secret_key&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;请求参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;是否必须&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;model&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ID of the model to use. You can use the List models API to see all of your available models, or see our Model overview for descriptions of them. 默认：text-embedding-ada-002（官方推荐）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;input&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a single request, pass an array of strings or array of token arrays. Each input must not exceed the max input tokens for the model (8191 tokens for text-embedding-ada-002). Example Python code for counting tokens.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;user&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -H &#34;Content-Type: application/json&#34; -H &#34;Authorization: Bearer $api_secret_key&#34; -XPOST xxxxx/v1/embeddings -d &#39;{&#xA;  &#34;input&#34;: &#34;The food was delicious and the waiter...&#34;,&#xA;    &#34;model&#34;: &#34;text-embedding-ada-002&#34;&#xA;}&#39;  | iconv -f utf-8 -t utf-8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;返回示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;&#34;code&#34;: 0,&#xA;  &#34;msg&#34;: &#34;&#34;,&#xA;  &#34;object&#34;: &#34;list&#34;,&#xA;  &#34;data&#34;: [&#xA;    {&#xA;      &#34;object&#34;: &#34;embedding&#34;,&#xA;      &#34;embedding&#34;: [&#xA;        0.0023064255,&#xA;        -0.009327292,&#xA;        .... (1536 floats total for ada-002)&#xA;        -0.0028842222,&#xA;      ],&#xA;      &#34;index&#34;: 0&#xA;    }&#xA;  ],&#xA;  &#34;model&#34;: &#34;text-embedding-ada-002&#34;,&#xA;  &#34;usage&#34;: {&#xA;    &#34;prompt_tokens&#34;: 8,&#xA;    &#34;total_tokens&#34;: 8&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4、Audio&lt;/h4&gt; &#xA;&lt;p&gt;介绍&lt;br&gt; 语音转文本API基于我们先进的开源large-v2 Whisper模型提供了两个端点，分别是“transcriptions”（转录）和“translations”（翻译）。它们可以用于：&lt;/p&gt; &#xA;&lt;p&gt;将音频转录为与音频语言相同的文本。&lt;br&gt; 将音频翻译并转录为英文。&lt;br&gt; 目前，文件上传限制为25 MB，支持以下输入文件类型：mp3、mp4、mpeg、mpga、m4a、wav和webm。&lt;/p&gt; &#xA;&lt;h4&gt;4.1、Create transcription&lt;/h4&gt; &#xA;&lt;p&gt;Transcribes audio into the input language.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求URL&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;v1/audio/transcriptions&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求方式&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Header参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;值&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Content-Type&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;multipart/form-data&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Authorization&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bearer $api_secret_key&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;请求参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;是否必须&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;要识别的音频文件对象（不是文件名），可以使用以下格式之一：flac、mp3、mp4、mpeg、mpga、m4a、ogg、wav或webm。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;model&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ID of the model to use. Only whisper-1 is currently available.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;prompt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;An optional text to guide the model&#39;s style or continue a previous audio segment. The prompt should match the audio language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;response_format&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.默认：json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;temperature&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use log probability to automatically increase the temperature until certain thresholds are hit. 默认：0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;language&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The language of the input audio. Supplying the input language in ISO-639-1 format will improve accuracy and latency.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;import os&#xA;import openai&#xA;openai.api_key = os.getenv(&#34;OPENAI_API_KEY&#34;)&#xA;audio_file = open(&#34;audio.mp3&#34;, &#34;rb&#34;)&#xA;transcript = openai.Audio.transcribe(&#34;whisper-1&#34;, audio_file)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;返回示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;text&#34;: &#34;Imagine the wildest idea that you&#39;ve ever had, and you&#39;re curious about how it might scale to something that&#39;s a 100, a 1,000 times bigger. This is a place where you can get to do that.&#34;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4.2、Create translation&lt;/h4&gt; &#xA;&lt;p&gt;Translates audio into English.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求URL&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;v1/audio/translations&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求方式&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Header参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;值&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Content-Type&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;multipart/form-data&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Authorization&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bearer $api_secret_key&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;请求参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;是否必须&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;要识别的音频文件对象（不是文件名），可以使用以下格式之一：flac、mp3、mp4、mpeg、mpga、m4a、ogg、wav或webm。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;model&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ID of the model to use. Only whisper-1 is currently available.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;prompt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;An optional text to guide the model&#39;s style or continue a previous audio segment. The prompt should match the audio language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;response_format&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.默认：json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;temperature&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use log probability to automatically increase the temperature until certain thresholds are hit. 默认：0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;import os&#xA;import openai&#xA;openai.api_key = os.getenv(&#34;OPENAI_API_KEY&#34;)&#xA;audio_file = open(&#34;german.m4a&#34;, &#34;rb&#34;)&#xA;transcript = openai.Audio.translate(&#34;whisper-1&#34;, audio_file)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;返回示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;text&#34;: &#34;Hello, my name is Wolfgang and I come from Germany. Where are you heading today?&#34;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5、File&lt;/h4&gt; &#xA;&lt;p&gt;Files are used to upload documents that can be used with features like fine-tuning.&lt;/p&gt; &#xA;&lt;h4&gt;5.1、Upload file&lt;/h4&gt; &#xA;&lt;p&gt;Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求URL&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;v1/files&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求方式&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Header参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;值&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Content-Type&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;multipart/form-data&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Authorization&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bearer $api_secret_key&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;请求参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;是否必须&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Name of the JSON Lines file to be uploaded. If the purpose is set to &#34;fine-tune&#34;, the file will be used for fine-tuning.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;purpose&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The intended purpose of the uploaded documents. Use &#34;fine-tune&#34; for fine-tuning. This allows us to validate the format of the uploaded file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;import os&#xA;import openai&#xA;openai.api_key = os.getenv(&#34;OPENAI_API_KEY&#34;)&#xA;openai.File.create(&#xA;  file=open(&#34;mydata.jsonl&#34;, &#34;rb&#34;),&#xA;  purpose=&#39;fine-tune&#39;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;返回示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;id&#34;: &#34;file-abc123&#34;,&#xA;  &#34;object&#34;: &#34;file&#34;,&#xA;  &#34;bytes&#34;: 140,&#xA;  &#34;created_at&#34;: 1613779121,&#xA;  &#34;filename&#34;: &#34;mydata.jsonl&#34;,&#xA;  &#34;purpose&#34;: &#34;fine-tune&#34;,&#xA;  &#34;status&#34;: &#34;uploaded&#34; | &#34;processed&#34; | &#34;pending&#34; | &#34;error&#34;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;6、Fine-tuning&lt;/h4&gt; &#xA;&lt;p&gt;Manage fine-tuning jobs to tailor a model to your specific training data.&lt;br&gt; 微调（fine-tune）是什么？&lt;br&gt; 网上内容多的是，不过多解释，只讲核心的&lt;br&gt; 微调的基本思想是，先在大规模文本数据上预训练一个大型的语言模型，例如 GPT-3.5（这部分是大模型），然后使用特定任务的数据集（如法律、医疗），进一步对模型进行训练，以适应特定的任务（这部分是微调）。在这个过程中，模型的参数会进行微小的调整，使其在特定业务场景上的性能更好。&lt;/p&gt; &#xA;&lt;h4&gt;6.1、Create fine-tuning job&lt;/h4&gt; &#xA;&lt;p&gt;Creates a job that fine-tunes a specified model from a given dataset.&lt;/p&gt; &#xA;&lt;p&gt;Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求URL&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;v1/fine_tuning/jobs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求方式&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Header参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;值&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Content-Type&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Authorization&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bearer $api_secret_key&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;请求参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;是否必须&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;training_file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The ID of an uploaded file that contains training data.&lt;br&gt;See upload file for how to upload a file.&lt;br&gt;Your dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose fine-tune.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;model&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The name of the model to fine-tune.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;validation_file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The ID of an uploaded file that contains validation data.&lt;br&gt;If you provide this file, the data is used to generate validation metrics periodically during fine-tuning. These metrics can be viewed in the fine-tuning results file. The same data should not be present in both train and validation files.&lt;br&gt;Your dataset must be formatted as a JSONL file. You must upload your file with the purpose fine-tune.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;hyperparameters&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;object&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The hyperparameters used for the fine-tuning job.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;suffix&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;object&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A string of up to 40 characters that will be added to your fine-tuned model name.&lt;br&gt;For example, a suffix of &#34;custom-model-name&#34; would produce a model name like ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;import os&#xA;import openai&#xA;openai.api_key = os.getenv(&#34;OPENAI_API_KEY&#34;)&#xA;openai.FineTuningJob.create(training_file=&#34;file-abc123&#34;, model=&#34;gpt-3.5-turbo&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;返回示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;object&#34;: &#34;fine_tuning.job&#34;,&#xA;  &#34;id&#34;: &#34;ft-AF1WoRqd3aJAHsqc9NY7iL8F&#34;,&#xA;  &#34;model&#34;: &#34;gpt-3.5-turbo-0613&#34;,&#xA;  &#34;created_at&#34;: 1614807352,&#xA;  &#34;fine_tuned_model&#34;: null,&#xA;  &#34;organization_id&#34;: &#34;org-123&#34;,&#xA;  &#34;result_files&#34;: [],&#xA;  &#34;status&#34;: &#34;pending&#34;,&#xA;  &#34;validation_file&#34;: null,&#xA;  &#34;training_file&#34;: &#34;file-abc123&#34;,&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;7、账户相关&lt;/h4&gt; &#xA;&lt;p&gt;获取账户相关信息：余额等。&lt;/p&gt; &#xA;&lt;h4&gt;7.1、查询余额&lt;/h4&gt; &#xA;&lt;p&gt;获取账户余额&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求URL&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;v1/dashboard/billing/credit_grants&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求方式&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Header参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;名称&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;值&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Content-Type&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Authorization&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bearer $api_secret_key&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求参数&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;请求参数&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数类型&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;是否必须&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;参数说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;请求示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;BASE_URL = &#34;https://flag.smarttrot.com/v1&#34;&#xA;&#xA;# credit_grants&#xA;def credit_grants(query):&#xA;    api_secret_key = API_SECRET_KEY;  # 智增增的secret_key&#xA;    url = BASE_URL+&#39;/dashboard/billing/credit_grants&#39;; # 余额查询url&#xA;    headers = {&#39;Content-Type&#39;: &#39;application/json&#39;, &#39;Accept&#39;:&#39;application/json&#39;,&#xA;               &#39;Authorization&#39;: &#34;Bearer &#34;+api_secret_key}&#xA;    resp = requests.post(url, headers=headers)&#xA;    resp = resp.json();&#xA;    json_str = json.dumps(resp, ensure_ascii=False)&#xA;    print(json_str)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;返回示例&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;code&#34;: 0,&#xA;    &#34;msg&#34;: &#34;ok&#34;,&#xA;    &#34;object&#34;: &#34;credit_summary&#34;,&#xA;    &#34;grants&#34;: {&#xA;        &#34;available_amount&#34;: &#34;111.8658&#34;&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>