<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-01T01:54:35Z</updated>
  <subtitle>Monthly Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alexjustesen/speedtest-tracker</title>
    <updated>2025-01-01T01:54:35Z</updated>
    <id>tag:github.com,2025-01-01:/alexjustesen/speedtest-tracker</id>
    <link href="https://github.com/alexjustesen/speedtest-tracker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Speedtest Tracker is a self-hosted application that monitors the performance and uptime of your internet connection.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🐇 Speedtest Tracker&lt;/h1&gt; &#xA;&lt;p&gt;Speedtest Tracker is a self-hosted application that monitors the performance and uptime of your internet connection.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alexjustesen/speedtest-tracker/main/.github/screenshots/dashboard.jpeg&#34; alt=&#34;Dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automated Tests&lt;/strong&gt;: Schedule regular speed tests to monitor your internet connection&#39;s performance over time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Detailed Metrics&lt;/strong&gt;: Capture download and upload speeds, ping, packet loss and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Historical Data&lt;/strong&gt;: View historical data and trends to identify patterns and issues with your internet connection.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Notifications&lt;/strong&gt;: Receive notifications when your internet performance drops below a certain threshold.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Speedtest Tracker is containerized so you can run it anywhere you run your containers. The image is built by LinuxServer.io, build information can be found &lt;a href=&#34;https://fleet.linuxserver.io/image?name=linuxserver/speedtest-tracker&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.speedtest-tracker.dev/getting-started/installation&#34;&gt;Installation&lt;/a&gt; guide will get you up and running and includes steps for deploying the Docker image or to NAS platforms like Synology and Unraid.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.speedtest-tracker.dev/getting-started/environment-variables&#34;&gt;Configurations&lt;/a&gt; are used to tailor Speedtest Tracker to your needs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.speedtest-tracker.dev/settings/notifications&#34;&gt;Notifications&lt;/a&gt; channels alert you when issues happen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.speedtest-tracker.dev/help/faqs&#34;&gt;Frequently Asked Questions&lt;/a&gt; are common questions that can help you resolve issues.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#alexjustesen/speedtest-tracker&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=alexjustesen/speedtest-tracker&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kuaifan/dootask</title>
    <updated>2025-01-01T01:54:35Z</updated>
    <id>tag:github.com,2025-01-01:/kuaifan/dootask</id>
    <link href="https://github.com/kuaifan/dootask" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DooTask是一款开源在线项目任务管理工具，提供各类文档协作工具、在线思维导图、在线流程图、项目管理、任务分发、即时IM，文件管理等工具；同时消息功能使用非对称加密技术让你的沟通更安全。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Install (Docker)&lt;/h1&gt; &#xA;&lt;p&gt;English | &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kuaifan/dootask/pro/README_CN.md&#34;&gt;中文文档&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kuaifan/dootask/pro/README_PREVIEW.md&#34;&gt;Screenshot preview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.dootask.com/&#34;&gt;Demo site&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;QQ Group&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Group No.: &lt;code&gt;546574618&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Docker v20.10+&lt;/code&gt; &amp;amp; &lt;code&gt;Docker Compose v2.0+&lt;/code&gt; must be installed&lt;/li&gt; &#xA; &lt;li&gt;System: &lt;code&gt;Centos/Debian/Ubuntu/macOS/Windows&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hardware suggestion: 2 cores and above 4G memory&lt;/li&gt; &#xA; &lt;li&gt;Special note: Windows users please use &lt;code&gt;git bash&lt;/code&gt; or &lt;code&gt;cmder&lt;/code&gt; to run the command&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Deployment (Pro Edition)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 1、Clone the repository&#xA;&#xA;# Clone projects on github&#xA;git clone -b pro --depth=1 https://github.com/kuaifan/dootask.git&#xA;# Or you can use gitee&#xA;git clone -b pro --depth=1 https://gitee.com/aipaw/dootask.git&#xA;&#xA;# 2、Enter directory&#xA;cd dootask&#xA;&#xA;# 3、Installation（Custom port installation, as: ./cmd install --port 80）&#xA;./cmd install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reset password&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Reset default account password&#xA;./cmd repassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Change port&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# This method only replaces the HTTP port. To replace the HTTPS port, please read the SSL configuration below&#xA;./cmd port 80&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Stop server&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./cmd stop&#xA;&#xA;# P.S: Once application is set up, whenever you want to start the server (if it is stopped) run below command&#xA;./cmd start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Development compilation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NodeJs 20+&lt;/code&gt; must be installed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Development&#xA;./cmd dev&#xA;   &#xA;# Production (This is web client. For App/PC/Mac clients, Please read README-CLIENT.md)&#xA;./cmd prod  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Shortcuts for running command&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# You can do this using the following command&#xA;./cmd artisan &#34;your command&#34;          # To run a artisan command&#xA;./cmd php &#34;your command&#34;              # To run a php command&#xA;./cmd nginx &#34;your command&#34;            # To run a nginx command&#xA;./cmd redis &#34;your command&#34;            # To run a redis command&#xA;./cmd composer &#34;your command&#34;         # To run a composer command&#xA;./cmd supervisorctl &#34;your command&#34;    # To run a supervisorctl command&#xA;./cmd mysql &#34;your command&#34;            # To run a mysql command (backup: Backup database, recovery: Restore database, open: Open database external port access, close: Close database external port access)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SSL configuration&lt;/h3&gt; &#xA;&lt;h4&gt;Method 1: Automatic configuration&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Running commands in a project&#xA;./cmd https&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Or Method 2: Nginx Agent Configuration&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 1、Nginx config add&#xA;proxy_set_header X-Forwarded-Host $http_host;&#xA;proxy_set_header X-Forwarded-Proto $scheme;&#xA;proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;&#xA;# 2、Running commands in a project (If you unconfigure the NGINX agent, run: ./cmd https close)&#xA;./cmd https agent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrade&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: Please back up your data before upgrading!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Method 1: Running commands in a project&#xA;./cmd update&#xA;&#xA;# Or method 2: use this method if method 1 fails&#xA;git pull&#xA;./cmd mysql backup&#xA;./cmd uninstall&#xA;./cmd install&#xA;./cmd mysql recovery&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please try again if the upgrade fails across a large version.&lt;/li&gt; &#xA; &lt;li&gt;If 502 after the upgrade please run &lt;code&gt;./cmd restart&lt;/code&gt; restart the service.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Transfer&lt;/h2&gt; &#xA;&lt;p&gt;Follow these steps to complete the project migration after the new project is installed:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Backup original database&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run command under old project&#xA;./cmd mysql backup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy &lt;code&gt;database backup file&lt;/code&gt; and &lt;code&gt;public/uploads&lt;/code&gt; directory to the new project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Restore database to new project&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run command under new project&#xA;./cmd mysql recovery&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Uninstall&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Running commands in a project&#xA;./cmd uninstall&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>vitodeploy/vito</title>
    <updated>2025-01-01T01:54:35Z</updated>
    <id>tag:github.com,2025-01-01:/vitodeploy/vito</id>
    <link href="https://github.com/vitodeploy/vito" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free and Self-Hosted Server Management Tool&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/57f77bd5-bd3f-4367-84c0-aff6ecd392b4&#34; alt=&#34;VitoDeploy&gt;&#xA;    &lt;p align=&#34; center&#34;&gt; &lt;a href=&#34;https://github.com/vitodeploy/vito/actions&#34;&gt;&lt;img alt=&#34;GitHub Workflow Status&#34; src=&#34;https://github.com/vitodeploy/vito/workflows/tests/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;About Vito&lt;/h2&gt; &#xA;&lt;p&gt;Vito is a self-hosted web application that helps you manage your servers and deploy your PHP applications into production servers without a hassle.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bash &amp;lt;(curl -Ls https://raw.githubusercontent.com/vitodeploy/vito/2.x/scripts/install.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provisions and Manages the server&lt;/li&gt; &#xA; &lt;li&gt;Easy database management, Supports Mysql and MariaDB&lt;/li&gt; &#xA; &lt;li&gt;Deploy your PHP applications such as Laravel&lt;/li&gt; &#xA; &lt;li&gt;Manage your server&#39;s firewall&lt;/li&gt; &#xA; &lt;li&gt;Supports Custom and Letsencrypt SSL&lt;/li&gt; &#xA; &lt;li&gt;Uses supervisor to handle queues&lt;/li&gt; &#xA; &lt;li&gt;Manages server&#39;s services&lt;/li&gt; &#xA; &lt;li&gt;Deploy your SSH Keys to the server&lt;/li&gt; &#xA; &lt;li&gt;Create and Manage cron jobs on the server&lt;/li&gt; &#xA; &lt;li&gt;API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitodeploy.com&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://demo.vitodeploy.com&#34;&gt;Demo Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitodeploy.com/getting-started/installation.html#install-on-vps&#34;&gt;Install on Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitodeploy.com/getting-started/installation.html#install-via-docker&#34;&gt;Install via Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orgs/vitodeploy/projects/5&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/uZeeHZZnm5&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitodeploy.com/prologue/contribution-guide.html&#34;&gt;Contribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitodeploy/vito/2.x/SECURITY.md&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Laravel&lt;/li&gt; &#xA; &lt;li&gt;PHPSecLib&lt;/li&gt; &#xA; &lt;li&gt;PHPUnit&lt;/li&gt; &#xA; &lt;li&gt;Tailwindcss&lt;/li&gt; &#xA; &lt;li&gt;Alpinejs&lt;/li&gt; &#xA; &lt;li&gt;Livewire&lt;/li&gt; &#xA; &lt;li&gt;Vite&lt;/li&gt; &#xA; &lt;li&gt;Prettier&lt;/li&gt; &#xA; &lt;li&gt;Postcss&lt;/li&gt; &#xA; &lt;li&gt;FilamentPHP&lt;/li&gt; &#xA; &lt;li&gt;Mobiledetect&lt;/li&gt; &#xA; &lt;li&gt;Spatie&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>