<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-01T02:06:40Z</updated>
  <subtitle>Monthly Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rectorphp/rector</title>
    <updated>2023-11-01T02:06:40Z</updated>
    <id>tag:github.com,2023-11-01:/rectorphp/rector</id>
    <link href="https://github.com/rectorphp/rector" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Instant Upgrades and Automated Refactoring of any PHP 5.3+ code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rector - Instant Upgrades and Automated Refactoring&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/rector/rector&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/rector/rector.svg?style=flat-square&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Rector instantly upgrades and refactors the PHP code of your application. It can help you in 2 major areas:&lt;/p&gt; &#xA;&lt;h3&gt;1. Instant Upgrades&lt;/h3&gt; &#xA;&lt;p&gt;Rector now supports upgrades from PHP 5.3 to 8.2 and major open-source projects like &lt;a href=&#34;https://github.com/rectorphp/rector-symfony&#34;&gt;Symfony&lt;/a&gt;, &lt;a href=&#34;https://github.com/rectorphp/rector-phpunit&#34;&gt;PHPUnit&lt;/a&gt;, and &lt;a href=&#34;https://github.com/rectorphp/rector-doctrine&#34;&gt;Doctrine&lt;/a&gt;. Do you want to &lt;strong&gt;be constantly on the latest PHP and Framework without effort&lt;/strong&gt;?&lt;/p&gt; &#xA;&lt;p&gt;Use Rector to handle &lt;strong&gt;instant upgrades&lt;/strong&gt; for you.&lt;/p&gt; &#xA;&lt;h3&gt;2. Automated Refactoring&lt;/h3&gt; &#xA;&lt;p&gt;Do you have code quality you need, but struggle to keep it with new developers in your team? Do you want to see smart code-reviews even when every senior developers sleeps?&lt;/p&gt; &#xA;&lt;p&gt;Add Rector to your CI and let it &lt;strong&gt;continuously refactor your code&lt;/strong&gt; and keep the code quality high.&lt;/p&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://getrector.com/blog/new-setup-ci-command-to-let-rector-work-for-you&#34;&gt;blogpost&lt;/a&gt; to see how to set up automated refactoring.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require rector/rector --dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Rector&lt;/h2&gt; &#xA;&lt;p&gt;There are 2 main ways to use Rector:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a &lt;em&gt;single rule&lt;/em&gt;, to have the change under control&lt;/li&gt; &#xA; &lt;li&gt;or group of rules called &lt;em&gt;sets&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To use them, create a &lt;code&gt;rector.php&lt;/code&gt; in your root directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vendor/bin/rector&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And modify it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Rector\Config\RectorConfig;&#xA;use Rector\Set\ValueObject\SetList;&#xA;use Rector\TypeDeclaration\Rector\Property\TypedPropertyFromStrictConstructorRector;&#xA;&#xA;return static function (RectorConfig $rectorConfig): void {&#xA;    // register single rule&#xA;    $rectorConfig-&amp;gt;rule(TypedPropertyFromStrictConstructorRector::class);&#xA;&#xA;    // here we can define, what sets of rules will be applied&#xA;    // tip: use &#34;SetList&#34; class to autocomplete sets with your IDE&#xA;    $rectorConfig-&amp;gt;sets([&#xA;        SetList::CODE_QUALITY&#xA;    ]);&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then dry run Rector:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vendor/bin/rector process src --dry-run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Rector will show you diff of files that it &lt;em&gt;would&lt;/em&gt; change. To &lt;em&gt;make&lt;/em&gt; the changes, drop &lt;code&gt;--dry-run&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vendor/bin/rector process src&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Find &lt;a href=&#34;https://getrector.com/documentation/&#34;&gt;full documentation here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rectorphp/rector/main/docs/rector_rules_overview.md&#34;&gt;Explore Rector Rules&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Learn Faster with a Book&lt;/h2&gt; &#xA;&lt;p&gt;Are you curious, how Rector works internally, how to create your own rules and test them and why Rector was born? Read &lt;a href=&#34;https://leanpub.com/rector-the-power-of-automated-refactoring&#34;&gt;Rector - The Power of Automated Refactoring&lt;/a&gt; that will take you step by step through the Rector setup and how to create your own rules.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Empowered by Community &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The Rector community is powerful thanks to active maintainers who take care of Rector sets for particular projects.&lt;/p&gt; &#xA;&lt;p&gt;Among there projects belong:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/palantirnet/drupal-rector&#34;&gt;palantirnet/drupal-rector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/craftcms/rector&#34;&gt;craftcms/rector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FriendsOfShopware/shopware-rector&#34;&gt;FriendsOfShopware/shopware-rector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sabbelasichon/typo3-rector&#34;&gt;sabbelasichon/typo3-rector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sulu/sulu-rector&#34;&gt;sulu/sulu-rector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/efabrica-team/rector-nette&#34;&gt;efabrica-team/rector-nette&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sylius/SyliusRector&#34;&gt;Sylius/SyliusRector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CoditoNet/rector-money&#34;&gt;CoditoNet/rector-money&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/laminas/laminas-servicemanager-migration&#34;&gt;laminas/laminas-servicemanager-migration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cakephp/upgrade&#34;&gt;cakephp/upgrade&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/driftingly/rector-laravel&#34;&gt;driftingly/rector-laravel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Hire us to get Job Done &lt;span&gt;üí™&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Rector is a tool that &lt;a href=&#34;https://getrector.com/&#34;&gt;we develop&lt;/a&gt; and share for free, so anyone can automate their refactoring. But not everyone has dozens of hours to understand complexity of abstract-syntax-tree in their own time. &lt;strong&gt;That&#39;s why we provide commercial support - to save your time&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Would you like to apply Rector on your code base but don&#39;t have time for the struggle with your project? &lt;a href=&#34;https://getrector.com/contact&#34;&gt;Hire us&lt;/a&gt; to get there faster.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/rectorphp/rector/main/CONTRIBUTING.md&#34;&gt;the contribution guide&lt;/a&gt; or go to development repository &lt;a href=&#34;https://github.com/rectorphp/rector-src&#34;&gt;rector/rector-src&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;--debug&lt;/code&gt; option, that will print nested exceptions output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vendor/bin/rector process src/Controller --dry-run --debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or with Xdebug:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure &lt;a href=&#34;https://xdebug.org/&#34;&gt;Xdebug&lt;/a&gt; is installed and configured&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;--xdebug&lt;/code&gt; option when running Rector&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vendor/bin/rector process src/Controller --dry-run --xdebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To assist with simple debugging Rector provides 2 helpers to pretty-print AST-nodes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use PhpParser\Node\Scalar\String_;&#xA;$node = new String_(&#39;hello world!&#39;);&#xA;&#xA;// prints node to string, as PHP code displays it&#xA;print_node($node);&#xA;&#xA;// dump nested node object with nested properties&#xA;dump_node($node);&#xA;&#xA;// 2nd argument is how deep the nesting is - this makes sure the dump is short and useful&#xA;dump_node($node, 1);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Known Drawbacks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Rector uses &lt;a href=&#34;https://github.com/nikic/PHP-Parser/&#34;&gt;nikic/php-parser&lt;/a&gt;, built on technology called an &lt;em&gt;abstract syntax tree&lt;/em&gt; (AST). An AST doesn&#39;t know about spaces and when written to a file it produces poorly formatted code in both PHP and docblock annotations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rector in parallel mode will work most of the times for most OS. On Windows, you may encounter issues unresolvable despite of following the &lt;a href=&#34;https://getrector.com/documentation/troubleshooting-parallel&#34;&gt;Troubleshooting Parallel&lt;/a&gt; guide. In such case, check if you are using Powershell 7 (pwsh). Change your terminal to command prompt (cmd) or bash for Windows.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to Apply Coding Standards?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Your project needs to have a coding standard tool&lt;/strong&gt; and a set of formatting rules, so it can make Rector&#39;s output code nice and shiny again.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re using &lt;a href=&#34;https://github.com/symplify/easy-coding-standard&#34;&gt;ECS&lt;/a&gt; with &lt;a href=&#34;https://github.com/rectorphp/rector-src/raw/main/ecs.php&#34;&gt;this setup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;May cause unexpected output on File with mixed PHP+HTML content&lt;/h3&gt; &#xA;&lt;p&gt;When you apply changes to File(s) thas has mixed PHP+HTML content, you may need to manually verify the changed file after apply the changes.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coollabsio/coolify</title>
    <updated>2023-11-01T02:06:40Z</updated>
    <id>tag:github.com,2023-11-01:/coollabsio/coolify</id>
    <link href="https://github.com/coollabsio/coolify" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source &amp; self-hostable Heroku / Netlify / Vercel alternative. Cloud version available here -&gt; https://app.coolify.io&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About the Project&lt;/h1&gt; &#xA;&lt;p&gt;Coolify is an open-source &amp;amp; self-hostable alternative to Heroku / Netlify / Vercel / etc.&lt;/p&gt; &#xA;&lt;p&gt;It helps you to manage your servers, applications, databases on your own hardware, all you need is SSH connection. You can manage VPS, Bare Metal, Raspberry PI&#39;s anything.&lt;/p&gt; &#xA;&lt;p&gt;Imagine if you could have the ease of a cloud but with your own servers. That is &lt;strong&gt;Coolify&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;No vendor lock-in, which means that all the configuration for your applications/databases/etc are saved to your server. So if you decide to stop using Coolify (oh nooo), you could still manage your running resources. You just lose the automations and all the magic. ü™ÑÔ∏è&lt;/p&gt; &#xA;&lt;p&gt;For more information, take a look at our landing page &lt;a href=&#34;https://coolify.io&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you are looking for previous (v3) version, it is &lt;a href=&#34;https://github.com/coollabsio/coolify/tree/v3&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Cloud&lt;/h1&gt; &#xA;&lt;p&gt;If you do not want to self-host Coolify, there is a paid cloud version available: &lt;a href=&#34;https://app.coolify.io&#34;&gt;https://app.coolify.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can easily attach your own servers, get all the automations, free email notifications, etc.&lt;/p&gt; &#xA;&lt;p&gt;For more information &amp;amp; pricing, take a look at our landing page &lt;a href=&#34;https://coolify.io&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Beta&lt;/h1&gt; &#xA;&lt;p&gt;The latest version (v4) is still in beta. That does not mean it is unstable. All the features that are available are stable enough be usable in real-life.&lt;/p&gt; &#xA;&lt;p&gt;There are hundreds of people using it for managing their client&#39;s applications, freelancers, hobbyists, businesses.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://cdn.coollabs.io/coolify/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find the installation script &lt;a href=&#34;https://raw.githubusercontent.com/coollabsio/coolify/main/scripts/install.sh&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Contact us &lt;a href=&#34;https://coolify.io/docs/contact&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Recognitions&lt;/h2&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://news.ycombinator.com/item?id=26624341&#34;&gt; &lt;img style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34; alt=&#34;Featured on Hacker News&#34; src=&#34;https://hackernews-badge.vercel.app/api?id=26624341&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/coolify?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-coolify&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=338273&amp;amp;theme=light&#34; alt=&#34;Coolify - An open-source &amp;amp; self-hostable Heroku, Netlify alternative | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://trendshift.io/repositories/634&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/634&#34; alt=&#34;coollabsio%2Fcoolify | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üí∞ Financial Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&#34;https://opencollective.com/coollabsio/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h3&gt;Organizations&lt;/h3&gt; &#xA;&lt;p&gt;Special thanks to our biggest sponsors, &lt;a href=&#34;https://cccareers.org/&#34;&gt;CCCareers&lt;/a&gt; and &lt;a href=&#34;https://appwrite.io&#34;&gt;Appwrite&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cccareers.org/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coollabsio/coolify/main/other/logos/ccc-logo.webp&#34; alt=&#34;appwrite logo&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://appwrite.io&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coollabsio/coolify/main/other/logos/appwrite.svg?sanitize=true&#34; alt=&#34;appwrite logo&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/coollabsio/organization/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/coollabsio/organization/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/coollabsio/organization/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/coollabsio/organization/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/coollabsio/organization/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/coollabsio/organization/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/coollabsio/organization/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/coollabsio/organization/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/coollabsio/organization/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/coollabsio/organization/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/coollabsio/organization/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/coollabsio/organization/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/coollabsio/organization/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/coollabsio/organization/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/coollabsio/organization/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/coollabsio/organization/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/coollabsio/organization/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/coollabsio/organization/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/coollabsio/organization/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/coollabsio/organization/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Individuals&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/coollabsio&#34;&gt;&lt;img src=&#34;https://opencollective.com/coollabsio/individuals.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#coollabsio/coolify&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=coollabsio/coolify&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>doctrine/orm</title>
    <updated>2023-11-01T02:06:40Z</updated>
    <id>tag:github.com,2023-11-01:/doctrine/orm</id>
    <link href="https://github.com/doctrine/orm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Doctrine Object Relational Mapper (ORM)&lt;/p&gt;&lt;hr&gt;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/doctrine/orm/tree/3.0.x&#34;&gt;3.0.x&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/doctrine/orm/tree/2.16.x&#34;&gt;2.16.x&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/doctrine/orm/tree/2.15.x&#34;&gt;2.15.x&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/doctrine/orm/tree/3.0.x&#34;&gt;&lt;img src=&#34;https://github.com/doctrine/orm/actions/workflows/continuous-integration.yml/badge.svg?branch=3.0.x&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/doctrine/orm/tree/2.16.x&#34;&gt;&lt;img src=&#34;https://github.com/doctrine/orm/actions/workflows/continuous-integration.yml/badge.svg?branch=2.16.x&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/doctrine/orm/tree/2.15.x&#34;&gt;&lt;img src=&#34;https://github.com/doctrine/orm/actions/workflows/continuous-integration.yml/badge.svg?branch=2.15.x&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://codecov.io/gh/doctrine/orm/branch/3.0.x&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/doctrine/orm/branch/3.0.x/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://codecov.io/gh/doctrine/orm/branch/2.16.x&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/doctrine/orm/branch/2.16.x/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://codecov.io/gh/doctrine/orm/branch/2.15.x&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/doctrine/orm/branch/2.15.x/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.doctrine-project.org/stop-war.html&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.doctrine-project.org/stop-war.html&#34;&gt;üá∫üá¶ UKRAINE NEEDS YOUR HELP NOW!&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;Doctrine ORM is an object-relational mapper for PHP 7.1+ that provides transparent persistence for PHP objects. It sits on top of a powerful database abstraction layer (DBAL). One of its key features is the option to write database queries in a proprietary object oriented SQL dialect called Doctrine Query Language (DQL), inspired by Hibernate&#39;s HQL. This provides developers with a powerful alternative to SQL that maintains flexibility without requiring unnecessary code duplication.&lt;/p&gt; &#xA;&lt;h2&gt;More resources:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.doctrine-project.org&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.doctrine-project.org/projects/doctrine-orm/en/stable/index.html&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>