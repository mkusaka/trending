<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-01T02:19:02Z</updated>
  <subtitle>Monthly Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>orhanerday/open-ai</title>
    <updated>2023-04-01T02:19:02Z</updated>
    <id>tag:github.com,2023-04-01:/orhanerday/open-ai</id>
    <link href="https://github.com/orhanerday/open-ai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenAI PHP SDK : Most downloaded, forked, contributed, huge community supported, and used PHP (Laravel , Symfony, Yii, Cake PHP or any PHP framework) SDK for OpenAI GPT-3 and DALL-E. It also supports chatGPT-like streaming. (ChatGPT AI is supported)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI API Client in PHP&lt;/h1&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;ChatGPT API is currently supported, &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/#chat-as-known-as-chatgpt-api&#34;&gt;click here&lt;/a&gt; for the implementation introductions.&lt;/h3&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;em&gt;A message from creator,&lt;br&gt;Thank you for visiting the &lt;strong&gt;@orhanerday/open-ai&lt;/strong&gt; repository! If you find this repository helpful or useful, we encourage you to &lt;strong&gt;star&lt;/strong&gt; it on GitHub. Starring a repository is a way to show your support for the project. It also helps to increase the visibility of the project and to let the community know that it is valuable. Thanks again for your support and we hope you find the repository useful! &lt;br&gt;&lt;br&gt; Orhan&lt;/em&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/orhanerday/open-ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/orhanerday/open-ai.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/orhanerday/open-ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/orhanerday/open-ai.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/openai-elephpant.svg?sanitize=true&#34; width=&#34;1250&#34; height=&#34;300&#34; alt=&#34;orhanerday-open-ai-logo&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Featured in&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.jetbrains.com/phpstorm/2022/12/php-annotated-december-2022/#:~:text=orhanerday/open%2Dai%20%E2%80%93%20A%20PHP%20SDK%20for%20accessing%20the%20OpenAI%20GPT%2D3%20API&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/22305274/222431781-86591161-ccd5-4889-bd80-97a0fd0fdf0d.png&#34; alt=&#34;Jetbrains Blog&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://laravel-news.com/openai-sdk-for-php&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/22305274/222430084-be097d59-e6bc-408d-8adb-7b751d5a05b2.png&#34; alt=&#34;Laravel News&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://tubring.cn/articles/59&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/22305274/222431699-f3a8a146-e27c-4fe3-8c93-1d762559752f.png&#34; alt=&#34;日思录&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Comparison With Other Packages&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project Name&lt;/th&gt; &#xA;   &lt;th&gt;Required PHP Version&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Type (Official / Community)&lt;/th&gt; &#xA;   &lt;th&gt;Support&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;orhanerday/open-ai&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PHP 7.4+&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Most downloaded, forked, contributed, huge community supported, and used PHP SDK for OpenAI GPT-3 and DALL-E. It also supports chatGPT-like streaming.&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Community&lt;/td&gt; &#xA;   &lt;td&gt;Available, (&lt;a href=&#34;https://discord.gg/xpGUD528XJ&#34;&gt;Community driven Discord Server&lt;/a&gt; or personal mail &lt;a href=&#34;mailto:orhan@duck.com&#34;&gt;orhan@duck.com&lt;/a&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;openai-** &lt;em&gt;/c&lt;/em&gt;***t&lt;/td&gt; &#xA;   &lt;td&gt;PHP 8.1+&lt;/td&gt; &#xA;   &lt;td&gt;OpenAI PHP API client.&lt;/td&gt; &#xA;   &lt;td&gt;Community&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;About this package&lt;/h2&gt; &#xA;&lt;p&gt;Fully open-source and secure community-maintained, PHP SDK for accessing the OpenAI GPT-3 API.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;For more information, you can read laravel news &lt;a href=&#34;https://laravel-news.com/openai-sdk-for-php&#34;&gt;blog post&lt;/a&gt;.&lt;/h4&gt; &#xA; &lt;h4&gt;Free support is available. &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/#join-our-discord-server&#34;&gt;Join our discord server&lt;/a&gt;&lt;/h4&gt; &#xA; &lt;h4&gt;To get started with this package, you&#39;ll first want to be familiar with the &lt;a href=&#34;https://beta.openai.com/docs/introduction&#34;&gt;OpenAI API documentation&lt;/a&gt; and &lt;a href=&#34;https://beta.openai.com/examples&#34;&gt;examples&lt;/a&gt;. Also you can get help from our discord channel that called &lt;a href=&#34;https://discord.gg/R9CpVUdqQR&#34;&gt;#api-support&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;orhanerday/open-ai added to community libraries php &lt;a href=&#34;https://beta.openai.com/docs/libraries/php&#34;&gt;section&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;orhanerday/open-ai featured on &lt;a href=&#34;https://blog.jetbrains.com/phpstorm/2022/12/php-annotated-december-2022/#:~:text=orhanerday/open%2Dai%20%E2%80%93%20A%20PHP%20SDK%20for%20accessing%20the%20OpenAI%20GPT%2D3%20API&#34;&gt;PHPStorm blog post&lt;/a&gt;, thanks JetBrains!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Requires PHP 7.4+&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Join our discord server&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/1047074572488417330/widget.png?style=banner2&#34; alt=&#34;Discord Banner 2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/xpGUD528XJ&#34;&gt;Click here to join the Discord server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support this project&lt;/h2&gt; &#xA;&lt;p&gt;As you may know, OpenAI PHP is an open-source project wrapping tool for OpenAI. We rely on the support of our community to continue developing and maintaining the project, and one way that you can help is by making a donation.&lt;/p&gt; &#xA;&lt;p&gt;Donations allow us to cover expenses such as hosting costs(for testing), development tools, and other resources that are necessary to keep the project running smoothly. Every contribution, no matter how small, helps us to continue improving OpenAI PHP for everyone.&lt;/p&gt; &#xA;&lt;p&gt;If you have benefited from using OpenAI PHP and would like to support its continued development, we would greatly appreciate a donation of any amount. You can make a donation through;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.buymeacoffee.com/orhane&#34;&gt;Buy me a coffee&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://patreon.com/orhann&#34;&gt;Patreon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/#btc&#34;&gt;Click here for the Coinbase QR&lt;/a&gt; &lt;strong&gt;Bitcoin&lt;/strong&gt; &amp;gt; 34w2DftWGkDqDbYMixkmdWWMLmaP9uTRz7&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/#doge&#34;&gt;Click here for the Coinbase QR&lt;/a&gt; &lt;strong&gt;Dogecoin&lt;/strong&gt; &amp;gt; DHiqcZox9M8kYDn7BkesnN6Z2kJ7dYG9Lc&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/#eth&#34;&gt;Click here for the Coinbase QR&lt;/a&gt; &lt;strong&gt;Ethereum&lt;/strong&gt; &amp;gt; 0x135E2D5d7AC40c6850f844BA589D68e91a268Ceb&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thank you for considering a donation to Orhanerday/OpenAI PHP SDK. Your support is greatly appreciated and helps to ensure that the project can continue to grow and improve.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Sincerely,&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Orhan Erday&lt;/strong&gt; / Creator.&lt;/p&gt; &#xA;&lt;h1&gt;Endpoint Support&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/#chat-as-known-as-chatgpt-api&#34;&gt;ChatGPT API&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Models &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/models/list&#34;&gt;List models&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/models/retrieve&#34;&gt;Retrieve model&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Completions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/completions/create&#34;&gt;Create completion&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Edits &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/edits/create&#34;&gt;Create edits&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Images &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/images/create&#34;&gt;Create image&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/images/create-edit&#34;&gt;Create image edit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/images/create-variation&#34;&gt;Create image variation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Embeddings &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/embeddings/create&#34;&gt;Create embeddings&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Audio &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://platform.openai.com/docs/api-reference/audio/create&#34;&gt;Create transcription&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://platform.openai.com/docs/api-reference/audio/create&#34;&gt;Create translation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Files &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/files/list&#34;&gt;List files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/files/upload&#34;&gt;Upload file&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/files/delete&#34;&gt;Delete file&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/files/retrieve&#34;&gt;Retrieve file&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/files/retrieve-content&#34;&gt;Retrieve file content&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Fine-tunes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/fine-tunes/create&#34;&gt;Create fine-tune (beta)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/fine-tunes/list&#34;&gt;List fine-tunes (beta)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/fine-tunes/retrieve&#34;&gt;Retrieve fine-tune (beta)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/fine-tunes/cancel&#34;&gt;Cancel fine-tune (beta)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/fine-tunes/events&#34;&gt;List fine-tune events (beta)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/fine-tunes/delete-model&#34;&gt;Delete fine-tune model (beta)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Moderation &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://beta.openai.com/docs/api-reference/moderations/create&#34;&gt;Create moderation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Engines&lt;/del&gt; &lt;em&gt;(deprecated)&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://beta.openai.com/docs/api-reference/engines/list&#34;&gt;List engines&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://beta.openai.com/docs/api-reference/engines/retrieve&#34;&gt;Retrieve engine&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require orhanerday/open-ai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start ⚡&lt;/h2&gt; &#xA;&lt;p&gt;Before you get starting, you should set OPENAI_API_KEY as ENV key, and set OpenAI key as env value with the following commands;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Powershell&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$Env:OPENAI_API_KEY = &#34;sk-gjtv.....&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Cmd&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;set OPENAI_API_KEY=sk-gjtv.....&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Linux or macOS&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export OPENAI_API_KEY=sk-gjtv.....&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Getting issues while setting up env? Please read the &lt;a href=&#34;https://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety&#34;&gt;article&lt;/a&gt; or you can check my &lt;a href=&#34;https://stackoverflow.com/a/73904271/15196622&#34;&gt;StackOverflow answer&lt;/a&gt; for the Windows® ENV setup.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Create your &lt;code&gt;index.php&lt;/code&gt; file and paste the following code part into the file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;require __DIR__ . &#39;/vendor/autoload.php&#39;; // remove this line if you use a PHP Framework.&#xA;&#xA;use Orhanerday\OpenAi\OpenAi;&#xA;&#xA;$open_ai_key = getenv(&#39;OPENAI_API_KEY&#39;);&#xA;$open_ai = new OpenAi($open_ai_key);&#xA;&#xA;$chat = $open_ai-&amp;gt;chat([&#xA;   &#39;model&#39; =&amp;gt; &#39;gpt-3.5-turbo&#39;,&#xA;   &#39;messages&#39; =&amp;gt; [&#xA;       [&#xA;           &#34;role&#34; =&amp;gt; &#34;system&#34;,&#xA;           &#34;content&#34; =&amp;gt; &#34;You are a helpful assistant.&#34;&#xA;       ],&#xA;       [&#xA;           &#34;role&#34; =&amp;gt; &#34;user&#34;,&#xA;           &#34;content&#34; =&amp;gt; &#34;Who won the world series in 2020?&#34;&#xA;       ],&#xA;       [&#xA;           &#34;role&#34; =&amp;gt; &#34;assistant&#34;,&#xA;           &#34;content&#34; =&amp;gt; &#34;The Los Angeles Dodgers won the World Series in 2020.&#34;&#xA;       ],&#xA;       [&#xA;           &#34;role&#34; =&amp;gt; &#34;user&#34;,&#xA;           &#34;content&#34; =&amp;gt; &#34;Where was it played?&#34;&#xA;       ],&#xA;   ],&#xA;   &#39;temperature&#39; =&amp;gt; 1.0,&#xA;   &#39;max_tokens&#39; =&amp;gt; 4000,&#xA;   &#39;frequency_penalty&#39; =&amp;gt; 0,&#xA;   &#39;presence_penalty&#39; =&amp;gt; 0,&#xA;]);&#xA;&#xA;&#xA;var_dump($chat);&#xA;echo &#34;&amp;lt;br&amp;gt;&#34;;&#xA;echo &#34;&amp;lt;br&amp;gt;&#34;;&#xA;echo &#34;&amp;lt;br&amp;gt;&#34;;&#xA;// decode response&#xA;$d = json_decode($chat);&#xA;// Get Content&#xA;echo($d-&amp;gt;choices[0]-&amp;gt;message-&amp;gt;content);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Run the server with the following command&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php -S localhost:8000 -t .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Load your key from an environment variable.&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;According to the following code &lt;code&gt;$open_ai&lt;/code&gt; is the base variable for all open-ai operations.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Orhanerday\OpenAi\OpenAi;&#xA;&#xA;$open_ai = new OpenAi(env(&#39;OPEN_AI_API_KEY&#39;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requesting organization&lt;/h2&gt; &#xA;&lt;p&gt;For users who belong to multiple organizations, you can pass a header to specify which organization is used for an API request. Usage from these API requests will count against the specified organization&#39;s subscription quota.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$open_ai_key = getenv(&#39;OPENAI_API_KEY&#39;);&#xA;$open_ai = new OpenAi($open_ai_key);&#xA;$open_ai-&amp;gt;setORG(&#34;org-IKN2E1nI3kFYU8ywaqgFRKqi&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Base URL&lt;/h2&gt; &#xA;&lt;p&gt;You can specify Origin URL with &lt;code&gt;setBaseURL()&lt;/code&gt; method;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$open_ai_key = getenv(&#39;OPENAI_API_KEY&#39;);&#xA;$open_ai = new OpenAi($open_ai_key,$originURL);&#xA;$open_ai-&amp;gt;setBaseURL(&#34;https://ai.example.com/&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use Proxy&lt;/h2&gt; &#xA;&lt;p&gt;You can use some proxy servers for your requests api;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$open_ai-&amp;gt;setProxy(&#34;http://127.0.0.1:1086&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Set header&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$open_ai-&amp;gt;setHeader([&#34;Connection&#34;=&amp;gt;&#34;keep-alive&#34;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get cURL request info&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;!!! WARNING:Your API key will expose if you add this method to your code, therefore remove the method before deployment. Be careful !&lt;/h3&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can get cURL info after the request.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$open_ai = new OpenAi($open_ai_key);&#xA;echo $open_ai-&amp;gt;listModels(); // you should execute the request FIRST!&#xA;var_dump($open_ai-&amp;gt;getCURLInfo()); // You can call the request&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Chat (as known as ChatGPT API)&lt;/h2&gt; &#xA;&lt;p&gt;Given a chat conversation, the model will return a chat completion response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$complete = $open_ai-&amp;gt;chat([&#xA;   &#39;model&#39; =&amp;gt; &#39;gpt-3.5-turbo&#39;,&#xA;   &#39;messages&#39; =&amp;gt; [&#xA;       [&#xA;           &#34;role&#34; =&amp;gt; &#34;system&#34;,&#xA;           &#34;content&#34; =&amp;gt; &#34;You are a helpful assistant.&#34;&#xA;       ],&#xA;       [&#xA;           &#34;role&#34; =&amp;gt; &#34;user&#34;,&#xA;           &#34;content&#34; =&amp;gt; &#34;Who won the world series in 2020?&#34;&#xA;       ],&#xA;       [&#xA;           &#34;role&#34; =&amp;gt; &#34;assistant&#34;,&#xA;           &#34;content&#34; =&amp;gt; &#34;The Los Angeles Dodgers won the World Series in 2020.&#34;&#xA;       ],&#xA;       [&#xA;           &#34;role&#34; =&amp;gt; &#34;user&#34;,&#xA;           &#34;content&#34; =&amp;gt; &#34;Where was it played?&#34;&#xA;       ],&#xA;   ],&#xA;   &#39;temperature&#39; =&amp;gt; 1.0,&#xA;   &#39;max_tokens&#39; =&amp;gt; 4000,&#xA;   &#39;frequency_penalty&#39; =&amp;gt; 0,&#xA;   &#39;presence_penalty&#39; =&amp;gt; 0,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Accessing the Element&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;// Dummy Response For Chat API &#xA;$j = &#39;&#xA;{&#xA;   &#34;id&#34;:&#34;chatcmpl-*****&#34;,&#xA;   &#34;object&#34;:&#34;chat.completion&#34;,&#xA;   &#34;created&#34;:1679748856,&#xA;   &#34;model&#34;:&#34;gpt-3.5-turbo-0301&#34;,&#xA;   &#34;usage&#34;:{&#xA;      &#34;prompt_tokens&#34;:9,&#xA;      &#34;completion_tokens&#34;:10,&#xA;      &#34;total_tokens&#34;:19&#xA;   },&#xA;   &#34;choices&#34;:[&#xA;      {&#xA;         &#34;message&#34;:{&#xA;            &#34;role&#34;:&#34;assistant&#34;,&#xA;            &#34;content&#34;:&#34;This is a test of the AI language model.&#34;&#xA;         },&#xA;         &#34;finish_reason&#34;:&#34;length&#34;,&#xA;         &#34;index&#34;:0&#xA;      }&#xA;   ]&#xA;}&#xA;&#39;;&#xA;&#xA;// decode response&#xA;$d = json_decode($j);&#xA;&#xA;// Get Content&#xA;echo($d-&amp;gt;choices[0]-&amp;gt;message-&amp;gt;content);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;Related: &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/#chatgpt-clone-project&#34;&gt;ChatGPT Clone Project&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Completions&lt;/h2&gt; &#xA;&lt;p&gt;Given a prompt, the model will return one or more predicted completions, and can also return the probabilities of alternative tokens at each position.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$complete = $open_ai-&amp;gt;completion([&#xA;   &#39;model&#39; =&amp;gt; &#39;text-davinci-002&#39;,&#xA;   &#39;prompt&#39; =&amp;gt; &#39;Hello&#39;,&#xA;   &#39;temperature&#39; =&amp;gt; 0.9,&#xA;   &#39;max_tokens&#39; =&amp;gt; 150,&#xA;   &#39;frequency_penalty&#39; =&amp;gt; 0,&#xA;   &#39;presence_penalty&#39; =&amp;gt; 0.6,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Stream Example&lt;/h3&gt; &#xA;&lt;p&gt;This feature might sound familiar from &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;ChatGPT&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;ChatGPT Clone Project&lt;/h4&gt; &#xA;&lt;p&gt;Video of demo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/22305274/219878695-c76a58c0-5081-402c-a1b5-2b1fd971735a.mp4&#34;&gt;https://user-images.githubusercontent.com/22305274/219878695-c76a58c0-5081-402c-a1b5-2b1fd971735a.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ChatGPT clone is a simple web application powered by the OpenAI library and built with PHP. It allows users to chat with an AI language model that responds in real-time. Chat history is saved using cookies, and the project requires the use of an API key and enabled SQLite3.&lt;/p&gt; &#xA;&lt;p&gt;Url of The ChatGPT-Clone Repo &lt;a href=&#34;https://github.com/orhanerday/ChatGPT&#34;&gt;https://github.com/orhanerday/ChatGPT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Whether to stream back partial progress. If set, tokens will be sent as data-only &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#event_stream_format&#34;&gt;server-sent events&lt;/a&gt; as they become available, with the stream terminated by a data: [DONE] message.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$open_ai = new OpenAi(env(&#39;OPEN_AI_API_KEY&#39;));&#xA;&#xA;$opts = [&#xA;   &#39;prompt&#39; =&amp;gt; &#34;Hello&#34;,&#xA;   &#39;temperature&#39; =&amp;gt; 0.9,&#xA;   &#34;max_tokens&#34; =&amp;gt; 150,&#xA;   &#34;frequency_penalty&#34; =&amp;gt; 0,&#xA;   &#34;presence_penalty&#34; =&amp;gt; 0.6,&#xA;   &#34;stream&#34; =&amp;gt; true,&#xA;];&#xA;&#xA;header(&#39;Content-type: text/event-stream&#39;);&#xA;header(&#39;Cache-Control: no-cache&#39;);&#xA;&#xA;$open_ai-&amp;gt;completion($opts, function ($curl_info, $data) {&#xA;   echo $data . &#34;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&#34;;&#xA;   echo PHP_EOL;&#xA;   ob_flush();&#xA;   flush();&#xA;   return strlen($data);&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add this part inside &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; of the HTML&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&#xA;&amp;lt;div id=&#34;divID&#34;&amp;gt;Hello&amp;lt;/div&amp;gt;&#xA;&amp;lt;script&amp;gt;&#xA;   var eventSource = new EventSource(&#34;/&#34;);&#xA;   var div = document.getElementById(&#39;divID&#39;);&#xA;&#xA;&#xA;   eventSource.onmessage = function (e) {&#xA;      if(e.data == &#34;[DONE]&#34;)&#xA;      {&#xA;          div.innerHTML += &#34;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;Hello&#34;;&#xA;      }&#xA;       div.innerHTML += JSON.parse(e.data).choices[0].text;&#xA;   };&#xA;   eventSource.onerror = function (e) {&#xA;       console.log(e);&#xA;   };&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see a response like the in video;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/22305274/209847128-f72c9345-dd34-46f0-bbc5-daf1d7b6121f.mp4&#34;&gt;https://user-images.githubusercontent.com/22305274/209847128-f72c9345-dd34-46f0-bbc5-daf1d7b6121f.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Edits&lt;/h2&gt; &#xA;&lt;p&gt;Creates a new edit for the provided input, instruction, and parameters&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;   $result = $open_ai-&amp;gt;createEdit([&#xA;       &#34;model&#34; =&amp;gt; &#34;text-davinci-edit-001&#34;,&#xA;       &#34;input&#34; =&amp;gt; &#34;What day of the wek is it?&#34;,&#xA;       &#34;instruction&#34; =&amp;gt; &#34;Fix the spelling mistakes&#34;,&#xA;   ]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Images (DALL·E)&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All DALL·E Examples available in this &lt;a href=&#34;https://github.com/orhanerday/DALLE-Examples&#34;&gt;repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Given a prompt, the model will return one or more generated images as urls or base64 encoded.&lt;/p&gt; &#xA;&lt;h3&gt;Create image&lt;/h3&gt; &#xA;&lt;p&gt;Creates an image given a prompt.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$complete = $open_ai-&amp;gt;image([&#xA;   &#34;prompt&#34; =&amp;gt; &#34;A cat drinking milk&#34;,&#xA;   &#34;n&#34; =&amp;gt; 1,&#xA;   &#34;size&#34; =&amp;gt; &#34;256x256&#34;,&#xA;   &#34;response_format&#34; =&amp;gt; &#34;url&#34;,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create image edit&lt;/h3&gt; &#xA;&lt;p&gt;Creates an edited or extended image given an original image and a prompt.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You need HTML upload for image edit or variation? Please check &lt;a href=&#34;https://github.com/orhanerday/DALLE-Examples&#34;&gt;DALL·E Examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$otter = curl_file_create(__DIR__ . &#39;./files/otter.png&#39;);&#xA;$mask = curl_file_create(__DIR__ . &#39;./files/mask.jpg&#39;);&#xA;&#xA;$result = $open_ai-&amp;gt;imageEdit([&#xA;    &#34;image&#34; =&amp;gt; $otter,&#xA;    &#34;mask&#34; =&amp;gt; $mask,&#xA;    &#34;prompt&#34; =&amp;gt; &#34;A cute baby sea otter wearing a beret&#34;,&#xA;    &#34;n&#34; =&amp;gt; 2,&#xA;    &#34;size&#34; =&amp;gt; &#34;1024x1024&#34;,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create image variation&lt;/h3&gt; &#xA;&lt;p&gt;Creates a variation of a given image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$otter = curl_file_create(__DIR__ . &#39;./files/otter.png&#39;);&#xA;&#xA;$result = $open_ai-&amp;gt;createImageVariation([&#xA;    &#34;image&#34; =&amp;gt; $otter,&#xA;    &#34;n&#34; =&amp;gt; 2,&#xA;    &#34;size&#34; =&amp;gt; &#34;256x256&#34;,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Searches&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This endpoint is deprecated and will be removed on December 3rd, 2022 OpenAI developed new methods with better performance. &lt;a href=&#34;https://help.openai.com/en/articles/6272952-search-transition-guide&#34;&gt;Learn more.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Given a query and a set of documents or labels, the model ranks each document based on its semantic similarity to the provided query.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$search = $open_ai-&amp;gt;search([&#xA;    &#39;engine&#39; =&amp;gt; &#39;ada&#39;,&#xA;    &#39;documents&#39; =&amp;gt; [&#39;White House&#39;, &#39;hospital&#39;, &#39;school&#39;],&#xA;    &#39;query&#39; =&amp;gt; &#39;the president&#39;,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Embeddings&lt;/h2&gt; &#xA;&lt;p&gt;Get a vector representation of a given input that can be easily consumed by machine learning models and algorithms.&lt;/p&gt; &#xA;&lt;p&gt;Related guide: &lt;a href=&#34;https://beta.openai.com/docs/guides/embeddings&#34;&gt;Embeddings&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Create embeddings&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;embeddings([&#xA;    &#34;model&#34; =&amp;gt; &#34;text-similarity-babbage-001&#34;,&#xA;    &#34;input&#34; =&amp;gt; &#34;The food was delicious and the waiter...&#34;&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Answers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This endpoint is deprecated and will be removed on December 3rd, 2022 We’ve developed new methods with better performance. &lt;a href=&#34;https://help.openai.com/en/articles/6233728-answers-transition-guide&#34;&gt;Learn more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Given a question, a set of documents, and some examples, the API generates an answer to the question based on the information in the set of documents. This is useful for question-answering applications on sources of truth, like company documentation or a knowledge base.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$answer = $open_ai-&amp;gt;answer([&#xA;  &#39;documents&#39; =&amp;gt; [&#39;Puppy A is happy.&#39;, &#39;Puppy B is sad.&#39;],&#xA;  &#39;question&#39; =&amp;gt; &#39;which puppy is happy?&#39;,&#xA;  &#39;search_model&#39; =&amp;gt; &#39;ada&#39;,&#xA;  &#39;model&#39; =&amp;gt; &#39;curie&#39;,&#xA;  &#39;examples_context&#39; =&amp;gt; &#39;In 2017, U.S. life expectancy was 78.6 years.&#39;,&#xA;  &#39;examples&#39; =&amp;gt; [[&#39;What is human life expectancy in the United States?&#39;, &#39;78 years.&#39;]],&#xA;  &#39;max_tokens&#39; =&amp;gt; 5,&#xA;  &#39;stop&#39; =&amp;gt; [&#34;\n&#34;, &#39;&amp;lt;|endoftext|&amp;gt;&#39;],&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Classifications&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This endpoint is deprecated and will be removed on December 3rd, 2022 OpenAI developed new methods with better performance. &lt;a href=&#34;https://help.openai.com/en/articles/6272941-classifications-transition-guide&#34;&gt;Learn more.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Given a query and a set of labeled examples, the model will predict the most likely label for the query. Useful as a drop-in replacement for any ML classification or text-to-label task.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$classification = $open_ai-&amp;gt;classification([&#xA;   &#39;examples&#39; =&amp;gt; [&#xA;       [&#39;A happy moment&#39;, &#39;Positive&#39;],&#xA;       [&#39;I am sad.&#39;, &#39;Negative&#39;],&#xA;       [&#39;I am feeling awesome&#39;, &#39;Positive&#39;],&#xA;   ],&#xA;   &#39;labels&#39; =&amp;gt; [&#39;Positive&#39;, &#39;Negative&#39;, &#39;Neutral&#39;],&#xA;   &#39;query&#39; =&amp;gt; &#39;It is a raining day =&amp;gt;(&#39;,&#xA;   &#39;search_model&#39; =&amp;gt; &#39;ada&#39;,&#xA;   &#39;model&#39; =&amp;gt; &#39;curie&#39;,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Content Moderations&lt;/h2&gt; &#xA;&lt;p&gt;Given a input text, outputs if the model classifies it as violating OpenAI&#39;s content policy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$flags = $open_ai-&amp;gt;moderation([&#xA;    &#39;input&#39; =&amp;gt; &#39;I want to kill them.&#39;&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Know more about Content Moderations here: &lt;a href=&#34;https://beta.openai.com/docs/api-reference/moderations&#34;&gt;OpenAI Moderations&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;List engines&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The Engines endpoints are deprecated. Please use their replacement, &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/#list-models&#34;&gt;Models&lt;/a&gt;, instead. &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/TODO?&#34;&gt;Learn more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Lists the currently available engines, and provides basic information about each one such as the owner and availability.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$engines = $open_ai-&amp;gt;engines();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Audio&lt;/h2&gt; &#xA;&lt;h3&gt;Create Transcription&lt;/h3&gt; &#xA;&lt;p&gt;Transcribes audio into the input language.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$c_file = curl_file_create(__DIR__ . &#39;/files/en-marvel-endgame.m4a&#39;);&#xA;&#xA;$result = $open_ai-&amp;gt;transcribe([&#xA;    &#34;model&#34; =&amp;gt; &#34;whisper-1&#34;,&#xA;    &#34;file&#34; =&amp;gt; $c_file,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Response&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;text&#34;: &#34;I&#39;m going to use the stones again. Hey, we&#39;d be going in short-handed, you know. Look, he&#39;s still got the stones, so... So let&#39;s get them. Use them to bring everyone back. Just like that? Yeah, just like that. Even if there&#39;s a small chance that we can undo this, I mean, we owe it to everyone who&#39;s not in this room to try. If we do this, how do we know it&#39;s going to end any differently than it did before? Because before you didn&#39;t have me. Hey, little girl, everybody in this room is about that superhero life. And if you don&#39;t mind my asking, where the hell have you been all this time? There are a lot of other planets in the universe. But unfortunately, they didn&#39;t have you guys. I like this one. Let&#39;s go get this son of a bitch.&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create Translation&lt;/h3&gt; &#xA;&lt;p&gt;Translates audio into English.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;I use Turkish voice for translation thanks to famous science YouTuber &lt;a href=&#34;https://youtu.be/r2dQgdktUJg?t=90&#34;&gt;Barış Özcan&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$c_file = curl_file_create(__DIR__ . &#39;/files/tr-baris-ozcan-youtuber.m4a&#39;);&#xA;&#xA;$result = $open_ai-&amp;gt;translate([&#xA;    &#34;model&#34; =&amp;gt; &#34;whisper-1&#34;,&#xA;    &#34;file&#34; =&amp;gt; $c_file,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Response&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;text&#34;: &#34;GPT-3. Last month, the biggest leap in the world of artificial intelligence in recent years happened silently. Maybe the biggest leap of all time. GPT-3&#39;s beta version was released by OpenAI. When you hear such a sentence, you may think, what kind of leap is this? But be sure, this is the most advanced language model with the most advanced language model with the most advanced language ability. It can answer these artificial intelligence questions, it can translate and even write poetry. Those who have gained access to the API or API of GPT-3 have already started to make very interesting experiments. Let&#39;s look at a few examples together. Let&#39;s start with an example of aphorism. This site produces beautiful words that you can tweet. Start to actually do things with your words instead of just thinking about them.&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Need HTML upload for audio? Check &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/#upload-file-with-html-form&#34;&gt;this&lt;/a&gt; section and change api references. Example :&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;...&#xA;    echo $open_ai-&amp;gt;translate(&#xA;        [&#xA;            &#34;purpose&#34; =&amp;gt; &#34;answers&#34;,&#xA;            &#34;file&#34; =&amp;gt; $c_file,&#xA;        ]&#xA;    );&#xA;...&#xA;// OR&#xA;...&#xA;    echo $open_ai-&amp;gt;transcribe(&#xA;        [&#xA;            &#34;purpose&#34; =&amp;gt; &#34;answers&#34;,&#xA;            &#34;file&#34; =&amp;gt; $c_file,&#xA;        ]&#xA;    );&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Files&lt;/h2&gt; &#xA;&lt;p&gt;Files are used to upload documents that can be used across features like Answers, Search, and Classifications&lt;/p&gt; &#xA;&lt;h3&gt;List files&lt;/h3&gt; &#xA;&lt;p&gt;Returns a list of files that belong to the user&#39;s organization.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$files = $open_ai-&amp;gt;listFiles();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upload file&lt;/h3&gt; &#xA;&lt;p&gt;Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact OpenAI if you need to increase the storage limit.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$c_file = curl_file_create(__DIR__ . &#39;files/sample_file_1.jsonl&#39;);&#xA;$result = $open_ai-&amp;gt;uploadFile([&#xA;            &#34;purpose&#34; =&amp;gt; &#34;answers&#34;,&#xA;            &#34;file&#34; =&amp;gt; $c_file,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upload file with HTML Form&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;form action=&#34;index.php&#34; method=&#34;post&#34; enctype=&#34;multipart/form-data&#34;&amp;gt;&#xA;    Select file to upload:&#xA;    &amp;lt;input type=&#34;file&#34; name=&#34;fileToUpload&#34; id=&#34;fileToUpload&#34;&amp;gt;&#xA;    &amp;lt;input type=&#34;submit&#34; value=&#34;Upload File&#34; name=&#34;submit&#34;&amp;gt;&#xA;&amp;lt;/form&amp;gt;&#xA;&amp;lt;?php&#xA;require __DIR__ . &#39;/vendor/autoload.php&#39;;&#xA;&#xA;use Orhanerday\OpenAi\OpenAi;&#xA;&#xA;if ($_SERVER[&#39;REQUEST_METHOD&#39;] == &#39;POST&#39;) {&#xA;    ob_clean();&#xA;    $open_ai = new OpenAi(env(&#39;OPEN_AI_API_KEY&#39;));&#xA;    $tmp_file = $_FILES[&#39;fileToUpload&#39;][&#39;tmp_name&#39;];&#xA;    $file_name = basename($_FILES[&#39;fileToUpload&#39;][&#39;name&#39;]);&#xA;    $c_file = curl_file_create($tmp_file, $_FILES[&#39;fileToUpload&#39;][&#39;type&#39;], $file_name);&#xA;&#xA;    echo &#34;[&#34;;&#xA;    echo $open_ai-&amp;gt;uploadFile(&#xA;        [&#xA;            &#34;purpose&#34; =&amp;gt; &#34;answers&#34;,&#xA;            &#34;file&#34; =&amp;gt; $c_file,&#xA;        ]&#xA;    );&#xA;    echo &#34;,&#34;;&#xA;    echo $open_ai-&amp;gt;listFiles();&#xA;    echo &#34;]&#34;;&#xA;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delete file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;deleteFile(&#39;file-xxxxxxxx&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retrieve file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$file = $open_ai-&amp;gt;retrieveFile(&#39;file-xxxxxxxx&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retrieve file content&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$file = $open_ai-&amp;gt;retrieveFileContent(&#39;file-xxxxxxxx&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Fine-tunes&lt;/h2&gt; &#xA;&lt;p&gt;Manage fine-tuning jobs to tailor a model to your specific training data.&lt;/p&gt; &#xA;&lt;h3&gt;Create fine-tune&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;createFineTune([&#xA;       &#34;training_file&#34; =&amp;gt; &#34;file-U3KoAAtGsjUKSPXwEUDdtw86&#34;,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;List fine-tune&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$fine_tunes = $open_ai-&amp;gt;listFineTunes();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retrieve fine-tune&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$fine_tune = $open_ai-&amp;gt;retrieveFineTune(&#39;ft-AF1WoRqd3aJAHsqc9NY7iL8F&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cancel fine-tune&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;cancelFineTune(&#39;ft-AF1WoRqd3aJAHsqc9NY7iL8F&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;List fine-tune events&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$fine_tune_events = $open_ai-&amp;gt;listFineTuneEvents(&#39;ft-AF1WoRqd3aJAHsqc9NY7iL8F&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delete fine-tune model&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;deleteFineTune(&#39;curie:ft-acmeco-2021-03-03-21-44-20&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Retrieve engine&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Retrieves an engine instance, providing basic information about the engine such as the owner and availability.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$engine = $open_ai-&amp;gt;engine(&#39;davinci&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Models&lt;/h2&gt; &#xA;&lt;p&gt;List and describe the various models available in the API.&lt;/p&gt; &#xA;&lt;h3&gt;List models&lt;/h3&gt; &#xA;&lt;p&gt;Lists the currently available models, and provides basic information about each one such as the owner and availability.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;listModels();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retrieve model&lt;/h3&gt; &#xA;&lt;p&gt;Retrieves a model instance, providing basic information about the model such as the owner and permissioning.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;retrieveModel(&#34;text-ada-001&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Printing results &lt;em&gt;i.e.&lt;/em&gt; &lt;code&gt;$search&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;echo $search;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;To run all tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run only those tests that work for most user (exclude those that require a missing folder or that hit deprecated endpoints no longer available to most users):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/pest --group=working&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please report security vulnerabilities to &lt;a href=&#34;mailto:orhanerday@gmail.com&#34;&gt;orhanerday@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orhanerday&#34;&gt;Orhan Erday&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Donation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/orhane&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;btc&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/22305274/209946578-fc7db433-699c-491f-9f8b-1c962f0b9ea2.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;eth&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/22305274/209946539-24f247d9-68a1-4f46-a18b-62790d943c99.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;doge&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/22305274/209946556-164798d0-e404-4b6c-8669-d63e78f24228.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MISP/MISP</title>
    <updated>2023-04-01T02:19:02Z</updated>
    <id>tag:github.com,2023-04-01:/MISP/MISP</id>
    <link href="https://github.com/MISP/MISP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MISP (core software) - Open Source Threat Intelligence and Sharing Platform&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;MISP - Threat Intelligence Sharing Platform&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MISP/MISP/2.4/INSTALL/logos/misp-logo.png?raw=true&#34; alt=&#34;logo&#34; title=&#34;MISP&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Latest Release&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://badge.fury.io/gh/MISP%2FMISP&#34;&gt;&lt;img src=&#34;https://badge.fury.io/gh/MISP%2FMISP.svg?sanitize=true&#34; alt=&#34;GitHub version&#34; height=&#34;18&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CI Action&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MISP/MISP/actions?query=workflow%3Amisp&#34;&gt;&lt;img src=&#34;https://github.com/MISP/MISP/workflows/misp/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gitter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitter.im/MISP/MISP?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/MISP/MISP.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Twitter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/MISPProject&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/MISPProject.svg?style=social&amp;amp;label=Follow&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Localization&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://crowdin.com/project/misp&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/misp/localized.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Contributors&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/MISP/MISP.svg?sanitize=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;License&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/github/license/MISP/MISP.svg?sanitize=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;MISP is an open source software solution for collecting, storing, distributing and sharing cyber security indicators and threats about cyber security incidents analysis and malware analysis. MISP is designed by and for incident analysts, security and ICT professionals or malware reversers to support their day-to-day operations to share structured information efficiently.&lt;/p&gt; &#xA;&lt;p&gt;The objective of MISP is to foster the sharing of structured information within the security community and abroad. MISP provides functionalities to support the exchange of information but also the consumption of said information by Network Intrusion Detection Systems (NIDS), LIDS but also log analysis tools, SIEMs.&lt;/p&gt; &#xA;&lt;p&gt;MISP, Malware Information Sharing Platform and Threat Sharing, core functionalities are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An &lt;strong&gt;efficient IOC and indicators&lt;/strong&gt; database, allowing to store technical and non-technical information about malware samples, incidents, attackers and intelligence.&lt;/li&gt; &#xA; &lt;li&gt;Automatic &lt;strong&gt;correlation&lt;/strong&gt; finding relationships between attributes and indicators from malware, attack campaigns or analysis. The correlation engine includes correlation between attributes and more advanced correlations like Fuzzy hashing correlation (e.g. ssdeep) or CIDR block matching. Correlation can also be enabled or event disabled per attribute.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;strong&gt;flexible data model&lt;/strong&gt; where complex &lt;a href=&#34;https://www.misp-project.org/objects.html&#34;&gt;objects&lt;/a&gt; can be expressed and &lt;strong&gt;linked together to express threat intelligence, incidents or connected elements&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Built-in &lt;strong&gt;sharing functionality&lt;/strong&gt; to ease data sharing using different model of distributions. MISP can automatically synchronize events and attributes among different MISP instances. Advanced filtering functionalities can be used to meet each organization&#39;s sharing policy including a &lt;strong&gt;flexible sharing group&lt;/strong&gt; capacity and an attribute level distribution mechanisms.&lt;/li&gt; &#xA; &lt;li&gt;An &lt;strong&gt;intuitive user-interface&lt;/strong&gt; for end-users to create, update and collaborate on events and attributes/indicators. A &lt;strong&gt;graphical interface&lt;/strong&gt; to navigate seamlessly between events and their correlations. An &lt;strong&gt;event graph&lt;/strong&gt; functionality to create and view relationships between objects and attributes. Advanced filtering functionalities and &lt;a href=&#34;https://github.com/MISP/misp-warninglists&#34;&gt;warning lists&lt;/a&gt; to help the analysts to contribute events and attributes and limit the risk of false-positives.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;storing data&lt;/strong&gt; in a structured format (allowing automated use of the database for various purposes) with an extensive support of cyber security indicators along fraud indicators as in the financial sector.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;export&lt;/strong&gt;: generating IDS, OpenIOC, plain text, CSV, MISP XML or JSON output to integrate with other systems (network IDS, host IDS, custom tools), Cache format (used for forensic tools), STIX (XML and JSON) 1 and 2, NIDS export (Suricata, Snort and Bro/Zeek) or RPZ zone. Many other formats can be easily added via the &lt;a href=&#34;https://github.com/MISP/misp-modules&#34;&gt;misp-modules&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;import&lt;/strong&gt;: bulk-import, batch-import, import from OpenIOC, GFI sandbox, ThreatConnect CSV, MISP standard format or STIX 1.1/2.0. Many other formats easily added via the &lt;a href=&#34;https://github.com/MISP/misp-modules&#34;&gt;misp-modules&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Flexible &lt;strong&gt;free text import&lt;/strong&gt; tool to ease the integration of unstructured reports into MISP.&lt;/li&gt; &#xA; &lt;li&gt;A user-friendly system to &lt;strong&gt;collaborate&lt;/strong&gt; on events and attributes allowing MISP users to propose changes or updates to attributes/indicators.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;data-sharing&lt;/strong&gt;: automatically exchange and synchronize with other parties and trust-groups using MISP.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;delegating of sharing&lt;/strong&gt;: allows for a simple, pseudo-anonymous mechanism to delegate publication of event/indicators to another organization.&lt;/li&gt; &#xA; &lt;li&gt;Flexible &lt;strong&gt;API&lt;/strong&gt; to integrate MISP with your own solutions. MISP is bundled with &lt;a href=&#34;https://github.com/MISP/PyMISP&#34;&gt;PyMISP&lt;/a&gt; which is a flexible Python Library to fetch, add or update events attributes, handle malware samples or search for attributes. An exhaustive restSearch API to easily search for indicators in MISP and exports those in all the format supported by MISP.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Adjustable taxonomy&lt;/strong&gt; to classify and tag events following your own classification schemes or &lt;a href=&#34;https://github.com/MISP/misp-taxonomies&#34;&gt;existing classification&lt;/a&gt;. The taxonomy can be local to your MISP but also shareable among MISP instances.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intelligence vocabularies&lt;/strong&gt; called MISP galaxy and bundled with existing &lt;a href=&#34;https://www.misp-project.org/galaxy.html&#34;&gt;threat actors, malware, RAT, ransomware or MITRE ATT&amp;amp;CK&lt;/a&gt; which can be easily linked with events and attributes in MISP.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Expansion modules in Python&lt;/strong&gt; to expand MISP with your own services or activate already available &lt;a href=&#34;https://github.com/MISP/misp-modules&#34;&gt;misp-modules&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sighting support&lt;/strong&gt; to get observations from organizations concerning shared indicators and attributes. Sighting &lt;a href=&#34;https://www.circl.lu/doc/misp/automation/index.html#sightings-api&#34;&gt;can be contributed&lt;/a&gt; via MISP user-interface, API as MISP document or STIX sighting documents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;STIX support&lt;/strong&gt;: import and export data in the STIX version 1 and version 2 format.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Integrated encryption and signing of the notifications&lt;/strong&gt; via GnuPG and/or S/MIME depending on the user&#39;s preferences.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time&lt;/strong&gt; publish-subscribe channel within MISP to automatically get all changes (e.g. new events, indicators, sightings or tagging) in ZMQ (e.g. &lt;a href=&#34;https://github.com/MISP/misp-dashboard&#34;&gt;misp-dashboard&lt;/a&gt;) or Kafka publishing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Exchanging info results in &lt;em&gt;faster detection&lt;/em&gt; of targeted attacks and improves the detection ratio while reducing the false positives. We also avoid reversing similar malware as we know very fast that other teams or organizations have already analyzed a specific malware.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MISP/MISP/2.4/INSTALL/screenshots/misp-panorama.png&#34; alt=&#34;MISP 2.4 overview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A sample event encoded in MISP:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MISP/MISP/2.4/INSTALL/screenshots/event-view.png?raw=true&#34; alt=&#34;MISP event view&#34; title=&#34;MISP&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Website / Support&lt;/h2&gt; &#xA;&lt;p&gt;Checkout the &lt;a href=&#34;https://www.misp-project.org&#34;&gt;website&lt;/a&gt; for more information about MISP software, standards, tools and communities.&lt;/p&gt; &#xA;&lt;p&gt;Information, news and updates are also regularly posted on the &lt;a href=&#34;https://twitter.com/MISPProject&#34;&gt;MISP project twitter account&lt;/a&gt; or the &lt;a href=&#34;https://www.misp-project.org/news/&#34;&gt;news page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MISP/misp-book&#34;&gt;MISP user-guide (MISP-book)&lt;/a&gt; is available &lt;a href=&#34;https://www.circl.lu/doc/misp/&#34;&gt;online&lt;/a&gt; or as &lt;a href=&#34;https://www.circl.lu/doc/misp/book.pdf&#34;&gt;PDF&lt;/a&gt; or as &lt;a href=&#34;https://www.circl.lu/doc/misp/book.epub&#34;&gt;EPUB&lt;/a&gt; or as &lt;a href=&#34;https://www.circl.lu/doc/misp/book.mobi&#34;&gt;MOBI/Kindle&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For the installation guide see the &lt;a href=&#34;https://github.com/MISP/MISP/tree/2.4/INSTALL&#34;&gt;INSTALL&lt;/a&gt; or &lt;a href=&#34;https://www.misp-project.org/download/&#34;&gt;download section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested to contribute to the MISP project, review our &lt;a href=&#34;https://raw.githubusercontent.com/MISP/MISP/2.4/CONTRIBUTING.md&#34;&gt;contributing page&lt;/a&gt;. There are many ways to contribute and participate to the project.&lt;/p&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://raw.githubusercontent.com/MISP/MISP/2.4/code_of_conduct.md&#34;&gt;Code of conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to fork the code, play with it, make some patches and send us the pull requests via the &lt;a href=&#34;https://github.com/MISP/MISP/issues&#34;&gt;issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to contact us, create &lt;a href=&#34;https://github.com/MISP/MISP/issues&#34;&gt;issues&lt;/a&gt;, if you have questions, remarks or bug reports.&lt;/p&gt; &#xA;&lt;p&gt;There is one main branch:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2.4 (current stable version): what we consider as stable with frequent updates as hot-fixes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and features are developed in separated branches and then regularly merged into the 2.4 stable branch.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is licensed under &lt;a href=&#34;http://www.gnu.org/licenses/agpl-3.0.html&#34;&gt;GNU Affero General Public License version 3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copyright (C) 2012-2023 Christophe Vandeplas&lt;/li&gt; &#xA; &lt;li&gt;Copyright (C) 2012 Belgian Defence&lt;/li&gt; &#xA; &lt;li&gt;Copyright (C) 2012 NATO / NCIRC&lt;/li&gt; &#xA; &lt;li&gt;Copyright (C) 2013-2023 Andras Iklody&lt;/li&gt; &#xA; &lt;li&gt;Copyright (C) 2015-2023 CIRCL - Computer Incident Response Center Luxembourg&lt;/li&gt; &#xA; &lt;li&gt;Copyright (C) 2016 Andreas Ziegler&lt;/li&gt; &#xA; &lt;li&gt;Copyright (C) 2018-2023 Sami Mokaddem&lt;/li&gt; &#xA; &lt;li&gt;Copyright (C) 2018-2023 Christian Studer&lt;/li&gt; &#xA; &lt;li&gt;Copyright (C) 2015-2023 Alexandre Dulaunoy&lt;/li&gt; &#xA; &lt;li&gt;Copyright (C) 2018-2022 Steve Clement&lt;/li&gt; &#xA; &lt;li&gt;Copyright (C) 2020-2023 Jakub Onderka&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information, &lt;a href=&#34;https://raw.githubusercontent.com/MISP/MISP/2.4/AUTHORS&#34;&gt;the list of authors and contributors&lt;/a&gt; is available.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>typecho/typecho</title>
    <updated>2023-04-01T02:19:02Z</updated>
    <id>tag:github.com,2023-04-01:/typecho/typecho</id>
    <link href="https://github.com/typecho/typecho" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A PHP Blogging Platform. Simple and Powerful.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Typecho Blogging Platform&lt;/h1&gt; &#xA;&lt;p&gt;Typecho is a PHP-based blog software and is designed to be the most powerful blog engine in the world. Typecho is released under the GNU General Public License 2.0.&lt;/p&gt; &#xA;&lt;h2&gt;Main Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multiple databases support (MySQL, SQLite, PostgreSQL)&lt;/li&gt; &#xA; &lt;li&gt;Markdown Support&lt;/li&gt; &#xA; &lt;li&gt;Plugin Support&lt;/li&gt; &#xA; &lt;li&gt;Theme Support&lt;/li&gt; &#xA; &lt;li&gt;Custom Fields&lt;/li&gt; &#xA; &lt;li&gt;Custom Pages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP 7.2.0 or higher&lt;/li&gt; &#xA; &lt;li&gt;Database (MySQL, SQLite, PostgreSQL) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MySQL 5.5.3 or higher&lt;/li&gt; &#xA;   &lt;li&gt;SQLite 3.7.11 or higher&lt;/li&gt; &#xA;   &lt;li&gt;PostgreSQL 9.1 or higher&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://typecho.org/usr/themes/bluecode/img/screenshot/st1.png&#34; alt=&#34;Typecho&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/typecho/typecho/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
</feed>