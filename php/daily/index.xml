<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-08T01:40:24Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yajra/laravel-datatables</title>
    <updated>2022-09-08T01:40:24Z</updated>
    <id>tag:github.com,2022-09-08:/yajra/laravel-datatables</id>
    <link href="https://github.com/yajra/laravel-datatables" rel="alternate"></link>
    <summary type="html">&lt;p&gt;jQuery DataTables API for Laravel 4|5|6|7|8|9&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;jQuery DataTables API for Laravel 4|5|6|7|8|9&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/yajra/laravel-datatables?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/yajra/laravel-datatables.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/yajra/laravel-datatables&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.me/yajra&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-paypal-blue.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.patreon.com/bePatron?u=4521203&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-patreon-blue.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://laravel.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Laravel-4.2%7C5.x%7C6%7C7%7C8%7C9-orange.svg?sanitize=true&#34; alt=&#34;Laravel 4.2|5.x|6|7|8|9&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/yajra/laravel-datatables-oracle&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/yajra/laravel-datatables-oracle.svg?sanitize=true&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/yajra/laravel-datatables-oracle&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/yajra/laravel-datatables-oracle/v/unstable.svg?sanitize=true&#34; alt=&#34;Latest Unstable Version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/yajra/laravel-datatables-html/workflows/tests/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt; &lt;a href=&#34;https://packagist.org/packages/yajra/laravel-datatables-oracle&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/yajra/laravel-datatables-oracle/downloads.png&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/yajra/laravel-datatables-oracle&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/mashape/apistatus.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Laravel package for handling &lt;a href=&#34;https://www.datatables.net/manual/server-side&#34;&gt;server-side&lt;/a&gt; works of &lt;a href=&#34;http://datatables.net&#34;&gt;DataTables&lt;/a&gt; jQuery Plugin via &lt;a href=&#34;https://datatables.net/reference/option/ajax&#34;&gt;AJAX option&lt;/a&gt; by using Eloquent ORM, Fluent Query Builder or Collection.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;return datatables()-&amp;gt;eloquent(User::query())-&amp;gt;toJson();&#xA;return datatables()-&amp;gt;query(DB::table(&#39;users&#39;))-&amp;gt;toJson();&#xA;return datatables()-&amp;gt;collection(User::all())-&amp;gt;toJson();&#xA;&#xA;return datatables(User::query())-&amp;gt;toJson();&#xA;return datatables(DB::table(&#39;users&#39;))-&amp;gt;toJson();&#xA;return datatables(User::all())-&amp;gt;toJson();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://editor.datatables.net?utm_source=laravel-datatables&amp;amp;utm_medium=github_readme&amp;amp;utm_campaign=logo&#34;&gt; &lt;img src=&#34;http://datatables.net/media/images/logo.png&#34; alt=&#34;DataTables&#34; height=&#34;64&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://jb.gg/OpenSourceSupport&#34;&gt; &lt;img src=&#34;https://resources.jetbrains.com/storage/products/company/brand/logos/jb_beam.png&#34; alt=&#34;JetBrains.com&#34; height=&#34;128&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://blackfire.io/docs/introduction?utm_source=laravel-datatables&amp;amp;utm_medium=github_readme&amp;amp;utm_campaign=logo&#34;&gt; &lt;img src=&#34;https://i.imgur.com/zR8rsqk.png&#34; alt=&#34;Blackfire.io&#34; height=&#34;64&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://php.net/&#34;&gt;PHP &amp;gt;= 8.0.2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/laravel/framework&#34;&gt;Laravel Framework&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://datatables.net/&#34;&gt;jQuery DataTables v1.10.x&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yajra/laravel-datatables-docs&#34;&gt;Github Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yajrabox.com/docs/laravel-datatables/master/quick-starter&#34;&gt;Laravel DataTables Quick Starter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yajrabox.com/docs/laravel-datatables&#34;&gt;Laravel DataTables Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://datatables.yajrabox.com&#34;&gt;Laravel 5.0 - 5.3 Demo Application&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Laravel Version Compatibility&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Laravel&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Package&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4.2.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.0.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.1.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.2.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.3.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.4.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;7.x, 8.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.5.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;8.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.6.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;8.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.7.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;8.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.8.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;9.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6.x.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;9.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;7.x.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;9.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;8.x.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;9.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;9.x.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;10.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Quick Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ composer require yajra/laravel-datatables-oracle:&#34;^10.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Service Provider &amp;amp; Facade (Optional on Laravel 5.5+)&lt;/h4&gt; &#xA;&lt;p&gt;Register provider and facade on your &lt;code&gt;config/app.php&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&#39;providers&#39; =&amp;gt; [&#xA;    ...,&#xA;    Yajra\DataTables\DataTablesServiceProvider::class,&#xA;]&#xA;&#xA;&#39;aliases&#39; =&amp;gt; [&#xA;    ...,&#xA;    &#39;DataTables&#39; =&amp;gt; Yajra\DataTables\Facades\DataTables::class,&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Configuration (Optional)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ php artisan vendor:publish --provider=&#34;Yajra\DataTables\DataTablesServiceProvider&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And that&#39;s it! Start building out some awesome DataTables!&lt;/p&gt; &#xA;&lt;h2&gt;Debugging Mode&lt;/h2&gt; &#xA;&lt;p&gt;To enable debugging mode, just set &lt;code&gt;APP_DEBUG=true&lt;/code&gt; and the package will include the queries and inputs used when processing the table.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; Please make sure that APP_DEBUG is set to false when your app is on production.&lt;/p&gt; &#xA;&lt;h2&gt;PHP ARTISAN SERVE BUG&lt;/h2&gt; &#xA;&lt;p&gt;Please avoid using &lt;code&gt;php artisan serve&lt;/code&gt; when developing with the package. There are known bugs when using this where Laravel randomly returns a redirect and 401 (Unauthorized) if the route requires authentication and a 404 NotFoundHttpException on valid routes.&lt;/p&gt; &#xA;&lt;p&gt;It is advised to use &lt;a href=&#34;https://laravel.com/docs/5.4/homestead&#34;&gt;Homestead&lt;/a&gt; or &lt;a href=&#34;https://laravel.com/docs/5.4/valet&#34;&gt;Valet&lt;/a&gt; when working with the package.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/yajra/laravel-datatables/raw/master/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you discover any security related issues, please email &lt;a href=&#34;mailto:aqangeles@gmail.com&#34;&gt;aqangeles@gmail.com&lt;/a&gt; instead of using the issue tracker.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yajra&#34;&gt;Arjay Angeles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bllim/laravel4-datatables-package&#34;&gt;bllim/laravel4-datatables-package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yajra/laravel-datatables/graphs/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://github.com/yajra/laravel-datatables/raw/master/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>guzzle/psr7</title>
    <updated>2022-09-08T01:40:24Z</updated>
    <id>tag:github.com,2022-09-08:/guzzle/psr7</id>
    <link href="https://github.com/guzzle/psr7" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PSR-7 HTTP message library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PSR-7 Message Implementation&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a full &lt;a href=&#34;https://www.php-fig.org/psr/psr-7/&#34;&gt;PSR-7&lt;/a&gt; message implementation, several stream decorators, and some helpful functionality like query string parsing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/guzzle/psr7/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt; &lt;img src=&#34;https://github.com/guzzle/psr7/workflows/Static%20analysis/badge.svg?sanitize=true&#34; alt=&#34;Static analysis&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Stream implementation&lt;/h1&gt; &#xA;&lt;p&gt;This package comes with a number of stream implementations and stream decorators.&lt;/p&gt; &#xA;&lt;h2&gt;AppendStream&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\AppendStream&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Reads from multiple streams, one after the other.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use GuzzleHttp\Psr7;&#xA;&#xA;$a = Psr7\Utils::streamFor(&#39;abc, &#39;);&#xA;$b = Psr7\Utils::streamFor(&#39;123.&#39;);&#xA;$composed = new Psr7\AppendStream([$a, $b]);&#xA;&#xA;$composed-&amp;gt;addStream(Psr7\Utils::streamFor(&#39; Above all listen to me&#39;));&#xA;&#xA;echo $composed; // abc, 123. Above all listen to me.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;BufferStream&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\BufferStream&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides a buffer stream that can be written to fill a buffer, and read from to remove bytes from the buffer.&lt;/p&gt; &#xA;&lt;p&gt;This stream returns a &#34;hwm&#34; metadata value that tells upstream consumers what the configured high water mark of the stream is, or the maximum preferred size of the buffer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use GuzzleHttp\Psr7;&#xA;&#xA;// When more than 1024 bytes are in the buffer, it will begin returning&#xA;// false to writes. This is an indication that writers should slow down.&#xA;$buffer = new Psr7\BufferStream(1024);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CachingStream&lt;/h2&gt; &#xA;&lt;p&gt;The CachingStream is used to allow seeking over previously read bytes on non-seekable streams. This can be useful when transferring a non-seekable entity body fails due to needing to rewind the stream (for example, resulting from a redirect). Data that is read from the remote stream will be buffered in a PHP temp stream so that previously read bytes are cached first in memory, then on disk.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use GuzzleHttp\Psr7;&#xA;&#xA;$original = Psr7\Utils::streamFor(fopen(&#39;http://www.google.com&#39;, &#39;r&#39;));&#xA;$stream = new Psr7\CachingStream($original);&#xA;&#xA;$stream-&amp;gt;read(1024);&#xA;echo $stream-&amp;gt;tell();&#xA;// 1024&#xA;&#xA;$stream-&amp;gt;seek(0);&#xA;echo $stream-&amp;gt;tell();&#xA;// 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;DroppingStream&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\DroppingStream&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Stream decorator that begins dropping data once the size of the underlying stream becomes too full.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use GuzzleHttp\Psr7;&#xA;&#xA;// Create an empty stream&#xA;$stream = Psr7\Utils::streamFor();&#xA;&#xA;// Start dropping data when the stream has more than 10 bytes&#xA;$dropping = new Psr7\DroppingStream($stream, 10);&#xA;&#xA;$dropping-&amp;gt;write(&#39;01234567890123456789&#39;);&#xA;echo $stream; // 0123456789&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FnStream&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\FnStream&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Compose stream implementations based on a hash of functions.&lt;/p&gt; &#xA;&lt;p&gt;Allows for easy testing and extension of a provided stream without needing to create a concrete class for a simple extension point.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&#xA;use GuzzleHttp\Psr7;&#xA;&#xA;$stream = Psr7\Utils::streamFor(&#39;hi&#39;);&#xA;$fnStream = Psr7\FnStream::decorate($stream, [&#xA;    &#39;rewind&#39; =&amp;gt; function () use ($stream) {&#xA;        echo &#39;About to rewind - &#39;;&#xA;        $stream-&amp;gt;rewind();&#xA;        echo &#39;rewound!&#39;;&#xA;    }&#xA;]);&#xA;&#xA;$fnStream-&amp;gt;rewind();&#xA;// Outputs: About to rewind - rewound!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;InflateStream&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\InflateStream&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Uses PHP&#39;s zlib.inflate filter to inflate zlib (HTTP deflate, RFC1950) or gzipped (RFC1952) content.&lt;/p&gt; &#xA;&lt;p&gt;This stream decorator converts the provided stream to a PHP stream resource, then appends the zlib.inflate filter. The stream is then converted back to a Guzzle stream resource to be used as a Guzzle stream.&lt;/p&gt; &#xA;&lt;h2&gt;LazyOpenStream&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\LazyOpenStream&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Lazily reads or writes to a file that is opened only after an IO operation take place on the stream.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use GuzzleHttp\Psr7;&#xA;&#xA;$stream = new Psr7\LazyOpenStream(&#39;/path/to/file&#39;, &#39;r&#39;);&#xA;// The file has not yet been opened...&#xA;&#xA;echo $stream-&amp;gt;read(10);&#xA;// The file is opened and read from only when needed.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;LimitStream&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\LimitStream&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;LimitStream can be used to read a subset or slice of an existing stream object. This can be useful for breaking a large file into smaller pieces to be sent in chunks (e.g. Amazon S3&#39;s multipart upload API).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use GuzzleHttp\Psr7;&#xA;&#xA;$original = Psr7\Utils::streamFor(fopen(&#39;/tmp/test.txt&#39;, &#39;r+&#39;));&#xA;echo $original-&amp;gt;getSize();&#xA;// &amp;gt;&amp;gt;&amp;gt; 1048576&#xA;&#xA;// Limit the size of the body to 1024 bytes and start reading from byte 2048&#xA;$stream = new Psr7\LimitStream($original, 1024, 2048);&#xA;echo $stream-&amp;gt;getSize();&#xA;// &amp;gt;&amp;gt;&amp;gt; 1024&#xA;echo $stream-&amp;gt;tell();&#xA;// &amp;gt;&amp;gt;&amp;gt; 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;MultipartStream&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\MultipartStream&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Stream that when read returns bytes for a streaming multipart or multipart/form-data stream.&lt;/p&gt; &#xA;&lt;h2&gt;NoSeekStream&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\NoSeekStream&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;NoSeekStream wraps a stream and does not allow seeking.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use GuzzleHttp\Psr7;&#xA;&#xA;$original = Psr7\Utils::streamFor(&#39;foo&#39;);&#xA;$noSeek = new Psr7\NoSeekStream($original);&#xA;&#xA;echo $noSeek-&amp;gt;read(3);&#xA;// foo&#xA;var_export($noSeek-&amp;gt;isSeekable());&#xA;// false&#xA;$noSeek-&amp;gt;seek(0);&#xA;var_export($noSeek-&amp;gt;read(3));&#xA;// NULL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;PumpStream&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\PumpStream&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides a read only stream that pumps data from a PHP callable.&lt;/p&gt; &#xA;&lt;p&gt;When invoking the provided callable, the PumpStream will pass the amount of data requested to read to the callable. The callable can choose to ignore this value and return fewer or more bytes than requested. Any extra data returned by the provided callable is buffered internally until drained using the read() function of the PumpStream. The provided callable MUST return false when there is no more data to read.&lt;/p&gt; &#xA;&lt;h2&gt;Implementing stream decorators&lt;/h2&gt; &#xA;&lt;p&gt;Creating a stream decorator is very easy thanks to the &lt;code&gt;GuzzleHttp\Psr7\StreamDecoratorTrait&lt;/code&gt;. This trait provides methods that implement &lt;code&gt;Psr\Http\Message\StreamInterface&lt;/code&gt; by proxying to an underlying stream. Just &lt;code&gt;use&lt;/code&gt; the &lt;code&gt;StreamDecoratorTrait&lt;/code&gt; and implement your custom methods.&lt;/p&gt; &#xA;&lt;p&gt;For example, let&#39;s say we wanted to call a specific function each time the last byte is read from a stream. This could be implemented by overriding the &lt;code&gt;read()&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Psr\Http\Message\StreamInterface;&#xA;use GuzzleHttp\Psr7\StreamDecoratorTrait;&#xA;&#xA;class EofCallbackStream implements StreamInterface&#xA;{&#xA;    use StreamDecoratorTrait;&#xA;&#xA;    private $callback;&#xA;&#xA;    public function __construct(StreamInterface $stream, callable $cb)&#xA;    {&#xA;        $this-&amp;gt;stream = $stream;&#xA;        $this-&amp;gt;callback = $cb;&#xA;    }&#xA;&#xA;    public function read($length)&#xA;    {&#xA;        $result = $this-&amp;gt;stream-&amp;gt;read($length);&#xA;&#xA;        // Invoke the callback when EOF is hit.&#xA;        if ($this-&amp;gt;eof()) {&#xA;            call_user_func($this-&amp;gt;callback);&#xA;        }&#xA;&#xA;        return $result;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This decorator could be added to any existing stream and used like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use GuzzleHttp\Psr7;&#xA;&#xA;$original = Psr7\Utils::streamFor(&#39;foo&#39;);&#xA;&#xA;$eofStream = new EofCallbackStream($original, function () {&#xA;    echo &#39;EOF!&#39;;&#xA;});&#xA;&#xA;$eofStream-&amp;gt;read(2);&#xA;$eofStream-&amp;gt;read(1);&#xA;// echoes &#34;EOF!&#34;&#xA;$eofStream-&amp;gt;seek(0);&#xA;$eofStream-&amp;gt;read(3);&#xA;// echoes &#34;EOF!&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;PHP StreamWrapper&lt;/h2&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;GuzzleHttp\Psr7\StreamWrapper&lt;/code&gt; class if you need to use a PSR-7 stream as a PHP stream resource.&lt;/p&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;GuzzleHttp\Psr7\StreamWrapper::getResource()&lt;/code&gt; method to create a PHP stream from a PSR-7 stream.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use GuzzleHttp\Psr7\StreamWrapper;&#xA;&#xA;$stream = GuzzleHttp\Psr7\Utils::streamFor(&#39;hello!&#39;);&#xA;$resource = StreamWrapper::getResource($stream);&#xA;echo fread($resource, 6); // outputs hello!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Static API&lt;/h1&gt; &#xA;&lt;p&gt;There are various static methods available under the &lt;code&gt;GuzzleHttp\Psr7&lt;/code&gt; namespace.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Message::toString&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function toString(MessageInterface $message): string&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Returns the string representation of an HTTP message.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$request = new GuzzleHttp\Psr7\Request(&#39;GET&#39;, &#39;http://example.com&#39;);&#xA;echo GuzzleHttp\Psr7\Message::toString($request);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Message::bodySummary&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function bodySummary(MessageInterface $message, int $truncateAt = 120): string|null&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Get a short summary of the message body.&lt;/p&gt; &#xA;&lt;p&gt;Will return &lt;code&gt;null&lt;/code&gt; if the response is not printable.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Message::rewindBody&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function rewindBody(MessageInterface $message): void&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Attempts to rewind a message body and throws an exception on failure.&lt;/p&gt; &#xA;&lt;p&gt;The body of the message will only be rewound if a call to &lt;code&gt;tell()&lt;/code&gt; returns a value other than &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Message::parseMessage&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function parseMessage(string $message): array&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Parses an HTTP message into an associative array.&lt;/p&gt; &#xA;&lt;p&gt;The array contains the &#34;start-line&#34; key containing the start line of the message, &#34;headers&#34; key containing an associative array of header array values, and a &#34;body&#34; key containing the body of the message.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Message::parseRequestUri&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function parseRequestUri(string $path, array $headers): string&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Constructs a URI for an HTTP request message.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Message::parseRequest&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function parseRequest(string $message): Request&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Parses a request message string into a request object.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Message::parseResponse&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function parseResponse(string $message): Response&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Parses a response message string into a response object.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Header::parse&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function parse(string|array $header): array&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Parse an array of header values containing &#34;;&#34; separated data into an array of associative arrays representing the header key value pair data of the header. When a parameter does not contain a value, but just contains a key, this function will inject a key with a &#39;&#39; string value.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Header::normalize&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function normalize(string|array $header): array&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Converts an array of header values that may contain comma separated headers into an array of headers with no comma separated values.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Query::parse&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function parse(string $str, int|bool $urlEncoding = true): array&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Parse a query string into an associative array.&lt;/p&gt; &#xA;&lt;p&gt;If multiple values are found for the same key, the value of that key value pair will become an array. This function does not parse nested PHP style arrays into an associative array (e.g., &lt;code&gt;foo[a]=1&amp;amp;foo[b]=2&lt;/code&gt; will be parsed into &lt;code&gt;[&#39;foo[a]&#39; =&amp;gt; &#39;1&#39;, &#39;foo[b]&#39; =&amp;gt; &#39;2&#39;])&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Query::build&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function build(array $params, int|false $encoding = PHP_QUERY_RFC3986): string&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Build a query string from an array of key value pairs.&lt;/p&gt; &#xA;&lt;p&gt;This function can use the return value of &lt;code&gt;parse()&lt;/code&gt; to build a query string. This function does not modify the provided keys when an array is encountered (like &lt;code&gt;http_build_query()&lt;/code&gt; would).&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Utils::caselessRemove&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function caselessRemove(iterable&amp;lt;string&amp;gt; $keys, $keys, array $data): array&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Remove the items given by the keys, case insensitively from the data.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Utils::copyToStream&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function copyToStream(StreamInterface $source, StreamInterface $dest, int $maxLen = -1): void&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copy the contents of a stream into another stream until the given number of bytes have been read.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Utils::copyToString&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function copyToString(StreamInterface $stream, int $maxLen = -1): string&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copy the contents of a stream into a string until the given number of bytes have been read.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Utils::hash&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function hash(StreamInterface $stream, string $algo, bool $rawOutput = false): string&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Calculate a hash of a stream.&lt;/p&gt; &#xA;&lt;p&gt;This method reads the entire stream to calculate a rolling hash, based on PHP&#39;s &lt;code&gt;hash_init&lt;/code&gt; functions.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Utils::modifyRequest&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function modifyRequest(RequestInterface $request, array $changes): RequestInterface&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Clone and modify a request with the given changes.&lt;/p&gt; &#xA;&lt;p&gt;This method is useful for reducing the number of clones needed to mutate a message.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;method: (string) Changes the HTTP method.&lt;/li&gt; &#xA; &lt;li&gt;set_headers: (array) Sets the given headers.&lt;/li&gt; &#xA; &lt;li&gt;remove_headers: (array) Remove the given headers.&lt;/li&gt; &#xA; &lt;li&gt;body: (mixed) Sets the given body.&lt;/li&gt; &#xA; &lt;li&gt;uri: (UriInterface) Set the URI.&lt;/li&gt; &#xA; &lt;li&gt;query: (string) Set the query string value of the URI.&lt;/li&gt; &#xA; &lt;li&gt;version: (string) Set the protocol version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Utils::readLine&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function readLine(StreamInterface $stream, int $maxLength = null): string&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Read a line from the stream up to the maximum allowed buffer length.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Utils::streamFor&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function streamFor(resource|string|null|int|float|bool|StreamInterface|callable|\Iterator $resource = &#39;&#39;, array $options = []): StreamInterface&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Create a new stream based on the input type.&lt;/p&gt; &#xA;&lt;p&gt;Options is an associative array that can contain the following keys:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;metadata: Array of custom metadata.&lt;/li&gt; &#xA; &lt;li&gt;size: Size of the stream.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This method accepts the following &lt;code&gt;$resource&lt;/code&gt; types:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Psr\Http\Message\StreamInterface&lt;/code&gt;: Returns the value as-is.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;string&lt;/code&gt;: Creates a stream object that uses the given string as the contents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;resource&lt;/code&gt;: Creates a stream object that wraps the given PHP stream resource.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Iterator&lt;/code&gt;: If the provided value implements &lt;code&gt;Iterator&lt;/code&gt;, then a read-only stream object will be created that wraps the given iterable. Each time the stream is read from, data from the iterator will fill a buffer and will be continuously called until the buffer is equal to the requested read size. Subsequent read calls will first read from the buffer and then call &lt;code&gt;next&lt;/code&gt; on the underlying iterator until it is exhausted.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;object&lt;/code&gt; with &lt;code&gt;__toString()&lt;/code&gt;: If the object has the &lt;code&gt;__toString()&lt;/code&gt; method, the object will be cast to a string and then a stream will be returned that uses the string value.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NULL&lt;/code&gt;: When &lt;code&gt;null&lt;/code&gt; is passed, an empty stream object is returned.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;callable&lt;/code&gt; When a callable is passed, a read-only stream object will be created that invokes the given callable. The callable is invoked with the number of suggested bytes to read. The callable can return any number of bytes, but MUST return &lt;code&gt;false&lt;/code&gt; when there is no more data to return. The stream object that wraps the callable will invoke the callable until the number of requested bytes are available. Any additional bytes will be buffered and used in subsequent reads.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$stream = GuzzleHttp\Psr7\Utils::streamFor(&#39;foo&#39;);&#xA;$stream = GuzzleHttp\Psr7\Utils::streamFor(fopen(&#39;/path/to/file&#39;, &#39;r&#39;));&#xA;&#xA;$generator = function ($bytes) {&#xA;    for ($i = 0; $i &amp;lt; $bytes; $i++) {&#xA;        yield &#39; &#39;;&#xA;    }&#xA;}&#xA;&#xA;$stream = GuzzleHttp\Psr7\Utils::streamFor($generator(100));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Utils::tryFopen&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function tryFopen(string $filename, string $mode): resource&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Safely opens a PHP stream resource using a filename.&lt;/p&gt; &#xA;&lt;p&gt;When fopen fails, PHP normally raises a warning. This function adds an error handler that checks for errors and throws an exception instead.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Utils::tryGetContents&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function tryGetContents(resource $stream): string&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Safely gets the contents of a given stream.&lt;/p&gt; &#xA;&lt;p&gt;When stream_get_contents fails, PHP normally raises a warning. This function adds an error handler that checks for errors and throws an exception instead.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\Utils::uriFor&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function uriFor(string|UriInterface $uri): UriInterface&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Returns a UriInterface for the given value.&lt;/p&gt; &#xA;&lt;p&gt;This function accepts a string or UriInterface and returns a UriInterface for the given value. If the value is already a UriInterface, it is returned as-is.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\MimeType::fromFilename&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function fromFilename(string $filename): string|null&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Determines the mimetype of a file by looking at its extension.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;GuzzleHttp\Psr7\MimeType::fromExtension&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function fromExtension(string $extension): string|null&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Maps a file extensions to a mimetype.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading from Function API&lt;/h2&gt; &#xA;&lt;p&gt;The static API was first introduced in 1.7.0, in order to mitigate problems with functions conflicting between global and local copies of the package. The function API was removed in 2.0.0. A migration table has been provided here for your convenience:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Original Function&lt;/th&gt; &#xA;   &lt;th&gt;Replacement Method&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;str&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Message::toString&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;uri_for&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Utils::uriFor&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;stream_for&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Utils::streamFor&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parse_header&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Header::parse&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;normalize_header&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Header::normalize&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;modify_request&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Utils::modifyRequest&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;rewind_body&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Message::rewindBody&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;try_fopen&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Utils::tryFopen&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;copy_to_string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Utils::copyToString&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;copy_to_stream&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Utils::copyToStream&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Utils::hash&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Utils::readLine&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parse_request&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Message::parseRequest&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parse_response&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Message::parseResponse&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parse_query&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Query::parse&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;build_query&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Query::build&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;mimetype_from_filename&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;MimeType::fromFilename&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;mimetype_from_extension&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;MimeType::fromExtension&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;_parse_message&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Message::parseMessage&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;_parse_request_uri&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Message::parseRequestUri&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;get_message_body_summary&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Message::bodySummary&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;_caseless_remove&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Utils::caselessRemove&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Additional URI Methods&lt;/h1&gt; &#xA;&lt;p&gt;Aside from the standard &lt;code&gt;Psr\Http\Message\UriInterface&lt;/code&gt; implementation in form of the &lt;code&gt;GuzzleHttp\Psr7\Uri&lt;/code&gt; class, this library also provides additional functionality when working with URIs as static methods.&lt;/p&gt; &#xA;&lt;h2&gt;URI Types&lt;/h2&gt; &#xA;&lt;p&gt;An instance of &lt;code&gt;Psr\Http\Message\UriInterface&lt;/code&gt; can either be an absolute URI or a relative reference. An absolute URI has a scheme. A relative reference is used to express a URI relative to another URI, the base URI. Relative references can be divided into several forms according to &lt;a href=&#34;https://tools.ietf.org/html/rfc3986#section-4.2&#34;&gt;RFC 3986 Section 4.2&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;network-path references, e.g. &lt;code&gt;//example.com/path&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;absolute-path references, e.g. &lt;code&gt;/path&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;relative-path references, e.g. &lt;code&gt;subpath&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following methods can be used to identify the type of the URI.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\Uri::isAbsolute&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function isAbsolute(UriInterface $uri): bool&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Whether the URI is absolute, i.e. it has a scheme.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\Uri::isNetworkPathReference&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function isNetworkPathReference(UriInterface $uri): bool&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Whether the URI is a network-path reference. A relative reference that begins with two slash characters is termed an network-path reference.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\Uri::isAbsolutePathReference&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function isAbsolutePathReference(UriInterface $uri): bool&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Whether the URI is a absolute-path reference. A relative reference that begins with a single slash character is termed an absolute-path reference.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\Uri::isRelativePathReference&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function isRelativePathReference(UriInterface $uri): bool&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Whether the URI is a relative-path reference. A relative reference that does not begin with a slash character is termed a relative-path reference.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\Uri::isSameDocumentReference&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function isSameDocumentReference(UriInterface $uri, UriInterface $base = null): bool&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Whether the URI is a same-document reference. A same-document reference refers to a URI that is, aside from its fragment component, identical to the base URI. When no base URI is given, only an empty URI reference (apart from its fragment) is considered a same-document reference.&lt;/p&gt; &#xA;&lt;h2&gt;URI Components&lt;/h2&gt; &#xA;&lt;p&gt;Additional methods to work with URI components.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\Uri::isDefaultPort&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function isDefaultPort(UriInterface $uri): bool&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Whether the URI has the default port of the current scheme. &lt;code&gt;Psr\Http\Message\UriInterface::getPort&lt;/code&gt; may return null or the standard port. This method can be used independently of the implementation.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\Uri::composeComponents&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function composeComponents($scheme, $authority, $path, $query, $fragment): string&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Composes a URI reference string from its various components according to &lt;a href=&#34;https://tools.ietf.org/html/rfc3986#section-5.3&#34;&gt;RFC 3986 Section 5.3&lt;/a&gt;. Usually this method does not need to be called manually but instead is used indirectly via &lt;code&gt;Psr\Http\Message\UriInterface::__toString&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\Uri::fromParts&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function fromParts(array $parts): UriInterface&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Creates a URI from a hash of &lt;a href=&#34;https://www.php.net/manual/en/function.parse-url.php&#34;&gt;&lt;code&gt;parse_url&lt;/code&gt;&lt;/a&gt; components.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\Uri::withQueryValue&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function withQueryValue(UriInterface $uri, $key, $value): UriInterface&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Creates a new URI with a specific query string value. Any existing query string values that exactly match the provided key are removed and replaced with the given key value pair. A value of null will set the query string key without a value, e.g. &#34;key&#34; instead of &#34;key=value&#34;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\Uri::withQueryValues&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function withQueryValues(UriInterface $uri, array $keyValueArray): UriInterface&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Creates a new URI with multiple query string values. It has the same behavior as &lt;code&gt;withQueryValue()&lt;/code&gt; but for an associative array of key =&amp;gt; value.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\Uri::withoutQueryValue&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function withoutQueryValue(UriInterface $uri, $key): UriInterface&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Creates a new URI with a specific query string value removed. Any existing query string values that exactly match the provided key are removed.&lt;/p&gt; &#xA;&lt;h2&gt;Cross-Origin Detection&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\UriComparator&lt;/code&gt; provides methods to determine if a modified URL should be considered cross-origin.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\UriComparator::isCrossOrigin&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function isCrossOrigin(UriInterface $original, UriInterface $modified): bool&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Determines if a modified URL should be considered cross-origin with respect to an original URL.&lt;/p&gt; &#xA;&lt;h2&gt;Reference Resolution&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\UriResolver&lt;/code&gt; provides methods to resolve a URI reference in the context of a base URI according to &lt;a href=&#34;https://tools.ietf.org/html/rfc3986#section-5&#34;&gt;RFC 3986 Section 5&lt;/a&gt;. This is for example also what web browsers do when resolving a link in a website based on the current request URI.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\UriResolver::resolve&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function resolve(UriInterface $base, UriInterface $rel): UriInterface&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Converts the relative URI into a new URI that is resolved against the base URI.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\UriResolver::removeDotSegments&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function removeDotSegments(string $path): string&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Removes dot segments from a path and returns the new path according to &lt;a href=&#34;https://tools.ietf.org/html/rfc3986#section-5.2.4&#34;&gt;RFC 3986 Section 5.2.4&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\UriResolver::relativize&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function relativize(UriInterface $base, UriInterface $target): UriInterface&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Returns the target URI as a relative reference from the base URI. This method is the counterpart to resolve():&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;(string) $target === (string) UriResolver::resolve($base, UriResolver::relativize($base, $target))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;One use-case is to use the current request URI as base URI and then generate relative links in your documents to reduce the document size or offer self-contained downloadable document archives.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$base = new Uri(&#39;http://example.com/a/b/&#39;);&#xA;echo UriResolver::relativize($base, new Uri(&#39;http://example.com/a/b/c&#39;));  // prints &#39;c&#39;.&#xA;echo UriResolver::relativize($base, new Uri(&#39;http://example.com/a/x/y&#39;));  // prints &#39;../x/y&#39;.&#xA;echo UriResolver::relativize($base, new Uri(&#39;http://example.com/a/b/?q&#39;)); // prints &#39;?q&#39;.&#xA;echo UriResolver::relativize($base, new Uri(&#39;http://example.org/a/b/&#39;));   // prints &#39;//example.org/a/b/&#39;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Normalization and Comparison&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GuzzleHttp\Psr7\UriNormalizer&lt;/code&gt; provides methods to normalize and compare URIs according to &lt;a href=&#34;https://tools.ietf.org/html/rfc3986#section-6&#34;&gt;RFC 3986 Section 6&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\UriNormalizer::normalize&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function normalize(UriInterface $uri, $flags = self::PRESERVING_NORMALIZATIONS): UriInterface&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Returns a normalized URI. The scheme and host component are already normalized to lowercase per PSR-7 UriInterface. This methods adds additional normalizations that can be configured with the &lt;code&gt;$flags&lt;/code&gt; parameter which is a bitmask of normalizations to apply. The following normalizations are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;UriNormalizer::PRESERVING_NORMALIZATIONS&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Default normalizations which only include the ones that preserve semantics.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;UriNormalizer::CAPITALIZE_PERCENT_ENCODING&lt;/code&gt;&lt;/p&gt; &lt;p&gt;All letters within a percent-encoding triplet (e.g., &#34;%3A&#34;) are case-insensitive, and should be capitalized.&lt;/p&gt; &lt;p&gt;Example: &lt;code&gt;http://example.org/a%c2%b1b&lt;/code&gt; → &lt;code&gt;http://example.org/a%C2%B1b&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;UriNormalizer::DECODE_UNRESERVED_CHARACTERS&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Decodes percent-encoded octets of unreserved characters. For consistency, percent-encoded octets in the ranges of ALPHA (%41–%5A and %61–%7A), DIGIT (%30–%39), hyphen (%2D), period (%2E), underscore (%5F), or tilde (%7E) should not be created by URI producers and, when found in a URI, should be decoded to their corresponding unreserved characters by URI normalizers.&lt;/p&gt; &lt;p&gt;Example: &lt;code&gt;http://example.org/%7Eusern%61me/&lt;/code&gt; → &lt;code&gt;http://example.org/~username/&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;UriNormalizer::CONVERT_EMPTY_PATH&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Converts the empty path to &#34;/&#34; for http and https URIs.&lt;/p&gt; &lt;p&gt;Example: &lt;code&gt;http://example.org&lt;/code&gt; → &lt;code&gt;http://example.org/&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;UriNormalizer::REMOVE_DEFAULT_HOST&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Removes the default host of the given URI scheme from the URI. Only the &#34;file&#34; scheme defines the default host &#34;localhost&#34;. All of &lt;code&gt;file:/myfile&lt;/code&gt;, &lt;code&gt;file:///myfile&lt;/code&gt;, and &lt;code&gt;file://localhost/myfile&lt;/code&gt; are equivalent according to RFC 3986.&lt;/p&gt; &lt;p&gt;Example: &lt;code&gt;file://localhost/myfile&lt;/code&gt; → &lt;code&gt;file:///myfile&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;UriNormalizer::REMOVE_DEFAULT_PORT&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Removes the default port of the given URI scheme from the URI.&lt;/p&gt; &lt;p&gt;Example: &lt;code&gt;http://example.org:80/&lt;/code&gt; → &lt;code&gt;http://example.org/&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;UriNormalizer::REMOVE_DOT_SEGMENTS&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Removes unnecessary dot-segments. Dot-segments in relative-path references are not removed as it would change the semantics of the URI reference.&lt;/p&gt; &lt;p&gt;Example: &lt;code&gt;http://example.org/../a/b/../c/./d.html&lt;/code&gt; → &lt;code&gt;http://example.org/a/c/d.html&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;UriNormalizer::REMOVE_DUPLICATE_SLASHES&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Paths which include two or more adjacent slashes are converted to one. Webservers usually ignore duplicate slashes and treat those URIs equivalent. But in theory those URIs do not need to be equivalent. So this normalization may change the semantics. Encoded slashes (%2F) are not removed.&lt;/p&gt; &lt;p&gt;Example: &lt;code&gt;http://example.org//foo///bar.html&lt;/code&gt; → &lt;code&gt;http://example.org/foo/bar.html&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;UriNormalizer::SORT_QUERY_PARAMETERS&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Sort query parameters with their values in alphabetical order. However, the order of parameters in a URI may be significant (this is not defined by the standard). So this normalization is not safe and may change the semantics of the URI.&lt;/p&gt; &lt;p&gt;Example: &lt;code&gt;?lang=en&amp;amp;article=fred&lt;/code&gt; → &lt;code&gt;?article=fred&amp;amp;lang=en&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;GuzzleHttp\Psr7\UriNormalizer::isEquivalent&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;public static function isEquivalent(UriInterface $uri1, UriInterface $uri2, $normalizations = self::PRESERVING_NORMALIZATIONS): bool&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Whether two URIs can be considered equivalent. Both URIs are normalized automatically before comparison with the given &lt;code&gt;$normalizations&lt;/code&gt; bitmask. The method also accepts relative URI references and returns true when they are equivalent. This of course assumes they will be resolved against the same base URI. If this is not the case, determination of equivalence or difference of relative references does not mean anything.&lt;/p&gt; &#xA;&lt;h2&gt;Version Guidance&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;PHP Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.x&lt;/td&gt; &#xA;   &lt;td&gt;Security fixes&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;=5.4,&amp;lt;8.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.x&lt;/td&gt; &#xA;   &lt;td&gt;Latest&lt;/td&gt; &#xA;   &lt;td&gt;^7.2.5 || ^8.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you discover a security vulnerability within this package, please send an email to &lt;a href=&#34;mailto:security@tidelift.com&#34;&gt;security@tidelift.com&lt;/a&gt;. All security vulnerabilities will be promptly addressed. Please do not disclose security-related issues publicly until a fix has been announced. Please see &lt;a href=&#34;https://github.com/guzzle/psr7/security/policy&#34;&gt;Security Policy&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Guzzle is made available under the MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/guzzle/psr7/master/LICENSE&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;For Enterprise&lt;/h2&gt; &#xA;&lt;p&gt;Available as part of the Tidelift Subscription&lt;/p&gt; &#xA;&lt;p&gt;The maintainers of Guzzle and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. &lt;a href=&#34;https://tidelift.com/subscription/pkg/packagist-guzzlehttp-psr7?utm_source=packagist-guzzlehttp-psr7&amp;amp;utm_medium=referral&amp;amp;utm_campaign=enterprise&amp;amp;utm_term=repo&#34;&gt;Learn more.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OpenMage/magento-lts</title>
    <updated>2022-09-08T01:40:24Z</updated>
    <id>tag:github.com,2022-09-08:/OpenMage/magento-lts</id>
    <link href="https://github.com/OpenMage/magento-lts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official OpenMage LTS codebase | Migrate easily from Magento Community Edition in minutes! Download the source code for free or contribute to OpenMage LTS | Security vulnerability patches, bug fixes, performance improvements and more.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &lt;a href=&#34;https://raw.githubusercontent.com/OpenMage/magento-lts/1.9.4.x/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-146-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt; &#xA; &lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &lt;a href=&#34;https://packagist.org/packages/openmage/magento-lts&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/openmage/magento-lts/d/total.svg?sanitize=true&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/openmage/magento-lts&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/openmage/magento-lts/license.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;img src=&#34;https://github.com/openmage/magento-lts/actions/workflows/php.yml/badge.svg?sanitize=true&#34; alt=&#34;PHP workflow Badge&#34;&gt; &lt;img src=&#34;https://github.com/openmage/magento-lts/actions/workflows/sonar.yml/badge.svg?sanitize=true&#34; alt=&#34;Sonar workflow badge&#34;&gt; &lt;img src=&#34;https://github.com/openmage/magento-lts/actions/workflows/static-code-analyses.yml/badge.svg?sanitize=true&#34; alt=&#34;Static Code Analyses workflow badge&#34;&gt; &lt;img src=&#34;https://github.com/openmage/magento-lts/actions/workflows/unit-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Unit Tests workflow badge&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Magento - Long Term Support&lt;/h1&gt; &#xA;&lt;p&gt;This repository is the home of an &lt;strong&gt;unofficial&lt;/strong&gt; community-driven project. It&#39;s goal is to be a dependable alternative to the Magento CE official releases which integrates improvements directly from the community while maintaining a high level of backwards compatibility to the official releases.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pull requests with unofficial bug fixes and security patches from the community are encouraged and welcome!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Versioning&lt;/h3&gt; &#xA;&lt;p&gt;Though Magento does &lt;strong&gt;not&lt;/strong&gt; follow &lt;a href=&#34;http://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt; we aim to provide a workable system for dependency definition. Each Magento &lt;code&gt;1.&amp;lt;minor&amp;gt;.&amp;lt;revision&amp;gt;&lt;/code&gt; release will get its own branch (named &lt;code&gt;1.&amp;lt;minor&amp;gt;.&amp;lt;revision&amp;gt;.x&lt;/code&gt;) that will be independently maintained with upstream patches and community bug fixes for as long as it makes sense to do so (based on available resources). For example, Magento version &lt;code&gt;1.9.4.5&lt;/code&gt; was merged into the &lt;code&gt;1.9.4.x&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP 7.3+ (PHP 8.0 is supported)&lt;/li&gt; &#xA; &lt;li&gt;MySQL 5.6+ (8.0+ recommended) or MariaDB&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please be aware that although OpenMage is compatible that one or more extensions may not be&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Optional&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Redis 5+ (6.x recommended, latest verified compatible 6.0.7 with 20.x)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PHP 7.2+&lt;/h3&gt; &#xA;&lt;p&gt;If using php 7.2+ then &lt;code&gt;mcrypt&lt;/code&gt; needs to be disabled in &lt;code&gt;php.ini&lt;/code&gt; or pecl to fallback on &lt;code&gt;mcryptcompat&lt;/code&gt; and &lt;code&gt;phpseclib&lt;/code&gt;. &lt;code&gt;mcrypt&lt;/code&gt; is deprecated from 7.2+ onwards.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Using Composer&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest archive and extract it, clone the repo, or add a composer dependency to your existing project like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require &#34;openmage/magento-lts&#34;:&#34;^19.4.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get the latest changes use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require &#34;openmage/magento-lts&#34;:&#34;dev-main&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;small&gt;Note: &lt;code&gt;dev-main&lt;/code&gt; is just an alias for current &lt;code&gt;1.9.4.x&lt;/code&gt; branch and may change&lt;/small&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using Git&lt;/h3&gt; &#xA;&lt;p&gt;If you want to contribute to the project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init&#xA;git remote add origin https://github.com/&amp;lt;YOUR GIT USERNAME&amp;gt;/magento-lts&#xA;git pull origin main&#xA;git remote add upstream https://github.com/OpenMage/magento-lts&#xA;git pull upstream 1.9.4.x&#xA;git add -A &amp;amp;&amp;amp; git commit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://openmage.github.io/magento-lts/install.html&#34;&gt;More Information&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Secure your installation&lt;/h2&gt; &#xA;&lt;p&gt;Don&#39;t use common paths like /admin for OpenMage Backend URL. Don&#39;t use the path in &lt;em&gt;robots.txt&lt;/em&gt; and keep it secret. You can change it from Backend (System / Configuration / Admin / Admin Base Url) or by editing &lt;em&gt;app/etc/local.xml&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;config&amp;gt;&#xA;    &amp;lt;admin&amp;gt;&#xA;        &amp;lt;routers&amp;gt;&#xA;            &amp;lt;adminhtml&amp;gt;&#xA;                &amp;lt;args&amp;gt;&#xA;                    &amp;lt;frontName&amp;gt;&amp;lt;![CDATA[admin]]&amp;gt;&amp;lt;/frontName&amp;gt;&#xA;                &amp;lt;/args&amp;gt;&#xA;            &amp;lt;/adminhtml&amp;gt;&#xA;        &amp;lt;/routers&amp;gt;&#xA;    &amp;lt;/admin&amp;gt;&#xA;&amp;lt;/config&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t use common file names like api.php for OpenMage API URLs to prevent attacks. Don&#39;t use the new file name in &lt;em&gt;robots.txt&lt;/em&gt; and keep it secret with your partners. After renaming the file you must update the webserver configuration as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache .htaccess: &lt;code&gt;RewriteRule ^api/rest api.php?type=rest [QSA,L]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nginx: &lt;code&gt;rewrite ^/api/(\w+).*$ /api.php?type=$1 last;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changes&lt;/h2&gt; &#xA;&lt;p&gt;Most important changes will be listed here, all other changes since &lt;code&gt;19.4.0&lt;/code&gt; can be found in &lt;a href=&#34;https://github.com/OpenMage/magento-lts/releases&#34;&gt;release&lt;/a&gt; notes.&lt;/p&gt; &#xA;&lt;h3&gt;Between Magento 1.9.4.5 and OpenMage 19.x&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;bug fixes and PHP 7.x, 8.0 and 8.1 compatibility&lt;/li&gt; &#xA; &lt;li&gt;added config cache for system.xml &lt;a href=&#34;https://github.com/OpenMage/magento-lts/pull/1916&#34;&gt;#1916&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;search for &#34;NULL&#34; in backend grids &lt;a href=&#34;https://github.com/OpenMage/magento-lts/pull/1203&#34;&gt;#1203&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;removed modules &lt;code&gt;Mage_Compiler&lt;/code&gt;, &lt;code&gt;Mage_GoogleBase&lt;/code&gt;, &lt;code&gt;Mage_Xmlconnect&lt;/code&gt;, &lt;code&gt;Phoenix_Moneybookers&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Between OpenMage 19.x and 20.x&lt;/h3&gt; &#xA;&lt;p&gt;Do not use 20.x.x if you need IE support.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;removed IE conditional comments, IE styles, IE scripts and IE eot files &lt;a href=&#34;https://github.com/OpenMage/magento-lts/pull/1073&#34;&gt;#1073&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;removed frontend default themes (default, modern, iphone, german, french, blank, blue) &lt;a href=&#34;https://github.com/OpenMage/magento-lts/pull/1600&#34;&gt;#1600&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;fixed incorrect datetime in customer block (&lt;code&gt;$useTimezone&lt;/code&gt; parameter) &lt;a href=&#34;https://github.com/OpenMage/magento-lts/pull/1525&#34;&gt;#1525&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;added redis as a valid option for &lt;code&gt;global/session_save&lt;/code&gt; &lt;a href=&#34;https://github.com/OpenMage/magento-lts/pull/1513&#34;&gt;#1513&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;reduce needless saves by avoiding setting &lt;code&gt;_hasDataChanges&lt;/code&gt; flag &lt;a href=&#34;https://github.com/OpenMage/magento-lts/pull/2066&#34;&gt;#2066&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;removed support for &lt;code&gt;global/sales/old_fields_map&lt;/code&gt; defined in XML &lt;a href=&#34;https://github.com/OpenMage/magento-lts/pull/921&#34;&gt;#921&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;removed module &lt;code&gt;Mage_PageCache&lt;/code&gt; &lt;a href=&#34;https://github.com/OpenMage/magento-lts/pull/2258&#34;&gt;#2258&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;removed lib/flex containing unused ActionScript &#34;file uploader&#34; files &lt;a href=&#34;https://github.com/OpenMage/magento-lts/pull/2271&#34;&gt;#2271&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;enabled website level config cache &lt;a href=&#34;https://github.com/OpenMage/magento-lts/pull/2355&#34;&gt;#2355&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For full list of changes, you can &lt;a href=&#34;https://github.com/OpenMage/magento-lts/compare/1.9.4.x...20.0&#34;&gt;compare tags&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;New Config Options&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;admin/design/use_legacy_theme&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;admin/global_search/enable&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;admin/emails/admin_notification_email_template&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;catalog/product_image/progressive_threshold&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;catalog/search/search_separator&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dev/log/max_level&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;newsletter/security/enable_form_key&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sitemap/category/lastmod&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sitemap/page/lastmod&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sitemap/product/lastmod&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;New Events&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;adminhtml_block_widget_form_init_form_values_after&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;adminhtml_block_widget_tabs_html_before&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;adminhtml_sales_order_create_save_before&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;checkout_cart_product_add_before&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sitemap_cms_pages_generating_before&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sitemap_urlset_generating_before&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenMage/magento-lts/1.9.4.x/docs/EVENTS.md&#34;&gt;Full list of events&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Changes to SOAP/WSDL&lt;/h3&gt; &#xA;&lt;p&gt;Since &lt;code&gt;19.4.17&lt;/code&gt;/&lt;code&gt;20.0.15&lt;/code&gt; we changed the &lt;code&gt;targetNamespace&lt;/code&gt; of all the WSDL files (used in the API modules), from &lt;code&gt;Magento&lt;/code&gt; to &lt;code&gt;OpenMage&lt;/code&gt;. If your custom modules extends OpenMage&#39;s APIs with a custom WSDL file and there are some hardcoded &lt;code&gt;targetNamespace=&#34;urn:Magento&#34;&lt;/code&gt; string, your APIs may stop working. Please replace all occurrences of &lt;code&gt;targetNamespace=&#34;urn:Magento&#34;&lt;/code&gt; with &lt;code&gt;targetNamespace=&#34;urn:OpenMage&#34;&lt;/code&gt; (or alternatively &lt;code&gt;targetNamespace=&#34;urn:{{var wsdl.name}}&#34;&lt;/code&gt;) to avoid any problem. To find which files need the modification you can run &lt;code&gt;grep -rn &#39;urn:Magento&#39; --include \*.xml&lt;/code&gt; from the root directory of your project.&lt;/p&gt; &#xA;&lt;h2&gt;Development Environment with ddev&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://ddev.com/get-started/&#34;&gt;ddev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository as described in installation (&lt;a href=&#34;https://github.com/OpenMage/magento-lts#using-git&#34;&gt;Using Git&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Create a ddev config, defaults should be good for you &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ddev config&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;.ddev/config.yaml&lt;/code&gt; and change the php version to your needs&lt;/li&gt; &#xA; &lt;li&gt;Download and start the containers &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ddev start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open your site in browser &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ddev launch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;PhpStorm Factory Helper&lt;/h2&gt; &#xA;&lt;p&gt;This repo includes class maps for the core Magento files in &lt;code&gt;.phpstorm.meta.php&lt;/code&gt;. To add class maps for installed extensions, you have to install &lt;a href=&#34;https://github.com/netz98/n98-magerun&#34;&gt;N98-magerun&lt;/a&gt; and run command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n98-magerun.phar dev:ide:phpstorm:meta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can add additional meta files in this directory to cover your own project files. See &lt;a href=&#34;https://www.jetbrains.com/help/phpstorm/ide-advanced-metadata.html&#34;&gt;PhpStorm advanced metadata&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Public Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/EV8aNbU&#34;&gt;Discord&lt;/a&gt; (maintained by Flyingmana)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LeeSaferite&#34;&gt;Lee Saferite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/drobinson&#34;&gt;David Robinson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Flyingmana&#34;&gt;Daniel Fahlke aka Flyingmana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tmotyl&#34;&gt;Tymoteusz Motylewski&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sreichel&#34;&gt;Sven Reichel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://opensource.org/licenses/OSL-3.0&#34;&gt;OSL v3.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://opensource.org/licenses/AFL-3.0&#34;&gt;AFL v3.0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://magento.stackexchange.com/users/46249/sv3n&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/5022236?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sv3n&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/LeeSaferite&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/47386?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lee Saferite&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://colin.mollenhour.com/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/38738?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Colin Mollenhour&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/drobinson&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/455332?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Robinson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://macopedia.com/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/515397?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tymoteusz Motylewski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://flyingmana.name/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/237319?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Fahlke&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://overhemden.com/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/652395?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SNH_NL&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/spinsch&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/519865?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marc Romano&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.fabian-blechschmidt.de/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/379680?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fabian Blechschmidt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Sekiphp&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/9967016?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luboš Hubáček&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/edannenberg&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1352794?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Erik Dannenberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://srcode.nl/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1163348?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jeroen Boersma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/in/lfluvisotto&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/535626?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Leandro F. L.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kkrieger85&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/4435523?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin Krieger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kiatng&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/1106470?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ng Kiat Siong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bob2021&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/8102829?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bob2021&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bastienlm&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/13004368?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bastien Lamamy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/DmitryFursNeklo&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/6996108?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmitry Furs&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rjocoleman&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/154176?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Robert Coleman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://milandavidek.cz/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/4263992?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Milan Davídek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://mattdavenport.io/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1127393?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matt Davenport&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kestraly&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/13368757?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;elfling&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/henrykbrzoska&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/4395216?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;henrykb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/empiricompany&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/5071467?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tony&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://netalico.com/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/2094614?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mark Lewis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ericseanturner&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/42879056?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eric Sean Turner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://willcodeforfood.github.io/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1639118?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eric Seastrand&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.ambimax.de/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/14741874?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tobias Schifftner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.simonsprankel.com/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/930199?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Simon Sprankel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://tomlankhorst.nl/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/675432?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tom Lankhorst&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://shirtsofholland.com/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/11224809?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;shirtsofholland&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sebastianwagner&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1701745?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sebastianwagner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://maximehuran.fr/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/11380627?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Maxime Huran&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/pepijnblom&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/6009489?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pepijn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/manuperezgo&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/8482836?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;manuperezgo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.luigifab.fr/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/31816829?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;luigifab&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/loekvangool&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/7300472?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Loek van Gool&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kpitn&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/41059?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kpitn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kalenjordan&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1542197?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kalenjordan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.ioweb.gr/en&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/20220341?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;IOWEB TECHNOLOGIES&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/fplantinet&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/2428023?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Florent&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/dvdsndr&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/13637075?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dvdsndr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/VincentMarmiesse&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1949412?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vincent MARMIESSE&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.proxiblue.com.au/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/4994260?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas van Staden&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://zamoroka.com/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/9164112?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;zamoroka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/wpdevteam&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1577103?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;wpdevteam&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.storefront.be/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/71019?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wouter Samaey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/vovayatsyuk&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/306080?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vova Yatsyuk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://hydrobuilder.com/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1300504?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Trevor Hartman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/trabulium&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1046615?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Somewhere&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.schmengler-se.de/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/367320?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fabian Schmengler /&amp;gt;&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://copex.io/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/584168?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Roman Hutterer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.haiku.co.nz/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/123676?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergei Filippov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/samsteele&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/10742174?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sam Steele&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://goo.gl/WCUymp&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/59101?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ricardo Velhote&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://royduineveld.nl/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1703233?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Roy Duineveld&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/roberto-ebizmarts&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/51710909?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Roberto Sarmiento Pérez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.pierre-martin.fr/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/75968?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pierre Martin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rafdol&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/20263372?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rafał Dołgopoł&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rafaelpatro&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/13813964?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rafael Patro&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://copex.io/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1998210?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andreas Pointner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/paulrodriguez&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/6373764?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Paul Rodriguez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ollb&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/5952064?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ollb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nintenic&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1317618?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nicholas Graham&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mpalasis&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/37408939?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Makis Palasis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://magento.stackexchange.com/users/5209/mbalparda&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/3997682?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Miguel Balparda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.ecomni.nl/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/2143634?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mark van der Sanden&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://binarzone.com/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/200507?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Micky Socaci&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.binaerfabrik.de/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/7369753?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marvin Sengera&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kanevbg&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/11477130?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kostadin A.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/julienloizelet&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/20956510?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Julien Loizelet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://maxcluster.de/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1112507?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jonas Hünig&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jaroschek&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/470290?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stefan Jaroschek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://jacques.sh/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/858611?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jacques Bodin-Hullin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/googlygoo&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/7078871?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wilhelm Ellmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/edwinkortman&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/7047894?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Edwin.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/drago-aca&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/14777419?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;drago-aca&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/dng-dev&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/836079?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Niedergesäß&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/davis2125&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/14129105?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;J Davis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/damien-biasotto&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/430633?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Damien Biasotto&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cundd&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/743122?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Corn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.cieslix.com/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/6729521?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Paweł Cieślik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/borriglione&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/465544?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;André Herrn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/blopa&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/3838114?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pablo Benmaman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/aterjung&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/3084302?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;aterjung&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/altdovydas&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/8860049?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;altdovydas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alissonjr&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/11911917?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alisson Júnior&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alexkirsch&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/9553441?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Kirsch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/SnowCommerceBrand&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/37154233?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Branden&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/PofMagicfingers&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/469501?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pof Magicfingers&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/MichaelThessel&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/2926266?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Thessel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/JonLaliberte&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/5403662?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jonathan Laliberte&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/in/ivanchepurnyi&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/866758?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ivan Chepurnyi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Ig0r-M-magic42&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/22006850?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Igor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/EliasKotlyar&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/9529505?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Elias Kotlyar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Hejty1&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/53661954?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hejty1&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Gaelle&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/112183?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gaelle&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.martinez-frederic.fr/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/13019288?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frédéric MARTINEZ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/FaustTobias&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/48201729?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tobias Faust&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/AndresInSpace&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/14356094?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AndresInSpace&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/boesbo&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/12744378?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Francesco Boes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/dbachmann&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/1921769?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Bachmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/daim2k5&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/656150?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Damian Luszczymak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://fabrizioballiano.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/909743?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fabrizio Balliano&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jouriy&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/68122106?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jouriy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.digital-pianism.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/16592249?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Digital Pianism&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/justinbeaty&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/51970393?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Justin Beaty&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ADDISON74&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/8360474?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ADDISON&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://dinhe.net/~aredridel/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2876?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aria Stewart&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/drwilliams&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11303389?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dean Williams&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/hhirsch&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2451426?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Henry Hirsch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kdckrs&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2227271?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kdckrs&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sicet7&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7220364?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Martin René Sørensen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.b3-it.de/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3726836?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frank Rochlitzer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.alterweb.nl/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/12827587?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AlterWeb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Caprico85&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2081806?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Caprico&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/davidwindell&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1720090?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Windell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/drashmk&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2790702?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dragan Atanasov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/lamskoy&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/233998?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eugene Lamskoy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ferdiusa&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1997982?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ferdinand&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://focused-wescoff-bfb488.netlify.app/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/65963997?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Himanshu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/idziakjakub&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7571848?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jakub Idziak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://swiftotter.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1151186?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joseph Maxwell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.promenade.co/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/53793523?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joshua Dickerson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/KBortnick&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4563592?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin Bortnick&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mehdichaouch&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/861701?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mehdi Chaouch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.elidrissi.dev/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/67818913?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mohamed ELIDRISSI&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://publicus.nl/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/249633?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Justin van Elst&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nikkuexe&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1317618?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nicholas Graham&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://patrickschnell.de/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1762478?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Patrick Schnell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.cronin-tech.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6902411?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Patrick Cronin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/petrsvamberg&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/54709445?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Petr Švamberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://rafaelcg.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/610598?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rafael Corrêa Gomes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.mageconsult.de/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1145186?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ralf Siepker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://sunel.github.io/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1009777?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sunel Tr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ktomk&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/352517?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tom Klingenberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ToonSpin&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1450038?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Toon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.wexo.dk/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7666143?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;WEXO team&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.sandstein.de/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/23700116?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wilfried Wolf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/akrzemianowski&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/44834491?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;akrzemianowski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/andthink&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1862377?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;andthink&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/eetzen&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/67363284?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;eetzen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/lemundo-team&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/61752623?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;lemundo-team&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mdlonline&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5389528?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mdlonline&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.developpeur-web-tlse.fr/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5030086?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Benjamin MARROT&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/tmewes&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/12640514?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tino Mewes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://cebe.cc/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/189796?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Carsten Brandt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/OpenMage/magento-lts/commits?author=cebe&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/eneiasramos&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2862728?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Enéias Ramos de Melo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/discountscott&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5454596?v=4&#34; loading=&#34;lazy&#34; width=&#34;100&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Scott Moore&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
</feed>