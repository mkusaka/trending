<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-27T01:40:59Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WordPress/wordpress-wasm</title>
    <updated>2022-09-27T01:40:59Z</updated>
    <id>tag:github.com,2022-09-27:/WordPress/wordpress-wasm</id>
    <link href="https://github.com/WordPress/wordpress-wasm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run WordPress in the browser thanks to WebAssembly magic&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WordPress in the browser!&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://make.wordpress.org/core/2022/09/23/client-side-webassembly-wordpress-with-no-server/&#34;&gt;the WordPress.org blog post explaining why is this useful and how does it work&lt;/a&gt; for more details. The README doc below is short&amp;amp;sweet for now. Also, &lt;a href=&#34;https://stackblitz.com/edit/wp-plugin-playground&#34;&gt;explore the early preview on StackBlitz&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WordPress/wordpress-wasm/trunk/demo.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Running the demo&lt;/h2&gt; &#xA;&lt;p&gt;This repository ships with a pre-built demo that you can just run!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repo&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;http://127.0.0.1:8777/&#34;&gt;http://127.0.0.1:8777/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you want to build the assembly yourself, follow the instructions below.&lt;/p&gt; &#xA;&lt;p&gt;This repo draws inspiration from &lt;a href=&#34;https://github.com/seanmorris/php-wasm&#34;&gt;https://github.com/seanmorris/php-wasm&lt;/a&gt; and uses &lt;a href=&#34;https://github.com/aaemnnosttv/wp-sqlite-db&#34;&gt;https://github.com/aaemnnosttv/wp-sqlite-db&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building the assembly&lt;/h2&gt; &#xA;&lt;p&gt;The build process is split into automated parts. The scripts below create a docker image with the necessary tools, and build PHP as WebAssembly.&lt;/p&gt; &#xA;&lt;h3&gt;Building WASM PHP for the web&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build:php:web&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building WASM PHP for node.js&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build:php:node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;d like to customize the packaged WordPress installation, study and update the build scripts accordingly.&lt;/p&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;This repo uses four magic ingredients to make WordPress work in the browser:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;A WordPress configured to use SQLite instead of MySQL. This is possible thanks to &lt;a href=&#34;https://github.com/aaemnnosttv/wp-sqlite-db&#34;&gt;https://github.com/aaemnnosttv/wp-sqlite-db&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A PHP 8.0 compiled with SQLite3 support into WebAssembly.&lt;/li&gt; &#xA; &lt;li&gt;A PHP + WordPress WebAssembly bundle created using the emscripten toolkit.&lt;/li&gt; &#xA; &lt;li&gt;A service worker that loads the bundle and dispatches the regular HTTP traffic to the in-memory WordPress instance.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The static files (.js, .css, etc.) are served directly from the host filesystem, not from the WebAssembly bundle.&lt;/p&gt; &#xA;&lt;p&gt;The work is &lt;em&gt;heavily&lt;/em&gt; inspired by &lt;a href=&#34;https://github.com/seanmorris/php-wasm&#34;&gt;https://github.com/seanmorris/php-wasm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;The worker applies a series of strange patches to WordPress, it&#39;s unclear why they&#39;re needed at the moment.&lt;/p&gt; &#xA;&lt;p&gt;The site editor does not work at the moment. The block editor does, though.&lt;/p&gt; &#xA;&lt;p&gt;PHP cannot communicate with WordPress.org so the plugin directory etc does not work.&lt;/p&gt; &#xA;&lt;p&gt;The sqlite database lives in the memory and the changes only live as long as the service worker.&lt;/p&gt; &#xA;&lt;h2&gt;Future work&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fix the workarounds mentioned above&lt;/li&gt; &#xA; &lt;li&gt;Remove the static files from the wasm bundle&lt;/li&gt; &#xA; &lt;li&gt;Remove unnecessary PHP extensions to lower the bundle size&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>smarty-php/smarty</title>
    <updated>2022-09-27T01:40:59Z</updated>
    <id>tag:github.com,2022-09-27:/smarty-php/smarty</id>
    <link href="https://github.com/smarty-php/smarty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Smarty is a template engine for PHP, facilitating the separation of presentation (HTML/CSS) from application logic.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Smarty template engine&lt;/h1&gt; &#xA;&lt;p&gt;Smarty is a template engine for PHP, facilitating the separation of presentation (HTML/CSS) from application logic.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/smarty-php/smarty/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://smarty-php.github.io/smarty/&#34;&gt;documentation&lt;/a&gt; to find out how to use it.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Smarty can be run with PHP 7.1 to PHP 8.1.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Smarty versions 3.1.11 or later can be installed with &lt;a href=&#34;https://getcomposer.org/&#34;&gt;Composer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get the latest stable version of Smarty use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require smarty/smarty&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More in the &lt;a href=&#34;https://raw.githubusercontent.com/smarty-php/smarty/master/docs/getting-started.md&#34;&gt;Getting Started&lt;/a&gt; section of the docs.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>laravel/breeze</title>
    <updated>2022-09-27T01:40:59Z</updated>
    <id>tag:github.com,2022-09-27:/laravel/breeze</id>
    <link href="https://github.com/laravel/breeze" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Minimal Laravel authentication scaffolding with Blade, Vue, or React + Tailwind.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/laravel/breeze/1.x/art/logo.svg?sanitize=true&#34; alt=&#34;Logo Laravel Breeze&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://packagist.org/packages/laravel/breeze&#34;&gt; &lt;img src=&#34;https://img.shields.io/packagist/dt/laravel/breeze&#34; alt=&#34;Total Downloads&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/laravel/breeze&#34;&gt; &lt;img src=&#34;https://img.shields.io/packagist/v/laravel/breeze&#34; alt=&#34;Latest Stable Version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/laravel/breeze&#34;&gt; &lt;img src=&#34;https://img.shields.io/packagist/l/laravel/breeze&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Breeze provides a minimal and simple starting point for building a Laravel application with authentication. Styled with Tailwind, Breeze publishes authentication controllers and views to your application that can be easily customized based on your own application&#39;s needs.&lt;/p&gt; &#xA;&lt;p&gt;Laravel Breeze is powered by Blade and Tailwind. If you&#39;re looking for a more robust Laravel starter kit that includes two factor authentication, Livewire / Inertia support, and more, check out &lt;a href=&#34;https://jetstream.laravel.com&#34;&gt;Laravel Jetstream&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Official Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation for Breeze can be found on the &lt;a href=&#34;https://laravel.com/docs/starter-kits#laravel-breeze&#34;&gt;Laravel website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for considering contributing to Breeze! You can read the contribution guide &lt;a href=&#34;https://raw.githubusercontent.com/laravel/breeze/1.x/.github/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;In order to ensure that the Laravel community is welcoming to all, please review and abide by the &lt;a href=&#34;https://laravel.com/docs/contributions#code-of-conduct&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please review &lt;a href=&#34;https://github.com/laravel/breeze/security/policy&#34;&gt;our security policy&lt;/a&gt; on how to report security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Laravel Breeze is open-sourced software licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/laravel/breeze/1.x/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>