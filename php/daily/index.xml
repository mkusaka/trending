<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-24T01:33:21Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>eusonlito/Password-Manager</title>
    <updated>2024-10-24T01:33:21Z</updated>
    <id>tag:github.com,2024-10-24:/eusonlito/Password-Manager</id>
    <link href="https://github.com/eusonlito/Password-Manager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Self-hosted Password Manager based on Laravel 10 + PHP 8 + MySQL 8. Gestor de Contrase√±as basado en Laravel 10 + PHP 8 + MySQL 8.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eusonlito/Password-Manager/master/readme.es.md&#34;&gt;Castellano&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Password Manager&lt;/h3&gt; &#xA;&lt;p&gt;This application allows complete password management for multiple types of services (web, ssh, phones, wifi, etc ...).&lt;/p&gt; &#xA;&lt;p&gt;The data of each application is stored encrypted in the database.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;The encryption of this data is done using the value of &lt;code&gt;APP_KEY&lt;/code&gt; as salt, so it is very important not to regenerate this key or you will lose access to all registered applications.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Don&#39;t even think about installing this project in an environment without HTTPS protection&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The main features are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User Management.&lt;/li&gt; &#xA; &lt;li&gt;Team management.&lt;/li&gt; &#xA; &lt;li&gt;Access to applications limited by teams.&lt;/li&gt; &#xA; &lt;li&gt;Multiple types of data records.&lt;/li&gt; &#xA; &lt;li&gt;Encryption in database.&lt;/li&gt; &#xA; &lt;li&gt;Authentication by certificate and double factor with Google Authenticator.&lt;/li&gt; &#xA; &lt;li&gt;Using certificate, you can to disable password auth.&lt;/li&gt; &#xA; &lt;li&gt;Logged every time a user accesses, consults or updates an application.&lt;/li&gt; &#xA; &lt;li&gt;Allows private or shared applications.&lt;/li&gt; &#xA; &lt;li&gt;Limited access by country.&lt;/li&gt; &#xA; &lt;li&gt;It has a chrome extension that connects via API and directly accesses the credentials of the web you are visiting.&lt;/li&gt; &#xA; &lt;li&gt;API Password control on every different IP.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project has an extension for Google Chrome that you can download at &lt;a href=&#34;https://github.com/eusonlito/Password-Manager-Chrome&#34;&gt;https://github.com/eusonlito/Password-Manager-Chrome&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache2 (nginx does not support authentication with certificate limited to certain routes)&lt;/li&gt; &#xA; &lt;li&gt;PHP 8.1 or higher (php-curl php-imagick php-mbstring php-mysql php-zip)&lt;/li&gt; &#xA; &lt;li&gt;MySQL 8.0&lt;/li&gt; &#xA; &lt;li&gt;ImageMagick&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the default version of your server is lower than PHP 8.1 you must use the binary prefix to execute &lt;code&gt;composer&lt;/code&gt; and &lt;code&gt;artisan&lt;/code&gt;, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php8.1 ./composer install --no-dev --optimize-autoloader --classmap-authoritative --ansi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php8.1 artisan key:generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Local Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the database in MySQL.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/eusonlito/Password-Manager.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;.env.example&lt;/code&gt; file as &lt;code&gt;.env&lt;/code&gt; and fill in the necessary variables.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Install composer dependencies (remember that we always use the PHP 8.1 binary).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./composer install --no-dev --optimize-autoloader --classmap-authoritative --ansi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Generate the application key. Remember to backup this key in a secure location (&lt;code&gt;.env&lt;/code&gt; &amp;gt; &lt;code&gt;APP_KEY&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan key:generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Regenerate the caches.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./composer artisan-cache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Launch the initial migration.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;Launch the seeder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan db:seed --class=Database\\Seeders\\Database&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;Configure the cron task for the user related to the project:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;* * * * * cd /var/www/password.domain.com &amp;amp;&amp;amp; php artisan schedule:run &amp;gt;&amp;gt; storage/logs/artisan-schedule-run.log 2&amp;gt;&amp;amp;1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;10&#34;&gt; &#xA; &lt;li&gt;Create the main user.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan user:create --email=user@domain.com --name=Admin --password=StrongPassword2 --admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;11&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure the server for web access with &lt;code&gt;DOCUMENT_ROOT&lt;/code&gt; in&lt;code&gt; public&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Profit!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Upgrade&lt;/h4&gt; &#xA;&lt;p&gt;The platform update can be done easily with the &lt;code&gt;composer deploy&lt;/code&gt; command executed by the user who manages that project (usually&lt;code&gt; www-data&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Docker Installation&lt;/h3&gt; &#xA;&lt;p&gt;Currently only for testing (no certificate support).&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/eusonlito/Password-Manager.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;[OPTIONAL] Copy file &lt;code&gt;docker/.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and configure your own settings&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp docker/.env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;[OPTIONAL] Copy file &lt;code&gt;docker/docker-compose.yml.example&lt;/code&gt; to &lt;code&gt;docker/docker-compose.yml&lt;/code&gt; and configure your own settings&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp docker/docker-compose.yml.example docker/docker-compose.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Build docker images (will ask for the sudo password)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./docker/build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Start containers (will ask for the sudo password)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./docker/run.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Create the admin user (will ask for the sudo password)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./docker/user.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Open your web browser and goto &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Remember to add a web server (apache2, nginx, etc...) as a proxy to add features as SSL.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Upgrade&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Update the project source&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git pull&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Build docker images (will ask for the sudo password)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./docker/build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Start containers (will ask for the sudo password)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./docker/run.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Open your web browser and goto &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Certificate Authentication&lt;/h3&gt; &#xA;&lt;p&gt;In order to authenticate with a certificate, we must add the following configuration in Apache&#39;s &lt;code&gt;VirtualHost&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;Location /user/profile/certificate&amp;gt;&#xA;        SSLVerifyClient require&#xA;        SSLVerifyDepth 2&#xA;        SSLOptions +StdEnvVars +ExportCertData +OptRenegotiate&#xA;&amp;lt;/Location&amp;gt;&#xA;&#xA;&amp;lt;Location /user/auth/certificate&amp;gt;&#xA;        SSLVerifyClient require&#xA;        SSLVerifyDepth 2&#xA;        SSLOptions +StdEnvVars +ExportCertData +OptRenegotiate&#xA;&amp;lt;/Location&amp;gt;&#xA;&#xA;SSLCACertificateFile /var/www/password.domain.com/resources/certificates/certificates.pem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;/user/profile/certificate&lt;/code&gt; location allows obtaining the certificate identifier automatically from the user profile itself, and &lt;code&gt;/user/auth/certificate&lt;/code&gt; is the authentication path by certificate.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;OptRenegotiate&lt;/code&gt; option allows Apache to independently renegotiate the connection per path, something that nginx does not support.&lt;/p&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;p&gt;Create User:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan user:create {--email=} {--name=} {--password=} {--admin} {--readonly} {--teams=}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;User update:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan user:update {--id=} {--email=} {--name=} {--password=} {--certificate=} {--tfa_enabled=} {--admin=} {- readonly=} {--enabled=} {--teams=}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Help!&lt;/h3&gt; &#xA;&lt;p&gt;I need help to improve english translations on this project.&lt;/p&gt; &#xA;&lt;p&gt;Default locale files are located in &lt;a href=&#34;https://raw.githubusercontent.com/eusonlito/Password-Manager/master/resources/lang/es&#34;&gt;&lt;code&gt;resources/lang/es&lt;/code&gt;&lt;/a&gt; and should be translated into &lt;a href=&#34;https://raw.githubusercontent.com/eusonlito/Password-Manager/master/resources/lang/en&#34;&gt;&lt;code&gt;resources/lang/en&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also, I need to translate the &lt;a href=&#34;https://raw.githubusercontent.com/eusonlito/Password-Manager/master/readme.en.md&#34;&gt;English Readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thanks!&lt;/p&gt; &#xA;&lt;h3&gt;Screenshots&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/644551/128019854-2d313657-29ec-48e8-bb8e-9802eb05858f.png&#34; alt=&#34;Password-Manager&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/644551/128019842-4ea81ac4-a8c3-405a-92d5-d174b5997b93.png&#34; alt=&#34;Password-Manager&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/644551/128019852-94612c82-03a3-4328-91d7-0c1c918056aa.png&#34; alt=&#34;Password-Manager&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/644551/128019851-1b6f845a-c5cf-4870-b056-d86c1b9d46e2.png&#34; alt=&#34;Password-Manager&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/644551/128019849-c63330dc-0c19-4ea6-90fe-c519c5b91091.png&#34; alt=&#34;Password-Manager&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/644551/128019846-f44500b9-302b-47e6-91df-afe8918c732d.png&#34; alt=&#34;Password-Manager&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/644551/128019845-03d88565-71e1-4cff-85a4-5c41042c72d6.png&#34; alt=&#34;Password-Manager&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/644551/128019834-9ac49dbc-fcab-4129-aeea-8ca0906c99db.png&#34; alt=&#34;Password-Manager&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/644551/128019829-8015cb2e-db1a-4100-8a0d-088e5e17411a.png&#34; alt=&#34;Password-Manager&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/644551/128019826-dc34723b-e446-4541-b14c-36d7b4b81e16.png&#34; alt=&#34;Password-Manager&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/644551/128019838-9bad81b4-1e9b-4591-a8c1-44193130a117.png&#34; alt=&#34;Password-Manager&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/644551/128019844-f74e3b26-57fa-48b9-8849-0410f8e0b99b.png&#34; alt=&#34;Password-Manager&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>