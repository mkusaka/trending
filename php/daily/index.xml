<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-09T01:40:45Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>spatie/laravel-analytics</title>
    <updated>2023-04-09T01:40:45Z</updated>
    <id>tag:github.com,2023-04-09:/spatie/laravel-analytics</id>
    <link href="https://github.com/spatie/laravel-analytics" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Laravel package to retrieve pageviews and other data from Google Analytics&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/spatie/laravel-analytics/main/art/socialcard.png&#34; alt=&#34;Social Card of Laravel Analytics&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Retrieve data from Google Analytics&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/spatie/laravel-analytics/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/spatie/laravel-analytics.svg?style=flat-square&#34; alt=&#34;Latest Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/spatie/laravel-analytics/main/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square&#34; alt=&#34;MIT Licensed&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/spatie/laravel-analytics/workflows/Check%20&amp;amp;%20fix%20styling/badge.svg?sanitize=true&#34; alt=&#34;Check &amp;amp; fix styling&#34;&gt; &lt;a href=&#34;https://packagist.org/packages/spatie/laravel-analytics&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/spatie/laravel-analytics.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Using this package you can easily retrieve data from Google Analytics.&lt;/p&gt; &#xA;&lt;p&gt;Here are a few examples of the provided methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Spatie\Analytics\Facades\Analytics;&#xA;use Spatie\Analytics\Period;&#xA;&#xA;//fetch the most visited pages for today and the past week&#xA;Analytics::fetchMostVisitedPages(Period::days(7));&#xA;&#xA;//fetch visitors and page views for the past week&#xA;Analytics::fetchVisitorsAndPageViews(Period::days(7));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Most methods will return an &lt;code&gt;\Illuminate\Support\Collection&lt;/code&gt; object containing the results.&lt;/p&gt; &#xA;&lt;h2&gt;Support us&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://spatie.be/github-ad-click/laravel-analytics&#34;&gt;&lt;img src=&#34;https://github-ads.s3.eu-central-1.amazonaws.com/laravel-analytics.jpg?t=1&#34; width=&#34;419px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We invest a lot of resources into creating &lt;a href=&#34;https://spatie.be/open-source&#34;&gt;best in class open source packages&lt;/a&gt;. You can support us by &lt;a href=&#34;https://spatie.be/open-source/support-us&#34;&gt;buying one of our paid products&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You&#39;ll find our address on &lt;a href=&#34;https://spatie.be/about-us&#34;&gt;our contact page&lt;/a&gt;. We publish all received postcards on &lt;a href=&#34;https://spatie.be/open-source/postcards&#34;&gt;our virtual postcard wall&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This package can be installed through Composer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require spatie/laravel-analytics&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, you can publish the config file of this package with this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=&#34;analytics-config&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following config file will be published in &lt;code&gt;config/analytics.php&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;return [&#xA;&#xA;    /*&#xA;     * The view id of which you want to display data.&#xA;     */&#xA;    &#39;property_id&#39; =&amp;gt; env(&#39;PROPERTY_ID&#39;),&#xA;&#xA;    /*&#xA;     * Path to the client secret json file. Take a look at the README of this package&#xA;     * to learn how to get this file. You can also pass the credentials as an array&#xA;     * instead of a file path.&#xA;     */&#xA;    &#39;service_account_credentials_json&#39; =&amp;gt; storage_path(&#39;app/analytics/service-account-credentials.json&#39;),&#xA;&#xA;    /*&#xA;     * The amount of minutes the Google API responses will be cached.&#xA;     * If you set this to zero, the responses won&#39;t be cached at all.&#xA;     */&#xA;    &#39;cache_lifetime_in_minutes&#39; =&amp;gt; 60 * 24,&#xA;&#xA;    /*&#xA;     * Here you may configure the &#34;store&#34; that the underlying Google_Client will&#xA;     * use to store it&#39;s data.  You may also add extra parameters that will&#xA;     * be passed on setCacheConfig (see docs for google-api-php-client).&#xA;     *&#xA;     * Optional parameters: &#34;lifetime&#34;, &#34;prefix&#34;&#xA;     */&#xA;    &#39;cache&#39; =&amp;gt; [&#xA;        &#39;store&#39; =&amp;gt; &#39;file&#39;,&#xA;    ],&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to obtain the credentials to communicate with Google Analytics&lt;/h2&gt; &#xA;&lt;h3&gt;Getting credentials&lt;/h3&gt; &#xA;&lt;p&gt;The first thing you’ll need to do is to get some credentials to use Google API’s. I’m assuming that you’ve already created a Google account and are signed in. Head over to &lt;a href=&#34;https://console.developers.google.com/apis&#34;&gt;Google API’s site&lt;/a&gt; and select or create a project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://spatie.github.io/laravel-analytics/v5/1.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next up we must specify which API’s the project may consume. Go to the API Library and search for &#34;Google Analytics Data API&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://spatie.github.io/laravel-analytics/v5/2.png&#34; alt=&#34;2&#34;&gt; &lt;img src=&#34;https://spatie.github.io/laravel-analytics/v5/3.png&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Choose enable to enable the API. &lt;img src=&#34;https://spatie.github.io/laravel-analytics/v5/4.png&#34; alt=&#34;4&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now that you’ve created a project that has access to the Analytics API it’s time to download a file with these credentials. Click &#34;Credentials&#34; in the sidebar. You’ll want to create a &#34;Service account key&#34;. &lt;img src=&#34;https://spatie.github.io/laravel-analytics/v5/5.png&#34; alt=&#34;5&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;On the next screen you can give the service account a name. You can name it anything you’d like. In the service account id you’ll see an email address. We’ll use this email address later on in this guide.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://spatie.github.io/laravel-analytics/v5/6.png&#34; alt=&#34;6&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Go to the details screen of your created service account and select &#34;keys&#34;, from the &#34;Add key&#34; dropdown select &#34;Create new key&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://spatie.github.io/laravel-analytics/v5/7.png&#34; alt=&#34;7&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Select &#34;JSON&#34; as the key type and click &#34;Create&#34; to download the JSON file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://spatie.github.io/laravel-analytics/v5/8.png&#34; alt=&#34;8&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Save the json inside your Laravel project at the location specified in the &lt;code&gt;service_account_credentials_json&lt;/code&gt; key of the config file of this package. Because the json file contains potentially sensitive information I don&#39;t recommend committing it to your git repository.&lt;/p&gt; &#xA;&lt;h3&gt;Granting permissions to your Analytics property&lt;/h3&gt; &#xA;&lt;p&gt;I&#39;m assuming that you&#39;ve already created a Analytics account on the &lt;a href=&#34;https://analytics.google.com/analytics&#34;&gt;Analytics site&lt;/a&gt; and are using the new GA4 properties.&lt;/p&gt; &#xA;&lt;p&gt;First you will need to know your property ID. In Analytics, go to Settings &amp;gt; Property Settings. Here you will be able to copy your property ID. Use this value for the &lt;code&gt;ANALYTICS_PROPERTY_ID&lt;/code&gt; key in your .env file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://spatie.github.io/laravel-analytics/v5/a1.png&#34; alt=&#34;a1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now we will need to give access to the service account you created. Go to &#34;Property Access Management&#34; in the Admin-section of the property. Click the plus sign in the top right corner to add a new user.&lt;/p&gt; &#xA;&lt;p&gt;On this screen you can grant access to the email address found in the &lt;code&gt;client_email&lt;/code&gt; key from the json file you download in the previous step. Analyst role is enough.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://spatie.github.io/laravel-analytics/v5/a2.png&#34; alt=&#34;a2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;When the installation is done you can easily retrieve Analytics data. Nearly all methods will return an &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt;-instance.&lt;/p&gt; &#xA;&lt;p&gt;Here are a few examples using periods&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Spatie\Analytics\Facades\Analytics;&#xA;&#xA;//retrieve visitors and page view data for the current day and the last seven days&#xA;$analyticsData = Analytics::fetchVisitorsAndPageViews(Period::days(7));&#xA;&#xA;//retrieve visitors and page views since the 6 months ago&#xA;$analyticsData = Analytics::fetchVisitorsAndPageViews(Period::months(6));&#xA;&#xA;//retrieve sessions and page views with yearMonth dimension since 1 year ago&#xA;$analyticsData = Analytics::performQuery(&#xA;    Period::years(1),&#xA;    &#39;ga:sessions&#39;,&#xA;    [&#xA;        &#39;metrics&#39; =&amp;gt; &#39;ga:sessions, ga:pageviews&#39;,&#xA;        &#39;dimensions&#39; =&amp;gt; &#39;ga:yearMonth&#39;&#xA;    ]&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;$analyticsData&lt;/code&gt; is a &lt;code&gt;Collection&lt;/code&gt; in which each item is an array that holds keys &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;visitors&lt;/code&gt; and &lt;code&gt;pageViews&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to have more control over the period you want to fetch data for, you can pass a &lt;code&gt;startDate&lt;/code&gt; and an &lt;code&gt;endDate&lt;/code&gt; to the period object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$startDate = Carbon::now()-&amp;gt;subYear();&#xA;$endDate = Carbon::now();&#xA;&#xA;Period::create($startDate, $endDate);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Provided methods&lt;/h2&gt; &#xA;&lt;h3&gt;Visitors and page views&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function fetchVisitorsAndPageViews(Period $period): Collection&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The function returns a &lt;code&gt;Collection&lt;/code&gt; in which each item is an array that holds keys &lt;code&gt;activeUsers&lt;/code&gt;, &lt;code&gt;screenPageViews&lt;/code&gt; and &lt;code&gt;pageTitle&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Visitors and page views by date&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function fetchVisitorsAndPageViewsByDate(Period $period): Collection&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The function returns a &lt;code&gt;Collection&lt;/code&gt; in which each item is an array that holds keys &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;activeUsers&lt;/code&gt;, &lt;code&gt;screenPageViews&lt;/code&gt; and &lt;code&gt;pageTitle&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Total visitors and pageviews&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function fetchTotalVisitorsAndPageViews(Period $period): Collection&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The function returns a &lt;code&gt;Collection&lt;/code&gt; in which each item is an array that holds keys &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;visitors&lt;/code&gt;, and &lt;code&gt;pageViews&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Most visited pages&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function fetchMostVisitedPages(Period $period, int $maxResults = 20): Collection&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The function returns a &lt;code&gt;Collection&lt;/code&gt; in which each item is an array that holds keys &lt;code&gt;fullPageUrl&lt;/code&gt;, &lt;code&gt;pageTitle&lt;/code&gt; and &lt;code&gt;screenPageViews&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Top referrers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function fetchTopReferrers(Period $period, int $maxResults = 20): Collection&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The function returns a &lt;code&gt;Collection&lt;/code&gt; in which each item is an array that holds keys &lt;code&gt;screenPageViews&lt;/code&gt; and &lt;code&gt;pageReferrer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;User Types&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function fetchUserTypes(Period $period): Collection&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The function returns a &lt;code&gt;Collection&lt;/code&gt; in which each item is an array that holds keys &lt;code&gt;activeUsers&lt;/code&gt; and &lt;code&gt;newVsReturning&lt;/code&gt; which can equal to &lt;code&gt;new&lt;/code&gt; or &lt;code&gt;returning&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Top browsers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function fetchTopBrowsers(Period $period, int $maxResults = 10): Collection&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The function returns a &lt;code&gt;Collection&lt;/code&gt; in which each item is an array that holds keys &lt;code&gt;screenPageViews&lt;/code&gt; and &lt;code&gt;browser&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;All other Google Analytics queries&lt;/h3&gt; &#xA;&lt;p&gt;For all other queries you can use the &lt;code&gt;get&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function get(Period $period, array $metrics, array $dimensions = [], int $limit = 10, array $orderBy = []): Collection&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s some extra info on the arguments you can pass:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Period $period&lt;/code&gt;: a Spatie\Analytics\Period object to indicate that start and end date for your query.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;array $metrics&lt;/code&gt;: an array of metrics to retrieve. You can find a list of all metrics &lt;a href=&#34;https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#metrics&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;array $dimensions&lt;/code&gt;: an array of dimensions to group the results by. You can find a list of all dimensions &lt;a href=&#34;https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#dimensions&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;int $limit&lt;/code&gt;: the maximum number of results to return.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;array $orderBy&lt;/code&gt;: of OrderBy objects to sort the results by.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$orderBy = [&#xA;    OrderBy::dimension(&#39;date&#39;, true),&#xA;    OrderBy::metric(&#39;pageViews&#39;, false),&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Run the tests with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vendor/bin/pest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/laravel-analytics/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/spatie/.github/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;ve found a bug regarding security please mail &lt;a href=&#34;mailto:security@spatie.be&#34;&gt;security@spatie.be&lt;/a&gt; instead of using the issue tracker.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/freekmurze&#34;&gt;Freek Van der Herten&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spatie/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And a special thanks to &lt;a href=&#34;https://twitter.com/caneco&#34;&gt;Caneco&lt;/a&gt; for the logo ✨&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/laravel-analytics/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>