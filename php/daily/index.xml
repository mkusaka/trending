<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-28T01:32:34Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dcblogdev/laravel-db-sync</title>
    <updated>2022-06-28T01:32:34Z</updated>
    <id>tag:github.com,2022-06-28:/dcblogdev/laravel-db-sync</id>
    <link href="https://github.com/dcblogdev/laravel-db-sync" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sync a remote DB to a local DB&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Laravel DB Sync&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repository-images.githubusercontent.com/506690782/a5b01352-4869-4e6d-8e46-d44e93c960df&#34; alt=&#34;DB Dync&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Sync remote database to a local database&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A word of warning you should only sync a remote database into a local database if you have permission to do so within your organisation&#39;s policies. I&#39;m syncing during early phases of development where the data is largely test data and not actual customer data.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Connection can be made over SSH or using a remote MySQL connection.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Install the package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require dcblogdev/laravel-db-sync&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Config&lt;/h2&gt; &#xA;&lt;p&gt;You can publish the config file with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php artisan vendor:publish --provider=&#34;Dcblogdev\DbSync\DbSyncServiceProvider&#34; --tag=&#34;config&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;.env&lt;/h2&gt; &#xA;&lt;p&gt;Set the remote database credentials in your .env file&lt;/p&gt; &#xA;&lt;p&gt;When using SSH Add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;REMOTE_USE_SSH=true&#xA;REMOTE_SSH_PORT=22&#xA;REMOTE_SSH_USERNAME=&#xA;REMOTE_DATABASE_HOST=&#xA;&#xA;REMOTE_DATABASE_USERNAME=&#xA;REMOTE_DATABASE_NAME=&#xA;REMOTE_DATABASE_PASSWORD=&#xA;REMOTE_DATABASE_IGNORE_TABLES=&#39;&#39;&#xA;&#xA;REMOTE_REMOVE_FILE_AFTER_IMPORT=true&#xA;REMOTE_IMPORT_FILE=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For only MySQL remote connections:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;REMOTE_DATABASE_HOST=&#xA;REMOTE_DATABASE_USERNAME=&#xA;REMOTE_DATABASE_NAME=&#xA;REMOTE_DATABASE_PASSWORD=&#xA;REMOTE_DATABASE_IGNORE_TABLES=&#39;&#39;&#xA;&#xA;REMOTE_REMOVE_FILE_AFTER_IMPORT=true&#xA;REMOTE_IMPORT_FILE=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set a comma seperate list of tables NOT to export in &lt;code&gt;REMOTE_DATABASE_IGNORE_TABLES&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To export a remote database to OVERRIDE your local database by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan db:production-sync&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>zhuifengshaonianhanlu/pikachu</title>
    <updated>2022-06-28T01:32:34Z</updated>
    <id>tag:github.com,2022-06-28:/zhuifengshaonianhanlu/pikachu</id>
    <link href="https://github.com/zhuifengshaonianhanlu/pikachu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个好玩的Web安全-漏洞测试平台&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/web%E5%AE%89%E5%85%A8-%E9%9D%B6%E5%9C%BA-PTEST&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/version-1.0-success&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/zhuifengshaonianhanlu/pikachu.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/zhuifengshaonianhanlu/pikachu.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/zhuifengshaonianhanlu/pikachu.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;“如果你想搞懂一个漏洞，比较好的方法是：你可以自己先制造出这个漏洞（用代码编写），然后再利用它，最后再修复它”。&lt;/p&gt; &#xA;&lt;br&gt; # pikachu &#xA;&lt;p&gt;Pikachu是一个带有漏洞的Web应用系统，在这里包含了常见的web安全漏洞。 如果你是一个Web渗透测试学习人员且正发愁没有合适的靶场进行练习，那么Pikachu可能正合你意。&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Pikachu上的漏洞类型列表如下：&lt;br&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Burt Force(暴力破解漏洞)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;XSS(跨站脚本漏洞)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;CSRF(跨站请求伪造)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;SQL-Inject(SQL注入漏洞)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;RCE(远程命令/代码执行)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Files Inclusion(文件包含漏洞)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unsafe file downloads(不安全的文件下载)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unsafe file uploads(不安全的文件上传)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Over Permisson(越权漏洞)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;../../../(目录遍历)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;I can see your ABC(敏感信息泄露)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;PHP反序列化漏洞&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;XXE(XML External Entity attack)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;不安全的URL重定向&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;SSRF(Server-Side Request Forgery)&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;管理工具&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;More...(找找看?..有彩蛋!)&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;管理工具里面提供了一个简易的xss管理后台,供你测试钓鱼和捞cookie,还可以搞键盘记录！~&lt;br&gt; 后续会持续更新一些新的漏洞进来,也欢迎你提交漏洞案例给我,最新版本请关注pikachu&lt;br&gt; 每类漏洞根据不同的情况又分别设计了不同的子类&lt;br&gt; 同时,为了让这些漏洞变的有意思一些,在Pikachu平台上为每个漏洞都设计了一些小的场景,点击漏洞页面右上角的&#34;提示&#34;可以查看到帮助信息。&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;如何安装和使用&lt;/h2&gt; &#xA;&lt;p&gt;Pikachu使用世界上最好的语言PHP进行开发-_-&lt;br&gt; 数据库使用的是mysql，因此运行Pikachu你需要提前安装好&#34;PHP+MYSQL+中间件（如apache,nginx等）&#34;的基础环境，建议在你的测试环境直接使用 一些集成软件来搭建这些基础环境,比如XAMPP,WAMP等,作为一个搞安全的人,这些东西对你来说应该不是什么难事。接下来:&lt;br&gt; --&amp;gt;把下载下来的pikachu文件夹放到web服务器根目录下;&lt;br&gt; --&amp;gt;根据实际情况修改inc/config.inc.php里面的数据库连接配置;&lt;br&gt; --&amp;gt;访问h ttp://x.x.x.x/pikachu,会有一个红色的热情提示&#34;欢迎使用,pikachu还没有初始化，点击进行初始化安装!&#34;,点击即可完成安装。&lt;br&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果阁下对Pikachu使用上有什么疑问，可以在QQ群：532078894（已满），973351978（未满） 咨询，虽然咨询了，也不一定有人回答-_-。&lt;/p&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;如果你熟悉docker,也可以直接用docker部署&#xA;docker build -t &#34;pikachu&#34; .&#xA;docker run -d -p8080:80 pikachu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;切记&lt;/h2&gt; &#xA;&lt;p&gt;&#34;少就是多,慢就是快&#34;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pentestmonkey/php-reverse-shell</title>
    <updated>2022-06-28T01:32:34Z</updated>
    <id>tag:github.com,2022-06-28:/pentestmonkey/php-reverse-shell</id>
    <link href="https://github.com/pentestmonkey/php-reverse-shell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;php-reverse-shell&lt;/h1&gt;</summary>
  </entry>
</feed>