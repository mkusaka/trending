<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-21T01:36:18Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>notrab/dumbo</title>
    <updated>2024-11-21T01:36:18Z</updated>
    <id>tag:github.com,2024-11-21:/notrab/dumbo</id>
    <link href="https://github.com/notrab/dumbo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A lightweight, friendly PHP framework for HTTP.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/notrab/dumbo/main/dumbo.jpeg&#34; alt=&#34;Dumbo&#34; width=&#34;600&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Dumbo&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A lightweight, friendly PHP framework for HTTP ‚Äî Inspired by Hono. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/nAq2h9BfsU&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;img src=&#34;https://img.shields.io/discord/1278637768918171709?color=8A2BE2&#34; alt=&#34;Discord&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &#xA; &lt;picture&gt; &#xA;  &lt;img src=&#34;https://img.shields.io/github/contributors/notrab/dumbo?color=8A2BE2&#34; alt=&#34;Contributors&#34;&gt; &#xA; &lt;/picture&gt; &lt;a href=&#34;https://packagist.org/packages/notrab/dumbo&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;img src=&#34;https://img.shields.io/packagist/dt/notrab/dumbo?color=8A2BE2&#34; alt=&#34;Total downloads&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/notrab/dumbo/main/examples&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/browse-examples-8A2BE2&#34; alt=&#34;Examples&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üöÄ Lightweight and fast&lt;/li&gt; &#xA; &lt;li&gt;üß© Middleware support&lt;/li&gt; &#xA; &lt;li&gt;üõ£Ô∏è Flexible routing with parameters&lt;/li&gt; &#xA; &lt;li&gt;üîí Built-in security features (CSRF, JWT)&lt;/li&gt; &#xA; &lt;li&gt;üç™ Cookie management&lt;/li&gt; &#xA; &lt;li&gt;üìÖ Date helpers&lt;/li&gt; &#xA; &lt;li&gt;üîç Request ID for tracing&lt;/li&gt; &#xA; &lt;li&gt;üìÅ Static file serving&lt;/li&gt; &#xA; &lt;li&gt;üîê Basic and Bearer authentication&lt;/li&gt; &#xA; &lt;li&gt;üìù Logging support&lt;/li&gt; &#xA; &lt;li&gt;üóÉÔ∏è HTTP caching&lt;/li&gt; &#xA; &lt;li&gt;üîÑ CORS support&lt;/li&gt; &#xA; &lt;li&gt;üß¨ Environment-based configuration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require notrab/dumbo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a basic example of how it works!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;require __DIR__ . &#39;/vendor/autoload.php&#39;;&#xA;&#xA;use Dumbo\Dumbo;&#xA;&#xA;$app = new Dumbo();&#xA;&#xA;$app-&amp;gt;use(function ($context, $next) {&#xA;    $context-&amp;gt;set(&#39;message&#39;, &#39;Hello from middleware!&#39;);&#xA;    return $next($context);&#xA;});&#xA;&#xA;$app-&amp;gt;get(&#39;/&#39;, function ($context) {&#xA;    return $context-&amp;gt;json([&#xA;        &#39;message&#39; =&amp;gt; $context-&amp;gt;get(&#39;message&#39;),&#xA;        &#39;timestamp&#39; =&amp;gt; time()&#xA;    ]);&#xA;});&#xA;&#xA;$app-&amp;gt;get(&#39;/users/:id&#39;, function ($context) {&#xA;    $id = $context-&amp;gt;req-&amp;gt;param(&#39;id&#39;);&#xA;    return $context-&amp;gt;json([&#39;userId&#39; =&amp;gt; $id]);&#xA;});&#xA;&#xA;$app-&amp;gt;post(&#39;/users&#39;, function ($context) {&#xA;    $body = $context-&amp;gt;req-&amp;gt;body();&#xA;    return $context-&amp;gt;json($body, 201);&#xA;});&#xA;&#xA;$app-&amp;gt;run();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/notrab/dumbo/main/examples&#34;&gt;examples&lt;/a&gt; directory for more quickstarts.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Dumbo is open-sourced software licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/notrab/dumbo/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://contrib.nn.ci/api?repo=notrab/dumbo&#34; alt=&#34;Contributors&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Routing&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;$app-&amp;gt;get(&#39;/users&#39;, function($context) { /* ... */ });&#xA;$app-&amp;gt;post(&#39;/users&#39;, function($context) { /* ... */ });&#xA;$app-&amp;gt;put(&#39;/users/:id&#39;, function($context) { /* ... */ });&#xA;$app-&amp;gt;delete(&#39;/users/:id&#39;, function($context) { /* ... */ });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Params&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;$app-&amp;gt;get(&#39;/users/:id&#39;, function($context) {&#xA;    $id = $context-&amp;gt;req-&amp;gt;param(&#39;id&#39;);&#xA;&#xA;    return $context-&amp;gt;json([&#39;id&#39; =&amp;gt; $id]);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Nested&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;$nestedApp = new Dumbo();&#xA;&#xA;$nestedApp-&amp;gt;get(&#39;/nested&#39;, function($context) {&#xA;    return $context-&amp;gt;text(&#39;This is a nested route&#39;);&#xA;});&#xA;&#xA;$app-&amp;gt;route(&#39;/prefix&#39;, $nestedApp);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Context&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;$app-&amp;gt;get(&#39;/&#39;, function($context) {&#xA;    $pathname = $context-&amp;gt;req-&amp;gt;pathname();&#xA;    $routePath = $context-&amp;gt;req-&amp;gt;routePath();&#xA;    $queryParam = $context-&amp;gt;req-&amp;gt;query(&#39;param&#39;);&#xA;    $tags = $context-&amp;gt;req-&amp;gt;queries(&#39;tags&#39;);&#xA;    $body = $context-&amp;gt;req-&amp;gt;body();&#xA;    $userAgent = $context-&amp;gt;req-&amp;gt;header(&#39;User-Agent&#39;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Response&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;return $context-&amp;gt;json([&#39;key&#39; =&amp;gt; &#39;value&#39;]);&#xA;return $context-&amp;gt;text(&#39;Hello, World!&#39;);&#xA;return $context-&amp;gt;html(&#39;&amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;&#39;);&#xA;return $context-&amp;gt;redirect(&#39;/new-url&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Middleware&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;$app-&amp;gt;use(function($context, $next) {&#xA;    $response = $next($context);&#xA;&#xA;    return $response;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom context&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;$app = new Dumbo();&#xA;&#xA;// Set configuration values&#xA;$app-&amp;gt;set(&#39;DB_URL&#39;, &#39;mysql://user:pass@localhost/mydb&#39;);&#xA;$app-&amp;gt;set(&#39;API_KEY&#39;, &#39;your-secret-key&#39;);&#xA;$app-&amp;gt;set(&#39;DEBUG&#39;, true);&#xA;&#xA;// Get configuration values&#xA;$dbUrl = $app-&amp;gt;get(&#39;DB_URL&#39;);&#xA;$apiKey = $app-&amp;gt;get(&#39;API_KEY&#39;);&#xA;$debug = $app-&amp;gt;get(&#39;DEBUG&#39;);&#xA;&#xA;// Use configuration in your routes&#xA;$app-&amp;gt;get(&#39;/api/data&#39;, function(Context $context) {&#xA;    $apiKey = $context-&amp;gt;get(&#39;API_KEY&#39;);&#xA;&#xA;    // Use $apiKey in your logic...&#xA;    return $context-&amp;gt;json([&#39;message&#39; =&amp;gt; &#39;API key is set&#39;]);&#xA;});&#xA;&#xA;$app-&amp;gt;run();&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>