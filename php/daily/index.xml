<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-31T01:37:01Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>easychen/one-person-businesses-methodology-v2.0</title>
    <updated>2024-03-31T01:37:01Z</updated>
    <id>tag:github.com,2024-03-31:/easychen/one-person-businesses-methodology-v2.0</id>
    <link href="https://github.com/easychen/one-person-businesses-methodology-v2.0" rel="alternate"></link>
    <summary type="html">&lt;p&gt;《一人企业方法论》第二版，也适合做其他副业（比如自媒体、电商、数字商品）的非技术人群。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;《一人企业方法论》第二版&lt;/h1&gt; &#xA;&lt;h2&gt;对第一版的改进&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;从长文到一本近6万字的小书，从有感而发的分享到两年迭代而得的&lt;strong&gt;完整方法论&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;不再局限在独立开发，发展为&lt;strong&gt;更为通用的方法论&lt;/strong&gt;，非技术读者也可创作数字商品或基于NoCode/开源项目+AI辅助构建在线服务&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/easychen/one-person-businesses-methodology-v2.0/master/src/images/opb-book-cover.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;作者信息&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;作者 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ftqq.com&#34;&gt;Easy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Email: &lt;a href=&#34;mailto:easychen@gmail.com&#34;&gt;easychen@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;微博：&lt;a href=&#34;https://weibo.com/easy&#34;&gt;https://weibo.com/easy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;X：&lt;a href=&#34;https://twitter.com/easychen&#34;&gt;https://twitter.com/easychen&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;授权说明&lt;/h2&gt; &#xA;&lt;p&gt;本书采用&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh-hans&#34;&gt;CC-BY-NC-SA协议&lt;/a&gt;发布。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;您可以复制、发行、展览、表演、放映、广播或通过信息网络传播本作品，但必须署名作者并添加链接到&lt;a href=&#34;https://github.com/easychen/one-person-businesses-methodology-v2.0&#34;&gt;本书GitHub仓库&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;不得为商业目的而使用本作品。&lt;/li&gt; &#xA; &lt;li&gt;仅在遵守与本作品相同的许可条款下，您才能散布由本作品产生的派生作品。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;电子书&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可使用 mdbook-epub 工具自行编译&lt;/li&gt; &#xA; &lt;li&gt;扫码订阅《方法论》更新频道后下载: &lt;a href=&#34;https://subdeer.cn/channel/landing/11&#34;&gt;进入&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;在线阅读&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;定义一人企业&lt;/strong&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/opb-methodology-new-version-and-author?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;新版方法论概述&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/define-opb?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;一人企业的定义&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;规划一人企业&lt;/strong&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/why-thinking-big-is-possible?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;底层逻辑:为什么以小博大是可能的&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/why-scalability-is-possible?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;底层逻辑:为什么规模化是可能的&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/assets-and-passive-income?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;底层逻辑:资产和被动收入&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/snowballing-and-chain-propagation?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;底层逻辑:滚雪球和链式传播&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/race-track-selection-for-opb?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;赛道选择:一人企业如何选择赛道&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/non-competition-strategy?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;竞争策略:不竞争策略&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/structured-advantage?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;竞争策略:结构化优势&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/opb-canvas-and-opb-report?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;思考工具:《一人企业画布》和《一人企业月报》&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;构建一人业务&lt;/strong&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/one-person-enterprise-does-not-equal-one-person-business?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;一人企业≠一人业务&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/discovery-of-by-product-advantages?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;优势发现:副产品优势&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/start-from-side-project?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;风险评控:从副业开始&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ft07.com/managing-and-utilizing-uncertainty?mtm_campaign=github&amp;amp;mtm_kwd=opbmv2&#34;&gt;风险评控:管理和利用不确定性&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>binary-cats/laravel-rbac</title>
    <updated>2024-03-31T01:37:01Z</updated>
    <id>tag:github.com,2024-03-31:/binary-cats/laravel-rbac</id>
    <link href="https://github.com/binary-cats/laravel-rbac" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RBAC extension to spatie/laravel-permissions&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://banners.beyondco.de/Laravel%20RBAC.png?theme=light&amp;amp;packageManager=composer+require&amp;amp;packageName=binary-cats%2Flaravel-rbac&amp;amp;pattern=architect&amp;amp;style=style_1&amp;amp;description=Manage+your+spatie%2Flaravel-permission+lists+with+well-defined+roles&amp;amp;md=1&amp;amp;showWatermark=1&amp;amp;fontSize=100px&amp;amp;images=lock-closed&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Laravel RBAC&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/binary-cats/laravel-rbac&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/binary-cats/laravel-rbac.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/binary-cats/laravel-rbac/actions/workflows/run-tests.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/binary-cats/laravel-rbac/run-tests.yml?branch=main&amp;amp;label=tests&amp;amp;style=flat-square&#34; alt=&#34;run-tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/binary-cats/laravel-rbac/actions?query=workflow%3A%22Fix+PHP+code+style+issues%22+branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.styleci.io/repos/773171043/shield?branch=main&#34; alt=&#34;GitHub Code Style Action Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enhance Laravel 11 with opinionated extension for &lt;a href=&#34;https://spatie.be/docs/laravel-permission/v6/introduction&#34;&gt;spatie/laravel-permissions&lt;/a&gt;. Before your permission list grows and maintenance becomes an issue, this package offers simple way of defining roles and their permissions.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require binary-cats/laravel-rbac&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can publish the config file with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=&#34;rbac-config&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is the contents of the published config file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;return [&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Role base access reset control&#xA;    |--------------------------------------------------------------------------&#xA;    |&#xA;    | When running rbac:reset those commands will be executed in sequence&#xA;    |&#xA;    */&#xA;&#xA;    &#39;jobs&#39; =&amp;gt; [&#xA;        \BinaryCats\LaravelRbac\Jobs\FlushPermissionCache::class,&#xA;        \BinaryCats\LaravelRbac\Jobs\ResetPermissions::class,&#xA;        \BinaryCats\LaravelRbac\Jobs\SyncDefinedRoles::class,&#xA;    ],&#xA;&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Role base access ability set&#xA;    |--------------------------------------------------------------------------&#xA;    |&#xA;    | Place your ability files in this folder, and they will be auto discovered&#xA;    |&#xA;    */&#xA;    &#39;path&#39; =&amp;gt; app()-&amp;gt;path(&#39;Abilities&#39;),&#xA;&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Defined Roles&#xA;    |--------------------------------------------------------------------------&#xA;    |&#xA;    | Defined roles are immutable by users&#xA;    |&#xA;    */&#xA;&#xA;    &#39;roles&#39; =&amp;gt; [&#xA;&#xA;    ],&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan rbac:reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In a simple setup we usually have two basic parts of an RBAC: a permission and a role. Permissions are usually grouped by functional or business logic domain and a Role encapsulates them for a specific guard.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/binary-cats/laravel-rbac/main/#abilities&#34;&gt;Create Abilities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/binary-cats/laravel-rbac/main/#defined-roles&#34;&gt;Define Roles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/binary-cats/laravel-rbac/main/#connect-the-dots&#34;&gt;Connect the dots&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Abilities&lt;/h3&gt; &#xA;&lt;p&gt;To avoid collision with &lt;code&gt;spatie/laravel-permission&lt;/code&gt; we are going to use &lt;code&gt;BackedEnum&lt;/code&gt; Ability enums to hold out enumerated permissions: You can read more on using &lt;code&gt;enums&lt;/code&gt; as permissions at the &lt;a href=&#34;https://spatie.be/docs/laravel-permission/v6/basic-usage/enums&#34;&gt;official docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To create an Ability:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan make:ability PostAbility&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will generate a &lt;code&gt;PostAbility&lt;/code&gt; in &lt;code&gt;App\Abilities&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;namespace App\Abilities;&#xA;&#xA;enum PostAbility: string&#xA;{&#xA;    case ViewPost = &#39;view post&#39;;&#xA;    case CreatePost = &#39;create post&#39;;&#xA;    case UpdatePost = &#39;update post&#39;;&#xA;    case DeletePost = &#39;delete post&#39;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Default stub contains fairly standard CRUD enumeration, generated using the name of the ability. Feel free to publish the stubs and adjsut as needed.&lt;/p&gt; &#xA;&lt;h3&gt;Defined Roles&lt;/h3&gt; &#xA;&lt;p&gt;As the name suggests, a &lt;code&gt;DefinedRole&lt;/code&gt; offers a mechanism to simplify the definition of all permissions needed for a given role. To create an &lt;code&gt;EditorRole&lt;/code&gt; run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan make:role EditorRole&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will generate an &lt;code&gt;EditorRole&lt;/code&gt; within &lt;code&gt;App\Roles&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use BinaryCats\LaravelRbac\DefinedRole;&#xA;&#xA;class EditorRole extends DefinedRole&#xA;{&#xA;    /** @var array|string[]  */&#xA;    protected array $guards = [&#xA;        &#39;web&#39;&#xA;    ];&#xA;&#xA;    /**&#xA;     * List of enumerated permissions for the `web` guard&#xA;     *&#xA;     * @return array&#xA;     */&#xA;    public function web(): array&#xA;    {&#xA;        return [];&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This class contains a (now testable!) configuration definition for the role and its &lt;code&gt;web&lt;/code&gt; guard. Pretty neat! We can now adjust it like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;namespace App\Roles;&#xA;&#xA;use App\Abilities\PostAbility;&#xA;use BinaryCats\LaravelRbac\DefinedRole;&#xA;&#xA;class EditorRole extends DefinedRole&#xA;{&#xA;    /** @var array|string[]  */&#xA;    protected array $guards = [&#xA;        &#39;web&#39;&#xA;    ];&#xA;&#xA;    /**&#xA;     * List of enumerated permissions for the `web` guard&#xA;     *&#xA;     * @return array&#xA;     */&#xA;    public function web(): array&#xA;    {&#xA;        return [&#xA;            PostAbility::CreatePost,&#xA;            PostAbility::UpdatePost,&#xA;            PostAbility::ViewPost,&#xA;        ];&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you are confident a specific role has specific permissions!&lt;/p&gt; &#xA;&lt;h3&gt;Connect the dots&lt;/h3&gt; &#xA;&lt;p&gt;Now that we have the abilities and roles, simply register role with &lt;code&gt;rbac.php&lt;/code&gt; config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    &#39;roles&#39; =&amp;gt; [&#xA;        \App\Roles\EditorRole::class,&#xA;        ...&#xA;    ],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you run &lt;code&gt;rbac:reset&lt;/code&gt; next time, your RBAC will be reset automatically.&lt;/p&gt; &#xA;&lt;h2&gt;Integration&lt;/h2&gt; &#xA;&lt;p&gt;I suggest adding the script to &lt;code&gt;post-autoload-dump&lt;/code&gt; of your &lt;code&gt;composer.json&lt;/code&gt; to make sure the RBAC is reset on every composer dump:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;        &#34;post-autoload-dump&#34;: [&#xA;            &#34;Illuminate\\Foundation\\ComposerScripts::postAutoloadDump&#34;,&#xA;            &#34;@php artisan rbac:reset&#34;&#xA;        ],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/binary-cats/laravel-rbac/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/binary-cats/laravel-rbac/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you discover any security related issues, please email &lt;a href=&#34;mailto:cyrill.kalita@gmail.com&#34;&gt;cyrill.kalita@gmail.com&lt;/a&gt; instead of using issue tracker.&lt;/p&gt; &#xA;&lt;h2&gt;Postcardware&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;re free to use this package, but if it makes it to your production environment we highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cyrillkalita&#34;&gt;Cyrill N Kalita&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/binary-cats/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/binary-cats/laravel-rbac/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>