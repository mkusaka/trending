<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-06T01:32:36Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ssddanbrown/rss</title>
    <updated>2022-07-06T01:32:36Z</updated>
    <id>tag:github.com,2022-07-06:/ssddanbrown/rss</id>
    <link href="https://github.com/ssddanbrown/rss" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple twitter-feed-style RSS aggregator written in PHP, Laravel, Inertia.js, Tailwind and Vue.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RSS&lt;/h1&gt; &#xA;&lt;p&gt;A simple, opinionated, RSS feed aggregator.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ssddanbrown/rss/actions/workflows/phpunit.yml&#34;&gt;&lt;img src=&#34;https://github.com/ssddanbrown/rss/actions/workflows/phpunit.yml/badge.svg?branch=main&#34; alt=&#34;PHPUnit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The following features are built into the application:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports RSS and ATOM formats.&lt;/li&gt; &#xA; &lt;li&gt;Regular auto-fetching of RSS feeds. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Every hour by default, configurable down to 5 mins.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Custom feed names and colors.&lt;/li&gt; &#xA; &lt;li&gt;Feed-based tags for categorization.&lt;/li&gt; &#xA; &lt;li&gt;3 different post layout modes (card, list, compact).&lt;/li&gt; &#xA; &lt;li&gt;Fetching of page open-graph images.&lt;/li&gt; &#xA; &lt;li&gt;Feeds managed via a single plaintext file.&lt;/li&gt; &#xA; &lt;li&gt;System-based dark/light theme.&lt;/li&gt; &#xA; &lt;li&gt;Post title/description search.&lt;/li&gt; &#xA; &lt;li&gt;Ready-to-use docker image.&lt;/li&gt; &#xA; &lt;li&gt;Mobile screen compatible.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;The below possibly expected features are missing from this application. This is not a list of planned features. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/ssddanbrown/rss/main/#low-maintenance-project&#34;&gt;Low Maintenance Project&lt;/a&gt; section below for more info.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No import of full post/article content.&lt;/li&gt; &#xA; &lt;li&gt;No feed management via the UI.&lt;/li&gt; &#xA; &lt;li&gt;No user system or user management system.&lt;/li&gt; &#xA; &lt;li&gt;No authentication or authorization built-in.&lt;/li&gt; &#xA; &lt;li&gt;No customization, extension or plugin system.&lt;/li&gt; &#xA; &lt;li&gt;No organisation upon simple feed-level tagging.&lt;/li&gt; &#xA; &lt;li&gt;Error handling is limited and will likely not alert clearly upon issue.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Upon the above, it&#39;s quite likely you&#39;ll come across issues. This project was created to meet a personal need while learning some new technologies. Much of the logic is custom written instead of using battle-tested libraries.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;25%&#34;&gt; Card View &lt;img src=&#34;https://github.com/ssddanbrown/rss/raw/main/.github/screenshots/card-view.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34;&gt; List View &lt;img src=&#34;https://github.com/ssddanbrown/rss/raw/main/.github/screenshots/list-view.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34;&gt; Compact View &lt;img src=&#34;https://github.com/ssddanbrown/rss/raw/main/.github/screenshots/compact-view.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34;&gt; Dark Mode &lt;img src=&#34;https://github.com/ssddanbrown/rss/raw/main/.github/screenshots/dark-mode.png&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Docker Usage&lt;/h2&gt; &#xA;&lt;p&gt;A pre-built docker image is available to run the application. Storage data is confined to a single &lt;code&gt;/app/storage&lt;/code&gt; directory for easy volume mounting. Port 80 is exposed by default for application access. This application does not support HTTPS, for that you should instead use a proxy layer such as nginx.&lt;/p&gt; &#xA;&lt;h4&gt;Docker Run Command Example&lt;/h4&gt; &#xA;&lt;p&gt;In the below command, the application will be accessible at &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt; on the host and the files would be stored in a &lt;code&gt;/home/barry/rss&lt;/code&gt; directory. In this example, feeds would be configured in a &lt;code&gt;/home/barry/rss/feeds.txt&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -d \&#xA;    --restart unless-stopped \&#xA;    -p 8080:80 \&#xA;    -v /home/barry/rss:/app/storage \&#xA;    ghcr.io/ssddanbrown/rss:latest  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker Compose Example&lt;/h4&gt; &#xA;&lt;p&gt;In the below &lt;code&gt;docker-compose.yml&lt;/code&gt; example, the application will be accessible at &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt; on the host and the files would be stored in a &lt;code&gt;./rss-files&lt;/code&gt; directory relative to the docker-compose.yml file. In this example, feeds would be configured in a &lt;code&gt;./rss-files/feeds.txt&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;---&#xA;version: &#34;2&#34;&#xA;services:&#xA;    rss:&#xA;        image: ghcr.io/ssddanbrown/rss:latest&#xA;        container_name: rss&#xA;        environment:&#xA;            - APP_NAME=RSS&#xA;        volumes:&#xA;            - ./rss-files:/app/storage&#xA;        ports:&#xA;            - &#34;8080:80&#34;&#xA;        restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building the Docker Image&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;d like to build the image from scratch, instead of using the pre-built image, you can do so like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -f docker/Dockerfile .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Feed Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Feed configuration is handled by a plaintext file on the host system. By default, using our docker image, this configuration would be located in a &lt;code&gt;feeds.txt&lt;/code&gt; file within the path you mounted to &lt;code&gt;/app/storage&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The format of this file can be seen below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;https://feed.url.com/feed.xml feed-name #tag-a #tag-b&#xA;https://example.com/feed.xml Example #updates #news&#xA;&#xA;# Lines starting with a hash are considered comments.&#xA;# Empty lines are fine and will be ignored.&#xA;&#xA;# Underscores in names will be converted to spaces.&#xA;https://example.com/feed-b.xml News_Site #news&#xA;&#xA;# Feed color can be set using square brackets after the name.&#xA;# The color must be a CSS-compatible color value.&#xA;https://example.com/feed-c.xml Blue_News[#0078b9] #news #blue&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;App Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The application allows some configuration through variables. These can be set via the &lt;code&gt;.env&lt;/code&gt; file or, when using docker, via environment variables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# The name of the application.&#xA;# Only really shown in the title/browser-tab.&#xA;APP_NAME=RSS&#xA;&#xA;# The path to the config file.&#xA;# Defaults to `storage/feeds.txt` within the application folder.&#xA;APP_CONFIG_FILE=/app/storage/feeds.txt&#xA;&#xA;# Enable or disable the loading of post thumbnails.&#xA;# Does not control them within the UI, but controls the fetching&#xA;# when posts are fetched.&#xA;# Defaults to true.&#xA;APP_LOAD_POST_THUMBNAILS=true&#xA;&#xA;# The number of minutes before a feed is considered outdated and&#xA;# therefore should be updated upon request.&#xA;# This effectively has a minimum of 5 minutes in the docker setup.&#xA;APP_FEED_UPDATE_FREQUENCY=60&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage Behind a Reverse Proxy&lt;/h2&gt; &#xA;&lt;p&gt;When using behind a reverse proxy, ensure common forwarding headers are set so that the application can properly detect the right host and path to use. The below shows a sub-path proxy config location block for nginx. Note the &lt;code&gt;X-Forwarded-Prefix&lt;/code&gt; header to make the application aware of sub-path usage.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;location /rss/ {&#xA;    proxy_pass http://container-ip:80/;&#xA;    proxy_set_header Host              $host;&#xA;    proxy_set_header X-Real-IP         $remote_addr;&#xA;    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;&#xA;    proxy_set_header X-Forwarded-Proto $scheme;&#xA;    proxy_set_header X-Forwarded-Host  $host;&#xA;    proxy_set_header X-Forwarded-Port  $server_port;&#xA;    proxy_set_header X-Forwarded-Prefix &#34;/rss/&#34;;&#xA;    proxy_redirect off;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manual Install&lt;/h2&gt; &#xA;&lt;p&gt;Manually installing the application is not recommended unless you are performing development work on the project. Instead, use of the docker image is advised.&lt;/p&gt; &#xA;&lt;p&gt;This project is based upon Laravel so the requirements and install process are much the same. You will need git, PHP, composer and NodeJS installed. Installation would generally be as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Clone down and enter the project&#xA;git clone https://github.com/ssddanbrown/rss.git&#xA;cd rss&#xA;&#xA;# Install PHP dependencies via composer&#xA;# This will check you meet the minimum PHP version and extensions required.&#xA;composer install&#xA;&#xA;# Create database file&#xA;touch storage/database/database.sqlite&#xA;&#xA;# Copy config, generate app key, migrate database &amp;amp; link storage&#xA;cp .env.example .env&#xA;php artisan key:generate&#xA;php artisan migrate&#xA;php artisan storage:link&#xA;&#xA;# Install JS dependencies &amp;amp; build CSS/JS&#xA;npm install&#xA;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a production server you&#39;d really want to have a webserver active to server the &lt;code&gt;public&lt;/code&gt; directory and handle PHP. You&#39;d also need a process to run the laravel queue system in addition to a cron job to run the schedule.&lt;/p&gt; &#xA;&lt;p&gt;On a development system, These can be done like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Serve the app&#xA;php artisan serve&#xA;&#xA;# Watch the queue&#xA;php artisan queue:listen&#xA;&#xA;# Work the schedule&#xA;php artisan schedule:work&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Low Maintenance Project&lt;/h2&gt; &#xA;&lt;p&gt;This is a low maintenance project. The scope of features and support are purposefully kept narrow for my purposes to ensure longer term maintenance is viable. I&#39;m not looking to grow this into a bigger project at all.&lt;/p&gt; &#xA;&lt;p&gt;Issues and PRs raised for bugs are perfectly fine assuming they don&#39;t significantly increase the scope of the project. Please don&#39;t open PRs for new features that expand the scope.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://phpunit.de/&#34;&gt;PHPUnit&lt;/a&gt; for testing. Tests will use their own in-memory SQLite instance. Tests can be ran like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./vendor/bin/phpunit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/FriendsOfPHP/PHP-CS-Fixer&#34;&gt;PHP CS Fixer&lt;/a&gt; is used for formatting. This can be ran like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/php-cs-fixer fix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Attribution&lt;/h2&gt; &#xA;&lt;p&gt;This is primarily built using the following great projects and technologies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://laravel.com/&#34;&gt;Laravel&lt;/a&gt; - &lt;a href=&#34;https://github.com/laravel/framework/raw/9.x/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inertiajs.com/&#34;&gt;InertiaJS&lt;/a&gt; - &lt;a href=&#34;https://github.com/inertiajs/inertia/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sqlite.org/index.html&#34;&gt;SQLite&lt;/a&gt; - &lt;a href=&#34;https://www.sqlite.org/copyright.html&#34;&gt;Public Domain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;TailwindCSS&lt;/a&gt; - &lt;a href=&#34;https://github.com/tailwindlabs/tailwindcss/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt; - &lt;a href=&#34;https://github.com/vuejs/vue/raw/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://phpunit.de/&#34;&gt;PHPUnit&lt;/a&gt; - &lt;a href=&#34;https://github.com/sebastianbergmann/phpunit/raw/main/LICENSE&#34;&gt;BSD-3-Clause-Like&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://icons.getbootstrap.com/&#34;&gt;Bootstrap Icons&lt;/a&gt; - &lt;a href=&#34;https://github.com/twbs/icons/raw/main/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>sh377c0d3/Payloads</title>
    <updated>2022-07-06T01:32:36Z</updated>
    <id>tag:github.com,2022-07-06:/sh377c0d3/Payloads</id>
    <link href="https://github.com/sh377c0d3/Payloads" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Payload Arsenal for Pentration Tester and Bug Bounty Hunters&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Payloads Arsenal for Penetration Tester and Bug Bounty Hunters&lt;/h1&gt; &#xA;&lt;h2&gt;I really want to thank entire open-source community as well as members, without you all this Repository wouldn&#39;t have existed! So Thank you so much everyone!&lt;/h2&gt; &#xA;&lt;h3&gt;This Repository is created by collecting Payloads from various popular and well known sources.&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Disclaimer: Use these payloads at your own risk!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This Respository is still growing, If you want to contribute please feel free to help.&lt;/p&gt; &#xA;&lt;p&gt;Note: Before firing/executing any Payloads while Pentesting, Go through the exploit/Payload source once !!!&lt;/p&gt; &#xA;&lt;p&gt;Stay Tuned More Payloads are on the Way !!!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>opencart/opencart</title>
    <updated>2022-07-06T01:32:36Z</updated>
    <id>tag:github.com,2022-07-06:/opencart/opencart</id>
    <link href="https://github.com/opencart/opencart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A free shopping cart system. OpenCart is an open source PHP-based online e-commerce solution.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenCart&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://php.net/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/php-%3E%3D%208.0-8892BF.svg?style=flat-square&#34; alt=&#34;Minimum PHP Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/opencart/opencart&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/opencart/opencart&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenCart is a free open source ecommerce platform for online merchants. OpenCart provides a professional and reliable foundation from which to build a successful online store.&lt;/p&gt; &#xA;&lt;h2&gt;How to install&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/opencart/opencart/master/INSTALL.md&#34;&gt;installation instructions&lt;/a&gt; included in the repository or download file.&lt;/p&gt; &#xA;&lt;h2&gt;How to upgrade from previous versions&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/opencart/opencart/master/UPGRADE.md&#34;&gt;upgrading instructions&lt;/a&gt; included in the repository or download file.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting a bug&lt;/h2&gt; &#xA;&lt;p&gt;Read the instructions below before you create a bug report.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Search the &lt;a href=&#34;https://forum.opencart.com/viewforum.php?f=201&#34;&gt;OpenCart forum&lt;/a&gt;, ask the community if they have seen the bug or know how to fix it.&lt;/li&gt; &#xA; &lt;li&gt;Check all open and closed issues on the &lt;a href=&#34;https://github.com/opencart/opencart/issues&#34;&gt;GitHub bug tracker&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If your bug is related to the OpenCart core code then please create a bug report on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;READ the &lt;a href=&#34;https://github.com/opencart/opencart/raw/master/CHANGELOG.md&#34;&gt;changelog for the master branch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://www.google.com&#34;&gt;Google&lt;/a&gt; to search for your issue.&lt;/li&gt; &#xA; &lt;li&gt;Make sure that your bug/issue is not related to your hosting environment.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you are not sure about your issue, it is always best to ask the community on our &lt;a href=&#34;https://forum.opencart.com/viewforum.php?f=201&#34;&gt;bug forum thread&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If your bug report is not related to the core code (such as a 3rd party module or your server configuration) then the issue will be closed without a reason. You must contact the extension developer, use the forum or find a commercial partner to resolve a 3rd party code issue.&lt;/li&gt; &#xA; &lt;li&gt;If you would like to report a serious security bug please PM an OpenCart moderator/administrator on the forum. Please do not report concept/ideas/unproven security flaws - all security reports are taken seriously but you must include the EXACT details steps to reproduce it. Please DO NOT post security flaws in a public location.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;Fork the repository, edit and &lt;a href=&#34;https://github.com/opencart/opencart/wiki/Creating-a-pull-request&#34;&gt;submit a pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please be very clear on your commit messages and pull request, empty pull request messages may be rejected without reason.&lt;/p&gt; &#xA;&lt;p&gt;Your code standards should match the &lt;a href=&#34;https://github.com/opencart/opencart/wiki/Coding-standards&#34;&gt;OpenCart coding standards&lt;/a&gt;. We use an automated code scanner to check for most basic mistakes - if the test fails your pull request will be rejected.&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;The version is broken down into 4 points e.g 1.2.3.4 We use MAJOR.MINOR.FEATURE.PATCH to describe the version numbers.&lt;/p&gt; &#xA;&lt;p&gt;A MAJOR is very rare, it would only be considered if the source was effectively re-written or a clean break was desired for other reasons. This increment would likely break most 3rd party modules.&lt;/p&gt; &#xA;&lt;p&gt;A MINOR is when there are significant changes that affect core structures. This increment would likely break some 3rd party modules.&lt;/p&gt; &#xA;&lt;p&gt;A FEATURE version is when new extensions or features are added (such as a payment gateway, shipping module etc). Updating a feature version is at a low risk of breaking 3rd party modules.&lt;/p&gt; &#xA;&lt;p&gt;A PATCH version is when a fix is added, it should be considered safe to update patch versions e.g 1.2.3.4 to 1.2.3.5&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;OpenCart will announce to developers 1 week prior to public release of FEATURE versions, this is to allow for testing of their own modules for compatibility. For bigger releases (ones that contain many core changes, features and fixes) an extended period will be considered following an announced release candidate (RC). Patch versions (which are considered safe to update with) may have a significantly reduced developer release period.&lt;/p&gt; &#xA;&lt;p&gt;The master branch will always contain an &#34;_rc&#34; postfix of the next intended version. The next &#34;_rc&#34; version may change at any time.&lt;/p&gt; &#xA;&lt;p&gt;Developer release source code will not change once tagged.&lt;/p&gt; &#xA;&lt;p&gt;If a bug is found in an announced developer release that is significant (such as a major feature is broken) then the release will be pulled. A patch version will be issued to replace it, depending on the severity of the patch an extended testing period may be announced. If the developer release version was never made public then the preceding patch version tag will be removed.&lt;/p&gt; &#xA;&lt;p&gt;To receive developer notifications about release information, sign up to the newsletter on the &lt;a href=&#34;https://www.opencart.com&#34;&gt;OpenCart website&lt;/a&gt; - located in the footer. Then choose the developer news option.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/opencart/opencart/raw/master/license.txt&#34;&gt;GNU General Public License version 3 (GPLv3)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.opencart.com/&#34;&gt;OpenCart homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.opencart.com/&#34;&gt;OpenCart forums&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.opencart.com/index.php?route=feature/blog&#34;&gt;OpenCart blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.opencart.com/en-gb/introduction/&#34;&gt;How to documents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://newsletter.opencart.com/h/r/B660EBBE4980C85C&#34;&gt;Newsletter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/opencart/opencart/discussions&#34;&gt;Discussions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>