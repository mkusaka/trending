<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-19T01:34:23Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tempestphp/highlight</title>
    <updated>2024-03-19T01:34:23Z</updated>
    <id>tag:github.com,2024-03-19:/tempestphp/highlight</id>
    <link href="https://github.com/tempestphp/highlight" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast, extensible, server-side code highlighting for HTML and terminal&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fast, extensible, server-side code highlighting&lt;/h1&gt; &#xA;&lt;p&gt;You can read about why I started this package &lt;a href=&#34;https://stitcher.io/blog/a-syntax-highlighter-that-doesnt-suck&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#quickstart&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#themes&#34;&gt;Themes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#for-the-web&#34;&gt;For the web&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#for-the-terminal&#34;&gt;For the terminal&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#special-highlighting-tags&#34;&gt;Special highlighting tags&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#emphasize-strong-and-blur&#34;&gt;Emphasize strong and blur&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#additions-and-deletions&#34;&gt;Additions and deletions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#custom-classes&#34;&gt;Custom classes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#inline-languages&#34;&gt;Inline languages&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#commonmark-integration&#34;&gt;Commonmark integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#adding-or-extending-languages&#34;&gt;Adding or extending languages&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;TODO:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add JS support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add SQL support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add Twig support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add YAML support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add JSON support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;composer require tempest/highlight:dev-main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Highlight code like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$highlighter = new \Tempest\Highlight\Highlighter();&#xA;&#xA;$code = $highlighter-&amp;gt;parse($escapedCode, &#39;php&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: you should always pass the &lt;em&gt;escaped&lt;/em&gt; version of your code&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$code = $highlighter-&amp;gt;parse(htmlentities($raw), &#39;php&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Themes&lt;/h2&gt; &#xA;&lt;h3&gt;For the web&lt;/h3&gt; &#xA;&lt;p&gt;For HTML rendering, you can use one of the provided themes that comes with this package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;@import &#34;../vendor/tempest/highlight/src/Themes/highlight-light-lite.css&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can build your own CSS theme with just a couple of classes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.hl-keyword {&#xA;    color: #4F95D1;&#xA;}&#xA;&#xA;.hl-property {&#xA;    color: #46b98d;&#xA;}&#xA;&#xA;.hl-attribute {&#xA;    font-style: italic;&#xA;}&#xA;&#xA;.hl-type {&#xA;    color: #D14F57;&#xA;}&#xA;&#xA;.hl-generic .hl-type,&#xA;.hl-generic {&#xA;    color: #9D3AF6;&#xA;}&#xA;&#xA;.hl-comment {&#xA;    color: #888888;&#xA;}&#xA;&#xA;.hl-blur {&#xA;    filter: blur(2px);&#xA;}&#xA;&#xA;.hl-strong {&#xA;    font-weight: bold;&#xA;}&#xA;&#xA;.hl-em {&#xA;    font-style: italic;&#xA;}&#xA;&#xA;.hl-addition {&#xA;    display: inline-block;&#xA;    min-width: 100%;&#xA;    background-color: #00FF0033;&#xA;}&#xA;&#xA;.hl-deletion {&#xA;    display: inline-block;&#xA;    min-width: 100%;&#xA;    background-color: #FF000022;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;pre&lt;/code&gt; tag styling isn&#39;t included in this package.&lt;/p&gt; &#xA;&lt;h3&gt;For the terminal&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Tempest\Highlight\Highlighter;&#xA;use Tempest\Highlight\Themes\TerminalTheme;&#xA;&#xA;$highlighter = new Highlighter(new TerminalTheme());&#xA;&#xA;echo html_entity_decode($highlighter-&amp;gt;parse(htmlentities($code), &#39;php&#39;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/.github/terminal.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Special highlighting tags&lt;/h2&gt; &#xA;&lt;p&gt;This package offers a collection of special tags that you can use within your code snippets. These tags won&#39;t be shown in the final output, but rather adjust the highlighter&#39;s default styling. All these tags work multi-line, and will still properly render its wrapped content.&lt;/p&gt; &#xA;&lt;h3&gt;Emphasize, strong, and blur&lt;/h3&gt; &#xA;&lt;p&gt;You can add these tags within your code to emphasize or blur parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;{_ content _}&lt;/code&gt; adds the &lt;code&gt;.hl-em&lt;/code&gt; class&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;{* content *}&lt;/code&gt; adds the &lt;code&gt;.hl-strong&lt;/code&gt; class&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;{~ content ~}&lt;/code&gt; adds the &lt;code&gt;.hl-blur&lt;/code&gt; class&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here&#39;s an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;{~public function parse(string $content, Highlighter $highlighter): string&#xA;{&#xA;    $pattern = &#39;/\{\~(?&amp;lt;match&amp;gt;(.|\n)*)\~\}/&#39;;&#xA;    &#xA;    preg_match($pattern, $content, $matches);&#xA;&#xA;    if ($matches === []) {&#xA;        return $content;&#xA;    }~} // This part is blurred&#xA;&#xA;    {*$content = preg_replace_callback(*} // This line is bold&#xA;        $pattern,&#xA;        function (array $matches) use ($highlighter) {&#xA;            $parsed = $highlighter-&amp;gt;parse($matches[&#39;match&#39;], $highlighter-&amp;gt;getCurrentLanguage());&#xA;            &#xA;            return &#39;&amp;lt;span class=&#34;hl-blur&#34;&amp;gt;&#39; . $parsed . &#39;&amp;lt;/span&amp;gt;&#39;;&#xA;        },&#xA;        {_$content_} // This line is cursive&#xA;    );&#xA;    &#xA;    {~return $highlighter-&amp;gt;parse($content, $highlighter-&amp;gt;getCurrentLanguage());&#xA;}~}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is the end result:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/.github/highlight.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Additions and deletions&lt;/h3&gt; &#xA;&lt;p&gt;You can use these two tags to mark lines as additions and deletions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;{+ content +}&lt;/code&gt; adds the &lt;code&gt;.hl-addition&lt;/code&gt; class&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;{- content -}&lt;/code&gt; adds the &lt;code&gt;.hl-deletion&lt;/code&gt; class&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;{-public class Foo {}-}&#xA;{+public class Bar {}+}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/.github/highlight-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;As a reminder: all these tags work multi-line as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;  public function before(TokenType $tokenType): string&#xA;  {&#xA;      $style = match ($tokenType) {&#xA;          {-TokenType::KEYWORD =&amp;gt; TerminalStyle::FG_DARK_BLUE,&#xA;          TokenType::PROPERTY =&amp;gt; TerminalStyle::FG_DARK_GREEN,&#xA;          TokenType::TYPE =&amp;gt; TerminalStyle::FG_DARK_RED,&#xA;          TokenType::GENERIC =&amp;gt; TerminalStyle::FG_DARK_CYAN,&#xA;          TokenType::VALUE =&amp;gt; TerminalStyle::FG_BLACK,&#xA;          TokenType::COMMENT =&amp;gt; TerminalStyle::FG_GRAY,&#xA;          TokenType::ATTRIBUTE =&amp;gt; TerminalStyle::RESET,-}&#xA;      };&#xA;  &#xA;      return TerminalStyle::ESC-&amp;gt;value . $style-&amp;gt;value;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom classes&lt;/h3&gt; &#xA;&lt;p&gt;You can add any class you&#39;d like by using the &lt;code&gt;{:classname: content :}&lt;/code&gt; tag:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&amp;lt;style&amp;gt;&#xA;.hl-a {&#xA;    background-color: #FFFF0077;&#xA;}&#xA;&#xA;.hl-b {&#xA;    background-color: #FF00FF33;&#xA;}&#xA;&amp;lt;/style&amp;gt;&#xA;&#xA;```php&#xA;{:hl-a:public class Foo {}:}&#xA;{:hl-b:public class Bar {}:}&#xA;```&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/.github/highlight-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Inline languages&lt;/h3&gt; &#xA;&lt;p&gt;Within inline Markdown code tags, you can specify the language by prepending it between curly brackets:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;`{php}public function before(TokenType $tokenType): string`&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll need to set up &lt;a href=&#34;https://raw.githubusercontent.com/tempestphp/highlight/main/#commonmark-integration&#34;&gt;commonmark&lt;/a&gt; properly to get this to work.&lt;/p&gt; &#xA;&lt;h2&gt;CommonMark integration&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re using &lt;code&gt;league/commonmark&lt;/code&gt;, you can highlight codeblocks and inline code like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use League\CommonMark\Environment\Environment;&#xA;use League\CommonMark\Extension\CommonMark\CommonMarkCoreExtension;&#xA;use League\CommonMark\Extension\CommonMark\Node\Block\FencedCode;&#xA;use League\CommonMark\MarkdownConverter;&#xA;use Tempest\Highlight\CommonMark\CodeBlockRenderer;&#xA;use Tempest\Highlight\CommonMark\InlineCodeBlockRenderer;&#xA;&#xA;$environment = new Environment();&#xA;&#xA;$environment&#xA;    -&amp;gt;addExtension(new CommonMarkCoreExtension())&#xA;    -&amp;gt;addRenderer(FencedCode::class, new CodeBlockRenderer())&#xA;    -&amp;gt;addRenderer(Code::class, new InlineCodeBlockRenderer())&#xA;    ;&#xA;&#xA;$markdown = new MarkdownConverter($environment);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Keep in mind that you need to manually install &lt;code&gt;league/commonmark&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;composer require league/commonmark;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Adding or extending languages&lt;/h2&gt; &#xA;&lt;p&gt;This package makes it easy for developers to add new languages or extend existing languages. Right now, these languages are supported: &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, and &lt;code&gt;blade&lt;/code&gt;. More will be added.&lt;/p&gt; &#xA;&lt;p&gt;In order to build your own highlighter functionality, you need to understand &lt;em&gt;three&lt;/em&gt; concepts of how code is highlighted: &lt;em&gt;patterns&lt;/em&gt;, &lt;em&gt;injections&lt;/em&gt;, and &lt;em&gt;languages&lt;/em&gt;. &lt;a href=&#34;https://stitcher.io/blog/building-a-custom-language-in-tempest-highlight&#34;&gt;Continue reading&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Hyizhou1/trx</title>
    <updated>2024-03-19T01:34:23Z</updated>
    <id>tag:github.com,2024-03-19:/Hyizhou1/trx</id>
    <link href="https://github.com/Hyizhou1/trx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;tg机器人 trx兑换、能量租赁、trx闪兑自动回能量、商城、地址监听、会员24小时自助购买 -完整功能&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;trx兑换 能量租赁 tg会员 钱包靓号商城 钱包监控&lt;/h1&gt; &#xA;&lt;h1&gt;tg机器人 trx能量商城会员兑换&lt;/h1&gt; &#xA;&lt;h1&gt;自动化USDT兑换TRX的Telegram机器人 完整功能&lt;/h1&gt; &#xA;&lt;h3&gt;体验群组 测试群组 &lt;a href=&#34;https://t.me/trxtest2&#34;&gt;https://t.me/trxtest2&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;体验机器人 &lt;a href=&#34;https://t.me/nl_trx_bot&#34;&gt;https://t.me/nl_trx_bot&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;联系我 &lt;a href=&#34;https://t.me/hongsx&#34;&gt;https://t.me/hongsx&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;TG红包雷 可自助充值 提现 ：&lt;a href=&#34;https://t.me/adklfjs&#34;&gt;https://t.me/adklfjs&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;TG索引机器人，telegram超级索引群组&lt;a href=&#34;https://t.me/superSerch_bot&#34;&gt;https://t.me/superSerch_bot&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;功能：完完全全自主配置，自主控制的tg trx能量商城会员兑换机器人&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;usdt闪兑机器人，可配置多个机器人，设置不同的汇率，自动进货，设置黑钱包，最大和最低兑换金额，预支等功能&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;可对机器人设置不同的关键字回复，不开启闪兑功能也可以用&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;可对机器人设置命令&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;可对机器人设置定时广告，可对广告关联键盘按钮&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;后台可管理机器人的群组和用户，可批量发送消息&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;可设置能量平台，自动购买能量，预支能量，能量添加多个平台，轮询方式下单，确保不会失败！！可配置智能托管，监控钱包补足能量&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;可监控钱包，监控地址的USDT交易(双向),TRX交易(双向),授权(双向),多签(双向),质押(双向)等功能，可配置监控套餐，用户可购买套餐增加监控数量&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;支持计算汇率，支持钱包地址查询，查地址余额，多签，授权等&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;支持后台可视化自定义消息下发按钮 菜单命令 用户管理 群管理&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;任务后台并发执行，如果仅想用机器人回复，定时广告，群组用户。不使用闪兑，能量，监控功能，可不搭建任务程序&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;机器人全自动执行，并发执行，性能高效，对服务器配置要求低&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;敏感数据加密，更安全，数据库不可读私钥等敏感数据，代码开源&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;自动开通电报会员功能，可设置相应套餐价格，自助下单开通&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;商城卡密功能，可自动购买，充值购买，批量上架，卡密加密等&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/mmmrp/trx/assets/72646062/88eba0ad-38b1-4b2d-bb59-fa582d49d52d&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/mmmrp/trx/assets/72646062/178824e0-2c3b-4694-acc2-11840495c6a8&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/mmmrp/trx/assets/72646062/f7c2ecdf-ea05-4fa3-981d-b3a6fdd73147&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/mmmrp/trx/assets/72646062/3f564d1d-602f-4828-9017-aa679d852bc1&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/lllrp/trx/assets/72646062/f054586d-0af9-4a35-aef9-dab66183a633&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/lllrp/trx/assets/72646062/f89bbeb1-3ebb-4548-b038-ed3840530739&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>vstruhar/lara-collab</title>
    <updated>2024-03-19T01:34:23Z</updated>
    <id>tag:github.com,2024-03-19:/vstruhar/lara-collab</id>
    <link href="https://github.com/vstruhar/lara-collab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LaraCollab is a project management tool build with Laravel and React.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vstruhar/lara-collab/main/resources/docs/banner.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;LaraCollab, developed with Laravel and React, serves as a project management tool. The primary idea behind this initiative is to provide developers or development companies with a free platform to efficiently manage clients, projects, log time, and generate invoices. You may wonder, &#39;Why another tool when there are already feature-rich options available for free?&#39; Yes, that&#39;s a valid point. However, my aim is to offer a project management tool specifically tailored for Laravel developers, giving them option to integrate and customize features according to their unique workflows.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User roles (e.g., client, manager, developer, designer) with customizable permissions.&lt;/li&gt; &#xA; &lt;li&gt;Management of client companies.&lt;/li&gt; &#xA; &lt;li&gt;Manage client users that have access to company tasks.&lt;/li&gt; &#xA; &lt;li&gt;Project management with user access control.&lt;/li&gt; &#xA; &lt;li&gt;Task groups within projects (e.g., Todo, In progress, QA, Done, Deployed).&lt;/li&gt; &#xA; &lt;li&gt;Task can have a assignee, due date, custom labels, time estimation (add manually or use timer), attachments, subscribers, and comments.&lt;/li&gt; &#xA; &lt;li&gt;Task filters for efficient organization.&lt;/li&gt; &#xA; &lt;li&gt;Real-time notifications and task updates via web sockets.&lt;/li&gt; &#xA; &lt;li&gt;Mention functionality in task descriptions and comments.&lt;/li&gt; &#xA; &lt;li&gt;Personalized &#34;My Tasks&#34; page for each user.&lt;/li&gt; &#xA; &lt;li&gt;Activity page for projects or selected ones.&lt;/li&gt; &#xA; &lt;li&gt;Invoice generation from billable tasks with logged time.&lt;/li&gt; &#xA; &lt;li&gt;Print or download invoices directly from the platform.&lt;/li&gt; &#xA; &lt;li&gt;Dashboard offering project progress, overdue tasks, recently assigned tasks, and recent comments.&lt;/li&gt; &#xA; &lt;li&gt;Additional reports for daily logged time per user and total logged time.&lt;/li&gt; &#xA; &lt;li&gt;Dark mode support for user preference.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/Dashboard - light.jpeg&#34; width=&#34;45%&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/Dashboard - dark.jpeg&#34; width=&#34;45%&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/Projects - light.jpeg&#34; width=&#34;45%&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/Projects - dark.jpeg&#34; width=&#34;45%&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/Project tasks - light.jpeg&#34; width=&#34;45%&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/Project tasks - dark.jpeg&#34; width=&#34;45%&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/Task - light.jpeg&#34; width=&#34;45%&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/Task - dark.jpeg&#34; width=&#34;45%&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/My tasks - light.jpeg&#34; width=&#34;45%&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/My tasks - dark.jpeg&#34; width=&#34;45%&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/Activity - light.jpeg&#34; width=&#34;45%&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/Activity - dark.jpeg&#34; width=&#34;45%&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/Invoice - light.jpeg&#34; width=&#34;45%&#34;&gt; &lt;img src=&#34;/resources/docs/screenshots/Invoice - dark.jpeg&#34; width=&#34;45%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Tech stack&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://laravel.com&#34;&gt;Laravel&lt;/a&gt; for backend, &lt;a href=&#34;https://react.dev&#34;&gt;React&lt;/a&gt; for frontend and &lt;a href=&#34;https://inertiajs.com&#34;&gt;Inertia&lt;/a&gt; for &#34;glueing&#34; them together. For the frontend React UI components, the awesome &lt;a href=&#34;https://mantine.dev&#34;&gt;Mantine&lt;/a&gt; library was used.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Project&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository using &lt;code&gt;git clone https://github.com/vstruhar/lara-collab.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Cd into the project&lt;/li&gt; &#xA; &lt;li&gt;Install npm dependencies with &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;.env&lt;/code&gt; file with &lt;code&gt;cp .env.example .env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate an app encryption key with &lt;code&gt;php artisan key:generate&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create an empty database for the application&lt;/li&gt; &#xA; &lt;li&gt;In the &lt;code&gt;.env&lt;/code&gt; file, add database credentials to allow Laravel to connect to the database (variables prefixed with &lt;code&gt;DB_&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Migrate the database with &lt;code&gt;php artisan migrate --seed&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Development&lt;/h4&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;You will be asked if you want to seed development data, for testing or development enter &lt;code&gt;yes&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install composer dependencies with &lt;code&gt;composer install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: &lt;a href=&#34;https://laravel.com/docs/10.x/sail#introduction&#34;&gt;Laravel Sail&lt;/a&gt; was used for development, so if you want you can use that.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Production&lt;/h4&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;You will be asked if you want to seed development data, for production enter &lt;code&gt;no&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;composer install --no-dev&lt;/code&gt; to install project dependencies.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;php artisan optimize&lt;/code&gt; to optimize Laravel for production.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;php artisan storage:link&lt;/code&gt; to create symbolic link for storage in public directory.&lt;/li&gt; &#xA; &lt;li&gt;Setup &lt;a href=&#34;https://laravel.com/docs/10.x/scheduling#running-the-scheduler&#34;&gt;task scheduler&lt;/a&gt; by adding this to cron (to edit cron run &lt;code&gt;crontab -e&lt;/code&gt;). &lt;code&gt;* * * * * cd /path-to-your-project &amp;amp;&amp;amp; php artisan schedule:run &amp;gt;&amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Emails, notifications and events are queueable. If you want to enable queues then you will have to set &lt;code&gt;QUEUE_CONNECTION=database&lt;/code&gt; in &lt;code&gt;.env&lt;/code&gt;. And then run &lt;a href=&#34;https://laravel.com/docs/10.x/queues#running-the-queue-worker&#34;&gt;queue worker&lt;/a&gt; with &lt;a href=&#34;https://laravel.com/docs/10.x/queues#supervisor-configuration&#34;&gt;supervisor&lt;/a&gt; using this command &lt;code&gt;php artisan queue:work --queue=default,email&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Setup email by updating variables in &lt;code&gt;.env&lt;/code&gt; that have &lt;code&gt;MAIL_&lt;/code&gt; prefix.&lt;/li&gt; &#xA; &lt;li&gt;Finally build frontend with &lt;code&gt;npm run build&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Admin user&lt;/h3&gt; &#xA;&lt;p&gt;New admin user will be created after running migrations with seed.&lt;/p&gt; &#xA;&lt;p&gt;email: &lt;code&gt;admin@mail.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;password: &lt;code&gt;password&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Web sockets&lt;/h3&gt; &#xA;&lt;p&gt;You may use &lt;a href=&#34;https://pusher.com&#34;&gt;Pusher&lt;/a&gt; for web sockets, since number of free messages should be enough for the use case. Or you can use &lt;a href=&#34;https://laravel.com/docs/10.x/broadcasting#open-source-alternatives&#34;&gt;open source alternatives&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use Pusher, sign up, then create a project and copy paste app keys to &lt;code&gt;.env&lt;/code&gt; (variables with &lt;code&gt;PUSHER_&lt;/code&gt; prefix).&lt;/p&gt; &#xA;&lt;h3&gt;Social login (Google)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Setup &#34;OAuth consent screen&#34; on Google Console (&lt;a href=&#34;https://console.cloud.google.com/apis/credentials/consent&#34;&gt;link&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Create &#34;OAuth Client ID&#34;, select Web application when asked for type (&lt;a href=&#34;https://console.cloud.google.com/apis/credentials&#34;&gt;link&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Use generated &#34;Client ID&#34; and &#34;Client secret&#34; in the &lt;code&gt;.env&lt;/code&gt; (&lt;code&gt;GOOGLE_CLIENT_ID&lt;/code&gt; and &lt;code&gt;GOOGLE_CLIENT_SECRET&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;del&gt;Kanban view.&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add project notes section.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Change permission for specific user.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make it responsive.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add emojis to rich text editor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Report that will calculate expense and profit per user.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Write tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Optimize frontend and backend.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Consider moving to TypeScript.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>