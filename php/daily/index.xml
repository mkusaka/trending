<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-06T01:34:16Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WINBIGFOX/TimeScribe</title>
    <updated>2025-06-06T01:34:16Z</updated>
    <id>tag:github.com,2025-06-06:/WINBIGFOX/TimeScribe</id>
    <link href="https://github.com/WINBIGFOX/TimeScribe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository offers a modern, flexible time tracking app for capturing and managing personal working hours. It operates offline, requires no sign-up, and is free and open source—ideal for anyone looking to efficiently track work hours, whether at home or in the office.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://timescribe.app&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/WINBIGFOX/Stempeluhr/raw/main/.github/images/icon.png?raw=true&#34; width=&#34;130&#34; alt=&#34;TimeScribe Logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;TimeScribe&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Smart &amp;amp; private time tracking for macOS &amp;amp; Windows&lt;/b&gt;&lt;br&gt; Track, analyze and own your work hours—no cloud, no registration, no paywall. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/WINBIGFOX/timescribe/releases/latest&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/WINBIGFOX/timescribe?label=Download&amp;amp;logo=github&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://formulae.brew.sh/cask/timescribe&#34;&gt; &lt;img src=&#34;https://img.shields.io/homebrew/cask/v/timescribe?logo=homebrew&amp;amp;logoColor=white&amp;amp;label=Homebrew&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/WINBIGFOX/TimeScribe/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/WINBIGFOX/timescribe?color=blue&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Download Now&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://timescribe.app/download/windows&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Windows-0078D4?style=for-the-badge&amp;amp;logo=microsoft&amp;amp;logoColor=white&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://timescribe.app/download/macos/arm64&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Apple%20Silicon-000000?style=for-the-badge&amp;amp;logo=apple&amp;amp;logoColor=white&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://timescribe.app/download/macos/x64&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Intel-000000?style=for-the-badge&amp;amp;logo=apple&amp;amp;logoColor=white&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🕒 Description&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;TimeScribe&lt;/strong&gt; is a modern, flexible time clock app for accurately tracking and managing working hours. Whether you&#39;re remote, hybrid, or office-based, TimeScribe helps you stay focused and organized with minimal effort.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ Start, pause, and stop tracking with one click&lt;/li&gt; &#xA; &lt;li&gt;📊 Visualize your day and weekly work patterns&lt;/li&gt; &#xA; &lt;li&gt;⏱ See app usage and categorize work vs distractions&lt;/li&gt; &#xA; &lt;li&gt;🗓️ Plan absences like vacation, sick leave, and holidays&lt;/li&gt; &#xA; &lt;li&gt;⚙️ Auto start/pause based on screen time and idle status&lt;/li&gt; &#xA; &lt;li&gt;💾 Export as CSV and Excel: Easily export your time tracking data for further analysis or reporting.&lt;/li&gt; &#xA; &lt;li&gt;🪟 Supports macOS &amp;amp; Windows&lt;/li&gt; &#xA; &lt;li&gt;🔒 100% Local: No cloud, no registration, no paywall&lt;/li&gt; &#xA; &lt;li&gt;🔄 Auto Updates: Always up-to-date&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;💬 Supported Languages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🇬🇧 English (UK/US)&lt;/li&gt; &#xA; &lt;li&gt;🇫🇷 French (FR/CA)&lt;/li&gt; &#xA; &lt;li&gt;🇩🇪 German&lt;/li&gt; &#xA; &lt;li&gt;🇨🇳 Chinese (中文)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📦 Download &amp;amp; Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Option 1: Download the App&lt;/h3&gt; &#xA;&lt;p&gt;Head to the &lt;a href=&#34;https://github.com/WINBIGFOX/timescribe/releases/latest&#34;&gt;latest release&lt;/a&gt; and download:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🖥 &lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;TimeScribe-setup.exe&lt;/code&gt; &lt;a href=&#34;https://timescribe.app/download/windows&#34;&gt;👉🏻 Direct download link Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🍏 &lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;TimeScribe.dmg&lt;/code&gt; &lt;a href=&#34;https://timescribe.app/download/macos/arm64&#34;&gt;👉🏻 Direct download link macOS (Apple Silicon)&lt;/a&gt; | &lt;a href=&#34;https://timescribe.app/download/macos/x64&#34;&gt;(Intel)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Run the &lt;code&gt;.exe&lt;/code&gt; and follow the setup instructions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: Open the &lt;code&gt;.dmg&lt;/code&gt;, then drag TimeScribe to your Applications folder.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Option 2: Install via Homebrew (macOS)&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re on macOS and have &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; installed, you can install TimeScribe with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install timescribe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After installation, you can launch TimeScribe via Spotlight or from your Applications folder.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Option 3: Build from Source (Developers)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone the repo&#xA;git clone https://github.com/WINBIGFOX/timescribe.git&#xA;cd timescribe&#xA;&#xA;# Install dependencies&#xA;composer install&#xA;npm install&#xA;&#xA;# Copy the example environment file&#xA;cp .env.example .env&#xA;&#xA;# Generate an application key&#xA;php artisan key:generate&#xA;&#xA;# Build for macOS&#xA;npm run build&#xA;php artisan native:build mac&#xA;&#xA;# Build for Windows (coming soon or adjust accordingly)&#xA;php artisan native:build win&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🖼 Screenshots&lt;/h2&gt; &#xA;&lt;h3&gt;🧭 Menu Bar&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/WINBIGFOX/Stempeluhr/blob/main/.github/images/menubar_dark.png?raw=true&#34;&gt; &#xA;  &lt;img alt=&#34;Menu Bar&#34; width=&#34;550&#34; src=&#34;https://github.com/WINBIGFOX/Stempeluhr/raw/main/.github/images/menubar_light.png?raw=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;h3&gt;🧭 Time Tracking&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/WINBIGFOX/Stempeluhr/blob/main/.github/images/dayview_en_dark.webp?raw=true&#34;&gt; &#xA;  &lt;img alt=&#34;Time Tracking&#34; src=&#34;https://github.com/WINBIGFOX/Stempeluhr/raw/main/.github/images/dayview_en_light.webp?raw=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;h3&gt;🧠 App Activity&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/WINBIGFOX/Stempeluhr/blob/main/.github/images/app_activity_en_dark.webp?raw=true&#34;&gt; &#xA;  &lt;img alt=&#34;App Activity&#34; src=&#34;https://github.com/WINBIGFOX/Stempeluhr/raw/main/.github/images/app_activity_en_light.webp?raw=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;h3&gt;🗓️ Absence Planning&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/WINBIGFOX/Stempeluhr/blob/main/.github/images/absences_en_dark.webp?raw=true&#34;&gt; &#xA;  &lt;img alt=&#34;Absence Planning&#34; src=&#34;https://github.com/WINBIGFOX/Stempeluhr/raw/main/.github/images/absences_en_light.webp?raw=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;h3&gt;⚙️ Automatic Start/Pause&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/WINBIGFOX/Stempeluhr/blob/main/.github/images/start_break_en_dark.webp?raw=true&#34;&gt; &#xA;  &lt;img alt=&#34;Automatic Start/Pause&#34; src=&#34;https://github.com/WINBIGFOX/Stempeluhr/raw/main/.github/images/start_break_en_light.webp?raw=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;👥 Community &amp;amp; Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;👉 &lt;a href=&#34;https://github.com/WINBIGFOX/TimeScribe/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🐞 &lt;a href=&#34;https://github.com/WINBIGFOX/TimeScribe/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🛠️ &lt;a href=&#34;https://raw.githubusercontent.com/WINBIGFOX/TimeScribe/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;⛳️ &lt;a href=&#34;https://github.com/users/WINBIGFOX/projects/5&#34;&gt;TimeScribe Feature-Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;💖 Sponsor &amp;amp; License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;b&gt;Love TimeScribe?&lt;/b&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/sponsors/WINBIGFOX&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/GitHub%20Sponsors-EA4AAA?style=for-the-badge&amp;amp;logo=githubsponsors&amp;amp;logoColor=white&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.buymeacoffee.com/kc7qv2k6jqr&#34; target=&#34;_blank&#34;&gt; &lt;img height=&#34;28px&#34; src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/WINBIGFOX/TimeScribe/main/LICENSE&#34;&gt;GPL-3.0 License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gecche/laravel-multidomain</title>
    <updated>2025-06-06T01:34:16Z</updated>
    <id>tag:github.com,2025-06-06:/gecche/laravel-multidomain</id>
    <link href="https://github.com/gecche/laravel-multidomain" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Laravel extension for using a laravel application on a multi domain setting&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://tldrlegal.com/license/mit-license&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://laravel.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Laravel-12.x-orange.svg?style=flat-square&#34; alt=&#34;Laravel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://laravel.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Laravel-11.x-orange.svg?style=flat-square&#34; alt=&#34;Laravel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://laravel.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Laravel-10.x-orange.svg?style=flat-square&#34; alt=&#34;Laravel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://laravel.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Laravel-9.x-orange.svg?style=flat-square&#34; alt=&#34;Laravel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://laravel.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Laravel-8.x-orange.svg?style=flat-square&#34; alt=&#34;Laravel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://laravel.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Laravel-7.x-orange.svg?style=flat-square&#34; alt=&#34;Laravel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://laravel.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Laravel-6.x-orange.svg?style=flat-square&#34; alt=&#34;Laravel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://laravel.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Laravel-5.x-orange.svg?style=flat-square&#34; alt=&#34;Laravel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Laravel Multi Domain&lt;/h1&gt; &#xA;&lt;p&gt;An extension for using Laravel in a multi domain setting&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gecche/laravel-multidomain/master/laravel-multidomain.png&#34; alt=&#34;Laravel Multi Domain&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;This package allows a single Laravel installation to work with multiple HTTP domains.&lt;/p&gt; &#xA;&lt;p&gt;There are many cases in which different customers use the same application in terms of code but not in terms of database, storage and configuration.&lt;/p&gt; &#xA;&lt;p&gt;This package gives a very simple way to get a specific env file, a specific storage path and a specific database for each such customer.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Version Compatibility&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Laravel&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Multidomain&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;12.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;12.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;11.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;11.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;10.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;10.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;9.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;8.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;7.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.8.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.4.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.7.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.3.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.6.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.2.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.5.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.1.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Further notes on Compatibility&lt;/h4&gt; &#xA;&lt;p&gt;Releases v1.1.x:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;From v1.1.0 to v1.1.5, releases are fully compatibile with Laravel 5.5, 5.6, 5.7, 5.8 or 6.0.&lt;/li&gt; &#xA; &lt;li&gt;From v1.1.6+ releases v1.1.x are only compatible with Laravel 5.5 in order to run tests correctly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To date, releases v1.1.6+, v1.2.x, v1.3.x, v1.4.x, v2.x and v3.x are functionally equivalent. Releases have been separated in order to run integration tests with the corresponding version of the Laravel framework.&lt;/p&gt; &#xA;&lt;p&gt;However, with the release of Laravel 8, releases v1.1.14, v1.2.8, v1.3.8 and v1.4.8 are the last releases including new features for the corresponding Laravel 5.x versions (bugfix support is still active for that versions). &lt;strong&gt;2021-02-13 UPDATE&lt;/strong&gt;: some last features for v1.1+ releases are still ongoing :)&lt;/p&gt; &#xA;&lt;p&gt;v1.0 requires Laravel 5.1, 5.2, 5.3 and 5.4 (no longer maintained and not tested versus laravel 5.4, however the usage of the package is the same as for 1.1)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2023-02-20 UPDATE&lt;/strong&gt;: From Laravel 10.x up, the package versions follow the same numbering.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Add gecche/laravel-multidomain as a requirement to composer.json:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;{&#xA;    &#34;require&#34;: {&#xA;        &#34;gecche/laravel-multidomain&#34;: &#34;12.*&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Update your packages with composer update or install with composer install.&lt;/p&gt; &#xA;&lt;p&gt;You can also add the package using &lt;code&gt;composer require gecche/laravel-multidomain&lt;/code&gt; and later specify the version you want.&lt;/p&gt; &#xA;&lt;p&gt;This package needs to override the detection of the HTTP domain in a minimal set of Laravel core functions at the very start of the bootstrap process in order to get the specific environment file. So this package needs a few more configuration steps than most Laravel packages.&lt;/p&gt; &#xA;&lt;p&gt;Installation steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;replace the whole Laravel container by modifying the following lines at the very top of the &lt;code&gt;bootstrap/app.php&lt;/code&gt; file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;//use Illuminate\Foundation\Application&#xA;use Gecche\Multidomain\Foundation\Application&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Override the &lt;code&gt;QueueServiceProvider&lt;/code&gt; with the extended one in the &lt;code&gt;config/app.php&lt;/code&gt; file as follows:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    &#39;providers&#39; =&amp;gt; \Illuminate\Support\ServiceProvider::defaultProviders()-&amp;gt;merge([&#xA;        // Package Service Providers...&#xA;    ])-&amp;gt;replace([&#xA;      \Illuminate\Queue\QueueServiceProvider::class =&amp;gt; \Gecche\Multidomain\Queue\QueueServiceProvider::class,&#xA;    ])-&amp;gt;merge([&#xA;        // Added Service Providers (Do not remove this line)...&#xA;    ])-&amp;gt;toArray(),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that if you changed the &lt;code&gt;config/app.php&lt;/code&gt; file due to other reasons, probably there is already the above &lt;code&gt;providers&lt;/code&gt; entry in that file and the only important line is the one which replaces the &lt;code&gt;QueueServiceProvider&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Publish the config file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;php artisan vendor:publish &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(This package makes use of the discovery feature.)&lt;/p&gt; &#xA;&lt;p&gt;Following the above steps, your application will be aware of the HTTP domain in which is running, both for HTTP and CLI requests, including queue support.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: in Laravel 11 the installation is simpler than before: if you use a previous version of Laravel, please check in the documentation the installation steps.&lt;/p&gt; &#xA;&lt;h4&gt;Laravel Horizon installation:&lt;/h4&gt; &#xA;&lt;p&gt;The package is compatible with Horizon, thatnks to community contributions. If you need to use this package together with Horizon you have to follow other two installation steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Laravel Horizon as usual&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Replace the Laravel Horizon import at the very top of the app/Providers/HorizonServiceProvider.php file.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;//use Laravel\Horizon\HorizonApplicationServiceProvider;&#xA;use Gecche\Multidomain\Horizon\HorizonApplicationServiceProvider;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;This package adds three commands to manage your application HTTP domains:&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;domain.add&lt;/code&gt; artisan command&lt;/h4&gt; &#xA;&lt;p&gt;The main command is the &lt;code&gt;domain:add&lt;/code&gt; command which takes as argument the name of the HTTP domain to add to the application. Let us suppose we have two domains, &lt;code&gt;site1.com&lt;/code&gt; and &lt;code&gt;site2.com&lt;/code&gt;, sharing the same code.&lt;/p&gt; &#xA;&lt;p&gt;We simply do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php artisan domain:add site1.com &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php artisan domain:add site2.com &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These commands create two new environment files, &lt;code&gt;.env.site1.com&lt;/code&gt; and &lt;code&gt;.env.site2.com&lt;/code&gt;, in which you can put the specific configuration for each site (e.g. databases configuration, cache configuration and other configurations, as usually found in an environment file).&lt;/p&gt; &#xA;&lt;p&gt;The command also adds an entry in the &lt;code&gt;domains&lt;/code&gt; key in &lt;code&gt;config/domains.php&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;In addition, two new folders are created, &lt;code&gt;storage/site1_com/&lt;/code&gt; and &lt;code&gt;storage/site2_com/&lt;/code&gt;. They have the same folder structure as the main storage.&lt;/p&gt; &#xA;&lt;p&gt;Customizations to this &lt;code&gt;storage&lt;/code&gt; substructure must be matched by values in the &lt;code&gt;config/domain.php&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;domain.remove&lt;/code&gt; artisan command&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;domain:remove&lt;/code&gt; command removes the specified HTTP domain from the application by deleting its environment file. E.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php artisan domain:remove site2.com &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Adding the &lt;code&gt;force&lt;/code&gt; option will delete the domain storage folder.&lt;/p&gt; &#xA;&lt;p&gt;The command also removes the appropriate entry from, the &lt;code&gt;domains&lt;/code&gt; key in &lt;code&gt;config/domains.php&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;domain.update_env&lt;/code&gt; artisan command&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;domain:update_env&lt;/code&gt; command passes a json encoded array of data to update one or all of the environment files. These values will be added at the end of the appropriate .env.&lt;/p&gt; &#xA;&lt;p&gt;Update a single domain environment file by adding the &lt;code&gt;domain&lt;/code&gt; argument.&lt;/p&gt; &#xA;&lt;p&gt;When the &lt;code&gt;domain&lt;/code&gt; argument is absent, the command updates all the environment files, including the standard &lt;code&gt;.env&lt;/code&gt; one.&lt;/p&gt; &#xA;&lt;p&gt;The list of domains to be updated is maintained in the &lt;code&gt;domain.php&lt;/code&gt; config file.&lt;/p&gt; &#xA;&lt;p&gt;E.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php artisan domain:update_env --domain_values=&#39;{&#34;TOM_DRIVER&#34;:&#34;TOMMY&#34;}&#39; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will add the line &lt;code&gt;TOM_DRIVER=TOMMY&lt;/code&gt; to all the domain environment files.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;domain.list&lt;/code&gt; artisan command&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;domain:list&lt;/code&gt; command lists the currently installed domains, with their .env file and storage path dir.&lt;/p&gt; &#xA;&lt;p&gt;The list is maintained in the &lt;code&gt;domains&lt;/code&gt; key of the &lt;code&gt;config/domain.php&lt;/code&gt; config file.&lt;/p&gt; &#xA;&lt;p&gt;This list is automatically updated at every &lt;code&gt;domain:add&lt;/code&gt; and &lt;code&gt;domain:remove&lt;/code&gt; commands run.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;config:cache&lt;/code&gt; artisan command&lt;/h4&gt; &#xA;&lt;p&gt;The config:cache artisan command can be used with this package in the same way as any other artisan command.&lt;/p&gt; &#xA;&lt;p&gt;Note that this command will generate a file config.php file for each domain under which the command has been executed. I.e. the command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php artisan config:cache --domain=site2.com &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will generate the file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;config-site2_com.php &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Further information&lt;/h3&gt; &#xA;&lt;p&gt;At run-time, the current HTTP domain is maintained in the laravel container and can be accessed by its &lt;code&gt;domain()&lt;/code&gt; method added by this package.&lt;/p&gt; &#xA;&lt;p&gt;A &lt;code&gt;domainList()&lt;/code&gt; method is available. It returns an associative array containing the installed domains info, similar to the &lt;code&gt;domain.list&lt;/code&gt; command above.&lt;/p&gt; &#xA;&lt;p&gt;E.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[ &#xA;   site1.com =&amp;gt; [&#xA;       &#39;storage_path&#39; =&amp;gt; &amp;lt;LARAVEL-STORAGE-PATH&amp;gt;/site1_com,&#xA;       &#39;env&#39; =&amp;gt; &#39;.env.site1.com&#39;&#xA;   ]&#xA;] &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Distinguishing between HTTP domains in web pages&lt;/h4&gt; &#xA;&lt;p&gt;For each HTTP request received by the application, the specific environment file is loaded and the specific storage folder is used.&lt;/p&gt; &#xA;&lt;p&gt;If no specific environment file and/or storage folder is found, the standard one is used.&lt;/p&gt; &#xA;&lt;p&gt;The detection of the right HTTP domain is done by using the &lt;code&gt;$_SERVER[&#39;SERVER_NAME&#39;]&lt;/code&gt; PHP variable.&lt;/p&gt; &#xA;&lt;p&gt;IMPORTANT NOTE: in some execution environments $_SERVER[&#39;SERVER_NAME&#39;] is not instantiated, so this package does not work properly until you customize the detection of HTTP domains as described below.&lt;/p&gt; &#xA;&lt;h4&gt;Customizing the detection of HTTP domains&lt;/h4&gt; &#xA;&lt;p&gt;Starting from release 1.1.15, the detection of HTTP domains can be customized passing a &lt;code&gt;Closure&lt;/code&gt; as the &lt;code&gt;domain_detection_function_web&lt;/code&gt; entry of the new &lt;code&gt;domainParams&lt;/code&gt; argument of &lt;code&gt;Application&lt;/code&gt;&#39;s constructor. In the following example, the HTTP domain detection relies upon &lt;code&gt;$_SERVER[&#39;HTTP_HOST&#39;]&lt;/code&gt; instead of &lt;code&gt;$_SERVER[&#39;SERVER_NAME&#39;]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;//use Illuminate\Foundation\Application;&#xA;use Gecche\Multidomain\Foundation\Application;&#xA;use Illuminate\Foundation\Configuration\Exceptions;&#xA;use Illuminate\Foundation\Configuration\Middleware;&#xA;&#xA;$environmentPath = null;&#xA;&#xA;$domainParams = [&#xA;    &#39;domain_detection_function_web&#39; =&amp;gt; function() {&#xA;        return \Illuminate\Support\Arr::get($_SERVER,&#39;HTTP_HOST&#39;);&#xA;    }&#xA;];&#xA;&#xA;return Application::configure(basePath: dirname(__DIR__),&#xA;    environmentPath: $environmentPath,&#xA;    domainParams: $domainParams)&#xA;    -&amp;gt;withRouting(&#xA;        web: __DIR__.&#39;/../routes/web.php&#39;,&#xA;        commands: __DIR__.&#39;/../routes/console.php&#39;,&#xA;        health: &#39;/up&#39;,&#xA;    )&#xA;    -&amp;gt;withMiddleware(function (Middleware $middleware) {&#xA;        //&#xA;    })&#xA;    -&amp;gt;withExceptions(function (Exceptions $exceptions) {&#xA;        //&#xA;    })-&amp;gt;create();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using multi domains in artisan commands&lt;/h4&gt; &#xA;&lt;p&gt;In order to distinguishing between domains, each artisan command accepts a new option: &lt;code&gt;domain&lt;/code&gt;. E.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php artisan list --domain=site1.com &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command will use the corresponding domain settings.&lt;/p&gt; &#xA;&lt;h4&gt;About queues&lt;/h4&gt; &#xA;&lt;p&gt;The artisan commands &lt;code&gt;queue:work&lt;/code&gt; and &lt;code&gt;queue:listen&lt;/code&gt; commands have been updated to accept a new &lt;code&gt;domain&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php artisan queue:work --domain=site1.com &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As usual, the above command will use the corresponding domain settings.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that if, for example, you are using the &lt;code&gt;database&lt;/code&gt; driver and you have two domains sharing the same db, you should use two distinct queues if you want to manage the jobs of each domain separately.&lt;/p&gt; &#xA;&lt;p&gt;For example, you could:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;put in your .env files a default queue for each domain, e.g. &lt;code&gt;QUEUE_DEFAULT=default1&lt;/code&gt; for site1.com and &lt;code&gt;QUEUE_DEFAULT=default2&lt;/code&gt; for site2.com&lt;/li&gt; &#xA; &lt;li&gt;update the &lt;code&gt;queue.php&lt;/code&gt; config file by changing the default queue accordingly:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#39;database&#39; =&amp;gt; [&#xA;    &#39;driver&#39; =&amp;gt; &#39;database&#39;,&#xA;    &#39;table&#39; =&amp;gt; &#39;jobs&#39;,&#xA;    &#39;queue&#39; =&amp;gt; env(&#39;QUEUE_DEFAULT&#39;,&#39;default&#39;),&#xA;    &#39;retry_after&#39; =&amp;gt; 90,&#xA;],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;launch two distinct workers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt; php artisan queue:work --domain=site1.com --queue=default1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; php artisan queue:work --domain=site1.com --queue=default2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Obviously, the same can be done for each other queue driver, apart from the &lt;code&gt;sync&lt;/code&gt; driver.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;storage:link&lt;/code&gt; command&lt;/h4&gt; &#xA;&lt;p&gt;If you make use of the &lt;code&gt;storage:link&lt;/code&gt; command and you want a distinct symbolic link for each domain, you have to create them manually because to date such command always creates a link named &lt;code&gt;storage&lt;/code&gt; and that name is hard coded in the command. Extending the &lt;code&gt;storage:link&lt;/code&gt; command allowing to choose the name is outside the scope of this package (and I hope it will be done directly in future versions of Laravel).&lt;/p&gt; &#xA;&lt;p&gt;A way to obtain multiple storage links could be the following. Let us suppose to have two domains, namely &lt;code&gt;site1.com&lt;/code&gt; and &lt;code&gt;site2.com&lt;/code&gt; with associated storage folders &lt;code&gt;storage/site1_com&lt;/code&gt; and &lt;code&gt;storage/site2_com&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;We manually create links for each domain:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;ln -s storage/site1_com/app/public public/storage-site1_com &#xA;ln -s storage/site2_com/app/public public/storage-site2_com &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;In &lt;code&gt;.env.site1.com&lt;/code&gt; and &lt;code&gt;.env.site2.com&lt;/code&gt; we add an entry, e.g., for the first domain:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;APP_PUBLIC_STORAGE=-site1_com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;In the &lt;code&gt;filesystems.php&lt;/code&gt; config file we change as follows:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#39;public&#39; =&amp;gt; [&#xA;    &#39;driver&#39; =&amp;gt; &#39;local&#39;,&#xA;    &#39;root&#39; =&amp;gt; storage_path(&#39;app/public&#39;),&#xA;    &#39;url&#39; =&amp;gt; env(&#39;APP_URL&#39;).&#39;/storage&#39;.env(&#39;APP_PUBLIC_STORAGE&#39;),&#xA;    &#39;visibility&#39; =&amp;gt; &#39;public&#39;,&#xA;],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Furthermore, if you are using the package in a Single Page Application (SPA) setting, you could better handling distinct public resources for each domain via .htaccess or similar solutions as pointed out by &lt;a href=&#34;https://github.com/Scaenicus&#34;&gt;Scaenicus&lt;/a&gt; in his &lt;a href=&#34;https://github.com/gecche/laravel-multidomain/issues/11#issuecomment-559822284&#34;&gt;.htaccess solution&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Storing environment files in a custom folder&lt;/h4&gt; &#xA;&lt;p&gt;Starting from version 1.1.11 a second argument has been added to the Application constructor in order to choose the folder where to place the environment files: if you have tens of domains, it is not very pleasant to have environment files in the root Laravel&#39;s app folder.&lt;/p&gt; &#xA;&lt;p&gt;So, if you want to use a different folder simply add it at the very top of the &lt;code&gt;bootstrap/app.php&lt;/code&gt; file. for example, if you want to add environment files to the &lt;code&gt;envs&lt;/code&gt; subfolder, simply do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;//use Illuminate\Foundation\Application;&#xA;use Gecche\Multidomain\Foundation\Application;&#xA;use Illuminate\Foundation\Configuration\Exceptions;&#xA;use Illuminate\Foundation\Configuration\Middleware;&#xA;&#xA;$environmentPath = dirname(__DIR__) . DIRECTORY_SEPARATOR . &#39;envs&#39;;&#xA;&#xA;$domainParams = [];&#xA;&#xA;return Application::configure(basePath: dirname(__DIR__),&#xA;    environmentPath: $environmentPath,&#xA;    domainParams: $domainParams)&#xA;    -&amp;gt;withRouting(&#xA;        web: __DIR__.&#39;/../routes/web.php&#39;,&#xA;        commands: __DIR__.&#39;/../routes/console.php&#39;,&#xA;        health: &#39;/up&#39;,&#xA;    )&#xA;    -&amp;gt;withMiddleware(function (Middleware $middleware) {&#xA;        //&#xA;    })&#xA;    -&amp;gt;withExceptions(function (Exceptions $exceptions) {&#xA;        //&#xA;    })-&amp;gt;create();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do not specify the second argument, the standard folder is assumed. Please note that if you specify a folder, also the standard &lt;code&gt;.env&lt;/code&gt; file has to be placed in it&lt;/p&gt; &#xA;&lt;h4&gt;Default environment files and storage folders&lt;/h4&gt; &#xA;&lt;p&gt;If you try to run a web page or an shell command under a certain domain, e.g. &lt;code&gt;sub1.site1.com&lt;/code&gt; and there is no specific environment file for that domain, i.e. the file &lt;code&gt;.env.sub1.site1.com&lt;/code&gt; does not exist, the package will use the first available environment file by splitting the domain name with dots. In this example, the package searches for the the first environment file among the followings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.env.site1.com&#xA;.env.com&#xA;.env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The same logic applies to the storage folder as well.&lt;/p&gt; &#xA;&lt;h4&gt;About Laravel&#39;s Scheduler, Supervisor and some limitation&lt;/h4&gt; &#xA;&lt;p&gt;If in your setting you make use of the Laravel&#39;s Scheduler, remember that also the command &lt;code&gt;schedule:run&lt;/code&gt; has to be launched with the domain option. Hence, you have to launch a scheduler for each domain. At first one could think that one Scheduler instance should handle the commands launched for any domain, but the Scheduler itself is run within a Laravel Application, so the &#34;env&#34; under which it is run, automatically applies to each scheduled command and the &lt;code&gt;--domain&lt;/code&gt; option has no effect at all.&lt;/p&gt; &#xA;&lt;p&gt;The same applies to externals tools like Supervisor: if you use Supervisor for artisan commands, e.g. the &lt;code&gt;queue:work&lt;/code&gt; command, please be sure to prepare a command for each domain you want to handle.&lt;/p&gt; &#xA;&lt;p&gt;Due to the above, there are some cases in which the package can&#39;t work: in those settings where you don&#39;t have the possibility of changing for example the supervisor configuration rather than the &lt;code&gt;crontab&lt;/code&gt; entries for the scheduler. Such an example has been pointed out &lt;a href=&#34;https://github.com/gecche/laravel-multidomain/issues/21#issuecomment-600469868&#34;&gt;here&lt;/a&gt; in which a Docker instance has been used.&lt;/p&gt; &#xA;&lt;p&gt;Lastly, be aware that some Laravel commands call other Artisan commands from the inside, obviously without the &lt;code&gt;--domain&lt;/code&gt; option. The above situation does not work properly because the subcommand will work with the standard environment file. An example is the &lt;code&gt;migrate&lt;/code&gt; command when using the &lt;code&gt;--seed&lt;/code&gt; option.&lt;/p&gt;</summary>
  </entry>
</feed>