<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-29T01:46:33Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>laracraft-tech/laravel-schema-rules</title>
    <updated>2023-06-29T01:46:33Z</updated>
    <id>tag:github.com,2023-06-29:/laracraft-tech/laravel-schema-rules</id>
    <link href="https://github.com/laracraft-tech/laravel-schema-rules" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automatically generate Laravel validation rules based on your database table schema!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Laravel Schema Rules&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/laracraft-tech/laravel-schema-rules&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/laracraft-tech/laravel-schema-rules.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/laracraft-tech/laravel-schema-rules/actions/workflows/run-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/laracraft-tech/laravel-schema-rules/actions/workflows/run-tests.yml/badge.svg?branch=main&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/laracraft-tech/laravel-schema-rules/actions/workflows/fix-php-code-style-issues.yml&#34;&gt;&lt;img src=&#34;https://github.com/laracraft-tech/laravel-schema-rules/actions/workflows/fix-php-code-style-issues.yml/badge.svg?branch=main&#34; alt=&#34;Check &amp;amp; fix styling&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/laracraft-tech/laravel-schema-rules&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/l/laracraft-tech/laravel-schema-rules.svg?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!--[![Total Downloads](https://img.shields.io/packagist/dt/laracraft-tech/laravel-schema-rules.svg?style=flat-square)](https://packagist.org/packages/laracraft-tech/laravel-schema-rules)--&gt; &#xA;&lt;p&gt;Automatically generate basic Laravel validation rules based on your database table schema! Use these as a starting point to fine-tune and optimize your validation rules as needed.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require laracraft-tech/laravel-schema-rules --dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then publish the config file with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=&#34;schema-rules-config&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ToC&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/laracraft-tech/laravel-schema-rules/main/#generate-rules-for-a-whole-table&#34;&gt;&lt;code&gt;Generate rules for a whole table&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/laracraft-tech/laravel-schema-rules/main/#generate-rules-for-specific-columns&#34;&gt;&lt;code&gt;Generate rules for specific columns&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/laracraft-tech/laravel-schema-rules/main/#generate-form-request-class&#34;&gt;&lt;code&gt;Generate Form Request Class&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s say you&#39;ve migrated this fictional table:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Schema::create(&#39;persons&#39;, function (Blueprint $table) {&#xA;    $table-&amp;gt;id();&#xA;    $table-&amp;gt;string(&#39;first_name&#39;, 100);&#xA;    $table-&amp;gt;string(&#39;last_name&#39;, 100);&#xA;    $table-&amp;gt;string(&#39;email&#39;);&#xA;    $table-&amp;gt;foreignId(&#39;address_id&#39;)-&amp;gt;constrained();&#xA;    $table-&amp;gt;text(&#39;bio&#39;)-&amp;gt;nullable();&#xA;    $table-&amp;gt;enum(&#39;gender&#39;, [&#39;m&#39;, &#39;f&#39;, &#39;d&#39;]);&#xA;    $table-&amp;gt;date(&#39;birth&#39;);&#xA;    $table-&amp;gt;year(&#39;graduated&#39;);&#xA;    $table-&amp;gt;float(&#39;body_size&#39;);&#xA;    $table-&amp;gt;unsignedTinyInteger(&#39;children_count&#39;)-&amp;gt;nullable();&#xA;    $table-&amp;gt;integer(&#39;account_balance&#39;);&#xA;    $table-&amp;gt;unsignedInteger(&#39;net_income&#39;);&#xA;    $table-&amp;gt;boolean(&#39;send_newsletter&#39;)-&amp;gt;nullable();&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate rules for a whole table&lt;/h3&gt; &#xA;&lt;p&gt;Now if you run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;php artisan schema:generate-rules persons&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll get:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Schema-based validation rules for table &#34;persons&#34; have been generated!&#xA;Copy &amp;amp; paste these to your controller validation or form request or where ever your validation takes place:&#xA;[&#xA;    &#39;first_name&#39; =&amp;gt; [&#39;required&#39;, &#39;string&#39;, &#39;min:1&#39;, &#39;max:100&#39;],&#xA;    &#39;last_name&#39; =&amp;gt; [&#39;required&#39;, &#39;string&#39;, &#39;min:1&#39;, &#39;max:100&#39;],&#xA;    &#39;email&#39; =&amp;gt; [&#39;required&#39;, &#39;string&#39;, &#39;min:1&#39;, &#39;max:255&#39;],&#xA;    &#39;address_id&#39; =&amp;gt; [&#39;required&#39;, &#39;exists:addresses,id&#39;],&#xA;    &#39;bio&#39; =&amp;gt; [&#39;nullable&#39;, &#39;string&#39;, &#39;min:1&#39;],&#xA;    &#39;gender&#39; =&amp;gt; [&#39;required&#39;, &#39;string&#39;, &#39;in:m,f,d&#39;],&#xA;    &#39;birth&#39; =&amp;gt; [&#39;required&#39;, &#39;date&#39;],&#xA;    &#39;graduated&#39; =&amp;gt; [&#39;required&#39;, &#39;integer&#39;, &#39;min:1901&#39;, &#39;max:2155&#39;],&#xA;    &#39;body_size&#39; =&amp;gt; [&#39;required&#39;, &#39;numeric&#39;],&#xA;    &#39;children_count&#39; =&amp;gt; [&#39;nullable&#39;, &#39;integer&#39;, &#39;min:0&#39;, &#39;max:255&#39;],&#xA;    &#39;account_balance&#39; =&amp;gt; [&#39;required&#39;, &#39;integer&#39;, &#39;min:-2147483648&#39;, &#39;max:2147483647&#39;],&#xA;    &#39;net_income&#39; =&amp;gt; [&#39;required&#39;, &#39;integer&#39;, &#39;min:0&#39;, &#39;max:4294967295&#39;],&#xA;    &#39;send_newsletter&#39; =&amp;gt; [&#39;nullable&#39;, &#39;boolean&#39;]&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you may have noticed the float-column &lt;code&gt;body_size&lt;/code&gt;, just gets generated to &lt;code&gt;[&#39;required&#39;, &#39;numeric&#39;]&lt;/code&gt;. Proper rules for &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;decimal&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt;, are not yet implemented!&lt;/p&gt; &#xA;&lt;h3&gt;Generate rules for specific columns&lt;/h3&gt; &#xA;&lt;p&gt;You can also explicitly specify the columns:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;php artisan schema:generate-rules persons --columns first_name,last_name,email&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Which gives you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Schema-based validation rules for table &#34;persons&#34; have been generated!&#xA;Copy &amp;amp; paste these to your controller validation or form request or where ever your validation takes place:&#xA;[&#xA;    &#39;first_name&#39; =&amp;gt; [&#39;required&#39;, &#39;string&#39;, &#39;min:1&#39;, &#39;max:100&#39;],&#xA;    &#39;last_name&#39; =&amp;gt; [&#39;required&#39;, &#39;string&#39;, &#39;min:1&#39;, &#39;max:100&#39;],&#xA;    &#39;email&#39; =&amp;gt; [&#39;required&#39;, &#39;string&#39;, &#39;min:1&#39;, &#39;max:255&#39;]&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate Form Request Class&lt;/h3&gt; &#xA;&lt;p&gt;Optionally, you can add a &lt;code&gt;--create-request&lt;/code&gt; or &lt;code&gt;-c&lt;/code&gt; flag, which will create a form request class with the generated rules for you!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# creates app/Http/Requests/StorePersonRequest.php (store request is the default)&#xA;php artisan schema:generate-rules persons --create-request &#xA;&#xA;# creates/overwrites app/Http/Requests/StorePersonRequest.php&#xA;php artisan schema:generate-rules persons --create-request --force&#xA; &#xA;# creates app/Http/Requests/UpdatePersonRequest.php&#xA;php artisan schema:generate-rules persons --create-request --file UpdatePersonRequest&#xA;&#xA;# creates app/Http/Requests/Api/V1/StorePersonRequest.php&#xA;php artisan schema:generate-rules persons --create-request --file Api\\V1\\StorePersonRequest&#xA;&#xA;# creates/overwrites app/Http/Requests/Api/V1/StorePersonRequest.php (using shortcuts)&#xA;php artisan schema:generate-rules persons -cf --file Api\\V1\\StorePersonRequest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported Drivers&lt;/h2&gt; &#xA;&lt;p&gt;Currently, the supported database drivers are &lt;code&gt;MySQL&lt;/code&gt;, &lt;code&gt;PostgreSQL&lt;/code&gt;, and &lt;code&gt;SQLite&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please note, since each driver supports different data types and range specifications, the validation rules generated by this package may vary depending on the database driver you are using.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/laracraft-tech/laravel-schema-rules/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/laracraft-tech/laravel-schema-rules/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please review &lt;a href=&#34;https://raw.githubusercontent.com/laracraft-tech/security/policy&#34;&gt;our security policy&lt;/a&gt; on how to report security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/laracraft-tech&#34;&gt;Zacharias Creutznacher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/laracraft-tech/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/laracraft-tech/laravel-schema-rules/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>