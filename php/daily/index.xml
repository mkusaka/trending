<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-28T01:42:37Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>spatie/laravel-notification-log</title>
    <updated>2023-02-28T01:42:37Z</updated>
    <id>tag:github.com,2023-02-28:/spatie/laravel-notification-log</id>
    <link href="https://github.com/spatie/laravel-notification-log" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Log notifications sent by your Laravel app&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Log notifications sent by your Laravel app&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/spatie/laravel-notification-log&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/spatie/laravel-notification-log.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/spatie/laravel-notification-log/actions?query=workflow%3Arun-tests+branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/spatie/laravel-notification-log/run-tests.yml?branch=main&amp;amp;label=tests&amp;amp;style=flat-square&#34; alt=&#34;GitHub Tests Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/spatie/laravel-notification-log/actions?query=workflow%3A%22Fix+PHP+code+style+issues%22+branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/spatie/laravel-notification-log/fix-php-code-style-issues.yml?branch=main&amp;amp;label=code%20style&amp;amp;style=flat-square&#34; alt=&#34;GitHub Code Style Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/spatie/laravel-notification-log&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/spatie/laravel-notification-log.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This package will log all the notifications sent by your app. This will allow you to write logic based on the notifications your app has sent.&lt;/p&gt; &#xA;&lt;p&gt;If you want to create a list of all notifications sent to a user&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// returns a collection of `NotificationLogItem` models&#xA;$sentNotifications = $user-&amp;gt;loggedNotifications();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In a view, you could write this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-blade&#34;&gt;&amp;lt;ul&amp;gt;&#xA;@foreach($sentNotifications as $sentNotification)&#xA;    &amp;lt;li&amp;gt;{{ $sentNotification-&amp;gt;type }} at {{ $sentNotification-&amp;gt;created_at-&amp;gt;format(&#39;Y-m-d H:i:s&#39;) }}&amp;lt;/li&amp;gt;&#xA;@endforeach&#xA;&amp;lt;/ul&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The package also contains handy methods that allow you to make decisions based on the notifications sent. Here&#39;s an example, where we use the &lt;code&gt;wasAlreadySentTo&lt;/code&gt; method provided by the package in a &lt;code&gt;shouldSent&lt;/code&gt; method of a notification.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// in a notification&#xA;&#xA;public function shouldSend($notifiable)&#xA;{&#xA;      return ! $this&#xA;        -&amp;gt;wasAlreadySentTo($notifiable)&#xA;        -&amp;gt;inThePastMinutes(60);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can fully customize which notifications get logged and how they get logged.&lt;/p&gt; &#xA;&lt;h2&gt;Support us&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://spatie.be/github-ad-click/laravel-notification-log&#34;&gt;&lt;img src=&#34;https://github-ads.s3.eu-central-1.amazonaws.com/laravel-notification-log.jpg?t=1&#34; width=&#34;419px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We invest a lot of resources into creating &lt;a href=&#34;https://spatie.be/open-source&#34;&gt;best in class open source packages&lt;/a&gt;. You can support us by &lt;a href=&#34;https://spatie.be/open-source/support-us&#34;&gt;buying one of our paid products&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You&#39;ll find our address on &lt;a href=&#34;https://spatie.be/about-us&#34;&gt;our contact page&lt;/a&gt;. We publish all received postcards on &lt;a href=&#34;https://spatie.be/open-source/postcards&#34;&gt;our virtual postcard wall&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;All documentation is available &lt;a href=&#34;https://spatie.be/docs/laravel-notification-log&#34;&gt;on our documentation site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/laravel-notification-log/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/spatie/.github/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please review &lt;a href=&#34;https://raw.githubusercontent.com/spatie/security/policy&#34;&gt;our security policy&lt;/a&gt; on how to report security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/freekmurze&#34;&gt;Freek Van der Herten&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spatie/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/laravel-notification-log/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mchev/banhammer</title>
    <updated>2023-02-28T01:42:37Z</updated>
    <id>tag:github.com,2023-02-28:/mchev/banhammer</id>
    <link href="https://github.com/mchev/banhammer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Banhammer for Laravel offers a simple way to ban any Model by ID and by IP. It also allows to block requests by IP addresses.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Banhammer, a Model and IP ban package for Laravel&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/mchev/banhammer&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/mchev/banhammer.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mchev/banhammer/actions?query=workflow%3Arun-tests+branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/mchev/banhammer/run-tests.yml?branch=main&amp;amp;label=tests&amp;amp;style=flat-square&#34; alt=&#34;GitHub Tests Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mchev/banhammer&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/mchev/banhammer.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mchev/banhammer&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Package%20for%20Laravel-grey.svg?style=flat-square&amp;amp;logo=laravel&amp;amp;logoColor=white&#34; alt=&#34;Package for laravel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Banhammer for Laravel offers a very simple way to ban any Model by ID and by IP. It also allows to block requests by IP addresses.&lt;/p&gt; &#xA;&lt;p&gt;Banned models can have an expiration date and will be automatically unbanned using the Scheduler.&lt;/p&gt; &#xA;&lt;h2&gt;Version Compatibility&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Laravel&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Banhammer&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;^9.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.x.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;^10.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.x.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require mchev/banhammer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the migrations with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can publish the config file with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=&#34;banhammer-config&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is possible to define the table name and the fallback_url in the &lt;code&gt;config/ban.php&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To make a model bannable, add the &lt;code&gt;Mchev\Banhammer\Traits\Bannable&lt;/code&gt; trait to the model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace App\Models;&#xA;&#xA;use Illuminate\Foundation\Auth\User as Authenticatable;&#xA;use Mchev\Banhammer\Traits\Bannable;&#xA;&#xA;class User extends Authenticatable&#xA;{&#xA;    use Bannable;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can add the Bannable trait on as many models as you want (Team, Group, User, etc.).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Ban / Unban&lt;/h3&gt; &#xA;&lt;p&gt;Simple ban&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$user-&amp;gt;ban();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Without the expired_at attribute specified, the user will be banned forever.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;IP Ban&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$user-&amp;gt;ban([&#xA;&#x9;&#39;ip&#39; =&amp;gt; $user-&amp;gt;ip,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Full&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All attributes are optional&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$model-&amp;gt;ban([&#xA;&#x9;&#39;created_by_type&#39; =&amp;gt; &#39;App\Models\User&#39;,&#xA;&#x9;&#39;created_by_id&#39; =&amp;gt; 1,&#xA;&#x9;&#39;comment&#39; =&amp;gt; &#34;You&#39;ve been evil&#34;,&#xA;&#x9;&#39;ip&#39; =&amp;gt; &#34;8.8.8.8&#34;,&#xA;&#x9;&#39;expired_at&#39; =&amp;gt; Carbon::now()-&amp;gt;addDays(7)&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Shorthand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$user-&amp;gt;banUntil(&#39;2 days&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;List model bans&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$bans = $model-&amp;gt;bans();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check if model is banned.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can create custom middlewares using these methods.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$model-&amp;gt;isBanned();&#xA;$model-&amp;gt;isNotBanned();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Filters&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$bannedTeams = Team::banned()-&amp;gt;get(); &#xA;$notBannedTeams = Team::notBanned()-&amp;gt;get();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unban&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$user-&amp;gt;unban();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;IP&lt;/h3&gt; &#xA;&lt;p&gt;Ban IPs&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mchev\Banhammer\IP;&#xA;&#xA;IP::ban(&#34;8.8.8.8&#34;);&#xA;IP::ban([&#34;8.8.8.8&#34;, &#34;4.4.4.4&#34;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unban IPs&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mchev\Banhammer\IP;&#xA;&#xA;IP::unban(&#34;8.8.8.8&#34;);&#xA;IP::unban([&#34;8.8.8.8&#34;, &#34;4.4.4.4&#34;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;List all banned IPs&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mchev\Banhammer\IP;&#xA;&#xA;$ips = IP::banned()-&amp;gt;get(); // Collection&#xA;$ips = IP::banned()-&amp;gt;pluck(&#39;ip&#39;)-&amp;gt;toArray(); // Array&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Middleware&lt;/h3&gt; &#xA;&lt;p&gt;To prevent banned users from accessing certain parts of your application, simply add the &lt;code&gt;auth.banned&lt;/code&gt; middleware on the concerned routes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Route::middleware([&#39;auth.banned&#39;])-&amp;gt;group(function () {&#xA;    // ...&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To prevent banned ips from accessing certain parts of your application, simply add the &lt;code&gt;ip.banned&lt;/code&gt; middleware on the concerned routes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Route::middleware([&#39;ip.banned&#39;])-&amp;gt;group(function () {&#xA;    // ...&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To block and logout banned Users or IP, add the &lt;code&gt;logout.banned&lt;/code&gt; middleware:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Route::middleware([&#39;logout.banned&#39;])-&amp;gt;group(function () {&#xA;    // ...&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you use the &lt;code&gt;logout.banned&lt;/code&gt; middleware, it is not necessary to cumulate the other middlewares.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you want to block IPs on every HTTP request of your application, list &lt;code&gt;Mchev\Banhammer\Middleware\IPBanned&lt;/code&gt; in the &lt;code&gt;$middleware&lt;/code&gt; property of your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; class.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Scheduler&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠ IMPORTANT&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In order to be able to automatically delete expired bans, you must have a cron job set up on your server to run the Laravel Scheduled Jobs&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://laravel.com/docs/9.x/scheduling#running-the-scheduler&#34;&gt;Running the scheduler&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://forge.laravel.com/docs/1.0/resources/scheduler.html#laravel-scheduled-jobs&#34;&gt;Configure Scheduler on Forge&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Events&lt;/h3&gt; &#xA;&lt;p&gt;If entity is banned &lt;code&gt;Mchev\Banhammer\Events\ModelWasBanned&lt;/code&gt; event is fired.&lt;/p&gt; &#xA;&lt;p&gt;Is entity is unbanned &lt;code&gt;Mchev\Banhammer\Events\ModelWasUnbanned&lt;/code&gt; event is fired.&lt;/p&gt; &#xA;&lt;h3&gt;MISC&lt;/h3&gt; &#xA;&lt;p&gt;To manually unban expired bans :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mchev\Banhammer\Banhammer;&#xA;&#xA;Banhammer::unbanExpired();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can use the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan banhammer:unban&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To permanently delete all the expired bans :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mchev\Banhammer\Banhammer;&#xA;&#xA;Banhammer::clear();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can use the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan banhammer:clear&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/mchev/banhammer/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; More tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Block IP range&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Auto block IP (Rate Limiting)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cache&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Ban history() or archive() method&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/mchev/banhammer/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please review &lt;a href=&#34;https://raw.githubusercontent.com/mchev/security/policy&#34;&gt;our security policy&lt;/a&gt; on how to report security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mchev&#34;&gt;mchev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mchev/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/mchev/banhammer/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>