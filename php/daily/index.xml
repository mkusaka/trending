<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-17T01:35:52Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zoujingli/ip2region</title>
    <updated>2024-03-17T01:35:52Z</updated>
    <id>tag:github.com,2024-03-17:/zoujingli/ip2region</id>
    <link href="https://github.com/zoujingli/ip2region" rel="alternate"></link>
    <summary type="html">&lt;p&gt;准确率99.9%的ip地址定位库&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/zoujingli/ip2region&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/zoujingli/ip2region/v/stable&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/zoujingli/ip2region&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/zoujingli/ip2region/downloads&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/zoujingli/ip2region&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/zoujingli/ip2region/d/monthly&#34; alt=&#34;Monthly Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/zoujingli/ip2region&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/zoujingli/ip2region/d/daily&#34; alt=&#34;Daily Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/ip2region&#34;&gt;&lt;img src=&#34;http://poser.pugx.org/zoujingli/ip2region/require/php&#34; alt=&#34;PHP Version Require&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/zoujingli/ip2region&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/zoujingli/ip2region/license&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;本库基于 &lt;a href=&#34;https://github.com/lionsoul2014/ip2region&#34;&gt;ip2region&lt;/a&gt; 简单整合，方便 &lt;code&gt;PHP&lt;/code&gt; 项目使用 &lt;code&gt;Composer&lt;/code&gt; 来安装。&lt;/p&gt; &#xA;&lt;h1&gt;通过 Composer 安装&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;composer require zoujingli/ip2region&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;在项目中快速调用&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$ip2region = new \Ip2Region();&#xA;$result = $ip2region-&amp;gt;simple(&#39;8.8.8.8&#39;);&#xA;var_dump($result);&#xA;&#xA;// 高级用法可以直接调用 XdbSearcher 类。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Ip2region 是什么&lt;/h1&gt; &#xA;&lt;p&gt;ip2region v2.0 - 是一个离线IP地址定位库和IP定位数据管理框架，10微秒级别的查询效率，提供了众多主流编程语言的 &lt;code&gt;xdb&lt;/code&gt; 数据生成和查询客户端实现。&lt;/p&gt; &#xA;&lt;h1&gt;Ip2region 特性&lt;/h1&gt; &#xA;&lt;h3&gt;1、标准化的数据格式&lt;/h3&gt; &#xA;&lt;p&gt;每个 ip 数据段的 region 信息都固定了格式：&lt;code&gt;国家|区域|省份|城市|ISP&lt;/code&gt;，只有中国的数据绝大部分精确到了城市，其他国家部分数据只能定位到国家，后前的选项全部是0。&lt;/p&gt; &#xA;&lt;h3&gt;2、数据去重和压缩&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;xdb&lt;/code&gt; 格式生成程序会自动去重和压缩部分数据，默认的全部 IP 数据，生成的 ip2region.xdb 数据库是 11MiB，随着数据的详细度增加数据库的大小也慢慢增大。&lt;/p&gt; &#xA;&lt;h3&gt;3、极速查询响应&lt;/h3&gt; &#xA;&lt;p&gt;即使是完全基于 &lt;code&gt;xdb&lt;/code&gt; 文件的查询，单次查询响应时间在十微秒级别，可通过如下两种方式开启内存加速查询：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;vIndex&lt;/code&gt; 索引缓存 ：使用固定的 &lt;code&gt;512KiB&lt;/code&gt; 的内存空间缓存 vector index 数据，减少一次 IO 磁盘操作，保持平均查询效率稳定在10-20微秒之间。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;xdb&lt;/code&gt; 整个文件缓存：将整个 &lt;code&gt;xdb&lt;/code&gt; 文件全部加载到内存，内存占用等同于 &lt;code&gt;xdb&lt;/code&gt; 文件大小，无磁盘 IO 操作，保持微秒级别的查询效率。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;4、IP 数据管理框架&lt;/h3&gt; &#xA;&lt;p&gt;v2.0 格式的 &lt;code&gt;xdb&lt;/code&gt; 支持亿级别的 IP 数据段行数，region 信息也可以完全自定义，例如：你可以在 region 中追加特定业务需求的数据，例如：GPS信息/国际统一地域信息编码/邮编等。也就是你完全可以使用 ip2region 来管理你自己的 IP 定位数据。&lt;/p&gt; &#xA;&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据查询&lt;/h1&gt; &#xA;&lt;p&gt;API 介绍，使用文档和测试程序请参考对应 &lt;code&gt;searcher&lt;/code&gt; 查询客户端下的 ReadMe 介绍，全部查询 binding 实现情况如下：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Ok?&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;状态&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;编程语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;贡献者&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/binding/golang&#34;&gt;golang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;golang xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/binding/php&#34;&gt;php&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/binding/java&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;java xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/binding/lua&#34;&gt;lua&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;纯 lua xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/binding/c&#34;&gt;c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ANSC c xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/binding/lua_c&#34;&gt;lua_c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;lua c 扩展 xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/binding/rust&#34;&gt;rust&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rust xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/binding/python&#34;&gt;python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;python xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/luckydog6132&#34;&gt;厉害的花花&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/binding/nodejs&#34;&gt;nodejs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nodejs xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/wujjpp&#34;&gt;Wu Jian Ping&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/binding/csharp&#34;&gt;csharp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;csharp xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/malus2077&#34;&gt;Alen Lee&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/binding/php7_ext&#34;&gt;php_ext&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php c 扩展 xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待确定&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/binding/nginx&#34;&gt;nginx&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nginx 扩展 xdb 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待确定&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据生成&lt;/h1&gt; &#xA;&lt;p&gt;API 介绍，使用文档和测试程序请参考对应 &lt;code&gt;maker&lt;/code&gt; 生成程序下的 ReadMe 介绍，全部生成 maker 实现情况如下：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Ok?&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;状态&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;编程语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;贡献者&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/maker/golang&#34;&gt;golang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;golang xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/maker/java&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;java xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/maker/c&#34;&gt;c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ANSC c xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/maker/python&#34;&gt;python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;python xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/leolin49&#34;&gt;leolin49&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014/ip2region/raw/master/maker/csharp&#34;&gt;csharp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;csharp xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/malus2077&#34;&gt;Alan Lee&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;并发查询必读&lt;/h1&gt; &#xA;&lt;p&gt;全部查询客户端的 search 接口都 &lt;b&gt;不是&lt;/b&gt; 并发安全的实现，不同进程/线程/协程需要通过创建不同的查询对象来安全使用，并发量很大的情况下，基于文件查询的方式可能会导致打开文件数过多的错误，请修改内核的最大允许打开文件数(fs.file-max=一个更高的值)，或者将整个xdb加载到内存进行安全并发使用。&lt;/p&gt; &#xA;&lt;h1&gt;相关备注&lt;/h1&gt; &#xA;&lt;h3&gt;1、使用声明&lt;/h3&gt; &#xA;&lt;p&gt;ip2region 重点在于&lt;b&gt;研究 IP 定位数据的存储设计和各种语言的查询实现&lt;/b&gt;，并没有原始 IP 数据的支撑，本项目不保证及时的数据更新，没有也不会有商用版本，你可以使用自定义的数据导入 ip2region 进行管理。&lt;/p&gt; &#xA;&lt;h3&gt;2、技术交流&lt;/h3&gt; &#xA;&lt;p&gt;ip2region 微信交流群，请先加微信：lionsoul2014 (请备注 ip2region)&lt;/p&gt; &#xA;&lt;h3&gt;3、数据更新&lt;/h3&gt; &#xA;&lt;p&gt;基于检测算法的数据更新方式视频分享：&lt;a href=&#34;https://www.bilibili.com/video/BV1934y1E7Q5/&#34;&gt;数据更新实现视频分享 - part1&lt;/a&gt;，&lt;a href=&#34;https://www.bilibili.com/video/BV1pF411j7Aw/&#34;&gt;数据更新实现视频分享 - part2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;4、数据结构&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;xdb 数据结构分析：&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU4MDc2MzQ5OA==&amp;amp;mid=2247483696&amp;amp;idx=1&amp;amp;sn=6e9e138e86cf18245656c54ff4be3129&amp;amp;chksm=fd50ab35ca2722239ae7c0bb08efa44f499110c810227cbad3a16f36ebc1c2afc58eb464a57c#rd&#34;&gt;“ip2region xdb 数据结构和查询过程详解“&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xdb 查询过程分析：&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU4MDc2MzQ5OA==&amp;amp;mid=2247483696&amp;amp;idx=1&amp;amp;sn=6e9e138e86cf18245656c54ff4be3129&amp;amp;chksm=fd50ab35ca2722239ae7c0bb08efa44f499110c810227cbad3a16f36ebc1c2afc58eb464a57c#rd&#34;&gt;“ip2region xdb 数据结构和查询过程详解”&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xdb 生成过程分析：&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU4MDc2MzQ5OA==&amp;amp;mid=2247483718&amp;amp;idx=1&amp;amp;sn=92e552f3bba44a97ca661da244f35574&amp;amp;chksm=fd50ab43ca2722559733ed4e1082f239f381aaa881f9dbeb479174936145522696d9d200531e#rd&#34;&gt;“ip2region xdb 二进制数据生成过程详解”&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;关于 ip2region v2.0 的 PHP 用法&lt;/h1&gt; &#xA;&lt;h3&gt;完全基于文件的查询&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$dbFile = &#34;ip2region.xdb file path&#34;;&#xA;try {&#xA;    $searcher = XdbSearcher::newWithFileOnly($dbFile);&#xA;} catch (Exception $e) {&#xA;    printf(&#34;failed to create searcher with &#39;%s&#39;: %s\n&#34;, $dbFile, $e);&#xA;    return;&#xA;}&#xA;&#xA;$ip = &#39;1.2.3.4&#39;;&#xA;$sTime = XdbSearcher::now();&#xA;$region = $searcher-&amp;gt;search($ip);&#xA;if ($region === null) {&#xA;    // something is wrong&#xA;    printf(&#34;failed search(%s)\n&#34;, $ip);&#xA;    return;&#xA;}&#xA;&#xA;printf(&#34;{region: %s, took: %.5f ms}\n&#34;, $region, XdbSearcher::now() - $sTime);&#xA;&#xA;// 备注：并发使用，每个线程或者协程需要创建一个独立的 searcher 对象。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;缓存 &lt;code&gt;VectorIndex&lt;/code&gt; 索引&lt;/h3&gt; &#xA;&lt;p&gt;如果你的 php 母环境支持，可以预先加载 vectorIndex 缓存，然后做成全局变量，每次创建 Searcher 的时候使用全局的 vectorIndex，可以减少一次固定的 IO 操作从而加速查询，减少 io 压力。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// 1、从 dbPath 加载 VectorIndex 缓存，把下述的 vIndex 变量缓存到内存里面。&#xA;$vIndex = XdbSearcher::loadVectorIndexFromFile($dbPath);&#xA;if ($vIndex === null) {&#xA;    printf(&#34;failed to load vector index from &#39;%s&#39;\n&#34;, $dbPath);&#xA;    return;&#xA;}&#xA;&#xA;// 2、使用全局的 vIndex 创建带 VectorIndex 缓存的查询对象。&#xA;try {&#xA;    $searcher = XdbSearcher::newWithVectorIndex($dbFile, $vIndex);&#xA;} catch (Exception $e) {&#xA;    printf(&#34;failed to create vectorIndex cached searcher with &#39;%s&#39;: %s\n&#34;, $dbFile, $e);&#xA;    return;&#xA;}&#xA;&#xA;// 3、查询&#xA;$sTime = XdbSearcher::now();&#xA;$region = $searcher-&amp;gt;search(&#39;1.2.3.4&#39;);&#xA;if ($region === null) {&#xA;    printf(&#34;failed search(1.2.3.4)\n&#34;);&#xA;    return;&#xA;}&#xA;&#xA;printf(&#34;{region: %s, took: %.5f ms}\n&#34;, $region, XdbSearcher::now() - $sTime);&#xA;&#xA;// 备注：并发使用，每个线程或者协程需要创建一个独立的 searcher 对象，但是都共享统一的只读 vectorIndex。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;缓存整个 &lt;code&gt;xdb&lt;/code&gt; 数据&lt;/h3&gt; &#xA;&lt;p&gt;如果你的 PHP 母环境支持，可以预先加载整个 &lt;code&gt;xdb&lt;/code&gt; 的数据到内存，这样可以实现完全基于内存的查询，类似之前的 memory search 查询。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// 1、从 dbPath 加载整个 xdb 到内存。&#xA;$cBuff = XdbSearcher::loadContentFromFile($dbPath);&#xA;if ($cBuff === null) {&#xA;    printf(&#34;failed to load content buffer from &#39;%s&#39;\n&#34;, $dbPath);&#xA;    return;&#xA;}&#xA;&#xA;// 2、使用全局的 cBuff 创建带完全基于内存的查询对象。&#xA;try {&#xA;    $searcher = XdbSearcher::newWithBuffer($cBuff);&#xA;} catch (Exception $e) {&#xA;    printf(&#34;failed to create buffer cached searcher: %s\n&#34;, $dbFile, $e);&#xA;    return;&#xA;}&#xA;&#xA;// 3、查询&#xA;$sTime = XdbSearcher::now();&#xA;$region = $searcher-&amp;gt;search(&#39;1.2.3.4&#39;);&#xA;if ($region === null) {&#xA;    printf(&#34;failed search(1.2.3.4)\n&#34;);&#xA;    return;&#xA;}&#xA;&#xA;printf(&#34;{region: %s, took: %.5f ms}\n&#34;, $region, XdbSearcher::now() - $sTime);&#xA;&#xA;// 备注：并发使用，用整个 xdb 缓存创建的 searcher 对象可以安全用于并发。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;查询测试&lt;/h1&gt; &#xA;&lt;p&gt;通过 &lt;code&gt;search_test.php&lt;/code&gt; 脚本来进行查询测试：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;➜  php git:(v2.0_xdb) ✗ php ./search_test.php&#xA;php ./search_test.php [command options]&#xA;options:&#xA; --db string             ip2region binary xdb file path&#xA; --cache-policy string   cache policy: file/vectorIndex/content&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;例如：使用默认的 data/ip2region.xdb 进行查询测试：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;➜  php git:(v2.0_xdb) ✗ php ./search_test.php --db=../../data/ip2region.xdb --cache-policy=vectorIndex&#xA;ip2region xdb searcher test program, cachePolicy: vectorIndex&#xA;type &#39;quit&#39; to exit&#xA;ip2region&amp;gt;&amp;gt; 1.2.3.4&#xA;{region: 美国|0|华盛顿|0|谷歌, ioCount: 7, took: 0.04492 ms}&#xA;ip2region&amp;gt;&amp;gt; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;输入 ip 即可进行查询测试。也可以分别设置 &lt;code&gt;cache-policy&lt;/code&gt; 为 file/vectorIndex/content 来测试三种不同缓存实现的效率。&lt;/p&gt; &#xA;&lt;h1&gt;bench 测试&lt;/h1&gt; &#xA;&lt;p&gt;通过 &lt;code&gt;bench_test.php&lt;/code&gt; 脚本来进行自动 bench 测试，一方面确保 &lt;code&gt;xdb&lt;/code&gt; 文件没有错误，另一方面通过大量的查询测试平均查询性能：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;➜  php git:(v2.0_xdb) ✗ php ./bench_test.php&#xA;php ./bench_test.php [command options]&#xA;options:&#xA; --db string             ip2region binary xdb file path&#xA; --src string            source ip text file path&#xA; --cache-policy string   cache policy: file/vectorIndex/content&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;例如：通过默认的 data/ip2region.xdb 和 data/ip.merge.txt 来进行 bench 测试：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;➜  php git:(v2.0_xdb) ✗ php ./bench_test.php --db=../../data/ip2region.xdb --src=../../data/ip.merge.txt --cache-policy=vectorIndex&#xA;Bench finished, {cachePolicy: vectorIndex, total: 3417955, took: 15s, cost: 0.005 ms/op}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;可以通过设置 &lt;code&gt;cache-policy&lt;/code&gt; 参数来分别测试 file/vectorIndex/content 三种不同的缓存实现的的性能。 @Note：请注意 bench 使用的 src 文件需要是生成对应的 xdb 文件的相同的源文件。&lt;/p&gt;</summary>
  </entry>
</feed>