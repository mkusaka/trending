<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-14T01:40:23Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>c0ny1/upload-labs</title>
    <updated>2024-04-14T01:40:23Z</updated>
    <id>tag:github.com,2024-04-14:/c0ny1/upload-labs</id>
    <link href="https://github.com/c0ny1/upload-labs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个想帮你总结所有类型的上传漏洞的靶场&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img title=&#34;portainer&#34; src=&#34;https://raw.githubusercontent.com/c0ny1/upload-labs/master/img/logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img title=&#34;portainer&#34; src=&#34;https://img.shields.io/badge/version-0.1-brightgreen.svg?sanitize=true&#34;&gt; &lt;img title=&#34;portainer&#34; src=&#34;https://img.shields.io/badge/php-5.*-yellow.svg?sanitize=true&#34;&gt; &lt;img title=&#34;portainer&#34; src=&#34;https://img.shields.io/badge/license-MIT-red.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;upload-labs是一个使用php语言编写的，专门收集渗透测试和CTF中遇到的各种上传漏洞的靶场。旨在帮助大家对上传漏洞有一个全面的了解。目前一共20关，每一关都包含着不同上传方式。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;0x01 Screenshot&lt;/h2&gt; &#xA;&lt;h4&gt;1.1 主界面&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/c0ny1/upload-labs/master/doc/index.jpg&#34; alt=&#34;主界面&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;1.2 每一关&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/c0ny1/upload-labs/master/doc/pass.jpg&#34; alt=&#34;每一关&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;1.3 查看代码&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/c0ny1/upload-labs/master/doc/code.jpg&#34; alt=&#34;代码&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;0x02 Install&lt;/h2&gt; &#xA;&lt;h4&gt;2.1 环境要求&lt;/h4&gt; &#xA;&lt;p&gt;若要自己亲自搭建环境，请按照以下配置环境，方可正常运行每个Pass。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;配置项&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;配置&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;操作系统&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Window or Linux&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;推荐使用Windows，除了Pass-19必须在linux下，其余Pass都可以在Windows上运行&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PHP版本&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;推荐5.2.17&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;其他版本可能会导致部分Pass无法突破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PHP组件&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php_gd2,php_exif&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;部分Pass依赖这两个组件&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;中间件&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;设置Apache以moudel方式连接&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;2.2 Windows快速搭建&lt;/h4&gt; &#xA;&lt;p&gt;项目提供了一个Windows下,按照以上配置要求配置好的集成环境&lt;/p&gt; &#xA;&lt;p&gt;下载地址：&lt;a href=&#34;https://github.com/c0ny1/upload-labs/releases&#34;&gt;https://github.com/c0ny1/upload-labs/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;集成环境绿色免安装，解压即可使用。&lt;/p&gt; &#xA;&lt;h4&gt;2.3 Linux快速搭建&lt;/h4&gt; &#xA;&lt;p&gt;创建镜像&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd upload-labs/docker&#xA;$ docker build -t upload-labs .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;或&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker pull c0ny1/upload-labs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;创建容器&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$  docker run -d -p 80:80 upload-labs:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;0x03 Summary&lt;/h2&gt; &#xA;&lt;h4&gt;3.1 靶机包含漏洞类型分类&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/c0ny1/upload-labs/master/doc/mind-map.png&#34; alt=&#34;上传漏洞分类&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;3.2 如何判断上传漏洞类型?&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/c0ny1/upload-labs/master/doc/sum_up.png&#34; alt=&#34;判断上传漏洞类型&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;0x04 Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;感谢&lt;a href=&#34;https://github.com/xiaoxiaoki&#34;&gt;小小黄&lt;/a&gt;做的logo&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>