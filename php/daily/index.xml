<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-19T01:39:57Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LaravelDaily/laravel-invoices</title>
    <updated>2022-09-19T01:39:57Z</updated>
    <id>tag:github.com,2022-09-19:/LaravelDaily/laravel-invoices</id>
    <link href="https://github.com/LaravelDaily/laravel-invoices" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Laravel package to generate PDF invoices from various customizable parameters&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://banners.beyondco.de/Laravel%20Invoices.png?theme=light&amp;amp;packageManager=composer+require&amp;amp;packageName=laraveldaily%2Flaravel-invoices&amp;amp;pattern=architect&amp;amp;style=style_1&amp;amp;description=PDFs+made+easy&amp;amp;md=1&amp;amp;showWatermark=0&amp;amp;fontSize=100px&amp;amp;images=document-download&#34; alt=&#34;![Banner]&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Laravel Invoices&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/laraveldaily/laravel-invoices&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/laraveldaily/laravel-invoices/v/stable?2&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/laraveldaily/laravel-invoices&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/laraveldaily/laravel-invoices/downloads?2&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/laraveldaily/laravel-invoices&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/laraveldaily/laravel-invoices/v/unstable&#34; alt=&#34;Latest Unstable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/laraveldaily/laravel-invoices&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/laraveldaily/laravel-invoices/license&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/laraveldaily/laravel-invoices&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/v3%20maintenance-yes-green?style=flat&#34; alt=&#34;version 2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/laraveldaily/laravel-invoices&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/v2%20maintenance-no-red?style=flat&#34; alt=&#34;version 1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This Laravel package provides an easy to use interface to generate &lt;strong&gt;Invoice PDF files&lt;/strong&gt; with your provided data.&lt;/p&gt; &#xA;&lt;p&gt;Invoice file can be stored, downloaded, streamed on any of the filesystems you have configured. Supports different templates and locales.&lt;/p&gt; &#xA;&lt;p&gt;Originally package was developed on PHP 7.3.11 and Laravel 6.2, but should work on lower versions too.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Taxes - fixed or rate - for item or for invoice&lt;/li&gt; &#xA; &lt;li&gt;Discounts - fixed or by percentage - for item or for invoice&lt;/li&gt; &#xA; &lt;li&gt;Shipping - add shipping price to your invoices&lt;/li&gt; &#xA; &lt;li&gt;Automatic calculation - provide minimal set of information, or calculate yourself and provide what to print&lt;/li&gt; &#xA; &lt;li&gt;Due date&lt;/li&gt; &#xA; &lt;li&gt;Easy to customize currency format&lt;/li&gt; &#xA; &lt;li&gt;Serial numbers as you like it&lt;/li&gt; &#xA; &lt;li&gt;Templates&lt;/li&gt; &#xA; &lt;li&gt;Translations&lt;/li&gt; &#xA; &lt;li&gt;Global settings and overrides on-the-fly&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Change log&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/LaravelDaily/laravel-invoices/master/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Via Composer&lt;/p&gt; &#xA;&lt;h3&gt;Laravel version &amp;lt;= 9&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ composer require laraveldaily/laravel-invoices:^3.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Laravel version &amp;lt;= 8&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ composer require laraveldaily/laravel-invoices:^2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Laravel version &amp;lt;= 7&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ composer require laraveldaily/laravel-invoices:^1.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After installing Laravel Invoices, publish its assets, views, translations and config using the &lt;code&gt;invoices:install&lt;/code&gt; Artisan command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ php artisan invoices:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Updates&lt;/h3&gt; &#xA;&lt;p&gt;Since it is evolving fast you might want to have latest template after update using Artisan command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ php artisan invoices:update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It will give a warning if you really want to override default resources&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Or alternatively it can be done separately.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ php artisan vendor:publish --tag=invoices.views --force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ php artisan vendor:publish --tag=invoices.translations --force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;For Laravel version &amp;lt; 5.5&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t use auto-discovery, add the ServiceProvider to the providers array in &lt;code&gt;config/app.php&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;LaravelDaily\Invoices\InvoiceServiceProvider::class,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the facade to generate invoices, add this to your facades in &lt;code&gt;config/app.php&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&#39;Invoice&#39; =&amp;gt; LaravelDaily\Invoices\Facades\Invoice::class&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;RandomController.php&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use LaravelDaily\Invoices\Invoice;&#xA;use LaravelDaily\Invoices\Classes\Buyer;&#xA;use LaravelDaily\Invoices\Classes\InvoiceItem;&#xA;&#xA;&amp;lt;...&amp;gt;&#xA;&#xA;        $customer = new Buyer([&#xA;            &#39;name&#39;          =&amp;gt; &#39;John Doe&#39;,&#xA;            &#39;custom_fields&#39; =&amp;gt; [&#xA;                &#39;email&#39; =&amp;gt; &#39;test@example.com&#39;,&#xA;            ],&#xA;        ]);&#xA;&#xA;        $item = (new InvoiceItem())-&amp;gt;title(&#39;Service 1&#39;)-&amp;gt;pricePerUnit(2);&#xA;&#xA;        $invoice = Invoice::make()&#xA;            -&amp;gt;buyer($customer)&#xA;            -&amp;gt;discountByPercent(10)&#xA;            -&amp;gt;taxRate(15)&#xA;            -&amp;gt;shipping(1.99)&#xA;            -&amp;gt;addItem($item);&#xA;&#xA;        return $invoice-&amp;gt;stream();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See result &lt;a href=&#34;https://raw.githubusercontent.com/LaravelDaily/laravel-invoices/master/examples/invoice_AA_00001.pdf&#34;&gt;Invoice_AA_00001.pdf&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use LaravelDaily\Invoices\Invoice;&#xA;use LaravelDaily\Invoices\Classes\Party;&#xA;use LaravelDaily\Invoices\Classes\InvoiceItem;&#xA;&#xA;&amp;lt;...&amp;gt;&#xA;&#xA;        $client = new Party([&#xA;            &#39;name&#39;          =&amp;gt; &#39;Roosevelt Lloyd&#39;,&#xA;            &#39;phone&#39;         =&amp;gt; &#39;(520) 318-9486&#39;,&#xA;            &#39;custom_fields&#39; =&amp;gt; [&#xA;                &#39;note&#39;        =&amp;gt; &#39;IDDQD&#39;,&#xA;                &#39;business id&#39; =&amp;gt; &#39;365#GG&#39;,&#xA;            ],&#xA;        ]);&#xA;&#xA;        $customer = new Party([&#xA;            &#39;name&#39;          =&amp;gt; &#39;Ashley Medina&#39;,&#xA;            &#39;address&#39;       =&amp;gt; &#39;The Green Street 12&#39;,&#xA;            &#39;code&#39;          =&amp;gt; &#39;#22663214&#39;,&#xA;            &#39;custom_fields&#39; =&amp;gt; [&#xA;                &#39;order number&#39; =&amp;gt; &#39;&amp;gt; 654321 &amp;lt;&#39;,&#xA;            ],&#xA;        ]);&#xA;&#xA;        $items = [&#xA;            (new InvoiceItem())&#xA;                -&amp;gt;title(&#39;Service 1&#39;)&#xA;                -&amp;gt;description(&#39;Your product or service description&#39;)&#xA;                -&amp;gt;pricePerUnit(47.79)&#xA;                -&amp;gt;quantity(2)&#xA;                -&amp;gt;discount(10),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 2&#39;)-&amp;gt;pricePerUnit(71.96)-&amp;gt;quantity(2),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 3&#39;)-&amp;gt;pricePerUnit(4.56),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 4&#39;)-&amp;gt;pricePerUnit(87.51)-&amp;gt;quantity(7)-&amp;gt;discount(4)-&amp;gt;units(&#39;kg&#39;),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 5&#39;)-&amp;gt;pricePerUnit(71.09)-&amp;gt;quantity(7)-&amp;gt;discountByPercent(9),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 6&#39;)-&amp;gt;pricePerUnit(76.32)-&amp;gt;quantity(9),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 7&#39;)-&amp;gt;pricePerUnit(58.18)-&amp;gt;quantity(3)-&amp;gt;discount(3),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 8&#39;)-&amp;gt;pricePerUnit(42.99)-&amp;gt;quantity(4)-&amp;gt;discountByPercent(3),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 9&#39;)-&amp;gt;pricePerUnit(33.24)-&amp;gt;quantity(6)-&amp;gt;units(&#39;m2&#39;),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 11&#39;)-&amp;gt;pricePerUnit(97.45)-&amp;gt;quantity(2),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 12&#39;)-&amp;gt;pricePerUnit(92.82),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 13&#39;)-&amp;gt;pricePerUnit(12.98),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 14&#39;)-&amp;gt;pricePerUnit(160)-&amp;gt;units(&#39;hours&#39;),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 15&#39;)-&amp;gt;pricePerUnit(62.21)-&amp;gt;discountByPercent(5),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 16&#39;)-&amp;gt;pricePerUnit(2.80),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 17&#39;)-&amp;gt;pricePerUnit(56.21),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 18&#39;)-&amp;gt;pricePerUnit(66.81)-&amp;gt;discountByPercent(8),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 19&#39;)-&amp;gt;pricePerUnit(76.37),&#xA;            (new InvoiceItem())-&amp;gt;title(&#39;Service 20&#39;)-&amp;gt;pricePerUnit(55.80),&#xA;        ];&#xA;&#xA;        $notes = [&#xA;            &#39;your multiline&#39;,&#xA;            &#39;additional notes&#39;,&#xA;            &#39;in regards of delivery or something else&#39;,&#xA;        ];&#xA;        $notes = implode(&#34;&amp;lt;br&amp;gt;&#34;, $notes);&#xA;&#xA;        $invoice = Invoice::make(&#39;receipt&#39;)&#xA;            -&amp;gt;series(&#39;BIG&#39;)&#xA;            // ability to include translated invoice status&#xA;            // in case it was paid&#xA;            -&amp;gt;status(__(&#39;invoices::invoice.paid&#39;))&#xA;            -&amp;gt;sequence(667)&#xA;            -&amp;gt;serialNumberFormat(&#39;{SEQUENCE}/{SERIES}&#39;)&#xA;            -&amp;gt;seller($client)&#xA;            -&amp;gt;buyer($customer)&#xA;            -&amp;gt;date(now()-&amp;gt;subWeeks(3))&#xA;            -&amp;gt;dateFormat(&#39;m/d/Y&#39;)&#xA;            -&amp;gt;payUntilDays(14)&#xA;            -&amp;gt;currencySymbol(&#39;$&#39;)&#xA;            -&amp;gt;currencyCode(&#39;USD&#39;)&#xA;            -&amp;gt;currencyFormat(&#39;{SYMBOL}{VALUE}&#39;)&#xA;            -&amp;gt;currencyThousandsSeparator(&#39;.&#39;)&#xA;            -&amp;gt;currencyDecimalPoint(&#39;,&#39;)&#xA;            -&amp;gt;filename($client-&amp;gt;name . &#39; &#39; . $customer-&amp;gt;name)&#xA;            -&amp;gt;addItems($items)&#xA;            -&amp;gt;notes($notes)&#xA;            -&amp;gt;logo(public_path(&#39;vendor/invoices/sample-logo.png&#39;))&#xA;            // You can additionally save generated invoice to configured disk&#xA;            -&amp;gt;save(&#39;public&#39;);&#xA;&#xA;        $link = $invoice-&amp;gt;url();&#xA;        // Then send email to party with link&#xA;&#xA;        // And return invoice itself to browser or have a different view&#xA;        return $invoice-&amp;gt;stream();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See result &lt;a href=&#34;https://raw.githubusercontent.com/LaravelDaily/laravel-invoices/master/examples/Roosevelt%20Lloyd%20Ashley%20Medina.pdf&#34;&gt;Roosevelt Lloyd Ashley Medina.pdf&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Alternatives using facade&lt;/h3&gt; &#xA;&lt;p&gt;Optionally you can use a facade to make new party or item&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Invoice;&#xA;&#xA;$customer = Invoice::makeParty([&#xA;    &#39;name&#39; =&amp;gt; &#39;John Doe&#39;,&#xA;]);&#xA;&#xA;$item = Invoice::makeItem(&#39;Your service or product title&#39;)-&amp;gt;pricePerUnit(9.99);&#xA;&#xA;return Invoice::make()-&amp;gt;buyer($customer)-&amp;gt;addItem($item)-&amp;gt;stream();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Templates&lt;/h2&gt; &#xA;&lt;p&gt;After publishing assets you can modify or make your own template for invoices.&lt;/p&gt; &#xA;&lt;p&gt;Templates are stored in the &lt;code&gt;resources/views/vendor/invoices/templates&lt;/code&gt; directory. There you will find &lt;code&gt;default.blade.php&lt;/code&gt; template which is used by default.&lt;/p&gt; &#xA;&lt;p&gt;You can specify which template to use by calling &lt;code&gt;template&lt;/code&gt; method on Invoice object.&lt;/p&gt; &#xA;&lt;p&gt;For example if you have &lt;code&gt;resources/views/vendor/invoices/templates/my_company.blade.php&lt;/code&gt; it should look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Invoice::make(&#39;receipt&#39;)-&amp;gt;template(&#39;my_company&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Too see how things work in a template you can view &lt;code&gt;default.blade.php&lt;/code&gt; as an example.&lt;/p&gt; &#xA;&lt;h2&gt;Config&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;return [&#xA;    &#39;date&#39; =&amp;gt; [&#xA;        /**&#xA;         * Carbon date format&#xA;         */&#xA;        &#39;format&#39;         =&amp;gt; &#39;Y-m-d&#39;,&#xA;        /**&#xA;         * Due date for payment since invoice&#39;s date.&#xA;         */&#xA;        &#39;pay_until_days&#39; =&amp;gt; 7,&#xA;    ],&#xA;&#xA;    &#39;serial_number&#39; =&amp;gt; [&#xA;        &#39;series&#39;           =&amp;gt; &#39;AA&#39;,&#xA;        &#39;sequence&#39;         =&amp;gt; 1,&#xA;        /**&#xA;         * Sequence will be padded accordingly, for ex. 00001&#xA;         */&#xA;        &#39;sequence_padding&#39; =&amp;gt; 5,&#xA;        &#39;delimiter&#39;        =&amp;gt; &#39;.&#39;,&#xA;        /**&#xA;         * Supported tags {SERIES}, {DELIMITER}, {SEQUENCE}&#xA;         * Example: AA.00001&#xA;         */&#xA;        &#39;format&#39;           =&amp;gt; &#39;{SERIES}{DELIMITER}{SEQUENCE}&#39;,&#xA;    ],&#xA;&#xA;    &#39;currency&#39; =&amp;gt; [&#xA;        &#39;code&#39;                =&amp;gt; &#39;eur&#39;,&#xA;        /**&#xA;         * Usually cents&#xA;         * Used when spelling out the amount and if your currency has decimals.&#xA;         *&#xA;         * Example: Amount in words: Eight hundred fifty thousand sixty-eight EUR and fifteen ct.&#xA;         */&#xA;        &#39;fraction&#39;            =&amp;gt; &#39;ct.&#39;,&#xA;        &#39;symbol&#39;              =&amp;gt; &#39;€&#39;,&#xA;        /**&#xA;         * Example: 19.00&#xA;         */&#xA;        &#39;decimals&#39;            =&amp;gt; 2,&#xA;        /**&#xA;         * Example: 1.99&#xA;         */&#xA;        &#39;decimal_point&#39;       =&amp;gt; &#39;.&#39;,&#xA;        /**&#xA;         * By default empty.&#xA;         * Example: 1,999.00&#xA;         */&#xA;        &#39;thousands_separator&#39; =&amp;gt; &#39;&#39;,&#xA;        /**&#xA;         * Supported tags {VALUE}, {SYMBOL}, {CODE}&#xA;         * Example: 1.99 €&#xA;         */&#xA;        &#39;format&#39;              =&amp;gt; &#39;{VALUE} {SYMBOL}&#39;,&#xA;    ],&#xA;&#xA;    &#39;paper&#39; =&amp;gt; [&#xA;        // A4 = 210 mm x 297 mm = 595 pt x 842 pt&#xA;        &#39;size&#39;        =&amp;gt; &#39;a4&#39;,&#xA;        &#39;orientation&#39; =&amp;gt; &#39;portrait&#39;,&#xA;    ],&#xA;&#xA;    &#39;disk&#39; =&amp;gt; &#39;local&#39;,&#xA;&#xA;    &#39;seller&#39; =&amp;gt; [&#xA;        /**&#xA;         * Class used in templates via $invoice-&amp;gt;seller&#xA;         *&#xA;         * Must implement LaravelDaily\Invoices\Contracts\PartyContract&#xA;         *      or extend LaravelDaily\Invoices\Classes\Party&#xA;         */&#xA;        &#39;class&#39; =&amp;gt; \LaravelDaily\Invoices\Classes\Seller::class,&#xA;&#xA;        /**&#xA;         * Default attributes for Seller::class&#xA;         */&#xA;        &#39;attributes&#39; =&amp;gt; [&#xA;            &#39;name&#39;          =&amp;gt; &#39;Towne, Smith and Ebert&#39;,&#xA;            &#39;address&#39;       =&amp;gt; &#39;89982 Pfeffer Falls Damianstad, CO 66972-8160&#39;,&#xA;            &#39;code&#39;          =&amp;gt; &#39;41-1985581&#39;,&#xA;            &#39;vat&#39;           =&amp;gt; &#39;123456789&#39;,&#xA;            &#39;phone&#39;         =&amp;gt; &#39;760-355-3930&#39;,&#xA;            &#39;custom_fields&#39; =&amp;gt; [&#xA;                /**&#xA;                 * Custom attributes for Seller::class&#xA;                 *&#xA;                 * Used to display additional info on Seller section in invoice&#xA;                 * attribute =&amp;gt; value&#xA;                 */&#xA;                &#39;SWIFT&#39; =&amp;gt; &#39;BANK101&#39;,&#xA;            ],&#xA;        ],&#xA;    ],&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Available Methods&lt;/h2&gt; &#xA;&lt;p&gt;Almost every configuration value can be overrided dynamically by methods.&lt;/p&gt; &#xA;&lt;h2&gt;Invoice&lt;/h2&gt; &#xA;&lt;h4&gt;General&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;addItem(InvoiceItem $item)&lt;/li&gt; &#xA; &lt;li&gt;addItems(Iterable)&lt;/li&gt; &#xA; &lt;li&gt;name(string)&lt;/li&gt; &#xA; &lt;li&gt;status(string) - invoice status [paid/due] if needed&lt;/li&gt; &#xA; &lt;li&gt;seller(PartyContract)&lt;/li&gt; &#xA; &lt;li&gt;buyer(PartyContract)&lt;/li&gt; &#xA; &lt;li&gt;setCustomData(mixed) - allows user to attach additional data to invoice&lt;/li&gt; &#xA; &lt;li&gt;getCustomData() - retrieves additional data to use in template&lt;/li&gt; &#xA; &lt;li&gt;template(string)&lt;/li&gt; &#xA; &lt;li&gt;logo(string) - path to logo&lt;/li&gt; &#xA; &lt;li&gt;getLogo() - returns base64 encoded image, used in template to avoid path issues&lt;/li&gt; &#xA; &lt;li&gt;filename(string) - overrides automatic filename&lt;/li&gt; &#xA; &lt;li&gt;taxRate(float)&lt;/li&gt; &#xA; &lt;li&gt;shipping(float) - shipping amount&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;totalDiscount(float) - If not provided calculates itself&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;totalTaxes(float) - If not provided calculates itself&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;totalAmount(float) - If not provided calculates itself&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;taxableAmount(float) - If not provided calculates itself&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Serial number&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;series(string)&lt;/li&gt; &#xA; &lt;li&gt;sequence(int)&lt;/li&gt; &#xA; &lt;li&gt;delimiter(string)&lt;/li&gt; &#xA; &lt;li&gt;sequencePadding(int)&lt;/li&gt; &#xA; &lt;li&gt;serialNumberFormat(string)&lt;/li&gt; &#xA; &lt;li&gt;getSerialNumber() - returns formatted serial number&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Date&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;date(Carbon)&lt;/li&gt; &#xA; &lt;li&gt;dateFormat(string) - Carbon format of date&lt;/li&gt; &#xA; &lt;li&gt;payUntilDays(int) - Days payment due since invoice issued&lt;/li&gt; &#xA; &lt;li&gt;getDate() - returns formatted date&lt;/li&gt; &#xA; &lt;li&gt;getPayUntilDate() - return formatted due date&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Currency&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;currencyCode(string) - EUR, USD etc.&lt;/li&gt; &#xA; &lt;li&gt;currencyFraction(string) - Cents, Centimes, Pennies etc.&lt;/li&gt; &#xA; &lt;li&gt;currencySymbol(string)&lt;/li&gt; &#xA; &lt;li&gt;currencyDecimals(int)&lt;/li&gt; &#xA; &lt;li&gt;currencyDecimalPoint(string)&lt;/li&gt; &#xA; &lt;li&gt;currencyThousandsSeparator(string)&lt;/li&gt; &#xA; &lt;li&gt;currencyFormat(string)&lt;/li&gt; &#xA; &lt;li&gt;getAmountInWords(float, ?string $locale) - Spells out float to words, second parameter is locale&lt;/li&gt; &#xA; &lt;li&gt;getTotalAmountInWords() - spells out total_amount&lt;/li&gt; &#xA; &lt;li&gt;formatCurrency(float) - returns formatted value with currency settings &#39;$ 1,99&#39;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;File&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;stream() - opens invoice in browser&lt;/li&gt; &#xA; &lt;li&gt;download() - offers to download invoice&lt;/li&gt; &#xA; &lt;li&gt;save($disk) - saves invoice to storage, use -&amp;gt;filename() for filename&lt;/li&gt; &#xA; &lt;li&gt;url() - return url of saved invoice&lt;/li&gt; &#xA; &lt;li&gt;toHtml() - render html view instead of pdf&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;InvoiceItem&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;title(string) - product or service name&lt;/li&gt; &#xA; &lt;li&gt;description(string) - additional information for service entry&lt;/li&gt; &#xA; &lt;li&gt;units(string) - measurement units of item (adds units columns if set)&lt;/li&gt; &#xA; &lt;li&gt;quantity(float) - amount of units of item&lt;/li&gt; &#xA; &lt;li&gt;pricePerUnit(float)&lt;/li&gt; &#xA; &lt;li&gt;discount(float) - discount in currency&lt;/li&gt; &#xA; &lt;li&gt;discountByPercent(float) - discount by percents discountByPercent(15) means 15%&lt;/li&gt; &#xA; &lt;li&gt;tax(float)&lt;/li&gt; &#xA; &lt;li&gt;taxByPercent(float)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;subTotalPrice(float) - If not provided calculates itself&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you discover any security related issues, please email &lt;a href=&#34;mailto:mysticcode@gmail.com&#34;&gt;mysticcode@gmail.com&lt;/a&gt; instead of using the issue tracker.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mc0de&#34;&gt;David Lun&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GPL-3.0-only. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/LaravelDaily/laravel-invoices/master/LICENSE.md&#34;&gt;license file&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>