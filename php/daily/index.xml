<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-23T01:43:29Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PrivateBin/PrivateBin</title>
    <updated>2022-08-23T01:43:29Z</updated>
    <id>tag:github.com,2022-08-23:/PrivateBin/PrivateBin</id>
    <link href="https://github.com/PrivateBin/PrivateBin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A minimalist, open source online pastebin where the server has zero knowledge of pasted data. Data is encrypted/decrypted in the browser using 256 bits AES.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://privatebin.info/&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/PrivateBin/assets/master/images/preview/logoSmall.png&#34; alt=&#34;PrivateBin&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Current version: 1.4.0&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;PrivateBin&lt;/strong&gt; is a minimalist, open source online &lt;a href=&#34;https://en.wikipedia.org/wiki/Pastebin&#34;&gt;pastebin&lt;/a&gt; where the server has zero knowledge of pasted data.&lt;/p&gt; &#xA;&lt;p&gt;Data is encrypted and decrypted in the browser using 256bit AES in &lt;a href=&#34;https://en.wikipedia.org/wiki/Galois/Counter_Mode&#34;&gt;Galois Counter mode&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a fork of ZeroBin, originally developed by &lt;a href=&#34;https://github.com/sebsauvage/ZeroBin&#34;&gt;SÃ©bastien Sauvage&lt;/a&gt;. PrivateBin was refactored to allow easier and cleaner extensions and has many additional features. It is, however, still fully compatible to the original ZeroBin 0.19 data storage scheme. Therefore, such installations can be upgraded to PrivateBin without losing any data.&lt;/p&gt; &#xA;&lt;h2&gt;What PrivateBin provides&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;As a server administrator you don&#39;t have to worry if your users post content that is considered illegal in your country. You have plausible deniability of any of the pastes content. If requested or enforced, you can delete any paste from your system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pastebin-like system to store text documents, code samples, etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Encryption of data sent to server.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Possibility to set a password which is required to read the paste. It further protects a paste and prevents people stumbling upon your paste&#39;s link from being able to read it without the password.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What it doesn&#39;t provide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;As a user you have to trust the server administrator not to inject any malicious code. For security, a PrivateBin installation &lt;em&gt;has to be used over&lt;/em&gt; &lt;em&gt;HTTPS&lt;/em&gt;! Otherwise you would also have to trust your internet provider, and any jurisdiction the traffic passes through. Additionally the instance should be secured by &lt;a href=&#34;https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&#34;&gt;HSTS&lt;/a&gt;. It can use traditional certificate authorities and/or use a &lt;a href=&#34;https://en.wikipedia.org/wiki/Domain_Name_System_Security_Extensions&#34;&gt;DNSSEC&lt;/a&gt; protected &lt;a href=&#34;https://en.wikipedia.org/wiki/DNS-based_Authentication_of_Named_Entities&#34;&gt;DANE&lt;/a&gt; record.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &#34;key&#34; used to encrypt the paste is part of the URL. If you publicly post the URL of a paste that is not password-protected, anyone can read it. Use a password if you want your paste to remain private. In that case, make sure to use a strong password and share it privately and end-to-end-encrypted.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A server admin can be forced to hand over access logs to the authorities. PrivateBin encrypts your text and the discussion contents, but who accessed a paste (first) might still be disclosed via access logs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In case of a server breach your data is secure as it is only stored encrypted on the server. However, the server could be absused or the server admin could be legally forced into sending malicious code to their users, which logs the decryption key and sends it to a server when a user accesses a paste. Therefore, do not access any PrivateBin instance if you think it has been compromised. As long as no user accesses this instance with a previously generated URL, the content can&#39;t be decrypted.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;p&gt;Some features are optional and can be enabled or disabled in the &lt;a href=&#34;https://github.com/PrivateBin/PrivateBin/wiki/Configuration&#34;&gt;configuration file&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Password protection&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Discussions, anonymous or with nicknames and IP based identicons or vizhashes&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Expiration times, including a &#34;forever&#34; and &#34;burn after reading&#34; option&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Markdown format support for HTML formatted pastes, including preview function&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Syntax highlighting for source code using prettify.js, including 4 prettify themes&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;File upload support, image, media and PDF preview (disabled by default, size limit adjustable)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Templates: By default there are bootstrap CSS, darkstrap and &#34;classic ZeroBin&#34; to choose from and it is easy to adapt these to your own websites layout or create your own.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Translation system and automatic browser language detection (if enabled in browser)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Language selection (disabled by default, as it uses a session cookie)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;QR code for paste URLs, to easily transfer them over to mobile devices&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Further resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PrivateBin/PrivateBin/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PrivateBin/PrivateBin/raw/master/INSTALL.md#installation&#34;&gt;Installation guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PrivateBin/PrivateBin/wiki/Configuration&#34;&gt;Configuration guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PrivateBin/PrivateBin/wiki/Templates&#34;&gt;Templates&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PrivateBin/PrivateBin/wiki/Translation&#34;&gt;Translation guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PrivateBin/PrivateBin/wiki/Development&#34;&gt;Developer guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run into any issues? Have ideas for further developments? Please &lt;a href=&#34;https://github.com/PrivateBin/PrivateBin/issues&#34;&gt;report&lt;/a&gt; them!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>opcodesio/log-viewer</title>
    <updated>2022-08-23T01:43:29Z</updated>
    <id>tag:github.com,2022-08-23:/opcodesio/log-viewer</id>
    <link href="https://github.com/opcodesio/log-viewer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast and easy-to-use Log Viewer for your Laravel application&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;h1&gt;Log Viewer&lt;br&gt;Fast and easy-to-use&lt;/h1&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/opcodesio/log-viewer/main/#features&#34;&gt;Features&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/opcodesio/log-viewer/main/#installation&#34;&gt;Installation&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/opcodesio/log-viewer/main/#configuration&#34;&gt;Configuration&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/opcodesio/log-viewer/main/#credits&#34;&gt;Credits&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://packagist.org/packages/opcodesio/log-viewer&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/opcodesio/log-viewer.svg?style=flat-square&#34; alt=&#34;Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/opcodesio/log-viewer&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dm/opcodesio/log-viewer.svg?style=flat-square&#34; alt=&#34;Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/opcodesio/log-viewer&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/php-v/opcodesio/log-viewer.svg?style=flat-square&#34; alt=&#34;PHP from Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/opcodesio/log-viewer&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Laravel-8.x,%209.x-brightgreen.svg?style=flat-square&#34; alt=&#34;Laravel Version&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8697942/184591230-e6dfb1e6-215e-418b-a61e-58c9cdbb392a.png&#34; alt=&#34;log-viewer-screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.opcodes.io/&#34;&gt;OPcodes&#39;s&lt;/a&gt; &lt;strong&gt;Log Viewer&lt;/strong&gt; is a perfect companion for your &lt;a href=&#34;https://laravel.com/&#34;&gt;Laravel&lt;/a&gt; app.&lt;/p&gt; &#xA;&lt;p&gt;You will no longer need to read the raw Laravel log files trying to find what you&#39;re looking for.&lt;/p&gt; &#xA;&lt;p&gt;Log Viewer helps you quickly and clearly see individual log entries, to &lt;strong&gt;search&lt;/strong&gt;, &lt;strong&gt;filter&lt;/strong&gt;, and make sense of your Laravel logs &lt;strong&gt;fast&lt;/strong&gt;. It is free and easy to install.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ð &lt;strong&gt;View all the Laravel logs&lt;/strong&gt; in your &lt;code&gt;storage/logs&lt;/code&gt; directory,&lt;/li&gt; &#xA; &lt;li&gt;ð &lt;strong&gt;Search&lt;/strong&gt; the logs,&lt;/li&gt; &#xA; &lt;li&gt;ð &lt;strong&gt;Filter&lt;/strong&gt; by log level (error, info, debug, etc.),&lt;/li&gt; &#xA; &lt;li&gt;ð &lt;strong&gt;Sharable links&lt;/strong&gt; to individual log entries,&lt;/li&gt; &#xA; &lt;li&gt;ð¾ &lt;strong&gt;Download &amp;amp; delete&lt;/strong&gt; log files from the UI,&lt;/li&gt; &#xA; &lt;li&gt;âï¸ &lt;strong&gt;Horizon&lt;/strong&gt; log support,&lt;/li&gt; &#xA; &lt;li&gt;and more...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;PHP 8.0+&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Laravel 8+&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;To install the package via composer, Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require opcodesio/log-viewer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Once the installation is complete, you will be able to access &lt;strong&gt;Log Viewer&lt;/strong&gt; directly in your browser.&lt;/p&gt; &#xA;&lt;p&gt;By default, the application is available at: &lt;code&gt;{APP_URL}/log-viewer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;(for example: &lt;code&gt;https://my-app.test/log-viewer&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;h4&gt;Config file&lt;/h4&gt; &#xA;&lt;p&gt;To publish the &lt;a href=&#34;https://github.com/opcodesio/log-viewer/raw/main/config/log-viewer.php&#34;&gt;config file&lt;/a&gt;, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=&#34;log-viewer-config&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Route &amp;amp; Middleware&lt;/h3&gt; &#xA;&lt;p&gt;You can easily change the default route and its middleware in the config/log-viewer.php.&lt;/p&gt; &#xA;&lt;p&gt;See the configuration below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Log Viewer Route&#xA;    |--------------------------------------------------------------------------&#xA;    | Log Viewer will be available under this URL.&#xA;    |&#xA;    */&#xA;&#xA;    &#39;route_path&#39; =&amp;gt; &#39;log-viewer&#39;,&#xA;&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Log Viewer route middleware.&#xA;    |--------------------------------------------------------------------------&#xA;    | The middleware should enable session and cookies support in order for the Log Viewer to work.&#xA;    | The &#39;web&#39; middleware will be applied automatically if empty.&#xA;    |&#xA;    */&#xA;&#xA;    &#39;middleware&#39; =&amp;gt; [&#39;web&#39;],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;Read the &lt;strong&gt;&lt;a href=&#34;https://arunas.dev/log-viewer-for-laravel/&#34;&gt;release blog post&lt;/a&gt;&lt;/strong&gt; for screenshots and more information about Log Viewer&#39;s features.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/opcodesio/log-viewer/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/arukompas/.github/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please review &lt;a href=&#34;https://raw.githubusercontent.com/opcodesio/security/policy&#34;&gt;our security policy&lt;/a&gt; on how to report security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arukompas&#34;&gt;Arunas Skirius&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/opcodesio/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/opcodesio/log-viewer/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>smortexa/laravel-arkitect</title>
    <updated>2022-08-23T01:43:29Z</updated>
    <id>tag:github.com,2022-08-23:/smortexa/laravel-arkitect</id>
    <link href="https://github.com/smortexa/laravel-arkitect" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Test and enforce architectural rules in your Laravel applications. Keep your app&#39;s architecture clean and consistent!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/smortexa/laravel-arkitect/main/art/laravel-arkitect.png&#34; alt=&#34;art/laravel-arkitect.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Laravel Arkitect&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/mortexa/laravel-arkitect&#34;&gt;&lt;img src=&#34;http://poser.pugx.org/mortexa/laravel-arkitect/v&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mortexa/laravel-arkitect&#34;&gt;&lt;img src=&#34;http://poser.pugx.org/mortexa/laravel-arkitect/downloads&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mortexa/laravel-arkitect&#34;&gt;&lt;img src=&#34;http://poser.pugx.org/mortexa/laravel-arkitect/v/unstable&#34; alt=&#34;Latest Unstable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mortexa/laravel-arkitect&#34;&gt;&lt;img src=&#34;http://poser.pugx.org/mortexa/laravel-arkitect/license&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mortexa/laravel-arkitect&#34;&gt;&lt;img src=&#34;http://poser.pugx.org/mortexa/laravel-arkitect/require/php&#34; alt=&#34;PHP Version Require&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Laravel Arkitect lets you test and enforce your architectural rules in your Laravel applications, and it&#39;s a &lt;a href=&#34;https://github.com/phparkitect/arkitect&#34;&gt;PHPArkitect&lt;/a&gt; wrapper for Laravel. This package helps you to keep your app&#39;s architecture clean and consistent.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ââ storage&#xA;ââ tests&#xA;â   ââ Architecture â&#xA;â   ââ Browser&#xA;â   ââ Feature&#xA;â   ââ Unit&#xA;ââ vendor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via Composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;composer require mortexa/laravel-arkitect --dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;First, you should create your architectural rules by running the following Artisan command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;php artisan make:arkitekt ControllersNaming&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;By running the command, the &lt;code&gt;ControllersNaming.php&lt;/code&gt; file will be created in your application&#39;s &lt;code&gt;tests/Architecture&lt;/code&gt; directory like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace Tests\Architecture;&#xA;&#xA;use Arkitect\Rules\DSL\ArchRule;&#xA;use Mortexa\LaravelArkitect\Contracts\RuleContract;&#xA;use Mortexa\LaravelArkitect\Rules\BaseRule;&#xA;&#xA;class ControllersNaming extends BaseRule implements RuleContract&#xA;{&#xA;    /**&#xA;     * Define your architectural rule&#xA;     *&#xA;     * @link https://github.com/phparkitect/arkitect&#xA;     *&#xA;     * @return \Arkitect\Rules\DSL\ArchRule&#xA;     */&#xA;    public static function rule(): ArchRule&#xA;    {&#xA;        // TODO: Implement rule() method.&#xA;    }&#xA;&#xA;    /**&#xA;     * Define the path related to your rule&#xA;     *&#xA;     * @example app/Http/Controllers&#xA;     *&#xA;     * @return string&#xA;     */&#xA;    public static function path(): string&#xA;    {&#xA;        // TODO: Implement path() method.&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you must implement &lt;code&gt;rule()&lt;/code&gt; and &lt;code&gt;path()&lt;/code&gt; methods based on the following &lt;a href=&#34;https://raw.githubusercontent.com/smortexa/laravel-arkitect/main/#example&#34;&gt;example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;And finally, you can run your tests by the following command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;php artisan test:arkitect&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Done!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you want to stop checking command immediately after first violation, you can use &lt;code&gt;--stop-on-failure&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For all available rules, please take a look at the PHPArkitect repository: &lt;a href=&#34;https://github.com/phparkitect/arkitect&#34;&gt;https://github.com/phparkitect/arkitect&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Default rules&lt;/h3&gt; &#xA;&lt;p&gt;Some opinionated rules are provided by the package and apply by default. These rules are about Laravel user-land structure. You are free to customize or ignore them entirely by &lt;a href=&#34;https://raw.githubusercontent.com/smortexa/laravel-arkitect/main/#configuration&#34;&gt;publishing config file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace Tests\Architecture;&#xA;&#xA;use Arkitect\Expression\ForClasses\HaveNameMatching;&#xA;use Arkitect\Expression\ForClasses\ResideInOneOfTheseNamespaces;&#xA;use Arkitect\Rules\DSL\ArchRule;&#xA;use Arkitect\Rules\Rule;&#xA;use Mortexa\LaravelArkitect\Contracts\RuleContract;&#xA;use Mortexa\LaravelArkitect\Rules\BaseRule;&#xA;&#xA;class ControllersNaming extends BaseRule implements RuleContract&#xA;{&#xA;    public static function rule(): ArchRule&#xA;    {&#xA;        return Rule::allClasses()&#xA;            -&amp;gt;that(new ResideInOneOfTheseNamespaces(&#39;App\Http\Controllers&#39;))&#xA;            -&amp;gt;should(new HaveNameMatching(&#39;*Controller&#39;))&#xA;            -&amp;gt;because(&#39;It\&#39;s a Laravel naming convention&#39;);&#xA;    }&#xA;&#xA;    public static function path(): string&#xA;    {&#xA;        return &#39;app/Http/Controllers&#39;;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;If you want to customize the default rules provided by the package, You can publish the Laravel Arkitect configuration file using the following Artisan command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;php artisan vendor:publish --provider=&#34;Mortexa\LaravelArkitect\ArkitectServiceProvider&#34; --tag=&#34;config&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;arkitect&lt;/code&gt; configuration file will be placed in your application&#39;s &lt;code&gt;config&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// config/arkitect.php&#xA;&#xA;&amp;lt;?php&#xA;&#xA;use ...&#xA;&#xA;return [&#xA;    &#39;rules&#39; =&amp;gt; [&#xA;        &#39;naming&#39; =&amp;gt; [&#xA;            ControllersNaming::class,&#xA;            ExceptionsNaming::class,&#xA;            NotificationsNaming::class,&#xA;            ObserversNaming::class,&#xA;            ProvidersNaming::class,&#xA;            RequestsNaming::class,&#xA;            ResourcesNaming::class,&#xA;            ChannelsNaming::class,&#xA;            SeedersNaming::class,&#xA;            PoliciesNaming::class,&#xA;            FactoriesNaming::class,&#xA;            ScopesNaming::class,&#xA;            BuildersNaming::class,&#xA;            ContractsNaming::class,&#xA;            RepositoriesNaming::class,&#xA;            MailsNaming::class,&#xA;        ],&#xA;        &#39;extending&#39; =&amp;gt; [&#xA;            ControllersExtending::class,&#xA;            CommandsExtending::class,&#xA;            ExceptionsExtending::class,&#xA;            RequestsExtending::class,&#xA;            ResourcesExtending::class,&#xA;            ResourceCollectionsExtending::class,&#xA;            ModelsExtending::class,&#xA;            NotificationsExtending::class,&#xA;            ProvidersExtending::class,&#xA;            ViewsExtending::class,&#xA;            FactoriesExtending::class,&#xA;            SeedersExtending::class,&#xA;            MailsExtending::class,&#xA;        ],&#xA;        &#39;implementing&#39; =&amp;gt; [&#xA;            RulesImplementing::class,&#xA;            CastsImplementing::class,&#xA;            ScopesImplementing::class,&#xA;            JobsImplementing::class,&#xA;        ],&#xA;    ],&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for considering contributing! If you find an issue, or have a better way to do something, feel free to open an issue, or a PR.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;This repository is open-sourced software licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>