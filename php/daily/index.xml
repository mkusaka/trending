<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-12T01:34:35Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>oddvalue/laravel-drafts</title>
    <updated>2022-07-12T01:34:35Z</updated>
    <id>tag:github.com,2022-07-12:/oddvalue/laravel-drafts</id>
    <link href="https://github.com/oddvalue/laravel-drafts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://banners.beyondco.de/Laravel%20Drafts.png?theme=dark&amp;amp;packageManager=composer+require&amp;amp;packageName=oddvalue%2Flaravel-drafts&amp;amp;pattern=architect&amp;amp;style=style_1&amp;amp;description=A+simple%2C+drop-in+drafts%2Frevisions+system+for+Laravel+models&amp;amp;md=1&amp;amp;showWatermark=1&amp;amp;fontSize=100px&amp;amp;images=https%3A%2F%2Flaravel.com%2Fimg%2Flogomark.min.svg?sanitize=true&#34; alt=&#34;&#34; title=&#34;Laravel Drafts&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;A simple, drop-in drafts/revisions system for Laravel models&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/oddvalue/laravel-drafts&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/oddvalue/laravel-drafts.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oddvalue/laravel-drafts/actions?query=workflow%3Arun-tests+branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/oddvalue/laravel-drafts/run-tests?label=tests&#34; alt=&#34;GitHub Tests Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oddvalue/laravel-drafts/actions?query=workflow%3A%22Check+%26+fix+styling%22+branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/oddvalue/laravel-drafts/Check%20&amp;amp;%20fix%20styling?label=code%20style&#34; alt=&#34;GitHub Code Style Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/oddvalue/laravel-drafts&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/oddvalue/laravel-drafts.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#preparing-your-models&#34;&gt;Preparing your models&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#add-the-trait&#34;&gt;Add the trait&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#relations&#34;&gt;Relations&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#database&#34;&gt;Database&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#the-api&#34;&gt;The API&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#creating-a-new-record&#34;&gt;Creating a new record&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#relations&#34;&gt;Relations&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#interacting-with-records&#34;&gt;Interacting with records&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#published-revision&#34;&gt;Published revision&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#current-revision&#34;&gt;Current Revision&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#testing&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#changelog&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#security-vulnerabilities&#34;&gt;Security Vulnerabilities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require oddvalue/laravel-drafts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can publish the config file with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=&#34;laravel-drafts-config&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is the contents of the published config file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;return [&#xA;    &#39;revisions&#39; =&amp;gt; [&#xA;        &#39;keep&#39; =&amp;gt; 10,&#xA;    ],&#xA;&#xA;    &#39;column_names&#39; =&amp;gt; [&#xA;        /*&#xA;         * Boolean column that marks a row as the current version of the data for editing.&#xA;         */&#xA;        &#39;is_current&#39; =&amp;gt; &#39;is_current&#39;,&#xA;&#xA;        /*&#xA;         * Boolean column that marks a row as live and displayable to the public.&#xA;         */&#xA;        &#39;is_published&#39; =&amp;gt; &#39;is_published&#39;,&#xA;&#xA;        /*&#xA;         * Timestamp column that stores the date and time when the row was published.&#xA;         */&#xA;        &#39;published_at&#39; =&amp;gt; &#39;published_at&#39;,&#xA;&#xA;        /*&#xA;         * UUID column that stores the unique identifier of the model drafts.&#xA;         */&#xA;        &#39;uuid&#39; =&amp;gt; &#39;uuid&#39;,&#xA;&#xA;        /*&#xA;         * Name of the morph relationship to the publishing user.&#xA;         */&#xA;        &#39;publisher_morph_name&#39; =&amp;gt; &#39;publisher&#39;,&#xA;    ],&#xA;&#xA;    &#39;auth&#39; =&amp;gt; [&#xA;        /*&#xA;         * The guard to fetch the logged-in user from for the publisher relation.&#xA;         */&#xA;        &#39;guard&#39; =&amp;gt; &#39;web&#39;,&#xA;    ],&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Preparing your models&lt;/h3&gt; &#xA;&lt;h4&gt;Add the trait&lt;/h4&gt; &#xA;&lt;p&gt;Add the &lt;code&gt;HasDrafts&lt;/code&gt; trait to your model&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;use Illuminate\Database\Eloquent\Model;&#xA;use Oddvalue\LaravelDrafts\Concerns\HasDrafts;&#xA;&#xA;class Post extends Model&#xA;{&#xA;    use HasDrafts;&#xA;    &#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Relations&lt;/h4&gt; &#xA;&lt;p&gt;The package can handle basic relations to other models. When a draft is published &lt;code&gt;HasOne&lt;/code&gt; and &lt;code&gt;HasMany&lt;/code&gt; relations will be duplicated to the published model and &lt;code&gt;BelongsToMany&lt;/code&gt; and &lt;code&gt;MorphToMany&lt;/code&gt; relations will be synced to the published model. In order for this to happen you first need to set the &lt;code&gt;$draftableRelations&lt;/code&gt; property on the model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;protected array $draftableRelations = [&#xA;    &#39;posts&#39;,&#xA;    &#39;tags&#39;,&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively you may override the &lt;code&gt;getDraftableRelations&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function getDraftableRelations()&#xA;{&#xA;    return [&#39;posts&#39;, &#39;tags&#39;];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Database&lt;/h4&gt; &#xA;&lt;p&gt;The following database columns are required for the model to store drafts and revisions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;is_current&lt;/li&gt; &#xA; &lt;li&gt;is_published&lt;/li&gt; &#xA; &lt;li&gt;published_at&lt;/li&gt; &#xA; &lt;li&gt;uuid&lt;/li&gt; &#xA; &lt;li&gt;publisher_type&lt;/li&gt; &#xA; &lt;li&gt;publisher_id&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The names of these columns can be changed in the config file or per model using constants&lt;/p&gt; &#xA;&lt;p&gt;e.g. To alter the name of the &lt;code&gt;is_current&lt;/code&gt; column then you would add a class constant called &lt;code&gt;IS_CURRENT&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;use Illuminate\Database\Eloquent\Model;&#xA;use Oddvalue\LaravelDrafts\Concerns\HasDrafts;&#xA;&#xA;class Post extends Model&#xA;{&#xA;    use HasDrafts;&#xA;    &#xA;    public const IS_CURRENT = &#39;admin_editing&#39;;&#xA;    &#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are two helper methods added to the schema builder for use in your migrations that will add/remove all these columns for you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Illuminate\Database\Schema\Blueprint;&#xA;use Illuminate\Support\Facades\Schema;&#xA; &#xA;Schema::table(&#39;posts&#39;, function (Blueprint $table) {&#xA;    $table-&amp;gt;drafts();&#xA;});&#xA; &#xA;Schema::table(&#39;posts&#39;, function (Blueprint $table) {&#xA;    $table-&amp;gt;dropDrafts();&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The API&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;HasDrafts&lt;/code&gt; trait will add a default scope that will only return published/live records.&lt;/p&gt; &#xA;&lt;p&gt;The following quiery builder methods are available to alter this behavior:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;withoutDrafts()&lt;/code&gt;/&lt;code&gt;published(bool $withoutDrafts = true)&lt;/code&gt; Only select published records (default)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;withDrafts(bool $withDrafts = false)&lt;/code&gt; Include draft record&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onlyDrafts()&lt;/code&gt; Select only drafts, exclude published&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Creating a new record&lt;/h4&gt; &#xA;&lt;p&gt;By default, new records will be created as published. You can change this either by including &lt;code&gt;&#39;is_published&#39; =&amp;gt; false&lt;/code&gt; in the attributes of the model or by using the &lt;code&gt;createDraft&lt;/code&gt; or &lt;code&gt;saveAsDraft&lt;/code&gt; methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Post::create([&#xA;    &#39;title&#39; =&amp;gt; &#39;Foo&#39;,&#xA;    &#39;is_published&#39; =&amp;gt; false,&#xA;]);&#xA;&#xA;# OR&#xA;&#xA;Post::createDraft([&#39;title&#39; =&amp;gt; &#39;Foo&#39;]);&#xA;&#xA;# OR&#xA;&#xA;Post::make([&#39;title&#39; =&amp;gt; &#39;Foo&#39;])-&amp;gt;saveAsDraft();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When saving/updating a record the published state will be maintained. If you want to save a draft of a published record then you can use the &lt;code&gt;saveAsDraft&lt;/code&gt; and &lt;code&gt;updateAsDraft&lt;/code&gt; methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;# Create published post&#xA;$post = Post::create([&#39;title&#39; =&amp;gt; &#39;Foo&#39;]);&#xA;&#xA;# Create drafted copy&#xA;&#xA;$post-&amp;gt;updateAsDraft([&#39;title&#39; =&amp;gt; &#39;Bar&#39;]);&#xA;&#xA;# OR&#xA;&#xA;$post-&amp;gt;title = &#39;Bar&#39;;&#xA;$post-&amp;gt;saveAsDraft(); &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a draft record and the original record will be left unchanged.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;title&lt;/th&gt; &#xA;   &lt;th&gt;uuid&lt;/th&gt; &#xA;   &lt;th&gt;published_at&lt;/th&gt; &#xA;   &lt;th&gt;is_published&lt;/th&gt; &#xA;   &lt;th&gt;is_current&lt;/th&gt; &#xA;   &lt;th&gt;created_at&lt;/th&gt; &#xA;   &lt;th&gt;updated_at&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Foo&lt;/td&gt; &#xA;   &lt;td&gt;9188eb5b-cc42-47e9-aec3-d396666b4e80&lt;/td&gt; &#xA;   &lt;td&gt;2000-01-01 00:00:00&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;2000-01-01 00:00:00&lt;/td&gt; &#xA;   &lt;td&gt;2000-01-01 00:00:00&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Bar&lt;/td&gt; &#xA;   &lt;td&gt;9188eb5b-cc42-47e9-aec3-d396666b4e80&lt;/td&gt; &#xA;   &lt;td&gt;2000-01-02 00:00:00&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;2000-01-02 00:00:00&lt;/td&gt; &#xA;   &lt;td&gt;2000-01-02 00:00:00&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Interacting with records&lt;/h3&gt; &#xA;&lt;h4&gt;Published revision&lt;/h4&gt; &#xA;&lt;p&gt;The published revision if the live version of the record and will be the one that is displayed to the public. The default behavior is to only show the published revision.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;# Get all published posts&#xA;$posts = Post::all();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Current Revision&lt;/h4&gt; &#xA;&lt;p&gt;Every record will have a current revision. That is the most recent revision and what you would want to display in your admin.&lt;/p&gt; &#xA;&lt;p&gt;To fetch the current revision you can call the &lt;code&gt;current&lt;/code&gt; scope.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$posts = Post::current()-&amp;gt;get();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can implement a preview mode for your frontend by calling the &lt;code&gt;current&lt;/code&gt; scope when fetching records.&lt;/p&gt; &#xA;&lt;h4&gt;Revisions&lt;/h4&gt; &#xA;&lt;p&gt;Every time a record is updated a new row/revision will be inserted. The default number of revisions kept is 10, this can be updated in the published config file.&lt;/p&gt; &#xA;&lt;p&gt;You can fetch the revisions of a record by calling the &lt;code&gt;revisions&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$post = Post::find(1);&#xA;$revisions = $post-&amp;gt;revisions();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Deleting a record will also delete all of its revisions. Soft deleting records will soft delete the revisions and restoring records will restore the revisions.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/spatie/.github/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please review &lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/security/policy&#34;&gt;our security policy&lt;/a&gt; on how to report security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oddvalue&#34;&gt;jim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/oddvalue/laravel-drafts/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>briannesbitt/Carbon</title>
    <updated>2022-07-12T01:34:35Z</updated>
    <id>tag:github.com,2022-07-12:/briannesbitt/Carbon</id>
    <link href="https://github.com/briannesbitt/Carbon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple PHP API extension for DateTime.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Carbon&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/nesbot/carbon&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/nesbot/carbon.svg?style=flat-square&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/nesbot/carbon&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/nesbot/carbon.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://actions-badge.atrox.dev/briannesbitt/Carbon/goto&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Fbriannesbitt%2FCarbon%2Fbadge&amp;amp;style=flat-square&amp;amp;label=Build&amp;amp;logo=none&#34; alt=&#34;GitHub Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/briannesbitt/Carbon?branch=master&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/briannesbitt/Carbon.svg?style=flat-square&#34; alt=&#34;codecov.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tidelift.com/subscription/pkg/packagist-nesbot-carbon?utm_source=packagist-nesbot-carbon&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme&#34;&gt;&lt;img src=&#34;https://tidelift.com/badges/github/briannesbitt/Carbon&#34; alt=&#34;Tidelift&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An international PHP extension for DateTime. &lt;a href=&#34;https://carbon.nesbot.com&#34;&gt;https://carbon.nesbot.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;use Carbon\Carbon;&#xA;&#xA;printf(&#34;Right now is %s&#34;, Carbon::now()-&amp;gt;toDateTimeString());&#xA;printf(&#34;Right now in Vancouver is %s&#34;, Carbon::now(&#39;America/Vancouver&#39;));  //implicit __toString()&#xA;$tomorrow = Carbon::now()-&amp;gt;addDay();&#xA;$lastWeek = Carbon::now()-&amp;gt;subWeek();&#xA;$nextSummerOlympics = Carbon::createFromDate(2016)-&amp;gt;addYears(4);&#xA;&#xA;$officialDate = Carbon::now()-&amp;gt;toRfc2822String();&#xA;&#xA;$howOldAmI = Carbon::createFromDate(1975, 5, 21)-&amp;gt;age;&#xA;&#xA;$noonTodayLondonTime = Carbon::createFromTime(12, 0, 0, &#39;Europe/London&#39;);&#xA;&#xA;$internetWillBlowUpOn = Carbon::create(2038, 01, 19, 3, 14, 7, &#39;GMT&#39;);&#xA;&#xA;// Don&#39;t really want this to happen so mock now&#xA;Carbon::setTestNow(Carbon::createFromDate(2000, 1, 1));&#xA;&#xA;// comparisons are always done in UTC&#xA;if (Carbon::now()-&amp;gt;gte($internetWillBlowUpOn)) {&#xA;    die();&#xA;}&#xA;&#xA;// Phew! Return to normal behaviour&#xA;Carbon::setTestNow();&#xA;&#xA;if (Carbon::now()-&amp;gt;isWeekend()) {&#xA;    echo &#39;Party!&#39;;&#xA;}&#xA;// Over 200 languages (and over 500 regional variants) supported:&#xA;echo Carbon::now()-&amp;gt;subMinutes(2)-&amp;gt;diffForHumans(); // &#39;2 minutes ago&#39;&#xA;echo Carbon::now()-&amp;gt;subMinutes(2)-&amp;gt;locale(&#39;zh_CN&#39;)-&amp;gt;diffForHumans(); // &#39;2分钟前&#39;&#xA;echo Carbon::parse(&#39;2019-07-23 14:51&#39;)-&amp;gt;isoFormat(&#39;LLLL&#39;); // &#39;Tuesday, July 23, 2019 2:51 PM&#39;&#xA;echo Carbon::parse(&#39;2019-07-23 14:51&#39;)-&amp;gt;locale(&#39;fr_FR&#39;)-&amp;gt;isoFormat(&#39;LLLL&#39;); // &#39;mardi 23 juillet 2019 14:51&#39;&#xA;&#xA;// ... but also does &#39;from now&#39;, &#39;after&#39; and &#39;before&#39;&#xA;// rolling up to seconds, minutes, hours, days, months, years&#xA;&#xA;$daysSinceEpoch = Carbon::createFromTimestamp(0)-&amp;gt;diffInDays();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tidelift.com/subscription/pkg/packagist-nesbot-carbon?utm_source=packagist-nesbot-carbon&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme&#34;&gt;Get supported nesbot/carbon with the Tidelift Subscription&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;With Composer&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ composer require nesbot/carbon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;require&#34;: {&#xA;        &#34;nesbot/carbon&#34;: &#34;^2.16&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;require &#39;vendor/autoload.php&#39;;&#xA;&#xA;use Carbon\Carbon;&#xA;&#xA;printf(&#34;Now: %s&#34;, Carbon::now());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Without Composer&lt;/h3&gt; &#xA;&lt;p&gt;Why are you not using &lt;a href=&#34;https://getcomposer.org/&#34;&gt;composer&lt;/a&gt;? Download the Carbon &lt;a href=&#34;https://github.com/briannesbitt/Carbon/releases&#34;&gt;latest release&lt;/a&gt; and put the contents of the ZIP archive into a directory in your project. Then require the file &lt;code&gt;autoload.php&lt;/code&gt; to get all classes and dependencies loaded on need.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;require &#39;path-to-Carbon-directory/autoload.php&#39;;&#xA;&#xA;use Carbon\Carbon;&#xA;&#xA;printf(&#34;Now: %s&#34;, Carbon::now());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://carbon.nesbot.com/docs&#34;&gt;https://carbon.nesbot.com/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Security contact information&lt;/h2&gt; &#xA;&lt;p&gt;To report a security vulnerability, please use the &lt;a href=&#34;https://tidelift.com/security&#34;&gt;Tidelift security contact&lt;/a&gt;. Tidelift will coordinate the fix and disclosure.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/briannesbitt/Carbon/graphs/contributors&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Carbon/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Translators&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://carbon.nesbot.com/contribute/translators/&#34;&gt;Thanks to people helping us to translate Carbon in so many languages&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tidelift.com/subscription/pkg/packagist-nesbot-carbon?utm_source=packagist-nesbot-carbon&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://carbon.nesbot.com/tidelift-brand.png&#34; width=&#34;256&#34; height=&#34;64&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://onlinecasinohex.ca/?utm_source=opencollective&amp;amp;utm_medium=github&amp;amp;utm_campaign=Carbon&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/hexcasinoca/2da3af2/logo/256.png&#34; width=&#34;85&#34; height=&#34;64&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Carbon/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Carbon/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Carbon/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Carbon/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Carbon/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Carbon/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Carbon/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Carbon/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Carbon/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Carbon/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Carbon/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Carbon/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Carbon/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Carbon/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Carbon/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Carbon/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/Carbon/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Carbon/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://opencollective.com/Carbon#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/Carbon#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Carbon/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://opencollective.com/Carbon#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h2&gt;Carbon for enterprise&lt;/h2&gt; &#xA;&lt;p&gt;Available as part of the Tidelift Subscription.&lt;/p&gt; &#xA;&lt;p&gt;The maintainers of &lt;code&gt;Carbon&lt;/code&gt; and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. &lt;a href=&#34;https://tidelift.com/subscription/pkg/packagist-nesbot-carbon?utm_source=packagist-nesbot-carbon&amp;amp;utm_medium=referral&amp;amp;utm_campaign=enterprise&amp;amp;utm_term=repo&#34;&gt;Learn more.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openmediavault/openmediavault</title>
    <updated>2022-07-12T01:34:35Z</updated>
    <id>tag:github.com,2022-07-12:/openmediavault/openmediavault</id>
    <link href="https://github.com/openmediavault/openmediavault" rel="alternate"></link>
    <summary type="html">&lt;p&gt;openmediavault is the next generation network attached storage (NAS) solution based on Debian Linux. It contains services like SSH, (S)FTP, SMB/CIFS, DAAP media server, RSync, BitTorrent client and many more. Thanks to the modular design of the framework it can be enhanced via plugins. OpenMediaVault is primarily designed to be used in home envi…&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;openmediavault&lt;/h1&gt; &#xA;&lt;p&gt;openmediavault is the next generation network attached storage (NAS) solution based on Debian Linux. It contains services like SSH, (S)FTP, SMB/CIFS, DAAP media server, RSync, BitTorrent client and many more. Thanks to the modular design of the framework it can be enhanced via plugins. openmediavault is primarily designed to be used in home environments or small home offices, but is not limited to those scenarios. It is a simple and easy to use out-of-the-box solution that will allow everyone to install and administrate a Network Attached Storage without deeper knowledge.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;A detailed instruction about how to install openmediavault can be found &lt;a href=&#34;https://docs.openmediavault.org/en/stable/installation/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.openmediavault.org&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.openmediavault.org&#34;&gt;Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.openmediavault.org&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Donation&lt;/h2&gt; &#xA;&lt;p&gt;openmediavault is free, but costs money and time to produce, support and distribute. This gift to the developer would demonstrate your appreciation of this software and help its future development.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=95MF5UQ66PW2E&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&#34; alt=&#34;paypal&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>