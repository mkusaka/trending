<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-05T08:25:56Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Shopify/shopify-app-template-php</title>
    <updated>2023-02-05T08:25:56Z</updated>
    <id>tag:github.com,2023-02-05:/Shopify/shopify-app-template-php</id>
    <link href="https://github.com/Shopify/shopify-app-template-php" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shopify App Template - PHP&lt;/h1&gt; &#xA;&lt;p&gt;This is a template for building a &lt;a href=&#34;https://shopify.dev/apps/getting-started&#34;&gt;Shopify app&lt;/a&gt; using PHP and React. It contains the basics for building a Shopify app.&lt;/p&gt; &#xA;&lt;p&gt;Rather than cloning this repo, you can use your preferred package manager and the Shopify CLI with &lt;a href=&#34;https://raw.githubusercontent.com/Shopify/shopify-app-template-php/main/#installing-the-template&#34;&gt;these steps&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Benefits&lt;/h2&gt; &#xA;&lt;p&gt;Shopify apps are built on a variety of Shopify tools to create a great merchant experience. The &lt;a href=&#34;https://shopify.dev/apps/getting-started/create&#34;&gt;create an app&lt;/a&gt; tutorial in our developer documentation will guide you through creating a Shopify app using this template.&lt;/p&gt; &#xA;&lt;p&gt;The PHP app template comes with the following out-of-the-box functionality:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OAuth: Installing the app and granting permissions&lt;/li&gt; &#xA; &lt;li&gt;GraphQL Admin API: Querying or mutating Shopify admin data&lt;/li&gt; &#xA; &lt;li&gt;REST Admin API: Resource classes to interact with the API&lt;/li&gt; &#xA; &lt;li&gt;Shopify-specific tooling: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AppBridge&lt;/li&gt; &#xA;   &lt;li&gt;Polaris&lt;/li&gt; &#xA;   &lt;li&gt;Webhooks&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;p&gt;This template combines a number of third party open source tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://laravel.com/&#34;&gt;Laravel&lt;/a&gt; builds and tests the backend.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite&lt;/a&gt; builds the &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; frontend.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactrouter.com/&#34;&gt;React Router&lt;/a&gt; is used for routing. We wrap this with file-based routing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-query.tanstack.com/&#34;&gt;React Query&lt;/a&gt; queries the Admin API.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These third party tools are complemented by Shopify specific tools to ease app development:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shopify/shopify-api-php&#34;&gt;Shopify API library&lt;/a&gt; adds OAuth to the Laravel backend. This lets users install the app and grant scope permissions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shopify.dev/tools/app-bridge/react-components&#34;&gt;App Bridge React&lt;/a&gt; adds authentication to API requests in the frontend and renders components outside of the embedded App’s iFrame.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://polaris.shopify.com/&#34;&gt;Polaris React&lt;/a&gt; is a powerful design system and component library that helps developers build high quality, consistent experiences for Shopify merchants.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shopify/shopify-frontend-template-react/tree/main/hooks&#34;&gt;Custom hooks&lt;/a&gt; make authenticated requests to the GraphQL Admin API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shopify/shopify-frontend-template-react/raw/main/Routes.jsx&#34;&gt;File-based routing&lt;/a&gt; makes creating new pages easier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You must &lt;a href=&#34;https://partners.shopify.com/signup&#34;&gt;create a Shopify partner account&lt;/a&gt; if you don’t have one.&lt;/li&gt; &#xA; &lt;li&gt;You must &lt;a href=&#34;https://help.shopify.com/en/partners/dashboard/development-stores#create-a-development-store&#34;&gt;create a development store&lt;/a&gt; if you don’t have one.&lt;/li&gt; &#xA; &lt;li&gt;You must have &lt;a href=&#34;https://www.php.net/&#34;&gt;PHP&lt;/a&gt; installed.&lt;/li&gt; &#xA; &lt;li&gt;You must have &lt;a href=&#34;https://getcomposer.org/&#34;&gt;Composer&lt;/a&gt; installed.&lt;/li&gt; &#xA; &lt;li&gt;You must have &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; installed.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Installing the template&lt;/h3&gt; &#xA;&lt;p&gt;This template runs on Shopify CLI 3.0, which is a node package that can be included in projects. You can install it using your preferred Node.js package manager:&lt;/p&gt; &#xA;&lt;p&gt;Using yarn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn create @shopify/app --template php&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using npx:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm init @shopify/app@latest -- --template php&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using pnpm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm create @shopify/app@latest --template php&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will clone the template and install the CLI in that project.&lt;/p&gt; &#xA;&lt;h3&gt;Setting up your Laravel app&lt;/h3&gt; &#xA;&lt;p&gt;Once the Shopify CLI clones the repo, you will be able to run commands on your app. However, the CLI will not manage your PHP dependencies automatically, so you will need to go through some steps to be able to run your app. These are the typical steps needed to set up a Laravel app once it&#39;s cloned:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Start off by switching to the &lt;code&gt;web&lt;/code&gt; folder:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd web&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install your composer dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;composer install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bootstrap the default &lt;a href=&#34;https://www.sqlite.org/index.html&#34;&gt;SQLite&lt;/a&gt; database and add it to your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;touch storage/db.sqlite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Once you create the database file, make sure to update your &lt;code&gt;DB_DATABASE&lt;/code&gt; variable in &lt;code&gt;.env&lt;/code&gt; since Laravel requires a full path to the file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate an &lt;code&gt;APP_KEY&lt;/code&gt; for your app:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php artisan key:generate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the necessary Shopify tables in your database:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php artisan migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;And your Laravel app is ready to run! You can now switch back to your app&#39;s root folder to continue:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Local Development&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://shopify.dev/apps/tools/cli&#34;&gt;The Shopify CLI&lt;/a&gt; connects to an app in your Partners dashboard. It provides environment variables, runs commands in parallel, and updates application URLs for easier development.&lt;/p&gt; &#xA;&lt;p&gt;You can develop locally using your preferred Node.js package manager. Run one of the following commands from the root of your app:&lt;/p&gt; &#xA;&lt;p&gt;Using yarn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using pnpm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open the URL generated in your console. Once you grant permission to the app, you can start development.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;h3&gt;Application Storage&lt;/h3&gt; &#xA;&lt;p&gt;This template uses &lt;a href=&#34;https://laravel.com/docs/9.x/eloquent&#34;&gt;Laravel&#39;s Eloquent framework&lt;/a&gt; to store Shopify session data. It provides migrations to create the necessary tables in your database, and it stores and loads session data from them.&lt;/p&gt; &#xA;&lt;p&gt;The database that works best for you depends on the data your app needs and how it is queried. You can run your database of choice on a server yourself or host it with a SaaS company. Once you decide which database to use, you can update your Laravel app&#39;s &lt;code&gt;DB_*&lt;/code&gt; environment variables to connect to it, and this template will start using that database for session storage.&lt;/p&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;p&gt;The frontend is a single page React app. It requires the &lt;code&gt;SHOPIFY_API_KEY&lt;/code&gt; environment variable, which you can find on the page for your app in your partners dashboard. The CLI will set up the necessary environment variables for the build if you run its &lt;code&gt;build&lt;/code&gt; command from your app&#39;s root:&lt;/p&gt; &#xA;&lt;p&gt;Using yarn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn build --api-key=REPLACE_ME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm run build --api-key=REPLACE_ME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using pnpm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm run build --api-key=REPLACE_ME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The app build command will build both the frontend and backend when running as above. If you&#39;re manually building (for instance when deploying the &lt;code&gt;web&lt;/code&gt; folder to production), you&#39;ll need to build both of them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd web/frontend&#xA;SHOPIFY_API_KEY=REPLACE_ME yarn build&#xA;cd ..&#xA;composer build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Hosting&lt;/h2&gt; &#xA;&lt;p&gt;When you&#39;re ready to set up your app in production, you can follow &lt;a href=&#34;https://shopify.dev/apps/deployment/web&#34;&gt;our deployment documentation&lt;/a&gt; to host your app on a cloud provider like &lt;a href=&#34;https://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt; or &lt;a href=&#34;https://fly.io/&#34;&gt;Fly.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you reach the step for &lt;a href=&#34;https://shopify.dev/apps/deployment/web#set-env-vars&#34;&gt;setting up environment variables&lt;/a&gt;, you also need to set the following variables:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Secret?&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Required&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;APP_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Run &lt;code&gt;php web/artisan key:generate --show&lt;/code&gt; to generate one.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;APP_NAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;App name for Laravel.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;APP_ENV&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#34;production&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DB_CONNECTION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Set this to the database you want to use, e.g. &lt;code&gt;&#34;sqlite&#34;&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DB_DATABASE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Set this to the connection string to your database, e.g. &lt;code&gt;&#34;/app/storage/db.sqlite&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DB_FOREIGN_KEYS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If your app is using foreign keys.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;h3&gt;Hot module replacement and Firefox&lt;/h3&gt; &#xA;&lt;p&gt;When running the app with the CLI in development mode on Firefox, you might see your app constantly reloading when you access it. That happened in previous versions of the CLI, because of the way HMR websocket requests work.&lt;/p&gt; &#xA;&lt;p&gt;We fixed this issue with v3.4.0 of the CLI, so after updating it, you can make the following changes to your app&#39;s &lt;code&gt;web/frontend/vite.config.js&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Change the definition &lt;code&gt;hmrConfig&lt;/code&gt; object to be:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const host = process.env.HOST&#xA;    ? process.env.HOST.replace(/https?:\/\//, &#34;&#34;)&#xA;    : &#34;localhost&#34;;&#xA;&#xA;let hmrConfig;&#xA;if (host === &#34;localhost&#34;) {&#xA;    hmrConfig = {&#xA;        protocol: &#34;ws&#34;,&#xA;        host: &#34;localhost&#34;,&#xA;        port: 64999,&#xA;        clientPort: 64999,&#xA;    };&#xA;} else {&#xA;    hmrConfig = {&#xA;        protocol: &#34;wss&#34;,&#xA;        host: host,&#xA;        port: process.env.FRONTEND_PORT,&#xA;        clientPort: 443,&#xA;    };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change the &lt;code&gt;server.host&lt;/code&gt; setting in the configs to &lt;code&gt;&#34;localhost&#34;&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;server: {&#xA;  host: &#34;localhost&#34;,&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;I can&#39;t get past the ngrok &#34;Visit site&#34; page&lt;/h3&gt; &#xA;&lt;p&gt;When you’re previewing your app or extension, you might see an ngrok interstitial page with a warning:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;You are about to visit &amp;lt;id&amp;gt;.ngrok.io: Visit Site&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you click the &lt;code&gt;Visit Site&lt;/code&gt; button, but continue to see this page, then you should run dev using an alternate tunnel URL that you run using tunneling software. We&#39;ve validated that &lt;a href=&#34;https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/run-tunnel/trycloudflare/&#34;&gt;Cloudflare Tunnel&lt;/a&gt; works with this template.&lt;/p&gt; &#xA;&lt;p&gt;To do that, you can &lt;a href=&#34;https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/installation/&#34;&gt;install the &lt;code&gt;cloudflared&lt;/code&gt; CLI tool&lt;/a&gt;, and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Note that you can also use a different port&#xA;cloudflared tunnel --url http://localhost:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the output produced by &lt;code&gt;cloudflared tunnel&lt;/code&gt; command, you will notice a https URL where the domain ends with &lt;code&gt;trycloudflare.com&lt;/code&gt;. This is your tunnel URL. You need to copy this URL as you will need it in the next step.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;2022-11-11T19:57:55Z INF Requesting new quick Tunnel on trycloudflare.com...&#xA;2022-11-11T19:57:58Z INF +--------------------------------------------------------------------------------------------+&#xA;2022-11-11T19:57:58Z INF |  Your quick Tunnel has been created! Visit it at (it may take some time to be reachable):  |&#xA;2022-11-11T19:57:58Z INF |  https://randomly-generated-hostname.trycloudflare.com                                     |&#xA;2022-11-11T19:57:58Z INF +--------------------------------------------------------------------------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In a different terminal window, navigate to your app&#39;s root and run one of the following commands (replacing &lt;code&gt;randomly-generated-hostname&lt;/code&gt; with the Cloudflare tunnel URL copied from the output of &lt;code&gt;cloudflared&lt;/code&gt; command):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Using yarn&#xA;yarn dev --tunnel-url https://randomly-generated-hostname.trycloudflare.com:3000&#xA;# or using npm&#xA;npm run dev --tunnel-url https://randomly-generated-hostname.trycloudflare.com:3000&#xA;# or using pnpm&#xA;pnpm dev --tunnel-url https://randomly-generated-hostname.trycloudflare.com:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Developer resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shopify.dev/apps/getting-started&#34;&gt;Introduction to Shopify apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shopify.dev/apps/auth&#34;&gt;App authentication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shopify.dev/apps/tools/cli&#34;&gt;Shopify CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shopify/shopify-api-php/tree/main/docs&#34;&gt;Shopify API Library documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>