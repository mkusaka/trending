<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-20T01:33:02Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sajadsdi/laravel-setting-pro</title>
    <updated>2024-02-20T01:33:02Z</updated>
    <id>tag:github.com,2024-02-20:/sajadsdi/laravel-setting-pro</id>
    <link href="https://github.com/sajadsdi/laravel-setting-pro" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy setting management for Laravel framework&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://sajadsdi.github.io/images/laravel-setting-pro.jpg&#34; alt=&#34;Laravel Setting Pro&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Laravel Setting Pro&lt;/h1&gt; &#xA;&lt;p&gt;Effortless Management of Laravel Application Settings.&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;A Laravel package that provides a simple and effective way to handle application settings with support for persistent storage using both file-based and database drivers.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The Laravel Setting Pro package simplifies application settings management in Laravel and provides these key features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Flexible Storage&lt;/strong&gt;: Choose between file-based or database storage to suit your application&#39;s needs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Flexible Database&lt;/strong&gt;: Choose between &lt;code&gt;mysql&lt;/code&gt; or &lt;code&gt;mongodb&lt;/code&gt; or create own db connection for settings.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Caching&lt;/strong&gt;: Improve performance with automatic caching of settings. You can choose between &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;redis&lt;/code&gt; or create own cache driver.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Queue Support&lt;/strong&gt;: Handle setting updates and deletes in the background, ensuring smooth user experiences.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Event Triggers&lt;/strong&gt;: Respond to setting changes in real-time by leveraging Laravel events.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Global Helper Function &amp;amp; Facade&lt;/strong&gt;: Access and manipulate settings anywhere in your laravel app with a simple &lt;code&gt;setting&lt;/code&gt; function or &lt;code&gt;Setting&lt;/code&gt; facade (even in the config files).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Artisan Commands for Ease of Use&lt;/strong&gt;: Publish configuration and migrations effortlessly with the &lt;code&gt;setting:publish&lt;/code&gt; artisan command; complete installations, migrations, and initial tests using the &lt;code&gt;setting:install&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy get &amp;amp; set and delete settings with dot notation&lt;/strong&gt;: &lt;code&gt;get&lt;/code&gt; &amp;amp; &lt;code&gt;set&lt;/code&gt; &amp;amp; &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;has&lt;/code&gt; operations on nested settings keys.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy import settings&lt;/strong&gt; : Import settings from a driver to default store driver.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Auto create setting&lt;/strong&gt; : you can use default value for get operation or set operation on any new setting name.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This package is designed for developers looking for an efficient and intuitive way to handle application settings. It offers the necessary tools while keeping the process simple and maintainable.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP ^8.1&lt;/li&gt; &#xA; &lt;li&gt;Laravel ^9.0|^10.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Use Composer to install the package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require sajadsdi/laravel-setting-pro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;After the package installation, use the provided Artisan commands to publish configuration and migration files, and complete the installation process:&lt;/p&gt; &#xA;&lt;p&gt;First, publish the configuration and migration files using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan setting:publish&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will publish &lt;code&gt;_setting.php&lt;/code&gt; to your &lt;code&gt;config&lt;/code&gt; folder and migration file.&lt;/p&gt; &#xA;&lt;p&gt;Then, use the installation command to perform migrations and any necessary setup operations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan setting:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These commands will set up your settings table in the database and ensure that the package is ready to use.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Two ways to use Laravel Setting Pro:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Using the &lt;code&gt;setting&lt;/code&gt; function:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// Get a setting value&#xA;$value = setting(&#39;my_setting&#39;)-&amp;gt;get(&#39;key&#39;, &#39;default value&#39;);&#xA;//or &#xA;$value = setting(&#39;my_setting&#39;,&#39;key&#39;, &#39;default value&#39;);&#xA;//or&#xA;$value = setting()-&amp;gt;select(&#39;my_setting&#39;)-&amp;gt;get(&#39;key&#39;, &#39;default value&#39;);&#xA;&#xA;&#xA;// Set a setting value&#xA;setting(&#39;my_setting&#39;)-&amp;gt;set([&#39;key&#39; =&amp;gt; &#39;value&#39;]);&#xA;//or&#xA;setting()-&amp;gt;select(&#39;my_setting&#39;)-&amp;gt;set([&#39;key&#39; =&amp;gt; &#39;value&#39;]);&#xA;&#xA;&#xA;//delete a key from setting&#xA;setting(&#39;my_setting&#39;)-&amp;gt;delete(&#39;key&#39;);&#xA;//or&#xA;setting()-&amp;gt;select(&#39;my_setting&#39;)-&amp;gt;delete(&#39;key&#39;);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Using the &lt;code&gt;Setting&lt;/code&gt; facade:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;use Sajadsdi\LaravelSettingPro\Support\Setting;&#xA;&#xA;// Get a setting value&#xA;$value = Setting::select(&#39;my_setting&#39;)-&amp;gt;get(&#39;key&#39;, &#39;default value&#39;);&#xA;//or&#xA;$value = Setting::my_setting()-&amp;gt;get(&#39;key&#39;, &#39;default value&#39;);&#xA;//or&#xA;$value = Setting::my_setting(&#39;key&#39;, &#39;default value&#39;);&#xA;&#xA;// Set a setting value&#xA;Setting::select(&#39;my_setting&#39;)-&amp;gt;set(&#39;key&#39;, &#39;value&#39;);&#xA;//or&#xA;Setting::my_setting()-&amp;gt;set(&#39;key&#39;, &#39;value&#39;);&#xA;&#xA;//delete key from setting&#xA;Setting::select(&#39;my_setting&#39;)-&amp;gt;delete(&#39;key&#39;);&#xA;//or&#xA;Setting::my_setting()-&amp;gt;delete(&#39;key&#39;);&#xA;&#xA;//checking exists by has method&#xA;if(Setting::select(&#39;my_setting&#39;)-&amp;gt;has(&#39;key&#39;)){&#xA;    echo &#34;key exists!&#34;;&#xA;}else{&#xA;    echo &#34;key not exists!&#34;;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;p&gt;you can use &lt;code&gt;set&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt; operation in any way as stated above, with dot notation and multiple keys and defaults like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;//get operation&#xA;&#xA;$value = Setting::my_setting([&#39;users.3.profile.pic&#39;,&#39;users.3.profile.name&#39;], [&#34;default.png&#34;,&#34;No name&#34;]);&#xA;//or multi keys and single defaults&#xA;$value = setting(&#39;my_setting&#39;)-&amp;gt;get([&#39;users.3.profile.pic&#39;,&#39;users.3.profile.name&#39;], [&#34;no data&#34;]);&#xA;&#xA;&#xA;//set operation &#xA;setting::select(&#39;my_setting&#39;)-&amp;gt;set([&#39;users.3.profile.pic&#39; =&amp;gt; &#34;profile.png&#34;,&#39;users.3.profile.name&#39; =&amp;gt; &#34;john&#34;])&#xA;&#xA;//delete multiple keys&#xA;setting::select(&#39;my_setting&#39;)-&amp;gt;delete([&#39;users.3.profile.pic&#39;,&#39;users.3.profile.name&#39;]);&#xA;&#xA;//multiple keys checking exists by has method&#xA;if(Setting::select(&#39;my_setting&#39;)-&amp;gt;has([&#39;users.3.profile.pic&#39;,&#39;users.3.profile.name&#39;])){&#xA;    echo &#34;The keys are exists!&#34;;&#xA;}else{&#xA;    echo &#34;The keys do not exist!&#34;;&#xA;}&#xA;&#xA;&#xA;// it&#39;s very Easy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This package use &lt;code&gt;Dot Notation Array&lt;/code&gt; package to getting keys and setting operations you can see &lt;a href=&#34;https://github.com/sajadsdi/array-dot-notation&#34;&gt;Documentation&lt;/a&gt; to better use for Laravel Setting Pro&lt;/p&gt; &#xA;&lt;h2&gt;Caching&lt;/h2&gt; &#xA;&lt;p&gt;You can set config to enable setting cache, and you can choose cache driver for optimal performance. To clear the settings cache, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan setting:clear-cache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;You can change &lt;code&gt;_setting&lt;/code&gt; config on laravel config path.&lt;/p&gt; &#xA;&lt;p&gt;For more details about Configuration Laravel Setting Pro , &lt;a href=&#34;https://raw.githubusercontent.com/sajadsdi/laravel-setting-pro/main/CONFIGURATION.md&#34;&gt;click here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We welcome contributions from the community to improve and extend this library. If you&#39;d like to contribute, please follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repository on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;Clone your fork locally.&lt;/li&gt; &#xA; &lt;li&gt;Create a new branch for your feature or bug fix.&lt;/li&gt; &#xA; &lt;li&gt;Make your changes and commit them with clear, concise commit messages.&lt;/li&gt; &#xA; &lt;li&gt;Push your changes to your fork on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request to the main repository.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Reporting Bugs and Security Issues&lt;/h3&gt; &#xA;&lt;p&gt;If you discover any security vulnerabilities or bugs in this project, please let us know through the following channels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: You can &lt;a href=&#34;https://github.com/sajadsdi/laravel-setting-pro/issues&#34;&gt;open an issue&lt;/a&gt; on our GitHub repository to report bugs or security concerns. Please provide as much detail as possible, including steps to reproduce the issue.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Contact&lt;/strong&gt;: For sensitive security-related issues, you can contact us directly through the following contact channels&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contact&lt;/h3&gt; &#xA;&lt;p&gt;If you have any questions, suggestions, financial, or if you&#39;d like to contribute to this project, please feel free to contact the maintainer:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email: &lt;a href=&#34;mailto:thunder11like@gmail.com&#34;&gt;thunder11like@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We appreciate your feedback, support, and any financial contributions that help us maintain and improve this project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This package is open-sourced software licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/sajadsdi/laravel-setting-pro/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Made with ❤️ by &lt;a href=&#34;mailto:thunder11like@gmail.com&#34;&gt;SajaD SaeeDi&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tempestphp/tempest-framework</title>
    <updated>2024-02-20T01:33:02Z</updated>
    <id>tag:github.com,2024-02-20:/tempestphp/tempest-framework</id>
    <link href="https://github.com/tempestphp/tempest-framework" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The PHP framework that gets out of your way.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The PHP framework that gets out of your way.&lt;/h1&gt; &#xA;&lt;p&gt;Read how to get started with Tempest &lt;a href=&#34;https://github.com/tempestphp/tempest-docs/raw/master/01-getting-started.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Zero config, zero overhead. This is Tempest:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;final readonly class BookController&#xA;{&#xA;    #[Get(&#39;/blog&#39;)]&#xA;    public function index() { /* … */ }&#xA;    &#xA;    #[Get(&#39;/blog/{post}&#39;)]&#xA;    public function show(Post $post) { /* … */ }&#xA;}&#xA;&#xA;final readonly class RssSyncCommand&#xA;{&#xA;    public function __construct(private Console $console) {}&#xA;&#xA;    #[ConsoleCommand(&#39;rss:sync&#39;)]&#xA;    public function __invoke(bool $force = false)  { /* … */ }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome your PRs and contributions. If you have any feature requests or bug reports, head over to the &lt;a href=&#34;https://github.com/tempestphp/tempest-framework/issues&#34;&gt;issue page&lt;/a&gt; and feel free to create an issue.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to send PRs, you can check out and run Tempest locally like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;git clone git@github.com:tempestphp/tempest-framework.git&#xA;cd tempest-framework/&#xA;composer update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Before submitting PRs, run &lt;code&gt;composer qa&lt;/code&gt; locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;composer qa&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>