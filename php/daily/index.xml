<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-08T01:37:33Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>orhanerday/open-ai</title>
    <updated>2022-11-08T01:37:33Z</updated>
    <id>tag:github.com,2022-11-08:/orhanerday/open-ai</id>
    <link href="https://github.com/orhanerday/open-ai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A PHP SDK for accessing the OpenAI GPT-3 API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI GPT-3 Api Client in PHP&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/orhanerday/open-ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/orhanerday/open-ai.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/orhanerday/open-ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/orhanerday/open-ai.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/openai-elephpant.svg?sanitize=true&#34; width=&#34;1250&#34; height=&#34;300&#34; alt=&#34;orhanerday-open-ai-logo&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;For more information, you can read laravel news &lt;a href=&#34;https://laravel-news.com/openai-sdk-for-php&#34;&gt;blog post&lt;/a&gt;.&lt;/h4&gt; &#xA; &lt;h4&gt;To get started with this package, you&#39;ll first want to be familiar with the &lt;a href=&#34;https://beta.openai.com/docs/introduction&#34;&gt;OpenAI API documentation&lt;/a&gt; and &lt;a href=&#34;https://beta.openai.com/examples&#34;&gt;examples&lt;/a&gt;.&lt;/h4&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;p&gt;orhanerday/open-ai added to community libraries php &lt;a href=&#34;https://beta.openai.com/docs/libraries/php&#34;&gt;section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require orhanerday/open-ai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Before you get starting, you should set OPENAI_API_KEY as ENV key, and set OpenAI key as env value with the following commands;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Powershell&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$Env:OPENAI_API_KEY = &#34;sk-gjtv.....&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Cmd&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;set OPENAI_API_KEY=sk-gjtv.....&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Linux or macOS&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export OPENAI_API_KEY=sk-gjtv.....&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Getting issues while setting up env? Please read &lt;a href=&#34;https://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety&#34;&gt;https://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety&lt;/a&gt; article.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Create your &lt;code&gt;index.php&lt;/code&gt; file and paste the following code part into the file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;require __DIR__ . &#39;/vendor/autoload.php&#39;; // remove this line if you use a PHP Framework.&#xA;&#xA;use Orhanerday\OpenAi\OpenAi;&#xA;&#xA;$open_ai_key = getenv(&#39;OPENAI_API_KEY&#39;);&#xA;$open_ai = new OpenAi($open_ai_key);&#xA;&#xA;$complete = $open_ai-&amp;gt;complete([&#xA;    &#39;engine&#39; =&amp;gt; &#39;davinci&#39;,&#xA;    &#39;prompt&#39; =&amp;gt; &#39;Hello&#39;,&#xA;    &#39;temperature&#39; =&amp;gt; 0.9,&#xA;    &#39;max_tokens&#39; =&amp;gt; 150,&#xA;    &#39;frequency_penalty&#39; =&amp;gt; 0,&#xA;    &#39;presence_penalty&#39; =&amp;gt; 0.6,&#xA;]);&#xA;&#xA;var_dump($complete);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Run the server with the following command&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php -S localhost:8000 -t .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Load your key from an environment variable.&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;According to the following code &lt;code&gt;$open_ai&lt;/code&gt; is the base variable for all open-ai operations.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Orhanerday\OpenAi\OpenAi;&#xA;&#xA;$open_ai = new OpenAi(env(&#39;OPEN_AI_API_KEY&#39;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Completions&lt;/h2&gt; &#xA;&lt;p&gt;Given a prompt, the model will return one or more predicted completions, and can also return the probabilities of alternative tokens at each position.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$complete = $open_ai-&amp;gt;complete([&#xA;   &#39;engine&#39; =&amp;gt; &#39;davinci&#39;,&#xA;   &#39;prompt&#39; =&amp;gt; &#39;Hello&#39;,&#xA;   &#39;temperature&#39; =&amp;gt; 0.9,&#xA;   &#39;max_tokens&#39; =&amp;gt; 150,&#xA;   &#39;frequency_penalty&#39; =&amp;gt; 0,&#xA;   &#39;presence_penalty&#39; =&amp;gt; 0.6,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Edits&lt;/h2&gt; &#xA;&lt;p&gt;Creates a new edit for the provided input, instruction, and parameters&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;   $result = $open_ai-&amp;gt;createEdit([&#xA;       &#34;model&#34; =&amp;gt; &#34;text-davinci-edit-001&#34;,&#xA;       &#34;input&#34; =&amp;gt; &#34;What day of the wek is it?&#34;,&#xA;       &#34;instruction&#34; =&amp;gt; &#34;Fix the spelling mistakes&#34;,&#xA;   ]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Images (DALL·E)&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All DALL·E Examples available in this &lt;a href=&#34;https://github.com/orhanerday/DALLE-Examples&#34;&gt;repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Given a prompt, the model will return one or more generated images as urls or base64 encoded.&lt;/p&gt; &#xA;&lt;h3&gt;Create image&lt;/h3&gt; &#xA;&lt;p&gt;Creates an image given a prompt.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$complete = $open_ai-&amp;gt;image([&#xA;   &#34;prompt&#34; =&amp;gt; &#34;A cat drinking milk&#34;,&#xA;   &#34;n&#34; =&amp;gt; 1,&#xA;   &#34;size&#34; =&amp;gt; &#34;256x256&#34;,&#xA;   &#34;response_format&#34; =&amp;gt; &#34;url&#34;,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create image edit&lt;/h3&gt; &#xA;&lt;p&gt;Creates an edited or extended image given an original image and a prompt.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You need HTML upload for image edit or variation? Please check &lt;a href=&#34;https://github.com/orhanerday/DALLE-Examples&#34;&gt;DALL·E Examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$otter = curl_file_create(__DIR__ . &#39;./files/otter.png&#39;);&#xA;$mask = curl_file_create(__DIR__ . &#39;./files/mask.jpg&#39;);&#xA;&#xA;$result = $open_ai-&amp;gt;imageEdit([&#xA;    &#34;image&#34; =&amp;gt; $otter,&#xA;    &#34;mask&#34; =&amp;gt; $mask,&#xA;    &#34;prompt&#34; =&amp;gt; &#34;A cute baby sea otter wearing a beret&#34;,&#xA;    &#34;n&#34; =&amp;gt; 2,&#xA;    &#34;size&#34; =&amp;gt; &#34;1024x1024&#34;,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create image variation&lt;/h3&gt; &#xA;&lt;p&gt;Creates a variation of a given image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$otter = curl_file_create(__DIR__ . &#39;./files/otter.png&#39;);&#xA;&#xA;$result = $open_ai-&amp;gt;createImageVariation([&#xA;    &#34;image&#34; =&amp;gt; $otter,&#xA;    &#34;n&#34; =&amp;gt; 2,&#xA;    &#34;size&#34; =&amp;gt; &#34;256x256&#34;,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Searches&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This endpoint is deprecated and will be removed on December 3rd, 2022 OpenAI developed new methods with better performance. &lt;a href=&#34;https://help.openai.com/en/articles/6272952-search-transition-guide&#34;&gt;Learn more.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Given a query and a set of documents or labels, the model ranks each document based on its semantic similarity to the provided query.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$search = $open_ai-&amp;gt;search([&#xA;    &#39;engine&#39; =&amp;gt; &#39;ada&#39;,&#xA;    &#39;documents&#39; =&amp;gt; [&#39;White House&#39;, &#39;hospital&#39;, &#39;school&#39;],&#xA;    &#39;query&#39; =&amp;gt; &#39;the president&#39;,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Embeddings&lt;/h2&gt; &#xA;&lt;p&gt;Get a vector representation of a given input that can be easily consumed by machine learning models and algorithms.&lt;/p&gt; &#xA;&lt;p&gt;Related guide: &lt;a href=&#34;https://beta.openai.com/docs/guides/embeddings&#34;&gt;Embeddings&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Create embeddings&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;embeddings([&#xA;    &#34;model&#34; =&amp;gt; &#34;text-similarity-babbage-001&#34;,&#xA;    &#34;input&#34; =&amp;gt; &#34;The food was delicious and the waiter...&#34;&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Answers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This endpoint is deprecated and will be removed on December 3rd, 2022 We’ve developed new methods with better performance. &lt;a href=&#34;https://help.openai.com/en/articles/6233728-answers-transition-guide&#34;&gt;Learn more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Given a question, a set of documents, and some examples, the API generates an answer to the question based on the information in the set of documents. This is useful for question-answering applications on sources of truth, like company documentation or a knowledge base.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$answer = $open_ai-&amp;gt;answer([&#xA;  &#39;documents&#39; =&amp;gt; [&#39;Puppy A is happy.&#39;, &#39;Puppy B is sad.&#39;],&#xA;  &#39;question&#39; =&amp;gt; &#39;which puppy is happy?&#39;,&#xA;  &#39;search_model&#39; =&amp;gt; &#39;ada&#39;,&#xA;  &#39;model&#39; =&amp;gt; &#39;curie&#39;,&#xA;  &#39;examples_context&#39; =&amp;gt; &#39;In 2017, U.S. life expectancy was 78.6 years.&#39;,&#xA;  &#39;examples&#39; =&amp;gt; [[&#39;What is human life expectancy in the United States?&#39;, &#39;78 years.&#39;]],&#xA;  &#39;max_tokens&#39; =&amp;gt; 5,&#xA;  &#39;stop&#39; =&amp;gt; [&#34;\n&#34;, &#39;&amp;lt;|endoftext|&amp;gt;&#39;],&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Classifications&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This endpoint is deprecated and will be removed on December 3rd, 2022 OpenAI developed new methods with better performance. &lt;a href=&#34;https://help.openai.com/en/articles/6272941-classifications-transition-guide&#34;&gt;Learn more.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Given a query and a set of labeled examples, the model will predict the most likely label for the query. Useful as a drop-in replacement for any ML classification or text-to-label task.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$classification = $open_ai-&amp;gt;classification([&#xA;   &#39;examples&#39; =&amp;gt; [&#xA;       [&#39;A happy moment&#39;, &#39;Positive&#39;],&#xA;       [&#39;I am sad.&#39;, &#39;Negative&#39;],&#xA;       [&#39;I am feeling awesome&#39;, &#39;Positive&#39;],&#xA;   ],&#xA;   &#39;labels&#39; =&amp;gt; [&#39;Positive&#39;, &#39;Negative&#39;, &#39;Neutral&#39;],&#xA;   &#39;query&#39; =&amp;gt; &#39;It is a raining day =&amp;gt;(&#39;,&#xA;   &#39;search_model&#39; =&amp;gt; &#39;ada&#39;,&#xA;   &#39;model&#39; =&amp;gt; &#39;curie&#39;,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Content Moderations&lt;/h2&gt; &#xA;&lt;p&gt;Given a input text, outputs if the model classifies it as violating OpenAI&#39;s content policy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$flags = $open_ai-&amp;gt;moderation([&#xA;    &#39;input&#39; =&amp;gt; &#39;I want to kill them.&#39;&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Know more about Content Moderations here: &lt;a href=&#34;https://beta.openai.com/docs/api-reference/moderations&#34;&gt;OpenAI Moderations&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;List engines&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The Engines endpoints are deprecated. Please use their replacement, &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/#list-models&#34;&gt;Models&lt;/a&gt;, instead. &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/TODO?&#34;&gt;Learn more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Lists the currently available engines, and provides basic information about each one such as the owner and availability.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$engines = $open_ai-&amp;gt;engines();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Files&lt;/h2&gt; &#xA;&lt;p&gt;Files are used to upload documents that can be used across features like Answers, Search, and Classifications&lt;/p&gt; &#xA;&lt;h3&gt;List files&lt;/h3&gt; &#xA;&lt;p&gt;Returns a list of files that belong to the user&#39;s organization.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$files = $open_ai-&amp;gt;listFiles();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upload file&lt;/h3&gt; &#xA;&lt;p&gt;Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact OpenAI if you need to increase the storage limit.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$c_file = curl_file_create(__DIR__ . &#39;files/sample_file_1.jsonl&#39;);&#xA;$result = $open_ai-&amp;gt;uploadFile([&#xA;            &#34;purpose&#34; =&amp;gt; &#34;answers&#34;,&#xA;            &#34;file&#34; =&amp;gt; $c_file,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upload file with HTML Form&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;form action=&#34;index.php&#34; method=&#34;post&#34; enctype=&#34;multipart/form-data&#34;&amp;gt;&#xA;    Select file to upload:&#xA;    &amp;lt;input type=&#34;file&#34; name=&#34;fileToUpload&#34; id=&#34;fileToUpload&#34;&amp;gt;&#xA;    &amp;lt;input type=&#34;submit&#34; value=&#34;Upload File&#34; name=&#34;submit&#34;&amp;gt;&#xA;&amp;lt;/form&amp;gt;&#xA;&amp;lt;?php&#xA;require __DIR__ . &#39;/vendor/autoload.php&#39;;&#xA;&#xA;use Orhanerday\OpenAi\OpenAi;&#xA;&#xA;if ($_SERVER[&#39;REQUEST_METHOD&#39;] == &#39;POST&#39;) {&#xA;    ob_clean();&#xA;    $open_ai = new OpenAi(&#39;YOUR_API_KEY&#39;);&#xA;    $tmp_file = $_FILES[&#39;fileToUpload&#39;][&#39;tmp_name&#39;];&#xA;    $file_name = basename($_FILES[&#39;fileToUpload&#39;][&#39;name&#39;]);&#xA;    $c_file = curl_file_create($tmp_file, $_FILES[&#39;fileToUpload&#39;][&#39;type&#39;], $file_name);&#xA;&#xA;    echo &#34;[&#34;;&#xA;    echo $open_ai-&amp;gt;uploadFile(&#xA;        [&#xA;            &#34;purpose&#34; =&amp;gt; &#34;answers&#34;,&#xA;            &#34;file&#34; =&amp;gt; $c_file,&#xA;        ]&#xA;    );&#xA;    echo &#34;,&#34;;&#xA;    echo $open_ai-&amp;gt;listFiles();&#xA;    echo &#34;]&#34;;&#xA;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delete file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;deleteFile(&#39;file-xxxxxxxx&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retrieve file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$file = $open_ai-&amp;gt;retrieveFile(&#39;file-xxxxxxxx&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retrieve file content&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$file = $open_ai-&amp;gt;retrieveFileContent(&#39;file-xxxxxxxx&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Fine-tunes&lt;/h2&gt; &#xA;&lt;p&gt;Manage fine-tuning jobs to tailor a model to your specific training data.&lt;/p&gt; &#xA;&lt;h3&gt;Create fine-tune&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;createFineTune([&#xA;       &#34;training_file&#34; =&amp;gt; &#34;file-U3KoAAtGsjUKSPXwEUDdtw86&#34;,&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;List fine-tune&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$fine_tunes = $open_ai-&amp;gt;listFineTunes();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retrieve fine-tune&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$fine_tune = $open_ai-&amp;gt;retrieveFineTune(&#39;ft-AF1WoRqd3aJAHsqc9NY7iL8F&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cancel fine-tune&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;cancelFineTune(&#39;ft-AF1WoRqd3aJAHsqc9NY7iL8F&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;List fine-tune events&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$fine_tune_events = $open_ai-&amp;gt;listFineTuneEvents(&#39;ft-AF1WoRqd3aJAHsqc9NY7iL8F&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delete fine-tune model&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;deleteFineTune(&#39;curie:ft-acmeco-2021-03-03-21-44-20&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Retrieve engine&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Retrieves an engine instance, providing basic information about the engine such as the owner and availability.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$engine = $open_ai-&amp;gt;engine(&#39;davinci&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Models&lt;/h2&gt; &#xA;&lt;p&gt;List and describe the various models available in the API.&lt;/p&gt; &#xA;&lt;h3&gt;List models&lt;/h3&gt; &#xA;&lt;p&gt;Lists the currently available models, and provides basic information about each one such as the owner and availability.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;listModels();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retrieve model&lt;/h3&gt; &#xA;&lt;p&gt;Retrieves a model instance, providing basic information about the model such as the owner and permissioning.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$result = $open_ai-&amp;gt;retrieveModel(&#34;text-ada-001&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Printing results &lt;em&gt;i.e.&lt;/em&gt; &lt;code&gt;$search&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;echo $search;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please report security vulnerabilities to &lt;a href=&#34;mailto:orhanerday@gmail.com&#34;&gt;orhanerday@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orhanerday&#34;&gt;Orhan Erday&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/orhanerday/open-ai/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Donation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/orhane&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>f1amy/laravel-realworld-example-app</title>
    <updated>2022-11-08T01:37:33Z</updated>
    <id>tag:github.com,2022-11-08:/f1amy/laravel-realworld-example-app</id>
    <link href="https://github.com/f1amy/laravel-realworld-example-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Exemplary RealWorld backend API built with Laravel PHP framework.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/f1amy/laravel-realworld-example-app/main/.github/readme/logo.png&#34; alt=&#34;Laravel RealWorld Example App&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gothinkster/realworld&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/RealWorld-Backend-blueviolet.svg?sanitize=true&#34; alt=&#34;RealWorld: Backend&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/f1amy/laravel-realworld-example-app/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/f1amy/laravel-realworld-example-app/actions/workflows/tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Tests: status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/f1amy/laravel-realworld-example-app&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/f1amy/laravel-realworld-example-app/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage: percent&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/f1amy/laravel-realworld-example-app/actions/workflows/static-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/f1amy/laravel-realworld-example-app/actions/workflows/static-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;Static Analysis: status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellowgreen.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Example of a PHP-based Laravel application containing real world examples (CRUD, auth, advanced patterns, etc) that adheres to the &lt;a href=&#34;https://github.com/gothinkster/realworld&#34;&gt;RealWorld&lt;/a&gt; API spec.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This codebase was created to demonstrate a backend application built with &lt;a href=&#34;https://laravel.com/&#34;&gt;Laravel framework&lt;/a&gt; including RESTful services, CRUD operations, authentication, routing, pagination, and more.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ve gone to great lengths to adhere to the &lt;strong&gt;Laravel framework&lt;/strong&gt; community style guides &amp;amp; best practices.&lt;/p&gt; &#xA;&lt;p&gt;For more information on how to this works with other frontends/backends, head over to the &lt;a href=&#34;https://github.com/gothinkster/realworld&#34;&gt;RealWorld&lt;/a&gt; repo.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;The API is built with &lt;a href=&#34;https://laravel.com/&#34;&gt;Laravel&lt;/a&gt;, making the most of the framework&#39;s features out-of-the-box.&lt;/p&gt; &#xA;&lt;p&gt;The application is using a custom JWT auth implementation: &lt;a href=&#34;https://raw.githubusercontent.com/f1amy/laravel-realworld-example-app/main/app/Jwt&#34;&gt;&lt;code&gt;app/Jwt&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;The preferred way of setting up the project is using &lt;a href=&#34;https://laravel.com/docs/sail&#34;&gt;Laravel Sail&lt;/a&gt;, for that you&#39;ll need &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt; under Linux / macOS (or Windows WSL2).&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Clone the repository and change directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/f1amy/laravel-realworld-example-app.git&#xA;cd laravel-realworld-example-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install dependencies (if you have &lt;code&gt;composer&lt;/code&gt; locally):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;composer create-project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively you can do the same with Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --rm -it \&#xA;    --volume $PWD:/app \&#xA;    --user $(id -u):$(id -g) \&#xA;    composer create-project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the containers with PHP application and PostgreSQL database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./vendor/bin/sail up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Optional) Configure a Bash alias for &lt;code&gt;sail&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;alias sail=&#39;[ -f sail ] &amp;amp;&amp;amp; bash sail || bash vendor/bin/sail&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Migrate the database with seeding:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sail artisan migrate --seed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The API is available at &lt;code&gt;http://localhost:3000/api&lt;/code&gt; (You can change the &lt;code&gt;APP_PORT&lt;/code&gt; in &lt;code&gt;.env&lt;/code&gt; file).&lt;/p&gt; &#xA;&lt;h3&gt;Run tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sail artisan test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run PHPStan static analysis&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sail php ./vendor/bin/phpstan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OpenAPI specification (not ready yet)&lt;/h3&gt; &#xA;&lt;p&gt;Swagger UI will be live at &lt;a href=&#34;http://localhost:3000/api/documentation&#34;&gt;http://localhost:3000/api/documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For now, please visit the specification &lt;a href=&#34;https://github.com/gothinkster/realworld/tree/main/api&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Feedback, suggestions, and improvements are welcome, feel free to contribute.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/f1amy/laravel-realworld-example-app/main/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>michael-rubel/laravel-value-objects</title>
    <updated>2022-11-08T01:37:33Z</updated>
    <id>tag:github.com,2022-11-08:/michael-rubel/laravel-value-objects</id>
    <link href="https://github.com/michael-rubel/laravel-value-objects" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A bunch of general-purpose value objects you can use in your Laravel application.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/37669560/200172635-6b2ca8d8-fb2b-4037-a697-b8f6e4c8c615.png&#34; alt=&#34;Value Objects for Laravel&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Laravel Value Objects&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/michael-rubel/laravel-value-objects&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/michael-rubel/laravel-value-objects.svg?style=flat-square&amp;amp;logo=packagist&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/michael-rubel/laravel-value-objects&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/michael-rubel/laravel-value-objects.svg?style=flat-square&amp;amp;logo=packagist&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scrutinizer-ci.com/g/michael-rubel/laravel-value-objects/?branch=main&#34;&gt;&lt;img src=&#34;https://img.shields.io/scrutinizer/quality/g/michael-rubel/laravel-value-objects.svg?style=flat-square&amp;amp;logo=scrutinizer&#34; alt=&#34;Code Quality&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scrutinizer-ci.com/g/michael-rubel/laravel-value-objects/?branch=main&#34;&gt;&lt;img src=&#34;https://img.shields.io/scrutinizer/coverage/g/michael-rubel/laravel-value-objects.svg?style=flat-square&amp;amp;logo=scrutinizer&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/michael-rubel/laravel-value-objects/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/michael-rubel/laravel-value-objects/run-tests/main?style=flat-square&amp;amp;label=tests&amp;amp;logo=github&#34; alt=&#34;GitHub Tests Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/michael-rubel/laravel-value-objects/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/michael-rubel/laravel-value-objects/phpstan/main?style=flat-square&amp;amp;label=larastan&amp;amp;logo=laravel&#34; alt=&#34;PHPStan&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A bunch of general-purpose value objects you can use in your Laravel application.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The package requires PHP &lt;code&gt;^8.0&lt;/code&gt; and Laravel &lt;code&gt;^9.7&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;#StandWithUkraine&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vshymanskyy/StandWithUkraine/raw/main/docs/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg?sanitize=true&#34; alt=&#34;SWUbanner&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the package using composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require michael-rubel/laravel-value-objects&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Built-in value objects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/michael-rubel/laravel-value-objects/raw/main/src/Collection/Primitive/Boolean.php&#34;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/michael-rubel/laravel-value-objects/raw/main/src/Collection/Primitive/Number.php&#34;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/michael-rubel/laravel-value-objects/raw/main/src/Collection/Primitive/Text.php&#34;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/michael-rubel/laravel-value-objects/raw/main/src/Collection/Complex/ClassString.php&#34;&gt;&lt;code&gt;ClassString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/michael-rubel/laravel-value-objects/raw/main/src/Collection/Complex/FullName.php&#34;&gt;&lt;code&gt;FullName&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/michael-rubel/laravel-value-objects/raw/main/src/Collection/Complex/Name.php&#34;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/michael-rubel/laravel-value-objects/raw/main/src/Collection/Complex/Phone.php&#34;&gt;&lt;code&gt;Phone&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/michael-rubel/laravel-value-objects/raw/main/src/Collection/Complex/TaxNumber.php&#34;&gt;&lt;code&gt;TaxNumber&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/michael-rubel/laravel-value-objects/raw/main/src/Collection/Complex/Uuid.php&#34;&gt;&lt;code&gt;Uuid&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Artisan command&lt;/h3&gt; &#xA;&lt;p&gt;You can generate custom value objects with Artisan command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php artisan make:value-object YourNameValueObject&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Boolean&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$bool = new Boolean(&#39;1&#39;);&#xA;$bool = Boolean::make(&#39;1&#39;);&#xA;$bool = Boolean::from(&#39;1&#39;);&#xA;&#xA;$bool-&amp;gt;value();   // true&#xA;(string) $bool;   // &#39;true&#39;&#xA;$bool-&amp;gt;toArray(); // [&#39;true&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Number&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$number = new Number(&#39;10.20999&#39;, scale: 2);&#xA;$number = Number::make(&#39;10.20999&#39;, scale: 2);&#xA;$number = Number::from(&#39;10.20999&#39;, scale: 2);&#xA;&#xA;$number-&amp;gt;value();   // &#39;10.20&#39;&#xA;(string) $number;   // &#39;10.20&#39;&#xA;$number-&amp;gt;toArray(); // [&#39;10.20&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Text&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$text = new Text(&#39;Lorem Ipsum is simply dummy text.&#39;);&#xA;$text = Text::make(&#39;Lorem Ipsum is simply dummy text.&#39;);&#xA;$text = Text::from(&#39;Lorem Ipsum is simply dummy text.&#39;);&#xA;&#xA;$text-&amp;gt;value();   // &#39;Lorem Ipsum is simply dummy text.&#39;&#xA;(string) $text;   // &#39;Lorem Ipsum is simply dummy text.&#39;&#xA;$text-&amp;gt;toArray(); // [&#39;Lorem Ipsum is simply dummy text.&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;ClassString&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$classString = new ClassString(&#39;\Exception&#39;);&#xA;$classString = ClassString::make(&#39;\Exception&#39;);&#xA;$classString = ClassString::from(&#39;\Exception&#39;);&#xA;&#xA;$classString-&amp;gt;value();   // &#39;\Exception&#39;&#xA;(string) $classString;   // &#39;\Exception&#39;&#xA;$classString-&amp;gt;toArray(); // [&#39;\Exception&#39;]&#xA;&#xA;$classString-&amp;gt;classExists();     // true&#xA;$classString-&amp;gt;interfaceExists(); // false&#xA;$classString-&amp;gt;instantiate();     // Exception { ... }&#xA;$classString-&amp;gt;instantiateWith([&#39;message&#39; =&amp;gt; &#39;My message.&#39;]); // Exception { #message: &#34;test&#34; ... }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Email&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$email = new Email(&#39;michael@laravel.software&#39;);&#xA;$email = Email::make(&#39;michael@laravel.software&#39;);&#xA;$email = Email::from(&#39;michael@laravel.software&#39;);&#xA;&#xA;$email-&amp;gt;value();   // &#39;michael@laravel.software&#39;&#xA;(string) $email;   // &#39;michael@laravel.software&#39;&#xA;$email-&amp;gt;toArray(); // [&#39;email&#39; =&amp;gt; &#39;michael@laravel.software&#39;, &#39;username&#39; =&amp;gt; &#39;michael&#39;, &#39;domain&#39; =&amp;gt; &#39;laravel.software&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;FullName&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$name = new FullName(&#39; Taylor   Otwell &#39;);&#xA;$name = FullName::make(&#39; Taylor   Otwell &#39;);&#xA;$name = FullName::from(&#39; Taylor   Otwell &#39;);&#xA;&#xA;$name-&amp;gt;value();   // &#39;Taylor Otwell&#39;&#xA;(string) $name;   // &#39;Taylor Otwell&#39;&#xA;&#xA;$name-&amp;gt;fullName();  // &#39;Taylor Otwell&#39;&#xA;$name-&amp;gt;firstName(); // &#39;Taylor&#39;&#xA;$name-&amp;gt;lastName();  // &#39;Otwell&#39;&#xA;&#xA;$name = &#39;Richard Le Poidevin&#39;;&#xA;$parts = str_word_count($name);&#xA;&#xA;$fullName = new FullName($name, $parts);&#xA;&#xA;$fullName-&amp;gt;toArray();&#xA;&#xA;// array:3 [&#xA;//  &#34;fullName&#34; =&amp;gt; &#34;Richard Le Poidevin&#34;&#xA;//  &#34;firstName&#34; =&amp;gt; &#34;Richard&#34;&#xA;//  &#34;lastName&#34; =&amp;gt; &#34;Le Poidevin&#34;&#xA;// ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Name&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$name = new Name(&#39; Company name! &#39;);&#xA;$name = Name::make(&#39; Company name! &#39;);&#xA;$name = Name::from(&#39; Company name! &#39;);&#xA;&#xA;$name-&amp;gt;value();   // &#39;Company name!&#39;&#xA;(string) $name;   // &#39;Company name!&#39;&#xA;$name-&amp;gt;toArray(); // [&#39;Company name!&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Phone&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$phone = new Phone(&#39; +38 000 000 00 00 &#39;);&#xA;$phone = Phone::make(&#39; +38 000 000 00 00 &#39;);&#xA;$phone = Phone::from(&#39; +38 000 000 00 00 &#39;);&#xA;&#xA;$phone-&amp;gt;value();   // &#39;+38 000 000 00 00&#39;&#xA;(string) $phone;   // &#39;+38 000 000 00 00&#39;&#xA;$phone-&amp;gt;toArray(); // [&#39;+38 000 000 00 00&#39;]&#xA;&#xA;$phone-&amp;gt;sanitized(); // &#39;+380000000000&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;TaxNumber&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$taxNumber = new TaxNumber(&#39;0123456789&#39;, &#39;PL&#39;);&#xA;$taxNumber = TaxNumber::make(&#39;0123456789&#39;, &#39;PL&#39;);&#xA;$taxNumber = TaxNumber::from(&#39;0123456789&#39;, &#39;PL&#39;);&#xA;&#xA;$taxNumber-&amp;gt;value();   // &#39;PL0123456789&#39;&#xA;(string) $taxNumber;   // &#39;PL0123456789&#39;&#xA;$taxNumber-&amp;gt;toArray(); // [&#39;fullTaxNumber&#39; =&amp;gt; &#39;PL0123456789&#39;, &#39;taxNumber&#39; =&amp;gt; &#39;0123456789&#39;, &#39;prefix&#39; =&amp;gt; &#39;PL&#39;]&#xA;&#xA;$taxNumber-&amp;gt;fullTaxNumber(); // &#39;PL0123456789&#39;&#xA;$taxNumber-&amp;gt;taxNumber();     // &#39;0123456789&#39;&#xA;$taxNumber-&amp;gt;prefix();        // &#39;PL&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Uuid&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$uuid = new Uuid(&#39;8547d10c-7a37-492a-8d33-be0e5ae6119b&#39;, &#39;Optional name&#39;);&#xA;$uuid = Uuid::make(&#39;8547d10c-7a37-492a-8d33-be0e5ae6119b&#39;, &#39;Optional name&#39;);&#xA;$uuid = Uuid::from(&#39;8547d10c-7a37-492a-8d33-be0e5ae6119b&#39;, &#39;Optional name&#39;);&#xA;&#xA;$uuid-&amp;gt;value();   // &#39;8547d10c-7a37-492a-8d33-be0e5ae6119b&#39;&#xA;(string) $uuid;   // &#39;8547d10c-7a37-492a-8d33-be0e5ae6119b&#39;&#xA;$uuid-&amp;gt;toArray(); // [&#39;name&#39; =&amp;gt; &#39;Optional name&#39;, &#39;value&#39; =&amp;gt; &#39;8547d10c-7a37-492a-8d33-be0e5ae6119b&#39;]&#xA;&#xA;$uuid-&amp;gt;uuid(); // &#39;8547d10c-7a37-492a-8d33-be0e5ae6119b&#39;&#xA;$uuid-&amp;gt;name(); // &#39;Optional name&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Handle failed validation&lt;/h2&gt; &#xA;&lt;p&gt;If you want to avoid try/catching your value object when the validation fails, you can use &lt;code&gt;makeOrNull&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$bool = Boolean::makeOrNull(&#39;bad input&#39;); // null&#xA;&#xA;$bool?-&amp;gt;value(); // null&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extending functionality&lt;/h2&gt; &#xA;&lt;p&gt;All value objects are &lt;a href=&#34;https://laravel.com/api/9.x/Illuminate/Support/Traits/Macroable.html&#34;&gt;Macroable&lt;/a&gt;. This way you can add new methods dynamically. If you need to extend existing methods, you can create a value object locally with &lt;code&gt;make:value-object&lt;/code&gt; command and use inheritance.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;ValueObject::macro(&#39;str&#39;, function () {&#xA;    return str($this-&amp;gt;value());&#xA;});&#xA;&#xA;$name = new Text(&#39;Lorem ipsum&#39;);&#xA;&#xA;$name-&amp;gt;str()-&amp;gt;is(&#39;Lorem ipsum&#39;); // true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Conditionable&lt;/h2&gt; &#xA;&lt;p&gt;Value objects utilize a &lt;a href=&#34;https://laravel.com/api/9.x/Illuminate/Support/Traits/Conditionable.html&#34;&gt;Conditionable&lt;/a&gt; trait. You can use &lt;code&gt;when&lt;/code&gt; and &lt;code&gt;unless&lt;/code&gt; methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;TaxNumber::from(&#39;PL0123456789&#39;)-&amp;gt;when(function ($number) {&#xA;    return $number-&amp;gt;prefix() !== null;&#xA;})-&amp;gt;prefix();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you see any way we can improve the package, or maybe you want to make your own custom value object as built-in, PRs are welcome.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/michael-rubel/laravel-value-objects/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>