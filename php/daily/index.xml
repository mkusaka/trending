<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-26T01:35:45Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>icewolf-sec/PerlinPuzzle-Webshell-PHP</title>
    <updated>2024-01-26T01:35:45Z</updated>
    <id>tag:github.com,2024-01-26:/icewolf-sec/PerlinPuzzle-Webshell-PHP</id>
    <link href="https://github.com/icewolf-sec/PerlinPuzzle-Webshell-PHP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;使用分支对抗技术制作的PHP Webshell，截止2024年1月18日，共数十个查杀引擎免杀&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PerlinPuzzle-Webshell-PHP&lt;/h1&gt; &#xA;&lt;h4&gt;介绍&lt;/h4&gt; &#xA;&lt;p&gt;使用分支对抗技术制作的PHP Webshell， &lt;strong&gt;截止2024年1月18日，共数十个查杀引擎免杀&lt;/strong&gt; 。&lt;/p&gt; &#xA;&lt;h4&gt;声明&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;本人于2024年01月19日公开此WebShell之前，并未向任何平台提交关于该WebShell的绕过漏洞报告，也从未领取过任何平台的漏洞赏金或安全币。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;绕过点&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;使用刻意编写的变量覆盖漏洞传递参数；&lt;/li&gt; &#xA; &lt;li&gt;使用线性代数中的循环群运算原理制作程序锁定器；&lt;/li&gt; &#xA; &lt;li&gt;在“柏林噪声”随机数生成算法生成的数组中添加关键危险字符；&lt;/li&gt; &#xA; &lt;li&gt;关键危险字符的生成内容由程序解锁器的运算结果决定，若运算错误则无法生成正确字符；&lt;/li&gt; &#xA; &lt;li&gt;在程序的执行过程中使用阻断器，若未解锁则阻断函数返回值传递&lt;/li&gt; &#xA; &lt;li&gt;使用超长行注释干扰词法引擎。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;代码灵感&lt;/h4&gt; &#xA;&lt;p&gt;本WebShell程序锁定器的制作灵感来源于开放世界游戏《原神》中于稻妻地区境内广泛存在的一种大世界解谜机关阵列“机关立方”。该机关阵列由数个小型立方机关组成，当其中一个机关受到击打时，会联动阵列内的其它组成机关一起转动，其本质是实现了一个线性代数中“循环群”的运算模拟系统。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/icewolf-sec/PerlinPuzzle-Webshell-PHP/master/ScreenShot/GenshinImpactPhoto2024_1_18%2010%2051%2024.png&#34; alt=&#34;机关图片&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;本程序的锁定器参考上述原理制作，锁定器接收传入的解锁答案并根据答案修改对象中机关的整数数值，当对象中4个整数数值全部相等时即判定解锁成功。&lt;/p&gt; &#xA;&lt;h4&gt;测试结果&lt;/h4&gt; &#xA;&lt;p&gt;最后一次绕过测试于2024年01月18日进行，共使用了国内外共&lt;code&gt;35&lt;/code&gt;个现有的查杀引擎进行测试，成功绕过&lt;code&gt;34&lt;/code&gt;个，绕过率&lt;code&gt;97.1%&lt;/code&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;绕过成功：阿里伏魔引擎、安恒云沙箱、大圣云沙箱、河马WebShell查杀、魔盾云沙箱、微步集成引擎共26个（微软、卡巴斯基、IKARUS、Avast、GDATA、安天、360、NANO、瑞星、Sophos、WebShell专杀、MicroAPT、OneStatic、ESET、小红伞、大蜘蛛、AVG、K7、江民、Baidu、TrustBook、熊猫、ClamAV、Baidu-China、OneAV、MicroNonPE）、D盾、Windows Defender、火绒安全软件&lt;/li&gt; &#xA; &lt;li&gt;绕过失败：长亭百川WebShell查杀引擎&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;（所有绕过测试截图可在&lt;code&gt;ScreenShot&lt;/code&gt;文件夹中查看）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;运行环境&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;操作系统：Windows、Linux、macOS&lt;/li&gt; &#xA; &lt;li&gt;PHP版本：PHP &lt;code&gt;5&lt;/code&gt; 全版本、PHP &lt;code&gt;7&lt;/code&gt; 全版本、PHP &lt;code&gt;8&lt;/code&gt; 全版本&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;使用说明&lt;/h4&gt; &#xA;&lt;p&gt;使用本WebShell需要 &lt;strong&gt;解锁程序锁定器、提供命令执行函数的第一个字符&lt;code&gt;s&lt;/code&gt;和提供执行的命令&lt;/strong&gt; ，以下参数可以 &lt;strong&gt;按实际情况在&lt;code&gt;POST&lt;/code&gt;请求中提供&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;wpstring&lt;/code&gt;   =&amp;gt;   ABBCCD&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;b&lt;/code&gt;       =&amp;gt;   s&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;pcs&lt;/code&gt;      =&amp;gt;   Your command&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/icewolf-sec/PerlinPuzzle-Webshell-PHP/master/ScreenShot/webshell%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.png&#34; alt=&#34;使用方法&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;参考资料&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.miyoushe.com/ys/article/17414097&#34;&gt;【数学原理】稻妻方块解密的数学原理-原神社区-米游社&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/206271895?ivk_sa=1024320u&amp;amp;utm_id=0&#34;&gt;[Nature of Code] 柏林噪声 - 知乎&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/qq_45521281/article/details/105849770&#34;&gt;变量覆盖漏洞总结-CSDN博客&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>