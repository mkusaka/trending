<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-26T01:43:57Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>putyy/chatgpt</title>
    <updated>2023-06-26T01:43:57Z</updated>
    <id>tag:github.com,2023-06-26:/putyy/chatgpt</id>
    <link href="https://github.com/putyy/chatgpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;uniapp、hyperf MineAdmin 实现的 chatgpt应用，支持小程序、h5、app！&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;uniapp、hyperf MineAdmin 实现的 chatgpt应用，支持小程序、H5、App！&lt;/h1&gt; &#xA;&lt;h2&gt;效果图&lt;/h2&gt; &#xA;&lt;h4&gt;App&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/putyy/chatgpt/main/images/1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/putyy/chatgpt/main/images/2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/putyy/chatgpt/main/images/3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;后台系统&lt;/h4&gt; &#xA;&lt;p&gt;. &lt;img src=&#34;https://raw.githubusercontent.com/putyy/chatgpt/main/images/admin.png&#34; alt=&#34;admin.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;线上体验&lt;/h2&gt; &#xA;&lt;h5&gt;注册时账号密码随便填, 邀请码填: 1，这个邀请码就是上级用户ID而已，1为顶级！&lt;/h5&gt; &#xA;&lt;h4&gt;H5 &lt;a href=&#34;http://ai.putyy.com&#34;&gt;http://ai.putyy.com&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;技术栈 具体依赖看项目代码吧！&lt;/h2&gt; &#xA;&lt;h3&gt;前端&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;uniapp vue3 pug scss 等&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;后端&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;swoole hyperf MineAdmin 等&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;功能说明&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;客户端： 问答上下文、快捷提问、角色自定义、历史会话、公开频道、模型设置、VIP系统、邀请好友、分佣系统、联系客服、钱包系统、提现、订单、好友管理等&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;后台：chatgpt角色自定义、快捷提问管理、聊天数据管理、个人中心菜单管理、订单管理、用户管理、卡密管理、设置(openai地址、客服信息、用户协议等设置)、图片素材(个人中心banner)、openai_key管理(自动轮训)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;开始安装&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;下载本项目&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/putyy/chatgpt.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;安装 MineAdmin&lt;/h2&gt; &#xA;&lt;h4&gt;1. 按照官方文档进行安装 &lt;a href=&#34;https://doc.mineadmin.com/guide/install/&#34;&gt;安装文档&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;2. 安装好后，打开后台: 工具-&amp;gt;模块管理-&amp;gt;新增，模块名称: Ai 其他随意， 添加完成后需要启用&lt;/h4&gt; &#xA;&lt;h4&gt;3. 安装本项目mineadmin-php&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;复制本项目 ./MineAdmin/php/app/ai 下所有子文件夹，粘贴到到mineadmin-php app/ai目录下&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;cp -r ./MineAdmin/php/app/ai/ ./you-mineadmin-php/app/ai&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;执行以下命令添加本项目需要的数据表及初始化数据&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;php bin/hyperf.php mine:migrate-run ai&lt;/p&gt; &#xA;  &lt;p&gt;php bin/hyperf.php mine:seeder-run ai&lt;/p&gt; &#xA;  &lt;p&gt;php bin/hyperf.php ai:init-menu&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;生成Ai api需要的jwt key&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;php bin/hyperf.php mine:jwt-gen --jwtSecret=JWT_AI_SECRET&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;修改mineadmin后端 jwt 配置文件，位置: config/autoload/jwt.php,新增如下内容:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;return [&#xA;    // ......&#xA;    &#39;scene&#39; =&amp;gt; [&#xA;         // 新增如下&#xA;         &#39;ai&#39; =&amp;gt; [&#xA;            &#39;secret&#39; =&amp;gt; env(&#39;JWT_AI_SECRET&#39;, &#39;&#39;), // 非对称加密使用字符串,请使用自己加密的字符串&#xA;            &#39;login_type&#39; =&amp;gt; &#39;sso&#39;,&#xA;            &#39;sso_key&#39; =&amp;gt; &#39;id&#39;,&#xA;            &#39;ttl&#39; =&amp;gt; 86400,&#xA;            &#39;blacklist_cache_ttl&#39; =&amp;gt; 86400, &#xA;         ],&#xA;         // ......&#xA;    ]&#xA;    // ......&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;修改mineadmin后端 route 配置文件，位置: config/routes.php,新增如下内容:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Router::addServer(&#39;message&#39;, function () {&#xA;   // ......&#xA;   // 新增如下内容&#xA;   Router::get(&#39;/ws-chat&#39;, &#39;App\Ai\Api\Websocket&#39;, [&#xA;       &#39;middleware&#39; =&amp;gt; [  ]&#xA;   ]);&#xA;   // ......&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;安装composer依赖包&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;composer require easyswoole/oss putyy/php-constants orhanerday/open-ai --ignore-platform-reqs&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;修改mineadmin后端 file 配置文件，位置: config/autoload/file.php,新增如下内容:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;return [&#xA;  &#39;storage&#39;=&amp;gt;[&#xA;      &#39;qiniu&#39;=&amp;gt;[&#xA;          // ......&#xA;          &#39;accessKey&#39; =&amp;gt; &#39;七牛云accessKey&#39;,   &#xA;          &#39;secretKey&#39; =&amp;gt; &#39;七牛云secretKey&#39;,   &#xA;          &#39;host&#39; =&amp;gt; env(&#39;QINIU_HOST&#39;, &#39;你的七牛云访问主域名,例: baidu.com&#39;),&#xA;          // 具体查看 https://developer.qiniu.com/kodo/1671/region-endpoint-fq&#xA;          &#39;upload_domain&#39; =&amp;gt; env(&#39;QINIU_UPLOAD_DOMAIN&#39;, &#39;https://up-cn-east-2.qiniup.com&#39;),&#xA;          &#39;image_bucket&#39; =&amp;gt; env(&#39;QINIU_IMAGE_BUCKET&#39;, &#39;七牛云图片空间&#39;),&#xA;          &#39;image_domain&#39; =&amp;gt; env(&#39;QINIU_IMAGE_DOMAIN&#39;, &#39;七牛云图片域名&#39;),&#xA;          // 以下未用到 不用配置&#xA;          &#39;audio_bucket&#39; =&amp;gt; env(&#39;QINIU_AUDIO_BUCKET&#39;),&#xA;          &#39;video_bucket&#39; =&amp;gt; env(&#39;QINIU_VIDEO_BUCKET&#39;),&#xA;          &#39;audio_domain&#39; =&amp;gt; env(&#39;QINIU_AUDIO_DOMAIN&#39;),&#xA;          &#39;video_domain&#39; =&amp;gt; env(&#39;QINIU_VIDEO_DOMAIN&#39;),&#xA;          // ......&#xA;      ]&#xA;  ]&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ol start=&#34;4&#34;&gt; &#xA;  &lt;li&gt;安装本项目mineadmin-vue&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;复制本项目 ./MineAdmin/vue/src 下所有子文件夹，粘贴到到mineadmin-vue src目录下&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;cp -r ./MineAdmin/vue/src/ ./you-mineadmin-vue/src&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;p&gt;安装 qiniu-js&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;yarn add qiniu-js --save&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;p&gt;运行&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;yarn run dev&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;打开后台系统&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;添加openai api key： Ai系统-&amp;gt;openai_key-&amp;gt;新增, 返回列表点击顶部刷新缓存&lt;/p&gt; &#xA; &lt;p&gt;设置站点相关信息： Ai系统-&amp;gt;设置&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;大功告成，其他功能自行探索！&lt;/h3&gt; &#xA;&lt;p&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;安装 uniapp&lt;/h3&gt; &#xA;&lt;h4&gt;1. 按照uniapp官方文档安装好环境&lt;/h4&gt; &#xA;&lt;h4&gt;2. 用HBuilderX打开本项目UniApp文件夹&lt;/h4&gt; &#xA;&lt;h4&gt;3. 按照以下说明修改配置文件(相关文件都在UniApp文件夹内)&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;uniapp开发者中心 &lt;a href=&#34;https://dev.dcloud.net.cn/pages/app/list&#34;&gt;点击获取appid&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 修改 ./manifest.json 文件中的appid&#xA;{&#xA;    &#34;name&#34; : &#34;应用名称&#34;,&#xA;    &#34;appid&#34; : &#34;你的应用ID&#34;,&#xA;    &#34;description&#34; : &#34;&#34;,&#xA;    ......&#xA;}&#xA;&#xA;# 复制 ./config.example.ts =&amp;gt; ./common/config.ts 文件, 修改对应配置&#xA;let config = [&#xA;    {&#xA;        wsUrl: &#39;ws://开发环境的域名ws/ws-chat&#39;,&#xA;        baseURL: &#39;https://开发环境的域名/api/ai/api/&#39;&#xA;    },&#xA;     {&#xA;         wsUrl: &#39;ws://线上域名/ws/ws-chat&#39;,&#xA;         baseURL: &#39;https://线上域名/api/ai/api/&#39;&#xA;    }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;4. 安装以下插件(点击打开，页面最右侧导入HBuilderX)，已安装过则忽略&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://ext.dcloud.net.cn/plugin?id=55&#34;&gt;uni-ui&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://ext.dcloud.net.cn/plugin?name=compile-typescript&#34;&gt;compile-typescript&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://ext.dcloud.net.cn/plugin?name=compile-node-sass&#34;&gt;compile-node-sass&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://ext.dcloud.net.cn/plugin?name=pug-language&#34;&gt;pug-language&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://ext.dcloud.net.cn/plugin?name=compile-pug-cli&#34;&gt;compile-pug-cli&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;6. HBuilderX最顶部： 运行-&amp;gt;运行到浏览器&lt;/h4&gt; &#xA;&lt;h4&gt;大功告成！&lt;/h4&gt; &#xA;&lt;h2&gt;其他&lt;/h2&gt; &#xA;&lt;h2&gt;uniapp打包app、h5、小程序参考uniapp官方文档，使用HBuilderX配置manifest.json 之后进行打包操作！&lt;/h2&gt; &#xA;&lt;p&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;nginx配置文件可以参考如下&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;# 前端&#xA;location / {&#xA;  index  index.html index.htm;&#xA;  try_files $uri $uri/ /index.html;&#xA;}&#xA;&#xA; # PHP后端代理，这里的 /prod/ 要跟前端 .env.production 的 VITE_APP_PROXY_PREFIX 值一致&#xA;location /api/ {&#xA;  &#xA;  if ($request_method = &#39;OPTIONS&#39;) {&#xA;    add_header Access-Control-Allow-Origin *;&#xA;    add_header Access-Control-Allow-Methods &#39;GET, POST, OPTIONS, DELETE&#39;;&#xA;    add_header Access-Control-Allow-Headers &#39;DNT,Keep-Alive,User-Agent,Cache-Control,Content-Type,Authorization,X-Token&#39;;&#xA;    return 204;&#xA;  }&#xA;  &#xA;  # 将客户端的 Host 和 IP 信息一并转发到对应节点&#xA;  proxy_set_header Host $http_host;&#xA;  proxy_set_header X-Real-IP $remote_addr;&#xA;  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;  # 将协议架构转发到对应节点，如果使用非https请改为http&#xA;  proxy_set_header X-scheme https;&#xA;&#xA;  # 执行代理访问真实服务器&#xA;  proxy_pass http://127.0.0.1:9501/;&#xA;}&#xA;&#xA;location /ws/ {&#xA;    # WebSocket Header&#xA;    proxy_http_version 1.1;&#xA;    proxy_set_header Upgrade websocket;&#xA;    proxy_set_header Connection &#34;Upgrade&#34;;&#xA;&#xA;    # 将客户端的 Host 和 IP 信息一并转发到对应节点&#xA;    proxy_set_header X-Real-IP $remote_addr;&#xA;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;    proxy_set_header Host $http_host;&#xA;&#xA;    # 客户端与服务端无交互 60s 后自动断开连接，请根据实际业务场景设置&#xA;    proxy_read_timeout 60s ;&#xA;&#xA;    # 执行代理访问真实服务器&#xA;    proxy_pass http://127.0.0.1:9502/;&#xA;}&#xA;  &#xA;# ^~ 不能去掉，/upload/ 中的 upload 可以改成其他名称&#xA;location ^~ /upload/ {&#xA;    # 将客户端的 Host 和 IP 信息一并转发到对应节点&#xA;    proxy_set_header Host $http_host;&#xA;    proxy_set_header X-Real-IP $remote_addr;&#xA;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;    # 将协议架构转发到对应节点，如果使用非https请改为http&#xA;    proxy_set_header X-scheme https;&#xA;&#xA;    # 执行代理访问真实服务器&#xA;    proxy_pass http://127.0.0.1:9501/;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;MineAdmin-vue下的.env.development文件如下&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt;VITE_APP_BASE_URL = http://you.domain.com/api&#xA;&#xA;VITE_APP_UPLOAD_URL = http://you.domain.com/upload&#xA;&#xA;VITE_APP_WS_URL = ws://you.domain.com/ws/message.io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;uniapp下的./common/config.ts文件如下&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;let config = [&#xA;    {&#xA;        wsUrl: &#39;ws://you.domain.com/ws/ws-chat&#39;,&#xA;        baseURL: &#39;https://you.domain.com/api/ai/api/&#39;&#xA;    },&#xA;     {&#xA;         wsUrl: &#39;ws://you.domain.com/ws/ws-chat&#39;,&#xA;         baseURL: &#39;https://you.domain.com/api/ai/api/&#39;&#xA;    }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;h4&gt;使用本软件不得用于开发违反国家有关政策的相关软件和应用，若因使用本软件造成的一切法律责任均与本人无关！&lt;/h4&gt;</summary>
  </entry>
  <entry>
    <title>ConvoyPanel/panel</title>
    <updated>2023-06-26T01:43:57Z</updated>
    <id>tag:github.com,2023-06-26:/ConvoyPanel/panel</id>
    <link href="https://github.com/ConvoyPanel/panel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Convoy aims to be a scalable, reliable panel better than most solutions on the market made for selling virtual machines. It works by utilizing Proxmox&#39;s API to automatically manage/deploy virtual machines. Convoy is made in Laravel.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://imgur.com/oAGZ7fb.png&#34; alt=&#34;Banner Logo&#34;&gt; &lt;img src=&#34;https://imgur.com/OEncExI.png&#34; alt=&#34;version 3 release banner&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/convoypanel/panel/tests.yml?branch=develop&#34; alt=&#34;GitHub Workflow Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/746612878261616700?label=Discord&amp;amp;logo=Discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/convoypanel/panel/latest/total&#34; alt=&#34;GitHub Releases&#34;&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FConvoyPanel%2Fpanel?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FConvoyPanel%2Fpanel.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Convoy&lt;/h1&gt; &#xA;&lt;p&gt;Convoy is a modern and performant KVM server management panel for hosting businesses. It&#39;s built with PHP and React and proven technology like Proxmox, making it easier to drop Convoy in an existing system.&lt;/p&gt; &#xA;&lt;p&gt;Stop paying hundreds of dollars for unreliable and slow software. Subscribe to a license to use Convoy today for $6/node/mo&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://imgur.com/GsORIRQ.png&#34; alt=&#34;Screenshot of Convoy&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.convoypanel.com&#34;&gt;Panel Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.convoypanel.com&#34;&gt;Discord Community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Convoy wouldn&#39;t have been possible without these organizations and people&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Advin Servers - provided several development servers (at least $200 of hardware) to help me develop this SaaS&lt;/li&gt; &#xA; &lt;li&gt;Kjartann - donated $250 to support Convoy development and encouraged me to keep on working on this panel!&lt;/li&gt; &#xA; &lt;li&gt;Pterodactyl Panel - provided the architecture and a lot of backend/boilerplate code for Convoy.&lt;/li&gt; &#xA; &lt;li&gt;FastKVM.EU - for reporting bugs and testing the panel&lt;/li&gt; &#xA; &lt;li&gt;Just Code Cats - created &lt;a href=&#34;https://marketplace.blesta.com/#/extensions/179-Convoy%20Module&#34;&gt;Convoy&#39;s Blesta module&lt;/a&gt;, &lt;a href=&#34;https://code-cats.com/&#34;&gt;https://code-cats.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://heavynode.com/&#34;&gt;HeavyNode&lt;/a&gt; - for helping create &lt;a href=&#34;https://github.com/ConvoyPanel/coterm&#34;&gt;Coterm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Convoy is licensed under the Business Source License. Production use of Convoy without an active license from Performave is strictly disallowed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FConvoyPanel%2Fpanel?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FConvoyPanel%2Fpanel.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>