<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-21T01:35:30Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>abdelmjid-saber/SpladePanel</title>
    <updated>2023-08-21T01:35:30Z</updated>
    <id>tag:github.com,2023-08-21:/abdelmjid-saber/SpladePanel</id>
    <link href="https://github.com/abdelmjid-saber/SpladePanel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Experience the elegance of SpladePanel: effortlessly create sleek dashboards. Harness Laravel Splade&#39;s intuitive SPA-building features for seamless speed and visual allure.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SpladePanel&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to SpladePanel, where you can dive into a world of elegance and simplicity. Unleash the power of SpladePanel to effortlessly create stunning dashboards that combine speed and visual allure using the intuitive SPA-building features of Laravel Splade.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Utilizes Laravel 10 framework&lt;/li&gt; &#xA; &lt;li&gt;Integrates with Jetstream&lt;/li&gt; &#xA; &lt;li&gt;Smart Error Tracker to keep you informed&lt;/li&gt; &#xA; &lt;li&gt;Comprehensive Tracking System to monitor every aspect&lt;/li&gt; &#xA; &lt;li&gt;Site Configuration System for easy setup&lt;/li&gt; &#xA; &lt;li&gt;Multilingual system&lt;/li&gt; &#xA; &lt;li&gt;Advanced Permission System for fine-grained control&lt;/li&gt; &#xA; &lt;li&gt;Ready-to-use Plugins System for easy expansion&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup Instructions&lt;/h2&gt; &#xA;&lt;p&gt;To get started with SpladePanel, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the required dependencies using Composer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;composer install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the &lt;code&gt;.env.example&lt;/code&gt; file to &lt;code&gt;.env&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate a security key and link the storage file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;php artisan key:generate&#xA;php artisan storage:link&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure your database connection by updating the &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run database migrations and seed initial data:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;php artisan migrate:fresh&#xA;php artisan db:seed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start server:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;php artisan serve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Credentials&lt;/h2&gt; &#xA;&lt;p&gt;Access the login page: &lt;a href=&#34;http://127.0.0.1:8000/login&#34;&gt;http://127.0.0.1:8000/login&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email: &lt;a href=&#34;mailto:admin@admin.com&#34;&gt;admin@admin.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Password: password&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;p&gt;For further information and to explore the possibilities of Laravel Splade, visit the official website: &lt;a href=&#34;https://splade.dev/&#34;&gt;https://splade.dev/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Take your dashboard creation experience to the next level with SpladePanel. Embrace the simplicity, speed, and beauty that it offers.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mike42/escpos-php</title>
    <updated>2023-08-21T01:35:30Z</updated>
    <id>tag:github.com,2023-08-21:/mike42/escpos-php</id>
    <link href="https://github.com/mike42/escpos-php" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PHP library for printing to ESC/POS-compatible thermal and impact printers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ESC/POS Print Driver for PHP&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/mike42/escpos-php&#34;&gt;&lt;img src=&#34;https://travis-ci.org/mike42/escpos-php.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mike42/escpos-php&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/mike42/escpos-php/v/stable&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mike42/escpos-php&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/mike42/escpos-php/downloads&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mike42/escpos-php&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/mike42/escpos-php/license&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/mike42/escpos-php?branch=development&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/mike42/escpos-php/badge.svg?branch=development&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project implements a subset of Epson&#39;s ESC/POS protocol for thermal receipt printers. It allows you to generate and print receipts with basic formatting, cutting, and barcodes on a compatible printer.&lt;/p&gt; &#xA;&lt;p&gt;The library was developed to add drop-in support for receipt printing to any PHP app, including web-based point-of-sale (POS) applications.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;h3&gt;Interfaces and operating systems&lt;/h3&gt; &#xA;&lt;p&gt;This driver is known to work with the following OS/interface combinations:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&amp;nbsp;&lt;/th&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;   &lt;th&gt;Mac&lt;/th&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Ethernet&lt;/th&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/ethernet.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/ethernet.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/ethernet.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;USB&lt;/th&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/linux-usb.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Not tested&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/windows-usb.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;USB-serial&lt;/th&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Serial&lt;/th&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parallel&lt;/th&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/windows-lpt.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Not tested&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;SMB shared&lt;/th&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/smb.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/smb.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;CUPS hosted&lt;/th&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/cups.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/cups.php&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Printers&lt;/h3&gt; &#xA;&lt;p&gt;Many thermal receipt printers support ESC/POS to some degree. This driver has been known to work with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;3nStar RPT-008&lt;/li&gt; &#xA; &lt;li&gt;Approx APPPOS80AM&lt;/li&gt; &#xA; &lt;li&gt;AURES ODP-333&lt;/li&gt; &#xA; &lt;li&gt;AURES ODP-500&lt;/li&gt; &#xA; &lt;li&gt;Bematech-4200-TH&lt;/li&gt; &#xA; &lt;li&gt;Bematech LR2000E&lt;/li&gt; &#xA; &lt;li&gt;Birch PRP-085III&lt;/li&gt; &#xA; &lt;li&gt;Bixolon SRP-350III&lt;/li&gt; &#xA; &lt;li&gt;Bixolon SRP-350Plus&lt;/li&gt; &#xA; &lt;li&gt;Black Copper BC-85AC&lt;/li&gt; &#xA; &lt;li&gt;CHD TH-305N&lt;/li&gt; &#xA; &lt;li&gt;Citizen CBM1000-II&lt;/li&gt; &#xA; &lt;li&gt;Citizen CT-S310II&lt;/li&gt; &#xA; &lt;li&gt;Dapper-Geyi Q583P&lt;/li&gt; &#xA; &lt;li&gt;Daruma DR800&lt;/li&gt; &#xA; &lt;li&gt;DR-MP200 (manufacturer unknown)&lt;/li&gt; &#xA; &lt;li&gt;EPOS TEP 220M&lt;/li&gt; &#xA; &lt;li&gt;Elgin i9&lt;/li&gt; &#xA; &lt;li&gt;Epson EU-T332C&lt;/li&gt; &#xA; &lt;li&gt;Epson FX-890 (requires &lt;code&gt;feedForm()&lt;/code&gt; to release paper).&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T20&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T20II&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T70&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T70II&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T81&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T82II&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T88II&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T88III&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T88IV&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-T88V&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-U220&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-U295 (requires &lt;code&gt;release()&lt;/code&gt; to release slip).&lt;/li&gt; &#xA; &lt;li&gt;Epson TM-U590 and TM-U590P&lt;/li&gt; &#xA; &lt;li&gt;Equal (EQ-IT-001) POS-58&lt;/li&gt; &#xA; &lt;li&gt;Everycom EC-58&lt;/li&gt; &#xA; &lt;li&gt;Excelvan HOP-E200&lt;/li&gt; &#xA; &lt;li&gt;Excelvan HOP-E58&lt;/li&gt; &#xA; &lt;li&gt;Excelvan HOP-E801&lt;/li&gt; &#xA; &lt;li&gt;Gainscha GP-2120TF&lt;/li&gt; &#xA; &lt;li&gt;Gainscha GP-5890x (Also marketed as EC Line 5890x)&lt;/li&gt; &#xA; &lt;li&gt;Gainscha GP-U80300I (Also marketed as gprinter GP-U80300I)&lt;/li&gt; &#xA; &lt;li&gt;gprinter GP-U80160I&lt;/li&gt; &#xA; &lt;li&gt;HOIN HOP-H58&lt;/li&gt; &#xA; &lt;li&gt;Ithaca iTherm 28&lt;/li&gt; &#xA; &lt;li&gt;Hasar HTP 250&lt;/li&gt; &#xA; &lt;li&gt;Metapace T-1&lt;/li&gt; &#xA; &lt;li&gt;Metapace T-25&lt;/li&gt; &#xA; &lt;li&gt;Nexa PX700&lt;/li&gt; &#xA; &lt;li&gt;Nyear NP100&lt;/li&gt; &#xA; &lt;li&gt;OKI RT322&lt;/li&gt; &#xA; &lt;li&gt;OKI 80 Plus III&lt;/li&gt; &#xA; &lt;li&gt;Orient BTP-R580&lt;/li&gt; &#xA; &lt;li&gt;P-822D&lt;/li&gt; &#xA; &lt;li&gt;P85A-401 (make unknown)&lt;/li&gt; &#xA; &lt;li&gt;Partner Tech RP320&lt;/li&gt; &#xA; &lt;li&gt;POSLIGNE ODP200H-III-G&lt;/li&gt; &#xA; &lt;li&gt;QPOS Q58M&lt;/li&gt; &#xA; &lt;li&gt;Rongta RP326US&lt;/li&gt; &#xA; &lt;li&gt;Rongta RP58-U&lt;/li&gt; &#xA; &lt;li&gt;Rongta RP80USE&lt;/li&gt; &#xA; &lt;li&gt;SAM4S GIANT-100DB&lt;/li&gt; &#xA; &lt;li&gt;Senor TP-100&lt;/li&gt; &#xA; &lt;li&gt;Sewoo SLK-TS400&lt;/li&gt; &#xA; &lt;li&gt;SEYPOS PRP-96&lt;/li&gt; &#xA; &lt;li&gt;SEYPOS PRP-300 (Also marketed as TYSSO PRP-300)&lt;/li&gt; &#xA; &lt;li&gt;SNBC BTP-R880NPIII&lt;/li&gt; &#xA; &lt;li&gt;Solux SX-TP-88300&lt;/li&gt; &#xA; &lt;li&gt;Sicar POS-80&lt;/li&gt; &#xA; &lt;li&gt;Silicon SP-201 / RP80USE&lt;/li&gt; &#xA; &lt;li&gt;SPRT SP-POS88V&lt;/li&gt; &#xA; &lt;li&gt;Star BSC10&lt;/li&gt; &#xA; &lt;li&gt;Star TSP100 ECO&lt;/li&gt; &#xA; &lt;li&gt;Star TSP100III FuturePRNT&lt;/li&gt; &#xA; &lt;li&gt;Star TSP-650&lt;/li&gt; &#xA; &lt;li&gt;Star TUP-592&lt;/li&gt; &#xA; &lt;li&gt;TVS RP45 Shoppe&lt;/li&gt; &#xA; &lt;li&gt;Venus V248T&lt;/li&gt; &#xA; &lt;li&gt;Xeumior SM-8330&lt;/li&gt; &#xA; &lt;li&gt;Xprinter F-900&lt;/li&gt; &#xA; &lt;li&gt;Xprinter XP-365B&lt;/li&gt; &#xA; &lt;li&gt;Xprinter XP-58 Series&lt;/li&gt; &#xA; &lt;li&gt;Xprinter XP-80C&lt;/li&gt; &#xA; &lt;li&gt;Xprinter XP-90&lt;/li&gt; &#xA; &lt;li&gt;XPrinter XP-Q20011&lt;/li&gt; &#xA; &lt;li&gt;Xprinter XP-Q800&lt;/li&gt; &#xA; &lt;li&gt;Zjiang NT-58H&lt;/li&gt; &#xA; &lt;li&gt;Zjiang ZJ-5870&lt;/li&gt; &#xA; &lt;li&gt;Zjiang ZJ-5890 (Also sold as POS-5890 by many vendors; ZJ-5890K, ZJ-5890T also work).&lt;/li&gt; &#xA; &lt;li&gt;Zjiang ZJ-8220 (Also marketed as Excelvan ZJ-8220)&lt;/li&gt; &#xA; &lt;li&gt;Zjiang ZJ-8250&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you use any other printer with this code, please &lt;a href=&#34;https://github.com/mike42/escpos-php/issues/new&#34;&gt;let us know&lt;/a&gt; so that it can be added to the list.&lt;/p&gt; &#xA;&lt;h2&gt;Basic usage&lt;/h2&gt; &#xA;&lt;h3&gt;Include the library&lt;/h3&gt; &#xA;&lt;h4&gt;Composer&lt;/h4&gt; &#xA;&lt;p&gt;This library is designed for use with the &lt;code&gt;composer&lt;/code&gt; PHP dependency manager. Simply add the &lt;code&gt;mike42/escpos-php&lt;/code&gt; package to get started:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require mike42/escpos-php&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you haven&#39;t used &lt;code&gt;composer&lt;/code&gt; before, you can read about it at &lt;a href=&#34;https://getcomposer.org/&#34;&gt;getcomposer.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;p&gt;This project has few hard dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP 7.3 or newer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;json&lt;/code&gt; extension, used to load bundled printer definitions (see &lt;a href=&#34;https://www.php.net/manual/en/book.json.php&#34;&gt;documentation&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;intl&lt;/code&gt; extension, used for character encoding (see &lt;a href=&#34;https://www.php.net/manual/en/book.intl.php&#34;&gt;documentation&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zlib&lt;/code&gt; extension, used for de-compressing bundled resources (see &lt;a href=&#34;https://www.php.net/manual/en/book.zlib.php&#34;&gt;documentation&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is also suggested that you install either &lt;code&gt;imagick&lt;/code&gt; or &lt;code&gt;gd&lt;/code&gt;, as these can be used to speed up image processing.&lt;/p&gt; &#xA;&lt;p&gt;A number of optional extensions can be added to enable more specific features. These are described in the &#34;suggest&#34; section of &lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/composer.json&#34;&gt;composer.json&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;The &#39;Hello World&#39; receipt&lt;/h3&gt; &#xA;&lt;p&gt;To make use of this driver, your server (where PHP is installed) must be able to communicate with your printer. Start by generating a simple receipt and sending it to your printer using the command-line.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;/* Call this file &#39;hello-world.php&#39; */&#xA;require __DIR__ . &#39;/vendor/autoload.php&#39;;&#xA;use Mike42\Escpos\PrintConnectors\FilePrintConnector;&#xA;use Mike42\Escpos\Printer;&#xA;$connector = new FilePrintConnector(&#34;php://stdout&#34;);&#xA;$printer = new Printer($connector);&#xA;$printer -&amp;gt; text(&#34;Hello World!\n&#34;);&#xA;$printer -&amp;gt; cut();&#xA;$printer -&amp;gt; close();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some examples are below for common interfaces.&lt;/p&gt; &#xA;&lt;p&gt;Communicate with a printer with an Ethernet interface using &lt;code&gt;netcat&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php hello-world.php | nc 10.x.x.x. 9100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A USB local printer connected with &lt;code&gt;usblp&lt;/code&gt; on Linux has a device file (Includes USB-parallel interfaces):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php hello-world.php &amp;gt; /dev/usb/lp0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A computer installed into the local &lt;code&gt;cups&lt;/code&gt; server is accessed through &lt;code&gt;lp&lt;/code&gt; or &lt;code&gt;lpr&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php hello-world.php &amp;gt; foo.txt&#xA;lpr -o raw -H localhost -P printer foo.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A local or networked printer on a Windows computer is mapped in to a file, and generally requires you to share the printer first:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php hello-world.php &amp;gt; foo.txt&#xA;net use LPT1 \\server\printer&#xA;copy foo.txt LPT1&#xA;del foo.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have troubles at this point, then you should consult your OS and printer system documentation to try to find a working print command.&lt;/p&gt; &#xA;&lt;h3&gt;Using a PrintConnector&lt;/h3&gt; &#xA;&lt;p&gt;To print receipts from PHP, use the most applicable &lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/src/Mike42/Escpos/PrintConnectors&#34;&gt;PrintConnector&lt;/a&gt; for your setup. The connector simply provides the plumbing to get data to the printer.&lt;/p&gt; &#xA;&lt;p&gt;For example, a &lt;code&gt;NetworkPrintConnector&lt;/code&gt; accepts an IP address and port:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mike42\Escpos\PrintConnectors\NetworkPrintConnector;&#xA;use Mike42\Escpos\Printer;&#xA;$connector = new NetworkPrintConnector(&#34;10.x.x.x&#34;, 9100);&#xA;$printer = new Printer($connector);&#xA;try {&#xA;    // ... Print stuff&#xA;} finally {&#xA;    $printer -&amp;gt; close();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;While a serial printer might use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mike42\Escpos\PrintConnectors\FilePrintConnector;&#xA;use Mike42\Escpos\Printer;&#xA;$connector = new FilePrintConnector(&#34;/dev/ttyS0&#34;);&#xA;$printer = new Printer($connector);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For each OS/interface combination that&#39;s supported, there are examples in the compatibility section of how a &lt;code&gt;PrintConnector&lt;/code&gt; would be constructed. If you can&#39;t get a &lt;code&gt;PrintConnector&lt;/code&gt; to work, then be sure to include the working print command in your issue.&lt;/p&gt; &#xA;&lt;h3&gt;Using a CapabilityProfile&lt;/h3&gt; &#xA;&lt;p&gt;Support for commands and code pages varies between printer vendors and models. By default, the driver will accept UTF-8, and output commands that are suitable for Epson TM-series printers.&lt;/p&gt; &#xA;&lt;p&gt;When trying out a new brand of printer, it&#39;s a good idea to use the &#34;simple&#34; &lt;code&gt;CapabilityProfile&lt;/code&gt;, which instructs the driver to avoid the use of advanced features (generally simpler image handling, ASCII-only text).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mike42\Escpos\PrintConnectors\WindowsPrintConnector;&#xA;use Mike42\Escpos\CapabilityProfile;&#xA;$profile = CapabilityProfile::load(&#34;simple&#34;);&#xA;$connector = new WindowsPrintConnector(&#34;smb://computer/printer&#34;);&#xA;$printer = new Printer($connector, $profile);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As another example, Star-branded printers use different commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Mike42\Escpos\PrintConnectors\WindowsPrintConnector;&#xA;use Mike42\Escpos\CapabilityProfile;&#xA;$profile = CapabilityProfile::load(&#34;SP2000&#34;)&#xA;$connector = new WindowsPrintConnector(&#34;smb://computer/printer&#34;);&#xA;$printer = new Printer($connector, $profile);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a list of available profiles, or to have support for your printer improved, please see the upstream &lt;a href=&#34;https://github.com/receipt-print-hq/escpos-printer-db&#34;&gt;receipt-print-hq/escpos-printer-db&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;h3&gt;Tips &amp;amp; examples&lt;/h3&gt; &#xA;&lt;p&gt;On Linux, your printer device file will be somewhere like &lt;code&gt;/dev/lp0&lt;/code&gt; (parallel), &lt;code&gt;/dev/usb/lp1&lt;/code&gt; (USB), &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; (USB-Serial), &lt;code&gt;/dev/ttyS0&lt;/code&gt; (serial).&lt;/p&gt; &#xA;&lt;p&gt;On Windows, the device files will be along the lines of &lt;code&gt;LPT1&lt;/code&gt; (parallel) or &lt;code&gt;COM1&lt;/code&gt; (serial). Use the &lt;code&gt;WindowsPrintConnector&lt;/code&gt; to tap into system printing on Windows (eg. &lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/windows-usb.php&#34;&gt;Windows USB&lt;/a&gt;, &lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/smb.php&#34;&gt;SMB&lt;/a&gt; or &lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/windows-lpt.php&#34;&gt;Windows LPT&lt;/a&gt;) - this submits print jobs via a queue rather than communicating directly with the printer.&lt;/p&gt; &#xA;&lt;p&gt;A complete real-world receipt can be found in the code of &lt;a href=&#34;https://github.com/mike42/Auth&#34;&gt;Auth&lt;/a&gt; in &lt;a href=&#34;https://github.com/mike42/Auth/raw/master/lib/misc/ReceiptPrinter.php&#34;&gt;ReceiptPrinter.php&lt;/a&gt;. It includes justification, boldness, and a barcode.&lt;/p&gt; &#xA;&lt;p&gt;Other examples are located in the &lt;a href=&#34;https://github.com/mike42/escpos-php/raw/master/example/&#34;&gt;example/&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Available methods&lt;/h2&gt; &#xA;&lt;h3&gt;__construct(PrintConnector $connector, CapabilityProfile $profile)&lt;/h3&gt; &#xA;&lt;p&gt;Construct new print object.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PrintConnector $connector&lt;/code&gt;: The PrintConnector to send data to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CapabilityProfile $profile&lt;/code&gt; Supported features of this printer. If not set, the &#34;default&#34; CapabilityProfile will be used, which is suitable for Epson printers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/mike42/escpos-php/tree/master/example/interface/&#34;&gt;example/interface/&lt;/a&gt; for ways to open connections for different platforms and interfaces.&lt;/p&gt; &#xA;&lt;h3&gt;barcode($content, $type)&lt;/h3&gt; &#xA;&lt;p&gt;Print a barcode.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;string $content&lt;/code&gt;: The information to encode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $type&lt;/code&gt;: The barcode standard to output. If not specified, &lt;code&gt;Printer::BARCODE_CODE39&lt;/code&gt; will be used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Currently supported barcode standards are (depending on your printer):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_UPCA&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_UPCE&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_JAN13&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_JAN8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_CODE39&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_ITF&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BARCODE_CODABAR&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that some barcode standards can only encode numbers, so attempting to print non-numeric codes with them may result in strange behaviour.&lt;/p&gt; &#xA;&lt;h3&gt;bitImage(EscposImage $image, $size)&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/mike42/escpos-php/development/#graphicsescposimage-image-size&#34;&gt;graphics()&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;h3&gt;cut($mode, $lines)&lt;/h3&gt; &#xA;&lt;p&gt;Cut the paper.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $mode&lt;/code&gt;: Cut mode, either &lt;code&gt;Printer::CUT_FULL&lt;/code&gt; or &lt;code&gt;Printer::CUT_PARTIAL&lt;/code&gt;. If not specified, &lt;code&gt;Printer::CUT_FULL&lt;/code&gt; will be used.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $lines&lt;/code&gt;: Number of lines to feed before cutting. If not specified, 3 will be used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;feed($lines)&lt;/h3&gt; &#xA;&lt;p&gt;Print and feed line / Print and feed n lines.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $lines&lt;/code&gt;: Number of lines to feed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;feedForm()&lt;/h3&gt; &#xA;&lt;p&gt;Some printers require a form feed to release the paper. On most printers, this command is only useful in page mode, which is not implemented in this driver.&lt;/p&gt; &#xA;&lt;h3&gt;feedReverse($lines)&lt;/h3&gt; &#xA;&lt;p&gt;Print and reverse feed n lines.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $lines&lt;/code&gt;: number of lines to feed. If not specified, 1 line will be fed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;graphics(EscposImage $image, $size)&lt;/h3&gt; &#xA;&lt;p&gt;Print an image to the printer.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;EscposImage $img&lt;/code&gt;: The image to print.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $size&lt;/code&gt;: Output size modifier for the image.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Size modifiers are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;IMG_DEFAULT&lt;/code&gt; (leave image at original size)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IMG_DOUBLE_WIDTH&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IMG_DOUBLE_HEIGHT&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A minimal example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;$img = EscposImage::load(&#34;logo.png&#34;);&#xA;$printer -&amp;gt; graphics($img);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/mike42/escpos-php/raw/master/example/&#34;&gt;example/&lt;/a&gt; folder for detailed examples.&lt;/p&gt; &#xA;&lt;p&gt;The function &lt;a href=&#34;https://raw.githubusercontent.com/mike42/escpos-php/development/#bitimageescposimage-image-size&#34;&gt;bitImage()&lt;/a&gt; takes the same parameters, and can be used if your printer doesn&#39;t support the newer graphics commands. As an additional fallback, the &lt;code&gt;bitImageColumnFormat()&lt;/code&gt; function is also provided.&lt;/p&gt; &#xA;&lt;h3&gt;initialize()&lt;/h3&gt; &#xA;&lt;p&gt;Initialize printer. This resets formatting back to the defaults.&lt;/p&gt; &#xA;&lt;h3&gt;pdf417Code($content, $width, $heightMultiplier, $dataColumnCount, $ec, $options)&lt;/h3&gt; &#xA;&lt;p&gt;Print a two-dimensional data code using the PDF417 standard.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;string $content&lt;/code&gt;: Text or numbers to store in the code&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;number $width&lt;/code&gt;: Width of a module (pixel) in the printed code. Default is 3 dots.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;number $heightMultiplier&lt;/code&gt;: Multiplier for height of a module. Default is 3 times the width.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;number $dataColumnCount&lt;/code&gt;: Number of data columns to use. 0 (default) is to auto-calculate. Smaller numbers will result in a narrower code, making larger pixel sizes possible. Larger numbers require smaller pixel sizes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;real $ec&lt;/code&gt;: Error correction ratio, from 0.01 to 4.00. Default is 0.10 (10%).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;number $options&lt;/code&gt;: Standard code &lt;code&gt;Printer::PDF417_STANDARD&lt;/code&gt; with start/end bars, or truncated code &lt;code&gt;Printer::PDF417_TRUNCATED&lt;/code&gt; with start bars only.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;pulse($pin, $on_ms, $off_ms)&lt;/h3&gt; &#xA;&lt;p&gt;Generate a pulse, for opening a cash drawer if one is connected. The default settings (0, 120, 240) should open an Epson drawer.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $pin&lt;/code&gt;: 0 or 1, for pin 2 or pin 5 kick-out connector respectively.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $on_ms&lt;/code&gt;: pulse ON time, in milliseconds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $off_ms&lt;/code&gt;: pulse OFF time, in milliseconds.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;qrCode($content, $ec, $size, $model)&lt;/h3&gt; &#xA;&lt;p&gt;Print the given data as a QR code on the printer.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;string $content&lt;/code&gt;: The content of the code. Numeric data will be more efficiently compacted.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $ec&lt;/code&gt; Error-correction level to use. One of &lt;code&gt;Printer::QR_ECLEVEL_L&lt;/code&gt; (default), &lt;code&gt;Printer::QR_ECLEVEL_M&lt;/code&gt;, &lt;code&gt;Printer::QR_ECLEVEL_Q&lt;/code&gt; or &lt;code&gt;Printer::QR_ECLEVEL_H&lt;/code&gt;. Higher error correction results in a less compact code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $size&lt;/code&gt;: Pixel size to use. Must be 1-16 (default 3)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $model&lt;/code&gt;: QR code model to use. Must be one of &lt;code&gt;Printer::QR_MODEL_1&lt;/code&gt;, &lt;code&gt;Printer::QR_MODEL_2&lt;/code&gt; (default) or &lt;code&gt;Printer::QR_MICRO&lt;/code&gt; (not supported by all printers).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;selectPrintMode($mode)&lt;/h3&gt; &#xA;&lt;p&gt;Select print mode(s).&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $mode&lt;/code&gt;: The mode to use. Default is &lt;code&gt;Printer::MODE_FONT_A&lt;/code&gt;, with no special formatting. This has a similar effect to running &lt;code&gt;initialize()&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Several MODE_* constants can be OR&#39;d together passed to this function&#39;s &lt;code&gt;$mode&lt;/code&gt; argument. The valid modes are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MODE_FONT_A&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MODE_FONT_B&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MODE_EMPHASIZED&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MODE_DOUBLE_HEIGHT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MODE_DOUBLE_WIDTH&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MODE_UNDERLINE&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setBarcodeHeight($height)&lt;/h3&gt; &#xA;&lt;p&gt;Set barcode height.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $height&lt;/code&gt;: Height in dots. If not specified, 8 will be used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setBarcodeWidth($width)&lt;/h3&gt; &#xA;&lt;p&gt;Set barcode bar width.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $width&lt;/code&gt;: Bar width in dots. If not specified, 3 will be used. Values above 6 appear to have no effect.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setColor($color)&lt;/h3&gt; &#xA;&lt;p&gt;Select print color - on printers that support multiple colors.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $color&lt;/code&gt;: Color to use. Must be either &lt;code&gt;Printer::COLOR_1&lt;/code&gt; (default), or &lt;code&gt;Printer::COLOR_2&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setDoubleStrike($on)&lt;/h3&gt; &#xA;&lt;p&gt;Turn double-strike mode on/off.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;boolean $on&lt;/code&gt;: true for double strike, false for no double strike.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setEmphasis($on)&lt;/h3&gt; &#xA;&lt;p&gt;Turn emphasized mode on/off.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;boolean $on&lt;/code&gt;: true for emphasis, false for no emphasis.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setFont($font)&lt;/h3&gt; &#xA;&lt;p&gt;Select font. Most printers have two fonts (Fonts A and B), and some have a third (Font C).&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $font&lt;/code&gt;: The font to use. Must be either &lt;code&gt;Printer::FONT_A&lt;/code&gt;, &lt;code&gt;Printer::FONT_B&lt;/code&gt;, or &lt;code&gt;Printer::FONT_C&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setJustification($justification)&lt;/h3&gt; &#xA;&lt;p&gt;Select justification.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $justification&lt;/code&gt;: One of &lt;code&gt;Printer::JUSTIFY_LEFT&lt;/code&gt;, &lt;code&gt;Printer::JUSTIFY_CENTER&lt;/code&gt;, or &lt;code&gt;Printer::JUSTIFY_RIGHT&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setLineSpacing($height)&lt;/h3&gt; &#xA;&lt;p&gt;Set the height of the line.&lt;/p&gt; &#xA;&lt;p&gt;Some printers will allow you to overlap lines with a smaller line feed.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $height&lt;/code&gt;: The height of each line, in dots. If not set, the printer will reset to its default line spacing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setPrintLeftMargin($margin)&lt;/h3&gt; &#xA;&lt;p&gt;Set print area left margin. Reset to default with &lt;code&gt;Printer::initialize()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $margin&lt;/code&gt;: The left margin to set on to the print area, in dots.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setPrintWidth($width)&lt;/h3&gt; &#xA;&lt;p&gt;Set print area width. This can be used to add a right margin to the print area. Reset to default with &lt;code&gt;Printer::initialize()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $width&lt;/code&gt;: The width of the page print area, in dots.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setReverseColors($on)&lt;/h3&gt; &#xA;&lt;p&gt;Set black/white reverse mode on or off. In this mode, text is printed white on a black background.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;boolean $on&lt;/code&gt;: True to enable, false to disable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setTextSize($widthMultiplier, $heightMultiplier)&lt;/h3&gt; &#xA;&lt;p&gt;Set the size of text, as a multiple of the normal size.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $widthMultiplier&lt;/code&gt;: Multiple of the regular height to use (range 1 - 8).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;int $heightMultiplier&lt;/code&gt;: Multiple of the regular height to use (range 1 - 8).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;setUnderline($underline)&lt;/h3&gt; &#xA;&lt;p&gt;Set underline for printed text.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;int $underline&lt;/code&gt;: Either &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;, or one of &lt;code&gt;Printer::UNDERLINE_NONE&lt;/code&gt;, &lt;code&gt;Printer::UNDERLINE_SINGLE&lt;/code&gt; or &lt;code&gt;Printer::UNDERLINE_DOUBLE&lt;/code&gt;. Defaults to &lt;code&gt;Printer::UNDERLINE_SINGLE&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;text($str)&lt;/h3&gt; &#xA;&lt;p&gt;Add text to the buffer. Text should either be followed by a line-break, or &lt;code&gt;feed()&lt;/code&gt; should be called after this.&lt;/p&gt; &#xA;&lt;p&gt;Parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;string $str&lt;/code&gt;: The string to print.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Further notes&lt;/h1&gt; &#xA;&lt;p&gt;Posts I&#39;ve written up for people who are learning how to use receipt printers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mike42.me/blog/what-is-escpos-and-how-do-i-use-it&#34;&gt;What is ESC/POS, and how do I use it?&lt;/a&gt;, which documents the output of &lt;code&gt;example/demo.php&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mike42.me/blog/2014-20-26-setting-up-an-epson-receipt-printer&#34;&gt;Setting up an Epson receipt printer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mike42.me/blog/2015-03-getting-a-usb-receipt-printer-working-on-linux&#34;&gt;Getting a USB receipt printer working on Linux&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;This code is MIT licensed, and you are encouraged to contribute any modifications back to the project.&lt;/p&gt; &#xA;&lt;p&gt;For development, it&#39;s suggested that you load &lt;code&gt;imagick&lt;/code&gt;, &lt;code&gt;gd&lt;/code&gt; and &lt;code&gt;Xdebug&lt;/code&gt; PHP extensions.&lt;/p&gt; &#xA;&lt;p&gt;The tests are executed on &lt;a href=&#34;https://travis-ci.org/mike42/escpos-php&#34;&gt;Travis CI&lt;/a&gt; over PHP 7.3, 7.4 and 8.0. Older versions of PHP are not supported in the current release, nor is HHVM.&lt;/p&gt; &#xA;&lt;p&gt;Fetch a copy of this code and load dependencies with composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/mike42/escpos-php&#xA;cd escpos-php/&#xA;composer install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute unit tests via &lt;code&gt;phpunit&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php vendor/bin/phpunit --coverage-text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This project uses the PSR-2 standard, which can be checked via &lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34;&gt;PHP_CodeSniffer&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php vendor/bin/phpcs --standard=psr2 src/ -n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The developer docs are build with &lt;a href=&#34;https://github.com/doxygen/doxygen&#34;&gt;doxygen&lt;/a&gt;. Re-build them to check for documentation warnings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make -C doc clean &amp;amp;&amp;amp; make -C doc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pull requests and bug reports welcome.&lt;/p&gt;</summary>
  </entry>
</feed>