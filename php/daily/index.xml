<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-02T01:34:57Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WordPress/twentytwentyfour</title>
    <updated>2023-09-02T01:34:57Z</updated>
    <id>tag:github.com,2023-09-02:/WordPress/twentytwentyfour</id>
    <link href="https://github.com/WordPress/twentytwentyfour" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Twenty Twenty-Four&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the development repository for the default theme that will launch with &lt;a href=&#34;https://make.wordpress.org/core/6-4/&#34;&gt;WordPress 6.4&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img width=&#34;1920&#34; alt=&#34;2023&#34; src=&#34;https://github.com/WordPress/twentytwentyfour/assets/1813435/d965b75d-03cd-4365-b963-b3862d482329&#34;&gt; &#xA;&lt;p&gt;Twenty Twenty-Four is built as a &lt;a href=&#34;https://developer.wordpress.org/block-editor/how-to-guides/themes/block-theme-overview/&#34;&gt;block theme&lt;/a&gt;. The theme aims to ship with as little CSS as possible: our goal is for all theme styles to be configured through &lt;a href=&#34;https://developer.wordpress.org/block-editor/how-to-guides/themes/theme-json/&#34;&gt;&lt;code&gt;theme.json&lt;/code&gt;&lt;/a&gt; and editable through Global Styles. The theme development team will work closely with &lt;a href=&#34;https://github.com/wordpress/gutenberg&#34;&gt;Gutenberg&lt;/a&gt; contributors to build design tools in the block editor that enable this goal.&lt;/p&gt; &#xA;&lt;p&gt;You can view a demo of this theme at &lt;a href=&#34;https://2024.wordpress.net/&#34;&gt;2024.wordpress.net&lt;/a&gt;, which is synced to &lt;code&gt;trunk&lt;/code&gt; branch of this repository every 2 minutes.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to contribute code, the list of &lt;a href=&#34;https://github.com/WordPress/twentytwentyfour/issues&#34;&gt;open issues&lt;/a&gt; is a great place to start looking for tasks â€” but contributing is not just for developers. There are many opportunities to help with testing, triage, discussion, design, building &lt;a href=&#34;https://github.com/WordPress/twentytwentyfour/issues?q=is%3Aissue+is%3Aopen+label%3A%22%5BComponent%5D+Block+Patterns%22&#34;&gt;patterns&lt;/a&gt; and templates, and more.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to help with triage, let @luminuu and @MaggieCabrera know in &lt;a href=&#34;https://make.wordpress.org/chat/&#34;&gt;WordPress.org&#39;s Slack instance&lt;/a&gt;. We&#39;ll help you get set up with the ability to add labels to issues and PRs.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Development&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Set up a WordPress instance, we recommend &lt;a href=&#34;https://developer.wordpress.org/block-editor/handbook/tutorials/devenv/&#34;&gt;wp-env&lt;/a&gt; or &lt;a href=&#34;https://localwp.com/&#34;&gt;Local&lt;/a&gt; as an alternative to docker. Alternatively you can use &lt;a href=&#34;https://developer.wordpress.org/playground/&#34;&gt;WordPress Playground&lt;/a&gt; to test the theme directly in the browser.&lt;/li&gt; &#xA; &lt;li&gt;Clone / download this repository into your &lt;code&gt;/wp-content/themes/&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Install and activate the &lt;a href=&#34;https://wordpress.org/plugins/gutenberg/&#34;&gt;Gutenberg plugin&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Design&lt;/h3&gt; &#xA;&lt;p&gt;The theme is designed in &lt;a href=&#34;https://www.figma.com/file/AlYr03vh4dVimwYwQkTdf6/Twenty-Twenty-Four?type=design&amp;amp;t=C79166eDp3vX7OOD-6&#34;&gt;Figma&lt;/a&gt;. You can contribute by designing one of the &lt;a href=&#34;https://github.com/WordPress/twentytwentyfour/issues?q=is%3Aissue+is%3Aopen+label%3A%22%5BComponent%5D+Block+Patterns%22&#34;&gt;patterns&lt;/a&gt; planned for Twenty Twenty-Four.&lt;/p&gt; &#xA;&lt;p&gt;As a default WordPress theme, it is important to leverage the existing design system wherever possible. That is the font sizes, &lt;a href=&#34;https://github.com/WordPress/twentytwentyfour/pull/106&#34;&gt;color palette choices&lt;/a&gt;, and &lt;a href=&#34;https://github.com/WordPress/twentytwentyfour/pull/102&#34;&gt;spacing presets&lt;/a&gt;. All patterns and templates will leverage this systems extensively.&lt;/p&gt; &#xA;&lt;h3&gt;Tips for Contributors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;As stated above, a goal for the theme is to have as little CSS as possible. Much of the theme&#39;s visual treatments should be handled by the Block Editor and Global Styles. As a general rule, if multiple themes would benefit from the CSS you&#39;re considering adding, it might reasonably be provided by Gutenberg instead. Let&#39;s include clear code comments for any CSS we do include.&lt;/li&gt; &#xA; &lt;li&gt;Similarly, let&#39;s refrain from building any custom-built PHP or JavaScript-based workarounds for functionality that might reasonably be provided by the Block Editor, let&#39;s keep the code simple to help with future maintenance.&lt;/li&gt; &#xA; &lt;li&gt;In accordance to those last two bullets, this theme has no required build process.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;ve helped contribute to the theme in any way, you deserve credit! Folks will be updating &lt;a href=&#34;https://raw.githubusercontent.com/WordPress/twentytwentyfour/trunk/CONTRIBUTORS.md&#34;&gt;CONTRIBUTORS.md&lt;/a&gt; periodically with names of contributors, but feel free to open a PR or issue if we leave someone out.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gutenberg plugin (latest)&lt;/li&gt; &#xA; &lt;li&gt;WordPress 6.4+&lt;/li&gt; &#xA; &lt;li&gt;PHP 7.0+&lt;/li&gt; &#xA; &lt;li&gt;License: &lt;a href=&#34;http://www.gnu.org/licenses/gpl-2.0.html&#34;&gt;GPLv2&lt;/a&gt; or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some theme features / PRs may require Gutenberg trunk and will be described or tagged accordingly.&lt;/p&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;Optionally, to run tests locally, you will also need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It&#39;s recommended that you install Node through &lt;a href=&#34;https://github.com/nvm-sh/nvm#intro&#34;&gt;nvm&lt;/a&gt;, since it&#39;s the tool used by the CLI to select the node version being used.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://getcomposer.org/&#34;&gt;Composer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can install the test-specific development dependencies by running &lt;code&gt;npm i &amp;amp;&amp;amp; composer install&lt;/code&gt;. The following test commands are then available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run lint:css&lt;/code&gt; lints and autofixes where possible the CSS&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;composer run analyze [filename.php]&lt;/code&gt; statically analyzes PHP for bugs&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;composer run lint&lt;/code&gt; checks PHP for syntax errors&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;composer run standards:check&lt;/code&gt; checks PHP for standards errors according to &lt;a href=&#34;https://developer.wordpress.org/coding-standards/&#34;&gt;WordPress coding standards&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;composer run standards:fix&lt;/code&gt; attemps to automatically fix errors&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.figma.com/file/AlYr03vh4dVimwYwQkTdf6/Twenty-Twenty-Four?type=design&amp;amp;node-id=16%3A14852&amp;amp;mode=design&amp;amp;t=yad81XRtp200JLes-1&#34;&gt;Twenty Twenty-Four Figma Mockups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.wordpress.org/block-editor/handbook/tutorials/devenv/&#34;&gt;Setting up a development environment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.wordpress.org/block-editor/how-to-guides/themes/block-theme-overview&#34;&gt;Block Theme documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.wordpress.org/block-editor/how-to-guides/themes/theme-json/&#34;&gt;Global Styles &amp;amp; theme.json documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Timeline&lt;/h2&gt; &#xA;&lt;p&gt;The theme will be released with WordPress 6.4 and follow the key dates / milestones associated with &lt;a href=&#34;https://make.wordpress.org/core/6-4&#34;&gt;its development schedule&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dompdf/php-font-lib</title>
    <updated>2023-09-02T01:34:57Z</updated>
    <id>tag:github.com,2023-09-02:/dompdf/php-font-lib</id>
    <link href="https://github.com/dompdf/php-font-lib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A library to read, parse, export and make subsets of different types of font files.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dompdf/php-font-lib/actions/workflows/phpunit.yml&#34;&gt;&lt;img src=&#34;https://github.com/dompdf/php-font-lib/actions/workflows/phpunit.yml/badge.svg?sanitize=true&#34; alt=&#34;PHPUnit tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;PHP Font Lib&lt;/h1&gt; &#xA;&lt;p&gt;This library can be used to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read TrueType, OpenType (with TrueType glyphs), WOFF font files&lt;/li&gt; &#xA; &lt;li&gt;Extract basic info (name, style, etc)&lt;/li&gt; &#xA; &lt;li&gt;Extract advanced info (horizontal metrics, glyph names, glyph shapes, etc)&lt;/li&gt; &#xA; &lt;li&gt;Make an Adobe Font Metrics (AFM) file from a font&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project was initiated by the need to read font files in the &lt;a href=&#34;https://github.com/dompdf/dompdf&#34;&gt;DOMPDF project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage Example&lt;/h2&gt; &#xA;&lt;h3&gt;Base font information&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$font = \FontLib\Font::load(&#39;fontfile.ttf&#39;);&#xA;$font-&amp;gt;parse();  // for getFontWeight() to work this call must be done first!&#xA;echo $font-&amp;gt;getFontName() .&#39;&amp;lt;br&amp;gt;&#39;;&#xA;echo $font-&amp;gt;getFontSubfamily() .&#39;&amp;lt;br&amp;gt;&#39;;&#xA;echo $font-&amp;gt;getFontSubfamilyID() .&#39;&amp;lt;br&amp;gt;&#39;;&#xA;echo $font-&amp;gt;getFontFullName() .&#39;&amp;lt;br&amp;gt;&#39;;&#xA;echo $font-&amp;gt;getFontVersion() .&#39;&amp;lt;br&amp;gt;&#39;;&#xA;echo $font-&amp;gt;getFontWeight() .&#39;&amp;lt;br&amp;gt;&#39;;&#xA;echo $font-&amp;gt;getFontPostscriptName() .&#39;&amp;lt;br&amp;gt;&#39;;&#xA;$font-&amp;gt;close();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Font Metrics Generation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$font = FontLib\Font::load(&#39;fontfile.ttf&#39;);&#xA;$font-&amp;gt;parse();&#xA;$font-&amp;gt;saveAdobeFontMetrics(&#39;fontfile.ufm&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create a font subset&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$font = FontLib\Font::load(&#39;fontfile.ttf&#39;);&#xA;$font-&amp;gt;parse();&#xA;$font-&amp;gt;setSubset(&#34;abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ.:,;&#39; (!?)+-*/== 1234567890&#34;); // characters to include&#xA;$font-&amp;gt;reduce();&#xA;touch(&#39;fontfile.subset.ttf&#39;);&#xA;$font-&amp;gt;open(&#39;fontfile.subset.ttf&#39;, FontLib\BinaryStream::modeReadWrite);&#xA;$font-&amp;gt;encode(array(&#34;OS/2&#34;));&#xA;$font-&amp;gt;close();&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>