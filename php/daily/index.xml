<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-17T01:41:54Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>getsentry/sentry-php</title>
    <updated>2023-05-17T01:41:54Z</updated>
    <id>tag:github.com,2023-05-17:/getsentry/sentry-php</id>
    <link href="https://github.com/getsentry/sentry-php" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official PHP SDK for Sentry (sentry.io)&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://sentry.io/?utm_source=github&amp;amp;utm_medium=logo&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://sentry-brand.storage.googleapis.com/sentry-wordmark-dark-280x84.png&#34; alt=&#34;Sentry&#34; width=&#34;280&#34; height=&#34;84&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Bad software is everywhere, and we&#39;re tired of it. Sentry is on a mission to help developers write better software faster, so we can get back to enjoying technology. If you want to join us &lt;a href=&#34;https://sentry.io/careers/&#34;&gt;&lt;kbd&gt;&lt;strong&gt;Check out our open positions&lt;/strong&gt;&lt;/kbd&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Official Sentry SDK for PHP&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/sentry/sentry&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/sentry/sentry/v/stable&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/sentry/sentry&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/sentry/sentry/license&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/sentry/sentry&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/sentry/sentry/downloads&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/sentry/sentry&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/sentry/sentry/d/monthly&#34; alt=&#34;Monthly Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/cWnMQeA&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/621778831602221064&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Version&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Build Status&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Code Coverage&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;master&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-php/actions?query=workflow%3ACI+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/getsentry/sentry-php/workflows/CI/badge.svg?branch=master&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://codecov.io/gh/getsentry/sentry-php/branch/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/getsentry/sentry-php/master?logo=codecov&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;develop&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-php/actions?query=workflow%3ACI+branch%3Adevelop&#34;&gt;&lt;img src=&#34;https://github.com/getsentry/sentry-php/workflows/CI/badge.svg?branch=develop&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://codecov.io/gh/getsentry/sentry-php/branch/develop&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/getsentry/sentry-php/develop?logo=codecov&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The Sentry PHP error reporter tracks errors and exceptions that happen during the execution of your application and provides instant notification with detailed information needed to prioritize, identify, reproduce and fix each issue.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;To install the SDK you will need to be using &lt;a href=&#34;https://raw.githubusercontent.com/getsentry/sentry-php/master/%5Bhttps://getcomposer.org/&#34;&gt;Composer&lt;/a&gt; in your project. To install it please see the &lt;a href=&#34;https://getcomposer.org/download/&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is our &#34;core&#34; SDK, meaning that all the important code regarding error handling lives here. If you are happy with using the HTTP client we recommend install the SDK like: &lt;a href=&#34;https://github.com/getsentry/sentry-php-sdk&#34;&gt;&lt;code&gt;sentry/sdk&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require sentry/sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This package (&lt;code&gt;sentry/sentry&lt;/code&gt;) is not tied to any specific library that sends HTTP messages. Instead, it uses &lt;a href=&#34;https://github.com/php-http/httplug&#34;&gt;Httplug&lt;/a&gt; to let users choose whichever PSR-7 implementation and HTTP client they want to use.&lt;/p&gt; &#xA;&lt;p&gt;If you just want to get started quickly you should run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require sentry/sentry php-http/curl-client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is basically what our metapackage (&lt;code&gt;sentry/sdk&lt;/code&gt;) provides.&lt;/p&gt; &#xA;&lt;p&gt;This will install the library itself along with an HTTP client adapter that uses cURL as transport method (provided by Httplug). You do not have to use those packages if you do not want to. The SDK does not care about which transport method you want to use because it&#39;s an implementation detail of your application. You may use any package that provides &lt;a href=&#34;https://packagist.org/providers/php-http/async-client-implementation&#34;&gt;&lt;code&gt;php-http/async-client-implementation&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://packagist.org/providers/psr/http-message-implementation&#34;&gt;&lt;code&gt;http-message-implementation&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;\Sentry\init([&#39;dsn&#39; =&amp;gt; &#39;___PUBLIC_DSN___&#39; ]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;try {&#xA;    thisFunctionThrows(); // -&amp;gt; throw new \Exception(&#39;foo bar&#39;);&#xA;} catch (\Exception $exception) {&#xA;    \Sentry\captureException($exception);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Official integrations&lt;/h2&gt; &#xA;&lt;p&gt;The following integrations are fully supported and maintained by the Sentry team.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-symfony&#34;&gt;Symfony&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-laravel&#34;&gt;Laravel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3rd party integrations&lt;/h2&gt; &#xA;&lt;p&gt;The following integrations are available and maintained by members of the Sentry community.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.drupal.org/project/raven&#34;&gt;Drupal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flownative/flow-sentry&#34;&gt;Neos Flow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wordpress.org/plugins/wp-sentry-integration/&#34;&gt;WordPress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facile-it/sentry-module&#34;&gt;ZendFramework&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/notamedia/yii2-sentry&#34;&gt;Yii2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phptek/silverstripe-sentry&#34;&gt;Silverstripe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Connehito/cake-sentry&#34;&gt;CakePHP 3.0 - 4.3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lordsimal/cakephp-sentry&#34;&gt;CakePHP 4.4+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;... feel free to be famous, create a port to your favourite platform!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3rd party integrations using old SDK 2.x&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/networkteam/Networkteam.SentryClient&#34;&gt;Neos Flow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OXIDprojects/sentry&#34;&gt;OXID eShop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/networkteam/sentry_client&#34;&gt;TYPO3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Connehito/cake-sentry/tree/3.x&#34;&gt;CakePHP&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3rd party integrations using old SDK 1.x&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/networkteam/Netwokteam.Neos.SentryClient&#34;&gt;Neos CMS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BurdaPraha/oc_sentry&#34;&gt;OpenCart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/networkteam/sentry_client/tree/2.1.1&#34;&gt;TYPO3&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/error-reporting/quickstart/?platform=php&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/getsentry/sentry-php/issues&#34;&gt;Bug Tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/getsentry/sentry-php&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing to the SDK&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/getsentry/sentry-php/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting help/support&lt;/h2&gt; &#xA;&lt;p&gt;If you need help setting up or configuring the PHP SDK (or anything else in the Sentry universe) please head over to the &lt;a href=&#34;https://discord.com/invite/Ww9hbqr&#34;&gt;Sentry Community on Discord&lt;/a&gt;. There is a ton of great people in our Discord community ready to help you!&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/quickstart/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/documentation-sentry.io-green.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/Ww9hbqr&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/621778831602221064&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged/sentry&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stack%20overflow-sentry-green.svg?sanitize=true&#34; alt=&#34;Stack Overflow&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=getsentry&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/getsentry?label=getsentry&amp;amp;style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the MIT license, see &lt;a href=&#34;https://raw.githubusercontent.com/getsentry/sentry-php/master/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>shayan-yousefi/lara-reserve</title>
    <updated>2023-05-17T01:41:54Z</updated>
    <id>tag:github.com,2023-05-17:/shayan-yousefi/lara-reserve</id>
    <link href="https://github.com/shayan-yousefi/lara-reserve" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a package to add reservation feature to laravel&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lara Reserve&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/shayan100/lara-reserve&#34; alt=&#34;Lara Reserve license&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/code-size/shayan100/lara-reserve&#34; alt=&#34;Lara Reserve size&#34;&gt; &lt;a href=&#34;https://packagist.org/packages/shayanys/lara-reserve&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/shayanys/lara-reserve&#34; alt=&#34;Lara Reserve version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Lara Reserve Is a Laravel Package To Adds a Reservation feature to the laravel models.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;To Install Lara Reserve Run Following Command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;composer require shayanys/lara-reserve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then run Migrations By:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;php artisan migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;Initialize Models to Use Lara Reserve&lt;/h2&gt; &#xA;&lt;p&gt;To Add Lara Reserve Feature To Models, Your Models Should Implement &lt;code&gt;ReservableInterface&lt;/code&gt; And use &lt;code&gt;Reservable&lt;/code&gt; Trait. And the Model Is Ready For Reserve By the Customer. And If Your Model Is a Customer, e.g. User model (Which Can Reserve Reservables) Should Implement &lt;code&gt;CustomerInterface&lt;/code&gt; And use &lt;code&gt;Customer&lt;/code&gt; Trait.&lt;/p&gt; &#xA;&lt;h3&gt;Example:&lt;/h3&gt; &#xA;&lt;h4&gt;Reservable Model:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace App\Models;&#xA;&#xA;use Illuminate\Database\Eloquent\Factories\HasFactory;&#xA;use Illuminate\Database\Eloquent\Model;&#xA;use Illuminate\Database\Eloquent\Relations\MorphMany;&#xA;use ShayanYS\LaraReserve\Interfaces\ReservableInterface;&#xA;use ShayanYS\LaraReserve\Models\Reserve;&#xA;use ShayanYS\LaraReserve\Traits\Reservable;&#xA;&#xA;class Book extends Model implements ReservableInterface&#xA;{&#xA;    use HasFactory, Reservable;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Reservable Model:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace App\Models;&#xA;&#xA;// use Illuminate\Contracts\Auth\MustVerifyEmail;&#xA;use Illuminate\Database\Eloquent\Factories\HasFactory;&#xA;use Illuminate\Foundation\Auth\User as Authenticatable;&#xA;use Illuminate\Notifications\Notifiable;&#xA;use Laravel\Sanctum\HasApiTokens;&#xA;use ShayanYS\LaraReserve\Interfaces\CustomerInterface;&#xA;use ShayanYS\LaraReserve\Traits\Customer;&#xA;&#xA;class User extends Authenticatable implements CustomerInterface&#xA;{&#xA;    use HasApiTokens, HasFactory, Notifiable, Customer;&#xA;&#xA;}&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reservations&lt;/h2&gt; &#xA;&lt;h3&gt;Call &lt;code&gt;reserve&lt;/code&gt; Method From Customer&lt;/h3&gt; &#xA;&lt;p&gt;you can reserve a reservable for a customer by reserve method of a customer model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$reservable = Book::first();&#xA;$customer = User::first();&#xA;&#xA;$customer-&amp;gt;reserve($reservable,now()-&amp;gt;addDay(),&#39;00:00:00&#39;,now()-&amp;gt;addYear(),&#39;00:00:00&#39;,[&#39;key&#39; =&amp;gt; &#39;value&#39;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;in the above example, &lt;code&gt;$reservable&lt;/code&gt; will reserve for &lt;code&gt;$customer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Parameters&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;reservable you want to reserve for customer&lt;/li&gt; &#xA; &lt;li&gt;the desired date for the reservation&lt;/li&gt; &#xA; &lt;li&gt;the desired time for the reservation in H:i:s format&lt;/li&gt; &#xA; &lt;li&gt;the desired date for the end reservation - &lt;strong&gt;optional&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;the desired time for the end reservation in H:i:s format - &lt;strong&gt;optional&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;additional details for the reservation - &lt;strong&gt;optional&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Call &lt;code&gt;reserveForCustomer&lt;/code&gt; Method From Reservable&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$reservable = Book::first();&#xA;$customer = User::first();&#xA;&#xA;$reservable-&amp;gt;reserveForCustomer($customer,now()-&amp;gt;addDay(),&#39;00:00:00&#39;,now()-&amp;gt;addYear(),&#39;00:00:00&#39;,[&#39;code&#39; =&amp;gt; 123]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the above example, like the previous example, &lt;code&gt;$reservable&lt;/code&gt; will reserve for &lt;code&gt;$customer&lt;/code&gt;. In the &lt;code&gt;reserveFroCustomer&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Parameters&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;the customer would you like to make a reservation for&lt;/li&gt; &#xA; &lt;li&gt;the desired date for the reservation&lt;/li&gt; &#xA; &lt;li&gt;the desired time for the reservation in H:i:s format&lt;/li&gt; &#xA; &lt;li&gt;the desired date for the end reservation - &lt;strong&gt;optional&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;the desired time for the end reservation in H:i:s format - &lt;strong&gt;optional&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;additional details for the reservation - &lt;strong&gt;optional&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Call &lt;code&gt;reserveWithoutCustomer&lt;/code&gt; Method From Reservable&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$reservable = Book::first();&#xA;&#xA;$reservable-&amp;gt;reserveWithoutCustomer([&#39;name&#39; =&amp;gt; &#39;shayan&#39;],now()-&amp;gt;addDay(),&#39;00:00:00&#39;,now()-&amp;gt;addYear(),&#39;00:00:00&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With this method, you can reserve a reservable without a customer.&lt;/p&gt; &#xA;&lt;h4&gt;Parameters&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;array of the reservation details&lt;/li&gt; &#xA; &lt;li&gt;the desired date for the reservation&lt;/li&gt; &#xA; &lt;li&gt;the desired time for the reservation in H:i:s format&lt;/li&gt; &#xA; &lt;li&gt;the desired date for the end reservation - &lt;strong&gt;optional&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;the desired time for the end reservation in H:i:s format - &lt;strong&gt;optional&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Max allowed reserves&lt;/h2&gt; &#xA;&lt;h3&gt;Setting the maximum possible number of reservations on one date and time.&lt;/h3&gt; &#xA;&lt;p&gt;to set maximum allowed reserve in one date you should add &lt;code&gt;max_allowed_reserves&lt;/code&gt; column to your reservable table in database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Schema::table(&#39;books&#39;, function (Blueprint $table) {&#xA;    $table-&amp;gt;integer(&#39;max_allowed_reserves&#39;)-&amp;gt;nullable();&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;you can set &lt;code&gt;max_allowed_reserves&lt;/code&gt; column of a reservable by calling &lt;code&gt;maxAllowedReserves&lt;/code&gt; from reservable: this method get &lt;code&gt;$max&lt;/code&gt; to set it as value of &lt;code&gt;max_allowed_reserves&lt;/code&gt; column.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$tableToReserve = ReseturantTable::first();&#xA;$tableToReserve-&amp;gt;maxAllowedReserves(5);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if you want to get the &lt;code&gt;max_allowed_reserves&lt;/code&gt; from reservable you can do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$tableToReserve = ReseturantTable::first();&#xA;&#xA;$tableToReserve-&amp;gt;getMaxAllowedReserves();&#xA;//or&#xA;$tableToReserve-&amp;gt;max_allowed_reserves;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;returns null if not exists or its null in database.&lt;/p&gt; &#xA;&lt;h2&gt;Is available&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;isAvailable&lt;/code&gt; method can call from reservable and get two arguments date and optional time; and returns is that reservable available in passed date and time (the time default is 00:00:00).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$airplaneSeat = AirplainSeat::first();&#xA;&#xA;$airplaneSeat-&amp;gt;isAvailable(\Carbon\Carbon::createFromFormat(&#39;Y-m-d&#39;,&#39;2023-05-1&#39;),&#39;17:00:00&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This code returns true if &lt;code&gt;max_allowed_reserves&lt;/code&gt; is less than count of all reserves in 2023-05-1 17:00:00; otherwise returns false.&lt;/p&gt; &#xA;&lt;h2&gt;withoutCheckAvailability and withCheckAvailability&lt;/h2&gt; &#xA;&lt;p&gt;if you don&#39;t want to check the availability for some reasons you can use &lt;code&gt;withoutCheckAvailability&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$airplaneSeat = AirplainSeat::first();&#xA;$customer = User::first();&#xA;&#xA;$airplaneSeat-&amp;gt;withoutCheckAvailability()-&amp;gt;reserveForCustomer($customer,now()-&amp;gt;addDay(),&#39;00:00:00&#39;,metadata:[&#39;code&#39; =&amp;gt; 123]);&#xA;&#xA;//or call reserve method of customer like this:&#xA;$customer-&amp;gt;reserve($airplaneSeat-&amp;gt;withoutCheckAvailability(),now()-&amp;gt;addDay(),&#39;00:00:00&#39;,metadata:[&#39;key&#39; =&amp;gt; &#39;value&#39;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;this code will bypass the check availability.&lt;/p&gt; &#xA;&lt;p&gt;also you can set reservable to don&#39;t check availability by default:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace App\Models;&#xA;&#xA;use Illuminate\Database\Eloquent\Factories\HasFactory;&#xA;use Illuminate\Database\Eloquent\Model;&#xA;use Illuminate\Database\Eloquent\Relations\MorphMany;&#xA;use ShayanYS\LaraReserve\Interfaces\ReservableInterface;&#xA;use ShayanYS\LaraReserve\Models\Reserve;&#xA;use ShayanYS\LaraReserve\Traits\Reservable;&#xA;&#xA;class AirplaneSeat extends Model implements ReservableInterface&#xA;{&#xA;    use HasFactory,Reservable;&#xA;&#xA;    public function __construct(array $attributes = [])&#xA;    {&#xA;        parent::__construct($attributes);&#xA;&#xA;        $this-&amp;gt;checkAvailability = false;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;other way to modify this is to modify &lt;code&gt;shouldCheckAvailability&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;namespace App\Models;&#xA;&#xA;use Illuminate\Database\Eloquent\Factories\HasFactory;&#xA;use Illuminate\Database\Eloquent\Model;&#xA;use Illuminate\Database\Eloquent\Relations\MorphMany;&#xA;use ShayanYS\LaraReserve\Interfaces\ReservableInterface;&#xA;use ShayanYS\LaraReserve\Models\Reserve;&#xA;use ShayanYS\LaraReserve\Traits\Reservable;&#xA;&#xA;class AirplaneSeat extends Model implements ReservableInterface&#xA;{&#xA;    use HasFactory,Reservable;&#xA;&#xA;    public function shouldCheckAvailability() : bool{&#xA;        // TODO: Implement shouldCheckAvailability() method.&#xA;        return false;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;this will don&#39;t check availability by default. if you want check availability when you set &lt;code&gt;checkAvailability&lt;/code&gt; property in constructor to false you should do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$airplaneSeat = AirplainSeat::first();&#xA;$customer = User::first();&#xA;&#xA;$airplaneSeat-&amp;gt;withCheckAvailability()-&amp;gt;reserveForCustomer($customer,now()-&amp;gt;addDay(),&#39;00:00:00&#39;,metadata:[&#39;code&#39; =&amp;gt; 123]);&#xA;&#xA;//or call reserve method of customer like this:&#xA;$customer-&amp;gt;reserve($airplaneSeat-&amp;gt;withCheckAvailability(),now()-&amp;gt;addDay(),&#39;00:00:00&#39;,metadata:[&#39;key&#39; =&amp;gt; &#39;value&#39;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;this will check availability and then reserve.&lt;/p&gt; &#xA;&lt;h1&gt;Get Reserves&lt;/h1&gt; &#xA;&lt;p&gt;you can get reserves from customer or reservable.&lt;/p&gt; &#xA;&lt;h2&gt;activeReserves&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$airplaneSeat = AirplainSeat::first();&#xA;$customer = User::first();&#xA;&#xA;$airplaneSeat-&amp;gt;activeReserves()-&amp;gt;get(); &#xA;// this will return collection of active reserves which reserved this reservable&#xA;//(the reservations that have a reserved date and time or end reservation date and time that are greater than or equal to the current date and time.)&#xA;&#xA;$customer-&amp;gt;activeReserves()-&amp;gt;get();&#xA;// this will return collection of active reserves which reserved by this customer&#xA;//(the reservations that have a reserved date and time or end reservation date and time that are greater than or equal to the current date and time.)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;the &lt;code&gt;activeReserves&lt;/code&gt; method return a MorphMany relation you can call &lt;code&gt;get&lt;/code&gt; method to get the collection of reserves; you can also call &lt;code&gt;paginate&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;h2&gt;allReserves&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$airplaneSeat = AirplainSeat::first();&#xA;$customer = User::first();&#xA;&#xA;$airplaneSeat-&amp;gt;allReserves()-&amp;gt;get(); &#xA;// this will return collection of all reserves which reserved this reservable&#xA;&#xA;$customer-&amp;gt;allReserves()-&amp;gt;get();&#xA;// this will return collection of all reserves which reserved by this customer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;the &lt;code&gt;allReserves&lt;/code&gt; method return a MorphMany relation you can call &lt;code&gt;get&lt;/code&gt; method to get the collection of reserves; you can also call &lt;code&gt;paginate&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;h2&gt;startedReserves&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$airplaneSeat = AirplainSeat::first();&#xA;$customer = User::first();&#xA;&#xA;$airplaneSeat-&amp;gt;startedReserves()-&amp;gt;get(); &#xA;// this will return collection of started reserves which reserved this reservable&#xA;//(the reservations that have a reserved date and time that are greater than or equal to the current date and time and end reservation date and time less than current date and time.)&#xA;$customer-&amp;gt;startedReserves()-&amp;gt;get();&#xA;// this will return collection of started reserves which reserved by this customer&#xA;//(the reservations that have a reserved date and time that are greater than or equal to the current date and time and end reservation date and time less than current date and time.)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;the &lt;code&gt;startedReserves&lt;/code&gt; method return a MorphMany relation you can call &lt;code&gt;get&lt;/code&gt; method to get the collection of reserves; you can also call &lt;code&gt;paginate&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;h2&gt;endedReserves&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$airplaneSeat = AirplainSeat::first();&#xA;$customer = User::first();&#xA;&#xA;$airplaneSeat-&amp;gt;endedReserves()-&amp;gt;get(); &#xA;// this will return collection of ended reserves which reserved this reservable&#xA;//(the reservations that have a end reservation date and time that are greater than current date and time)&#xA;$customer-&amp;gt;endedReserves()-&amp;gt;get();&#xA;// this will return collection of ended reserves which reserved by this customer&#xA;//(the reservations that have a end reservation date and time that are greater than current date and time)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;the &lt;code&gt;endedReserves&lt;/code&gt; method return a MorphMany relation you can call &lt;code&gt;get&lt;/code&gt; method to get the collection of reserves; you can also call &lt;code&gt;paginate&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Freely distributable under the terms of the MIT license.&lt;/p&gt; &#xA;&lt;h1&gt;Buy Me a Cofee&lt;/h1&gt; &#xA;&lt;p&gt;A lot of time has been spent to make this package and we always try to keep it updated. If you like, you can show your support in this way and this is valuable for me.&lt;/p&gt; &#xA;&lt;a href=&#34;http://www.coffeete.ir/shayanys&#34;&gt; &lt;img src=&#34;http://www.coffeete.ir/images/buttons/lemonchiffon.png&#34; style=&#34;width:260px;&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://www.buymeacoffee.com/shayanys&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 60px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;</summary>
  </entry>
</feed>