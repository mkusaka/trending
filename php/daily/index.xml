<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-26T01:34:49Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>symfony/ai</title>
    <updated>2025-07-26T01:34:49Z</updated>
    <id>tag:github.com,2025-07-26:/symfony/ai</id>
    <link href="https://github.com/symfony/ai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://symfony.com&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://symfony.com/logos/symfony_dynamic_01.svg?sanitize=true&#34; alt=&#34;Symfony Logo&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; Symfony AI &lt;/h3&gt; &#xA;&lt;p&gt;Symfony AI is a set of components that integrate AI capabilities into PHP applications.&lt;/p&gt; &#xA;&lt;h2&gt;Components &amp;amp; Bundles&lt;/h2&gt; &#xA;&lt;p&gt;Symfony AI consists of several lower and higher level &lt;strong&gt;components&lt;/strong&gt; and the respective integration &lt;strong&gt;bundles&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Components&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/symfony/ai/main/src/platform/README.md&#34;&gt;Platform&lt;/a&gt;&lt;/strong&gt;: A unified interface to various AI platforms like OpenAI, Anthropic, Azure, Gemini, and more.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/symfony/ai/main/src/agent/README.md&#34;&gt;Agent&lt;/a&gt;&lt;/strong&gt;: Framework for building AI agents that can interact with users and perform tasks.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/symfony/ai/main/src/store/README.md&#34;&gt;Store&lt;/a&gt;&lt;/strong&gt;: Data storage abstraction with indexing and retrieval for AI applications.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/symfony/ai/main/src/mcp-sdk/README.md&#34;&gt;MCP SDK&lt;/a&gt;&lt;/strong&gt;: SDK for &lt;a href=&#34;https://modelcontextprotocol.io&#34;&gt;Model Context Protocol&lt;/a&gt; enabling communication between AI agents and tools.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bundles&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/symfony/ai/main/src/ai-bundle/README.md&#34;&gt;AI Bundle&lt;/a&gt;&lt;/strong&gt;: Symfony integration for AI Platform, Store and Agent components.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/symfony/ai/main/src/mcp-bundle/README.md&#34;&gt;MCP Bundle&lt;/a&gt;&lt;/strong&gt;: Symfony integration for MCP SDK, allowing them to act as MCP servers or clients.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples &amp;amp; Demo&lt;/h2&gt; &#xA;&lt;p&gt;To get started with Symfony AI, you can either check out the &lt;a href=&#34;https://raw.githubusercontent.com/symfony/ai/main/examples&#34;&gt;examples&lt;/a&gt; to see how to use the components in smaller snippets, or you can run the &lt;a href=&#34;https://raw.githubusercontent.com/symfony/ai/main/demo&#34;&gt;demo application&lt;/a&gt; to see the components work together in a full Symfony web application.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;Help Symfony by &lt;a href=&#34;https://symfony.com/sponsor&#34;&gt;sponsoring&lt;/a&gt; its development!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for considering contributing to Symfony AI! You can find the &lt;a href=&#34;https://raw.githubusercontent.com/symfony/ai/main/CONTRIBUTING.md&#34;&gt;contribution guide here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Fixture Licenses&lt;/h2&gt; &#xA;&lt;p&gt;For testing multi-modal features, the repository contains binary media content, with the following owners and licenses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;tests/Fixture/image.jpg&lt;/code&gt;: Chris F., Creative Commons, see &lt;a href=&#34;https://www.pexels.com/photo/blauer-und-gruner-elefant-mit-licht-1680755/&#34;&gt;pexels.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tests/Fixture/audio.mp3&lt;/code&gt;: davidbain, Creative Commons, see &lt;a href=&#34;https://freesound.org/people/davidbain/sounds/136777/&#34;&gt;freesound.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tests/Fixture/document.pdf&lt;/code&gt;: Chem8240ja, Public Domain, see &lt;a href=&#34;https://en.m.wikipedia.org/wiki/File:Re_example.pdf&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>az-digital/az_quickstart</title>
    <updated>2025-07-26T01:34:49Z</updated>
    <id>tag:github.com,2025-07-26:/az-digital/az_quickstart</id>
    <link href="https://github.com/az-digital/az_quickstart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;UArizona&#39;s web content management system built with Drupal 10.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Arizona Quickstart&lt;/h1&gt; &#xA;&lt;p&gt;Demonstration/starter Drupal distribution and installation profile that packages various features consistent with community best practices and University of Arizona brand strategy.&lt;/p&gt; &#xA;&lt;h2&gt;A Complete Customized Drupal&lt;/h2&gt; &#xA;&lt;p&gt;AZ Quickstart is a complete customized version of the popular Drupal content management system, not an add-on to an existing Drupal-based web site. Previously, to start a new Drupal site you would prepare a web server and database, then install the core software following the instructions in its &lt;a href=&#34;https://www.drupal.org/docs/installing-drupal&#34;&gt;Installing Drupal&lt;/a&gt; document and the &lt;a href=&#34;https://www.drupal.org/docs/user_guide/en/installation-chapter.html&#34;&gt;installation chapter&lt;/a&gt; in its user guide. This would produce a minimally functional web site with no content, which you could then customize by adding themes and modules to fit it to your needs. Increasingly, however, you can install Drupal distributions, which not only contain the core, but also complete sets of additions to make it almost immediately useful for a particular purpose, such as an online storefront. AZ Quickstart is the distribution that provides many of the features specific to the University of Arizona, and rather than an empty site, can include some demonstration content (which can nevertheless be turned off instantly).&lt;/p&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/az-digital/az_quickstart/main/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt; document for detailed instructions on how to contribute including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What you&#39;ll need to &lt;a href=&#34;https://github.com/az-digital/az_quickstart/raw/main/CONTRIBUTING.md#things-youll-need-to-get-started&#34;&gt;get started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/az-digital/az_quickstart/raw/main/CONTRIBUTING.md#creating-issues-and-pull-requests&#34;&gt;How to create issues and pull requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/az-digital/az_quickstart/raw/main/CONTRIBUTING.md#pull-request-guidelines&#34;&gt;How to submit a pull request&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/az-digital/az_quickstart/raw/main/CONTRIBUTING.md#local-development&#34;&gt;Local development&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Where to Install Your Quickstart Site&lt;/h2&gt; &#xA;&lt;p&gt;The university&#39;s Campus Web Services group provides ready-to-use sites based on Quickstart for anyone who isn&#39;t comfortable with web development or system administration. Behind the scenes, a web hosting service called Pantheon hosts these sites, so in cases where people require more control and flexibility in a Quickstart site than these can provide, there are ways they can also host it independently on Pantheon, and many important university sites are already there. However, there are many other options for hosting web sites based on Arizona Quickstart; the only caveat is that anyone following one of these has to maintain their responsibility for keeping the system and web site secure and up-to-date. A generic hosting option that has been around for many years is known as LAMP: the combination of the Linux operating system, Apache web server, MySQL database, and PHP scripting language, so it is worth giving a more extensive example of using this, but many variations are common (for example, substituting Nginx for the Apache web server software).&lt;/p&gt; &#xA;&lt;h3&gt;System Requirements&lt;/h3&gt; &#xA;&lt;p&gt;Arizona Quickstart&#39;s system requirements are almost identical to &lt;a href=&#34;https://www.drupal.org/docs/system-requirements&#34;&gt;Drupal&#39;s own requirements&lt;/a&gt;, in particular the requirements for Drupal 9. Some additional things that need emphasized or checked are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure the system has enough memory: even if the running site consumes little, updates and installations are memory-intensive.&lt;/li&gt; &#xA; &lt;li&gt;Check that PHP&#39;s configuration allows it to use the memory (see the &lt;a href=&#34;https://www.drupal.org/docs/system-requirements&#34;&gt;memory requirements&lt;/a&gt; section).&lt;/li&gt; &#xA; &lt;li&gt;Re-check that the required PHP extensions are added: on a recent system the usual packaging mechanism should suffice to add them (such as apt on Debian or Ubuntu versions of Linux).&lt;/li&gt; &#xA; &lt;li&gt;Check that the Apache configuration enables &lt;code&gt;mod_rewrite&lt;/code&gt;, and the module letting it work with PHP.&lt;/li&gt; &#xA; &lt;li&gt;Check the user and group of the running web server: in many Debian-derived Linux systems these will be &lt;code&gt;www-data&lt;/code&gt;, but not on all (this information is needed for setting file and directory permissions later).&lt;/li&gt; &#xA; &lt;li&gt;Install and configure the software as a normal (non-root) user with the ability to &lt;code&gt;sudo&lt;/code&gt; when elevated privileges are needed; add this user to the same group that the web server uses (so you would see something like &lt;code&gt;www-data&lt;span&gt;❌&lt;/span&gt;33:normaluser&lt;/code&gt; in the /etc/group file).&lt;/li&gt; &#xA; &lt;li&gt;A recent version of Composer is a necessity, not an option — remove any previously installed but stale versions, and follow the &lt;a href=&#34;https://getcomposer.org/download/&#34;&gt;https://getcomposer.org/download/&lt;/a&gt; instructions to install it, or if upgrading is possible, try the command &lt;code&gt;sudo -H composer self-update --2&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web Server Configuration&lt;/h3&gt; &#xA;&lt;p&gt;If your Quickstart site will be exposed to public view, and is anything more than an ephemeral development site, you should use TLS (SSL, the &lt;code&gt;https://&lt;/code&gt; rather than &lt;code&gt;http://&lt;/code&gt; in the URLs). There are now several easy and cheap ways to do this, from getting InCommon certicates through the University, the certificates available in AWS environments, or the free automatically renewable Let&#39;s Encrypt certificates. The Apache default settings will generally need some hardening (at least disabling obsolete protocols), but there are many guides on how to do this and &lt;a href=&#34;https://www.ssllabs.com/&#34;&gt;online tools&lt;/a&gt; that can help. It&#39;s a good practice to wrap the configuration of the Quickstart site in Apache&#39;s &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; directive, even if there will only be one on the server. There are options to add security-related headers from within the Quickstart site itself, but it doesn&#39;t hurt to set these in advance, using the Apache configuration, with things like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    Header always set Content-Security-Policy &#34;frame-ancestors &#39;self&#39;&#34;&#xA;    Header always set Strict-Transport-Security &#34;max-age=63072000; includeSubdomains;&#34;&#xA;    Header always set X-XSS-Protection 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The more general Drupal &lt;a href=&#34;https://www.drupal.org/docs/system-requirements/web-server-requirements&#34;&gt;web server requirements&lt;/a&gt; are not particularly demanding. Make sure the web server is functioning properly with a trivial static site before trying the Quickstart installation (an index.html file stuck somewhere), but note that you should change Apache&#39;s &lt;code&gt;DocumentRoot&lt;/code&gt; directive for a new location after the initial test: Quickstart&#39;s DocumentRoot will be a directory created during installation (which can&#39;t already exist).&lt;/p&gt; &#xA;&lt;h3&gt;Database Server Configuration&lt;/h3&gt; &#xA;&lt;p&gt;The main point of Drupal&#39;s &lt;a href=&#34;https://www.drupal.org/docs/system-requirements/database-server-requirements&#34;&gt;database requirements&lt;/a&gt; is that it does not support old versions of the server software, but does support several different variations in the software itself. Quickstart requires configuration with a MySQL or similar database, and a user set up within the database server with full rights to access this. In several recent Linux distributions the ultimate system administration account (root) has full administrative access to the database server without needing a password, but there is no sane way to pass these privileges into Quickstart&#39;s configuration, and in any case it is a best practice to create a dedicated administrative user for this purpose. A typical setup would look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo /usr/bin/mysql -e &#34;DROP DATABASE IF EXISTS azqslampdb;&#34;&#xA;sudo /usr/bin/mysql -e &#34;CREATE USER &#39;azqslampdbadmin&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;turn_over_an_old_leaf_at_Ardtun&#39;;&#34;&#xA;sudo /usr/bin/mysql -e &#34;GRANT ALL ON azqslampdb.* TO &#39;azqslampdbadmin&#39;@&#39;localhost&#39; WITH GRANT OPTION;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some old code examples combine the &lt;code&gt;CREATE USER&lt;/code&gt; and &lt;code&gt;GRANT&lt;/code&gt; in a single command, but MySQL 8 no longer supports this. &lt;code&gt;WITH GRANT OPTION&lt;/code&gt; might be unnecessary in practice, but is not implied by &lt;code&gt;ALL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install Using Composer&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s a good idea to make a directory where the non-privileged system user can write, but where the web server can also access. So for example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /var/www&#xA;sudo mkdir drupalsites&#xA;sudo chown normaluser drupalsites&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It should then be possible to install Quickstart directly in this directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /var/www/drupalsites&#xA;composer create-project az-digital/az-quickstart-scaffolding:2.0.x-dev azqs --no-interaction --no-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This should produce a long list of messages, looking something like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Creating a &#34;az-digital/az-quickstart-scaffolding:2.0.x-dev&#34; project at &#34;./azqs&#34;&#xA;Installing az-digital/az-quickstart-scaffolding (2.0.x-dev 238cc222d24ca1fdcbd1dbfc5ea249f4ae0ac440)&#xA;  - Downloading az-digital/az-quickstart-scaffolding (2.0.x-dev 238cc22)&#xA;  - Installing az-digital/az-quickstart-scaffolding (2.0.x-dev 238cc22): Extracting archive&#xA;Created project in /var/www/drupalsites/azqs&#xA;&amp;gt; QuickstartProject\composer\ScriptHandler::checkComposerVersion&#xA;Loading composer repositories with package information&#xA;Updating dependencies                                 &#xA;Lock file operations: 240 installs, 0 updates, 0 removals&#xA;  - Locking alchemy/zippy (0.4.9)&#xA;  - Locking asm89/stack-cors (1.3.0)&#xA;  - Locking az-digital/arizona-bootstrap (v2.0.11)&#xA;  - Locking az-digital/az-quickstart-dev (dev-main 01fcacb)&#xA;  - Locking az-digital/az_quickstart (2.0.0-rc1)&#xA; ...&#xA;   - Copy [web-root]/site.webmanifest from assets/site.webmanifest&#xA;Scaffolding files for az-digital/az-quickstart-scaffolding:&#xA;  - Copy [project-root]/.editorconfig from web/core/assets/scaffold/files/editorconfig&#xA;  - Copy [project-root]/.gitattributes from web/core/assets/scaffold/files/gitattributes&#xA;PHP CodeSniffer Config installed_paths set to ../../drupal/coder/coder_sniffer,../../phpcompatibility/php-compatibility,../../pheromone/phpcs-security-audit,../../sirbrillig/phpcs-variable-analysis&#xA;&amp;gt; QuickstartProject\composer\ScriptHandler::createRequiredFiles&#xA;Created a sites/default/settings.php file with chmod 0666&#xA;Created a sites/default/files directory with chmod 0777&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will have created a top-level directory (&lt;code&gt;azqs&lt;/code&gt; in this example), within which there is a &lt;code&gt;web&lt;/code&gt; subdirectory serving as the actual DocumentRoot for the web server. It&#39;s important to update the Apache configuration at this point to reflect this, so in the example there would be a &lt;code&gt;DocumentRoot /var/www/drupalsites/azqs/web&lt;/code&gt; directive, and a corresponding &lt;code&gt;&amp;lt;Directory /var/www/drupalsites/azqs/web&amp;gt;&lt;/code&gt; (to set things like &lt;code&gt;AllowOverride All&lt;/code&gt; there). Once Apache has restarted with the new configuration, there are two ways to complete the installation. The web site itself will display a variation on the usual initial Drupal installation form (headed “Arizona Quickstart”), allowing you to fill in various fields with details such as the database user and password; but the initial build includes the popular &lt;em&gt;drush&lt;/em&gt; utility (down in the vendor subdirectory), so a purely command-line installation is possible with something like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/var/www/drupalsites/azqs/vendor/drush/drush/drush si --db-url=mysql://azqslampdbadmin:turn_over_an_old_leaf_at_Ardtun@localhost/azqslampdb --account-name=azadmin --account-pass=flour_85_percent_extraction --account-mail=webmaster@lamp.arizona.edu --site-mail=admin@development.lamp.arizona.edu --site-name=&#39;LAMP Development&#39; --verbose --yes az_quickstart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, note that the database credentials match those set previously (other details shown here should also be customized with your own settings). One messy detail at the moment is that you may have to manually create a top-level &lt;code&gt;config/sync&lt;/code&gt; directory (so /var/www/drupalsites/azqs/config/sync in this example). If all goes well, you will be able log in to the new site with the username and password you have set. One thing that will need immediate attention is the report at &lt;code&gt;/admin/reports/status#error&lt;/code&gt; once you have logged in. There will probably be a Trusted Host Settings error, needing a manual change to your settings file, and notice of some directory permissions that need relaxed to allow the web server to write there.&lt;/p&gt; &#xA;&lt;h3&gt;Using Xdebug with Lando and VSCode&lt;/h3&gt; &#xA;&lt;p&gt;This repository contains the necessary config to run Xdebug inside a lando application container.&lt;/p&gt; &#xA;&lt;p&gt;To start a debugging session, perform the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In VSCode, go to the extensions tab.&lt;/li&gt; &#xA; &lt;li&gt;Type &lt;code&gt;@recommended&lt;/code&gt; in the search bar.&lt;/li&gt; &#xA; &lt;li&gt;Install all workspace recommended extensions.&lt;/li&gt; &#xA; &lt;li&gt;Start lando with &lt;code&gt;lando start&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Start Xdebug with &lt;code&gt;lando xdebug-on&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;At the bottom left of your VSCode window, click the little green icon.&lt;/li&gt; &#xA; &lt;li&gt;Choose &lt;code&gt;Attach to Running Container...&lt;/code&gt; and select the &lt;code&gt;appserver&lt;/code&gt; for your running lando instance.&lt;/li&gt; &#xA; &lt;li&gt;Once the new VScode window pops up, go back to the extensions tab.&lt;/li&gt; &#xA; &lt;li&gt;Type &lt;code&gt;@recommended&lt;/code&gt; in the search bar.&lt;/li&gt; &#xA; &lt;li&gt;Install all workspace recommended extensions.&lt;/li&gt; &#xA; &lt;li&gt;In VSCode, go to the debugging tab.&lt;/li&gt; &#xA; &lt;li&gt;Click the green triangle next to &lt;code&gt;Listen for XDebug&lt;/code&gt; at the top right.&lt;/li&gt; &#xA; &lt;li&gt;In VSCode, go back to the code tab.&lt;/li&gt; &#xA; &lt;li&gt;Set any desired breakpoints.&lt;/li&gt; &#xA; &lt;li&gt;You may now proceed with debugging.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Distribution update&lt;/h3&gt; &#xA;&lt;p&gt;When updating your codebase on an existing site, you should always check if there are distribution updates that need to be applied.&lt;/p&gt; &#xA;&lt;p&gt;This can be done by users with the administrator role on your website at this path: &lt;code&gt;/admin/config/development/distro&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You should be able to see the upstream updates to be applied, after updating your codebase by employing the &#34;Merge&#34; strategy available under the &#34;Advanced&#34; accordion on that page.&lt;/p&gt;</summary>
  </entry>
</feed>