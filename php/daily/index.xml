<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-16T01:38:39Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AfzalSabbir/SSLaraCommerz</title>
    <updated>2022-09-16T01:38:39Z</updated>
    <id>tag:github.com,2022-09-16:/AfzalSabbir/SSLaraCommerz</id>
    <link href="https://github.com/AfzalSabbir/SSLaraCommerz" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A package for SSLCommerz Payment Gateway Inspired by SSLCommerz for Laravel framework (PHP).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SSLaraCommerz - Laravel Package&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A package for SSLCommerz Payment Gateway &lt;br&gt; &lt;sub&gt;&lt;sup&gt;Inspired by &lt;a href=&#34;https://github.com/sslcommerz/SSLCommerz-Laravel&#34;&gt;SSLCommerz&lt;/a&gt;&lt;/sup&gt;&lt;/sub&gt; &lt;br&gt; &lt;a href=&#34;https://www.sslcommerz.com&#34;&gt;SSLCommerz&lt;/a&gt; Payment gateway library for Laravel framework. Official documentation is &lt;a href=&#34;https://developer.sslcommerz.com/docs.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AfzalSabbir/SSLaraCommerz/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square&#34; alt=&#34;Software License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/afzalsabbir/sslaracommerz&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/afzalsabbir/sslaracommerz&#34;&gt;&lt;img src=&#34;https://img.shields.io/travis/afzalsabbir/sslaracommerz/master.svg?style=flat-square&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scrutinizer-ci.com/g/afzalsabbir/sslaracommerz&#34;&gt;&lt;img src=&#34;https://img.shields.io/scrutinizer/g/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;Quality Score&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commits-since/afzalsabbir/sslaracommerz/v0.0.1-alpha-0.svg?style=flat-square&#34; alt=&#34;Commits Since&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/afzalsabbir/sslaracommerz.svg?style=social&amp;amp;label=Watch&#34; alt=&#34;GitHub watchers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/followers/afzalsabbir.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;GitHub followers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/afzalsabbir.svg?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/afzalsabbir/sslaracommerz&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/code-size/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub code size in bytes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/repo-size/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub repo size in bytes&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub last commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/y/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub commit activity the past week, 4 weeks, year&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub commit activity the past week, 4 weeks, year&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/w/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub commit activity the past week, 4 weeks, year&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub release date&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub tag&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date-pre/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/afzalsabbir/sslaracommerz.svg?style=flat-square&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; Payment Gateway, SSLCommerz, IPN, Laravel, SSLaraCommerz&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Requires:&lt;/strong&gt; Laravel &amp;gt;= 5.6 and MySQL&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;License:&lt;/strong&gt; MIT License&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;composer require afzalsabbir/sslaracommerz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Migration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;php artisan migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Vendor Publish - &lt;em&gt;Required&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;span id=&#34;public-assets&#34;&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Public Assets&#xA;php artisan vendor:publish --provider=&#34;AfzalSabbir\SSLaraCommerz\SSLaraCommerzServiceProvider&#34; --tag=&#34;public-assets&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/span&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Public Assets&lt;/strong&gt;: &lt;em&gt;To integrate popup checkout, use the below script before the end of body tag.&lt;/em&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For Sandbox&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script&amp;gt;&#xA;    (function (window, document) {&#xA;        var loader = function () {&#xA;            var script = document.createElement(&#34;script&#34;),&#xA;                tag    = document.getElementsByTagName(&#34;script&#34;)[0];&#xA;            script.src = &#34;https://sandbox.sslcommerz.com/embed.min.js?&#34; + Math.random().toString(36).substring(7);&#xA;            tag.parentNode.insertBefore(script, tag);&#xA;        };&#xA;&#xA;        window.addEventListener ? window.addEventListener(&#34;load&#34;, loader, false) : window.attachEvent(&#34;onload&#34;, loader);&#xA;    })(window, document);&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;or, Publish the &lt;a href=&#34;https://raw.githubusercontent.com/AfzalSabbir/SSLaraCommerz/master/#public-assets&#34;&gt;Public Assets&lt;/a&gt; and use the below &lt;code&gt;sandbox&lt;/code&gt; script&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;/assets/js/sandbox.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For Live&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script&amp;gt;&#xA;    (function (window, document) {&#xA;        var loader = function () {&#xA;            var script = document.createElement(&#34;script&#34;),&#xA;                tag    = document.getElementsByTagName(&#34;script&#34;)[0];&#xA;            script.src = &#34;https://seamless-epay.sslcommerz.com/embed.min.js?&#34; + Math.random().toString(36).substring(7);&#xA;            tag.parentNode.insertBefore(script, tag);&#xA;        };&#xA;&#xA;        window.addEventListener ? window.addEventListener(&#34;load&#34;, loader, false) : window.attachEvent(&#34;onload&#34;, loader);&#xA;    })(window, document);&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;or, Publish the &lt;a href=&#34;https://raw.githubusercontent.com/AfzalSabbir/SSLaraCommerz/master/#public-assets&#34;&gt;Public Assets&lt;/a&gt; and use the below &lt;code&gt;live&lt;/code&gt; script&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;/assets/js/live.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;span id=&#34;routes-controller&#34;&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Routes and Controller&#xA;php artisan vendor:publish --provider=&#34;AfzalSabbir\SSLaraCommerz\SSLaraCommerzServiceProvider&#34; --tag=&#34;routes-controller&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/span&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Routes and Controller&lt;/strong&gt;: &lt;em&gt;To customize the routes and controller, use the below command.&lt;/em&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add &lt;code&gt;$this-&amp;gt;loadRoutesFrom(base_path(&#39;routes/sslcommerz.php&#39;));&lt;/code&gt; in &lt;code&gt;app/Providers/RouteServiceProvider.php&lt;/code&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;namespace App\Providers;&#xA;&#xA;// ...&#xA;&#xA;class RouteServiceProvider extends ServiceProvider&#xA;{&#xA;    // ...&#xA;    public function boot()&#xA;    {&#xA;        // ...&#xA;        $this-&amp;gt;loadRoutesFrom(base_path(&#39;routes/sslcommerz.php&#39;));&#xA;    }&#xA;    // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Vendor Publish - &lt;em&gt;Optional&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;span id=&#34;config-views-migrations&#34;&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Config&#xA;php artisan vendor:publish --provider=&#34;AfzalSabbir\SSLaraCommerz\SSLaraCommerzServiceProvider&#34; --tag=&#34;config&#34;&#xA;&#xA;# Views&#xA;## Namespace: sslaracommerz&#xA;php artisan vendor:publish --provider=&#34;AfzalSabbir\SSLaraCommerz\SSLaraCommerzServiceProvider&#34; --tag=&#34;views&#34;&#xA;&#xA;# Migrations&#xA;php artisan vendor:publish --provider=&#34;AfzalSabbir\SSLaraCommerz\SSLaraCommerzServiceProvider&#34; --tag=&#34;migrations&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/span&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you later encounter issues with session destroying after redirect, you can set &lt;code&gt;&#39;same_site&#39; =&amp;gt; null,&lt;/code&gt; in your &lt;code&gt;config/session.php&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Add &lt;code&gt;STORE_ID&lt;/code&gt; and &lt;code&gt;STORE_PASSWORD&lt;/code&gt; values on your project&#39;s &lt;code&gt;.env&lt;/code&gt; file. You can register for a store at &lt;a href=&#34;https://developer.sslcommerz.com/registration/&#34;&gt;https://developer.sslcommerz.com/registration/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Add the below routes into the &lt;code&gt;$excepts&lt;/code&gt; array of &lt;code&gt;VerifyCsrfToken&lt;/code&gt; middleware.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;protected $except = [&#xA;    &#39;/pay-via-ajax&#39;, &#39;/success&#39;,&#39;/cancel&#39;,&#39;/fail&#39;,&#39;/ipn&#39;&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Now, let&#39;s go to the main integration part.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Use the below button where you want to show the &lt;strong&gt;&#34;Pay Now&#34;&lt;/strong&gt; button:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;button class=&#34;your-button-class&#34; id=&#34;sslczPayBtn&#34;&#xA;        token=&#34;if you have any token validation&#34;&#xA;        postdata=&#34;your javascript arrays or objects which requires in backend&#34;&#xA;        order=&#34;If you already have the transaction generated for current order&#34;&#xA;        endpoint=&#34;/pay-via-ajax&#34;&amp;gt; Pay Now&#xA;&amp;lt;/button&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; For EasyCheckout (Popup) integration, you can update the &lt;code&gt;checkout_ajax.php&lt;/code&gt; or use a different file according to your need. We have provided a basic sample page from where you can kickstart the payment gateway integration.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; For Hosted Checkout integration, you can update the &lt;code&gt;checkout_hosted.php&lt;/code&gt; or use a different file according to your need. We have provided a basic sample page from where you can kickstart the payment gateway integration.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; For redirecting action from SSLCommerz Payment gateway, we have also provided sample &lt;code&gt;success.php&lt;/code&gt; , &lt;code&gt;cancel.php&lt;/code&gt;, &lt;code&gt;fail.php&lt;/code&gt;files. You can update those files according to your need.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Original Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For more clear concept read: &lt;a href=&#34;https://github.com/sslcommerz/SSLCommerz-Laravel/raw/master/README.md&#34;&gt;SSLCommerz README.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Run the tests with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vendor/bin/phpunit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/AfzalSabbir/SSLaraCommerz/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you discover any security-related issues, please email &lt;a href=&#34;mailto:afzalbd1@gmail.com&#34;&gt;afzalbd1@gmail.com&lt;/a&gt; instead of using the issue tracker.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/AfzalSabbir/SSLaraCommerz/master/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoftgraph/msgraph-sdk-php</title>
    <updated>2022-09-16T01:38:39Z</updated>
    <id>tag:github.com,2022-09-16:/microsoftgraph/msgraph-sdk-php</id>
    <link href="https://github.com/microsoftgraph/msgraph-sdk-php" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Microsoft Graph Library for PHP.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Get started with the Microsoft Graph SDK for PHP&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/microsoftgraph/msgraph-sdk-php&#34;&gt;&lt;img src=&#34;https://travis-ci.org/microsoftgraph/msgraph-sdk-php.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/microsoft/microsoft-graph&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/microsoft/microsoft-graph/version&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Get started with the PHP Connect Sample&lt;/h2&gt; &#xA;&lt;p&gt;If you want to play around with the PHP library, you can get up and running quickly with the &lt;a href=&#34;https://github.com/microsoftgraph/php-connect-sample&#34;&gt;PHP Connect Sample&lt;/a&gt;. This sample will start you with a little Laravel project that helps you with registration, authentication, and making a simple call to the service.&lt;/p&gt; &#xA;&lt;h2&gt;Install the SDK&lt;/h2&gt; &#xA;&lt;p&gt;You can install the PHP SDK with Composer, either run &lt;code&gt;composer require microsoft/microsoft-graph&lt;/code&gt;, or edit your &lt;code&gt;composer.json&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;require&#34;: {&#xA;        &#34;microsoft/microsoft-graph&#34;: &#34;^1.75.0&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get started with Microsoft Graph&lt;/h2&gt; &#xA;&lt;h3&gt;Register your application&lt;/h3&gt; &#xA;&lt;p&gt;Register your application to use the Microsoft Graph API using &lt;a href=&#34;https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade&#34;&gt;Microsoft Azure Active Directory&lt;/a&gt; in your tenant&#39;s Active Directory to support work or school users for your tenant, or multiple tenants.&lt;/p&gt; &#xA;&lt;h3&gt;Authenticate with the Microsoft Graph service&lt;/h3&gt; &#xA;&lt;p&gt;The Microsoft Graph SDK for PHP does not include any default authentication implementations. The &lt;a href=&#34;https://github.com/thephpleague/oauth2-client&#34;&gt;&lt;code&gt;thephpleague/oauth2-client&lt;/code&gt;&lt;/a&gt; library will handle the OAuth2 flow for you and provide a usable token for querying the Graph.&lt;/p&gt; &#xA;&lt;p&gt;To authenticate as an application you can use the &lt;a href=&#34;http://docs.guzzlephp.org/en/stable/&#34;&gt;Guzzle HTTP client&lt;/a&gt;, which comes preinstalled with this library, for example like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$guzzle = new \GuzzleHttp\Client();&#xA;$url = &#39;https://login.microsoftonline.com/&#39; . $tenantId . &#39;/oauth2/v2.0/token&#39;;&#xA;$token = json_decode($guzzle-&amp;gt;post($url, [&#xA;    &#39;form_params&#39; =&amp;gt; [&#xA;        &#39;client_id&#39; =&amp;gt; $clientId,&#xA;        &#39;client_secret&#39; =&amp;gt; $clientSecret,&#xA;        &#39;scope&#39; =&amp;gt; &#39;https://graph.microsoft.com/.default&#39;,&#xA;        &#39;grant_type&#39; =&amp;gt; &#39;client_credentials&#39;,&#xA;    ],&#xA;])-&amp;gt;getBody()-&amp;gt;getContents());&#xA;$accessToken = $token-&amp;gt;access_token;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For an integrated example on how to use Oauth2 in a Laravel application and use the Graph, see the &lt;a href=&#34;https://github.com/microsoftgraph/php-connect-sample&#34;&gt;PHP Connect Sample&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Call Microsoft Graph using the v1.0 endpoint and models&lt;/h3&gt; &#xA;&lt;p&gt;The following is an example that shows how to call Microsoft Graph.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Microsoft\Graph\Graph;&#xA;use Microsoft\Graph\Model;&#xA;&#xA;class UsageExample&#xA;{&#xA;    public function run()&#xA;    {&#xA;        $accessToken = &#39;xxx&#39;;&#xA;&#xA;        $graph = new Graph();&#xA;        $graph-&amp;gt;setAccessToken($accessToken);&#xA;&#xA;        $user = $graph-&amp;gt;createRequest(&#34;GET&#34;, &#34;/me&#34;)&#xA;                      -&amp;gt;setReturnType(Model\User::class)&#xA;                      -&amp;gt;execute();&#xA;&#xA;        echo &#34;Hello, I am {$user-&amp;gt;getGivenName()}.&#34;;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Call Microsoft Graph using the beta endpoint and models&lt;/h3&gt; &#xA;&lt;p&gt;The following is an example that shows how to call Microsoft Graph.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Microsoft\Graph\Graph;&#xA;use Beta\Microsoft\Graph\Model as BetaModel;&#xA;&#xA;class UsageExample&#xA;{&#xA;    public function run()&#xA;    {&#xA;        $accessToken = &#39;xxx&#39;;&#xA;&#xA;        $graph = new Graph();&#xA;        $graph-&amp;gt;setAccessToken($accessToken);&#xA;&#xA;        $user = $graph-&amp;gt;setApiVersion(&#34;beta&#34;)&#xA;                      -&amp;gt;createRequest(&#34;GET&#34;, &#34;/me&#34;)&#xA;                      -&amp;gt;setReturnType(BetaModel\User::class)&#xA;                      -&amp;gt;execute();&#xA;&#xA;        echo &#34;Hello, I am $user-&amp;gt;getGivenName() &#34;;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Develop&lt;/h2&gt; &#xA;&lt;h3&gt;Debug&lt;/h3&gt; &#xA;&lt;p&gt;You can use the library with a proxy such as &lt;a href=&#34;http://www.telerik.com/fiddler&#34;&gt;Fiddler&lt;/a&gt; or &lt;a href=&#34;https://www.charlesproxy.com/&#34;&gt;Charles Proxy&lt;/a&gt; to debug requests and responses as they come across the wire. Set the proxy port on the Graph object like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$graph-&amp;gt;setProxyPort(&#34;localhost:8888&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, open your proxy client to view the requests &amp;amp; responses sent using the library.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/microsoftgraph/msgraph-sdk-php/raw/master/docs/images/Fiddler.PNG&#34; alt=&#34;Screenshot of Fiddler /me/sendmail request and response&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is especially helpful when the library does not return the results you expected to determine whether there are bugs in the API or this SDK. Therefore, you may be asked to provide this information when attempting to triage an issue you file.&lt;/p&gt; &#xA;&lt;h3&gt;Run Tests&lt;/h3&gt; &#xA;&lt;p&gt;Run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vendor/bin/phpunit --exclude-group functional&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;from the base directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;The set of functional tests are meant to be run against a test account. Currently, the tests to do not restore state of the account.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Debug tests on Windows&lt;/h4&gt; &#xA;&lt;p&gt;This SDK has an XDebug run configuration that attaches the debugger to VS Code so that you can debug tests.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=felixfbecker.php-debug&#34;&gt;PHP Debug&lt;/a&gt; extension into Visual Studio Code.&lt;/li&gt; &#xA; &lt;li&gt;From the root of this repo, using PowerShell, run &lt;code&gt;php .\tests\GetPhpInfo.php | clip&lt;/code&gt; from the repo root. This will copy PHP configuration information into the clipboard which we will use in the next step.&lt;/li&gt; &#xA; &lt;li&gt;Paste your clipboard into the &lt;a href=&#34;https://xdebug.org/wizard&#34;&gt;XDebug Installation Wizard&lt;/a&gt; and select &lt;strong&gt;Analyse my phpinfo() output&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Follow the generated instructions for installing XDebug. Note that the &lt;code&gt;/ext&lt;/code&gt; directory is located in your PHP directory.&lt;/li&gt; &#xA; &lt;li&gt;Add the following info to your php.ini file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;[XDebug]&#xA;xdebug.remote_enable = 1&#xA;xdebug.remote_autostart = 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can hit a Visual Studio Code breakpoint in a test. Try this:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add a breakpoint to &lt;code&gt;testGetCalendarView&lt;/code&gt; in &lt;em&gt;.\tests\Functional\EventTest.php&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run the &lt;strong&gt;Listen for XDebug&lt;/strong&gt; configuration in VS Code.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;.\vendor\bin\phpunit --filter testGetCalendarView&lt;/code&gt; from the PowerShell terminal to run the test and hit the breakpoint.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Documentation and resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoftgraph/msgraph-sdk-php/dev/docs/index.html&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoftgraph/msgraph-sdk-php/dev/docs/Examples.md&#34;&gt;Examples&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.microsoft.com/en-us/graph/&#34;&gt;Microsoft Graph website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;View or log issues on the &lt;a href=&#34;https://github.com/microsoftgraph/msgraph-sdk-php/issues&#34;&gt;Issues&lt;/a&gt; tab in the repo.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://raw.githubusercontent.com/microsoftgraph/msgraph-sdk-php/dev/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; guidelines carefully for advice on how to contribute to this repo.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright and license&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Microsoft Corporation. All Rights Reserved. Licensed under the MIT &lt;a href=&#34;https://raw.githubusercontent.com/microsoftgraph/msgraph-sdk-php/dev/LICENSE&#34;&gt;license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kevinpapst/kimai2</title>
    <updated>2022-09-16T01:38:39Z</updated>
    <id>tag:github.com,2022-09-16:/kevinpapst/kimai2</id>
    <link href="https://github.com/kevinpapst/kimai2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kimai v2 is a web-based multiuser time-tracking application. Free for everyone: freelancers, agencies, companies, organizations - all can track their times, generate invoices and more. SaaS version available at https://www.kimai.cloud&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kimai/images/master/repository-header.png&#34; alt=&#34;Kimai logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/kevinpapst/kimai2/actions&#34;&gt;&lt;img alt=&#34;CI Status&#34; src=&#34;https://github.com/kevinpapst/kimai2/workflows/CI/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/kevinpapst/kimai2&#34;&gt;&lt;img alt=&#34;Code Coverage&#34; src=&#34;https://codecov.io/gh/kevinpapst/kimai2/branch/master/graph/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/kevinpapst/kimai2&#34;&gt;&lt;img alt=&#34;Latest stable version&#34; src=&#34;https://poser.pugx.org/kevinpapst/kimai2/v/stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/kevinpapst/kimai2&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://poser.pugx.org/kevinpapst/kimai2/license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/kimai_org&#34;&gt;&lt;img alt=&#34;Twitter&#34; src=&#34;https://img.shields.io/badge/follow-%40kimai__org-00acee&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Kimai - time-tracker&lt;/h1&gt; &#xA;&lt;p&gt;Kimai is a free, open source and online time-tracking software designed for small businesses and freelancers. It is built with modern technologies such as &lt;a href=&#34;https://github.com/symfony/symfony&#34;&gt;Symfony&lt;/a&gt;, &lt;a href=&#34;https://github.com/twbs/bootstrap&#34;&gt;Bootstrap&lt;/a&gt;, &lt;a href=&#34;https://github.com/FriendsOfSymfony/FOSRestBundle&#34;&gt;RESTful API&lt;/a&gt;, &lt;a href=&#34;https://github.com/doctrine/&#34;&gt;Doctrine&lt;/a&gt;, &lt;a href=&#34;https://github.com/kevinpapst/AdminLTEBundle/&#34;&gt;AdminLTE&lt;/a&gt;, &lt;a href=&#34;https://github.com/webpack/webpack&#34;&gt;Webpack&lt;/a&gt;, ES6 and &lt;a href=&#34;https://raw.githubusercontent.com/kevinpapst/kimai2/master/composer.json&#34;&gt;many&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/kevinpapst/kimai2/master/package.json&#34;&gt;more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kimai.org&#34;&gt;Home&lt;/a&gt; - Kimai project homepage&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kimai.org/blog/&#34;&gt;Blog&lt;/a&gt; - Read the latest news&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kimai.org/documentation/&#34;&gt;Documentation&lt;/a&gt; - Learn how to use Kimai&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hosted.weblate.org/projects/kimai/#languages&#34;&gt;Translations&lt;/a&gt; - Kimai in your language&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kimai.org/documentation/migration-v1.html&#34;&gt;Migration&lt;/a&gt; - Import data from Kimai 1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP 7.4, 8.0 or 8.1&lt;/li&gt; &#xA; &lt;li&gt;MariaDB or MySQL&lt;/li&gt; &#xA; &lt;li&gt;A webserver and subdomain&lt;/li&gt; &#xA; &lt;li&gt;PHP extensions: &lt;code&gt;gd&lt;/code&gt;, &lt;code&gt;intl&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;mbstring&lt;/code&gt;, &lt;code&gt;pdo&lt;/code&gt;, &lt;code&gt;xsl&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;About&lt;/h3&gt; &#xA;&lt;p&gt;The evolution of the most known(?) open source project time-tracker Kimai. It is stable, production ready and ships with many advanced features, including but not limited to:&lt;/p&gt; &#xA;&lt;p&gt;JSON API, invoicing, data exports, multi-timer and punch-in punch-out mode, tagging, multi-user and multi-timezones, authentication via SAML/LDAP/Database, customizable role and team permissions, responsive and ready for your mobile device, user/customer/project specific rates, advanced search &amp;amp; filtering, money and time budgets, reporting, support for plugins and so many more.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kimai.org/documentation/installation.html#recommended-setup&#34;&gt;Recommended setup&lt;/a&gt; - with Git and Composer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kimai.org/documentation/docker.html&#34;&gt;Docker&lt;/a&gt; - containerized&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kimai.org/documentation/installation.html#development-installation&#34;&gt;Development&lt;/a&gt; - on your local machine&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kimai.org/documentation/installation.html#hosting-and-1-click-installations&#34;&gt;1-click installer&lt;/a&gt; - hosted environments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Updating Kimai&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kimai.org/documentation/updates.html&#34;&gt;Update Kimai&lt;/a&gt; - get the latest version&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinpapst/kimai2/master/UPGRADING.md&#34;&gt;UPGRADING guide&lt;/a&gt; - version specific steps&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Plugins&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kimai.org/store/&#34;&gt;Plugin marketplace&lt;/a&gt; - find existing plugins here&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kimai.org/documentation/developers.html&#34;&gt;Developer documentation&lt;/a&gt; - how to create a plugin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap and releases&lt;/h2&gt; &#xA;&lt;p&gt;You can see a rough development roadmap in the &lt;a href=&#34;https://github.com/kevinpapst/kimai2/milestones&#34;&gt;Milestones&lt;/a&gt; sections. It is open for changes and input from the community, your &lt;a href=&#34;https://github.com/kevinpapst/kimai2/issues&#34;&gt;ideas and questions&lt;/a&gt; are welcome.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Kimai uses a rolling release concept for delivering updates. You don&#39;t have to wait for the next official release, upgrade it at any time from the master branch, which is always deployable - release tags are simple snapshots of the development version.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Release versions will be created on a regular base (approx. one release every 2 months). Every code change, whether it&#39;s a new feature or a bugfix, will be done on the master branch. Kimai is actively developed in my spare time, I put my effort into the software instead of backporting changes.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You want to contribute to this repository? This is so great! The best way to start is to &lt;a href=&#34;https://github.com/kevinpapst/kimai2/issues&#34;&gt;open a new issue&lt;/a&gt; for bugs or feature requests or a &lt;a href=&#34;https://github.com/kevinpapst/kimai2/discussions&#34;&gt;discussion&lt;/a&gt; for questions, support and such.&lt;/p&gt; &#xA;&lt;p&gt;In case you want to contribute, but you wouldn&#39;t know how, here are some suggestions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spread the word: More user means more people testing and contributing to Kimai - which in turn means better stability and more and better features. Please vote for Kimai on platforms like Slant, Product Hunt, Softpedia or AlternativeTo, you can tweet about it, share it on LinkedIn, reddit or any of your favorite social media platforms. Every bit helps!&lt;/li&gt; &#xA; &lt;li&gt;Answer questions: You know the answer to another user&#39;s problem? Share your knowledge!&lt;/li&gt; &#xA; &lt;li&gt;Make a feature request: Something can be done better? Something essential missing? Let us know!&lt;/li&gt; &#xA; &lt;li&gt;Report bugs&lt;/li&gt; &#xA; &lt;li&gt;You don&#39;t have to be programmer to help. The documentation and translation could use some love as well.&lt;/li&gt; &#xA; &lt;li&gt;Sponsor the project, free software still costs money&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There is one simple rule in our &#34;Code of conduct&#34;: Don&#39;t be an ass!&lt;/p&gt;</summary>
  </entry>
</feed>