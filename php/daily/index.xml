<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-26T01:34:10Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ahmedesa/laravel-api-tool-kit</title>
    <updated>2023-08-26T01:34:10Z</updated>
    <id>tag:github.com,2023-08-26:/ahmedesa/laravel-api-tool-kit</id>
    <link href="https://github.com/ahmedesa/laravel-api-tool-kit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Your all-in-one solution for building efficient APIs with Laravel.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&#xA; &lt;center&gt;&#xA;   Laravel API tool kit&#xA; &lt;/center&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ahmedesa/laravel-api-tool-kit/master/laravel-api-tool-kit.png&#34; style=&#34;width:70%;&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/essa/api-tool-kit&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/essa/api-tool-kit.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/ahmedesa/laravel-api-tool-kit/test.yml?label=tests&amp;amp;branch=master&#34; alt=&#34;Test Status&#34;&gt; &lt;a href=&#34;https://packagist.org/packages/essa/api-tool-kit&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/essa/api-tool-kit.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;In Progress&lt;/h2&gt; &#xA;&lt;p&gt;Adding Schema Support to API Generator&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How Schema Support Works (Upcoming Feature)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re working on enhancing the API Generator with schema support. This feature lets you define your database table structure directly from the command line, and it will generate factory model migrations, requests, and all specified data based on this schema:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan api:generate ModelName --schema=&#34;column1:string,column2:integer,column3:datetime&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ahmedesa/laravel-api-tool-kit/master/api-generator.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: The schema feature is inspired by the &lt;a href=&#34;https://github.com/laracasts/Laravel-5-Generators-Extended/tree/master&#34;&gt;Laravel 5 Generators Extended&lt;/a&gt; package.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Supercharge your API development with the API Toolkit, using standardized responses, dynamic pagination, advanced filtering, one-click full CRUD setup, logic clarity, media mastery, and crystal-clear enums. Let&#39;s elevate your development journey with high-performance APIs!&lt;/p&gt; &#xA;&lt;h2&gt;Why Choose the Laravel API Toolkit?&lt;/h2&gt; &#xA;&lt;h3&gt;Consistent Responses, Less Hassle&lt;/h3&gt; &#xA;&lt;p&gt;Crafting responses that clients can easily understand becomes a breeze. With the toolkit&#39;s standardized response formats, your communication is seamless, saving you time and effort.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$this-&amp;gt;responseSuccess(&#39;Car created successfully&#39;, $car);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pagination Done Right&lt;/h3&gt; &#xA;&lt;p&gt;Don&#39;t fuss over managing the number of results per page. The dynamic pagination feature adapts effortlessly to your needs, giving you control without complications.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$users = User::dynamicPaginate();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Simplified Filtering&lt;/h3&gt; &#xA;&lt;p&gt;Refine query results with simplicity. The powerful filtering system lets you filter, sort, search, and even include relationships with ease.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Car::useFilters()-&amp;gt;get();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Simplify API Setup with the API Generator&lt;/h3&gt; &#xA;&lt;p&gt;Say goodbye to manual file setup! The API Generator does the hard work for you by creating key files from migrations to controllers automatically. Just use one simple command to kickstart your API development.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php artisan api:generate ModelName --all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Logic Made Clear&lt;/h3&gt; &#xA;&lt;p&gt;Tackle complex business logic with Actions. These gems follow the command pattern, boosting readability and maintenance for your code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;app(CreateCar::class)-&amp;gt;execute($data);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Media? Handled.&lt;/h3&gt; &#xA;&lt;p&gt;Handle file uploads and deletions like a pro. The Media Helper streamlines media management, leaving you with clean and organized file handling.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$filePath = MediaHelper::uploadFile($file, $path);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Enums for Clarity&lt;/h3&gt; &#xA;&lt;p&gt;Say goodbye to hardcoded values. Enums replace them with meaningful constants, resulting in cleaner, more understandable code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;namespace App\Enums;&#xA;&#xA;class UserTypes extends Enum&#xA;{&#xA;    public const ADMIN = &#39;admin&#39;;&#xA;    public const STUDENT = &#39;student&#39;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Official Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Access our documentation to unlock the full potential of the Laravel API Toolkit:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ahmedesa.github.io/laravel-api-tool-kit-docs/&#34;&gt;Explore the Documentation&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>