<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-16T01:39:46Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mohammedmanssour/laravel-recurring-models</title>
    <updated>2023-05-16T01:39:46Z</updated>
    <id>tag:github.com,2023-05-16:/mohammedmanssour/laravel-recurring-models</id>
    <link href="https://github.com/mohammedmanssour/laravel-recurring-models" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The ultimate solution for adding recurring functionality to your Laravel Models!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Laravel Recurring Models&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/mohammedmanssour/laravel-recurring-models&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/mohammedmanssour/laravel-recurring-models.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mohammedmanssour/laravel-recurring-models/actions?query=workflow%3Arun-tests+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/mohammedmanssour/laravel-recurring-models/run-tests.yml?branch=master&amp;amp;label=tests&amp;amp;style=flat-square&#34; alt=&#34;GitHub Tests Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mohammedmanssour/laravel-recurring-models/actions?query=workflow%3A%22Fix+PHP+code+style+issues%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/mohammedmanssour/laravel-recurring-models/fix-php-code-style-issues.yml?branch=master&amp;amp;label=code%20style&amp;amp;style=flat-square&#34; alt=&#34;GitHub Code Style Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/mohammedmanssour/laravel-recurring-models&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/mohammedmanssour/laravel-recurring-models.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Introducing our Laravel Recurring package - the ultimate solution for adding recurring functionality to your Laravel Models! Whether you need simple daily, weekly, or every n days recurrence, or more complex patterns like repeating a model on the second Friday of every month, our package has got you covered. With a seamless integration into your Laravel application, you can easily manage and automate recurring tasks with just a few lines of code.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require mohammedmanssour/laravel-recurring-models&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can publish and run the migrations with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=&#34;recurring-models-migrations&#34;&#xA;php artisan migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Adding the recurring functionality to Models:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you models implements &lt;code&gt;Repeatable&lt;/code&gt; Contract.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use MohammedManssour\LaravelRecurringModels\Contracts\Repeatable as RepeatableContract;&#xA;&#xA;class Task extends Model implements RepeatableContract&#xA;{&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add the &lt;code&gt;Repeatable&lt;/code&gt; trait to your Model&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use MohammedManssour\LaravelRecurringModels\Contracts\Repeatable as RepeatableContract;&#xA;use MohammedManssour\LaravelRecurringModels\Concerns\Repeatable;&#xA;&#xA;class Task extends Model implements RepeatableContract&#xA;{&#xA;    use Repeatable;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Optionaly, customize Model base date.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;/**&#xA; * define the base date that we would use to calculate repetition start_at&#xA; */&#xA;public function repetitionBaseDate(): Carbon&#xA;{&#xA;    return $this-&amp;gt;created_at;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Model Recurring rules&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;Repeatable&lt;/code&gt; trait has &lt;code&gt;repeat&lt;/code&gt; method that will help you define the recurrence rules for the model.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;repeat&lt;/code&gt; method will return &lt;code&gt;Repeat&lt;/code&gt; helper class that has 4 methods: &lt;code&gt;daily&lt;/code&gt;, &lt;code&gt;everyNDays&lt;/code&gt;, &lt;code&gt;weekly&lt;/code&gt;, and &lt;code&gt;complex&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;1. Daily Recurrence&lt;/h4&gt; &#xA;&lt;p&gt;This will help you to create daily recurring rule for the model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$model-&amp;gt;repeat()-&amp;gt;daily()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The recurrence will start the next day based on the &lt;code&gt;repetitionBaseDate&lt;/code&gt; returned value.&lt;/p&gt; &#xA;&lt;h4&gt;2. Every N Days Recurrence&lt;/h4&gt; &#xA;&lt;p&gt;This will help you to create every N Days recurring rules for the model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$model-&amp;gt;repeat()-&amp;gt;everyNDays(days: 3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The recurrence will start after n=3 days based on the &lt;code&gt;repetitionBaseDate&lt;/code&gt; returned value.&lt;/p&gt; &#xA;&lt;h4&gt;3. Weekly Recurrence&lt;/h4&gt; &#xA;&lt;p&gt;This will help ypi create weekly recurrence rule for the model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$model-&amp;gt;repeat()-&amp;gt;weekly()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The recurrence will start after 7 days based on the &lt;code&gt;repetitionBaseDate&lt;/code&gt; returned value.&lt;/p&gt; &#xA;&lt;p&gt;You can specify the days of the recurrence using the &lt;code&gt;on&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$model-&amp;gt;repeat()-&amp;gt;weekly()-&amp;gt;on([&#39;sunday&#39;, &#39;monday&#39;, &#39;tuesday&#39;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. Complex Recurrence.&lt;/h4&gt; &#xA;&lt;p&gt;This will help you create complex recurrence rules for the task.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$model-&amp;gt;repeat()&#xA;    -&amp;gt;complex(&#xA;        year: &#39;*&#39;,&#xA;        month: &#39;*&#39;,&#xA;        day: &#39;*&#39;,&#xA;        week: &#39;*&#39;,&#xA;        weekday: &#39;*&#39;&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Examples&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Repeat model on the second friday of every month.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$model-&amp;gt;repeat()-&amp;gt;complex(week: 2, weekday: Carbon::FRIDAY)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Repeat model on the 15th day of every month.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$model-&amp;gt;repeat()-&amp;gt;complex(day: 15)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Model Scopes&lt;/h3&gt; &#xA;&lt;p&gt;use &lt;code&gt;whereOccurresOn&lt;/code&gt; scope to get models that occurres on a specific date.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Task::whereOccurresOn(Carbon::make(&#39;2023-05-01&#39;))-&amp;gt;get()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;use &lt;code&gt;whereOccurresBetween&lt;/code&gt; scope to get the models that occurres between two sepcific dates.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Task::whereOccurresBetweeb(Carbon::make(&#39;2023-05-01&#39;), Carbon::make(&#39;2023-05-30&#39;))-&amp;gt;get()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;1. End Recurrance&lt;/h4&gt; &#xA;&lt;p&gt;use &lt;code&gt;endsAt&lt;/code&gt; to end occurrance on a specific date&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$model-&amp;gt;repeat()-&amp;gt;daily()-&amp;gt;endsAt(&#xA;    Carbon::make(&#39;2023-06-01&#39;)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;use &lt;code&gt;endsAfter&lt;/code&gt; to end occurrance after n times.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$model-&amp;gt;repeat()-&amp;gt;daily()-&amp;gt;endsAfter($times);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Start Recurrance&lt;/h4&gt; &#xA;&lt;p&gt;use &lt;code&gt;startsAt&lt;/code&gt; method to start occurrance after a specific date.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$model-&amp;gt;repeat()-&amp;gt;daily()-&amp;gt;startsAt(&#xA;    Carbon::make()&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mohammedmanssour&#34;&gt;Mohammed Manssour&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/mohammedmanssour/laravel-recurring-models/master/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>