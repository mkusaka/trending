<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-29T01:35:03Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CodelyTV/php-ddd-example</title>
    <updated>2022-06-29T01:35:03Z</updated>
    <id>tag:github.com,2022-06-29:/CodelyTV/php-ddd-example</id>
    <link href="https://github.com/CodelyTV/php-ddd-example" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üêòüéØ Hexagonal Architecture + DDD + CQRS in PHP using Symfony 6&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://codely.com&#34;&gt; &lt;img alt=&#34;Codely logo&#34; src=&#34;https://user-images.githubusercontent.com/10558907/170513882-a09eee57-7765-4ca4-b2dd-3c2e061fdad0.png&#34; width=&#34;300px&#34; height=&#34;92px&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; üêòüéØ Hexagonal Architecture, DDD &amp;amp; CQRS in PHP &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/CodelyTV&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/CodelyTV-OS-green.svg?style=flat-square&#34; alt=&#34;codely.tv&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://pro.codely.tv&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/CodelyTV-PRO-black.svg?style=flat-square&#34; alt=&#34;CodelyTV Courses&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Symfony-5.0-purple.svg?style=flat-square&amp;amp;logo=symfony&#34; alt=&#34;Symfony 5.0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CodelyTV/php-ddd-example/actions&#34;&gt;&lt;img src=&#34;https://github.com/CodelyTV/php-ddd-example/workflows/CI/badge.svg?branch=master&#34; alt=&#34;CI pipeline status&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Example of a &lt;strong&gt;PHP application using Domain-Driven Design (DDD) and Command Query Responsibility Segregation (CQRS) principles&lt;/strong&gt; keeping the code as simple as possible. &lt;br&gt; &lt;br&gt; Take a look, play and have fun with this. &lt;a href=&#34;https://github.com/CodelyTV/php-ddd-example/stargazers&#34;&gt;Stars are welcome üòä&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=1kaP39W80zQ&#34;&gt;View Demo&lt;/a&gt; ¬∑ &lt;a href=&#34;https://github.com/CodelyTV/php-ddd-example/issues&#34;&gt;Report a bug&lt;/a&gt; ¬∑ &lt;a href=&#34;https://github.com/CodelyTV/php-ddd-example/issues&#34;&gt;Request a feature&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Environment Setup&lt;/h2&gt; &#xA;&lt;h3&gt;üê≥ Needed tools&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Install Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone this project: &lt;code&gt;git clone https://github.com/CodelyTV/php-ddd-example php-ddd-example&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Move to the project folder: &lt;code&gt;cd php-ddd-example&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;üõ†Ô∏è Environment configuration&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a local environment file (&lt;code&gt;cp .env .env.local&lt;/code&gt;) if you want to modify any parameter&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;üî• Application execution&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install all the dependencies and bring up the project with Docker executing: &lt;code&gt;make build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Then you&#39;ll have 3 apps available (2 APIs and 1 Frontend): &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/apps/mooc/backend&#34;&gt;Mooc Backend&lt;/a&gt;: &lt;a href=&#34;http://localhost:8030/health-check&#34;&gt;http://localhost:8030/health-check&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/apps/backoffice/backend&#34;&gt;Backoffice Backend&lt;/a&gt;: &lt;a href=&#34;http://localhost:8040/health-check&#34;&gt;http://localhost:8040/health-check&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/apps/backoffice/frontend&#34;&gt;Backoffice Frontend&lt;/a&gt;: &lt;a href=&#34;http://localhost:8041/health-check&#34;&gt;http://localhost:8041/health-check&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;‚úÖ Tests execution&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the dependencies if you haven&#39;t done it previously: &lt;code&gt;make deps&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Execute PHPUnit and Behat tests: &lt;code&gt;make test&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üë©‚Äçüíª Project explanation&lt;/h2&gt; &#xA;&lt;p&gt;This project tries to be a MOOC (Massive Open Online Course) platform. It&#39;s decoupled from any framework, but it has some Symfony and Laravel implementations.&lt;/p&gt; &#xA;&lt;h3&gt;‚õ±Ô∏è Bounded Contexts&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/src/Mooc&#34;&gt;Mooc&lt;/a&gt;: Place to look in if you wanna see some code üôÇ. Massive Open Online Courses public platform with users, videos, notifications, and so on.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/src/Backoffice&#34;&gt;Backoffice&lt;/a&gt;: Here you&#39;ll find the use cases needed by the Customer Support department in order to manage users, courses, videos, and so on.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üéØ Hexagonal Architecture&lt;/h3&gt; &#xA;&lt;p&gt;This repository follows the Hexagonal Architecture pattern. Also, it&#39;s structured using &lt;code&gt;modules&lt;/code&gt;. With this, we can see that the current structure of a Bounded Context is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;$ tree -L 4 src&#xA;&#xA;src&#xA;|-- Mooc // Company subdomain / Bounded Context: Features related to one of the company business lines / products&#xA;|   `-- Videos // Some Module inside the Mooc context&#xA;|       |-- Application&#xA;|       |   |-- Create // Inside the application layer all is structured by actions&#xA;|       |   |   |-- CreateVideoCommand.php&#xA;|       |   |   |-- CreateVideoCommandHandler.php&#xA;|       |   |   `-- VideoCreator.php&#xA;|       |   |-- Find&#xA;|       |   |-- Trim&#xA;|       |   `-- Update&#xA;|       |-- Domain&#xA;|       |   |-- Video.php // The Aggregate of the Module&#xA;|       |   |-- VideoCreatedDomainEvent.php // A Domain Event&#xA;|       |   |-- VideoFinder.php&#xA;|       |   |-- VideoId.php&#xA;|       |   |-- VideoNotFound.php&#xA;|       |   |-- VideoRepository.php // The `Interface` of the repository is inside Domain&#xA;|       |   |-- VideoTitle.php&#xA;|       |   |-- VideoType.php&#xA;|       |   |-- VideoUrl.php&#xA;|       |   `-- Videos.php // A collection of our Aggregate&#xA;|       `-- Infrastructure // The infrastructure of our module&#xA;|           |-- DependencyInjection&#xA;|           `-- Persistence&#xA;|               `--MySqlVideoRepository.php // An implementation of the repository&#xA;`-- Shared // Shared Kernel: Common infrastructure and domain shared between the different Bounded Contexts&#xA;    |-- Domain&#xA;    `-- Infrastructure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Repository pattern&lt;/h4&gt; &#xA;&lt;p&gt;Our repositories try to be as simple as possible usually only containing 2 methods &lt;code&gt;search&lt;/code&gt; and &lt;code&gt;save&lt;/code&gt;. If we need some query with more filters we use the &lt;code&gt;Specification&lt;/code&gt; pattern also known as &lt;code&gt;Criteria&lt;/code&gt; pattern. So we add a &lt;code&gt;searchByCriteria&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;p&gt;You can see an example &lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/src/Mooc/Courses/Domain/CourseRepository.php&#34;&gt;here&lt;/a&gt; and its implementation &lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/src/Mooc/Courses/Infrastructure/Persistence/DoctrineCourseRepository.php&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Aggregates&lt;/h3&gt; &#xA;&lt;p&gt;You can see an example of an aggregate &lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/src/Mooc/Courses/Domain/Course.php&#34;&gt;here&lt;/a&gt;. All aggregates should extend the &lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/src/Shared/Domain/Aggregate/AggregateRoot.php&#34;&gt;AggregateRoot&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Command Bus&lt;/h3&gt; &#xA;&lt;p&gt;There is 1 implementations of the &lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/src/Shared/Domain/Bus/Command/CommandBus.php&#34;&gt;command bus&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/src/Shared/Infrastructure/Bus/Command/InMemorySymfonyCommandBus.php&#34;&gt;Sync&lt;/a&gt; using the Symfony Message Bus&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Query Bus&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/src/Shared/Infrastructure/Bus/Query/InMemorySymfonyQueryBus.php&#34;&gt;Query Bus&lt;/a&gt; uses the Symfony Message Bus.&lt;/p&gt; &#xA;&lt;h3&gt;Event Bus&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/src/Shared/Infrastructure/Bus/Event/InMemory/InMemorySymfonyEventBus.php&#34;&gt;Event Bus&lt;/a&gt; uses the Symfony Message Bus. The &lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/src/Shared/Infrastructure/Bus/Event/MySql/MySqlDoctrineEventBus.php&#34;&gt;MySql Bus&lt;/a&gt; uses a MySql+Pulling as a bus. The &lt;a href=&#34;https://raw.githubusercontent.com/CodelyTV/php-ddd-example/main/src/Shared/Infrastructure/Bus/Event/RabbitMq/RabbitMqEventBus.php&#34;&gt;RabbitMQ Bus&lt;/a&gt; uses RabbitMQ C extension.&lt;/p&gt; &#xA;&lt;h2&gt;üì± Monitoring&lt;/h2&gt; &#xA;&lt;p&gt;Every time a domain event is published it&#39;s exported to Prometheus. You can access to the Prometheus panel &lt;a href=&#34;http://localhost:9999/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ü§î Contributing&lt;/h2&gt; &#xA;&lt;p&gt;There are some things missing (add swagger, improve documentation...), feel free to add this if you want! If you want some guidelines feel free to contact us :)&lt;/p&gt; &#xA;&lt;h2&gt;ü§© Extra&lt;/h2&gt; &#xA;&lt;p&gt;This code was shown in the &lt;a href=&#34;http://codely.tv/screencasts/codigo-acoplado-framework-microservicios-ddd&#34;&gt;From framework coupled code to #microservices through #DDD&lt;/a&gt; talk and doubts where answered in the &lt;a href=&#34;http://codely.tv/screencasts/ddd-cqrs-preguntas-frecuentes/&#34;&gt;DDD y CQRS: Preguntas Frecuentes&lt;/a&gt; video.&lt;/p&gt; &#xA;&lt;p&gt;üé• Used in the CodelyTV Pro courses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pro.codely.tv/library/ddd-en-php/about/&#34;&gt;üá™üá∏ DDD in PHP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pro.codely.tv/library/arquitectura-hexagonal/66748/about/&#34;&gt;üá™üá∏ Arquitectura Hexagonal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pro.codely.tv/library/cqrs-command-query-responsibility-segregation-3719e4aa/62554/about/&#34;&gt;üá™üá∏ CQRS: Command Query Responsibility Segregation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pro.codely.tv/library/comunicacion-entre-microservicios-event-driven-architecture/74823/about/&#34;&gt;üá™üá∏ Comunicaci√≥n entre microservicios: Event-Driven Architecture&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Intervention/image</title>
    <updated>2022-06-29T01:35:03Z</updated>
    <id>tag:github.com,2022-06-29:/Intervention/image</id>
    <link href="https://github.com/Intervention/image" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PHP Image Manipulation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Intervention Image&lt;/h1&gt; &#xA;&lt;p&gt;Intervention Image is a &lt;strong&gt;PHP image handling and manipulation&lt;/strong&gt; library providing an easier and expressive way to create, edit, and compose images. The package includes ServiceProviders and Facades for easy &lt;strong&gt;Laravel&lt;/strong&gt; integration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/intervention/image&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/intervention/image.svg?sanitize=true&#34; alt=&#34;Latest Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/Intervention/image&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Intervention/image.png?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/intervention/image/stats&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dm/intervention/image.svg?sanitize=true&#34; alt=&#34;Monthly Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP &amp;gt;=5.4&lt;/li&gt; &#xA; &lt;li&gt;Fileinfo Extension&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Image Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GD Library (&amp;gt;=2.0)&lt;/li&gt; &#xA; &lt;li&gt;Imagick PHP extension (&amp;gt;=6.5.7)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://image.intervention.io/v2/introduction/installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://image.intervention.io/v2/introduction/installation#integration-in-laravel&#34;&gt;Laravel Framework Integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://image.intervention.io/v2/usage/overview#basic-usage&#34;&gt;Basic Usage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// open an image file&#xA;$img = Image::make(&#39;public/foo.jpg&#39;);&#xA;&#xA;// resize image instance&#xA;$img-&amp;gt;resize(320, 240);&#xA;&#xA;// insert a watermark&#xA;$img-&amp;gt;insert(&#39;public/watermark.png&#39;);&#xA;&#xA;// save image in desired format&#xA;$img-&amp;gt;save(&#39;public/bar.jpg&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;http://image.intervention.io/&#34;&gt;official documentation&lt;/a&gt; to learn more about Intervention Image.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to the Intervention Image library are welcome. Please note the following guidelines before submitting your pull request.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;http://www.php-fig.org/psr/psr-2/&#34;&gt;PSR-2&lt;/a&gt; coding standards.&lt;/li&gt; &#xA; &lt;li&gt;Write tests for new functions and added features&lt;/li&gt; &#xA; &lt;li&gt;API calls should work consistently with both GD and Imagick drivers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Intervention Image is licensed under the &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Copyright 2017 &lt;a href=&#34;http://olivervogel.com/&#34;&gt;Oliver Vogel&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>easychen/howto-make-more-money</title>
    <updated>2022-06-29T01:35:03Z</updated>
    <id>tag:github.com,2022-06-29:/easychen/howto-make-more-money</id>
    <link href="https://github.com/easychen/howto-make-more-money" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Á®ãÂ∫èÂëòÂ¶Ç‰Ωï‰ºòÈõÖÁöÑÊå£Èõ∂Ëä±Èí±Ôºå2.0ÁâàÔºåÂçáÁ∫ß‰∏∫Â∞è‰π¶‰∫Ü„ÄÇMost of this not work outside China , so no English translate&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Á®ãÂ∫èÂëòÂ¶Ç‰Ωï‰ºòÈõÖÁöÑÊå£Èõ∂Ëä±Èí±Ôºü&lt;/h1&gt; &#xA;&lt;p&gt;the repo is not applicable to foreigners&lt;/p&gt; &#xA;&lt;p&gt;Êú¨Á≥ªÂàóÊñáÁ´†‰ºöÊåÅÁª≠Êõ¥Êñ∞ÔºåÂæÆ‰ø°Êâ´Á†ÅËÆ¢ÈòÖ‰∏ªÈ¢òÔºåÂèØÁ¨¨‰∏ÄÊó∂Èó¥Ëé∑ÂèñÊõ¥Êñ∞‰ø°ÊÅØ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/easychen/howto-make-more-money/master/qrcode.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/easychen/howto-make-more-money/master/cover.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/easychen/howto-make-more-money/master/mindmap.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Êñ∞Â¢ûÔºöÁΩëËØæÂà∂‰ΩúÊÄùÁª¥ÂØºÂõæ &lt;a href=&#34;https://share.weiyun.com/78SWCYli&#34;&gt;È´òÊ∏ÖPDF‰∏ãËΩΩ&lt;/a&gt; &lt;a href=&#34;http://next.ftqq.com/18&#34;&gt;ËßÜÈ¢ëËØæÁ®ã&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/easychen/howto-make-more-money/master/class.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÂÖ≥Ê≥®‰ΩúËÄÖÔºö &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ÂæÆÂçö(‰∏ªË¶Å‰∏∫ÊäÄÊúØÂàÜ‰∫´):&lt;a href=&#34;https://weibo.com/easy&#34;&gt;@Easy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;TwitterÔºà‰∏ªË¶ÅËΩ¨ÂèëÂ¶πÂ≠êÂíåÁå´ÔºâÔºö&lt;a href=&#34;https://twitter.com/easychen/&#34;&gt;Easychen&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Ê∫êÊñá‰ª∂Ôºö&lt;a href=&#34;https://github.com/easychen/howto-make-more-money/&#34;&gt;GitHub Repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ÂÖçË¥πÂú®Á∫øÈòÖËØªÂÆåÊï¥ÁâàÔºö&lt;a href=&#34;https://easychen.github.io/howto-make-more-money/&#34;&gt;github.ioÈïúÂÉè&lt;/a&gt; &lt;a href=&#34;https://howto-make-more-money.easychen.vercel.app/&#34;&gt;vercelÈïúÂÉè&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;È´òÊ∏ÖÊÄùÁª¥ÂØºÂõæÂíåPDFÁîµÂ≠ê‰π¶‰∏ãËΩΩÔºöÂÖ≥Ê≥®ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑„Äå‰∏çËÅäÊäÄÊúØ„Äç(nonocode)ÔºåÂèëÈÄÅ„ÄåÈõ∂Ëä±Èí±„ÄçËé∑Âèñ‰∏ãËΩΩÈìæÊé•„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†ËßâÂæóËøôÊú¨Â∞è‰π¶ÂØπ‰Ω†ÊúâÊâÄÂ∏ÆÂä©ÁöÑËØùÔºåËØ∑ÂàÜ‰∫´ÁªôË∫´ËæπÁöÑÁ®ãÂ∫èÂëòÔºåË∞¢Ë∞¢„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Êõ¥Êñ∞Êó•Âøó&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2020/10/17ÔºöÊñ∞Â¢ûÁΩëËØæÂà∂‰ΩúÊÄùÁª¥ÂØºÂõæ&lt;/li&gt; &#xA; &lt;li&gt;2020/08/27Ôºö‰øÆÊ≠£ËµÑ‰∫ßËØÑÂàÜÊ†áÂáÜÔºåÊõ¥Êñ∞ÁΩëÊòì‰∫ëËØæÂ†ÇÂàÜÊàêÊØî‰æãÁöÑ‰ø°ÊÅØ„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;2020/04/07ÔºöÂÖ®Èù¢ÈáçÂÜô‰∏∫‰∏ÄÊú¨Â∞è‰π¶„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>