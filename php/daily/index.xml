<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-18T01:37:12Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fhmynwa/threecroot</title>
    <updated>2022-10-18T01:37:12Z</updated>
    <id>tag:github.com,2022-10-18:/fhmynwa/threecroot</id>
    <link href="https://github.com/fhmynwa/threecroot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tembak kuota three&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;threecroot&lt;/h1&gt; &#xA;&lt;p&gt;Tembak kuota three Gasbor&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>amphp/amp</title>
    <updated>2022-10-18T01:37:12Z</updated>
    <id>tag:github.com,2022-10-18:/amphp/amp</id>
    <link href="https://github.com/amphp/amp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A non-blocking concurrency framework for PHP applications. üêò&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://amphp.org/&#34;&gt; &lt;img src=&#34;https://github.com/amphp/logo/raw/master/repos/amp-logo-with-margin.png?raw=true&#34; width=&#34;250&#34; align=&#34;right&#34; alt=&#34;Amp Logo&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://amphp.org/&#34;&gt;&lt;img alt=&#34;Amp&#34; src=&#34;https://github.com/amphp/logo/raw/master/repos/amp-text.png?raw=true&#34; width=&#34;100&#34; valign=&#34;middle&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Amp is a non-blocking concurrency framework for PHP. It provides an event loop, promises and streams as a base for asynchronous programming.&lt;/p&gt; &#xA;&lt;p&gt;Promises in combination with generators are used to build coroutines, which allow writing asynchronous code just like synchronous code, without any callbacks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/amphp/amp/master/blob/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&#34; valign=&#34;middle&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;Traditionally, PHP has a synchronous execution flow, doing one thing at a time. If you query a database, you send the query and wait for the response from the database server in a blocking manner. Once you have the response, you can start doing the next thing.&lt;/p&gt; &#xA;&lt;p&gt;Instead of sitting there and doing nothing while waiting, we could already send the next database query, or do an HTTP call to an API.&lt;/p&gt; &#xA;&lt;p&gt;Making use of the time we usually spend on waiting for I/O can speed up the total execution time. The following diagram shows the execution flow with dependencies between the different tasks, once executed sequentially and once concurrently.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/amphp/amp/master/docs/images/sequential-vs-concurrent.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Amp allows such concurrent I/O operations while keeping the cognitive load low by avoiding callbacks. Instead, the results of asynchronous operations can be awaited using &lt;code&gt;yield&lt;/code&gt; resulting in code which is structured like traditional blocking I/O code while the actual execution flow is handled by Amp.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This package can be installed as a &lt;a href=&#34;https://getcomposer.org/&#34;&gt;Composer&lt;/a&gt; dependency.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require amphp/amp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This installs the basic building blocks for asynchronous applications in PHP. We offer a lot of repositories building on top of this repository, e.g.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amphp/byte-stream&#34;&gt;&lt;code&gt;amphp/byte-stream&lt;/code&gt;&lt;/a&gt; providing a stream abstraction&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amphp/socket&#34;&gt;&lt;code&gt;amphp/socket&lt;/code&gt;&lt;/a&gt; providing a socket layer for UDP and TCP including TLS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amphp/parallel&#34;&gt;&lt;code&gt;amphp/parallel&lt;/code&gt;&lt;/a&gt; providing parallel processing to utilize multiple CPU cores and offload blocking operations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amphp/http-client&#34;&gt;&lt;code&gt;amphp/http-client&lt;/code&gt;&lt;/a&gt; providing an HTTP/1.1 and HTTP/2 client&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amphp/http-server&#34;&gt;&lt;code&gt;amphp/http-server&lt;/code&gt;&lt;/a&gt; providing an HTTP/1.1 and HTTP/2 application server&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amphp/mysql&#34;&gt;&lt;code&gt;amphp/mysql&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/amphp/postgres&#34;&gt;&lt;code&gt;amphp/postgres&lt;/code&gt;&lt;/a&gt; for non-blocking database access&lt;/li&gt; &#xA; &lt;li&gt;and &lt;a href=&#34;https://github.com/amphp?type=source&#34;&gt;many more packages&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation can be found on &lt;a href=&#34;https://amphp.org/&#34;&gt;amphp.org&lt;/a&gt; as well as in the &lt;a href=&#34;https://raw.githubusercontent.com/amphp/amp/master/docs&#34;&gt;&lt;code&gt;./docs&lt;/code&gt;&lt;/a&gt; directory. Each package has its own &lt;code&gt;./docs&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;This package requires PHP 7.0 or later. Many of the other packages raised their requirement to PHP 7.1. No extensions required!&lt;/p&gt; &#xA;&lt;h5&gt;Optional Extensions&lt;/h5&gt; &#xA;&lt;p&gt;Extensions are only needed if your app necessitates a high number of concurrent socket connections, usually this limit is configured up to 1024 file descriptors.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pecl.php.net/package/ev&#34;&gt;&lt;code&gt;ev&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pecl.php.net/package/event&#34;&gt;&lt;code&gt;event&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bwoebi/php-uv&#34;&gt;&lt;code&gt;uv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Examples can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/amphp/amp/master/examples&#34;&gt;&lt;code&gt;./examples&lt;/code&gt;&lt;/a&gt; directory of this repository as well as in the &lt;code&gt;./examples&lt;/code&gt; directory of &lt;a href=&#34;https://github.com/amphp?utf8=%E2%9C%93&amp;amp;q=&amp;amp;type=public&amp;amp;language=php&#34;&gt;our other libraries&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;amphp/amp&lt;/code&gt; follows the &lt;a href=&#34;http://semver.org/&#34;&gt;semver&lt;/a&gt; semantic versioning specification like all other &lt;code&gt;amphp&lt;/code&gt; packages.&lt;/p&gt; &#xA;&lt;h5&gt;2.x&lt;/h5&gt; &#xA;&lt;p&gt;Supported. We don&#39;t have plans to release v3, yet.&lt;/p&gt; &#xA;&lt;h5&gt;1.x&lt;/h5&gt; &#xA;&lt;p&gt;No longer supported. We stopped providing bug fixes 2017-12-31 and stopped providing security fixes 2018-12-31.&lt;/p&gt; &#xA;&lt;h2&gt;Compatible Packages&lt;/h2&gt; &#xA;&lt;p&gt;Compatible packages should use the &lt;a href=&#34;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=topic%3Aamphp&#34;&gt;&lt;code&gt;amphp&lt;/code&gt;&lt;/a&gt; topic on GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you discover any security related issues, please email &lt;a href=&#34;mailto:me@kelunik.com&#34;&gt;&lt;code&gt;me@kelunik.com&lt;/code&gt;&lt;/a&gt; instead of using the issue tracker.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/amphp/amp/master/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>