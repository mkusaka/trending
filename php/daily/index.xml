<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-08T01:34:46Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Setasign/FPDI</title>
    <updated>2025-08-08T01:34:46Z</updated>
    <id>tag:github.com,2025-08-08:/Setasign/FPDI</id>
    <link href="https://github.com/Setasign/FPDI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FPDI is a collection of PHP classes facilitating developers to read pages from existing PDF documents and use them as templates in FPDF.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FPDI - Free PDF Document Importer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/setasign/fpdi&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/setasign/fpdi/v/stable.svg?sanitize=true&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/setasign/fpdi&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/setasign/fpdi/downloads.svg?sanitize=true&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/setasign/fpdi&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/setasign/fpdi/license.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;❗&lt;/span&gt; This document refers to FPDI 2. Version 1 is deprecated and development is discontinued. &lt;span&gt;❗&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;FPDI is a collection of PHP classes facilitating developers to read pages from existing PDF documents and use them as templates in &lt;a href=&#34;http://www.fpdf.org&#34;&gt;FPDF&lt;/a&gt;, which was developed by Olivier Plathey. Apart from a copy of &lt;a href=&#34;http://www.fpdf.org&#34;&gt;FPDF&lt;/a&gt;, FPDI does not require any special PHP extensions.&lt;/p&gt; &#xA;&lt;p&gt;FPDI can also be used as an extension for &lt;a href=&#34;https://github.com/tecnickcom/TCPDF&#34;&gt;TCPDF&lt;/a&gt; or &lt;a href=&#34;http://fpdf.org/en/script/script92.php&#34;&gt;tFPDF&lt;/a&gt;, too.&lt;/p&gt; &#xA;&lt;h2&gt;Installation with &lt;a href=&#34;https://packagist.org/packages/setasign/fpdi&#34;&gt;Composer&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Because FPDI can be used with FPDF, TCPDF or tFPDF we haven&#39;t added a fixed dependency in the main composer.json file. You need to add the dependency to the PDF generation library of your choice yourself.&lt;/p&gt; &#xA;&lt;p&gt;To use FPDI with FPDF include following in your composer.json file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;require&#34;: {&#xA;        &#34;setasign/fpdf&#34;: &#34;1.8.*&#34;,&#xA;        &#34;setasign/fpdi&#34;: &#34;^2.5&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use TCPDF, you have to update your composer.json to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;require&#34;: {&#xA;        &#34;tecnickcom/tcpdf&#34;: &#34;6.6.*&#34;,&#xA;        &#34;setasign/fpdi&#34;: &#34;^2.5&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use tFPDF, you have to update your composer.json to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;require&#34;: {&#xA;        &#34;setasign/tfpdf&#34;: &#34;1.33.*&#34;,&#xA;        &#34;setasign/fpdi&#34;: &#34;^2.3&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manual Installation&lt;/h2&gt; &#xA;&lt;p&gt;If you do not use composer, just require the autoload.php in the /src folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;require_once(&#39;src/autoload.php&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have a PSR-4 autoloader implemented, just register the src path as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$loader = new \Example\Psr4AutoloaderClass;&#xA;$loader-&amp;gt;register();&#xA;$loader-&amp;gt;addNamespace(&#39;setasign\Fpdi&#39;, &#39;path/to/src/&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changes to Version 1&lt;/h2&gt; &#xA;&lt;p&gt;Version 2 is a complete rewrite from scratch of FPDI which comes with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Namespaced code&lt;/li&gt; &#xA; &lt;li&gt;Clean and up-to-date code base and style&lt;/li&gt; &#xA; &lt;li&gt;PSR-4 compatible autoloading&lt;/li&gt; &#xA; &lt;li&gt;Performance improvements by up to 100%&lt;/li&gt; &#xA; &lt;li&gt;Less memory consumption&lt;/li&gt; &#xA; &lt;li&gt;Native support for reading PDFs from strings or stream-resources&lt;/li&gt; &#xA; &lt;li&gt;Support for documents with &#34;invalid&#34; data before their file-header&lt;/li&gt; &#xA; &lt;li&gt;Optimized page tree resolving&lt;/li&gt; &#xA; &lt;li&gt;Usage of individual exceptions&lt;/li&gt; &#xA; &lt;li&gt;Several test types (unit, functional and visual tests)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We tried to keep the main methods and logical workflow the same as in version 1 but please notice that there were incompatible changes which you should consider when updating to version 2:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to load the code using the &lt;code&gt;src/autoload.php&lt;/code&gt; file instead of &lt;code&gt;classes/FPDI.php&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The classes and traits are namespaced now: &lt;code&gt;setasign\Fpdi&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Page boundaries beginning with a slash, such as &lt;code&gt;/MediaBox&lt;/code&gt;, are not supported anymore. Remove the slash or use a constant of &lt;code&gt;PdfReader\PageBoundaries&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The parameters $x, $y, $width and $height of the &lt;code&gt;useTemplate()&lt;/code&gt; or &lt;code&gt;getTemplateSize()&lt;/code&gt; method have more logical correct default values now. Passing &lt;code&gt;0&lt;/code&gt; as width or height will result in an &lt;code&gt;InvalidArgumentException&lt;/code&gt; now.&lt;/li&gt; &#xA; &lt;li&gt;The return value of &lt;code&gt;getTemplateSize()&lt;/code&gt; had changed to an array with more speaking keys and reusability: Use &lt;code&gt;width&lt;/code&gt; instead of &lt;code&gt;w&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; instead of &lt;code&gt;h&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you want to use &lt;strong&gt;FPDI with TCPDF&lt;/strong&gt; you need to refactor your code to use the class &lt;code&gt;Tcpdf\Fpdi&lt;/code&gt; (since 2.1; before it was &lt;code&gt;TcpdfFpdi&lt;/code&gt;) instead of &lt;code&gt;FPDI&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example and Documentation&lt;/h2&gt; &#xA;&lt;p&gt;A simple example, that imports a single page and places this onto a new created page:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;use setasign\Fpdi\Fpdi;&#xA;// or for usage with TCPDF:&#xA;// use setasign\Fpdi\Tcpdf\Fpdi;&#xA;&#xA;// or for usage with tFPDF:&#xA;// use setasign\Fpdi\Tfpdf\Fpdi;&#xA;&#xA;// setup the autoload function&#xA;require_once(&#39;vendor/autoload.php&#39;);&#xA;&#xA;// initiate FPDI&#xA;$pdf = new Fpdi();&#xA;// add a page&#xA;$pdf-&amp;gt;AddPage();&#xA;// set the source file&#xA;$pdf-&amp;gt;setSourceFile(&#34;Fantastic-Speaker.pdf&#34;);&#xA;// import page 1&#xA;$tplId = $pdf-&amp;gt;importPage(1);&#xA;// use the imported page and place it at point 10,10 with a width of 100 mm&#xA;$pdf-&amp;gt;useTemplate($tplId, 10, 10, 100);&#xA;&#xA;$pdf-&amp;gt;Output();            &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A full end-user documentation and API reference is available &lt;a href=&#34;https://manuals.setasign.com/fpdi-manual/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>