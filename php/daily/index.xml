<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-20T01:28:43Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MrPunyapal/basic-crud</title>
    <updated>2023-12-20T01:28:43Z</updated>
    <id>tag:github.com,2023-12-20:/MrPunyapal/basic-crud</id>
    <link href="https://github.com/MrPunyapal/basic-crud" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Example of crud operations best practices for beginner&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CRUD Operations Best Practices Example for Beginners&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mr-punyapal/basic-crud/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/mr-punyapal/basic-crud/actions/workflows/tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started üöÄ&lt;/h2&gt; &#xA;&lt;p&gt;These instructions will guide you through setting up the project on your local machine for development and testing.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;You need to have installed the following software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP 8.2&lt;/li&gt; &#xA; &lt;li&gt;Composer 2.0.8&lt;/li&gt; &#xA; &lt;li&gt;MySQL 8.0.23&lt;/li&gt; &#xA; &lt;li&gt;Node 20.10.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;p&gt;Follow these steps to set up a development environment:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/mr-punyapal/basic-crud.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Duplicate the .env.example file and rename it to .env&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generate the application key&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan key:generate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run migration and seed&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan migrate --seed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the application&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan serve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to Test the Application üß™&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy .env.testing.example to .env.testing&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Update the database configuration according to your local environment&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new database for testing&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following commands&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan key:generate --env=testing&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install &amp;amp;&amp;amp; npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/pest --parallel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing with Sail&lt;/h3&gt; &#xA;&lt;p&gt;Laravel Sail is helpful when your local environment doesn&#39;t match with project requirements like different PHP versions. Only requirement is Docker to work with this project. For more details on Laravel Sail click &lt;a href=&#34;https://laravel.com/docs/10.x/sail&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Follow these steps to set up a development environment using Laravel Sail:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/mr-punyapal/basic-crud.git&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Duplicate the .env.example file and rename it to .env&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Update the &lt;code&gt;DB_HOST&lt;/code&gt; environment variable to value &lt;code&gt;mysql&lt;/code&gt; (should be same as service name of database server)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;    -u &#34;$(id -u):$(id -g)&#34; \&#xA;    -v &#34;$(pwd):/var/www/html&#34; \&#xA;    -w /var/www/html \&#xA;    laravelsail/php82-composer:latest \&#xA;    composer install --ignore-platform-reqs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/sail run --rm laravel.test npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the application&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/sail up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/sail npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generate the application key&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/sail artisan key:generate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run migration and seed&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/sail artisan migrate --seed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to Test the Application with Sail üß™&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy .env.testing.example to .env.testing&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Update the &lt;code&gt;DB_HOST&lt;/code&gt; environment variable to value &lt;code&gt;mysql&lt;/code&gt; (should be same as service name of database server)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new database for testing&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/sail mysql&#xA;&#xA;&amp;gt; create database &amp;lt;testing_database_name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following commands&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/sail artisan key:generate --env=testing&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/sail npm install &amp;amp;&amp;amp; ./vendor/bin/sail npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vendor/bin/sail run --rm laravel.test ./vendor/bin/pest --parallel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Give Feedback üí¨&lt;/h3&gt; &#xA;&lt;p&gt;Give your feedback on &lt;a href=&#34;https://x.com/MrPunyapal&#34;&gt;@MrPunyapal&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contribute ü§ù&lt;/h3&gt; &#xA;&lt;p&gt;Contribute if you have any ideas to improve this project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>spatie/image</title>
    <updated>2023-12-20T01:28:43Z</updated>
    <id>tag:github.com,2023-12-20:/spatie/image</id>
    <link href="https://github.com/spatie/image" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Manipulate images with an expressive API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Manipulate images with an expressive API&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/spatie/image&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/spatie/image.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/spatie/image/main/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square&#34; alt=&#34;MIT Licensed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/spatie/image/actions/workflows/run-tests.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/spatie/image/run-tests.yml?label=tests&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/spatie/image&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/spatie/image.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Image manipulation doesn&#39;t have to be hard. Here are a few examples on how this package makes it very easy to manipulate images.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Spatie\Image\Image;&#xA;&#xA;// modifying the image so it fits in a 100x100 rectangle without altering aspect ratio&#xA;Image::load($pathToImage)&#xA;   -&amp;gt;width(100)&#xA;   -&amp;gt;height(100)&#xA;   -&amp;gt;save($pathToNewImage);&#xA;   &#xA;// overwriting the original image with a greyscale version   &#xA;Image::load($pathToImage)&#xA;   -&amp;gt;greyscale()&#xA;   -&amp;gt;save();&#xA;   &#xA;// make image darker and save it in low quality&#xA;Image::load($pathToImage)&#xA;   -&amp;gt;brightness(-30)&#xA;   -&amp;gt;quality(25)&#xA;   -&amp;gt;save();&#xA;   &#xA;// rotate the image and sharpen it&#xA;Image::load($pathToImage)&#xA;   -&amp;gt;orientation(90)&#xA;   -&amp;gt;sharpen(15)&#xA;   -&amp;gt;save();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll find more examples in &lt;a href=&#34;https://docs.spatie.be/image&#34;&gt;the full documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support us&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://spatie.be/github-ad-click/image&#34;&gt;&lt;img src=&#34;https://github-ads.s3.eu-central-1.amazonaws.com/image.jpg?t=1&#34; width=&#34;419px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We invest a lot of resources into creating &lt;a href=&#34;https://spatie.be/open-source&#34;&gt;best in class open source packages&lt;/a&gt;. You can support us by &lt;a href=&#34;https://spatie.be/open-source/support-us&#34;&gt;buying one of our paid products&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You&#39;ll find our address on &lt;a href=&#34;https://spatie.be/about-us&#34;&gt;our contact page&lt;/a&gt;. We publish all received postcards on &lt;a href=&#34;https://spatie.be/open-source/postcards&#34;&gt;our virtual postcard wall&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require spatie/image&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that since version 1.5.3 this package requires exif extension to be enabled: &lt;a href=&#34;http://php.net/manual/en/exif.installation.php&#34;&gt;http://php.net/manual/en/exif.installation.php&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Head over to &lt;a href=&#34;https://spatie.be/docs/image&#34;&gt;the full documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/image/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i pixelmatch&#xA;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/spatie/.github/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;ve found a bug regarding security please mail &lt;a href=&#34;mailto:security@spatie.be&#34;&gt;security@spatie.be&lt;/a&gt; instead of using the issue tracker.&lt;/p&gt; &#xA;&lt;h2&gt;Postcardware&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;re free to use this package, but if it makes it to your production environment we highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using.&lt;/p&gt; &#xA;&lt;p&gt;Our address is: Spatie, Kruikstraat 22, 2018 Antwerp, Belgium.&lt;/p&gt; &#xA;&lt;p&gt;We publish all received postcards &lt;a href=&#34;https://spatie.be/en/opensource/postcards&#34;&gt;on our company website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/freekmurze&#34;&gt;Freek Van der Herten&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spatie/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Large parts of this codebase were copied from &lt;a href=&#34;https://image.intervention.io/v3&#34;&gt;Intervention Image&lt;/a&gt; by &lt;a href=&#34;https://github.com/olivervogel&#34;&gt;Oliver Vogel&lt;/a&gt;, and modified for readability and to fit our needs.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/image/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>