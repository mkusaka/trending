<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-01T01:41:07Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stevebauman/unfinalize</title>
    <updated>2023-10-01T01:41:07Z</updated>
    <id>tag:github.com,2023-10-01:/stevebauman/unfinalize</id>
    <link href="https://github.com/stevebauman/unfinalize" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Remove &#34;final&#34; keywords from classes and methods in vendor packages.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Unfinalize&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Unleash the freedom lost with open source PHP packages marking classes and methods as &lt;code&gt;final&lt;/code&gt;. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/stevebauman/unfinalize/actions&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/stevebauman/unfinalize/run-tests.yml?branch=master&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/stevebauman/unfinalize&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/packagist/v/stevebauman/unfinalize.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/stevebauman/unfinalize&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/packagist/dt/stevebauman/unfinalize.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/stevebauman/unfinalize&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/packagist/l/stevebauman/unfinalize.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;hr&gt; &#xA;&lt;p&gt;Unfinalize uses PHP CS Fixer to permanently remove &lt;code&gt;final&lt;/code&gt; keywords from composer vendor packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;- final class Foo&#xA;+ class Foo&#xA;{&#xA;-   final public function bar()&#xA;+   public function bar()&#xA;    {&#xA;        // ...&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Updates to PHP files are done safely, quickly, and performant.&lt;/li&gt; &#xA; &lt;li&gt;Changes are stored permanently. There is no performance impact using Unfinalize.&lt;/li&gt; &#xA; &lt;li&gt;No additional dependencies to your application. Unfinalize and its dependencies are &lt;a href=&#34;https://github.com/stevebauman/unfinalize/raw/master/builds&#34;&gt;compiled into a single phar file&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require stevebauman/unfinalize&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Inside your &lt;code&gt;composer.json&lt;/code&gt; file, add the vendor packages you want to remove the final keywords from inside:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;unfinalize&#34;: [&#xA;        &#34;vendor/package&#34;&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the unfinalize command to your &lt;code&gt;composer.json&lt;/code&gt; so it runs on &lt;code&gt;composer update&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;scripts&#34;: {&#xA;    &#34;post-update-cmd&#34;: [&#xA;      &#34;@php vendor/bin/unfinalize run&#34;&#xA;    ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run &lt;code&gt;composer update&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;--mark-final&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;If you would like final classes and methods to be marked with a &lt;code&gt;@final&lt;/code&gt; doc block, you may add the &lt;code&gt;--mark-final&lt;/code&gt; option to the unfinalize command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;scripts&#34;: {&#xA;    &#34;post-update-cmd&#34;: [&#xA;      &#34;@php vendor/bin/unfinalize run --mark-final&#34;&#xA;    ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which will produce:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Before&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;final class Foo&#xA;{&#xA;    final public function bar()&#xA;    {&#xA;        // ...&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;After&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;/**&#xA; * @final&#xA; */&#xA;class Foo&#xA;{&#xA;    /**&#xA;     * @final&#xA;     */&#xA;    public function bar()&#xA;    {&#xA;        // ...&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;--dry&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Execute a dry run to see what files will be modified by PHP CS Fixer.&lt;/p&gt;</summary>
  </entry>
</feed>