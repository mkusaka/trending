<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-16T01:42:54Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>maize-tech/laravel-magic-login</title>
    <updated>2023-07-16T01:42:54Z</updated>
    <id>tag:github.com,2023-07-16:/maize-tech/laravel-magic-login</id>
    <link href="https://github.com/maize-tech/laravel-magic-login" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easily add passwordless authentication into your application&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;/art/socialcard-dark.png&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;/art/socialcard-light.png&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/maize-tech/laravel-magic-login/main/art/socialcard-light.png&#34; alt=&#34;Social Card of Laravel Magic Login&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Laravel Magic Login&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/maize-tech/laravel-magic-login&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/maize-tech/laravel-magic-login.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/maize-tech/laravel-magic-login/actions?query=workflow%3Arun-tests+branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/maize-tech/laravel-magic-login/run-tests.yml?branch=main&amp;amp;label=tests&amp;amp;style=flat-square&#34; alt=&#34;GitHub Tests Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/maize-tech/laravel-magic-login/actions?query=workflow%3A%22Fix+PHP+code+style+issues%22+branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/maize-tech/laravel-magic-login/fix-php-code-style-issues.yml?branch=main&amp;amp;label=code%20style&amp;amp;style=flat-square&#34; alt=&#34;GitHub Code Style Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/maize-tech/laravel-magic-login&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/maize-tech/laravel-magic-login.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Easily add passwordless authentication into your application.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require maize-tech/laravel-magic-login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can publish the config and migration files and run the migrations with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan magic-login:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is the contents of the published config file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;return [&#xA;&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Magic Login model&#xA;    |--------------------------------------------------------------------------&#xA;    |&#xA;    | Here you may specify the fully qualified class name of the magic login&#xA;    | model.&#xA;    | By default, the value is Maize\MagicLogin\Models\MagicLogin::class&#xA;    |&#xA;    */&#xA;&#xA;    &#39;model&#39; =&amp;gt; null,&#xA;&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Expiration time&#xA;    |--------------------------------------------------------------------------&#xA;    |&#xA;    | Here you may specify the amount of minutes before the magic login link&#xA;    | expires.&#xA;    | By default, the value is 120 minutes (2 hours).&#xA;    |&#xA;    */&#xA;&#xA;    &#39;expiration&#39; =&amp;gt; null,&#xA;&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Authentication guard&#xA;    |--------------------------------------------------------------------------&#xA;    |&#xA;    | Here you may specify the guard you want to use to authenticate the user.&#xA;    | The guard name must be defined in your application&#39;s auth.php config file.&#xA;    | By default, the value is &#39;web&#39;.&#xA;    |&#xA;    */&#xA;&#xA;    &#39;guard&#39; =&amp;gt; null,&#xA;&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Default redirect url&#xA;    |--------------------------------------------------------------------------&#xA;    |&#xA;    | Here you may specify the redirect url used by default if none is specified&#xA;    | when creating the magic link.&#xA;    |&#xA;    */&#xA;&#xA;    &#39;redirect_url&#39; =&amp;gt; null,&#xA;&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Exception class&#xA;    |--------------------------------------------------------------------------&#xA;    |&#xA;    | Here you may specify the default exception class used for all package&#xA;    | related exceptions.&#xA;    | Useful if you need to customize the http status code in case an exception&#xA;    | is thrown during the magic login process.&#xA;    | By default, the value is Illuminate\Routing\Exceptions\InvalidSignatureException::class&#xA;    |&#xA;    */&#xA;&#xA;    &#39;exception&#39; =&amp;gt; null,&#xA;&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Force single link&#xA;    |--------------------------------------------------------------------------&#xA;    |&#xA;    | Here you can specify whether a user can only have one valid magic link&#xA;    | at a time or not.&#xA;    | If true, when you generate a new magic link for a specific user all&#xA;    | previously generated links will be revoked.&#xA;    | By default, the value is true.&#xA;    |&#xA;    */&#xA;&#xA;    &#39;force_single&#39; =&amp;gt; null,&#xA;&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Logins limit&#xA;    |--------------------------------------------------------------------------&#xA;    |&#xA;    | Here you can specify the amount of logins a user can perform with the&#xA;    | same magic link.&#xA;    | Can be either -1, which lets the user login indefinitely, or any number&#xA;    | greater than or equal to 1.&#xA;    | By default, the value is -1.&#xA;    |&#xA;    */&#xA;&#xA;    &#39;logins_limit&#39; =&amp;gt; null,&#xA;&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Send Notification Action&#xA;    |--------------------------------------------------------------------------&#xA;    |&#xA;    | Here you can specify the fully qualified class name of a custom action&#xA;    | used to send the magic login email notification.&#xA;    | By default, the value is Maize\MagicLogin\Actions\SendMagicLinkAction::class&#xA;    */&#xA;&#xA;    &#39;send_notification_action&#39; =&amp;gt; null,&#xA;&#xA;    /*&#xA;    |--------------------------------------------------------------------------&#xA;    | Notification class&#xA;    |--------------------------------------------------------------------------&#xA;    |&#xA;    | Here you can specify the fully qualified class name of the magic link&#xA;    | email notification.&#xA;    | By default, the value is Maize\MagicLogin\Notifications\MagicLinkNotification::class&#xA;    */&#xA;&#xA;    &#39;notification&#39; =&amp;gt; null,&#xA;&#xA;    &#39;route&#39; =&amp;gt; [&#xA;&#xA;        /*&#xA;        |--------------------------------------------------------------------------&#xA;        | Route method&#xA;        |--------------------------------------------------------------------------&#xA;        |&#xA;        | Here you may specify the route&#39;s allowed methods.&#xA;        | By default, the value is &#39;GET&#39;.&#xA;        |&#xA;        */&#xA;&#xA;        &#39;methods&#39; =&amp;gt; null,&#xA;&#xA;        /*&#xA;        |--------------------------------------------------------------------------&#xA;        | Route URI&#xA;        |--------------------------------------------------------------------------&#xA;        |&#xA;        | Here you may specify the route&#39;s uri.&#xA;        | By default, the value is &#39;magic-login&#39;.&#xA;        |&#xA;        */&#xA;&#xA;        &#39;uri&#39; =&amp;gt; null,&#xA;&#xA;        /*&#xA;        |--------------------------------------------------------------------------&#xA;        | Route name&#xA;        |--------------------------------------------------------------------------&#xA;        |&#xA;        | Here you may specify the route&#39;s name.&#xA;        | By default, the value is &#39;magic-login&#39;.&#xA;        |&#xA;        */&#xA;&#xA;        &#39;name&#39; =&amp;gt; null,&#xA;&#xA;        /*&#xA;        |--------------------------------------------------------------------------&#xA;        | Route controller&#xA;        |--------------------------------------------------------------------------&#xA;        |&#xA;        | Here you may specify the fully qualified class name of a custom controller&#xA;        | class used to handle the magic login request.&#xA;        | By default, the value is Maize\MagicLogin\Http\Controllers\MagicLoginController::class.&#xA;        |&#xA;        */&#xA;&#xA;        &#39;controller&#39; =&amp;gt; null,&#xA;&#xA;        /*&#xA;        |--------------------------------------------------------------------------&#xA;        | Route middlewares&#xA;        |--------------------------------------------------------------------------&#xA;        |&#xA;        | Here you may specify the list of middlewares used by the magic login route.&#xA;        | By default, the value is Maize\MagicLogin\Http\Middleware\ValidateSignature::class.&#xA;        |&#xA;        */&#xA;&#xA;        &#39;middleware&#39; =&amp;gt; null,&#xA;&#xA;    ],&#xA;&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Basic&lt;/h3&gt; &#xA;&lt;p&gt;To use the package, all you have to do is include the magic link route in your routes file. By default, you should include it under &lt;code&gt;routes/web.php&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Maize\MagicLogin\Facades\MagicLink;&#xA;&#xA;MagicLink::route();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! Once done, you can already generate an invitation link to any model extending the &lt;code&gt;Authenticatable&lt;/code&gt; class using the &lt;code&gt;make&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use App\Models\User;&#xA;use Maize\MagicLogin\Facades\MagicLink;&#xA;&#xA;$user = User::firstOrFail();&#xA;&#xA;$magicLink = MagicLink::make(&#xA;    authenticatable: $user&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Email notifications&lt;/h3&gt; &#xA;&lt;h4&gt;Send an email notification&lt;/h4&gt; &#xA;&lt;p&gt;Optionally, you may also automatically send an email notification to the given user using the &lt;code&gt;send&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use App\Models\User;&#xA;use Maize\MagicLogin\Facades\MagicLink;&#xA;&#xA;$user = User::firstOrFail();&#xA;&#xA;$magicLink = MagicLink::send(&#xA;    authenticatable: $user&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which is equals to using the &lt;code&gt;make&lt;/code&gt; method with the &lt;code&gt;notify&lt;/code&gt; parameter set to &lt;code&gt;true&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use App\Models\User;&#xA;use Maize\MagicLogin\Facades\MagicLink;&#xA;&#xA;$user = User::firstOrFail();&#xA;&#xA;$magicLink = MagicLink::make(&#xA;    authenticatable: $user,&#xA;    notify: true&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Customize the notification class&lt;/h4&gt; &#xA;&lt;p&gt;When needed, you can customize the email notification. All you have to do is create your own notification and override the default &lt;code&gt;MagicLinkNotification&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Illuminate\Notifications\Messages\MailMessage;&#xA;use Maize\MagicLogin\Notifications\MagicLinkNotification as BaseMagicLinkNotification;&#xA;&#xA;class MagicLinkNotification extends BaseMagicLinkNotification&#xA;{&#xA;    public function toMail($notifiable): MailMessage&#xA;    {&#xA;        return (new MailMessage)&#xA;            -&amp;gt;line(__(&#39;This is my custom magic link notification message&#39;))&#xA;            -&amp;gt;action(&#39;Join now&#39;, $this-&amp;gt;uri);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, you can update the &lt;code&gt;notification&lt;/code&gt; attribute under &lt;code&gt;config/magic-login.php&lt;/code&gt; with the new class path.&lt;/p&gt; &#xA;&lt;h3&gt;Force single link&lt;/h3&gt; &#xA;&lt;p&gt;When enabled, users can only have one valid link at a time. This means that when a new link is created, all previously created links are invalidated.&lt;/p&gt; &#xA;&lt;p&gt;To enable this option, you can set the &lt;code&gt;force_single&lt;/code&gt; attribute under &lt;code&gt;config/magic-login.php&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Magic link generator options&lt;/h3&gt; &#xA;&lt;p&gt;The package offers many useful parameters for the &lt;code&gt;make&lt;/code&gt; method to allow you customizing every single magic link:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maize-tech/laravel-magic-login/main/#redirect-url&#34;&gt;&lt;code&gt;Redirect url&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maize-tech/laravel-magic-login/main/#expiration-time&#34;&gt;&lt;code&gt;Expiration time&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maize-tech/laravel-magic-login/main/#route-name&#34;&gt;&lt;code&gt;Route name&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maize-tech/laravel-magic-login/main/#authentication-guard&#34;&gt;&lt;code&gt;Authentication guard&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maize-tech/laravel-magic-login/main/#logins-limit&#34;&gt;&lt;code&gt;Logins limit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maize-tech/laravel-magic-login/main/#custom-metadata&#34;&gt;&lt;code&gt;Custom metadata&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Redirect url&lt;/h4&gt; &#xA;&lt;p&gt;You can provide a redirect url used after authenticating the user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use App\Models\User;&#xA;use Maize\MagicLogin\Facades\MagicLink;&#xA;&#xA;$user = User::firstOrFail();&#xA;&#xA;$magicLink = MagicLink::send(&#xA;    authenticatable: $user,&#xA;    redirectUrl: &#39;yourapplication.test/your-path&#39;&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When not provided, the default value defined in &lt;code&gt;redirect_url&lt;/code&gt; attribute under &lt;code&gt;config/magic-login.php&lt;/code&gt; will be used.&lt;/p&gt; &#xA;&lt;h4&gt;Expiration time&lt;/h4&gt; &#xA;&lt;p&gt;You can define the amount of time before a magic link expires by providing a carbon instance or an integer with the amount of minutes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use App\Models\User;&#xA;use Maize\MagicLogin\Facades\MagicLink;&#xA;&#xA;$user = User::firstOrFail();&#xA;&#xA;$magicLink = MagicLink::send(&#xA;    authenticatable: $user,&#xA;    expiration: now()-&amp;gt;addDays(10), // the link will expire in 10 days&#xA;);&#xA;&#xA;$magicLink = MagicLink::send(&#xA;    authenticatable: $user,&#xA;    expiration: 60, // the link will expire in 1 hour (60 minutes)&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When not provided, the default value defined in &lt;code&gt;expiration&lt;/code&gt; attribute under &lt;code&gt;config/magic-login.php&lt;/code&gt; will be used.&lt;/p&gt; &#xA;&lt;h4&gt;Route name&lt;/h4&gt; &#xA;&lt;p&gt;You can define the route name used to generate the magic link:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use App\Models\User;&#xA;use Maize\MagicLogin\Facades\MagicLink;&#xA;&#xA;$user = User::firstOrFail();&#xA;&#xA;$magicLink = MagicLink::send(&#xA;    authenticatable: $user,&#xA;    routeName: &#39;magic-link&#39;,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When not provided, the default value defined in &lt;code&gt;route.name&lt;/code&gt; attribute under &lt;code&gt;config/magic-login.php&lt;/code&gt; will be used.&lt;/p&gt; &#xA;&lt;h4&gt;Authentication guard&lt;/h4&gt; &#xA;&lt;p&gt;You can define the authentication guard used to authenticate the user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use App\Models\User;&#xA;use Maize\MagicLogin\Facades\MagicLink;&#xA;&#xA;$user = User::firstOrFail();&#xA;&#xA;$magicLink = MagicLink::send(&#xA;    authenticatable: $user,&#xA;    guard: &#39;api&#39; // the &#39;api&#39; auth guard will be used&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When not provided, the default value defined in &lt;code&gt;guard&lt;/code&gt; attribute under &lt;code&gt;config/magic-login.php&lt;/code&gt; will be used.&lt;/p&gt; &#xA;&lt;h4&gt;Logins limit&lt;/h4&gt; &#xA;&lt;p&gt;You can define the amount of times a single link can be used before expiring. The value can be either -1, which lets the user login indefinitely, or any number greater than or equal to 1:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use App\Models\User;&#xA;use Maize\MagicLogin\Facades\MagicLink;&#xA;&#xA;$user = User::firstOrFail();&#xA;&#xA;$magicLink = MagicLink::send(&#xA;    authenticatable: $user,&#xA;    loginsLimit: 5 // the link can be used 5 times at max&#xA;);&#xA;&#xA;$magicLink = MagicLink::send(&#xA;    authenticatable: $user,&#xA;    loginsLimit: -1 // the link can be used an infinite amount of times&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When not provided, the default value defined in &lt;code&gt;logins_limit&lt;/code&gt; attribute under &lt;code&gt;config/magic-login.php&lt;/code&gt; will be used.&lt;/p&gt; &#xA;&lt;h4&gt;Custom metadata&lt;/h4&gt; &#xA;&lt;p&gt;Optionally, you can store custom metadata in case you need to perform custom queries.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use App\Models\User;&#xA;use Maize\MagicLogin\Facades\MagicLink;&#xA;use Maize\MagicLogin\Models\MagicLogin;&#xA;&#xA;$user = User::firstOrFail();&#xA;&#xA;$magicLink = MagicLink::send(&#xA;    authenticatable: $user,&#xA;    metadata: [&#39;test&#39; =&amp;gt; true]&#xA;);&#xA;&#xA;MagicLogin::query()&#xA;    -&amp;gt;whereJsonContains(&#39;metadata-&amp;gt;test&#39;, true)&#xA;    -&amp;gt;count(); // returns 1&#xA;&#xA;MagicLogin::query()&#xA;    -&amp;gt;whereJsonContains(&#39;metadata-&amp;gt;test&#39;, false)&#xA;    -&amp;gt;count(); // returns 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/maize-tech/laravel-magic-login/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/maize-tech/.github/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please review &lt;a href=&#34;https://github.com/maize-tech/.github/security/policy&#34;&gt;our security policy&lt;/a&gt; on how to report security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/enricodelazzari&#34;&gt;Enrico De Lazzari&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maize-tech/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/maize-tech/laravel-magic-login/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>