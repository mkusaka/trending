<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-28T01:31:46Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ratchetphp/Ratchet</title>
    <updated>2024-05-28T01:31:46Z</updated>
    <id>tag:github.com,2024-05-28:/ratchetphp/Ratchet</id>
    <link href="https://github.com/ratchetphp/Ratchet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Asynchronous WebSocket server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ratchet&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ratchetphp/Ratchet/actions?query=workflow%3A%22CI%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/ratchetphp/Ratchet/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://socketo.me/reports/ab/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Autobahn-passing-brightgreen.svg?sanitize=true&#34; alt=&#34;Autobahn Testsuite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/cboden/ratchet&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/cboden/ratchet/v/stable.png&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A PHP library for asynchronously serving WebSockets. Build up your application through simple interfaces and re-use your application without changing any of its code just by combining different components.&lt;/p&gt; &#xA;&lt;h2&gt;Reviving Ratchet!&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re currently aiming to revive Ratchet to get it up to date with the latest versions and use this as a starting point for bigger updates to come. We need your help to achieve this goal, see &lt;a href=&#34;https://github.com/ratchetphp/Ratchet/issues/1054&#34;&gt;ticket #1054&lt;/a&gt; for ways to help out. ❤️&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Shell access is required and root access is recommended. To avoid proxy/firewall blockage it&#39;s recommended WebSockets are requested on port 80 or 443 (SSL), which requires root access. In order to do this, along with your sync web stack, you can either use a reverse proxy or two separate machines. You can find more details in the &lt;a href=&#34;http://socketo.me/docs/deploy#server_configuration&#34;&gt;server conf docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;User and API documentation is available on Ratchet&#39;s website: &lt;a href=&#34;http://socketo.me&#34;&gt;http://socketo.me&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/cboden/Ratchet-examples&#34;&gt;https://github.com/cboden/Ratchet-examples&lt;/a&gt; for some out-of-the-box working demos using Ratchet.&lt;/p&gt; &#xA;&lt;p&gt;Need help? Have a question? Want to provide feedback? Write a message on the &lt;a href=&#34;https://groups.google.com/forum/#!forum/ratchet-php&#34;&gt;Google Groups Mailing List&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;A quick example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;use Ratchet\MessageComponentInterface;&#xA;use Ratchet\ConnectionInterface;&#xA;&#xA;    // Make sure composer dependencies have been installed&#xA;    require __DIR__ . &#39;/vendor/autoload.php&#39;;&#xA;&#xA;/**&#xA; * chat.php&#xA; * Send any incoming messages to all connected clients (except sender)&#xA; */&#xA;class MyChat implements MessageComponentInterface {&#xA;    protected $clients;&#xA;&#xA;    public function __construct() {&#xA;        $this-&amp;gt;clients = new \SplObjectStorage;&#xA;    }&#xA;&#xA;    public function onOpen(ConnectionInterface $conn) {&#xA;        $this-&amp;gt;clients-&amp;gt;attach($conn);&#xA;    }&#xA;&#xA;    public function onMessage(ConnectionInterface $from, $msg) {&#xA;        foreach ($this-&amp;gt;clients as $client) {&#xA;            if ($from != $client) {&#xA;                $client-&amp;gt;send($msg);&#xA;            }&#xA;        }&#xA;    }&#xA;&#xA;    public function onClose(ConnectionInterface $conn) {&#xA;        $this-&amp;gt;clients-&amp;gt;detach($conn);&#xA;    }&#xA;&#xA;    public function onError(ConnectionInterface $conn, \Exception $e) {&#xA;        $conn-&amp;gt;close();&#xA;    }&#xA;}&#xA;&#xA;    // Run the server application through the WebSocket protocol on port 8080&#xA;    $app = new Ratchet\App(&#39;localhost&#39;, 8080);&#xA;    $app-&amp;gt;route(&#39;/chat&#39;, new MyChat, array(&#39;*&#39;));&#xA;    $app-&amp;gt;route(&#39;/echo&#39;, new Ratchet\Server\EchoServer, array(&#39;*&#39;));&#xA;    $app-&amp;gt;run();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ php chat.php&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;    // Then some JavaScript in the browser:&#xA;    var conn = new WebSocket(&#39;ws://localhost:8080/echo&#39;);&#xA;    conn.onmessage = function(e) { console.log(e.data); };&#xA;    conn.onopen = function(e) { conn.send(&#39;Hello Me!&#39;); };&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>