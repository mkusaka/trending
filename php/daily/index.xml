<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-31T01:37:42Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>w7corp/easywechat</title>
    <updated>2022-08-31T01:37:42Z</updated>
    <id>tag:github.com,2022-08-31:/w7corp/easywechat</id>
    <link href="https://github.com/w7corp/easywechat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📦 一个 PHP 微信 SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://www.easywechat.com&#34;&gt;EasyWeChat&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;📦 一个 PHP 微信开发 SDK，开源 SaaS 平台提供商 &lt;a href=&#34;https://www.w7.cc/&#34;&gt;微擎&lt;/a&gt; 旗下开源产品。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/w7corp/easywechat/actions&#34;&gt;&lt;img src=&#34;https://github.com/w7corp/easywechat/workflows/Test/badge.svg?sanitize=true&#34; alt=&#34;Test Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/w7corp/easywechat/actions&#34;&gt;&lt;img src=&#34;https://github.com/w7corp/easywechat/workflows/Lint/badge.svg?sanitize=true&#34; alt=&#34;Lint Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/w7corp/easywechat&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/w7corp/easywechat/v/stable.svg?sanitize=true&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/w7corp/easywechat&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/w7corp/easywechat/v/unstable.svg?sanitize=true&#34; alt=&#34;Latest Unstable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/w7corp/easywechat&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/w7corp/easywechat/downloads&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/w7corp/easywechat&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/w7corp/easywechat/license&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;环境需求&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP &amp;gt;= 8.0.2&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://getcomposer.org/&#34;&gt;Composer&lt;/a&gt; &amp;gt;= 2.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安装&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require w7corp/easywechat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;使用示例&lt;/h2&gt; &#xA;&lt;p&gt;基本使用（以公众号服务端为例）:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;&#xA;use EasyWeChat\OfficialAccount\Application;&#xA;&#xA;$config = [&#xA;    &#39;app_id&#39; =&amp;gt; &#39;wx3cf0f39249eb0exxx&#39;,&#xA;    &#39;secret&#39; =&amp;gt; &#39;f1c242f4f28f735d4687abb469072xxx&#39;,&#xA;    &#39;aes_key&#39; =&amp;gt; &#39;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFG&#39;,&#xA;    &#39;token&#39; =&amp;gt; &#39;easywechat&#39;,&#xA;];&#xA;&#xA;$app = new Application($config);&#xA;&#xA;$app-&amp;gt;getServer()-&amp;gt;with(fn() =&amp;gt; &#34;您好！EasyWeChat！&#34;);&#xA;&#xA;$response = $server-&amp;gt;serve();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;文档和链接&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.easywechat.com&#34;&gt;官网&lt;/a&gt; · &lt;a href=&#34;https://github.com/w7corp/easywechat/discussions&#34;&gt;讨论&lt;/a&gt; · &lt;a href=&#34;https://github.com/w7corp/easywechat/security/policy&#34;&gt;更新策略&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;❤️&lt;/span&gt; 支持我&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/overtrue&#34;&gt;&lt;img src=&#34;https://github.com/overtrue/overtrue/raw/master/sponsor-me.svg?raw=true&#34; alt=&#34;Sponsor me&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果你喜欢我的项目并想支持它，&lt;a href=&#34;https://github.com/sponsors/overtrue&#34;&gt;点击这里 &lt;span&gt;❤️&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;由 JetBrains 赞助&lt;/h2&gt; &#xA;&lt;p&gt;非常感谢 Jetbrains 为我提供的 IDE 开源许可，让我完成此项目和其他开源项目上的开发工作。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=https://github.com/overtrue&#34;&gt;&lt;img src=&#34;https://resources.jetbrains.com/storage/products/company/brand/logos/jb_beam.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;可爱的贡献者们&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/w7corp/easywechat/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/wechat/contributors.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>php-webdriver/php-webdriver</title>
    <updated>2022-08-31T01:37:42Z</updated>
    <id>tag:github.com,2022-08-31:/php-webdriver/php-webdriver</id>
    <link href="https://github.com/php-webdriver/php-webdriver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PHP client for Selenium/WebDriver protocol. Previously facebook/php-webdriver&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;php-webdriver – Selenium WebDriver bindings for PHP&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/php-webdriver/webdriver&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/php-webdriver/webdriver.svg?style=flat-square&amp;amp;label=Packagist&#34; alt=&#34;Latest stable version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/php-webdriver/php-webdriver/Tests?style=flat-square&amp;amp;label=GitHub%20Actions&#34; alt=&#34;GitHub Actions build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://saucelabs.com/u/php-webdriver&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/php-webdriver/php-webdriver/Sauce%20Labs?style=flat-square&amp;amp;label=SauceLabs&#34; alt=&#34;SauceLabs test status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/php-webdriver/webdriver&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dd/php-webdriver/webdriver.svg?style=flat-square&amp;amp;label=Downloads&#34; alt=&#34;Total downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Php-webdriver library is PHP language binding for Selenium WebDriver, which allows you to control web browsers from PHP.&lt;/p&gt; &#xA;&lt;p&gt;This library is compatible with Selenium server version 2.x, 3.x and 4.x.&lt;/p&gt; &#xA;&lt;p&gt;The library supports &lt;a href=&#34;https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol&#34;&gt;JsonWireProtocol&lt;/a&gt; and also implements &lt;strong&gt;experimental support&lt;/strong&gt; of &lt;a href=&#34;https://w3c.github.io/webdriver/webdriver-spec.html&#34;&gt;W3C WebDriver&lt;/a&gt;. The W3C WebDriver support is not yet full-featured, however it should allow to control Firefox via Geckodriver and new versions of Chrome and Chromedriver with just a slight limitations.&lt;/p&gt; &#xA;&lt;p&gt;The concepts of this library are very similar to the &#34;official&#34; Java, .NET, Python and Ruby bindings from the &lt;a href=&#34;https://github.com/SeleniumHQ/selenium/&#34;&gt;Selenium project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Installation is possible using &lt;a href=&#34;https://getcomposer.org/&#34;&gt;Composer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t already use Composer, you can download the &lt;code&gt;composer.phar&lt;/code&gt; binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -sS https://getcomposer.org/installer | php&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then install the library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;php composer.phar require php-webdriver/webdriver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrade from version &amp;lt;1.8.0&lt;/h2&gt; &#xA;&lt;p&gt;Starting from version 1.8.0, the project has been renamed from &lt;code&gt;facebook/php-webdriver&lt;/code&gt; to &lt;code&gt;php-webdriver/webdriver&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In order to receive the new version and future updates, &lt;strong&gt;you need to rename it in your composer.json&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;&#34;require&#34;: {&#xA;-    &#34;facebook/webdriver&#34;: &#34;(version you use)&#34;,&#xA;+    &#34;php-webdriver/webdriver&#34;: &#34;(version you use)&#34;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and run &lt;code&gt;composer update&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;1. Start server (aka. remote end)&lt;/h3&gt; &#xA;&lt;p&gt;To control a browser, you need to start a &lt;em&gt;remote end&lt;/em&gt; (server), which will listen to the commands sent from this library and will execute them in the respective browser.&lt;/p&gt; &#xA;&lt;p&gt;This could be Selenium standalone server, but for local development, you can send them directly to so-called &#34;browser driver&#34; like Chromedriver or Geckodriver.&lt;/p&gt; &#xA;&lt;h4&gt;a) Chromedriver&lt;/h4&gt; &#xA;&lt;p&gt;📙 Below you will find a simple example. Make sure to read our wiki for &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/wiki/Chrome&#34;&gt;more information on Chrome/Chromedriver&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install the latest Chrome and &lt;a href=&#34;https://sites.google.com/chromium.org/driver/downloads&#34;&gt;Chromedriver&lt;/a&gt;. Make sure to have a compatible version of Chromedriver and Chrome!&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;chromedriver&lt;/code&gt; binary, you can pass &lt;code&gt;port&lt;/code&gt; argument, so that it listens on port 4444:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chromedriver --port=4444&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;b) Geckodriver&lt;/h4&gt; &#xA;&lt;p&gt;📙 Below you will find a simple example. Make sure to read our wiki for &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/wiki/Firefox&#34;&gt;more information on Firefox/Geckodriver&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install the latest Firefox and &lt;a href=&#34;https://github.com/mozilla/geckodriver/releases&#34;&gt;Geckodriver&lt;/a&gt;. Make sure to have a compatible version of Geckodriver and Firefox!&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;geckodriver&lt;/code&gt; binary (it start to listen on port 4444 by default):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;geckodriver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;c) Selenium standalone server&lt;/h4&gt; &#xA;&lt;p&gt;Selenium server can be useful when you need to execute multiple tests at once, when you run tests in several different browsers (like on your CI server), or when you need to distribute tests amongst several machines in grid mode (where one Selenium server acts as a hub, and others connect to it as nodes).&lt;/p&gt; &#xA;&lt;p&gt;Selenium server then act like a proxy and takes care of distributing commands to the respective nodes.&lt;/p&gt; &#xA;&lt;p&gt;The latest version can be found on the &lt;a href=&#34;https://www.selenium.dev/downloads/&#34;&gt;Selenium download page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;📙 You can find &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/wiki/Selenium-server&#34;&gt;further Selenium server information&lt;/a&gt; in our wiki.&lt;/p&gt; &#xA;&lt;h4&gt;d) Docker&lt;/h4&gt; &#xA;&lt;p&gt;Selenium server could also be started inside Docker container - see &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium&#34;&gt;docker-selenium project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;2. Create a Browser Session&lt;/h3&gt; &#xA;&lt;p&gt;When creating a browser session, be sure to pass the url of your running server.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// Chromedriver (if started using --port=4444 as above)&#xA;$serverUrl = &#39;http://localhost:4444&#39;;&#xA;// Geckodriver&#xA;$serverUrl = &#39;http://localhost:4444&#39;;&#xA;// selenium-server-standalone-#.jar (version 2.x or 3.x)&#xA;$serverUrl = &#39;http://localhost:4444/wd/hub&#39;;&#xA;// selenium-server-standalone-#.jar (version 4.x)&#xA;$serverUrl = &#39;http://localhost:4444&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can start browser of your choice:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Facebook\WebDriver\Remote\RemoteWebDriver;&#xA;&#xA;// Chrome&#xA;$driver = RemoteWebDriver::create($serverUrl, DesiredCapabilities::chrome());&#xA;// Firefox&#xA;$driver = RemoteWebDriver::create($serverUrl, DesiredCapabilities::firefox());&#xA;// Microsoft Edge&#xA;$driver = RemoteWebDriver::create($serverUrl, DesiredCapabilities::microsoftEdge());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Customize Desired Capabilities&lt;/h3&gt; &#xA;&lt;p&gt;Desired capabilities define properties of the browser you are about to start.&lt;/p&gt; &#xA;&lt;p&gt;They can be customized:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Facebook\WebDriver\Firefox\FirefoxOptions;&#xA;use Facebook\WebDriver\Remote\DesiredCapabilities;&#xA;&#xA;$desiredCapabilities = DesiredCapabilities::firefox();&#xA;&#xA;// Disable accepting SSL certificates&#xA;$desiredCapabilities-&amp;gt;setCapability(&#39;acceptSslCerts&#39;, false);&#xA;&#xA;// Add arguments via FirefoxOptions to start headless firefox&#xA;$firefoxOptions = new FirefoxOptions();&#xA;$firefoxOptions-&amp;gt;addArguments([&#39;-headless&#39;]);&#xA;$desiredCapabilities-&amp;gt;setCapability(FirefoxOptions::CAPABILITY, $firefoxOptions);&#xA;&#xA;$driver = RemoteWebDriver::create($serverUrl, $desiredCapabilities);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Capabilities can also be used to &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/wiki/HowTo-Work-with-proxy&#34;&gt;📙 configure a proxy server&lt;/a&gt; which the browser should use.&lt;/p&gt; &#xA;&lt;p&gt;To configure browser-specific capabilities, you may use &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/wiki/Chrome#chromeoptions&#34;&gt;📙 ChromeOptions&lt;/a&gt; or &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/wiki/Firefox#firefoxoptions&#34;&gt;📙 FirefoxOptions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities&#34;&gt;legacy JsonWire protocol&lt;/a&gt; documentation or &lt;a href=&#34;https://w3c.github.io/webdriver/#capabilities&#34;&gt;W3C WebDriver specification&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. Control your browser&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// Go to URL&#xA;$driver-&amp;gt;get(&#39;https://en.wikipedia.org/wiki/Selenium_(software)&#39;);&#xA;&#xA;// Find search element by its id, write &#39;PHP&#39; inside and submit&#xA;$driver-&amp;gt;findElement(WebDriverBy::id(&#39;searchInput&#39;)) // find search input element&#xA;    -&amp;gt;sendKeys(&#39;PHP&#39;) // fill the search box&#xA;    -&amp;gt;submit(); // submit the whole form&#xA;&#xA;// Find element of &#39;History&#39; item in menu by its css selector&#xA;$historyButton = $driver-&amp;gt;findElement(&#xA;    WebDriverBy::cssSelector(&#39;#ca-history a&#39;)&#xA;);&#xA;// Read text of the element and print it to output&#xA;echo &#39;About to click to a button with text: &#39; . $historyButton-&amp;gt;getText();&#xA;&#xA;// Click the element to navigate to revision history page&#xA;$historyButton-&amp;gt;click();&#xA;&#xA;// Make sure to always call quit() at the end to terminate the browser session&#xA;$driver-&amp;gt;quit();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/php-webdriver/php-webdriver/main/example.php&#34;&gt;example.php&lt;/a&gt; for full example scenario. Visit our GitHub wiki for &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/wiki/Example-command-reference&#34;&gt;📙 php-webdriver command reference&lt;/a&gt; and further examples.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Above snippets are not intended to be a working example by simply copy-pasting. See &lt;a href=&#34;https://raw.githubusercontent.com/php-webdriver/php-webdriver/main/example.php&#34;&gt;example.php&lt;/a&gt; for a working example.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;For latest changes see &lt;a href=&#34;https://raw.githubusercontent.com/php-webdriver/php-webdriver/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;More information&lt;/h2&gt; &#xA;&lt;p&gt;Some basic usage example is provided in &lt;a href=&#34;https://raw.githubusercontent.com/php-webdriver/php-webdriver/main/example.php&#34;&gt;example.php&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;How-tos are provided right here in &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/wiki&#34;&gt;📙 our GitHub wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t use IDE, you may use &lt;a href=&#34;https://php-webdriver.github.io/php-webdriver/latest/&#34;&gt;API documentation of php-webdriver&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You may also want to check out the Selenium project &lt;a href=&#34;https://selenium.dev/documentation/en/&#34;&gt;docs&lt;/a&gt; and &lt;a href=&#34;https://github.com/SeleniumHQ/selenium/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing framework integration&lt;/h2&gt; &#xA;&lt;p&gt;To take advantage of automatized testing you may want to integrate php-webdriver to your testing framework. There are some projects already providing this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/symfony/panther&#34;&gt;Symfony Panther&lt;/a&gt; uses php-webdriver and integrates with PHPUnit using &lt;code&gt;PantherTestCase&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://laravel.com/docs/dusk&#34;&gt;Laravel Dusk&lt;/a&gt; is another project using php-webdriver, could be used for testing via &lt;code&gt;DuskTestCase&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lmc-eu/steward&#34;&gt;Steward&lt;/a&gt; integrates php-webdriver directly to &lt;a href=&#34;https://phpunit.de/&#34;&gt;PHPUnit&lt;/a&gt;, and provides parallelization&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://codeception.com&#34;&gt;Codeception&lt;/a&gt; testing framework provides BDD-layer on top of php-webdriver in its &lt;a href=&#34;http://codeception.com/docs/modules/WebDriver&#34;&gt;WebDriver module&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can also check out this &lt;a href=&#34;http://codeception.com/11-12-2013/working-with-phpunit-and-selenium-webdriver.html&#34;&gt;blogpost&lt;/a&gt; + &lt;a href=&#34;https://github.com/DavertMik/php-webdriver-demo&#34;&gt;demo project&lt;/a&gt;, describing simple &lt;a href=&#34;https://phpunit.de/&#34;&gt;PHPUnit&lt;/a&gt; integration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;We have a great community willing to help you!&lt;/p&gt; &#xA;&lt;p&gt;❓ Do you have a &lt;strong&gt;question, idea or some general feedback&lt;/strong&gt;? Visit our &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/discussions&#34;&gt;Discussions&lt;/a&gt; page. (Alternatively, you can &lt;a href=&#34;https://stackoverflow.com/questions/tagged/php+selenium-webdriver&#34;&gt;look for many answered questions also on StackOverflow&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;🐛 Something isn&#39;t working, and you want to &lt;strong&gt;report a bug&lt;/strong&gt;? &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/issues/new&#34;&gt;Submit it here&lt;/a&gt; as a new issue.&lt;/p&gt; &#xA;&lt;p&gt;📙 Looking for a &lt;strong&gt;how-to&lt;/strong&gt; or &lt;strong&gt;reference documentation&lt;/strong&gt;? See &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/wiki&#34;&gt;our wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing ❤️&lt;/h2&gt; &#xA;&lt;p&gt;We love to have your help to make php-webdriver better. See &lt;a href=&#34;https://raw.githubusercontent.com/php-webdriver/php-webdriver/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more information about contributing and developing php-webdriver.&lt;/p&gt; &#xA;&lt;p&gt;Php-webdriver is community project - if you want to join the effort with maintaining and developing this library, the best is to look on &lt;a href=&#34;https://github.com/php-webdriver/php-webdriver/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&#34;&gt;issues marked with &#34;help wanted&#34;&lt;/a&gt; label. Let us know in the issue comments if you want to contribute and if you want any guidance, and we will be delighted to help you to prepare your pull request.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TheAlgorithms/PHP</title>
    <updated>2022-08-31T01:37:42Z</updated>
    <id>tag:github.com,2022-08-31:/TheAlgorithms/PHP</id>
    <link href="https://github.com/TheAlgorithms/PHP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All Algorithms implemented in PHP&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Algorithms - PHP&lt;/h1&gt; &#xA;&lt;h3&gt;All algorithms implemented in Php (for education)&lt;/h3&gt; &#xA;&lt;p&gt;These implementations are for learning purposes. They may be less efficient than the implementations in the Php standard library.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://raw.githubusercontent.com/TheAlgorithms/PHP/master/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Community Channel&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re on &lt;a href=&#34;https://gitter.im/TheAlgorithms&#34;&gt;Gitter&lt;/a&gt;! Please join us.&lt;/p&gt; &#xA;&lt;h2&gt;List of Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/TheAlgorithms/PHP/master/DIRECTORY.md&#34;&gt;directory&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>