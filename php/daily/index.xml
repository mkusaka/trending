<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-30T01:37:56Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>YorCreative/Laravel-UrlShortener</title>
    <updated>2022-08-30T01:37:56Z</updated>
    <id>tag:github.com,2022-08-30:/YorCreative/Laravel-UrlShortener</id>
    <link href="https://github.com/YorCreative/Laravel-UrlShortener" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Laravel URL shortener package that provides internal URL redirects with passwords, URL expiration dates, open limits before expiration and click tracking out of the box.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/YorCreative&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/YorCreative/Laravel-UrlShortener/main/content/logo.png&#34; alt=&#34;Logo&#34; width=&#34;128&#34; height=&#34;128&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Laravel URL Shortener&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/YorCreative/Laravel-UrlShortener/raw/main/LICENSE.md&#34;&gt;&lt;img alt=&#34;GitHub license&#34; src=&#34;https://img.shields.io/github/license/YorCreative/Laravel-UrlShortener&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/YorCreative/Laravel-UrlShortener/stargazers&#34;&gt;&lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/YorCreative/Laravel-UrlShortener&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/YorCreative/Laravel-UrlShortener/issues&#34;&gt;&lt;img alt=&#34;GitHub issues&#34; src=&#34;https://img.shields.io/github/issues/YorCreative/Laravel-UrlShortener&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/YorCreative/Laravel-UrlShortener/network&#34;&gt;&lt;img alt=&#34;GitHub forks&#34; src=&#34;https://img.shields.io/github/forks/YorCreative/Laravel-UrlShortener&#34;&gt;&lt;/a&gt; &#xA; &lt;img alt=&#34;Packagist Downloads&#34; src=&#34;https://img.shields.io/packagist/dt/YorCreative/Laravel-UrlShortener?color=green&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/YorCreative/Laravel-UrlShortener/actions/workflows/phpunit.yml&#34;&gt;&lt;img alt=&#34;PHPUnit&#34; src=&#34;https://github.com/YorCreative/Laravel-UrlShortener/actions/workflows/phpunit.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;A Laravel URL Shortener package that provides URL redirects with optionally protected URL password, URL expiration, open limits before expiration, ability to set feature activation dates, and click tracking out of the box for your Laravel applications.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require yorcreative/laravel-urlshortener&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Publish the packages assets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --provider=&#34;YorCreative\UrlShortener\UrlShortenerServiceProvider&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run migrations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Building Short Urls&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;/**&#xA;* Basic&#xA; */&#xA;$url = UrlService::shorten(&#39;something-extremely-long.com/even/longer?ref=with&amp;amp;some=thingelselonger&#39;)&#xA;        -&amp;gt;build(); &#xA;// http(s)://host/prefix/identifier;&#xA;&#xA;/**&#xA;* Advanced&#xA; */&#xA;$url = UrlService::shorten(&#39;something-extremely-long.com/even/longer?ref=with&amp;amp;some=thingelselonger&#39;)&#xA;        -&amp;gt;withActivation(Carbon::now()-&amp;gt;addHour()-&amp;gt;timestamp)&#xA;        -&amp;gt;withExpiration(Carbon::now()-&amp;gt;addDay()-&amp;gt;timestamp)&#xA;        -&amp;gt;withOpenLimit(2)&#xA;        -&amp;gt;withOwnership(Model::find(1))&#xA;        -&amp;gt;withPassword(&#39;password&#39;)&#xA;        -&amp;gt;build();&#xA;// http(s)://host/prefix/identifier;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finding Existing Short Urls&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&#xA;/**&#xA; * Find a Short URL by its identifier &#xA; */&#xA;$shortUrl = UrlService::findByIdentifier(&#39;identifier&#39;);&#xA;&#xA;/**&#xA; * Find a Short URL by its hashed signature&#xA; */&#xA;$shortUrl = UrlService::findByHash(md5(&#39;long_url&#39;));&#xA;&#xA;/**&#xA; * Find a Short URL by its plain text long url string &#xA; */&#xA;$shortUrl = UrlService::findByPlainText(&#39;long_url&#39;);&#xA;&#xA;/**&#xA; * Will return an instance of Models/ShortUrl or throw UrlRepository(&#39;Unable to locate Short URL&#39;)&#xA; */&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Getting Click Information&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$clicks = ClickService::get()-&amp;gt;toArray();&#xA;&#xA;dd($clicks);&#xA;[&#xA;    &#39;results&#39; =&amp;gt; [&#xA;        [&#xA;            &#39;id&#39; =&amp;gt; ...,&#xA;            &#39;created_at&#39; =&amp;gt; ...,&#xA;            &#39;short_url&#39; =&amp;gt; [&#xA;                &#39;id&#39; =&amp;gt; ...,&#xA;                &#39;identifier&#39; =&amp;gt; ...,&#xA;                &#39;hashed&#39; =&amp;gt; ...,&#xA;                &#39;plain_text&#39; =&amp;gt; ...,&#xA;                &#39;limit&#39; =&amp;gt; ...,&#xA;                &#39;created_at&#39; =&amp;gt; ...,&#xA;                &#39;updated_at&#39; =&amp;gt; ...&#xA;            ],&#xA;            &#39;location&#39; =&amp;gt; [&#xA;                &#39;id&#39; =&amp;gt; ...,&#xA;                &#39;ip&#39; =&amp;gt; ...,&#xA;                &#39;countryName&#39; =&amp;gt; ...,&#xA;                &#39;countryCode&#39; =&amp;gt; ...,&#xA;                &#39;regionCode&#39; =&amp;gt; ...,&#xA;                &#39;regionName&#39; =&amp;gt; ...,&#xA;                &#39;cityName&#39; =&amp;gt; ...,&#xA;                &#39;zipCode&#39; =&amp;gt; ...,&#xA;                &#39;isoCode&#39; =&amp;gt; ...,&#xA;                &#39;postalCode&#39; =&amp;gt; ...,&#xA;                &#39;latitude&#39; =&amp;gt; ...,&#xA;                &#39;longitude&#39; =&amp;gt; ...,&#xA;                &#39;metroCode&#39; =&amp;gt; ...,&#xA;                &#39;areaCode&#39; =&amp;gt; ...,&#xA;                &#39;timezone&#39; =&amp;gt; ...,&#xA;                &#39;created_at&#39; =&amp;gt; ...,&#xA;                &#39;updated_at&#39; =&amp;gt; ...&#xA;            ],&#xA;            &#39;outcome&#39; =&amp;gt; [&#xA;                &#39;id&#39; =&amp;gt; ...,&#xA;                &#39;name&#39; =&amp;gt; ...,&#xA;                &#39;alias&#39; =&amp;gt; ...,&#xA;            ]&#xA;        ]  &#xA;    ],&#xA;    &#39;total&#39; =&amp;gt; 1&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Getting Click Information and Filtering on Ownership&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$clicks = ClickService::get([&#xA;    &#39;ownership&#39; =&amp;gt;  [&#xA;        Model::find(1),&#xA;        Model::find(2)&#xA;    ]        &#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Filter on Outcome&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$clicks = ClickService::get([&#xA;    &#39;outcome&#39; =&amp;gt; [&#xA;        1, // successful_routed&#xA;        2, // successful_protected&#xA;        3, // failure_password&#xA;        4, // failure_expiration&#xA;        5  // failure_limit&#xA;    ]        &#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Filter on the Click&#39;s YorShortUrl Status&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$clicks = ClickService::get([&#xA;    &#39;status&#39; =&amp;gt; [&#xA;        &#39;active&#39;,&#xA;        &#39;expired&#39;,&#xA;        &#39;expiring&#39; // within 30 minutes of expiring&#xA;    ]        &#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Filtered on YorShortUrl Identifier(s)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$clicks = ClickService::get([&#xA;    &#39;identifier&#39; =&amp;gt; [&#xA;         &#39;xyz&#39;,&#xA;         &#39;yxz&#39;&#xA;    ]&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Iterate Through Results With Batches&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$clicks = ClickService::get([&#xA;    &#39;limit&#39; =&amp;gt; 500&#xA;    &#39;offset&#39; =&amp;gt; 1500&#xA;]); &#xA;  &#xA;$clicks-&amp;gt;get(&#39;results&#39;);&#xA;$clicks-&amp;gt;get(&#39;total&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Putting it all Together&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;/**&#xA; * Get the successfully routed clicks for all active short urls that are owned by Model IDs 1,2,3 and 4.&#xA; * Set the offset of results by 1500 clicks and limit by the results by 500.&#xA; */&#xA;$clicks = ClickService::get([&#xA;    &#39;ownership&#39; =&amp;gt; Model::whereIn(&#39;id&#39;, [1,2,3,4])-&amp;gt;get()-&amp;gt;toArray(),&#xA;    &#39;outcome&#39; =&amp;gt; [&#xA;        3 // successful_routed&#xA;    ],&#xA;    &#39;status&#39; =&amp;gt; [&#xA;        &#39;active&#39;&#xA;    ],       &#xA;    &#39;limit&#39; =&amp;gt; 500&#xA;    &#39;offset&#39; =&amp;gt; 1500&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yordadev&#34;&gt;Yorda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/YorCreative/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>blade-ui-kit/blade-heroicons</title>
    <updated>2022-08-30T01:37:56Z</updated>
    <id>tag:github.com,2022-08-30:/blade-ui-kit/blade-heroicons</id>
    <link href="https://github.com/blade-ui-kit/blade-heroicons" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A package to easily make use of Heroicons in your Laravel Blade views.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/blade-ui-kit/art/raw/main/socialcard-blade-heroicons.png&#34; width=&#34;1280&#34; title=&#34;Social Card Blade UI Kit&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Blade Heroicons&lt;/h1&gt; &#xA;&lt;a href=&#34;https://github.com/blade-ui-kit/blade-heroicons/actions?query=workflow%3ATests&#34;&gt; &lt;img src=&#34;https://github.com/blade-ui-kit/blade-heroicons/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.styleci.io/repos/258753939&#34;&gt; &lt;img src=&#34;https://github.styleci.io/repos/258753939/shield?style=flat&#34; alt=&#34;Code Style&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://packagist.org/packages/blade-ui-kit/blade-heroicons&#34;&gt; &lt;img src=&#34;https://img.shields.io/packagist/v/blade-ui-kit/blade-heroicons&#34; alt=&#34;Latest Stable Version&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://packagist.org/packages/blade-ui-kit/blade-heroicons&#34;&gt; &lt;img src=&#34;https://img.shields.io/packagist/dt/blade-ui-kit/blade-heroicons&#34; alt=&#34;Total Downloads&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;A package to easily make use of &lt;a href=&#34;https://github.com/refactoringui/heroicons&#34;&gt;Heroicons&lt;/a&gt; in your Laravel Blade views.&lt;/p&gt; &#xA;&lt;p&gt;For a full list of available icons see &lt;a href=&#34;https://raw.githubusercontent.com/blade-ui-kit/blade-heroicons/main/resources/svg&#34;&gt;the SVG directory&lt;/a&gt; or preview them at &lt;a href=&#34;https://heroicons.com/&#34;&gt;heroicons.com&lt;/a&gt;. Heroicons are originally developed by &lt;a href=&#34;https://twitter.com/steveschoger&#34;&gt;Steve Schoger&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/adamwathan&#34;&gt;Adam Wathan&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP 8.0 or higher&lt;/li&gt; &#xA; &lt;li&gt;Laravel 9.0 or higher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require blade-ui-kit/blade-heroicons&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Updating&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/blade-ui-kit/blade-heroicons/main/UPGRADE.md&#34;&gt;&lt;code&gt;the upgrade guide&lt;/code&gt;&lt;/a&gt; when updating the library.&lt;/p&gt; &#xA;&lt;h2&gt;Blade Icons&lt;/h2&gt; &#xA;&lt;p&gt;Blade Heroicons uses Blade Icons under the hood. Please refer to &lt;a href=&#34;https://github.com/blade-ui-kit/blade-icons&#34;&gt;the Blade Icons readme&lt;/a&gt; for additional functionality. We also recommend to &lt;a href=&#34;https://github.com/blade-ui-kit/blade-icons#caching&#34;&gt;enable icon caching&lt;/a&gt; with this library.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Blade Heroicons also offers the ability to use features from Blade Icons like default classes, default attributes, etc. If you&#39;d like to configure these, publish the &lt;code&gt;blade-heroicons.php&lt;/code&gt; config file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=blade-heroicons-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Icons can be used as self-closing Blade components which will be compiled to SVG icons:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-blade&#34;&gt;&amp;lt;x-heroicon-o-arrow-left/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also pass classes to your icon components:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-blade&#34;&gt;&amp;lt;x-heroicon-o-arrow-left class=&#34;w-6 h-6 text-gray-500&#34;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And even use inline styles:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-blade&#34;&gt;&amp;lt;x-heroicon-o-arrow-left style=&#34;color: #555&#34;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The solid icons can be referenced like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-blade&#34;&gt;&amp;lt;x-heroicon-s-arrow-left/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The mini icons can be referenced like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-blade&#34;&gt;&amp;lt;x-heroicon-m-arrow-left/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Raw SVG Icons&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use the raw SVG icons as assets, you can publish them using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=blade-heroicons --force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use them in your views like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-blade&#34;&gt;&amp;lt;img src=&#34;{{ asset(&#39;vendor/blade-heroicons/o-arrow-left.svg&#39;) }}&#34; width=&#34;10&#34; height=&#34;10&#34;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/blade-ui-kit/blade-heroicons/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; in this repository for all the recent changes.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;Blade Heroicons is developed and maintained by &lt;a href=&#34;https://driesvints.com&#34;&gt;Dries Vints&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Blade Heroicons is open-sourced software licensed under &lt;a href=&#34;https://raw.githubusercontent.com/blade-ui-kit/blade-heroicons/main/LICENSE.md&#34;&gt;the MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>spatie/laravel-dynamic-servers</title>
    <updated>2022-08-30T01:37:56Z</updated>
    <id>tag:github.com,2022-08-30:/spatie/laravel-dynamic-servers</id>
    <link href="https://github.com/spatie/laravel-dynamic-servers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dynamically create and destroy servers&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://supportukrainenow.org&#34;&gt;&lt;img src=&#34;https://github-ads.s3.eu-central-1.amazonaws.com/support-ukraine.svg?t=1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Dynamically create and destroy servers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/spatie/laravel-dynamic-servers&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/spatie/laravel-dynamic-servers.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/spatie/laravel-dynamic-servers/actions?query=workflow%3Arun-tests+branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/spatie/laravel-dynamic-servers/run-tests?label=tests&#34; alt=&#34;GitHub Tests Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/spatie/laravel-dynamic-servers/actions?query=workflow%3A%22Fix+PHP+code+style+issues%22+branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/spatie/laravel-dynamic-servers/Fix%20PHP%20code%20style%20issues?label=code%20style&#34; alt=&#34;GitHub Code Style Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/spatie/laravel-dynamic-servers&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/spatie/laravel-dynamic-servers.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Coming soon...&lt;/p&gt; &#xA;&lt;h2&gt;Support us&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://spatie.be/github-ad-click/laravel-dynamic-servers&#34;&gt;&lt;img src=&#34;https://github-ads.s3.eu-central-1.amazonaws.com/laravel-dynamic-servers.jpg?t=1&#34; width=&#34;419px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We invest a lot of resources into creating &lt;a href=&#34;https://spatie.be/open-source&#34;&gt;best in class open source packages&lt;/a&gt;. You can support us by &lt;a href=&#34;https://spatie.be/open-source/support-us&#34;&gt;buying one of our paid products&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You&#39;ll find our address on &lt;a href=&#34;https://spatie.be/about-us&#34;&gt;our contact page&lt;/a&gt;. We publish all received postcards on &lt;a href=&#34;https://spatie.be/open-source/postcards&#34;&gt;our virtual postcard wall&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require spatie/laravel-dynamic-servers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You must publish and run the migrations with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=&#34;dynamic-servers-migrations&#34;&#xA;php artisan migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, you can publish the config file with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=&#34;dynamic-servers-config&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is the contents of the published config file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;return [&#xA;   // TODO: add config&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Coming soon...&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/laravel-dynamic-servers/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/laravel-dynamic-servers/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please review &lt;a href=&#34;https://raw.githubusercontent.com/spatie/security/policy&#34;&gt;our security policy&lt;/a&gt; on how to report security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/riasvdv&#34;&gt;Rias Van der Veken&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/freekmurze&#34;&gt;Freek Van der herten&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spatie/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/laravel-dynamic-servers/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>