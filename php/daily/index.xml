<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-12T01:44:12Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vonderchild/digital-forensics-lab</title>
    <updated>2023-06-12T01:44:12Z</updated>
    <id>tag:github.com,2023-06-12:/vonderchild/digital-forensics-lab</id>
    <link href="https://github.com/vonderchild/digital-forensics-lab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Digital Forensics Lab - CYL2002&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the course material for the digital forensics lab offered at FAST National University of Computer and Emerging Sciences, available for public use and learning.&lt;/p&gt; &#xA;&lt;h1&gt;Course Outline&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vonderchild/digital-forensics-lab/main/Lab%2001/&#34;&gt;Lab 1 — Introduction to Digital Forensics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vonderchild/digital-forensics-lab/main/Lab%2002/&#34;&gt;Lab 2 — Common Windows Artifacts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vonderchild/digital-forensics-lab/main/Lab%2003/&#34;&gt;Lab 3 — Document Analysis and Steganography&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vonderchild/digital-forensics-lab/main/Lab%2004/&#34;&gt;Lab 4 — Web Attack Forensics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vonderchild/digital-forensics-lab/main/Lab%2005/&#34;&gt;Lab 5 — Network Traffic Forensics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vonderchild/digital-forensics-lab/main/Lab%2006/&#34;&gt;Lab 6 — Disk Image Forensics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vonderchild/digital-forensics-lab/main/Lab%2007/&#34;&gt;Lab 7 — Malware Analysis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vonderchild/digital-forensics-lab/main/Lab%2008/&#34;&gt;Lab 8 — Memory Forensics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vonderchild/digital-forensics-lab/main/Lab%2009/&#34;&gt;Lab 9 — Container Forensics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vonderchild/digital-forensics-lab/main/Lab%2010/&#34;&gt;Lab 10 — Cracking Passwords&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The repository will be regularly updated with new materials and exercises, so please make sure to regularly check for updates. If you have any questions or feedback, feel free to reach out.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>composer/satis</title>
    <updated>2023-06-12T01:44:12Z</updated>
    <id>tag:github.com,2023-06-12:/composer/satis</id>
    <link href="https://github.com/composer/satis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple static Composer repository generator - For a full private Composer repo use Private Packagist&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Satis&lt;/h1&gt; &#xA;&lt;p&gt;A simple static Composer repository generator.&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Satis is a tool that allows PHP developers to create a private package repository for their projects&#39; dependencies. It provides increased control over package distribution, improved security, and faster package installations, by creating a static Composer registry that can be hosted anywhere (even via Docker, locally).&lt;/p&gt; &#xA;&lt;h2&gt;Run from source&lt;/h2&gt; &#xA;&lt;p&gt;Satis requires a recent PHP version, it does not run with unsupported PHP versions. Check the &lt;code&gt;composer.json&lt;/code&gt; file for details.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install satis: &lt;code&gt;composer create-project composer/satis:dev-main&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build a repository: &lt;code&gt;php bin/satis build &amp;lt;configuration-file&amp;gt; &amp;lt;output-directory&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read the more detailed instructions in the &lt;a href=&#34;https://getcomposer.org/doc/articles/handling-private-packages-with-satis.md&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run as Docker container&lt;/h2&gt; &#xA;&lt;p&gt;Pull the image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull composer/satis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the image (with Composer cache from host):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run --rm --init -it \&#xA;  --user $(id -u):$(id -g) \&#xA;  --volume $(pwd):/build \&#xA;  --volume &#34;${COMPOSER_HOME:-$HOME/.composer}:/composer&#34; \&#xA;  composer/satis build &amp;lt;configuration-file&amp;gt; &amp;lt;output-directory&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to run the image without implicitly running Satis, you have to override the entrypoint specified in the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;--entrypoint /bin/sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Purge&lt;/h2&gt; &#xA;&lt;p&gt;If you choose to archive packages as part of your build, over time you can be left with useless files. With the &lt;code&gt;purge&lt;/code&gt; command, you can delete these files.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;php bin/satis purge &amp;lt;configuration-file&amp;gt; &amp;lt;output-dir&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: don&#39;t do this unless you are certain your projects no longer reference any of these archives in their &lt;code&gt;composer.lock&lt;/code&gt; files.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Updating&lt;/h2&gt; &#xA;&lt;p&gt;Updating Satis is as simple as running &lt;code&gt;git pull &amp;amp;&amp;amp; composer install&lt;/code&gt; in the Satis directory.&lt;/p&gt; &#xA;&lt;p&gt;If you are running Satis as a Docker container, simply pull the latest image.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please note that this project is released with a &lt;a href=&#34;https://www.contributor-covenant.org/version/2/0/code_of_conduct/&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/p&gt; &#xA;&lt;p&gt;Fork the project, create a feature branch, and send us a pull request.&lt;/p&gt; &#xA;&lt;p&gt;If you introduce a new feature, or fix a bug, please try to include a testcase.&lt;/p&gt; &#xA;&lt;p&gt;While not required, it is appreciated if your contribution meets our coding standards.&lt;/p&gt; &#xA;&lt;p&gt;You can check these yourself by running the tools we use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install tooling &amp;amp; dependencies&#xA;for d in tools/*; do composer --working-dir=$d install; done&#xA;&#xA;# run php-cs-fixer&#xA;tools/php-cs-fixer/vendor/bin/php-cs-fixer fix&#xA;&#xA;# run phpstan&#xA;tools/phpstan/vendor/bin/phpstan&#xA;&#xA;# alternatively, use the shortcuts&#xA;composer phpstan&#xA;composer php-cs-fixer[-fix]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;See the list of &lt;a href=&#34;https://github.com/composer/satis/contributors&#34;&gt;contributors&lt;/a&gt; who participate(d) in this project.&lt;/p&gt; &#xA;&lt;h2&gt;Community Tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ludofleury/satisfy&#34;&gt;satisfy&lt;/a&gt; - Symfony based composer repository manager with a simple web UI.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eventum/composer&#34;&gt;eventum/composer&lt;/a&gt; - A simple static set of packages hosted in GitHub Pages&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://alexvanderbist.com/2021/setting-up-and-securing-a-private-composer-repository/&#34;&gt;satis.spatie.be&lt;/a&gt; - A brief guide to setting up and securing a Satis repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Satis is licensed under the MIT License - see the &lt;a href=&#34;https://github.com/composer/satis/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details&lt;/p&gt;</summary>
  </entry>
</feed>