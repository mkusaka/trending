<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-20T01:37:46Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>spatie/holidays</title>
    <updated>2024-01-20T01:37:46Z</updated>
    <id>tag:github.com,2024-01-20:/spatie/holidays</id>
    <link href="https://github.com/spatie/holidays" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Calculate which days you don&#39;t have to work!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Calculate public holidays for a country&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/spatie/holidays&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/spatie/holidays.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/spatie/holidays/actions/workflows/run-tests.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/spatie/holidays/run-tests.yml?branch=main&amp;amp;label=tests&amp;amp;style=flat-square&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/spatie/holidays&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/spatie/holidays.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This package can calculate public holidays for a country.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Spatie\Holidays\Holidays;&#xA;&#xA;// returns an array of Belgian holidays&#xA;// for the current year&#xA;$holidays = Holidays::for(&#39;be&#39;)-&amp;gt;get();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support us&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://spatie.be/github-ad-click/holidays&#34;&gt;&lt;img src=&#34;https://github-ads.s3.eu-central-1.amazonaws.com/holidays.jpg?t=1&#34; width=&#34;419px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We invest a lot of resources into creating &lt;a href=&#34;https://spatie.be/open-source&#34;&gt;best in class open source packages&lt;/a&gt;. You can support us by &lt;a href=&#34;https://spatie.be/open-source/support-us&#34;&gt;buying one of our paid products&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You&#39;ll find our address on &lt;a href=&#34;https://spatie.be/about-us&#34;&gt;our contact page&lt;/a&gt;. We publish all received postcards on &lt;a href=&#34;https://spatie.be/open-source/postcards&#34;&gt;our virtual postcard wall&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require spatie/holidays&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported countries&lt;/h2&gt; &#xA;&lt;p&gt;We support the countries listed in &lt;a href=&#34;https://github.com/spatie/holidays/tree/main/src/Countries&#34;&gt;this directory&lt;/a&gt;. If you want to add a country, please create a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can get all holidays for a country by using the &lt;code&gt;get&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Spatie\Holidays\Holidays;&#xA;use Spatie\Holidays\Countries\Belgium;&#xA;&#xA;// returns an array of Belgian holidays&#xA;// for the current year&#xA;$holidays = Holidays::for(Belgium::make())-&amp;gt;get(); &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you could also pass an &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements&#34;&gt;ISO 3166-1&lt;/a&gt; code to the &lt;code&gt;for&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Spatie\Holidays\Holidays;&#xA;&#xA;// returns an array of Belgian holidays&#xA;// for the current year&#xA;$holidays = Holidays::for(&#39;be&#39;)-&amp;gt;get();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Getting holidays for a specific year&lt;/h3&gt; &#xA;&lt;p&gt;You can also pass a specific year.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Spatie\Holidays\Holidays;&#xA;&#xA;$holidays = Holidays::for(country: &#39;be&#39;, year: 2024))-&amp;gt;get();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Determining if a date is a holiday&lt;/h3&gt; &#xA;&lt;p&gt;If you need to see if a date is a holiday, you can use the &lt;code&gt;isHoliday&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Spatie\Holidays\Holidays;&#xA;&#xA;Holidays::for(&#39;be&#39;)-&amp;gt;isHoliday(&#39;2024-01-01&#39;); // true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Getting the name of a holiday&lt;/h3&gt; &#xA;&lt;p&gt;If you need the name of the holiday, you can use the &lt;code&gt;getName&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Spatie\Holidays\Holidays;&#xA;&#xA;Holidays::for(&#39;be&#39;)-&amp;gt;getName(&#39;2024-01-01&#39;); // Nieuwjaar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing a new country&lt;/h2&gt; &#xA;&lt;p&gt;If you want to add a new country, you can create a pull request.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new class in the &lt;code&gt;Countries&lt;/code&gt; directory. It should extend the &lt;code&gt;Country&lt;/code&gt; class.&lt;/li&gt; &#xA; &lt;li&gt;Add a test for the new country in the &lt;code&gt;tests&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Run the tests so a snapshot gets created.&lt;/li&gt; &#xA; &lt;li&gt;Verify the result in the newly created snapshot is correct.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In case your country has specific rules for calculating holidays, for example region specific holidays, you can pass this to the constructor of your country class.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$holidays = Holidays::for(Austria::make(region: &#39;de-bw&#39;))-&amp;gt;get();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The value, &lt;code&gt;de-bw&lt;/code&gt;, will be passed to the region parameter of the constructor of a country.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;class Austria extends Country&#xA;{&#xA;    protected function __construct(&#xA;        protected ?string $region = null,&#xA;    ) {&#xA;    }&#xA;&#xA;    protected function allHolidays(int $year): array&#xA;    {&#xA;        // Here you can use $this-&amp;gt;region (or other variables) to calculate holidays&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/spatie/.github/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/holidays/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please review &lt;a href=&#34;https://raw.githubusercontent.com/spatie/security/policy&#34;&gt;our security policy&lt;/a&gt; on how to report security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Nielsvanpach&#34;&gt;Niels Vanpachtenbeke&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/freekmurze&#34;&gt;Freek Van der Herten&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spatie/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/holidays/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>