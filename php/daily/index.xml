<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-24T01:41:52Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NativePHP/nativephp.com</title>
    <updated>2023-07-24T01:41:52Z</updated>
    <id>tag:github.com,2023-07-24:/NativePHP/nativephp.com</id>
    <link href="https://github.com/NativePHP/nativephp.com" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The NativePHP website&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://laravel.com&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/laravel/art/master/logo-lockup/5%20SVG/2%20CMYK/1%20Full%20Color/laravel-logolockup-cmyk-red.svg?sanitize=true&#34; width=&#34;400&#34; alt=&#34;Laravel Logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/laravel/framework/actions&#34;&gt;&lt;img src=&#34;https://github.com/laravel/framework/workflows/tests/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/laravel/framework&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/laravel/framework&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/laravel/framework&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/laravel/framework&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/laravel/framework&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/l/laravel/framework&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;About Laravel&lt;/h2&gt; &#xA;&lt;p&gt;Laravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling. Laravel takes the pain out of development by easing common tasks used in many web projects, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://laravel.com/docs/routing&#34;&gt;Simple, fast routing engine&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://laravel.com/docs/container&#34;&gt;Powerful dependency injection container&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Multiple back-ends for &lt;a href=&#34;https://laravel.com/docs/session&#34;&gt;session&lt;/a&gt; and &lt;a href=&#34;https://laravel.com/docs/cache&#34;&gt;cache&lt;/a&gt; storage.&lt;/li&gt; &#xA; &lt;li&gt;Expressive, intuitive &lt;a href=&#34;https://laravel.com/docs/eloquent&#34;&gt;database ORM&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Database agnostic &lt;a href=&#34;https://laravel.com/docs/migrations&#34;&gt;schema migrations&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://laravel.com/docs/queues&#34;&gt;Robust background job processing&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://laravel.com/docs/broadcasting&#34;&gt;Real-time event broadcasting&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Laravel is accessible, powerful, and provides tools required for large, robust applications.&lt;/p&gt; &#xA;&lt;h2&gt;Learning Laravel&lt;/h2&gt; &#xA;&lt;p&gt;Laravel has the most extensive and thorough &lt;a href=&#34;https://laravel.com/docs&#34;&gt;documentation&lt;/a&gt; and video tutorial library of all modern web application frameworks, making it a breeze to get started with the framework.&lt;/p&gt; &#xA;&lt;p&gt;You may also try the &lt;a href=&#34;https://bootcamp.laravel.com&#34;&gt;Laravel Bootcamp&lt;/a&gt;, where you will be guided through building a modern Laravel application from scratch.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t feel like reading, &lt;a href=&#34;https://laracasts.com&#34;&gt;Laracasts&lt;/a&gt; can help. Laracasts contains over 2000 video tutorials on a range of topics including Laravel, modern PHP, unit testing, and JavaScript. Boost your skills by digging into our comprehensive video library.&lt;/p&gt; &#xA;&lt;h2&gt;Laravel Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;We would like to extend our thanks to the following sponsors for funding Laravel development. If you are interested in becoming a sponsor, please visit the Laravel &lt;a href=&#34;https://patreon.com/taylorotwell&#34;&gt;Patreon page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Premium Partners&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://vehikl.com/&#34;&gt;Vehikl&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://tighten.co&#34;&gt;Tighten Co.&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://kirschbaumdevelopment.com&#34;&gt;Kirschbaum Development Group&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://64robots.com&#34;&gt;64 Robots&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://cubettech.com&#34;&gt;Cubet Techno Labs&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://cyber-duck.co.uk&#34;&gt;Cyber-Duck&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.many.co.uk&#34;&gt;Many&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.webdock.io/en&#34;&gt;Webdock, Fast VPS Hosting&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://devsquad.com&#34;&gt;DevSquad&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.curotec.com/services/technologies/laravel/&#34;&gt;Curotec&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://op.gg&#34;&gt;OP.GG&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://webreinvent.com/?utm_source=laravel&amp;amp;utm_medium=github&amp;amp;utm_campaign=patreon-sponsors&#34;&gt;WebReinvent&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://lendio.com&#34;&gt;Lendio&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for considering contributing to the Laravel framework! The contribution guide can be found in the &lt;a href=&#34;https://laravel.com/docs/contributions&#34;&gt;Laravel documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;In order to ensure that the Laravel community is welcoming to all, please review and abide by the &lt;a href=&#34;https://laravel.com/docs/contributions#code-of-conduct&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;If you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell via &lt;a href=&#34;mailto:taylor@laravel.com&#34;&gt;taylor@laravel.com&lt;/a&gt;. All security vulnerabilities will be promptly addressed.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The Laravel framework is open-sourced software licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>crazywhalecc/static-php-cli</title>
    <updated>2023-07-24T01:41:52Z</updated>
    <id>tag:github.com,2023-07-24:/crazywhalecc/static-php-cli</id>
    <link href="https://github.com/crazywhalecc/static-php-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build single static PHP binary, with PHP project together, with popular extensions included.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;static-php-cli&lt;/h1&gt; &#xA;&lt;p&gt;Compile A Statically Linked PHP With Swoole and other Extensions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are using English, see &lt;a href=&#34;https://raw.githubusercontent.com/crazywhalecc/static-php-cli/refactor/README-en.md&#34;&gt;English README&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;编译纯静态的 PHP Binary 二进制文件，带有各种扩展，让 PHP-cli 应用变得更便携！（cli SAPI）&lt;/p&gt; &#xA;&lt;img width=&#34;600&#34; alt=&#34;截屏2023-05-02 15 53 13&#34; src=&#34;https://user-images.githubusercontent.com/20330940/235610282-23e58d68-bd35-4092-8465-171cff2d5ba8.png&#34;&gt; &#xA;&lt;p&gt;同时可以使用 micro 二进制文件，将 PHP 源码和 PHP 二进制构建为一个文件分发！（由 &lt;a href=&#34;https://github.com/dixyes/phpmicro&#34;&gt;dixyes/phpmicro&lt;/a&gt; 提供支持）（micro SAPI）&lt;/p&gt; &#xA;&lt;img width=&#34;600&#34; alt=&#34;截屏2023-05-02 15 52 33&#34; src=&#34;https://user-images.githubusercontent.com/20330940/235610318-2ef4e3f1-278b-4ca4-99f4-b38120efc395.png&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Version-2.0--rc2-pink.svg?style=flat-square&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/crazywhalecc/static-php-cli/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/crazywhalecc/static-php-cli/build-linux-x86_64.yml?branch=refactor&amp;amp;label=Linux%20Build&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/crazywhalecc/static-php-cli/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/crazywhalecc/static-php-cli/build-macos-x86_64.yml?branch=refactor&amp;amp;label=macOS%20Build&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Extension%20Counter-55+-yellow.svg?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/search/crazywhalecc/static-php-cli/TODO?label=TODO%20Counter&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;在项目发布最后一个 RC 版本后（可能不超过 5 个候选版），项目将会重命名 &lt;code&gt;refactor&lt;/code&gt; 分支为 &lt;code&gt;main&lt;/code&gt; 分支，请依赖的项目注意更改分支名称。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;编译环境需求&lt;/h2&gt; &#xA;&lt;p&gt;是的，本项目采用 PHP 编写，编译前需要一个 PHP 环境，比较滑稽。 但本项目默认可通过自身构建的 micro 和 static-php 二进制运行，其他只需要包含 tokenizer 扩展和 PHP 版本大于等于 8.0 即可。&lt;/p&gt; &#xA;&lt;p&gt;下面是架构支持情况，&lt;code&gt;CI&lt;/code&gt; 代表支持 GitHub Action 构建，&lt;code&gt;Local&lt;/code&gt; 代表支持本地构建，空 代表暂不支持。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;x86_64&lt;/th&gt; &#xA;   &lt;th&gt;aarch64&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;CI, Local&lt;/td&gt; &#xA;   &lt;td&gt;Local&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;CI, Local&lt;/td&gt; &#xA;   &lt;td&gt;CI, Local&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;macOS-arm64 因 GitHub 暂未提供 arm runner，如果要构建 arm 二进制，可以使用手动构建。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;目前支持编译的 PHP 版本为：&lt;code&gt;7.4&lt;/code&gt;，&lt;code&gt;8.0&lt;/code&gt;，&lt;code&gt;8.1&lt;/code&gt;，&lt;code&gt;8.2&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;文档&lt;/h2&gt; &#xA;&lt;p&gt;点击这里查看文档：&lt;a href=&#34;https://static-php-cli.zhamao.me&#34;&gt;https://static-php-cli.zhamao.me&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;p&gt;请先根据下方扩展列表选择你要编译的扩展。&lt;/p&gt; &#xA;&lt;h3&gt;自托管直接下载&lt;/h3&gt; &#xA;&lt;p&gt;如果你不想自行编译，可以从本项目现有的 Action 下载 Artifact，也可以从自托管的服务器下载：&lt;a href=&#34;https://dl.zhamao.xin/static-php-cli/&#34;&gt;进入&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;自托管的服务器默认包含的扩展有：&lt;code&gt;bcmath,bz2,calendar,ctype,curl,dom,exif,fileinfo,filter,ftp,gd,gmp,iconv,xml,mbstring,mbregex,mysqlnd,openssl,pcntl,pdo,pdo_mysql,pdo_sqlite,phar,posix,redis,session,simplexml,soap,sockets,sqlite3,tokenizer,xmlwriter,xmlreader,zlib,zip&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;支持的扩展情况&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://static-php-cli.zhamao.me/zh/guide/extensions.html&#34;&gt;扩展支持列表&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果这里没有你需要的扩展，可以提交 Issue。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;使用 Actions 构建&lt;/h3&gt; &#xA;&lt;p&gt;使用 GitHub Action 可以方便地构建一个静态编译的 PHP 和 phpmicro，同时可以自行定义要编译的扩展。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork 本项目。&lt;/li&gt; &#xA; &lt;li&gt;进入项目的 Actions，选择 CI。&lt;/li&gt; &#xA; &lt;li&gt;选择 &lt;code&gt;Run workflow&lt;/code&gt;，填入你要编译的 PHP 版本、目标类型、扩展列表。（扩展列表使用英文逗号分割，例如 &lt;code&gt;bcmath,curl,mbstring&lt;/code&gt;）&lt;/li&gt; &#xA; &lt;li&gt;等待大约一段时间后，进入对应的任务中，获取 &lt;code&gt;Artifacts&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;如果你选择了 &lt;code&gt;debug&lt;/code&gt;，则会在构建时输出所有日志，包括编译的日志，以供排查错误。&lt;/p&gt; &#xA;&lt;h3&gt;手动构建&lt;/h3&gt; &#xA;&lt;p&gt;先克隆本项目：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/crazywhalecc/static-php-cli.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果你本机没有安装 PHP，你需要先使用包管理（例如 brew、apt、yum、apk 等）安装 php。&lt;/p&gt; &#xA;&lt;p&gt;你也可以通过 &lt;code&gt;bin/setup-runtime&lt;/code&gt; 命令下载静态编译好的 php-cli 和 Composer。下载的 php 和 Composer 将保存为 &lt;code&gt;bin/php&lt;/code&gt; 和 &lt;code&gt;bin/composer&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd static-php-cli&#xA;chmod +x bin/setup-runtime&#xA;./bin/setup-runtime&#xA;&#xA;# 使用独立的 php 运行 static-php-cli&#xA;./bin/php bin/spc&#xA;&#xA;# 使用 composer&#xA;./bin/php bin/composer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;下面是使用 static-php-cli 编译静态 php 和 micro 的基础用法：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 克隆本项目&#xA;cd static-php-cli&#xA;composer update&#xA;chmod +x bin/spc&#xA;# 检查环境依赖，并根据提示的命令安装缺失的编译工具&#xA;./bin/spc doctor&#xA;# 拉取所有依赖库&#xA;./bin/spc fetch --all&#xA;# 构建包含 bcmath,openssl,tokenizer,sqlite3,pdo_sqlite,ftp,curl 扩展的 php-cli 和 micro.sfx&#xA;./bin/spc build &#34;bcmath,openssl,tokenizer,sqlite3,pdo_sqlite,ftp,curl&#34; --build-cli --build-micro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;你也可以使用参数 &lt;code&gt;--with-php=x.y&lt;/code&gt; 来指定下载的 PHP 版本，目前支持 7.4 ~ 8.2：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 优先考虑使用 &amp;gt;= 8.0 的 PHP 版本&#xA;./bin/spc fetch --with-php=8.2 --all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;其中，目前支持构建 cli，micro，fpm 三种静态二进制，使用以下参数的一个或多个来指定编译的 SAPI：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--build-cli&lt;/code&gt;：构建 cli 二进制&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--build-micro&lt;/code&gt;：构建 phpmicro 自执行二进制&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--build-fpm&lt;/code&gt;：构建 fpm&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--build-all&lt;/code&gt;：构建所有&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;如果出现了任何错误，可以使用 &lt;code&gt;--debug&lt;/code&gt; 参数来展示完整的输出日志，以供排查错误：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./bin/spc build openssl,pcntl,mbstring --debug --build-all&#xA;./bin/spc fetch --all --debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;此外，默认编译的 PHP 为 NTS 版本。如需编译线程安全版本（ZTS），只需添加参数 &lt;code&gt;--enable-zts&lt;/code&gt; 即可。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./bin/spc build openssl,pcntl --build-all --enable-zts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;同时，你也可以使用参数 &lt;code&gt;--no-strip&lt;/code&gt; 来关闭裁剪，关闭裁剪后可以使用 gdb 等工具调试，但这样会让静态二进制体积变大。&lt;/p&gt; &#xA;&lt;h3&gt;使用 php-cli&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;php-cli 是一个静态的二进制文件，类似 Go、Rust 语言编译后的单个可移植的二进制文件。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;采用参数 &lt;code&gt;--build-cli&lt;/code&gt; 或&lt;code&gt;--build-all&lt;/code&gt; 参数时，最后编译结果会输出一个 &lt;code&gt;./php&lt;/code&gt; 的二进制文件，此文件可分发、可直接使用。 该文件编译后会存放在 &lt;code&gt;buildroot/bin/&lt;/code&gt; 目录中，名称为 &lt;code&gt;php&lt;/code&gt;，拷贝出来即可。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd buildroot/bin/&#xA;./php -v                # 检查版本&#xA;./php -m                # 检查编译的扩展&#xA;./php your_code.php     # 运行代码&#xA;./php your_project.phar # 运行打包为 phar 单文件的项目&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;使用 micro.sfx&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;phpmicro 是一个提供自执行二进制 PHP 的项目，本项目依赖 phpmicro 进行编译自执行二进制。详见 &lt;a href=&#34;https://github.com/dixyes/phpmicro&#34;&gt;dixyes/phpmicro&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;采用项目参数 &lt;code&gt;--build-micro&lt;/code&gt; 或 &lt;code&gt;--build-all&lt;/code&gt; 时，最后编译结果会输出一个 &lt;code&gt;./micro.sfx&lt;/code&gt; 的文件，此文件需要配合你的 PHP 源码使用。 该文件编译后会存放在 &lt;code&gt;buildroot/bin/&lt;/code&gt; 目录中，拷贝出来即可。&lt;/p&gt; &#xA;&lt;p&gt;使用时应准备好你的项目源码文件，可以是单个 PHP 文件，也可以是 Phar 文件。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;&amp;lt;?php echo &#39;Hello world&#39; . PHP_EOL;&#34; &amp;gt; code.php&#xA;cat micro.sfx code.php &amp;gt; single-app &amp;amp;&amp;amp; chmod +x single-app&#xA;./single-app&#xA;&#xA;# 如果打包 PHAR 文件，仅需把 code.php 更换为 phar 文件路径即可&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;有些情况下的 phar 文件可能无法在 micro 环境下运行。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;使用 php-fpm&lt;/h3&gt; &#xA;&lt;p&gt;采用项目参数 &lt;code&gt;--build-fpm&lt;/code&gt; 或 &lt;code&gt;--build-all&lt;/code&gt; 时，最后编译结果会输出一个 &lt;code&gt;./php-fpm&lt;/code&gt; 的文件。 该文件存放在 &lt;code&gt;buildroot/bin/&lt;/code&gt; 目录，拷贝出来即可使用。&lt;/p&gt; &#xA;&lt;p&gt;在正常的 Linux 发行版和 macOS 系统中，安装 php-fpm 后包管理会自动生成默认的 fpm 配置文件。 因为 php-fpm 必须指定配置文件才可启动，本项目编译的 php-fpm 不会带任何配置文件，所以需自行编写 &lt;code&gt;php-fpm.conf&lt;/code&gt; 和 &lt;code&gt;pool.conf&lt;/code&gt; 配置文件。&lt;/p&gt; &#xA;&lt;p&gt;指定 &lt;code&gt;php-fpm.conf&lt;/code&gt; 可以使用命令参数 &lt;code&gt;-y&lt;/code&gt;，例如：&lt;code&gt;./php-fpm -y php-fpm.conf&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;项目支持情况&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 基础结构编写（采用 &lt;code&gt;symfony/console&lt;/code&gt;）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 错误处理&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; macOS 支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Windows 支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Linux 支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; PHP 7.4 支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; fpm 支持&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;更多功能和特性正在陆续支持中，详见：&lt;a href=&#34;https://github.com/crazywhalecc/static-php-cli/issues/32&#34;&gt;https://github.com/crazywhalecc/static-php-cli/issues/32&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;贡献&lt;/h2&gt; &#xA;&lt;p&gt;目前支持的扩展较少，如果缺少你需要的扩展，可发起 Issue。如果你对本项目较熟悉，也欢迎为本项目发起 Pull Request。&lt;/p&gt; &#xA;&lt;p&gt;贡献基本原则如下：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;项目采用了 php-cs-fixer、phpstan 作为代码规范工具，贡献前请对更新的代码执行 &lt;code&gt;composer analyze&lt;/code&gt; 和 &lt;code&gt;composer cs-fix&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;涉及到其他开源库的部分应提供对应库的协议，同时对配置文件在修改后采用命令 &lt;code&gt;sort-config&lt;/code&gt; 排序。有关排序的命令，见文档。&lt;/li&gt; &#xA; &lt;li&gt;应遵循命名规范，例如扩展名称应采取 PHP 内注册的扩展名本身，外部库名应遵循项目本身的名称，内部逻辑的函数、类名、变量等应遵循驼峰、下划线等格式，禁止同一模块混用。&lt;/li&gt; &#xA; &lt;li&gt;涉及编译外部库的命令和 Patch 时应注意兼容不同操作系统。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;另外，添加新扩展的贡献方式，可以参考下方 &lt;code&gt;进阶&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;如果你想贡献文档内容，请到项目仓库 &lt;a href=&#34;https://github.com/crazywhalecc/static-php-cli-docs&#34;&gt;crazywhalecc/static-php-cli-docs&lt;/a&gt; 贡献。&lt;/p&gt; &#xA;&lt;h2&gt;赞助本项目&lt;/h2&gt; &#xA;&lt;p&gt;你可以在 &lt;a href=&#34;https://github.com/crazywhalecc/crazywhalecc/raw/master/FUNDING.md&#34;&gt;我的个人赞助页&lt;/a&gt; 支持我和我的项目。&lt;/p&gt; &#xA;&lt;h2&gt;开源协议&lt;/h2&gt; &#xA;&lt;p&gt;本项目依据旧版本惯例采用 MIT License 开源，自身的部分代码引用或修改自以下项目：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dixyes/lwmbs&#34;&gt;dixyes/lwmbs&lt;/a&gt;（木兰宽松许可证）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/swoole/swoole-cli&#34;&gt;swoole/swoole-cli&lt;/a&gt;（Apache 2.0 LICENSE、SWOOLE-CLI LICENSE）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;因本项目的特殊性，使用项目编译过程中会使用很多其他开源项目，例如 curl、protobuf 等，它们都有各自的开源协议。 请在编译完成后，使用命令 &lt;code&gt;bin/spc dump-license&lt;/code&gt; 导出项目使用项目的开源协议，并遵守对应项目的 LICENSE。&lt;/p&gt; &#xA;&lt;h2&gt;进阶&lt;/h2&gt; &#xA;&lt;p&gt;本项目重构分支为模块化编写。如果你对本项目感兴趣，想加入开发，可以参照文档的 &lt;a href=&#34;https://static-php-cli.zhamao.me&#34;&gt;贡献指南&lt;/a&gt; 贡献代码或文档。（TODO）&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>simonhamp/cronikl</title>
    <updated>2023-07-24T01:41:52Z</updated>
    <id>tag:github.com,2023-07-24:/simonhamp/cronikl</id>
    <link href="https://github.com/simonhamp/cronikl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A scheduled task manager&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/simonhamp/cronikl/raw/main/resources/images/cronikl_github.jpg?raw=true&#34; alt=&#34;Cronikl Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Cronikl&lt;/h1&gt; &#xA;&lt;p&gt;Cronikl is a neat little app that lets you manage cron jobs with a simple UI, running commands on the schedule you define.&lt;/p&gt; &#xA;&lt;p&gt;It was built as a working demonstration of the &lt;a href=&#34;https://nativephp.com/&#34;&gt;NativePHP framework&lt;/a&gt; of which I am one of the maintainers.&lt;/p&gt; &#xA;&lt;p&gt;Cronikl is just a Laravel application that uses the &lt;a href=&#34;https://tallstack.dev/&#34;&gt;TALL stack&lt;/a&gt; running in the &lt;a href=&#34;https://www.electronjs.org/&#34;&gt;Electron&lt;/a&gt; variant of NativePHP.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NB: You need to leave the app open for the scheduler to run your tasks.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Cronikl currently supports macOS only, but Linux and Windows support is coming.&lt;/p&gt; &#xA;&lt;h2&gt;Dist&lt;/h2&gt; &#xA;&lt;p&gt;Just want to install Cronikl? A production build will be available soon.&lt;/p&gt; &#xA;&lt;h2&gt;Dev&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Clone this repository (or your fork of it) and run &lt;code&gt;composer install&lt;/code&gt; to install the dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;cp .env.example .env &amp;amp;&amp;amp; php artisan key:generate&lt;/code&gt; to create your &lt;code&gt;.env&lt;/code&gt; file and generate an application key.&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;npm install &amp;amp;&amp;amp; npm run build&lt;/code&gt; to install the NPM dependencies and build the front-end assets (mainly Tailwind CSS).&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;php artisan native:install&lt;/code&gt; to install NativePHP.&lt;/p&gt; &#xA;&lt;h3&gt;Booting the dev build&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;php artisan native:serve&lt;/code&gt; to start the application.&lt;/p&gt; &#xA;&lt;h2&gt;Learn NativePHP&lt;/h2&gt; &#xA;&lt;p&gt;NativePHP is fairly new but already has lots of &lt;a href=&#34;https://nativephp.com/docs/1&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Cronikl was built in a day by &lt;a href=&#34;https://simonhamp.me/&#34;&gt;Simon Hamp&lt;/a&gt; 😅&lt;/p&gt; &#xA;&lt;p&gt;The lovely 😍 Cronikl logo was designed by &lt;a href=&#34;https://danmatthews.me&#34;&gt;Dan Matthews&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to sponsor Cronikl&#39;s development, please visit my &lt;a href=&#34;https://github.com/sponsors/simonhamp&#34;&gt;GitHub Sponsors page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Cronikl is an open-source project and contributions are welcome! Feel free to open an issue or submit a pull request if you have a way to improve the app.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Cronikl is open-source software licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>