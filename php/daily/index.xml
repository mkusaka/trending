<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-24T02:23:07Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pandora-next/deploy</title>
    <updated>2023-11-24T02:23:07Z</updated>
    <id>tag:github.com,2023-11-24:/pandora-next/deploy</id>
    <link href="https://github.com/pandora-next/deploy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pandora Cloud + Pandora Server + Shared Chat = PandoraNext. New GPTs(Gizmo) UI, All in one!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PandoraNext&lt;/h1&gt; &#xA;&lt;h2&gt;简单介绍&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pandora Cloud + Pandora Server + Shared Chat = &lt;code&gt;PandoraNext&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;支持GPTs，最新UI。&lt;/li&gt; &#xA; &lt;li&gt;支持多种登录方式：（相当于Pandora Cloud） &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;账号/密码&lt;/li&gt; &#xA;   &lt;li&gt;Access Token&lt;/li&gt; &#xA;   &lt;li&gt;Session Token&lt;/li&gt; &#xA;   &lt;li&gt;Refresh Token&lt;/li&gt; &#xA;   &lt;li&gt;Share Token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;可内置tokens（可使用上述所有Token），支持设置密码。（相当于Pandora Server）&lt;/li&gt; &#xA; &lt;li&gt;可配置共享的tokens，会有一个功能等同&lt;code&gt;chat-shared3.zhile.io&lt;/code&gt;的共享站。&lt;/li&gt; &#xA; &lt;li&gt;为全代理模式，你的用户只需要跟你的部署网络能通即可。&lt;/li&gt; &#xA; &lt;li&gt;还有疑问，那就进Telegram群让大家围观围观：&lt;a href=&#34;https://t.me/ja_netfilter_group&#34;&gt;@ja_netfilter_group&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;手动部署&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在&lt;a href=&#34;https://github.com/pandora-next/deploy/releases&#34;&gt;Releases&lt;/a&gt;中下载对应操作系统和架构的包。&lt;/li&gt; &#xA; &lt;li&gt;解压后修改同目录中的&lt;code&gt;config.json&lt;/code&gt;至你需要的参数。&lt;/li&gt; &#xA; &lt;li&gt;将获取到的&lt;code&gt;JWT Token&lt;/code&gt;内容写进同目录的&lt;a href=&#34;https://raw.githubusercontent.com/pandora-next/deploy/master/#%E5%85%B3%E4%BA%8E-licensejwt%E6%96%87%E4%BB%B6&#34;&gt;license.jwt&lt;/a&gt;文件中。&lt;/li&gt; &#xA; &lt;li&gt;启动&lt;code&gt;PandoraNext&lt;/code&gt;或&lt;code&gt;PandoraNext.exe&lt;/code&gt;即可。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docker 部署&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker pull pengzhile/pandora-next&#xA;$ docker run -d --restart always --name PandoraNext --net=bridge -p 8181:8181 \&#xA;             -e PANDORA_NEXT_LICENSE=&#34;&amp;lt;JWT Token&amp;gt;&#34; pengzhile/pandora-next&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;容器内默认监听&lt;code&gt;8181&lt;/code&gt;端口，映射宿主机的&lt;code&gt;8181&lt;/code&gt;端口，可自行修改。&lt;/li&gt; &#xA; &lt;li&gt;你可以映射目录到容器内的&lt;code&gt;/data&lt;/code&gt;目录，&lt;code&gt;config.json&lt;/code&gt;、&lt;code&gt;tokens.json&lt;/code&gt;和&lt;code&gt;license.jwt&lt;/code&gt;放在其中。&lt;/li&gt; &#xA; &lt;li&gt;自行使用真实的&lt;code&gt;JWT Token&lt;/code&gt;替换命令中的&lt;code&gt;&amp;lt;JWT Token&amp;gt;&lt;/code&gt;，没有&lt;code&gt;&amp;lt;&lt;/code&gt;和&lt;code&gt;&amp;gt;&lt;/code&gt;，不要搞错。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docker Compose 模版&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3&#39;&#xA;services:&#xA;  pandora-next:&#xA;    image: pengzhile/pandora-next&#xA;    container_name: PandoraNext&#xA;    network_mode: bridge&#xA;    restart: always&#xA;    ports:&#xA;      - &#34;8181:8181&#34;&#xA;    environment:&#xA;      - PANDORA_NEXT_LICENSE=&amp;lt;JWT Token&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;对照上述&lt;code&gt;Docker 部署&lt;/code&gt;的内容自行修改。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果你映射了&lt;code&gt;/data&lt;/code&gt;目录，要提供&lt;code&gt;config.json&lt;/code&gt;，同样&lt;code&gt;tokens.json&lt;/code&gt;也放在这里。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Nginx 配置&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;server {&#xA;&#x9;listen 443 ssl http2;&#xA;&#x9;server_name chat.zhile.io;&#xA;&#x9;&#xA;&#x9;charset utf-8;&#xA;&#x9;&#xA;&#x9;ssl_certificate      certs/chat.zhile.io.crt;&#xA;&#x9;ssl_certificate_key  certs/chat.zhile.io.key;&#xA;&#xA;&#x9;...省略若干其他配置...&#xA;&#x9;&#xA;&#x9;location / {&#xA;&#x9;&#x9;proxy_http_version &#x9;1.1;&#xA;&#x9;&#x9;proxy_pass &#x9;&#x9;http://127.0.0.1:8181/;&#xA;&#x9;&#x9;proxy_set_header&#x9;Connection&#x9;&#x9;&#34;&#34;;&#xA;&#x9;&#x9;proxy_set_header   &#x9;Host&#x9;&#x9;&#x9;$http_host;&#xA;&#x9;&#x9;proxy_set_header &#x9;X-Forwarded-Proto &#x9;$scheme;&#xA;&#x9;&#x9;proxy_set_header   &#x9;X-Real-IP          &#x9;$remote_addr;&#xA;&#x9;&#x9;proxy_set_header   &#x9;X-Forwarded-For    &#x9;$proxy_add_x_forwarded_for;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;proxy_buffering off;&#xA;&#x9;&#x9;proxy_cache off;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;send_timeout 600;&#xA;&#x9;&#x9;proxy_connect_timeout 600;&#xA;&#x9;&#x9;proxy_send_timeout 600;&#xA;&#x9;&#x9;proxy_read_timeout 600;&#xA;&#x9;}&#xA;&#xA;&#x9;...省略若干其他配置...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nginx建议开启&lt;code&gt;http2&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;以上仅为推荐配置，可根据具体情况进行改动。&lt;/li&gt; &#xA; &lt;li&gt;建议开启&lt;code&gt;ssl&lt;/code&gt;也即&lt;code&gt;https&lt;/code&gt;，否则浏览器限制将无法复制网页内容。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;config 配置&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;以下是一个示例&lt;code&gt;config.json&lt;/code&gt;文件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;bind&#34;: &#34;127.0.0.1:8181&#34;,&#xA;  &#34;timeout&#34;: 600,&#xA;  &#34;proxy_url&#34;: &#34;&#34;,&#xA;  &#34;public_share&#34;: false,&#xA;  &#34;site_password&#34;: &#34;&#34;,&#xA;  &#34;setup_password&#34;: &#34;&#34;,&#xA;  &#34;server_tokens&#34;: true,&#xA;  &#34;server_mode&#34;: &#34;web&#34;,&#xA;  &#34;whitelist&#34;: null&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;bind&lt;/code&gt;指定绑定IP和端口，在docker内，IP只能用&lt;code&gt;0.0.0.0&lt;/code&gt;，否则映射不出来。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;timeout&lt;/code&gt;是请求的超时时间，单位为&lt;code&gt;秒&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_url&lt;/code&gt;指定部署服务流量走代理，如：&lt;code&gt;http://127.0.0.1:8888&lt;/code&gt;、&lt;code&gt;socks5://127.0.0.1:7980&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;public_share&lt;/code&gt;对于GPT中创建的对话分享，是否需要登录才能查看。为&lt;code&gt;true&lt;/code&gt;则无需登录即可查看。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;site_password&lt;/code&gt;设置整站密码，需要先输入这个密码，正确才能进行后续步骤。充分保障私密性。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;setup_password&lt;/code&gt;定义一个设置密码，用于调用&lt;code&gt;/setup/&lt;/code&gt;开头的设置接口，为空则不可调用。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;server_tokens&lt;/code&gt;设置是否在响应头中显示版本号，&lt;code&gt;true&lt;/code&gt;显示，&lt;code&gt;false&lt;/code&gt;则不显示。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;server_mode&lt;/code&gt;默认为&lt;code&gt;web&lt;/code&gt;模式，新增&lt;code&gt;proxy&lt;/code&gt;模式，可以将你部署的服务当作一个&lt;code&gt;ChatGPT&lt;/code&gt;接口反代使用。会话额度消耗为&lt;code&gt;4&lt;/code&gt;倍，无并发限制。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;whitelist&lt;/code&gt;邮箱数组指定哪些用户可以登录使用，用户名/密码登录受限制，各种Token登录受限。内置tokens不受限。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;whitelist&lt;/code&gt;为&lt;code&gt;null&lt;/code&gt;则不限制，为空数组&lt;code&gt;[]&lt;/code&gt;则限制所有账号，同样内置tokens不受限。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;tokens 配置&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;以下是一个示例&lt;code&gt;tokens.json&lt;/code&gt;文件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;test-1&#34;: {&#xA;    &#34;token&#34;: &#34;access token / session token / refresh token&#34;,&#xA;    &#34;shared&#34;: true,&#xA;    &#34;show_user_info&#34;: false&#xA;  },&#xA;  &#34;test-2&#34;: {&#xA;    &#34;token&#34;: &#34;access token / session token / refresh token&#34;,&#xA;    &#34;shared&#34;: true,&#xA;    &#34;show_user_info&#34;: true,&#xA;    &#34;plus&#34;: true&#xA;  },&#xA;  &#34;test2&#34;: {&#xA;    &#34;token&#34;: &#34;access token / session token / refresh token / share token&#34;,&#xA;    &#34;password&#34;: &#34;12345&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;token&lt;/code&gt;支持示例文件中所写的所有类型。&lt;code&gt;session token&lt;/code&gt;和&lt;code&gt;refresh token&lt;/code&gt;可自动刷新。&lt;/li&gt; &#xA; &lt;li&gt;每个key被称为&lt;code&gt;token key&lt;/code&gt;，可在登录框作用户名输入。如上：&lt;code&gt;test-1&lt;/code&gt;、&lt;code&gt;test-2&lt;/code&gt;等。&lt;/li&gt; &#xA; &lt;li&gt;如果设置了&lt;code&gt;password&lt;/code&gt;则输入完&lt;code&gt;token key&lt;/code&gt;进入输入密码页面输入匹配。&lt;/li&gt; &#xA; &lt;li&gt;如果设置&lt;code&gt;shared&lt;/code&gt;为&lt;code&gt;true&lt;/code&gt;，则这个账号会出现在&lt;code&gt;/shared.html&lt;/code&gt;中，登录页面会出现它的链接。&lt;/li&gt; &#xA; &lt;li&gt;如果设置&lt;code&gt;shared&lt;/code&gt;为&lt;code&gt;true&lt;/code&gt;，则这个账号不能再在用户名登录框进行登录。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/shared.html&lt;/code&gt;中的账号和共享站功能相同，可以自行设置隔离密码进行会话隔离。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;plus&lt;/code&gt;用来标识&lt;code&gt;/shared.html&lt;/code&gt;上账号是否有金光，没有其他作用。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;show_user_info&lt;/code&gt;表示&lt;code&gt;/shared.html&lt;/code&gt;共享时是否显示账号邮箱信息，GPTs建议开启。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;设置接口&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;必须先在&lt;code&gt;config.json&lt;/code&gt;中设置&lt;code&gt;setup_password&lt;/code&gt;为非空！&lt;/li&gt; &#xA; &lt;li&gt;热更新&lt;code&gt;config&lt;/code&gt;、&lt;code&gt;tokens&lt;/code&gt;和&lt;code&gt;license&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -H &#34;Authorization: Bearer &amp;lt;setup_password&amp;gt;&#34; -X POST &#34;&amp;lt;Base URL&amp;gt;/setup/reload&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;关于 license.jwt文件&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在这里获取：&lt;a href=&#34;https://dash.pandoranext.com&#34;&gt;https://dash.pandoranext.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;没有固定IP的情况&lt;/strong&gt;，IP变动后在上述服务重新拉取授权即可。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PHP&lt;/code&gt;是世界上最好的编程语言。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;贡献者们&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;感谢所有让这个项目变得更好的贡献者们！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pandora-next/deploy/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=pandora-next/deploy&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star历史&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=pandora-next/deploy&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>