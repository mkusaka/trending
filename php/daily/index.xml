<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub PHP Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-16T01:41:50Z</updated>
  <subtitle>Daily Trending of PHP in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>inertiajs/inertia</title>
    <updated>2023-01-16T01:41:50Z</updated>
    <id>tag:github.com,2023-01-16:/inertiajs/inertia</id>
    <link href="https://github.com/inertiajs/inertia" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Inertia.js lets you quickly build modern single-page React, Vue and Svelte apps using classic server-side routing and controllers.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://inertiajs.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/inertiajs/inertia/master/.github/LOGO.png&#34; alt=&#34;Inertia.js&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Inertia.js lets you quickly build modern single-page React, Vue and Svelte apps using classic server-side routing and controllers. Find full documentation at &lt;a href=&#34;https://inertiajs.com/&#34;&gt;inertiajs.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re interested in contributing to Inertia.js, please read our &lt;a href=&#34;https://github.com/inertiajs/inertia/raw/master/.github/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;A huge thanks to all &lt;a href=&#34;https://inertiajs.com/sponsors&#34;&gt;our sponsors&lt;/a&gt; who help push Inertia.js development forward! In particular, we&#39;d like to say a special thank you to our partners:&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://forge.laravel.com&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/inertiajs/inertia/master/.github/sponsors/forge.svg?sanitize=true&#34; width=&#34;150&#34; alt=&#34;Laravel Forge&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to become a sponsor, please &lt;a href=&#34;https://inertiajs.com/sponsors&#34;&gt;see here&lt;/a&gt; for more information. ðŸ’œ&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>spatie/laravel-deleted-models</title>
    <updated>2023-01-16T01:41:50Z</updated>
    <id>tag:github.com,2023-01-16:/spatie/laravel-deleted-models</id>
    <link href="https://github.com/spatie/laravel-deleted-models" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automatically copy deleted records to a separate table&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Automatically copy deleted records to a separate table&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/spatie/laravel-deleted-models&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/v/spatie/laravel-deleted-models.svg?style=flat-square&#34; alt=&#34;Latest Version on Packagist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/spatie/laravel-deleted-models/actions?query=workflow%3Arun-tests+branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/spatie/laravel-deleted-models/run-tests.yml?branch=main&amp;amp;label=tests&amp;amp;style=flat-square&#34; alt=&#34;GitHub Tests Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/spatie/laravel-deleted-models/actions?query=workflow%3A%22Fix+PHP+code+style+issues%22+branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/spatie/laravel-deleted-models/fix-php-code-style-issues.yml?branch=main&amp;amp;label=code%20style&amp;amp;style=flat-square&#34; alt=&#34;GitHub Code Style Action Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/spatie/laravel-deleted-models&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/dt/spatie/laravel-deleted-models.svg?style=flat-square&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;When deleting an Eloquent model, this package will copy the attributes of that model to a new table called &lt;code&gt;deleted_models&lt;/code&gt;. You can view this as a sort of &#34;Recycle bin for models&#34;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$blogPost = BlogPost::find(5); // an Eloquent model&#xA;&#xA;$blogPost-&amp;gt;delete(); // values will be copied to the `deleted_models` table.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To restore a previous model you can call &lt;code&gt;restore&lt;/code&gt; and pass the id.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$blogPost = Blogpost::restore(5); // $blogPost will be restored and returned&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This way of preserving information when deleting can be seen as an alternative to soft deletes. You can read more on the trade-offs &lt;a href=&#34;https://brandur.org/fragments/deleted-record-insert&#34;&gt;in this blog post&lt;/a&gt; and &lt;a href=&#34;https://brandur.org/soft-deletion&#34;&gt;this one&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support us&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://spatie.be/github-ad-click/laravel-deleted-models&#34;&gt;&lt;img src=&#34;https://github-ads.s3.eu-central-1.amazonaws.com/laravel-deleted-models.jpg?t=1&#34; width=&#34;419px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We invest a lot of resources into creating &lt;a href=&#34;https://spatie.be/open-source&#34;&gt;best in class open source packages&lt;/a&gt;. You can support us by &lt;a href=&#34;https://spatie.be/open-source/support-us&#34;&gt;buying one of our paid products&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You&#39;ll find our address on &lt;a href=&#34;https://spatie.be/about-us&#34;&gt;our contact page&lt;/a&gt;. We publish all received postcards on &lt;a href=&#34;https://spatie.be/open-source/postcards&#34;&gt;our virtual postcard wall&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package via composer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require spatie/laravel-deleted-models&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To create the &lt;code&gt;deleted_models&lt;/code&gt; table, you can publish and run the migrations with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=&#34;deleted-models-migrations&#34;&#xA;php artisan migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, you can publish the config file with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan vendor:publish --tag=&#34;deleted-models-config&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is the contents of the published config file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;return [&#xA;    /*&#xA;     * The model uses to store deleted models.&#xA;     */&#xA;    &#39;model&#39; =&amp;gt; Spatie\DeletedModels\Models\DeletedModel::class,&#xA;&#xA;    /*&#xA;     * After this amount of days, the records in `deleted_models` will be deleted&#xA;     *&#xA;     * This functionality uses Laravel&#39;s native pruning feature.&#xA;     */&#xA;    &#39;prune_after_days&#39; =&amp;gt; 365,&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The pruning of the &lt;code&gt;deleted_models&lt;/code&gt; table depends on Laravel&#39;s native pruning feature. Don&#39;t forget to schedule the &lt;code&gt;model:prune&lt;/code&gt; as instructed &lt;a href=&#34;https://laravel.com/docs/9.x/eloquent#pruning-models&#34;&gt;in Laravel&#39;s docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$schedule-&amp;gt;command(&#39;model:prune&#39;, [&#xA;    &#39;--model&#39; =&amp;gt; [\Spatie\DeletedModels\Models\DeletedModel::class],&#xA;])-&amp;gt;daily();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You should add the &lt;code&gt;KeepsDeletedModels&lt;/code&gt; trait to all models whose attributes should be written to &lt;code&gt;deleted_models&lt;/code&gt; whenever the model is deleted.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Illuminate\Database\Eloquent\Model;&#xA;use Spatie\DeletedModels\Models\Concerns\KeepsDeletedModels;&#xA;&#xA;class BlogPost extends Model&#xA;{&#xA;    use KeepsDeletedModels;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With this in place, the attributes will be written to &lt;code&gt;deleted_models&lt;/code&gt; when the model is deleted.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$blogPost = BlogPost::find(5);&#xA;&#xA;$blogPost-&amp;gt;delete(); // values will be copied to the `deleted_models` table.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To restore a previous model you can call &lt;code&gt;restore&lt;/code&gt; and pass the id.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$blogPost = Blogpost::restore(5); // $blogPost will be restored and returned&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the model to be restored can&#39;t be found in the &lt;code&gt;deleted_models&lt;/code&gt; table, a &lt;code&gt;Spatie\DeletedModels\Exceptions\NoModelFoundToRestore&lt;/code&gt; exception will be thrown.&lt;/p&gt; &#xA;&lt;h3&gt;Restoring without saving&lt;/h3&gt; &#xA;&lt;p&gt;To restore in memory, without actually saving it, you can call &lt;code&gt;makeRestored&lt;/code&gt;. Keep in mind that calling this method will also remove the record in the &lt;code&gt;deleted_models_table&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// $blogPost will be return, but it is not saved in the db yet&#xA;$blogPost = Blogpost::makeRestored($id); &#xA;&#xA;$blogPost-&amp;gt;save();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the model to be restored can&#39;t be found in the &lt;code&gt;deleted_models&lt;/code&gt; table, &lt;code&gt;null&lt;/code&gt; will be returned by &lt;code&gt;makeRestored&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Restoring without emitting events&lt;/h3&gt; &#xA;&lt;p&gt;By default, the &lt;code&gt;Spatie\DeletedModels\Events\RestoringDeletedModelEvent&lt;/code&gt; and &lt;code&gt;Spatie\DeletedModels\Events\DeletedModelEvent&lt;/code&gt; will be dispatched when calling &lt;code&gt;restore&lt;/code&gt; on a model.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t want these events to be dispatched, call &lt;code&gt;restoreQuietly&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;BlogPost::restoreQuietly(); // no events will be dispatched&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customizing the restore process&lt;/h3&gt; &#xA;&lt;p&gt;If you need to run some logic to before and after restoring a model, you can implement &lt;code&gt;beforeRestoringModel&lt;/code&gt; and &lt;code&gt;afterRestoringModel&lt;/code&gt; on your model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Illuminate\Database\Eloquent\Model;&#xA;use Spatie\DeletedModels\Models\Concerns\KeepsDeletedModels;&#xA;&#xA;class BlogPost extends Model&#xA;{&#xA;    use KeepsDeletedModels;&#xA;    &#xA;    public static function beforeRestoringModel(DeletedModel $deletedModel): void&#xA;    {&#xA;        // this will be executed right before restoring a model&#xA;    }&#xA;&#xA;    public static function afterRestoringModel(&#xA;        Model $restoredMode,&#xA;        DeletedModel $deletedModel&#xA;    ): void&#xA;    {&#xA;        // this will be executed right after restoring a model&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To determine which attributes and values should be kept in &lt;code&gt;deleted_models&lt;/code&gt;, you can implement &lt;code&gt;attributesToKeep&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Illuminate\Database\Eloquent\Model;&#xA;use Spatie\DeletedModels\Models\Concerns\KeepsDeletedModels;&#xA;&#xA;class BlogPost extends Model&#xA;{&#xA;    use KeepsDeletedModels;&#xA;    &#xA;    public function attributesToKeep(): array&#xA;    {&#xA;        // here you can customize which values should be kept. This is&#xA;        // the default implementation.&#xA;        &#xA;        return $this-&amp;gt;toArray();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pruning deleted models&lt;/h3&gt; &#xA;&lt;p&gt;After a while, the &lt;code&gt;deleted_models&lt;/code&gt; table can become large. The &lt;code&gt;DeletedModel&lt;/code&gt; implements &lt;a href=&#34;https://laravel.com/docs/9.x/eloquent#pruning-models&#34;&gt;Laravel&#39;s native &lt;code&gt;MassPrunable&lt;/code&gt; trait&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can configure the number of days records in the &lt;code&gt;deleted_models&lt;/code&gt; will be pruned in the &lt;code&gt;prune_after_days&lt;/code&gt; key of the &lt;code&gt;deleted-models.php&lt;/code&gt; config file. By default, all deleted models will be kept for 365 days.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget to schedule the &lt;code&gt;model:prune&lt;/code&gt; as instructed &lt;a href=&#34;https://laravel.com/docs/9.x/eloquent#pruning-models&#34;&gt;in Laravel&#39;s docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Low-level customization of the delete and restoration process&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;DeletedModel&lt;/code&gt; model implements most logic to keep and restore deleted models. You can modify any of the behaviour by creating a class that extends &lt;code&gt;Spatie\DeletedModels\Models\DeletedModel&lt;/code&gt;. You should put the class name of your extended class in the &lt;code&gt;model&lt;/code&gt; key of the &lt;code&gt;deleted-models.php&lt;/code&gt; config file.&lt;/p&gt; &#xA;&lt;p&gt;With this in place you can override any of the methods in &lt;code&gt;DeletedModel&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Spatie\DeletedModels\Models\DeletedModel;&#xA;&#xA;class CustomDeletedModel extends DeletedModel&#xA;{&#xA;    protected function makeRestoredModel(string $modelClass): mixed&#xA;    {&#xA;        // add custom logic&#xA;    &#xA;        return parent::makeRestoredModel($modelClass)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/laravel-deleted-models/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information on what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/laravel-deleted-models/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;Please review &lt;a href=&#34;https://raw.githubusercontent.com/spatie/security/policy&#34;&gt;our security policy&lt;/a&gt; on how to report security vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/freekmurze&#34;&gt;Freek Van der Herten&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/spatie/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please see &lt;a href=&#34;https://raw.githubusercontent.com/spatie/laravel-deleted-models/main/LICENSE.md&#34;&gt;License File&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>