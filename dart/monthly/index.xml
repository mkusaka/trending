<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-31T02:35:30Z</updated>
  <subtitle>Monthly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rrousselGit/riverpod</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/rrousselGit/riverpod</id>
    <link href="https://github.com/rrousselGit/riverpod" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple way to access state while robust and testable.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/rrousselGit/river_pod/actions&#34;&gt;&lt;img src=&#34;https://github.com/rrousselGit/river_pod/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/rrousselgit/river_pod&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/rrousselgit/river_pod/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rrousselgit/river_pod&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/rrousselgit/river_pod.svg?style=flat&amp;amp;logo=github&amp;amp;colorB=deeppink&amp;amp;label=stars&#34; alt=&#34;Star on Github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-purple.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/Bbumvej&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/765557403865186374.svg?logo=discord&amp;amp;color=blue&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.netlify.com&#34;&gt; &lt;img src=&#34;https://www.netlify.com/img/global/badges/netlify-color-accent.svg?sanitize=true&#34; alt=&#34;Deploys by Netlify&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/rrousselGit/river_pod/raw/master/resources/icon/Facebook%20Cover%20A.png?raw=true&#34; width=&#34;100%&#34; alt=&#34;Riverpod&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;A state-management library that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;catches programming errors at compile time rather than at runtime&lt;/li&gt; &#xA; &lt;li&gt;removes nesting for listening/combining objects&lt;/li&gt; &#xA; &lt;li&gt;ensures that the code is testable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;riverpod&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/riverpod&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/riverpod.svg?label=riverpod&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;flutter_riverpod&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_riverpod&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/riverpod.svg?label=flutter_riverpod&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hooks_riverpod&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/hooks_riverpod&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/riverpod.svg?label=hooks_riverpod&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Welcome to &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;This project can be considered as a rewrite of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; to make improvements that would be otherwise impossible.&lt;/p&gt; &#xA;&lt;p&gt;For learning how to use &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;, see its documentation: &lt;a href=&#34;https://riverpod.dev&#34;&gt;https://riverpod.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Long story short:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare your providers as global variables:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final counterProvider = StateNotifierProvider((ref) {&#xA;  return Counter();&#xA;});&#xA;&#xA;class Counter extends StateNotifier&amp;lt;int&amp;gt; {&#xA;  Counter(): super(0);&#xA;&#xA;  void increment() =&amp;gt; state++;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use them inside your widgets in a compile time safe way. No runtime exceptions!&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Example extends ConsumerWidget {&#xA;  @override&#xA;  Widget build(BuildContext context, WidgetRef ref) {&#xA;    final count = ref.watch(counterProvider);&#xA;    return Text(count.toString());&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#FAQ&#34;&gt;FAQ&lt;/a&gt; if you have questions about what this means for &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Migration&lt;/h2&gt; &#xA;&lt;p&gt;With the release of version 1.0.0, the syntax for interacting with providers changed.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://riverpod.dev/docs/migration/0.14.0_to_1.0.0/&#34;&gt;the migration guide&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;h2&gt;Index&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#migration&#34;&gt;Migration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#index&#34;&gt;Index&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#faq&#34;&gt;FAQ&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#why-another-project-when-provider-already-exists&#34;&gt;Why another project when provider already exists?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#is-it-safe-to-use-in-production&#34;&gt;Is it safe to use in production?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#will-this-get-merged-with-provider-at-some-point&#34;&gt;Will this get merged with provider at some point?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#will-provider-be-deprecatedstop-being-supported&#34;&gt;Will provider be deprecated/stop being supported?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;If &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; is a simplification of &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s, then &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; is a reimplementation of &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s from scratch.&lt;/p&gt; &#xA;&lt;p&gt;It is very similar to &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; in principle, but also has major differences as an attempt to fix the common problems that &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; face.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; has multiple goals. First, it inherits the goals of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Being able to safely create, observe and dispose states without having to worry about losing the state on widget rebuild.&lt;/li&gt; &#xA; &lt;li&gt;Making our objects visible in Flutter&#39;s devtool by default.&lt;/li&gt; &#xA; &lt;li&gt;Testable and composable&lt;/li&gt; &#xA; &lt;li&gt;Improve the readability of &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s when we have multiple of them (which would naturally lead to a deeply nested widget tree).&lt;/li&gt; &#xA; &lt;li&gt;Make apps more scalable with a unidirectional data flow.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;From there, &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; goes a few steps beyond:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reading objects is now &lt;strong&gt;compile-safe&lt;/strong&gt;. No more runtime exception.&lt;/li&gt; &#xA; &lt;li&gt;It makes the &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; pattern more flexible, which allows supporting commonly requested features like: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Being able to have multiple providers of the same type.&lt;/li&gt; &#xA;   &lt;li&gt;Disposing the state of a provider when it is no longer used.&lt;/li&gt; &#xA;   &lt;li&gt;Have computed states&lt;/li&gt; &#xA;   &lt;li&gt;Making a provider private.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Simplifies complex object graphs. It is easier to depend on asynchronous state.&lt;/li&gt; &#xA; &lt;li&gt;Makes the pattern independent from Flutter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These are achieved by no longer using &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s. Instead, &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; implements its own mechanism that works in a similar fashion.&lt;/p&gt; &#xA;&lt;p&gt;For learning how to use &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;, see its documentation: &lt;a href=&#34;https://riverpod.dev&#34;&gt;https://riverpod.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcomed!&lt;/p&gt; &#xA;&lt;p&gt;Here is a curated list of how you can help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Report bugs and scenarios that are difficult to implement&lt;/li&gt; &#xA; &lt;li&gt;Report parts of the documentation that are unclear&lt;/li&gt; &#xA; &lt;li&gt;Fix typos/grammar mistakes&lt;/li&gt; &#xA; &lt;li&gt;Update the documentation / add examples&lt;/li&gt; &#xA; &lt;li&gt;Implement new features by making a pull-request&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Why another project when provider already exists?&lt;/h3&gt; &#xA;&lt;p&gt;While &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; is largely used and well accepted by the community, it is not perfect either.&lt;/p&gt; &#xA;&lt;p&gt;People regularly file issues or ask questions about some problems they face, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Why do I have a &lt;code&gt;ProviderNotFoundException&lt;/code&gt;?&lt;/li&gt; &#xA; &lt;li&gt;How can I automatically dispose my state when not used anymore?&lt;/li&gt; &#xA; &lt;li&gt;How to make a provider that depends on other (potentially complex) providers?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These are legitimate problems, and I believe that something can be improved to fix those.&lt;/p&gt; &#xA;&lt;p&gt;The issue is, these problems are deeply rooted in how &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; works, and fixing those problems is likely impossible without drastic changes to the mechanism of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In a way, if &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; is a candle then &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; is a lightbulb. They have very similar usages, but we cannot create a lightbulb by improving our candle.&lt;/p&gt; &#xA;&lt;h3&gt;Is it safe to use in production?&lt;/h3&gt; &#xA;&lt;p&gt;Yes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; is stable and actively maintained.&lt;/p&gt; &#xA;&lt;h3&gt;Will this get merged with provider at some point?&lt;/h3&gt; &#xA;&lt;p&gt;No. At least not until it is proven that the community likes &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; and that it doesn&#39;t cause more problems than it solves.&lt;/p&gt; &#xA;&lt;p&gt;While &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; and this project have a lot in common, they do have some major differences. Differences big enough that it would be a large breaking change for users of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; to migrate &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Considering that, separating both projects initially sounds like a better compromise.&lt;/p&gt; &#xA;&lt;h3&gt;Will provider be deprecated/stop being supported?&lt;/h3&gt; &#xA;&lt;p&gt;Not in the short term, no.&lt;/p&gt; &#xA;&lt;p&gt;However, a migration tool is planned to help assist migration from provider to &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/freezed/master/sponsorkit/sponsors.svg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rrousselGit/freezed/master/sponsorkit/sponsors.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>KRTirtho/spotube</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/KRTirtho/spotube</id>
    <link href="https://github.com/KRTirtho/spotube" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A lightweight free Spotify 🎧 crossplatform-client 🖥📱 which handles playback manually, streams music using Youtube &amp; no Spotify premium account is needed 😱&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KRTirtho/spotube/master/assets/spotube_banner.png&#34; alt=&#34;Spotube&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/KRTirtho/spotube/actions/workflows/flutter-build.yml&#34;&gt; &lt;img alt=&#34;GitHub Action Status&#34; src=&#34;https://img.shields.io/github/workflow/status/KRTirtho/spotube/Flutter%20Cross%20Build/build?color=%2316ba58&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/KRTirtho/Spotube/releases&#34;&gt; &lt;img alt=&#34;GitHub release&#34; src=&#34;https://img.shields.io/github/v/release/KRTirtho/spotube?color=%2316ba58&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/KRTirtho/spotube/master/LICENSE&#34;&gt; &lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/aur/license/spotube-bin?color=%2316ba58&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/KRTirtho&#34;&gt; &lt;img alt=&#34;Maintainer&#34; src=&#34;https://img.shields.io/badge/Maintainer-KRTirtho-%2316ba58?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://opencollective.com/spotube&#34;&gt; &lt;img alt=&#34;Open Collective backers and sponsors&#34; src=&#34;https://img.shields.io/opencollective/all/spotube?color=%2316ba58&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Spotube is a &lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt; based lightweight spotify client. It utilizes the power of Spotify &amp;amp; Youtube&#39;s public API &amp;amp; creates a hazardless, performant &amp;amp; resource friendly User Experience&lt;/p&gt; &#xA;&lt;h4&gt;&lt;p align=&#34;center&#34;&gt;Desktop&lt;/p&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KRTirtho/spotube/master/assets/spotube-screenshot.png&#34; alt=&#34;Application Desktop Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;p align=&#34;center&#34;&gt;Mobile&lt;/p&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KRTirtho/spotube/master/assets/mobile-screenshots/mobile-combined.jpg&#34; alt=&#34;Application Mobile Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;Following are the features that currently spotube offers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open Source&lt;/li&gt; &#xA; &lt;li&gt;Anonymous/Guest Login&lt;/li&gt; &#xA; &lt;li&gt;Cross platform&lt;/li&gt; &#xA; &lt;li&gt;No telemetry, diagnostics or user data collection&lt;/li&gt; &#xA; &lt;li&gt;Lightweight &amp;amp; resource friendly&lt;/li&gt; &#xA; &lt;li&gt;Native performance (Thanks to Flutter+Skia)&lt;/li&gt; &#xA; &lt;li&gt;Playback control is on user&#39;s machine instead of server based&lt;/li&gt; &#xA; &lt;li&gt;Small size &amp;amp; less data hungry&lt;/li&gt; &#xA; &lt;li&gt;No spotify or youtube ads since it uses all public &amp;amp; free APIs (But it&#39;s recommended to support the creators by watching/liking/subscribing to the artists youtube channel or add as favourite track in spotify. Mostly buying spotify premium is the best way to support their valuable creations)&lt;/li&gt; &#xA; &lt;li&gt;Synced Lyrics&lt;/li&gt; &#xA; &lt;li&gt;Downloadable track&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/spotube?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-spotube&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=327965&amp;amp;theme=dark&#34; alt=&#34;Spotube - A lightweight+free Spotify crossplatform-client made with flutter | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;I&#39;m always releasing newer versions of binary of the software each 2-3 month with minor changes &amp;amp; each 6-8 month with major changes. Grab the binaries&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Package/Installation Method&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/KRTirtho/spotube/releases/latest/download/Spotube-android-all-arch.apk&#34;&gt;&lt;img width=&#34;240&#34; alt=&#34;Android Download&#34; src=&#34;https://www.remcsteuben.com/sites/default/files/images/apkdaddy%20download.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Debian/Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/KRTirtho/spotube/releases/latest/download/Spotube-linux-x86_64.deb&#34;&gt;&lt;img width=&#34;240&#34; alt=&#34;Linux Debian/Ubuntu Download&#34; src=&#34;https://user-images.githubusercontent.com/61944859/169097994-e92aff78-fd75-4c93-b6e4-f072a4b5a7ed.png&#34;&gt;&lt;/a&gt; &lt;br&gt; Then run: &lt;code&gt;sudo apt install Spotube-linux-x86_64.deb&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Flatpak&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;flatpak install com.github.KRTirtho.Spotube&lt;/code&gt; &lt;br&gt; &lt;a href=&#34;https://flathub.org/apps/details/com.github.KRTirtho.Spotube&#34;&gt;&lt;img width=&#34;240&#34; alt=&#34;Download on Flathub&#34; src=&#34;https://flathub.org/assets/badges/flathub-badge-en.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arch/Manjaro&lt;/td&gt; &#xA;   &lt;td&gt;pamac: &lt;code&gt;pamac install spotube-bin&lt;/code&gt; &lt;br&gt; yay: &lt;code&gt;yay -Sy spotube-bin&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AppImage&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/KRTirtho/spotube/releases/latest/download/Spotube-linux-x86_64.AppImage&#34;&gt;&lt;img width=&#34;240&#34; alt=&#34;AppImage Download&#34; src=&#34;https://user-images.githubusercontent.com/61944859/169455015-13385466-8901-48fe-ba90-b62d58b0be64.png&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;strong&gt;Note&lt;/strong&gt;: AppImages require &lt;a href=&#34;https://github.com/TheAssassin/AppImageLauncher&#34;&gt;appimage-launcher&lt;/a&gt; to be installed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux (tarball)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/KRTirtho/spotube/releases/latest/download/Spotube-linux-x86_64.tar.xz&#34;&gt;&lt;img width=&#34;240&#34; alt=&#34;Tarball Download&#34; src=&#34;https://user-images.githubusercontent.com/61944859/169456985-e0ba1fd4-10e8-4cc0-ab94-337acc6e0295.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/KRTirtho/spotube/releases/latest/download/Spotube-windows-x86_64-setup.exe&#34;&gt;&lt;img width=&#34;240&#34; alt=&#34;Windows Download&#34; src=&#34;https://get.todoist.help/hc/article_attachments/4403191721234/WindowsButton.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows (Chocolatey)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;choco install spotube&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows (WinGet)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;winget install --id KRTirtho.Spotube&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MacOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/KRTirtho/spotube/releases/latest/download/Spotube-macos-x86_64.dmg&#34;&gt;&lt;img width=&#34;240&#34; alt=&#34;MacOS Download&#34; src=&#34;https://reachify.io/wp-content/uploads/2018/09/mac-download-button-1.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note!:&lt;/strong&gt; If you don&#39;t understand this download table. You can read &lt;a href=&#34;https://github.com/KRTirtho/spotube/wiki/Installation-Instrcutions&#34;&gt;installation instructions&lt;/a&gt; from the wiki&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Nightly Builds&lt;/h2&gt; &#xA;&lt;p&gt;Get the latest nightly builds of Spotube &lt;a href=&#34;https://nightly.link/KRTirtho/spotube/workflows/flutter-build/build&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Optional Configurations&lt;/h2&gt; &#xA;&lt;h3&gt;Login with &lt;b&gt;Spotify&lt;/b&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You need a spotify account &amp;amp; a developer app for&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;clientId&lt;/li&gt; &#xA; &lt;li&gt;clientSecret&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Grab credentials:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;a href=&#34;https://developer.spotify.com/dashboard/login&#34;&gt;https://developer.spotify.com/dashboard/login&lt;/a&gt; &amp;amp; login with your spotify account (Skip if you&#39;re logged in) &lt;img width=&#34;480&#34; alt=&#34;Step 1&#34; src=&#34;https://user-images.githubusercontent.com/61944859/111762106-d1d37680-88ca-11eb-9884-ec7a40c0dd27.png&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create an web app for Spotify Public API&lt;br&gt; &lt;img width=&#34;480&#34; alt=&#34;step 2&#34; src=&#34;https://user-images.githubusercontent.com/61944859/111762507-473f4700-88cb-11eb-91f3-d480e9584883.png&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;MOST IMPORTANT:&lt;/strong&gt; Give the app a name &amp;amp; description. Then Edit settings &amp;amp; add &lt;code&gt;http://localhost:4304/auth/spotify/callback&lt;/code&gt; as &lt;strong&gt;Redirect URI&lt;/strong&gt; for the app. Its important for authenticating&lt;br&gt; &lt;img width=&#34;720&#34; alt=&#34;setp-3&#34; src=&#34;https://user-images.githubusercontent.com/61944859/111768971-d308a180-88d2-11eb-9108-3e7444cef049.png&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click on &lt;strong&gt;SHOW CLIENT SECRET&lt;/strong&gt; to reveal the &lt;strong&gt;clientSecret&lt;/strong&gt;. Then copy the &lt;strong&gt;clientID&lt;/strong&gt;, &lt;strong&gt;clientSecret&lt;/strong&gt; &amp;amp; paste in the &lt;strong&gt;Spotube&#39;s&lt;/strong&gt; respective fields&lt;br&gt; &lt;img width=&#34;480&#34; alt=&#34;step-4&#34; src=&#34;https://user-images.githubusercontent.com/61944859/111769501-7fe31e80-88d3-11eb-8fc1-f3655dbd4711.png&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setup &lt;b&gt;Genius Lyrics&lt;/b&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Signup/Login into &lt;a href=&#34;https://genius.com/signup&#34;&gt;genius&lt;/a&gt; for &lt;strong&gt;lyrics&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go To &lt;a href=&#34;https://genius.com/api-clients/new&#34;&gt;Genius Developer Portal&lt;/a&gt; for creating an API client&lt;br&gt; &lt;img width=&#34;480&#34; alt=&#34;Step 2&#34; src=&#34;https://user-images.githubusercontent.com/61944859/158823216-b4942731-c4c5-46c8-8b60-82a372b51cc5.png&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate &amp;amp; copy access token&lt;br&gt; &lt;img width=&#34;480&#34; alt=&#34;Step 3&#34; src=&#34;https://user-images.githubusercontent.com/61944859/158822817-f04da060-3094-4a3b-8ace-a936d0cda8db.png&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Paste the copied access token in Spotube&#39;s Settings&lt;br&gt; &lt;img width=&#34;480&#34; alt=&#34;Step 4&#34; src=&#34;https://user-images.githubusercontent.com/61944859/158823984-17f08534-5c92-41bc-918a-23194aad00f5.png&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note!&lt;/strong&gt;: No personal data or any kind of sensitive information won&#39;t be collected from spotify. Don&#39;t believe? See the code for yourself&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;TODO:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Compile, Debug &amp;amp; Build for &lt;strong&gt;MacOS&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add support for show Lyric of currently playing track&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Track download&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support for playing/streaming podcasts/shows&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Artist, User &amp;amp; Album pages&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Android Support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Building from source&lt;/h1&gt; &#xA;&lt;p&gt;You can find the details &lt;a href=&#34;https://raw.githubusercontent.com/KRTirtho/spotube/master/CONTRIBUTION.md#your-first-code-contribution&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Things that don&#39;t work&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shows &amp;amp; Podcasts aren&#39;t supported as it&#39;d require premium anyway&lt;/li&gt; &#xA; &lt;li&gt;OS Media Controls&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KRTirtho/spotube/master/LICENSE&#34;&gt;BSD-4-Clause&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bu why? You can learn about it &lt;a href=&#34;https://dev.to/krtirtho/choosing-open-source-license-wisely-1m3p&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Library/Plugin/Framework Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter&lt;/a&gt; - Flutter transforms the app development process. Build, test, and deploy beautiful mobile, web, desktop, and embedded apps from a single codebase&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linux.org/&#34;&gt;Linux&lt;/a&gt; - Linux is a family of open-source Unix-like operating systems based on the Linux kernel, an operating system kernel first released on September 17, 1991, by Linus Torvalds. Linux is typically packaged in a Linux distribution&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/&#34;&gt;AUR&lt;/a&gt; - AUR stands for Arch User Repository. It is a community-driven repository for Arch-based Linux distributions users&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flatpak.org/&#34;&gt;Flatpak&lt;/a&gt; - Flatpak is a utility for software deployment and package management for Linux&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rinukkusu/spotify-dart&#34;&gt;spotify (dart)&lt;/a&gt; - A dart library for interfacing with the Spotify API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ryanheise/just_audio/tree/master/just_audio&#34;&gt;just_audio&lt;/a&gt; - A feature-rich cross-platform audio player for Flutter that supports network audio streams too&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/harmonoid/libwinmedia&#34;&gt;libwinmedia&lt;/a&gt; - A cross-platform media playback library for C/C++ with good number of features (only Windows &amp;amp; Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Hexer10/youtube_explode_dart&#34;&gt;youtube_explode_dart&lt;/a&gt; - YoutubeExplode is a library that provides an interface to query metadata of YouTube videos, playlists and channels, as well as to resolve and download video streams and closed caption tracks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EdsonBueno/infinite_scroll_pagination&#34;&gt;infinite_scroll_pagination&lt;/a&gt; - Flutter package to help you lazily load and display pages of items as the user scrolls down your screen&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitsdojo/bitsdojo_window&#34;&gt;bitsdojo_window&lt;/a&gt; - A Flutter package that makes it easy to customize and work with your Flutter desktop app window on Windows, macOS and Linux&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leanflutter/hotkey_manager&#34;&gt;hotkey_manager&lt;/a&gt; - A flutter plugin that allow Flutter desktop apps to defines system/inapp wide hotkey&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jrsoftware.org/isinfo.php&#34;&gt;Inno Setup&lt;/a&gt; - Inno Setup is a free installer for Windows programs by Jordan Russell and Martijn Laan&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dart-lang/collection&#34;&gt;collection&lt;/a&gt; - The collection package for Dart contains a number of separate libraries with utility functions and classes that makes working with collections easier&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://riverpod.dev/&#34;&gt;flutter_riverpod&lt;/a&gt; - A Reactive Caching and Data-binding Framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rrousselGit/flutter_hooks&#34;&gt;flutter_hooks&lt;/a&gt; - React hooks for Flutter. Hooks are a new kind of object that manages a Widget life-cycles. They are used to increase code sharing between widgets and as a complete replacement for StatefulWidget&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://riverpod.dev/&#34;&gt;hooks_riverpod&lt;/a&gt; - Riverpod with hooks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/packages/tree/main/packages/go_router&#34;&gt;go_router&lt;/a&gt; - A declarative router for Flutter based on Navigation 2 supporting deep linking, data-driven routes and more&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/packages/tree/main/packages/palette_generator&#34;&gt;palette_generator&lt;/a&gt; - Flutter package for generating palette colors from a source image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ryanheise/audio_session&#34;&gt;audio_session&lt;/a&gt; - Sets the iOS audio session category and Android audio attributes for your app, and manages your app&#39;s audio focus, mixing and ducking behaviour.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leisim/logger&#34;&gt;logger&lt;/a&gt; - Small, easy to use and extensible logger which prints beautiful logs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons&#34;&gt;flutter_launcher_icons&lt;/a&gt; - A package which simplifies the task of updating your Flutter app&#39;s launcher icon.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/baseflow/flutter-permission-handler&#34;&gt;permission_handler&lt;/a&gt; - Permission plugin for Flutter. This plugin provides a cross-platform (iOS, Android) API to request and check permissions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MarcelGarus/marquee&#34;&gt;marquee&lt;/a&gt; - ⏩ A Flutter widget that scrolls text infinitely. Provides many customizations including custom scroll directions, durations, curves as well as pauses after every round&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quire-io/scroll-to-index&#34;&gt;scroll_to_index&lt;/a&gt; - scroll to index with fixed/variable row height inside Flutter scrollable widget&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/tree/main/packages/&#34;&gt;package_info_plus&lt;/a&gt; - This Flutter plugin provides an API for querying information about an application package.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Social handlers&lt;/h1&gt; &#xA;&lt;p&gt;Follow me on &lt;a href=&#34;https://twitter.com/@krtirtho&#34;&gt;Twitter&lt;/a&gt; for newer updates about this application&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;© 2022 Spotube&lt;/p&gt; &#xA;&lt;!-- Variables/Text References --&gt;</summary>
  </entry>
  <entry>
    <title>flutter/samples</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/flutter/samples</id>
    <link href="https://github.com/flutter/samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of Flutter examples and demos&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter samples&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flutter/samples/actions?workflow=Master%20Branch%20CI&#34;&gt;&lt;img src=&#34;https://github.com/flutter/samples/workflows/Master%20Branch%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A collection of open source samples that illustrate best practices for &lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Visual samples index&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to browse through the samples in this repo (as well as a few others!) is the &lt;a href=&#34;https://flutter.github.io/samples&#34;&gt;visual samples index&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tip: minimize download size&lt;/h2&gt; &#xA;&lt;p&gt;As this repository is quite big, you can use svn to download a single example. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;svn co https://github.com/flutter/samples/trunk/provider_shopper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use a &lt;a href=&#34;https://github.blog/2020-12-21-get-up-to-speed-with-partial-clone-and-shallow-clone/&#34;&gt;partial clone&lt;/a&gt; to skip blob objects that aren&#39;t currently checked out, while including the full commit history:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --filter=blob:none https://github.com/flutter/samples.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Interested in contributing?&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/flutter/samples/main/CONTRIBUTING.md&#34;&gt;contributor&#39;s guide&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Questions or issues?&lt;/h2&gt; &#xA;&lt;p&gt;If you have a general question about one of these samples or how to adapt its techniques for one of your own apps, try one of these resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/flutter-dev&#34;&gt;The FlutterDev Google Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitter.im/flutter/flutter&#34;&gt;The Flutter Gitter channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/flutter&#34;&gt;StackOverflow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you run into a bug in one of the samples, please file an issue in the &lt;a href=&#34;https://github.com/flutter/samples/issues&#34;&gt;&lt;code&gt;flutter/samples&lt;/code&gt; issue tracker&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>imaNNeoFighT/fl_chart</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/imaNNeoFighT/fl_chart</id>
    <link href="https://github.com/imaNNeoFighT/fl_chart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FL Chart is a highly customizable Flutter chart library that supports Line Chart, Bar Chart, Pie Chart, Scatter Chart, and Radar Chart.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;💥 FL Chart is a highly customizable Flutter chart library that supports Line Chart, Bar Chart, Pie Chart, Scatter Chart, and Radar Chart. 💥&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/fl_chart&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/fl_chart.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/imaNNeoFighT/fl_chart&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/imaNNeoFighT/fl_chart/branch/master/graph/badge.svg?token=XBhsIZBbZG&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Solido/awesome-flutter#charts&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/awesome-flutter-blue.svg?longCache=true&#34; alt=&#34;Awesome Flutter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/fl_chart&#34;&gt;&lt;img alt=&#34;GitHub Repo stars&#34; src=&#34;https://img.shields.io/github/stars/imaNNeoFighT/fl_chart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/graphs/contributors&#34;&gt;&lt;img alt=&#34;GitHub contributors&#34; src=&#34;https://img.shields.io/github/contributors/imaNNeoFighT/fl_chart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed-raw/imaNNeoFighT/fl_chart&#34; alt=&#34;GitHub closed issues&#34;&gt;&lt;/a&gt; &lt;span class=&#34;badge-buymeacoffee&#34;&gt; &lt;a href=&#34;https://www.buymeacoffee.com/fl_chart&#34; title=&#34;Donate to this project using Buy Me A Coffee&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/buy%20me%20a%20coffee-donate-yellow.svg?sanitize=true&#34; alt=&#34;Buy Me A Coffee donate button&#34;&gt;&lt;/a&gt; &lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/landing_logo.jpg&#34; alt=&#34;FL Chart Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Chart Types&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;LineChart&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;BarChart&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;PieChart&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/line_chart.md#sample-1-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/line_chart/line_chart_sample_1.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/line_chart.md#sample-2-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/line_chart/line_chart_sample_2.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/bar_chart.md#sample-1-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/bar_chart/bar_chart_sample_1.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/bar_chart.md#sample-2-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/bar_chart/bar_chart_sample_2.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/pie_chart.md#sample-1-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/pie_chart/pie_chart_sample_1.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/pie_chart.md#sample-2-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/pie_chart/pie_chart_sample_2.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/line_chart.md&#34;&gt;Read More&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/bar_chart.md&#34;&gt;Read More&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/pie_chart.md&#34;&gt;Read More&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;ScatterChart&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;RadarChart&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Coming Soon&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/scatter_chart.md#sample-1-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/scatter_chart/scatter_chart_sample_1.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/scatter_chart.md#sample-2-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/scatter_chart/scatter_chart_sample_2.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/radar_chart/radar_chart_sample_1.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/blank.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/blank.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/blank.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/scatter_chart.md&#34;&gt;Read More&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/radar_chart.md&#34;&gt;Read More&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Banner designed by &lt;a href=&#34;https://www.linkedin.com/in/soheilsaffar&#34;&gt;Soheil Saffar&lt;/a&gt;, and samples inspired from &lt;a href=&#34;https://dribbble.com/shots/5560237-Live-Graphs-XD&#34;&gt;David Kovalev&lt;/a&gt;, &lt;a href=&#34;https://dribbble.com/shots/1956890-Data-Stats&#34;&gt;Ricardo Salazar&lt;/a&gt;, &lt;a href=&#34;https://dribbble.com/shots/5425378-Mobile-Application-Dashboard-for-Stock-Platform&#34;&gt;Dmitro Petrenko&lt;/a&gt;, &lt;a href=&#34;https://dribbble.com/shots/6379476-Calories-Management-App&#34;&gt;Ghani Pradita&lt;/a&gt;, &lt;a href=&#34;https://www.uplabs.com/posts/chart-pie-chart-bar-chart&#34;&gt;MONUiXD&lt;/a&gt;. Thank you all!&lt;/p&gt; &#xA;&lt;h1&gt;Let&#39;s get started&lt;/h1&gt; &#xA;&lt;p&gt;First of all you need to add the &lt;code&gt;fl_chart&lt;/code&gt; in your project. In order to do that, follow &lt;a href=&#34;https://pub.dev/packages/fl_chart/install&#34;&gt;this guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then you need to read the docs. Start from &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/index.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We suggest you to check samples source code.&lt;/p&gt; &#xA;&lt;h5&gt;- You can read about the animation handling &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/handle_animations.md&#34;&gt;here&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Sample1&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Sample2&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Sample3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/line_chart.md#sample-1-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/line_chart/line_chart_sample_1_anim.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/line_chart.md#sample-2-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/line_chart/line_chart_sample_2_anim.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/bar_chart.md#sample-1-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/bar_chart/bar_chart_sample_1_anim.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Donation&lt;/h3&gt; &#xA;&lt;p&gt;Your donation &lt;strong&gt;motivates&lt;/strong&gt; me to work more on the &lt;strong&gt;fl_chart&lt;/strong&gt; and resolve more issues. You can &lt;a href=&#34;https://www.buymeacoffee.com/fl_chart&#34;&gt;buy me a coffee!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/fl_chart&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/buy_me_a_coffee.jpeg&#34; width=&#34;360&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or if you are a fan of crypto, you can donate me Bitcoins here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;1L7ghKdcmgydmUJAnmYmMaiVjT1LoP4a45&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;h5&gt;&lt;span&gt;🍺&lt;/span&gt; Pull requests are welcome!&lt;/h5&gt; &#xA;&lt;p&gt;Don&#39;t forget that &lt;code&gt;open-source&lt;/code&gt; makes no sense without contributors. No matter how big your changes are, it helps us a lot even it is a line of change.&lt;/p&gt; &#xA;&lt;p&gt;There might be a lot of grammar issues in the docs. It&#39;s a big help to us to fix them if you are fluent in English.&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;, which contains a guide for those who want to contribute to the FL Chart.&lt;/p&gt; &#xA;&lt;p&gt;Reporting bugs and issues are contribution too, yes it is.&lt;/p&gt; &#xA;&lt;h4&gt;Below are the people who has contributed to the FL Chart. We hope we have your picture here soon.&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/fl_chart/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gskinnerTeam/flutter-folio</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/gskinnerTeam/flutter-folio</id>
    <link href="https://github.com/gskinnerTeam/flutter-folio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A platform adaptive Flutter app for desktop, mobile and web.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://flutter.gskinner.com&#34;&gt;&lt;img src=&#34;https://flutter.gskinner.com/folio/assets/images/gskinnerxflutter.png?&#34; width=&#34;440px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://flutter.gskinner.com/folio/assets/images/git_promoimage.png?&#34; width=&#34;800px&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Flutter Folio&lt;/h1&gt; &#xA;&lt;p&gt;A demo app showcasing how Flutter can deliver a great multi-platform experience, targeting iOS, Android, MacOS, Windows, Linux, and web. Built by &lt;a href=&#34;https://gskinner.com&#34;&gt;gskinner&lt;/a&gt; in partnership with Google, Flutter Folio purposefully considers user expectations, input devices and idioms for each platform, ensuring it feels at home on every device.&lt;/p&gt; &#xA;&lt;p&gt;In addition to forking and reviewing the &lt;a href=&#34;https://raw.githubusercontent.com/gskinnerTeam/flutter-folio/master/LICENSE.md&#34;&gt;MIT licensed&lt;/a&gt; code available here, you can check out more information on the &lt;a href=&#34;https://flutter.gskinner.com&#34;&gt;Flutter Folio Showcase Website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;About gskinner&lt;/h3&gt; &#xA;&lt;p&gt;We exist to build innovative digital experiences for smart clients, and we love how easy Flutter makes that experience. Don&#39;t hesitate to &lt;a href=&#34;https://gskinner.com&#34;&gt;stop by our site&lt;/a&gt; to learn more about what we do. We&#39;d love to hear from you!&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://flutter.gskinner.com/folio/assets/images/git_dashes.png?&#34; width=&#34;800px&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Demo Builds&lt;/h3&gt; &#xA;&lt;p&gt;To preview the app you can download from the app store on your device by visiting: &lt;a href=&#34;https://flutter.gskinner.com/folio/#g-download&#34;&gt;https://flutter.gskinner.com/folio/#g-download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re new to Flutter the first thing you&#39;ll need is to follow the &lt;a href=&#34;https://flutter.dev/docs/get-started/install&#34;&gt;setup instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once Flutter is setup, you can use the latest &lt;code&gt;stable&lt;/code&gt; channel:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;flutter channel stable&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;flutter upgrade&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you&#39;re on &lt;code&gt;dev&lt;/code&gt; and desktop is enabled, you&#39;re ready to run the app:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter run -d windows&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter run -d macos&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter run -d linux&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter run -d android&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter run -d ios&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter run -d web&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you re-start your IDE, you should also see a new launch option for your current desktop platform.&lt;/p&gt; &#xA;&lt;h3&gt;Client Keys&lt;/h3&gt; &#xA;&lt;p&gt;This repo includes a set of Keys for Cloudinary and Firebase that are on the free pricing plans. Depending on traffic, these may reach their limit. If that happens, you will need to provide your own keys in order to run the app locally, those can be found in &lt;code&gt;AppKeys.dart&lt;/code&gt;. These limits should refresh each month, so your mileage will vary here.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;This application is released under the &lt;a href=&#34;https://raw.githubusercontent.com/gskinnerTeam/flutter-folio/master/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;. You can use the code for any purpose, including commercial projects.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>peng8350/flutter_pulltorefresh</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/peng8350/flutter_pulltorefresh</id>
    <link href="https://github.com/peng8350/flutter_pulltorefresh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a widget provided to the flutter scroll component drop-down refresh and pull up load.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flutter_pulltorefresh&lt;/h1&gt; &#xA;&lt;a href=&#34;https://pub.dev/packages/pull_to_refresh&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/v/pull_to_refresh.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://flutter.dev/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/flutter-%3E%3D%202.0.0-green.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;a widget provided to the flutter scroll component drop-down refresh and pull up load.support android and ios. If you are Chinese,click here(&lt;a href=&#34;https://github.com/peng8350/flutter_pulltorefresh/raw/master/README_CN.md&#34;&gt;中文文档&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;pull up load and pull down refresh&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s almost fit for all Scroll witgets,like GridView,ListView...&lt;/li&gt; &#xA; &lt;li&gt;provide global setting of default indicator and property&lt;/li&gt; &#xA; &lt;li&gt;provide some most common indicators&lt;/li&gt; &#xA; &lt;li&gt;Support Android and iOS default ScrollPhysics,the overScroll distance can be controlled,custom spring animate,damping,speed.&lt;/li&gt; &#xA; &lt;li&gt;horizontal and vertical refresh,support reverse ScrollView also(four direction)&lt;/li&gt; &#xA; &lt;li&gt;provide more refreshStyle: Behind,Follow,UnFollow,Front,provide more loadmore style&lt;/li&gt; &#xA; &lt;li&gt;Support twoLevel refresh,implments just like TaoBao twoLevel,Wechat TwoLevel&lt;/li&gt; &#xA; &lt;li&gt;enable link indicator which placing other place,just like Wechat FriendCircle refresh effect&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;add this line to pubspec.yaml&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;&#xA;   dependencies:&#xA;&#xA;    pull_to_refresh: ^2.0.0&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;import package&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;    import &#39;package:pull_to_refresh/pull_to_refresh.dart&#39;;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;simple example,&lt;em&gt;&lt;strong&gt;It must be noted here that ListView must be the child of SmartRefresher and cannot be separated from it. For detailed reasons, see &lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/child&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;&#xA;  List&amp;lt;String&amp;gt; items = [&#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;4&#34;, &#34;5&#34;, &#34;6&#34;, &#34;7&#34;, &#34;8&#34;];&#xA;  RefreshController _refreshController =&#xA;      RefreshController(initialRefresh: false);&#xA;&#xA;  void _onRefresh() async{&#xA;    // monitor network fetch&#xA;    await Future.delayed(Duration(milliseconds: 1000));&#xA;    // if failed,use refreshFailed()&#xA;    _refreshController.refreshCompleted();&#xA;  }&#xA;&#xA;  void _onLoading() async{&#xA;    // monitor network fetch&#xA;    await Future.delayed(Duration(milliseconds: 1000));&#xA;    // if failed,use loadFailed(),if no data return,use LoadNodata()&#xA;    items.add((items.length+1).toString());&#xA;    if(mounted)&#xA;    setState(() {&#xA;&#xA;    });&#xA;    _refreshController.loadComplete();&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      body: SmartRefresher(&#xA;        enablePullDown: true,&#xA;        enablePullUp: true,&#xA;        header: WaterDropHeader(),&#xA;        footer: CustomFooter(&#xA;          builder: (BuildContext context,LoadStatus mode){&#xA;            Widget body ;&#xA;            if(mode==LoadStatus.idle){&#xA;              body =  Text(&#34;pull up load&#34;);&#xA;            }&#xA;            else if(mode==LoadStatus.loading){&#xA;              body =  CupertinoActivityIndicator();&#xA;            }&#xA;            else if(mode == LoadStatus.failed){&#xA;              body = Text(&#34;Load Failed!Click retry!&#34;);&#xA;            }&#xA;            else if(mode == LoadStatus.canLoading){&#xA;                body = Text(&#34;release to load more&#34;);&#xA;            }&#xA;            else{&#xA;              body = Text(&#34;No more Data&#34;);&#xA;            }&#xA;            return Container(&#xA;              height: 55.0,&#xA;              child: Center(child:body),&#xA;            );&#xA;          },&#xA;        ),&#xA;        controller: _refreshController,&#xA;        onRefresh: _onRefresh,&#xA;        onLoading: _onLoading,&#xA;        child: ListView.builder(&#xA;          itemBuilder: (c, i) =&amp;gt; Card(child: Center(child: Text(items[i]))),&#xA;          itemExtent: 100.0,&#xA;          itemCount: items.length,&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;&#xA;  // from 1.5.0, it is not necessary to add this line&#xA;  //@override&#xA; // void dispose() {&#xA;    // TODO: implement dispose&#xA;  //  _refreshController.dispose();&#xA;  //  super.dispose();&#xA; // }&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The global configuration RefreshConfiguration, which configures all Smart Refresher representations under the subtree, is generally stored at the root of MaterialApp and is similar in usage to ScrollConfiguration. In addition, if one of your SmartRefresher behaves differently from the rest of the world, you can use RefreshConfiguration.copyAncestor() to copy attributes from your ancestor RefreshConfiguration and replace attributes that are not empty.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;    // Smart Refresher under the global configuration subtree, here are a few particularly important attributes&#xA;     RefreshConfiguration(&#xA;         headerBuilder: () =&amp;gt; WaterDropHeader(),        // Configure the default header indicator. If you have the same header indicator for each page, you need to set this&#xA;         footerBuilder:  () =&amp;gt; ClassicFooter(),        // Configure default bottom indicator&#xA;         headerTriggerDistance: 80.0,        // header trigger refresh trigger distance&#xA;         springDescription:SpringDescription(stiffness: 170, damping: 16, mass: 1.9),         // custom spring back animate,the props meaning see the flutter api&#xA;         maxOverScrollExtent :100, //The maximum dragging range of the head. Set this property if a rush out of the view area occurs&#xA;         maxUnderScrollExtent:0, // Maximum dragging range at the bottom&#xA;         enableScrollWhenRefreshCompleted: true, //This property is incompatible with PageView and TabBarView. If you need TabBarView to slide left and right, you need to set it to true.&#xA;         enableLoadingWhenFailed : true, //In the case of load failure, users can still trigger more loads by gesture pull-up.&#xA;         hideFooterWhenNotFull: false, // Disable pull-up to load more functionality when Viewport is less than one screen&#xA;         enableBallisticLoad: true, // trigger load more by BallisticScrollActivity&#xA;        child: MaterialApp(&#xA;            ........&#xA;        )&#xA;    );&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;1.5.6 add new feather: localization ,you can add following code in MaterialApp or CupertinoApp:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;    MaterialApp(&#xA;            localizationsDelegates: [&#xA;              // this line is important&#xA;              RefreshLocalizations.delegate,&#xA;              GlobalWidgetsLocalizations.delegate,&#xA;              GlobalMaterialLocalizations.delegate&#xA;            ],&#xA;            supportedLocales: [&#xA;              const Locale(&#39;en&#39;),&#xA;              const Locale(&#39;zh&#39;),&#xA;            ],&#xA;            localeResolutionCallback:&#xA;                (Locale locale, Iterable&amp;lt;Locale&amp;gt; supportedLocales) {&#xA;              //print(&#34;change language&#34;);&#xA;              return locale;&#xA;            },&#xA;    )&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ScreenShots&lt;/h2&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Style&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/lib/ui/example/useStage/basic.dart&#34;&gt;basic&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/lib/ui/example/customindicator/link_header_example.dart&#34;&gt;header in other place&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/lib/ui/example/useStage/horizontal+reverse.dart&#34;&gt;reverse + horizontal&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/arts/example1.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/arts/example2.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/arts/example3.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Style&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/lib/ui/example/useStage/twolevel_refresh.dart&#34;&gt;twoLevel&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/lib/ui/example/otherwidget&#34;&gt;use with other widgets&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/lib/ui/example/useStage/qq_chat_list.dart&#34;&gt;chat&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/arts/example4.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/arts/example5.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/arts/example6.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Style&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/lib/ui/example/customindicator/spinkit_header.dart&#34;&gt;simple custom header(使用SpinKit)&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/lib/ui/example/otherwidget/draggable_bottomsheet_loadmore.dart&#34;&gt;dragableScrollSheet+LoadMore&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/lib/ui/example/customindicator/gif_indicator_example1.dart&#34;&gt;Gif Indicator&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/arts/example7.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/arts/example8.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/arts/gifindicator.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Indicator&lt;/h3&gt; &#xA;&lt;h3&gt;各种指示器&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;refresh style&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;pull up load style&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RefreshStyle.Follow &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/refreshstyle1.gif&#34; alt=&#34;Follow&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RefreshStyle.UnFollow &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/refreshstyle2.gif&#34; alt=&#34;不跟随&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;LoadStyle.ShowAlways &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/loadstyle1.gif&#34; alt=&#34;永远显示&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;LoadStyle.HideAlways&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/loadstyle2.gif&#34; alt=&#34;永远隐藏&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RefreshStyle.Behind &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/refreshstyle3.gif&#34; alt=&#34;背部&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RefreshStyle.Front &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/refreshstyle4.gif&#34; alt=&#34;前面悬浮&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;LoadStyle.ShowWhenLoading&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/loadstyle3.gif&#34; alt=&#34;当加载中才显示,其它隐藏&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Style&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/peng8350/flutter_pulltorefresh/raw/master/lib/src/indicator/classic_indicator.dart&#34;&gt;ClassicIndicator&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/peng8350/flutter_pulltorefresh/raw/master/lib/src/indicator/waterdrop_header.dart&#34;&gt;WaterDropHeader&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/peng8350/flutter_pulltorefresh/raw/master/lib/src/indicator/material_indicator.dart&#34;&gt;MaterialClassicHeader&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/classical_follow.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/warterdrop.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/material_classic.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Style&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/peng8350/flutter_pulltorefresh/raw/master/lib/src/indicator/material_indicator.dart&#34;&gt;WaterDropMaterialHeader&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/lib/ui/example/customindicator/shimmer_indicator.dart&#34;&gt;Shimmer Indicator&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/peng8350/flutter_pulltorefresh/raw/master/lib/src/indicator/bezier_indicator.dart&#34;&gt;Bezier+Circle&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/material_waterdrop.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/shimmerindicator.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/images/bezier.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;child&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;about SmartRefresher&#39;s child explain&lt;/h2&gt; &#xA;&lt;p&gt;Since 1.4.3, the child attribute has changed from ScrollView to Widget, but this does not mean that all widgets are processed the same. SmartRefresher&#39;s internal implementation mechanism is not like NestedScrollView&lt;br&gt;&lt;br&gt; There are two main types of processing mechanisms here, &lt;code&gt;the first category&lt;/code&gt;is the component inherited from ScrollView. At present, there are only three types, &lt;code&gt;ListView&lt;/code&gt;, &lt;code&gt;GridView&lt;/code&gt;, &lt;code&gt;CustomScrollView&lt;/code&gt;. &lt;code&gt;The second category&lt;/code&gt; is components that are not inherited from ScrollView, which generally put empty views, NoScrollable views (NoScrollable convert Scrollable), PageView, and you don&#39;t need to estimate height by &lt;code&gt;LayoutBuilder&lt;/code&gt; yourself. &lt;br&gt;&lt;br&gt; For the first type of mechanism, slivers are taken out of the system &#34;illegally&#34;. The second is to put children directly into classes such as `SliverToBox Adapter&#39;. By splicing headers and footers back and forth to form slivers, and then putting slivers inside Smart Refresher into CustomScrollView, you can understand Smart Refresher as CustomScrollView, because the inside is to return to CustomScrollView. So, there&#39;s a big difference between a child node and a ScrollView. &lt;br&gt;&lt;br&gt; Now, guess you have a requirement: you need to add background, scrollbars or something outside ScrollView. Here&#39;s a demonstration of errors and correct practices&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;   //error&#xA;   SmartRefresher(&#xA;      child: ScrollBar(&#xA;          child: ListView(&#xA;             ....&#xA;      )&#xA;    )&#xA;   )&#xA;&#xA;   // right&#xA;   ScrollBar(&#xA;      child: SmartRefresher(&#xA;          child: ListView(&#xA;             ....&#xA;      )&#xA;    )&#xA;   )&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Demonstrate another wrong doing,put ScrollView in another widget&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;   //error&#xA;   SmartRefresher(&#xA;      child:MainView()&#xA;   )&#xA;&#xA;   class MainView extends StatelessWidget{&#xA;       Widget build(){&#xA;          return ListView(&#xA;             ....&#xA;          );&#xA;       }&#xA;&#xA;   }&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above mistake led to scrollable nesting another scrollable, causing you to not see the header and footer no matter how slippery you are. Similarly, you may need to work with components like NotificationListener, ScrollConfiguration..., remember, don&#39;t store them outside ScrollView (you want to add refresh parts) and Smart Refresher memory.。&lt;/p&gt; &#xA;&lt;h2&gt;More&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/propertys_en.md&#34;&gt;Property Document&lt;/a&gt; or &lt;a href=&#34;https://pub.dev/documentation/pull_to_refresh/latest/pulltorefresh/SmartRefresher-class.html&#34;&gt;Api/Doc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/custom_indicator_en.md&#34;&gt;Custom Indicator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/indicator_attribute_en.md&#34;&gt;Inner Attribute Of Indicators&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/CHANGELOG.md&#34;&gt;Update Log&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/notice_en.md&#34;&gt;Notice&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/problems_en.md&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Exist Problems&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;about NestedScrollView,When you slide down and then slide up quickly, it will return back. The main reason is that NestedScrollView does not consider the problem of cross-border elasticity under bouncingScrollPhysics. Relevant flutter issues: 34316, 33367, 29264. This problem can only wait for flutter to fix this.&lt;/li&gt; &#xA; &lt;li&gt;SmartRefresher does not have refresh injection into ScrollView under the subtree, that is, if you put AnimatedList or RecordableListView in the child is impossible. I have tried many ways to solve this problem and failed. Because of the principle of implementation, I have to append it to the head and tail of slivers. In fact, the problem is not that much of my Component issues, such as AnimatedList, can&#39;t be used with AnimatedList and GridView unless I convert AnimatedList to SliverAnimatedList is the solution. At the moment, I have a temporary solution to this problem, but it&#39;s a bit cumbersome to rewrite the code inside it and then outside ScrollView. Add SmartRefresher, see my two examples &lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/lib/other/refresh_animatedlist.dart&#34;&gt;Example 1&lt;/a&gt;和&lt;a href=&#34;https://raw.githubusercontent.com/peng8350/flutter_pulltorefresh/master/example/lib/other/refresh_recordable_listview.dart&#34;&gt;Example 2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/scwang90/SmartRefreshLayout&#34;&gt;SmartRefreshLayout&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;MIT License&#xA;&#xA;Copyright (c) 2018 Jpeng&#xA;&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy&#xA;of this software and associated documentation files (the &#34;Software&#34;), to deal&#xA;in the Software without restriction, including without limitation the rights&#xA;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#xA;copies of the Software, and to permit persons to whom the Software is&#xA;furnished to do so, subject to the following conditions:&#xA;&#xA;The above copyright notice and this permission notice shall be included in all&#xA;copies or substantial portions of the Software.&#xA;&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#xA;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&#xA;SOFTWARE.&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>niuhuan/pikapika</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/niuhuan/pikapika</id>
    <link href="https://github.com/niuhuan/pikapika" rel="alternate"></link>
    <summary type="html">&lt;p&gt;(R18+) 美观易用且无广告的二次元客户端，同时支持MacOS，Windows，Android，iOS。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PIKAPIKA - 漫画客户端&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/niuhuan/pikapika&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/niuhuan/pikapika/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/niuhuan/pikapika&#34; alt=&#34;releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/niuhuan/pikapika/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/niuhuan/pikapika/total&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;美观易用且无广告的漫画客户端, 能运行在Windows/MacOS/Linux/Android/IOS中。&lt;/li&gt; &#xA; &lt;li&gt;此APP内容存在限制级别内容(例如 露骨/血腥/暴力/吸毒)，18岁以下的用户需在监护人陪同下使用，并请您在遵守当地法律法规。&lt;/li&gt; &#xA; &lt;li&gt;您的star和issue是对开发者的莫大鼓励, 可以源仓库下载最新的源码/安装包, 表示支持/提出建议。&lt;/li&gt; &#xA; &lt;li&gt;源仓库地址 &lt;a href=&#34;https://github.com/niuhuan/pikapika&#34;&gt;https://github.com/niuhuan/pikapika&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;界面 / 功能&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/reader.png&#34; alt=&#34;阅读器&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;分流&lt;/h3&gt; &#xA;&lt;p&gt;VPN-&amp;gt;代理-&amp;gt;分流, 这三个功能如果同时设置, 您会在您手机的VPN上访问代理, 使用代理请求分流服务器。&lt;/p&gt; &#xA;&lt;h3&gt;漫画分类/搜索&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/categories_screen.png&#34; alt=&#34;分类&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/comic_list.png&#34; alt=&#34;列表&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;漫画阅读/下载/导入/导出&lt;/h3&gt; &#xA;&lt;p&gt;您可以在除IOS外导出任意已经完成的下载到zip, 从另外一台设备导入。 导出的zip解压后可以直接使用其中的HTML进行阅读&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/exporting.png&#34; alt=&#34;导出下载&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/exporting2.png&#34; alt=&#34;HTML预览&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;游戏&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/games.png&#34; alt=&#34;games&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/game.png&#34; alt=&#34;game&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 用户 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 登录 / 注册 / 获取个人信息 / 自动打卡&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 修改密码 / 修改签名 / 修改头像&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 漫画 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 分类 / 搜索 / 随机本子 / 看此本子的也在看 / 排行榜&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 在分类中搜索 / 按 &#34;分类 / 标签 / 创建人 / 汉化组&#34; 检索&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 漫画详情 / 章节 / 看图 / 将图片保存到相册&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 收藏 / 喜欢&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 获取评论 / 评论 / 评论回复 (社区评论后无法删除, 请谨慎使用)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 游戏 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 列表 / 详情 / 无广告下载&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 下载 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 导入导出 / 无线共享 / 移动设备与PC设备传输&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 聊天室&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 缓存 / 清理&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 设备支持 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 安卓 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 高刷新频率屏幕适配 (90/120/144... Hz)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 安卓10以上随系统进入深色/夜间模式&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;其他说明&lt;/h2&gt; &#xA;&lt;p&gt;数据资料存储位置&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ios/android : 程序自身数据目录中, 删除就会清理&lt;/li&gt; &#xA; &lt;li&gt;windows : 程序同一目录中data文件夹下&lt;/li&gt; &#xA; &lt;li&gt;macos : ~/Library/Application\ Support/pikapika&lt;/li&gt; &#xA; &lt;li&gt;linux : ~/.pikapika&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;技术架构&lt;/h2&gt; &#xA;&lt;h3&gt;多平台适配&lt;/h3&gt; &#xA;&lt;p&gt;这个应用程序使用golang和dart(flutter)作为主要语言, 可以兼容Windows, linux, MacOS, Android, IOS&lt;/p&gt; &#xA;&lt;p&gt;使用了不同的框架桥接到桌面和移动平台上&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;go-flutter =&amp;gt; Windows / MacOS / Linux&lt;/li&gt; &#xA; &lt;li&gt;gomobile =&amp;gt; Android / IOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/platforms.png&#34; alt=&#34;平台&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;构建环境&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;golang&lt;/a&gt; (1.16)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/&#34;&gt;flutter&lt;/a&gt; (2.10.3)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;请您遵守使用规则&lt;/h2&gt; &#xA;&lt;p&gt;本软件仅供学习交流使用, 本软件或本软件的拓展, 个人或企业不可用于商业用途, 不可上架任何商店&lt;/p&gt; &#xA;&lt;p&gt;拓展包括但是不限于以下内容&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用本软件进行继续开发形成的软件。&lt;/li&gt; &#xA; &lt;li&gt;引入本软件部分内容为依赖/参考本软件/使用本软件内代码的同时, 包含本软件内一致内容或功能的软件。&lt;/li&gt; &#xA; &lt;li&gt;直接对本软件进行打包发布&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;软件副本分发规则&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;不要在任何其他 &lt;strong&gt;二次元软件&lt;/strong&gt; 的 &lt;strong&gt;聊天社区&lt;/strong&gt; 或 &lt;strong&gt;开发社区&lt;/strong&gt; 内, 发布有关本软件的链接或信息&lt;/li&gt; &#xA; &lt;li&gt;不要发送本软件安装包到 &lt;strong&gt;任何社区内&lt;/strong&gt; , 不要将APK/IPA/ZIP/DMG发送包括任何聊天软件内的群聊功能。 分享本软件时, 在社区中使用Github中提供的Releases页面的链接, 或使用私聊窗口发送。&lt;/li&gt; &#xA; &lt;li&gt;作者不对分发软件承担任何后果, 请您遵守当地以及副本接受社区或副本接收人所在地区的法律。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>alesimula/wsa_pacman</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/alesimula/wsa_pacman</id>
    <link href="https://github.com/alesimula/wsa_pacman" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A GUI package manager and package installer for Windows Subsystem for Android (WSA)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;wsa_pacman&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/README/screenshots/installer.png?raw=true&#34; alt=&#34;Installer&#34; title=&#34;Installer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A GUI package manager and package installer for Windows Subsystem for Android (WSA).&lt;/p&gt; &#xA;&lt;p&gt;Currently provides a double-click GUI installer for .apk and .xapk files that shows app information (package, icon, version and permissions), allows normal installations as well as upgrades and downgrades.&lt;/p&gt; &#xA;&lt;p&gt;The app additionally provides a button to open Android settings and one to open the &#34;Manage Applications&#34; Android settings page, from which you can uninstall or disable applications and grant or revoke permissions&lt;/p&gt; &#xA;&lt;h2&gt;Settings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Autostart WSA &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;on/off&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android port &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: 58526&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Language &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/locale/&#34;&gt;All options&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Theme mode &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;System&lt;/li&gt; &#xA;   &lt;li&gt;Dark&lt;/li&gt; &#xA;   &lt;li&gt;Light&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Window transparency (mica) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Full&lt;/li&gt; &#xA;   &lt;li&gt;Partial&lt;/li&gt; &#xA;   &lt;li&gt;Disabled&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Adaptive icon shape &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Squircle&lt;/li&gt; &#xA;   &lt;li&gt;Circle&lt;/li&gt; &#xA;   &lt;li&gt;Rounded square&lt;/li&gt; &#xA;   &lt;li&gt;Disabled&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;ruby&gt;&lt;p&gt; &lt;/p&gt;&lt;h2&gt;More screenshots&lt;/h2&gt; &lt;p&gt;&lt;/p&gt; &lt;/ruby&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/README/screenshots/installing.png?raw=true&#34; alt=&#34;Installing&#34; title=&#34;Installing&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/README/screenshots/installed.png?raw=true&#34; alt=&#34;Installed&#34; title=&#34;Installed&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/README/screenshots/downgrade.png?raw=true&#34; alt=&#34;Downgrade&#34; title=&#34;Downgrade&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/README/screenshots/main_screen.png?raw=true&#34; alt=&#34;Main screen&#34; title=&#34;Main screen&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/README/screenshots/settings_screen.png?raw=true&#34; alt=&#34;Settings&#34; title=&#34;Settings&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>dart-lang/sdk</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/dart-lang/sdk</id>
    <link href="https://github.com/dart-lang/sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Dart SDK, including the VM, dart2js, core libraries, and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dart&lt;/h1&gt; &#xA;&lt;h2&gt;A client-optimized language for fast apps on any platform&lt;/h2&gt; &#xA;&lt;p&gt;Dart is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Optimized for UI&lt;/strong&gt;: Develop with a programming language specialized around the needs of user interface creation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Productive&lt;/strong&gt;: Make changes iteratively: use hot reload to see the result instantly in your running app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fast on all platforms&lt;/strong&gt;: Compile to ARM &amp;amp; x64 machine code for mobile, desktop, and backend. Or compile to JavaScript for the web.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Dart&#39;s flexible compiler technology lets you run Dart code in different ways, depending on your target platform and goals:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dart Native&lt;/strong&gt;: For programs targeting devices (mobile, desktop, server, and more), Dart Native includes both a Dart VM with JIT (just-in-time) compilation and an AOT (ahead-of-time) compiler for producing machine code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dart Web&lt;/strong&gt;: For programs targeting the web, Dart Web includes both a development time compiler (dartdevc) and a production time compiler (dart2js).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dart-lang/sdk/main/docs/assets/Dart-platforms.svg?sanitize=true&#34; alt=&#34;Dart platforms illustration&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License &amp;amp; patents&lt;/h2&gt; &#xA;&lt;p&gt;Dart is free and open source.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/dart-lang/sdk/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; and &lt;a href=&#34;https://github.com/dart-lang/sdk/raw/main/PATENT_GRANT&#34;&gt;PATENT_GRANT&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using Dart&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://dart.dev&#34;&gt;dart.dev&lt;/a&gt; to learn more about the &lt;a href=&#34;https://dart.dev/guides/language/language-tour&#34;&gt;language&lt;/a&gt;, &lt;a href=&#34;https://dart.dev/tools&#34;&gt;tools&lt;/a&gt;, and to find &lt;a href=&#34;https://dart.dev/codelabs&#34;&gt;codelabs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Browse &lt;a href=&#34;https://pub.dev&#34;&gt;pub.dev&lt;/a&gt; for more packages and libraries contributed by the community and the Dart team.&lt;/p&gt; &#xA;&lt;p&gt;Our API reference documentation is published at &lt;a href=&#34;https://api.dart.dev&#34;&gt;api.dart.dev&lt;/a&gt;, based on the stable release. (We also publish docs from our &lt;a href=&#34;https://api.dart.dev/beta&#34;&gt;beta&lt;/a&gt; and &lt;a href=&#34;https://api.dart.dev/dev&#34;&gt;dev&lt;/a&gt; channels, as well as from the &lt;a href=&#34;https://api.dart.dev/be&#34;&gt;primary development branch&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Building Dart&lt;/h2&gt; &#xA;&lt;p&gt;If you want to build Dart yourself, here is a guide to &lt;a href=&#34;https://github.com/dart-lang/sdk/wiki/Building&#34;&gt;getting the source, preparing your machine to build the SDK, and building&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are more documents on our &lt;a href=&#34;https://github.com/dart-lang/sdk/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Dart&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to contribute to Dart is to &lt;a href=&#34;http://dartbug.com&#34;&gt;file issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also contribute patches, as described in &lt;a href=&#34;https://github.com/dart-lang/sdk/raw/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter/packages</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/flutter/packages</id>
    <link href="https://github.com/flutter/packages" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of useful packages maintained by the Flutter team&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Packages&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/flutter/packages/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/flutter/packages.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flutter/packages/actions/workflows/release.yml&#34;&gt;&lt;img src=&#34;https://github.com/flutter/packages/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Release Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo is a companion repo to the main &lt;a href=&#34;https://github.com/flutter/flutter&#34;&gt;flutter repo&lt;/a&gt;. It contains the source code for Flutter&#39;s first-party packages (i.e., packages developed by the core Flutter team). Check the &lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages&#34;&gt;&lt;code&gt;packages&lt;/code&gt;&lt;/a&gt; directory to see all packages.&lt;/p&gt; &#xA;&lt;p&gt;These packages are also available on &lt;a href=&#34;https://pub.dartlang.org/flutter/packages&#34;&gt;pub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please file any issues, bugs, or feature requests in the &lt;a href=&#34;https://github.com/flutter/flutter/issues/new&#34;&gt;main flutter repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute a new package to the Flutter ecosystem, please see the documentation for &lt;a href=&#34;https://flutter.io/developing-packages/&#34;&gt;developing packages&lt;/a&gt;. You can store your package source code in any GitHub repository (the present repo is only intended for packages developed by the core Flutter team). Once your package is ready you can &lt;a href=&#34;https://flutter.io/developing-packages/#publish&#34;&gt;publish&lt;/a&gt; to the &lt;a href=&#34;https://pub.dartlang.org/&#34;&gt;pub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to contribute a change to any of the existing packages in this repo, please review our &lt;a href=&#34;https://github.com/flutter/packages/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;, and send a &lt;a href=&#34;https://github.com/flutter/packages/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;p&gt;These are the available packages in this repository.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Pub&lt;/th&gt; &#xA;   &lt;th&gt;Issues&lt;/th&gt; &#xA;   &lt;th&gt;Pull requests&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/animations/&#34;&gt;animations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/animations&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/animations.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20animations&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20animations?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20animations&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20animations?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/css_colors/&#34;&gt;css_colors&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/css_colors&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/css_colors.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20css_colors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20css_colors?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20css_colors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20css_colors?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/extension_google_sign_in_as_googleapis_auth/&#34;&gt;extension_google_sign_in_as_googleapis_auth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/extension_google_sign_in_as_googleapis_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/extension_google_sign_in_as_googleapis_auth.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20extension_google_sign_in_as_googleapis_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20extension_google_sign_in_as_googleapis_auth?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20extension_google_sign_in_as_googleapis_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20extension_google_sign_in_as_googleapis_auth?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/fuchsia_ctl/&#34;&gt;fuchsia_ctl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/fuchsia_ctl&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/fuchsia_ctl.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20fuchsia_ctl&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20fuchsia_ctl?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20fuchsia_ctl&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20fuchsia_ctl?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/flutter_image/&#34;&gt;flutter_image&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_image&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_image.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20flutter_image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20flutter_image?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20flutter_image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20flutter_image?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/flutter_lints/&#34;&gt;flutter_lints&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_lints&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_lints.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20flutter_lints&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20flutter_lints?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20flutter_lints&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20flutter_lints?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/flutter_markdown/&#34;&gt;flutter_markdown&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_markdown&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_markdown.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20flutter_markdown&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20flutter_markdown?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20flutter_markdown&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20flutter_markdown?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/go_router/&#34;&gt;go_router&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/go_router&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/go_router.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20go_router&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20go_router?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20go_router&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20go_router?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/go_router_builder/&#34;&gt;go_router_builder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/go_router_builder&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/go_router_builder.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20go_router_builder&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20go_router_builder?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20go_router_builder&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20go_router_builder?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/multicast_dns/&#34;&gt;multicast_dns&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/multicast_dns&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/multicast_dns.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20multicast_dns&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20multicast_dns?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20multicast_dns&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20multicast_dns?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/palette_generator/&#34;&gt;palette_generator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/palette_generator&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/palette_generator.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20palette_generator&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20palette_generator?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20palette_generator&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20palette_generator?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/pigeon/&#34;&gt;pigeon&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/pigeon&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/pigeon.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/pigeon&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/pigeon?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20pigeon&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20pigeon?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/pointer_interceptor/&#34;&gt;pointer_interceptor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/pointer_interceptor&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/pointer_interceptor.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20pointer_interceptor&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20pointer_interceptor?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20pointer_interceptor&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20pointer_interceptor?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/xdg_directories/&#34;&gt;xdg_directories&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/xdg_directories&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/xdg_directories.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20xdg_directories&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20xdg_directories?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20xdg_directories&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20xdg_directories?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>RivaanRanawat/instagram-flutter-clone</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/RivaanRanawat/instagram-flutter-clone</id>
    <link href="https://github.com/RivaanRanawat/instagram-flutter-clone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Responsive Instagram Clone developed with Flutter &amp; Firebase&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Instagram Clone&lt;/h1&gt; &#xA;&lt;p&gt;A completely Responsive Instagram App- Works on Android, iOS &amp;amp; Web!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Responsive Instagram UI&lt;/li&gt; &#xA; &lt;li&gt;Email &amp;amp; Password Authentication&lt;/li&gt; &#xA; &lt;li&gt;Share Posts with Caption&lt;/li&gt; &#xA; &lt;li&gt;Display Posts with Caption&lt;/li&gt; &#xA; &lt;li&gt;Like &amp;amp; Comment on Posts&lt;/li&gt; &#xA; &lt;li&gt;Search Users&lt;/li&gt; &#xA; &lt;li&gt;Follow Users&lt;/li&gt; &#xA; &lt;li&gt;Display User Posts, Followers &amp;amp; Following&lt;/li&gt; &#xA; &lt;li&gt;EVERYTHING REAL TIME&lt;/li&gt; &#xA; &lt;li&gt;Sign Out&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;YouTube&lt;/h2&gt; &#xA;&lt;p&gt;I have created a tutorial based on this, do check it out on my channel &lt;a href=&#34;https://youtu.be/BBccK1zTgxw&#34;&gt;Rivaan Ranawat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;600&#34; src=&#34;https://github.com/RivaanRanawat/instagram-flutter-clone/raw/master/screenshot.png&#34; alt=&#34;Youtube Tutorial Image&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;After cloning this repository, migrate to &lt;code&gt;instagram-flutter-clone&lt;/code&gt; folder. Then, follow the following steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create Firebase Project&lt;/li&gt; &#xA; &lt;li&gt;Enable Authentication&lt;/li&gt; &#xA; &lt;li&gt;Make Firestore Rules&lt;/li&gt; &#xA; &lt;li&gt;Create Android, iOS &amp;amp; Web Apps&lt;/li&gt; &#xA; &lt;li&gt;Take Web FirebaseOptions and put it in main function in main.dart file replacing my keys (My keys wont work as I deleted my project) Then run the following commands to run your app:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  flutter pub get&#xA;  open -a simulator (to get iOS Simulator)&#xA;  flutter run&#xA;  flutter run -d chrome --web-renderer html (to see the best output)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tech Used&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt;: Firebase Auth, Firebase Storage, Firebase Firestore&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Client&lt;/strong&gt;: Flutter, Provider&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;If you have any feedback, please reach out to me at &lt;a href=&#34;mailto:namanrivaan@gmail.com&#34;&gt;namanrivaan@gmail.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>juliuscanute/qr_code_scanner</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/juliuscanute/qr_code_scanner</id>
    <link href="https://github.com/juliuscanute/qr_code_scanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;QR Code Scanner for Flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project in Maintenance Mode Only&lt;/h1&gt; &#xA;&lt;p&gt;Since the underlying frameworks of this package, &lt;a href=&#34;https://github.com/zxing/zxing&#34;&gt;zxing for android&lt;/a&gt; and &lt;a href=&#34;https://github.com/mikebuss/MTBBarcodeScanner&#34;&gt;MTBBarcodescanner for iOS&lt;/a&gt; are both not longer maintaned, this plugin is no longer up to date and in maintenance mode only. Only bug fixes and minor enhancements will be considered.&lt;/p&gt; &#xA;&lt;p&gt;I am developing a new plugin &lt;a href=&#34;https://pub.dev/packages/mobile_scanner&#34;&gt;mobile_scanner&lt;/a&gt; that uses the latest version of MLKit for detecting barcodes and QR codes. On Android it also uses the latest version of CameraX, and on iOS the native AVFoundation for best camera performance.&lt;/p&gt; &#xA;&lt;h1&gt;QR Code Scanner&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/qr_code_scanner&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/qr_code_scanner?include_prereleases&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/aZujk84f6V&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/829004904600961054&#34; alt=&#34;Join the chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/juliuscanute/qr_code_scanner/actions&#34;&gt;&lt;img src=&#34;https://github.com/juliuscanute/qr_code_scanner/workflows/dart/badge.svg?sanitize=true&#34; alt=&#34;GH Actions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A QR code scanner that works on both iOS and Android by natively embedding the platform view within Flutter. The integration with Flutter is seamless, much better than jumping into a native Activity or a ViewController to perform the scan.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34;&gt; Android &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/juliuscanute/qr_code_scanner/master/.resources/android-app-screen-one.jpg&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/juliuscanute/qr_code_scanner/master/.resources/android-app-screen-two.jpg&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34;&gt; iOS &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/juliuscanute/qr_code_scanner/master/.resources/ios-app-screen-one.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/juliuscanute/qr_code_scanner/master/.resources/ios-app-screen-two.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Get Scanned QR Code&lt;/h2&gt; &#xA;&lt;p&gt;When a QR code is recognized, the text identified will be set in &#39;result&#39; of type &lt;code&gt;Barcode&lt;/code&gt;, which contains the output text as property &#39;code&#39; of type &lt;code&gt;String&lt;/code&gt; and scanned code type as property &#39;format&#39; which is an enum &lt;code&gt;BarcodeFormat&lt;/code&gt;, defined in the library.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class _QRViewExampleState extends State&amp;lt;QRViewExample&amp;gt; {&#xA;  final GlobalKey qrKey = GlobalKey(debugLabel: &#39;QR&#39;);&#xA;  Barcode? result;&#xA;  QRViewController? controller;&#xA;&#xA;  // In order to get hot reload to work we need to pause the camera if the platform&#xA;  // is android, or resume the camera if the platform is iOS.&#xA;  @override&#xA;  void reassemble() {&#xA;    super.reassemble();&#xA;    if (Platform.isAndroid) {&#xA;      controller!.pauseCamera();&#xA;    } else if (Platform.isIOS) {&#xA;      controller!.resumeCamera();&#xA;    }&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      body: Column(&#xA;        children: &amp;lt;Widget&amp;gt;[&#xA;          Expanded(&#xA;            flex: 5,&#xA;            child: QRView(&#xA;              key: qrKey,&#xA;              onQRViewCreated: _onQRViewCreated,&#xA;            ),&#xA;          ),&#xA;          Expanded(&#xA;            flex: 1,&#xA;            child: Center(&#xA;              child: (result != null)&#xA;                  ? Text(&#xA;                      &#39;Barcode Type: ${describeEnum(result!.format)}   Data: ${result!.code}&#39;)&#xA;                  : Text(&#39;Scan a code&#39;),&#xA;            ),&#xA;          )&#xA;        ],&#xA;      ),&#xA;    );&#xA;  }&#xA;&#xA;  void _onQRViewCreated(QRViewController controller) {&#xA;    this.controller = controller;&#xA;    controller.scannedDataStream.listen((scanData) {&#xA;      setState(() {&#xA;        result = scanData;&#xA;      });&#xA;    });&#xA;  }&#xA;&#xA;  @override&#xA;  void dispose() {&#xA;    controller?.dispose();&#xA;    super.dispose();&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Android Integration&lt;/h2&gt; &#xA;&lt;p&gt;In order to use this plugin, please update the Gradle, Kotlin and Kotlin Gradle Plugin:&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;android/build.gradle&lt;/code&gt; change &lt;code&gt;ext.kotlin_version = &#39;1.3.50&#39;&lt;/code&gt; to &lt;code&gt;ext.kotlin_version = &#39;1.5.10&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;android/build.gradle&lt;/code&gt; change &lt;code&gt;classpath &#39;com.android.tools.build:gradle:3.5.0&#39;&lt;/code&gt; to &lt;code&gt;classpath &#39;com.android.tools.build:gradle:4.2.0&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;android/gradle/wrapper/gradle-wrapper.properties&lt;/code&gt; change &lt;code&gt;distributionUrl=https\://services.gradle.org/distributions/gradle-5.6.2-all.zip&lt;/code&gt; to &lt;code&gt;distributionUrl=https\://services.gradle.org/distributions/gradle-6.9-all.zip&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;android/app/build.gradle&lt;/code&gt; change &lt;code&gt;defaultConfig{&lt;/code&gt; &lt;code&gt;...&lt;/code&gt; &lt;code&gt;minSdkVersion 16&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; to &lt;code&gt;defaultConfig{&lt;/code&gt; &lt;code&gt;...&lt;/code&gt; &lt;code&gt;minSdkVersion 20&lt;/code&gt; &lt;code&gt;}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;em&gt;Warning&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Flutter Beta or Dev channel (1.25 or 1.26) you can get the following error:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;java.lang.AbstractMethodError: abstract method &#34;void io.flutter.plugin.platform.PlatformView.onFlutterViewAttached(android.view.View)&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a bug in Flutter which is being tracked here: &lt;a href=&#34;https://github.com/flutter/flutter/issues/72185&#34;&gt;https://github.com/flutter/flutter/issues/72185&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;There is a workaround by adding &lt;code&gt;android.enableDexingArtifactTransform=false&lt;/code&gt; to your &lt;code&gt;gradle.properties&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;iOS Integration&lt;/h2&gt; &#xA;&lt;p&gt;In order to use this plugin, add the following to your Info.plist file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;key&amp;gt;io.flutter.embedded_views_preview&amp;lt;/key&amp;gt;&#xA;&amp;lt;true/&amp;gt;&#xA;&amp;lt;key&amp;gt;NSCameraUsageDescription&amp;lt;/key&amp;gt;&#xA;&amp;lt;string&amp;gt;This app needs camera access to scan QR codes&amp;lt;/string&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Web Integration&lt;/h2&gt; &#xA;&lt;p&gt;Add this to &lt;code&gt;web/index.html&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/jsqr@1.3.1/dist/jsQR.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note: on web, only QR codes are supported. Other barcodes and 2D codes cannot be scanned.&lt;/p&gt; &#xA;&lt;p&gt;Web support is in very early stage. Features such as flash, pause or resume are not implemented. Moreover, the camera preview does not respect the surrounding constraints. This is not at last due to Flutter&#39;s early state of platform views on web.&lt;/p&gt; &#xA;&lt;h2&gt;Flip Camera (Back/Front)&lt;/h2&gt; &#xA;&lt;p&gt;The default camera is the back camera.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;await controller.flipCamera();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Flash (Off/On)&lt;/h2&gt; &#xA;&lt;p&gt;By default, flash is OFF.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;await controller.toggleFlash();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resume/Pause&lt;/h2&gt; &#xA;&lt;p&gt;Pause camera stream and scanner.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;await controller.pauseCamera();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Resume camera stream and scanner.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;await controller.resumeCamera();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;SDK&lt;/h1&gt; &#xA;&lt;p&gt;Requires at least SDK 20. Requires at least iOS 8.&lt;/p&gt; &#xA;&lt;h1&gt;TODOs&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS Native embedding is written to match what is supported in the framework as of the date of publication of this package. It needs to be improved as the framework support improves.&lt;/li&gt; &#xA; &lt;li&gt;In future, options will be provided for default states.&lt;/li&gt; &#xA; &lt;li&gt;Finally, I welcome PR&#39;s to make it better :), thanks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android: &lt;a href=&#34;https://github.com/zxing/zxing&#34;&gt;https://github.com/zxing/zxing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;iOS: &lt;a href=&#34;https://github.com/mikebuss/MTBBarcodeScanner&#34;&gt;https://github.com/mikebuss/MTBBarcodeScanner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Special Thanks To: LeonDevLifeLog for his contributions towards improving this package.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>flutter/codelabs</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/flutter/codelabs</id>
    <link href="https://github.com/flutter/codelabs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter codelab examples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter codelabs&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flutter/codelabs/actions?workflow=Flutter%20CI&#34;&gt;&lt;img src=&#34;https://github.com/flutter/codelabs/workflows/Flutter%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the code for a variety of &lt;a href=&#34;https://codelabs.developers.google.com/?product=flutter&#34;&gt;Flutter Codelabs&lt;/a&gt;. Here is a list of the codelabs represented here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-adaptive-app&#34;&gt;Adaptive Apps in Flutter&lt;/a&gt; is in &lt;code&gt;adaptive_app&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/google-maps-in-flutter&#34;&gt;Adding Google Maps to a Flutter app&lt;/a&gt; is in &lt;code&gt;google-maps-in-flutter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-in-app-purchases&#34;&gt;Adding in-app purchases to your Flutter app&lt;/a&gt; is in &lt;code&gt;in_app_purchases&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-webview&#34;&gt;Adding WebView to your Flutter app&lt;/a&gt; is in &lt;code&gt;webview_flutter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/google-photos-sharing&#34;&gt;Build a Photo Sharing app with Google Photos and Flutter &lt;/a&gt; is in &lt;code&gt;photos-sharing&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-cupertino&#34;&gt;Building a Cupertino app with Flutter&lt;/a&gt; is in &lt;code&gt;cupertino_store&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/codelabs/firebase-get-to-know-flutter&#34;&gt;Get to know Firebase for Flutter&lt;/a&gt; is in &lt;code&gt;firebase-get-to-know-flutter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-app-testing&#34;&gt;How to test a Flutter app&lt;/a&gt; is in &lt;code&gt;testing_codelab&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/write-flutter-plugin&#34;&gt;How to write a Flutter plugin&lt;/a&gt; is in &lt;code&gt;plugin_codelab&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/web-url-launcher&#34;&gt;Using a plugin with a Flutter web app&lt;/a&gt; is in &lt;code&gt;star_counter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-github-client&#34;&gt;Write a Flutter desktop application&lt;/a&gt; is in &lt;code&gt;github-client&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1&#34;&gt;Write your first Flutter app, part 1&lt;/a&gt; and &lt;a href=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2&#34;&gt;Write your first Flutter app, part 2&lt;/a&gt; are in &lt;code&gt;startup_namer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/learn/pathways/text-classification-flutter&#34;&gt;Get started with text classification in Flutter apps&lt;/a&gt; pathway is in &lt;code&gt;tfserving-flutter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/tfrecommenders-flutter&#34;&gt;Building a fullstack movie recommendation system&lt;/a&gt; is in &lt;code&gt;tfrs-flutter&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To learn more about setting up Flutter and running apps, see &lt;a href=&#34;https://flutter.dev/docs/get-started&#34;&gt;flutter.dev/get-started&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jonataslaw/getx</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/jonataslaw/getx</id>
    <link href="https://github.com/jonataslaw/getx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open screens/snackbars/dialogs/bottomSheets without context, manage states and inject dependencies easily with Get.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonataslaw/getx-community/master/get.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/get&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/get.svg?label=get&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/sentry/score&#34;&gt;&lt;img src=&#34;https://badges.bar/get/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/get/score&#34;&gt;&lt;img src=&#34;https://badges.bar/get/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/get/score&#34;&gt;&lt;img src=&#34;https://badges.bar/get/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/jonataslaw/get/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;building&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/effective_dart&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-effective_dart-40c4ff.svg?sanitize=true&#34; alt=&#34;style: effective dart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/9Hpt99N&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/722900883784073290.svg?logo=discord&#34; alt=&#34;Discord Shield&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://communityinviter.com/apps/getxworkspace/getx&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-orange.svg?sanitize=true&#34; alt=&#34;Get on Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/joinchat/PhdbJRmsZNpAqSLJL6bH7g&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Telegram-blue.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Solido/awesome-flutter&#34;&gt; &lt;img alt=&#34;Awesome Flutter&#34; src=&#34;https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.buymeacoffee.com/jonataslaw&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://i.imgur.com/aV6DDA7.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important; box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonataslaw/getx-community/master/getx.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;strong&gt;Languages:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-English-blueviolet?style=for-the-badge&#34; alt=&#34;English&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README-vi.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Vietnamese-blueviolet?style=for-the-badge&#34; alt=&#34;Vietnamese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.id-ID.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Indonesian-blueviolet?style=for-the-badge&#34; alt=&#34;Indonesian&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ur-PK.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Urdu-blueviolet?style=for-the-badge&#34; alt=&#34;Urdu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.zh-cn.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Chinese-blueviolet?style=for-the-badge&#34; alt=&#34;Chinese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.pt-br.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Portuguese-blueviolet?style=for-the-badge&#34; alt=&#34;Portuguese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README-es.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Spanish-blueviolet?style=for-the-badge&#34; alt=&#34;Spanish&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ru.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Russian-blueviolet?style=for-the-badge&#34; alt=&#34;Russian&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.pl.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Polish-blueviolet?style=for-the-badge&#34; alt=&#34;Polish&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ko-kr.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Korean-blueviolet?style=for-the-badge&#34; alt=&#34;Korean&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README-fr.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-French-blueviolet?style=for-the-badge&#34; alt=&#34;French&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ja-JP.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Japanese-blueviolet?style=for-the-badge&#34; alt=&#34;Japanese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.tr-TR.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Turkish-blueviolet?style=for-the-badge&#34; alt=&#34;Turkish&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#about-get&#34;&gt;About Get&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#installing&#34;&gt;Installing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#counter-app-with-getx&#34;&gt;Counter App with GetX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#the-three-pillars&#34;&gt;The Three pillars&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#state-management&#34;&gt;State management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#reactive-state-manager&#34;&gt;Reactive State Manager&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#more-details-about-state-management&#34;&gt;More details about state management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#route-management&#34;&gt;Route management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#more-details-about-route-management&#34;&gt;More details about route management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#dependency-management&#34;&gt;Dependency management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#more-details-about-dependency-management&#34;&gt;More details about dependency management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#utils&#34;&gt;Utils&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#internationalization&#34;&gt;Internationalization&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#translations&#34;&gt;Translations&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#using-translations&#34;&gt;Using translations&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#locales&#34;&gt;Locales&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#change-locale&#34;&gt;Change locale&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#system-locale&#34;&gt;System locale&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#change-theme&#34;&gt;Change Theme&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getconnect&#34;&gt;GetConnect&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#default-configuration&#34;&gt;Default configuration&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#custom-configuration&#34;&gt;Custom configuration&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getpage-middleware&#34;&gt;GetPage Middleware&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#priority&#34;&gt;Priority&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#redirect&#34;&gt;Redirect&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagecalled&#34;&gt;onPageCalled&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onbindingsstart&#34;&gt;OnBindingsStart&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagebuildstart&#34;&gt;OnPageBuildStart&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagebuilt&#34;&gt;OnPageBuilt&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagedispose&#34;&gt;OnPageDispose&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#other-advanced-apis&#34;&gt;Other Advanced APIs&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#optional-global-settings-and-manual-configurations&#34;&gt;Optional Global Settings and Manual configurations&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#local-state-widgets&#34;&gt;Local State Widgets&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#valuebuilder&#34;&gt;ValueBuilder&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#obxvalue&#34;&gt;ObxValue&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#useful-tips&#34;&gt;Useful tips&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getview&#34;&gt;GetView&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getresponsiveview&#34;&gt;GetResponsiveView&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#how-to-use-it&#34;&gt;How to use it&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getwidget&#34;&gt;GetWidget&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getxservice&#34;&gt;GetxService&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#breaking-changes-from-20&#34;&gt;Breaking changes from 2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#why-getx&#34;&gt;Why Getx?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#community&#34;&gt;Community&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#community-channels&#34;&gt;Community channels&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#how-to-contribute&#34;&gt;How to contribute&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#articles-and-videos&#34;&gt;Articles and videos&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;About Get&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX is an extra-light and powerful solution for Flutter. It combines high-performance state management, intelligent dependency injection, and route management quickly and practically.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX has 3 basic principles. This means that these are the priority for all resources in the library: &lt;strong&gt;PRODUCTIVITY, PERFORMANCE AND ORGANIZATION.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;PERFORMANCE:&lt;/strong&gt; GetX is focused on performance and minimum consumption of resources. GetX does not use Streams or ChangeNotifier.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;PRODUCTIVITY:&lt;/strong&gt; GetX uses an easy and pleasant syntax. No matter what you want to do, there is always an easier way with GetX. It will save hours of development and will provide the maximum performance your application can deliver.&lt;/p&gt; &lt;p&gt;Generally, the developer should be concerned with removing controllers from memory. With GetX this is not necessary because resources are removed from memory when they are not used by default. If you want to keep it in memory, you must explicitly declare &#34;permanent: true&#34; in your dependency. That way, in addition to saving time, you are less at risk of having unnecessary dependencies on memory. Dependency loading is also lazy by default.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;ORGANIZATION:&lt;/strong&gt; GetX allows the total decoupling of the View, presentation logic, business logic, dependency injection, and navigation. You do not need context to navigate between routes, so you are not dependent on the widget tree (visualization) for this. You don&#39;t need context to access your controllers/blocs through an inheritedWidget, so you completely decouple your presentation logic and business logic from your visualization layer. You do not need to inject your Controllers/Models/Blocs classes into your widget tree through &lt;code&gt;MultiProvider&lt;/code&gt;s. For this, GetX uses its own dependency injection feature, decoupling the DI from its view completely.&lt;/p&gt; &lt;p&gt;With GetX you know where to find each feature of your application, having clean code by default. In addition to making maintenance easy, this makes the sharing of modules something that until then in Flutter was unthinkable, something totally possible. BLoC was a starting point for organizing code in Flutter, it separates business logic from visualization. GetX is a natural evolution of this, not only separating the business logic but the presentation logic. Bonus injection of dependencies and routes are also decoupled, and the data layer is out of it all. You know where everything is, and all of this in an easier way than building a hello world. GetX is the easiest, practical, and scalable way to build high-performance applications with the Flutter SDK. It has a large ecosystem around it that works perfectly together, it&#39;s easy for beginners, and it&#39;s accurate for experts. It is secure, stable, up-to-date, and offers a huge range of APIs built-in that are not present in the default Flutter SDK.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX is not bloated. It has a multitude of features that allow you to start programming without worrying about anything, but each of these features are in separate containers and are only started after use. If you only use State Management, only State Management will be compiled. If you only use routes, nothing from the state management will be compiled.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX has a huge ecosystem, a large community, a large number of collaborators, and will be maintained as long as the Flutter exists. GetX too is capable of running with the same code on Android, iOS, Web, Mac, Linux, Windows, and on your server. &lt;strong&gt;It is possible to fully reuse your code made on the frontend on your backend with &lt;a href=&#34;https://github.com/jonataslaw/get_server&#34;&gt;Get Server&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;In addition, the entire development process can be completely automated, both on the server and on the front end with &lt;a href=&#34;https://github.com/jonataslaw/get_cli&#34;&gt;Get CLI&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;In addition, to further increase your productivity, we have the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=get-snippets.get-snippets&#34;&gt;extension to VSCode&lt;/a&gt; and the &lt;a href=&#34;https://plugins.jetbrains.com/plugin/14975-getx-snippets&#34;&gt;extension to Android Studio/Intellij&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installing&lt;/h1&gt; &#xA;&lt;p&gt;Add Get to your pubspec.yaml file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  get:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Import get in files that it will be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:get/get.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Counter App with GetX&lt;/h1&gt; &#xA;&lt;p&gt;The &#34;counter&#34; project created by default on new project on Flutter has over 100 lines (with comments). To show the power of Get, I will demonstrate how to make a &#34;counter&#34; changing the state with each click, switching between pages and sharing the state between screens, all in an organized way, separating the business logic from the view, in ONLY 26 LINES CODE INCLUDING COMMENTS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1: Add &#34;Get&#34; before your MaterialApp, turning it into GetMaterialApp&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void main() =&amp;gt; runApp(GetMaterialApp(home: Home()));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Note: this does not modify the MaterialApp of the Flutter, GetMaterialApp is not a modified MaterialApp, it is just a pre-configured Widget, which has the default MaterialApp as a child. You can configure this manually, but it is definitely not necessary. GetMaterialApp will create routes, inject them, inject translations, inject everything you need for route navigation. If you use Get only for state management or dependency management, it is not necessary to use GetMaterialApp. GetMaterialApp is necessary for routes, snackbars, internationalization, bottomSheets, dialogs, and high-level apis related to routes and absence of context.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Note²: This step is only necessary if you gonna use route management (&lt;code&gt;Get.to()&lt;/code&gt;, &lt;code&gt;Get.back()&lt;/code&gt; and so on). If you not gonna use it then it is not necessary to do step 1&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Step 2: Create your business logic class and place all variables, methods and controllers inside it. You can make any variable observable using a simple &#34;.obs&#34;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Controller extends GetxController{&#xA;  var count = 0.obs;&#xA;  increment() =&amp;gt; count++;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 3: Create your View, use StatelessWidget and save some RAM, with Get you may no longer need to use StatefulWidget.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Home extends StatelessWidget {&#xA;&#xA;  @override&#xA;  Widget build(context) {&#xA;&#xA;    // Instantiate your class using Get.put() to make it available for all &#34;child&#34; routes there.&#xA;    final Controller c = Get.put(Controller());&#xA;&#xA;    return Scaffold(&#xA;      // Use Obx(()=&amp;gt; to update Text() whenever count is changed.&#xA;      appBar: AppBar(title: Obx(() =&amp;gt; Text(&#34;Clicks: ${c.count}&#34;))),&#xA;&#xA;      // Replace the 8 lines Navigator.push by a simple Get.to(). You don&#39;t need context&#xA;      body: Center(child: ElevatedButton(&#xA;              child: Text(&#34;Go to Other&#34;), onPressed: () =&amp;gt; Get.to(Other()))),&#xA;      floatingActionButton:&#xA;          FloatingActionButton(child: Icon(Icons.add), onPressed: c.increment));&#xA;  }&#xA;}&#xA;&#xA;class Other extends StatelessWidget {&#xA;  // You can ask Get to find a Controller that is being used by another page and redirect you to it.&#xA;  final Controller c = Get.find();&#xA;&#xA;  @override&#xA;  Widget build(context){&#xA;     // Access the updated count variable&#xA;     return Scaffold(body: Center(child: Text(&#34;${c.count}&#34;)));&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Result:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonataslaw/getx-community/master/counter-app-gif.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a simple project but it already makes clear how powerful Get is. As your project grows, this difference will become more significant.&lt;/p&gt; &#xA;&lt;p&gt;Get was designed to work with teams, but it makes the job of an individual developer simple.&lt;/p&gt; &#xA;&lt;p&gt;Improve your deadlines, deliver everything on time without losing performance. Get is not for everyone, but if you identified with that phrase, Get is for you!&lt;/p&gt; &#xA;&lt;h1&gt;The Three pillars&lt;/h1&gt; &#xA;&lt;h2&gt;State management&lt;/h2&gt; &#xA;&lt;p&gt;Get has two different state managers: the simple state manager (we&#39;ll call it GetBuilder) and the reactive state manager (GetX/Obx)&lt;/p&gt; &#xA;&lt;h3&gt;Reactive State Manager&lt;/h3&gt; &#xA;&lt;p&gt;Reactive programming can alienate many people because it is said to be complicated. GetX turns reactive programming into something quite simple:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You won&#39;t need to create StreamControllers.&lt;/li&gt; &#xA; &lt;li&gt;You won&#39;t need to create a StreamBuilder for each variable&lt;/li&gt; &#xA; &lt;li&gt;You will not need to create a class for each state.&lt;/li&gt; &#xA; &lt;li&gt;You will not need to create a get for an initial value.&lt;/li&gt; &#xA; &lt;li&gt;You will not need to use code generators&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Reactive programming with Get is as easy as using setState.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s imagine that you have a name variable and want that every time you change it, all widgets that use it are automatically changed.&lt;/p&gt; &#xA;&lt;p&gt;This is your count variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var name = &#39;Jonatas Borges&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make it observable, you just need to add &#34;.obs&#34; to the end of it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var name = &#39;Jonatas Borges&#39;.obs;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in the UI, when you want to show that value and update the screen whenever the values changes, simply do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Obx(() =&amp;gt; Text(&#34;${controller.name}&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s all. It&#39;s &lt;em&gt;that&lt;/em&gt; simple.&lt;/p&gt; &#xA;&lt;h3&gt;More details about state management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;See an more in-depth explanation of state management &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/state_management.md&#34;&gt;here&lt;/a&gt;. There you will see more examples and also the difference between the simple state manager and the reactive state manager&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will get a good idea of GetX power.&lt;/p&gt; &#xA;&lt;h2&gt;Route management&lt;/h2&gt; &#xA;&lt;p&gt;If you are going to use routes/snackbars/dialogs/bottomsheets without context, GetX is excellent for you too, just see it:&lt;/p&gt; &#xA;&lt;p&gt;Add &#34;Get&#34; before your MaterialApp, turning it into GetMaterialApp&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp( // Before: MaterialApp(&#xA;  home: MyHome(),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to a new screen:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;Get.to(NextScreen());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to new screen with name. See more details on named routes &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/route_management.md#navigation-with-named-routes&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;Get.toNamed(&#39;/details&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To close snackbars, dialogs, bottomsheets, or anything you would normally close with Navigator.pop(context);&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.back();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To go to the next screen and no option to go back to the previous screen (for use in SplashScreens, login screens, etc.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.off(NextScreen());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To go to the next screen and cancel all previous routes (useful in shopping carts, polls, and tests)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.offAll(NextScreen());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Noticed that you didn&#39;t have to use context to do any of these things? That&#39;s one of the biggest advantages of using Get route management. With this, you can execute all these methods from within your controller class, without worries.&lt;/p&gt; &#xA;&lt;h3&gt;More details about route management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Get works with named routes and also offers lower-level control over your routes! There is in-depth documentation &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/route_management.md&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependency management&lt;/h2&gt; &#xA;&lt;p&gt;Get has a simple and powerful dependency manager that allows you to retrieve the same class as your Bloc or Controller with just 1 lines of code, no Provider context, no inheritedWidget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Controller controller = Get.put(Controller()); // Rather Controller controller = Controller();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Note: If you are using Get&#39;s State Manager, pay more attention to the bindings API, which will make it easier to connect your view to your controller.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instead of instantiating your class within the class you are using, you are instantiating it within the Get instance, which will make it available throughout your App. So you can use your controller (or class Bloc) normally&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Get dependency management is decoupled from other parts of the package, so if for example, your app is already using a state manager (any one, it doesn&#39;t matter), you don&#39;t need to rewrite it all, you can use this dependency injection with no problems at all&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;controller.fetchApi();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Imagine that you have navigated through numerous routes, and you need data that was left behind in your controller, you would need a state manager combined with the Provider or Get_it, correct? Not with Get. You just need to ask Get to &#34;find&#34; for your controller, you don&#39;t need any additional dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Controller controller = Get.find();&#xA;//Yes, it looks like Magic, Get will find your controller, and will deliver it to you. You can have 1 million controllers instantiated, Get will always give you the right controller.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then you will be able to recover your controller data that was obtained back there:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Text(controller.textFromApi);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;More details about dependency management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;See a more in-depth explanation of dependency management &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/dependency_management.md&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Utils&lt;/h1&gt; &#xA;&lt;h2&gt;Internationalization&lt;/h2&gt; &#xA;&lt;h3&gt;Translations&lt;/h3&gt; &#xA;&lt;p&gt;Translations are kept as a simple key-value dictionary map. To add custom translations, create a class and extend &lt;code&gt;Translations&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:get/get.dart&#39;;&#xA;&#xA;class Messages extends Translations {&#xA;  @override&#xA;  Map&amp;lt;String, Map&amp;lt;String, String&amp;gt;&amp;gt; get keys =&amp;gt; {&#xA;        &#39;en_US&#39;: {&#xA;          &#39;hello&#39;: &#39;Hello World&#39;,&#xA;        },&#xA;        &#39;de_DE&#39;: {&#xA;          &#39;hello&#39;: &#39;Hallo Welt&#39;,&#xA;        }&#xA;      };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using translations&lt;/h4&gt; &#xA;&lt;p&gt;Just append &lt;code&gt;.tr&lt;/code&gt; to the specified key and it will be translated, using the current value of &lt;code&gt;Get.locale&lt;/code&gt; and &lt;code&gt;Get.fallbackLocale&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Text(&#39;title&#39;.tr);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using translation with singular and plural&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var products = [];&#xA;Text(&#39;singularKey&#39;.trPlural(&#39;pluralKey&#39;, products.length, Args));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using translation with parameters&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:get/get.dart&#39;;&#xA;&#xA;&#xA;Map&amp;lt;String, Map&amp;lt;String, String&amp;gt;&amp;gt; get keys =&amp;gt; {&#xA;    &#39;en_US&#39;: {&#xA;        &#39;logged_in&#39;: &#39;logged in as @name with email @email&#39;,&#xA;    },&#xA;    &#39;es_ES&#39;: {&#xA;       &#39;logged_in&#39;: &#39;iniciado sesión como @name con e-mail @email&#39;,&#xA;    }&#xA;};&#xA;&#xA;Text(&#39;logged_in&#39;.trParams({&#xA;  &#39;name&#39;: &#39;Jhon&#39;,&#xA;  &#39;email&#39;: &#39;jhon@example.com&#39;&#xA;  }));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Locales&lt;/h3&gt; &#xA;&lt;p&gt;Pass parameters to &lt;code&gt;GetMaterialApp&lt;/code&gt; to define the locale and translations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;return GetMaterialApp(&#xA;    translations: Messages(), // your translations&#xA;    locale: Locale(&#39;en&#39;, &#39;US&#39;), // translations will be displayed in that locale&#xA;    fallbackLocale: Locale(&#39;en&#39;, &#39;UK&#39;), // specify the fallback locale in case an invalid locale is selected.&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Change locale&lt;/h4&gt; &#xA;&lt;p&gt;Call &lt;code&gt;Get.updateLocale(locale)&lt;/code&gt; to update the locale. Translations then automatically use the new locale.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var locale = Locale(&#39;en&#39;, &#39;US&#39;);&#xA;Get.updateLocale(locale);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;System locale&lt;/h4&gt; &#xA;&lt;p&gt;To read the system locale, you could use &lt;code&gt;Get.deviceLocale&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;return GetMaterialApp(&#xA;    locale: Get.deviceLocale,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Change Theme&lt;/h2&gt; &#xA;&lt;p&gt;Please do not use any higher level widget than &lt;code&gt;GetMaterialApp&lt;/code&gt; in order to update it. This can trigger duplicate keys. A lot of people are used to the prehistoric approach of creating a &#34;ThemeProvider&#34; widget just to change the theme of your app, and this is definitely NOT necessary with &lt;strong&gt;GetX™&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can create your custom theme and simply add it within &lt;code&gt;Get.changeTheme&lt;/code&gt; without any boilerplate for that:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.changeTheme(ThemeData.light());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to create something like a button that changes the Theme in &lt;code&gt;onTap&lt;/code&gt;, you can combine two &lt;strong&gt;GetX™&lt;/strong&gt; APIs for that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The api that checks if the dark &lt;code&gt;Theme&lt;/code&gt; is being used.&lt;/li&gt; &#xA; &lt;li&gt;And the &lt;code&gt;Theme&lt;/code&gt; Change API, you can just put this within an &lt;code&gt;onPressed&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.changeTheme(Get.isDarkMode? ThemeData.light(): ThemeData.dark());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When &lt;code&gt;.darkmode&lt;/code&gt; is activated, it will switch to the &lt;em&gt;light theme&lt;/em&gt;, and when the &lt;em&gt;light theme&lt;/em&gt; becomes active, it will change to &lt;em&gt;dark theme&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;GetConnect&lt;/h2&gt; &#xA;&lt;p&gt;GetConnect is an easy way to communicate from your back to your front with http or websockets&lt;/p&gt; &#xA;&lt;h3&gt;Default configuration&lt;/h3&gt; &#xA;&lt;p&gt;You can simply extend GetConnect and use the GET/POST/PUT/DELETE/SOCKET methods to communicate with your Rest API or websockets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class UserProvider extends GetConnect {&#xA;  // Get request&#xA;  Future&amp;lt;Response&amp;gt; getUser(int id) =&amp;gt; get(&#39;http://youapi/users/$id&#39;);&#xA;  // Post request&#xA;  Future&amp;lt;Response&amp;gt; postUser(Map data) =&amp;gt; post(&#39;http://youapi/users&#39;, body: data);&#xA;  // Post request with File&#xA;  Future&amp;lt;Response&amp;lt;CasesModel&amp;gt;&amp;gt; postCases(List&amp;lt;int&amp;gt; image) {&#xA;    final form = FormData({&#xA;      &#39;file&#39;: MultipartFile(image, filename: &#39;avatar.png&#39;),&#xA;      &#39;otherFile&#39;: MultipartFile(image, filename: &#39;cover.png&#39;),&#xA;    });&#xA;    return post(&#39;http://youapi/users/upload&#39;, form);&#xA;  }&#xA;&#xA;  GetSocket userMessages() {&#xA;    return socket(&#39;https://yourapi/users/socket&#39;);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom configuration&lt;/h3&gt; &#xA;&lt;p&gt;GetConnect is highly customizable You can define base Url, as answer modifiers, as Requests modifiers, define an authenticator, and even the number of attempts in which it will try to authenticate itself, in addition to giving the possibility to define a standard decoder that will transform all your requests into your Models without any additional configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class HomeProvider extends GetConnect {&#xA;  @override&#xA;  void onInit() {&#xA;    // All request will pass to jsonEncode so CasesModel.fromJson()&#xA;    httpClient.defaultDecoder = CasesModel.fromJson;&#xA;    httpClient.baseUrl = &#39;https://api.covid19api.com&#39;;&#xA;    // baseUrl = &#39;https://api.covid19api.com&#39;; // It define baseUrl to&#xA;    // Http and websockets if used with no [httpClient] instance&#xA;&#xA;    // It&#39;s will attach &#39;apikey&#39; property on header from all requests&#xA;    httpClient.addRequestModifier((request) {&#xA;      request.headers[&#39;apikey&#39;] = &#39;12345678&#39;;&#xA;      return request;&#xA;    });&#xA;&#xA;    // Even if the server sends data from the country &#34;Brazil&#34;,&#xA;    // it will never be displayed to users, because you remove&#xA;    // that data from the response, even before the response is delivered&#xA;    httpClient.addResponseModifier&amp;lt;CasesModel&amp;gt;((request, response) {&#xA;      CasesModel model = response.body;&#xA;      if (model.countries.contains(&#39;Brazil&#39;)) {&#xA;        model.countries.remove(&#39;Brazilll&#39;);&#xA;      }&#xA;    });&#xA;&#xA;    httpClient.addAuthenticator((request) async {&#xA;      final response = await get(&#34;http://yourapi/token&#34;);&#xA;      final token = response.body[&#39;token&#39;];&#xA;      // Set the header&#xA;      request.headers[&#39;Authorization&#39;] = &#34;$token&#34;;&#xA;      return request;&#xA;    });&#xA;&#xA;    //Autenticator will be called 3 times if HttpStatus is&#xA;    //HttpStatus.unauthorized&#xA;    httpClient.maxAuthRetries = 3;&#xA;  }&#xA;  }&#xA;&#xA;  @override&#xA;  Future&amp;lt;Response&amp;lt;CasesModel&amp;gt;&amp;gt; getCases(String path) =&amp;gt; get(path);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GetPage Middleware&lt;/h2&gt; &#xA;&lt;p&gt;The GetPage has now new property that takes a list of GetMiddleWare and run them in the specific order.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: When GetPage has a Middlewares, all the children of this page will have the same middlewares automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Priority&lt;/h3&gt; &#xA;&lt;p&gt;The Order of the Middlewares to run can be set by the priority in the GetMiddleware.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final middlewares = [&#xA;  GetMiddleware(priority: 2),&#xA;  GetMiddleware(priority: 5),&#xA;  GetMiddleware(priority: 4),&#xA;  GetMiddleware(priority: -8),&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;those middlewares will be run in this order &lt;strong&gt;-8 =&amp;gt; 2 =&amp;gt; 4 =&amp;gt; 5&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Redirect&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called when the page of the called route is being searched for. It takes RouteSettings as a result to redirect to. Or give it null and there will be no redirecting.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;RouteSettings redirect(String route) {&#xA;  final authService = Get.find&amp;lt;AuthService&amp;gt;();&#xA;  return authService.authed.value ? null : RouteSettings(name: &#39;/login&#39;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;onPageCalled&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called when this Page is called before anything created you can use it to change something about the page or give it new page&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetPage onPageCalled(GetPage page) {&#xA;  final authService = Get.find&amp;lt;AuthService&amp;gt;();&#xA;  return page.copyWith(title: &#39;Welcome ${authService.UserName}&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OnBindingsStart&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right before the Bindings are initialize. Here you can change Bindings for this page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;List&amp;lt;Bindings&amp;gt; onBindingsStart(List&amp;lt;Bindings&amp;gt; bindings) {&#xA;  final authService = Get.find&amp;lt;AuthService&amp;gt;();&#xA;  if (authService.isAdmin) {&#xA;    bindings.add(AdminBinding());&#xA;  }&#xA;  return bindings;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OnPageBuildStart&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right after the Bindings are initialize. Here you can do something after that you created the bindings and before creating the page widget.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetPageBuilder onPageBuildStart(GetPageBuilder page) {&#xA;  print(&#39;bindings are ready&#39;);&#xA;  return page;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OnPageBuilt&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right after the GetPage.page function is called and will give you the result of the function. and take the widget that will be showed.&lt;/p&gt; &#xA;&lt;h3&gt;OnPageDispose&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right after disposing all the related objects (Controllers, views, ...) of the page.&lt;/p&gt; &#xA;&lt;h2&gt;Other Advanced APIs&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// give the current args from currentScreen&#xA;Get.arguments&#xA;&#xA;// give name of previous route&#xA;Get.previousRoute&#xA;&#xA;// give the raw route to access for example, rawRoute.isFirst()&#xA;Get.rawRoute&#xA;&#xA;// give access to Routing API from GetObserver&#xA;Get.routing&#xA;&#xA;// check if snackbar is open&#xA;Get.isSnackbarOpen&#xA;&#xA;// check if dialog is open&#xA;Get.isDialogOpen&#xA;&#xA;// check if bottomsheet is open&#xA;Get.isBottomSheetOpen&#xA;&#xA;// remove one route.&#xA;Get.removeRoute()&#xA;&#xA;// back repeatedly until the predicate returns true.&#xA;Get.until()&#xA;&#xA;// go to next route and remove all the previous routes until the predicate returns true.&#xA;Get.offUntil()&#xA;&#xA;// go to next named route and remove all the previous routes until the predicate returns true.&#xA;Get.offNamedUntil()&#xA;&#xA;//Check in what platform the app is running&#xA;GetPlatform.isAndroid&#xA;GetPlatform.isIOS&#xA;GetPlatform.isMacOS&#xA;GetPlatform.isWindows&#xA;GetPlatform.isLinux&#xA;GetPlatform.isFuchsia&#xA;&#xA;//Check the device type&#xA;GetPlatform.isMobile&#xA;GetPlatform.isDesktop&#xA;//All platforms are supported independently in web!&#xA;//You can tell if you are running inside a browser&#xA;//on Windows, iOS, OSX, Android, etc.&#xA;GetPlatform.isWeb&#xA;&#xA;&#xA;// Equivalent to : MediaQuery.of(context).size.height,&#xA;// but immutable.&#xA;Get.height&#xA;Get.width&#xA;&#xA;// Gives the current context of the Navigator.&#xA;Get.context&#xA;&#xA;// Gives the context of the snackbar/dialog/bottomsheet in the foreground, anywhere in your code.&#xA;Get.contextOverlay&#xA;&#xA;// Note: the following methods are extensions on context. Since you&#xA;// have access to context in any place of your UI, you can use it anywhere in the UI code&#xA;&#xA;// If you need a changeable height/width (like Desktop or browser windows that can be scaled) you will need to use context.&#xA;context.width&#xA;context.height&#xA;&#xA;// Gives you the power to define half the screen, a third of it and so on.&#xA;// Useful for responsive applications.&#xA;// param dividedBy (double) optional - default: 1&#xA;// param reducedBy (double) optional - default: 0&#xA;context.heightTransformer()&#xA;context.widthTransformer()&#xA;&#xA;/// Similar to MediaQuery.of(context).size&#xA;context.mediaQuerySize()&#xA;&#xA;/// Similar to MediaQuery.of(context).padding&#xA;context.mediaQueryPadding()&#xA;&#xA;/// Similar to MediaQuery.of(context).viewPadding&#xA;context.mediaQueryViewPadding()&#xA;&#xA;/// Similar to MediaQuery.of(context).viewInsets;&#xA;context.mediaQueryViewInsets()&#xA;&#xA;/// Similar to MediaQuery.of(context).orientation;&#xA;context.orientation()&#xA;&#xA;/// Check if device is on landscape mode&#xA;context.isLandscape()&#xA;&#xA;/// Check if device is on portrait mode&#xA;context.isPortrait()&#xA;&#xA;/// Similar to MediaQuery.of(context).devicePixelRatio;&#xA;context.devicePixelRatio()&#xA;&#xA;/// Similar to MediaQuery.of(context).textScaleFactor;&#xA;context.textScaleFactor()&#xA;&#xA;/// Get the shortestSide from screen&#xA;context.mediaQueryShortestSide()&#xA;&#xA;/// True if width be larger than 800&#xA;context.showNavbar()&#xA;&#xA;/// True if the shortestSide is smaller than 600p&#xA;context.isPhone()&#xA;&#xA;/// True if the shortestSide is largest than 600p&#xA;context.isSmallTablet()&#xA;&#xA;/// True if the shortestSide is largest than 720p&#xA;context.isLargeTablet()&#xA;&#xA;/// True if the current device is Tablet&#xA;context.isTablet()&#xA;&#xA;/// Returns a value&amp;lt;T&amp;gt; according to the screen size&#xA;/// can give value for:&#xA;/// watch: if the shortestSide is smaller than 300&#xA;/// mobile: if the shortestSide is smaller than 600&#xA;/// tablet: if the shortestSide is smaller than 1200&#xA;/// desktop: if width is largest than 1200&#xA;context.responsiveValue&amp;lt;T&amp;gt;()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Optional Global Settings and Manual configurations&lt;/h3&gt; &#xA;&lt;p&gt;GetMaterialApp configures everything for you, but if you want to configure Get manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;  navigatorKey: Get.key,&#xA;  navigatorObservers: [GetObserver()],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will also be able to use your own Middleware within &lt;code&gt;GetObserver&lt;/code&gt;, this will not influence anything.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;  navigatorKey: Get.key,&#xA;  navigatorObservers: [&#xA;    GetObserver(MiddleWare.observer) // Here&#xA;  ],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can create &lt;em&gt;Global Settings&lt;/em&gt; for &lt;code&gt;Get&lt;/code&gt;. Just add &lt;code&gt;Get.config&lt;/code&gt; to your code before pushing any route. Or do it directly in your &lt;code&gt;GetMaterialApp&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  enableLog: true,&#xA;  defaultTransition: Transition.fade,&#xA;  opaqueRoute: Get.isOpaqueRouteDefault,&#xA;  popGesture: Get.isPopGestureEnable,&#xA;  transitionDuration: Get.defaultDurationTransition,&#xA;  defaultGlobalState: Get.defaultGlobalState,&#xA;);&#xA;&#xA;Get.config(&#xA;  enableLog = true,&#xA;  defaultPopGesture = true,&#xA;  defaultTransition = Transitions.cupertino&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can optionally redirect all the logging messages from &lt;code&gt;Get&lt;/code&gt;. If you want to use your own, favourite logging package, and want to capture the logs there:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  enableLog: true,&#xA;  logWriterCallback: localLogWriter,&#xA;);&#xA;&#xA;void localLogWriter(String text, {bool isError = false}) {&#xA;  // pass the message to your favourite logging package here&#xA;  // please note that even if enableLog: false log messages will be pushed in this callback&#xA;  // you get check the flag if you want through GetConfig.isLogEnable&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Local State Widgets&lt;/h3&gt; &#xA;&lt;p&gt;These Widgets allows you to manage a single value, and keep the state ephemeral and locally. We have flavours for Reactive and Simple. For instance, you might use them to toggle obscureText in a &lt;code&gt;TextField&lt;/code&gt;, maybe create a custom Expandable Panel, or maybe modify the current index in &lt;code&gt;BottomNavigationBar&lt;/code&gt; while changing the content of the body in a &lt;code&gt;Scaffold&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;ValueBuilder&lt;/h4&gt; &#xA;&lt;p&gt;A simplification of &lt;code&gt;StatefulWidget&lt;/code&gt; that works with a &lt;code&gt;.setState&lt;/code&gt; callback that takes the updated value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ValueBuilder&amp;lt;bool&amp;gt;(&#xA;  initialValue: false,&#xA;  builder: (value, updateFn) =&amp;gt; Switch(&#xA;    value: value,&#xA;    onChanged: updateFn, // same signature! you could use ( newValue ) =&amp;gt; updateFn( newValue )&#xA;  ),&#xA;  // if you need to call something outside the builder method.&#xA;  onUpdate: (value) =&amp;gt; print(&#34;Value updated: $value&#34;),&#xA;  onDispose: () =&amp;gt; print(&#34;Widget unmounted&#34;),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;ObxValue&lt;/h4&gt; &#xA;&lt;p&gt;Similar to &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#valuebuilder&#34;&gt;&lt;code&gt;ValueBuilder&lt;/code&gt;&lt;/a&gt;, but this is the Reactive version, you pass a Rx instance (remember the magical .obs?) and updates automatically... isn&#39;t it awesome?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ObxValue((data) =&amp;gt; Switch(&#xA;        value: data.value,&#xA;        onChanged: data, // Rx has a _callable_ function! You could use (flag) =&amp;gt; data.value = flag,&#xA;    ),&#xA;    false.obs,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Useful tips&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;.obs&lt;/code&gt;ervables (also known as &lt;em&gt;Rx&lt;/em&gt; Types) have a wide variety of internal methods and operators.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Is very common to &lt;em&gt;believe&lt;/em&gt; that a property with &lt;code&gt;.obs&lt;/code&gt; &lt;strong&gt;IS&lt;/strong&gt; the actual value... but make no mistake! We avoid the Type declaration of the variable, because Dart&#39;s compiler is smart enough, and the code looks cleaner, but:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var message = &#39;Hello world&#39;.obs;&#xA;print( &#39;Message &#34;$message&#34; has Type ${message.runtimeType}&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Even if &lt;code&gt;message&lt;/code&gt; &lt;em&gt;prints&lt;/em&gt; the actual String value, the Type is &lt;strong&gt;RxString&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;p&gt;So, you can&#39;t do &lt;code&gt;message.substring( 0, 4 )&lt;/code&gt;. You have to access the real &lt;code&gt;value&lt;/code&gt; inside the &lt;em&gt;observable&lt;/em&gt;: The most &#34;used way&#34; is &lt;code&gt;.value&lt;/code&gt;, but, did you know that you can also use...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final name = &#39;GetX&#39;.obs;&#xA;// only &#34;updates&#34; the stream, if the value is different from the current one.&#xA;name.value = &#39;Hey&#39;;&#xA;&#xA;// All Rx properties are &#34;callable&#34; and returns the new value.&#xA;// but this approach does not accepts `null`, the UI will not rebuild.&#xA;name(&#39;Hello&#39;);&#xA;&#xA;// is like a getter, prints &#39;Hello&#39;.&#xA;name() ;&#xA;&#xA;/// numbers:&#xA;&#xA;final count = 0.obs;&#xA;&#xA;// You can use all non mutable operations from num primitives!&#xA;count + 1;&#xA;&#xA;// Watch out! this is only valid if `count` is not final, but var&#xA;count += 1;&#xA;&#xA;// You can also compare against values:&#xA;count &amp;gt; 2;&#xA;&#xA;/// booleans:&#xA;&#xA;final flag = false.obs;&#xA;&#xA;// switches the value between true/false&#xA;flag.toggle();&#xA;&#xA;&#xA;/// all types:&#xA;&#xA;// Sets the `value` to null.&#xA;flag.nil();&#xA;&#xA;// All toString(), toJson() operations are passed down to the `value`&#xA;print( count ); // calls `toString()` inside  for RxInt&#xA;&#xA;final abc = [0,1,2].obs;&#xA;// Converts the value to a json Array, prints RxList&#xA;// Json is supported by all Rx types!&#xA;print(&#39;json: ${jsonEncode(abc)}, type: ${abc.runtimeType}&#39;);&#xA;&#xA;// RxMap, RxList and RxSet are special Rx types, that extends their native types.&#xA;// but you can work with a List as a regular list, although is reactive!&#xA;abc.add(12); // pushes 12 to the list, and UPDATES the stream.&#xA;abc[3]; // like Lists, reads the index 3.&#xA;&#xA;&#xA;// equality works with the Rx and the value, but hashCode is always taken from the value&#xA;final number = 12.obs;&#xA;print( number == 12 ); // prints &amp;gt; true&#xA;&#xA;/// Custom Rx Models:&#xA;&#xA;// toJson(), toString() are deferred to the child, so you can implement override on them, and print() the observable directly.&#xA;&#xA;class User {&#xA;    String name, last;&#xA;    int age;&#xA;    User({this.name, this.last, this.age});&#xA;&#xA;    @override&#xA;    String toString() =&amp;gt; &#39;$name $last, $age years old&#39;;&#xA;}&#xA;&#xA;final user = User(name: &#39;John&#39;, last: &#39;Doe&#39;, age: 33).obs;&#xA;&#xA;// `user` is &#34;reactive&#34;, but the properties inside ARE NOT!&#xA;// So, if we change some variable inside of it...&#xA;user.value.name = &#39;Roi&#39;;&#xA;// The widget will not rebuild!,&#xA;// `Rx` don&#39;t have any clue when you change something inside user.&#xA;// So, for custom classes, we need to manually &#34;notify&#34; the change.&#xA;user.refresh();&#xA;&#xA;// or we can use the `update()` method!&#xA;user.update((value){&#xA;  value.name=&#39;Roi&#39;;&#xA;});&#xA;&#xA;print( user );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;StateMixin&lt;/h2&gt; &#xA;&lt;p&gt;Another way to handle your &lt;code&gt;UI&lt;/code&gt; state is use the &lt;code&gt;StateMixin&amp;lt;T&amp;gt;&lt;/code&gt; . To implement it, use the &lt;code&gt;with&lt;/code&gt; to add the &lt;code&gt;StateMixin&amp;lt;T&amp;gt;&lt;/code&gt; to your controller which allows a T model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Controller extends GetController with StateMixin&amp;lt;User&amp;gt;{}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;change()&lt;/code&gt; method change the State whenever we want. Just pass the data and the status in this way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;change(data, status: RxStatus.success());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;RxStatus allow these status:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;RxStatus.loading();&#xA;RxStatus.success();&#xA;RxStatus.empty();&#xA;RxStatus.error(&#39;message&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To represent it in the UI, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class OtherClass extends GetView&amp;lt;Controller&amp;gt; {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;&#xA;      body: controller.obx(&#xA;        (state)=&amp;gt;Text(state.name),&#xA;        &#xA;        // here you can put your custom loading indicator, but&#xA;        // by default would be Center(child:CircularProgressIndicator())&#xA;        onLoading: CustomLoadingIndicator(),&#xA;        onEmpty: Text(&#39;No data found&#39;),&#xA;&#xA;        // here also you can set your own error widget, but by&#xA;        // default will be an Center(child:Text(error))&#xA;        onError: (error)=&amp;gt;Text(error),&#xA;      ),&#xA;    );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;GetView&lt;/h4&gt; &#xA;&lt;p&gt;I love this Widget, is so simple, yet, so useful!&lt;/p&gt; &#xA;&lt;p&gt;Is a &lt;code&gt;const Stateless&lt;/code&gt; Widget that has a getter &lt;code&gt;controller&lt;/code&gt; for a registered &lt;code&gt;Controller&lt;/code&gt;, that&#39;s all.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; class AwesomeController extends GetController {&#xA;   final String title = &#39;My Awesome View&#39;;&#xA; }&#xA;&#xA;  // ALWAYS remember to pass the `Type` you used to register your controller!&#xA; class AwesomeView extends GetView&amp;lt;AwesomeController&amp;gt; {&#xA;   @override&#xA;   Widget build(BuildContext context) {&#xA;     return Container(&#xA;       padding: EdgeInsets.all(20),&#xA;       child: Text(controller.title), // just call `controller.something`&#xA;     );&#xA;   }&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;GetResponsiveView&lt;/h4&gt; &#xA;&lt;p&gt;Extend this widget to build responsive view. this widget contains the &lt;code&gt;screen&lt;/code&gt; property that have all information about the screen size and type.&lt;/p&gt; &#xA;&lt;h5&gt;How to use it&lt;/h5&gt; &#xA;&lt;p&gt;You have two options to build it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;with &lt;code&gt;builder&lt;/code&gt; method you return the widget to build.&lt;/li&gt; &#xA; &lt;li&gt;with methods &lt;code&gt;desktop&lt;/code&gt;, &lt;code&gt;tablet&lt;/code&gt;,&lt;code&gt;phone&lt;/code&gt;, &lt;code&gt;watch&lt;/code&gt;. the specific method will be built when the screen type matches the method when the screen is [ScreenType.Tablet] the &lt;code&gt;tablet&lt;/code&gt; method will be exuded and so on. &lt;strong&gt;Note:&lt;/strong&gt; If you use this method please set the property &lt;code&gt;alwaysUseBuilder&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With &lt;code&gt;settings&lt;/code&gt; property you can set the width limit for the screen types.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SchabanBo/get_page_example/raw/master/docs/Example.gif?raw=true&#34; alt=&#34;example&#34;&gt; Code to this screen &lt;a href=&#34;https://github.com/SchabanBo/get_page_example/raw/master/lib/pages/responsive_example/responsive_view.dart&#34;&gt;code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;GetWidget&lt;/h4&gt; &#xA;&lt;p&gt;Most people have no idea about this Widget, or totally confuse the usage of it. The use case is very rare, but very specific: It &lt;code&gt;caches&lt;/code&gt; a Controller. Because of the &lt;em&gt;cache&lt;/em&gt;, can&#39;t be a &lt;code&gt;const Stateless&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;So, when do you need to &#34;cache&#34; a Controller?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you use, another &#34;not so common&#34; feature of &lt;strong&gt;GetX&lt;/strong&gt;: &lt;code&gt;Get.create()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Get.create(()=&amp;gt;Controller())&lt;/code&gt; will generate a new &lt;code&gt;Controller&lt;/code&gt; each time you call &lt;code&gt;Get.find&amp;lt;Controller&amp;gt;()&lt;/code&gt;,&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s where &lt;code&gt;GetWidget&lt;/code&gt; shines... as you can use it, for example, to keep a list of Todo items. So, if the widget gets &#34;rebuilt&#34;, it will keep the same controller instance.&lt;/p&gt; &#xA;&lt;h4&gt;GetxService&lt;/h4&gt; &#xA;&lt;p&gt;This class is like a &lt;code&gt;GetxController&lt;/code&gt;, it shares the same lifecycle ( &lt;code&gt;onInit()&lt;/code&gt;, &lt;code&gt;onReady()&lt;/code&gt;, &lt;code&gt;onClose()&lt;/code&gt;). But has no &#34;logic&#34; inside of it. It just notifies &lt;strong&gt;GetX&lt;/strong&gt; Dependency Injection system, that this subclass &lt;strong&gt;can not&lt;/strong&gt; be removed from memory.&lt;/p&gt; &#xA;&lt;p&gt;So is super useful to keep your &#34;Services&#34; always reachable and active with &lt;code&gt;Get.find()&lt;/code&gt;. Like: &lt;code&gt;ApiService&lt;/code&gt;, &lt;code&gt;StorageService&lt;/code&gt;, &lt;code&gt;CacheService&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;void&amp;gt; main() async {&#xA;  await initServices(); /// AWAIT SERVICES INITIALIZATION.&#xA;  runApp(SomeApp());&#xA;}&#xA;&#xA;/// Is a smart move to make your Services intiialize before you run the Flutter app.&#xA;/// as you can control the execution flow (maybe you need to load some Theme configuration,&#xA;/// apiKey, language defined by the User... so load SettingService before running ApiService.&#xA;/// so GetMaterialApp() doesnt have to rebuild, and takes the values directly.&#xA;void initServices() async {&#xA;  print(&#39;starting services ...&#39;);&#xA;  /// Here is where you put get_storage, hive, shared_pref initialization.&#xA;  /// or moor connection, or whatever that&#39;s async.&#xA;  await Get.putAsync(() =&amp;gt; DbService().init());&#xA;  await Get.putAsync(SettingsService()).init();&#xA;  print(&#39;All services started...&#39;);&#xA;}&#xA;&#xA;class DbService extends GetxService {&#xA;  Future&amp;lt;DbService&amp;gt; init() async {&#xA;    print(&#39;$runtimeType delays 2 sec&#39;);&#xA;    await 2.delay();&#xA;    print(&#39;$runtimeType ready!&#39;);&#xA;    return this;&#xA;  }&#xA;}&#xA;&#xA;class SettingsService extends GetxService {&#xA;  void init() async {&#xA;    print(&#39;$runtimeType delays 1 sec&#39;);&#xA;    await 1.delay();&#xA;    print(&#39;$runtimeType ready!&#39;);&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The only way to actually delete a &lt;code&gt;GetxService&lt;/code&gt;, is with &lt;code&gt;Get.reset()&lt;/code&gt; which is like a &#34;Hot Reboot&#34; of your app. So remember, if you need absolute persistence of a class instance during the lifetime of your app, use &lt;code&gt;GetxService&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;You can test your controllers like any other class, including their lifecycles:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Controller extends GetxController {&#xA;  @override&#xA;  void onInit() {&#xA;    super.onInit();&#xA;    //Change value to name2&#xA;    name.value = &#39;name2&#39;;&#xA;  }&#xA;&#xA;  @override&#xA;  void onClose() {&#xA;    name.value = &#39;&#39;;&#xA;    super.onClose();&#xA;  }&#xA;&#xA;  final name = &#39;name1&#39;.obs;&#xA;&#xA;  void changeName() =&amp;gt; name.value = &#39;name3&#39;;&#xA;}&#xA;&#xA;void main() {&#xA;  test(&#39;&#39;&#39;&#xA;Test the state of the reactive variable &#34;name&#34; across all of its lifecycles&#39;&#39;&#39;,&#xA;      () {&#xA;    /// You can test the controller without the lifecycle,&#xA;    /// but it&#39;s not recommended unless you&#39;re not using&#xA;    ///  GetX dependency injection&#xA;    final controller = Controller();&#xA;    expect(controller.name.value, &#39;name1&#39;);&#xA;&#xA;    /// If you are using it, you can test everything,&#xA;    /// including the state of the application after each lifecycle.&#xA;    Get.put(controller); // onInit was called&#xA;    expect(controller.name.value, &#39;name2&#39;);&#xA;&#xA;    /// Test your functions&#xA;    controller.changeName();&#xA;    expect(controller.name.value, &#39;name3&#39;);&#xA;&#xA;    /// onClose was called&#xA;    Get.delete&amp;lt;Controller&amp;gt;();&#xA;&#xA;    expect(controller.name.value, &#39;&#39;);&#xA;  });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Tips&lt;/h4&gt; &#xA;&lt;h5&gt;Mockito or mocktail&lt;/h5&gt; &#xA;&lt;p&gt;If you need to mock your GetxController/GetxService, you should extend GetxController, and mixin it with Mock, that way&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class NotificationServiceMock extends GetxService with Mock implements NotificationService {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Using Get.reset()&lt;/h5&gt; &#xA;&lt;p&gt;If you are testing widgets, or test groups, use Get.reset at the end of your test or in tearDown to reset all settings from your previous test.&lt;/p&gt; &#xA;&lt;h5&gt;Get.testMode&lt;/h5&gt; &#xA;&lt;p&gt;if you are using your navigation in your controllers, use &lt;code&gt;Get.testMode = true&lt;/code&gt; at the beginning of your main.&lt;/p&gt; &#xA;&lt;h1&gt;Breaking changes from 2.0&lt;/h1&gt; &#xA;&lt;p&gt;1- Rx types:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Before&lt;/th&gt; &#xA;   &lt;th&gt;After&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxString&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IntX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxInt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MapX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxMap&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ListX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxList&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NumX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxNum&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DoubleX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxDouble&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;RxController and GetBuilder now have merged, you no longer need to memorize which controller you want to use, just use GetxController, it will work for simple state management and for reactive as well.&lt;/p&gt; &#xA;&lt;p&gt;2- NamedRoutes Before:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  namedRoutes: {&#xA;    &#39;/&#39;: GetRoute(page: Home()),&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  getPages: [&#xA;    GetPage(name: &#39;/&#39;, page: () =&amp;gt; Home()),&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Why this change? Often, it may be necessary to decide which page will be displayed from a parameter, or a login token, the previous approach was inflexible, as it did not allow this. Inserting the page into a function has significantly reduced the RAM consumption, since the routes will not be allocated in memory since the app was started, and it also allowed to do this type of approach:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;GetStorage box = GetStorage();&#xA;&#xA;GetMaterialApp(&#xA;  getPages: [&#xA;    GetPage(name: &#39;/&#39;, page:(){&#xA;      return box.hasData(&#39;token&#39;) ? Home() : Login();&#xA;    })&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Why Getx?&lt;/h1&gt; &#xA;&lt;p&gt;1- Many times after a Flutter update, many of your packages will break. Sometimes compilation errors happen, errors often appear that there are still no answers about, and the developer needs to know where the error came from, track the error, only then try to open an issue in the corresponding repository, and see its problem solved. Get centralizes the main resources for development (State, dependency and route management), allowing you to add a single package to your pubspec, and start working. After a Flutter update, the only thing you need to do is update the Get dependency, and get to work. Get also resolves compatibility issues. How many times a version of a package is not compatible with the version of another, because one uses a dependency in one version, and the other in another version? This is also not a concern using Get, as everything is in the same package and is fully compatible.&lt;/p&gt; &#xA;&lt;p&gt;2- Flutter is easy, Flutter is incredible, but Flutter still has some boilerplate that may be unwanted for most developers, such as &lt;code&gt;Navigator.of(context).push (context, builder [...]&lt;/code&gt;. Get simplifies development. Instead of writing 8 lines of code to just call a route, you can just do it: &lt;code&gt;Get.to(Home())&lt;/code&gt; and you&#39;re done, you&#39;ll go to the next page. Dynamic web urls are a really painful thing to do with Flutter currently, and that with GetX is stupidly simple. Managing states in Flutter, and managing dependencies is also something that generates a lot of discussion, as there are hundreds of patterns in the pub. But there is nothing as easy as adding a &#34;.obs&#34; at the end of your variable, and place your widget inside an Obx, and that&#39;s it, all updates to that variable will be automatically updated on the screen.&lt;/p&gt; &#xA;&lt;p&gt;3- Ease without worrying about performance. Flutter&#39;s performance is already amazing, but imagine that you use a state manager, and a locator to distribute your blocs/stores/controllers/ etc. classes. You will have to manually call the exclusion of that dependency when you don&#39;t need it. But have you ever thought of simply using your controller, and when it was no longer being used by anyone, it would simply be deleted from memory? That&#39;s what GetX does. With SmartManagement, everything that is not being used is deleted from memory, and you shouldn&#39;t have to worry about anything but programming. You will be assured that you are consuming the minimum necessary resources, without even having created a logic for this.&lt;/p&gt; &#xA;&lt;p&gt;4- Actual decoupling. You may have heard the concept &#34;separate the view from the business logic&#34;. This is not a peculiarity of BLoC, MVC, MVVM, and any other standard on the market has this concept. However, this concept can often be mitigated in Flutter due to the use of context. If you need context to find an InheritedWidget, you need it in the view, or pass the context by parameter. I particularly find this solution very ugly, and to work in teams we will always have a dependence on View&#39;s business logic. Getx is unorthodox with the standard approach, and while it does not completely ban the use of StatefulWidgets, InitState, etc., it always has a similar approach that can be cleaner. Controllers have life cycles, and when you need to make an APIREST request for example, you don&#39;t depend on anything in the view. You can use onInit to initiate the http call, and when the data arrives, the variables will be populated. As GetX is fully reactive (really, and works under streams), once the items are filled, all widgets that use that variable will be automatically updated in the view. This allows people with UI expertise to work only with widgets, and not have to send anything to business logic other than user events (like clicking a button), while people working with business logic will be free to create and test the business logic separately.&lt;/p&gt; &#xA;&lt;p&gt;This library will always be updated and implementing new features. Feel free to offer PRs and contribute to them.&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;h2&gt;Community channels&lt;/h2&gt; &#xA;&lt;p&gt;GetX has a highly active and helpful community. If you have questions, or would like any assistance regarding the use of this framework, please join our community channels, your question will be answered more quickly, and it will be the most suitable place. This repository is exclusive for opening issues, and requesting resources, but feel free to be part of GetX Community.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Slack&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Telegram&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://communityinviter.com/apps/getxworkspace/getx&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-orange.svg?sanitize=true&#34; alt=&#34;Get on Slack&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://discord.com/invite/9Hpt99N&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/722900883784073290.svg?logo=discord&#34; alt=&#34;Discord Shield&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://t.me/joinchat/PhdbJRmsZNpAqSLJL6bH7g&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Telegram-blue.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Want to contribute to the project? We will be proud to highlight you as one of our collaborators. Here are some points where you can contribute and make Get (and Flutter) even better.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Helping to translate the readme into other languages.&lt;/li&gt; &#xA; &lt;li&gt;Adding documentation to the readme (a lot of Get&#39;s functions haven&#39;t been documented yet).&lt;/li&gt; &#xA; &lt;li&gt;Write articles or make videos teaching how to use Get (they will be inserted in the Readme and in the future in our Wiki).&lt;/li&gt; &#xA; &lt;li&gt;Offering PRs for code/tests.&lt;/li&gt; &#xA; &lt;li&gt;Including new functions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Any contribution is welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Articles and videos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLV1fXIAyjeuZ6M8m56zajMUwu4uE3-SL0&#34;&gt;Flutter Getx EcoSystem package for arabic people&lt;/a&gt; - Tutorial by &lt;a href=&#34;https://github.com/UsamaElgendy&#34;&gt;Pesa Coder&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/swlh/flutter-dynamic-themes-in-3-lines-c3b375f292e3&#34;&gt;Dynamic Themes in 3 lines using GetX™&lt;/a&gt; - Tutorial by &lt;a href=&#34;https://github.com/RodBr&#34;&gt;Rod Brown&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RaqPIoJSTtI&#34;&gt;Complete GetX™ Navigation&lt;/a&gt; - Route management video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CNpXbeI_slw&#34;&gt;Complete GetX State Management&lt;/a&gt; - State management video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/ttQtlX_Q0eU&#34;&gt;GetX™ Other Features&lt;/a&gt; - Utils, storage, bindings and other features video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=BiV0DcXgk58&#34;&gt;Firestore User with GetX | Todo App&lt;/a&gt; - Video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-H-T_BSgfOE&#34;&gt;Firebase Auth with GetX | Todo App&lt;/a&gt; - Video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/the-flutter-getx-ecosystem-state-management-881c7235511d&#34;&gt;The Flutter GetX™ Ecosystem ~ State Management&lt;/a&gt; - State management by &lt;a href=&#34;https://github.com/imaachman&#34;&gt;Aachman Garg&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/the-flutter-getx-ecosystem-dependency-injection-8e763d0ec6b9&#34;&gt;The Flutter GetX™ Ecosystem ~ Dependency Injection&lt;/a&gt; - Dependency Injection by &lt;a href=&#34;https://github.com/imaachman&#34;&gt;Aachman Garg&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=IYQgtu9TM74&#34;&gt;GetX, the all-in-one Flutter package&lt;/a&gt; - A brief tutorial covering State Management and Navigation by Thad Carnevalli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=EcnqFasHf18&#34;&gt;Build a To-do List App from scratch using Flutter and GetX&lt;/a&gt; - UI + State Management + Storage video by Thad Carnevalli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jeffmcmorris/getx-flutter-firebase-auth-example-b383c1dd1de2&#34;&gt;GetX Flutter Firebase Auth Example&lt;/a&gt; - Article by Jeff McMorris.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.appwithflutter.com/flutter-state-management-with-getx/&#34;&gt;Flutter State Management with GetX – Complete App&lt;/a&gt; - by App With Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.appwithflutter.com/flutter-routing-using-get-package/&#34;&gt;Flutter Routing with Animation using Get Package&lt;/a&gt; - by App With Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dartpad.dev/2b3d0d6f9d4e312c5fdbefc414c1727e?&#34;&gt;A minimal example on dartpad&lt;/a&gt; - by &lt;a href=&#34;https://github.com/roipeker&#34;&gt;Roi Peker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Solido/awesome-flutter</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/Solido/awesome-flutter</id>
    <link href="https://github.com/Solido/awesome-flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An awesome list that curates the best Flutter libraries, tools, tutorials, articles and more.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://flutter.dev/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1295961/45949308-cbb2f680-bffb-11e8-8054-28c35ed6d132.png&#34; align=&#34;center&#34; width=&#34;850&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/search?q=flutter+language%3Adart&amp;amp;type=Repositories&#34;&gt; &lt;img alt=&#34;Github Repositories&#34; src=&#34;https://img.shields.io/badge/Repos-254629-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/sindresorhus/awesome&#34;&gt; &lt;img alt=&#34;Awesome&#34; src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/blueaquilae&#34;&gt; &lt;img alt=&#34;Awesome&#34; src=&#34;https://img.shields.io/twitter/url/https/twitter.com/blueaquilae.svg?style=social&amp;amp;label=Follow%20%40blueaquilae&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter&lt;/a&gt; is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. If you appreciate the content 📖, support projects visibility, give 👍| ⭐| 👏&lt;/p&gt; &#xA;&lt;a href=&#34;https://getstream.io/chat/sdk/flutter/?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Mar2022_FlutterChatSDK&amp;amp;utm_term=Awesome&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1295961/160238710-1b5a987a-478e-41b4-b11c-37be8670a8c9.png&#34;&gt; &lt;/a&gt; &#xA;&lt;h4&gt;Demonstrations&lt;/h4&gt; &#xA;&lt;div style=&#34;text-align: center&#34;&gt;&#xA; &lt;table&gt;&#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td style=&#34;text-align: center, width: 180&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://getstream.io/chat/sdk/flutter/?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Mar2022_FlutterChatSDK&amp;amp;utm_term=Awesome&#34;&gt;Instant Chat Integration&lt;/a&gt;&lt;/p&gt; &lt;a href=&#34;https://getstream.io/chat/sdk/flutter/?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Mar2022_FlutterChatSDK&amp;amp;utm_term=Awesome&#34;&gt; &lt;img alt=&#34;Stream&#34; src=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/.github/stream-animation.gif&#34;&gt; &lt;/a&gt; &lt;p&gt;&lt;a href=&#34;https://getstream.io/chat/sdk/flutter/?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Mar2022_FlutterChatSDK&amp;amp;utm_term=Awesome&#34;&gt;with Stream!&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;    &lt;td style=&#34;text-align: center&#34;&gt; &lt;img width=&#34;180&#34; alt=&#34;BMW&#34; src=&#34;https://user-images.githubusercontent.com/1295961/160239273-ce881c0c-c3de-4953-9448-dfd12d7ffe30.png&#34;&gt; &lt;pre&gt;&lt;code&gt;BMW&#xA;Connect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;    &lt;td style=&#34;text-align: center&#34;&gt; &lt;img width=&#34;180&#34; alt=&#34;BlueAquilae Twitter Meteo&#34; src=&#34;https://user-images.githubusercontent.com/1295961/160238906-540a4a0d-b721-4c73-8b58-58b96b5e6414.png&#34;&gt; &lt;pre&gt;&lt;code&gt;Calendar &#xA;Meteo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt;&#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#articles&#34;&gt;Articles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#videos&#34;&gt;Videos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#components&#34;&gt;Components&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#navigation&#34;&gt;Navigation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#templates&#34;&gt;Template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#plugins&#34;&gt;Plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#frameworks&#34;&gt;Frameworks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#experimental&#34;&gt;Experimental&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#open-source-apps&#34;&gt;Open Source Apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#web&#34;&gt;Web&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#utilities&#34;&gt;Utilities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#books&#34;&gt;Books&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#bonus&#34;&gt;Bonus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Articles&lt;/h2&gt; &#xA;&lt;h3&gt;Introduction&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-io/building-beautiful-flexible-user-interfaces-with-flutter-material-theming-and-official-material-13ae9279ef19&#34;&gt;Google IO 2018&lt;/a&gt; - Building beautiful, flexible user interfaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/hjjunior/why-i-chose-flutter&#34;&gt;Presentation&lt;/a&gt; - by &lt;a href=&#34;https://github.com/hjJunior&#34;&gt;Helio S. Junior&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/ins-and-outs-of-flutter-web-7a82721dc19a&#34;&gt;Flutter Web&lt;/a&gt; - Ins and Outs of Flutter Web by &lt;a href=&#34;https://github.com/nash0x7e2&#34;&gt;Nash&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Websites / Blogs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://didierboelens.com&#34;&gt;Welcome to Flutter&lt;/a&gt; - English and French blog dedicated to providing practical solutions to most asked questions about Flutter by Didier Boelens.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marcinszalek.pl/&#34;&gt;SZAŁKO-BLOG&lt;/a&gt; - Step by step advanced design by &lt;a href=&#34;https://marcinszalek.pl&#34;&gt;Marcin Szalek&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutterbyexample.com/&#34;&gt;Flutter by Example&lt;/a&gt; - Tutorials based on Redux, Firebase, Custom Animations, and UI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.institute/&#34;&gt;Flutter Institute&lt;/a&gt; - Very original content and tutorials by &lt;a href=&#34;https://twitter.com/flutterinst&#34;&gt;Brian Armstrong&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://iirokrankka.com/&#34;&gt;Iirokrankka.com&lt;/a&gt; - Articles and tutorials and anything related by &lt;a href=&#34;https://twitter.com/koorankka&#34;&gt;Iiro Krankka&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@norbertkozsir&#34;&gt;Norbert&lt;/a&gt; - In depth articles, features and app creation by &lt;a href=&#34;https://github.com/Norbert515&#34;&gt;Norbert515&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@diegoveloper&#34;&gt;Flutter Tips&lt;/a&gt; - Articles, tips &amp;amp; tricks in the development by &lt;a href=&#34;https://twitter.com/diegoveloper&#34;&gt;Diego Velásquez&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.filledstacks.com/&#34;&gt;FilledStacks&lt;/a&gt; - Tutorials and guides on development by &lt;a href=&#34;https://www.instagram.com/filledstacks/&#34;&gt;Dane Mackier&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/erluxman/awesomefluttertips/&#34;&gt;Awesome Flutter tips&lt;/a&gt; - Tips to help developers increase productivity by &lt;a href=&#34;https://twitter.com/erluxman/&#34;&gt;erluxman&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tutorial&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter/#0&#34;&gt;Animated Chat&lt;/a&gt; - Building beautiful UIs by Google Code Labs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-firebase/#0&#34;&gt;Firebase Chat&lt;/a&gt; - Firebase integration by Google Code Labs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://sergiandreplace.com/2017/09/planets-flutter-from-design-to-app&#34;&gt;Planets-Flutter: from design to app&lt;/a&gt; - Detailed planets design tutorial.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lesnitsky/todolist_flutter&#34;&gt;Todo List&lt;/a&gt; [259⭐] – Step by step tutorial how to build Todo List with Flutter by &lt;a href=&#34;https://twitter.com/lesnitsky_dev&#34;&gt;Andrei Lesnitsky&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://suragch.medium.com/flutter-and-dart-development-articles-981be9ef7b23&#34;&gt;Flutter and Dart development&lt;/a&gt; - Articles and tutorials by &lt;a href=&#34;https://twitter.com/Suragch1&#34;&gt;Suragch&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Beginner&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/olexale/flutter_roadmap&#34;&gt;Roadmap to Flutter Development&lt;/a&gt; [2795⭐] - Visual roadmap with principles, patterns, and frameworks for Flutter newbies by &lt;a href=&#34;https://github.com/olexale&#34;&gt;Olexandr Leuschenko&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-layout-cheat-sheet-5363348d037e&#34;&gt;Layout Cheat Sheet&lt;/a&gt; - Extensive examples of layout widgets by &lt;a href=&#34;https://github.com/tomaszpolanski&#34;&gt;Tomek Polański&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.raywenderlich.com/24499516-getting-started-with-flutter&#34;&gt;Getting Started with Flutter&lt;/a&gt; - by &lt;a href=&#34;https://www.raywenderlich.com&#34;&gt;raywenderlich.com&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antz22/ultimate-guide-to-flutter&#34;&gt;Beginner&#39;s Guide&lt;/a&gt; [123⭐] - Comprehensive guide to the basics of Flutter and Firebase by &lt;a href=&#34;https://github.com/antz22&#34;&gt;Anthony&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Intermediate&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://suragch.medium.com/flutter-state-management-for-minimalists-4c71a2f2f0c1?sk=6f9cedfb550ca9cc7f88317e2e7055a0&#34;&gt;Flutter state management for minimalists&lt;/a&gt; - Understanding app architecture without relying on third-party frameworks by &lt;a href=&#34;https://twitter.com/Suragch1&#34;&gt;Suragch&lt;/a&gt;. See also &lt;a href=&#34;https://raw.githubusercontent.com/Solido/awesome-flutter/master/#state-management&#34;&gt;State Management&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Advanced&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=UUfXWzp0-DU&#34;&gt;Rendering Pipeline&lt;/a&gt; [799👍] and &lt;a href=&#34;https://www.youtube.com/watch?v=VsYbFnucHsU&#34;&gt;Let&#39;s build a render tree&lt;/a&gt; - Engine architecture by Adam Barth.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-what-are-widgets-renderobjects-and-elements-630a57d05208&#34;&gt;Render Objects&lt;/a&gt; - What are Widgets, RenderObjects and Elements? by &lt;a href=&#34;https://github.com/Norbert515&#34;&gt;Norbert515&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skillsmatter.com/skillscasts/12254-flutter-with-streams-and-rxdart&#34;&gt;Streams and RxDart&lt;/a&gt; - Skillmatters presentation by &lt;a href=&#34;https://github.com/brianegan&#34;&gt;Brian Egan&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-deep-dive-gestures-c16203b3434f&#34;&gt;Gesture System&lt;/a&gt; - Flutter Deep Dive: Gestures by &lt;a href=&#34;https://github.com/nash0x7e2&#34;&gt;Nash&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.didierboelens.com/2018/06/widget---state---context---inheritedwidget/&#34;&gt;Schemas&lt;/a&gt; - Widget, State, Context and InheritedWidget explanations by &lt;a href=&#34;https://didierboelens.com&#34;&gt;Didier Boelens&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/saugo360/flutters-rendering-engine-a-tutorial-part-1-e9eff68b825d&#34;&gt;Rendering Engine Tutorial&lt;/a&gt; - Flutter&#39;s Rendering Engine: A Tutorial by &lt;a href=&#34;https://github.com/AbdulRahmanAlHamali/&#34;&gt;AbdulRahman AlHamali&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@chemamolins/is-flutters-inheritedwidget-a-good-fit-to-hold-app-state-2ec5b33d023e&#34;&gt;Inherited Widget&lt;/a&gt; - Flutter’s InheritedWidget to hold app state by &lt;a href=&#34;https://github.com/jmolins&#34;&gt;Chema Molins&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-from-mobile-to-desktop-93635e8de64e&#34;&gt;From Mobile to Desktop&lt;/a&gt; - Building applications for smartphones and desktops by &lt;a href=&#34;https://neppel.com.br&#34;&gt;Marcelo Henrique Neppel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/a-deep-dive-into-flutters-accessibility-widgets-eb0ef9455bc&#34;&gt;Accessibility widgets&lt;/a&gt; - Deep dive information about all aspects of accessibility by &lt;a href=&#34;https://twitter.com/salihgueler&#34;&gt;Muhammed Salih Güler&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-io/profiling-flutter-applications-using-the-timeline-a1a434964af3&#34;&gt;Profiling w/ Timeline&lt;/a&gt; - Using the Timeline allows you to find and address specific performance issues in your application by &lt;a href=&#34;https://medium.com/@chinmaygarde&#34;&gt;Chinmay Garde&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Howtos&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marcinszalek.pl/flutter/tickets-challenge-parallax&#34;&gt;Parallax Effect&lt;/a&gt; - Parallax &amp;amp; non linear animation by &lt;a href=&#34;https://marcinszalek.pl&#34;&gt;Marcin Szalek&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@salvatoregiordanoo/flavoring-flutter-392aaa875f36&#34;&gt;Build Flavor&lt;/a&gt; - Define build configurations and switch them by &lt;a href=&#34;https://medium.com/@salvatoregiordanoo&#34;&gt;Salvatore Giordano&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@angeloavv/easily-build-flavors-in-flutter-android-and-ios-with-flutter-flavorizr-d48cbf956e4&#34;&gt;Build Flavor&lt;/a&gt; - Easily build flavors in Flutter (Android and iOS) with flutter_flavorizr by &lt;a href=&#34;https://medium.com/@angeloavv&#34;&gt;Angelo Cassano&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Videos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CPmN4-i9zC8&amp;amp;list=PLOU2XLYxmsIK0r_D-zWcmJ1plIcDNnRkK&#34;&gt;Boring Show&lt;/a&gt; - Exploration with the Flutter Team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WwhyaqNtNQY&amp;amp;list=PLJbE2Yu2zumDqr_-hqpAN0nIr6m14TAsd&#34;&gt;Tensor Programming&lt;/a&gt; [86🎬] - Very rich content by &lt;a href=&#34;http://tensor-programming.com/&#34;&gt;Tensor Programming&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qWL1lGchpRA&amp;amp;list=PLR2qQy0Zxs_UdqAcaipPR3CG1Ly57UlhV&#34;&gt;Mtechviral&lt;/a&gt; [245🎬] - [Hindi/English] Mtechviral Series By &lt;a href=&#34;https://github.com/iampawan&#34;&gt;Pawan Kumar&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLhXZp00uXBk5TSY6YOdmpzp1yG3QbFvrN&#34;&gt;Flutter in Practice&lt;/a&gt; - Free video courssd for beginners &amp;amp; non-programmers by &lt;a href=&#34;https://zaiste.net/&#34;&gt;Zaiste&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/c/whatsupcoders&#34;&gt;Whatsupcoders&lt;/a&gt; [82🎬] - Free video series on Flutter Widgets by &lt;a href=&#34;https://github.com/whatsupcoders&#34;&gt;Kamal&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCSIvrn68cUk8CS8MbtBmBkA&#34;&gt;Reso Coder&lt;/a&gt; - Intermediate and advanced videos by &lt;a href=&#34;https://github.com/ResoCoder&#34;&gt;Matej Rešetár&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;h3&gt;Demonstrations&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/gallery&#34;&gt;Official Gallery&lt;/a&gt; - Demo for the material design widgets provided by Flutter Team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nisrulz/flutter-examples&#34;&gt;Flutter Examples&lt;/a&gt; [5861⭐] - Simple basic isolated apps for devs by &lt;a href=&#34;https://github.com/nisrulz&#34;&gt;Nishant Srivastava&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/X-Wei/flutter_catalog&#34;&gt;Flutter Catalog&lt;/a&gt; [1601⭐] - showcasing Flutter components, with side-by-side source code view, by &lt;a href=&#34;https://github.com/X-Wei&#34;&gt;X-Wei&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Solido/flutter-d-art&#34;&gt;Generative Art&lt;/a&gt; [401⭐] - Generative Art by &lt;a href=&#34;https://github.com/Solido&#34;&gt;Robert Felker&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;UI&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/letsar/flutter_staggered_grid_view&#34;&gt;StaggeredGridView&lt;/a&gt; [2292⭐] - GridView with tiles of variable sizes by &lt;a href=&#34;https://github.com/letsar&#34;&gt;Romain Rastel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xqwzts/flutter_radial_menu&#34;&gt;Radial Menu&lt;/a&gt; [401⭐] - Animated Radial Menu by &lt;a href=&#34;https://github.com/xqwzts&#34;&gt;Victor Choueiri&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ivaskuu/tinder_cards&#34;&gt;Tinder Cards&lt;/a&gt; [646⭐] - Tinder like cards swipe effect by &lt;a href=&#34;https://github.com/Ivaskuu&#34;&gt;Ivascu Adrian&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hnvn/flutter_flip_panel&#34;&gt;Flip Panel&lt;/a&gt; [461⭐] - Flip panel with built-in animation by &lt;a href=&#34;https://github.com/hnvn&#34;&gt;HungHD&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/duytq94/facebook-reaction-animation&#34;&gt;Facebook Reactions&lt;/a&gt; [261⭐] - Facebook reactions widget by &lt;a href=&#34;https://github.com/duytq94&#34;&gt;Duy Tran&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AndreHaueisen/flushbar&#34;&gt;Flushbar&lt;/a&gt; [818⭐] - Highly configurable Snackbar by &lt;a href=&#34;https://github.com/AndreHaueisen&#34;&gt;Andre Haueisen&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Rahiche/stepper_touch&#34;&gt;Stepper Touch&lt;/a&gt; [238⭐] - Lateral value stepper nicely animated by &lt;a href=&#34;https://github.com/Rahiche&#34;&gt;Raouf Rahiche&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AbdulRahmanAlHamali/flutter_typeahead&#34;&gt;Typeahead&lt;/a&gt; [560⭐] - Display overlay suggestions to users as they type by &lt;a href=&#34;https://github.com/AbdulRahmanAlHamali&#34;&gt;Abdul Rahman Al Hamali&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ariedov/flutter_snaplist&#34;&gt;Snaplist&lt;/a&gt; [366⭐] - Create snappable list views by &lt;a href=&#34;https://github.com/ariedov&#34;&gt;David Leibovych&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LiewJunTung/pin_code_text_field&#34;&gt;Pin Code&lt;/a&gt; [252⭐] - Animated &amp;amp; customisable Pin code for login and OTP by &lt;a href=&#34;https://github.com/liewjuntung&#34;&gt;Liew Jun Tung&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/faob-dev/folding_cell&#34;&gt;Folding Cell&lt;/a&gt; [430⭐] - Fold your widget by &lt;a href=&#34;https://github.com/faob-dev&#34;&gt;Faob&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aagarwal1012/Liquid-Pull-To-Refresh&#34;&gt;Liquid Pull To Refresh&lt;/a&gt; [922⭐] - A beautiful and custom refresh indicator by &lt;a href=&#34;https://github.com/aagarwal1012/&#34;&gt;Ayush Agarwal&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/slide_container&#34;&gt;Slide Container&lt;/a&gt; Slide vertically and horizontally with a smooth dampened motion by &lt;a href=&#34;https://github.com/quentinleguennec&#34;&gt;Quentin Le Guennec&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LanarsInc/direct-select-flutter&#34;&gt;Direct Select&lt;/a&gt; - Selection widget with an ethereal, full-screen modal popup by &lt;a href=&#34;https://github.com/iyatsouba&#34;&gt;Ivan Yatsouba&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xsahil03x/before_after&#34;&gt;Before After&lt;/a&gt; [580⭐] - Beautiful slider which makes it easier to display the difference between two images, by &lt;a href=&#34;https://github.com/xsahil03x&#34;&gt;Sahil Kumar&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vintage/scratcher&#34;&gt;Scratcher&lt;/a&gt; [306⭐] - Scratch card widget which temporarily hides content from user, by &lt;a href=&#34;https://github.com/vintage&#34;&gt;Kamil Rykowski&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aliyigitbireroglu/flutter-image-sequence-animator&#34;&gt;Image Sequence Animator&lt;/a&gt; [104⭐] - A simple widget for animating a set of images with full custom controls as an alternative to using a GIF file by &lt;a href=&#34;https://github.com/aliyigitbireroglu&#34;&gt;Ali Yigit Bireroglu&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaweii/Flutter_beautiful_popup&#34;&gt;Beautiful_Popup&lt;/a&gt; [452⭐] - Beautify your app popup by &lt;a href=&#34;https://github.com/jaweii&#34;&gt;jaweii&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Origogi/Flutter-Credit-Card-Input&#34;&gt;Credit Card Form&lt;/a&gt; [317⭐] - Animated credit card input form &lt;a href=&#34;https://github.com/Origogi&#34;&gt;Origogi&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sbilketay/animated_selection_slide&#34;&gt;Animated Selection Slide&lt;/a&gt; An animated selection widget by swiping by &lt;a href=&#34;https://github.com/sbilketay&#34;&gt;Sezgin Bilgetay&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Dn-a/flutter_tags&#34;&gt;Flutter Tags&lt;/a&gt; [332⭐] - Tags with different customizations by &lt;a href=&#34;https://github.com/Dn-a&#34;&gt;Di Natale Antonino&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Idean/Flutter-Neumorphic&#34;&gt;Flutter Neumorphic&lt;/a&gt; [1329⭐] - Ready to use Neumorphic kit for Flutter with 🕶️ dark mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HatFeather/flutter_dough&#34;&gt;Dough&lt;/a&gt; [388⭐] - Widgets for a squishy user interface by &lt;a href=&#34;https://github.com/HatFeather&#34;&gt;Josiah Saunders&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/codegrue/card_settings&#34;&gt;Card Settings&lt;/a&gt; [356⭐] - package for building settings forms by &lt;a href=&#34;https://github.com/codegrue&#34;&gt;codegrue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chulwoo-park/timelines&#34;&gt;Timelines&lt;/a&gt; [413⭐] - Powerful &amp;amp; Easy to use timeline package by &lt;a href=&#34;https://github.com/chulwoo-park&#34;&gt;Chulwoo Park&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JHBitencourt/timeline_tile&#34;&gt;Timeline Tile&lt;/a&gt; [446⭐] - A tile to help build beautiful and customisable timelines by &lt;a href=&#34;https://github.com/JHBitencourt&#34;&gt;Julio Bitencourt&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chrisedg87/flutter_rounded_loading_button&#34;&gt;Rounded Loading Button&lt;/a&gt; [127⭐] - Button with a loading indicator, complete with success and error animations by &lt;a href=&#34;https://twitter.com/ChrisTheEdg&#34;&gt;Chris Edgington&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bosskmk/pluto_grid&#34;&gt;PlutoGrid&lt;/a&gt; [182⭐] - Web and desktop datagrid that can be controlled by the keyboard by &lt;a href=&#34;https://github.com/bosskmk&#34;&gt;bosskmk&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Sticky Headers&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TatsuUkraine/flutter_sticky_infinite_list&#34;&gt;Sticky Infinite List&lt;/a&gt; [234⭐] - Highly configurable multi directional infinite list with Sticky Headers by &lt;a href=&#34;https://github.com/TatsuUkraine&#34;&gt;TatsuUkraine&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/letsar/flutter_sticky_header&#34;&gt;Sticky Header&lt;/a&gt; [666⭐] - Sliver based sticky headers by &lt;a href=&#34;https://github.com/letsar&#34;&gt;Romain Rastel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/slightfoot/flutter_sticky_headers&#34;&gt;Sticky Headers&lt;/a&gt; [731⭐] - Configurable sticky headers by &lt;a href=&#34;http://www.devangels.london/&#34;&gt;Simon Lightfoot&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Drawers&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RafaelBarbosatec/hidden_drawer_menu&#34;&gt;Hidden Drawer Menu&lt;/a&gt; [231⭐] - Beautiful drawer mode menu feature with perspective animations by &lt;a href=&#34;https://github.com/RafaelBarbosatec&#34;&gt;Rafael Almeida Barbosa&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Dn-a/flutter_inner_drawer&#34;&gt;Flutter Inner Drawer&lt;/a&gt; [385⭐] - Easy way to create an internal drawer (left / right) where you can enter a list-menu or other by &lt;a href=&#34;https://github.com/Dn-a&#34;&gt;Di Natale Antonino&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Bottom bars&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tunitowen/fancy_bottom_navigation&#34;&gt;Fancy Bottom Navigation&lt;/a&gt; [545⭐] - Animated bottom navigation by &lt;a href=&#34;https://github.com/tunitowen&#34;&gt;Tony Owen&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/circular_bottom_navigation&#34;&gt;Circular Bottom Navigation&lt;/a&gt; [439⭐] - Beautiful animated bottom navigation bar by &lt;a href=&#34;https://github.com/imaNNeoFighT&#34;&gt;Iman Khoshabi&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pedromassango/bottom_navy_bar&#34;&gt;Bottom Navy Bar&lt;/a&gt; [775⭐] - Beautiful and colorful animated bottom navigation bar by &lt;a href=&#34;https://github.com/pedromassango&#34;&gt;Pedro Massango&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pedromassango/titled_navigation_bar&#34;&gt;Titled Navigation Bar&lt;/a&gt; [291⭐] - Animated bottom navigation bar that switch between icon and title by &lt;a href=&#34;http://github.com/pedromassango&#34;&gt;Pedro Massango&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sooxt98/google_nav_bar&#34;&gt;Google Nav Bar&lt;/a&gt; [409⭐] - A modern google style nav bar for flutter by &lt;a href=&#34;http://github.com/sooxt98&#34;&gt;Sooxt98&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Bottom Sheets&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mcrovero/rubber&#34;&gt;Rubber Bottom Sheet&lt;/a&gt; [418⭐] - Elastic material bottom sheet by &lt;a href=&#34;https://github.com/mcrovero&#34;&gt;Mattia Crovero&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jamesblasco/modal_bottom_sheet&#34;&gt;Modal Bottom Sheet&lt;/a&gt; [1082⭐] - Modal bottom sheet with Material, Cupertino iOS13 or custom appareance by &lt;a href=&#34;https://github.com/jamesblasco&#34;&gt;Jaime Blasco&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Sliders&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boeledi/RangeSlider&#34;&gt;RangeSlider&lt;/a&gt; [318⭐] - 2-thumb configurable RangeSlider by &lt;a href=&#34;https://www.didierboelens.com&#34;&gt;Didier Boelens&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rvamsikrishna/flutter_fluid_slider&#34;&gt;Fluid Slider&lt;/a&gt; [262⭐] - A slider with a minimal design and fluid like animation by &lt;a href=&#34;https://github.com/rvamsikrishna&#34;&gt;Vamsi Krishna&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ali-Azmoud/flutter_xlider&#34;&gt;Flutter Xlider&lt;/a&gt; [336⭐] - A material design slider and range slider, horizontal and vertical, with RTL support by &lt;a href=&#34;https://github.com/Ali-Azmoud&#34;&gt;Ali-Azmoud&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;UI Helpers&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hanshengchiu/reorderables&#34;&gt;Reorderables&lt;/a&gt; [442⭐] - Drag&amp;amp;Drop Table, Row, Column, Wrap(Grid) and SliverList elements by &lt;a href=&#34;https://github.com/hanshengchiu&#34;&gt;Hansheng Chiu&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aagarwal1012/Liquid-Pull-To-Refresh&#34;&gt;Liquid Pull To Refresh&lt;/a&gt; [922⭐] - A beautiful and custom refresh indicator by &lt;a href=&#34;https://github.com/aagarwal1012/&#34;&gt;Ayush Agarwal&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fluttercommunity/flutter_infinite_listview&#34;&gt;Infinite Listview&lt;/a&gt; [206⭐] - Infinite scroll in both directions by &lt;a href=&#34;https://github.com/slightfoot&#34;&gt;Simon Lightfoot&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jogboms/flutter_offline&#34;&gt;Offline&lt;/a&gt; [742⭐] - Tidy utility to handle offline/online connectivity by &lt;a href=&#34;https://twitter.com/jogboms&#34;&gt;Jeremiah Ogbomo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quire-io/scroll-to-index&#34;&gt;Scroll To Index&lt;/a&gt; [332⭐] - Scroll to specified child element with given index for SliverList/ListView by &lt;a href=&#34;https://github.com/jerrywell/&#34;&gt;Jerry Chen&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rvamsikrishna/inview_notifier_list&#34;&gt;In View Notifier List&lt;/a&gt; - ListView that notify when widgets are on screen within a provided area by &lt;a href=&#34;https://github.com/rvamsikrishna&#34;&gt;Vamsi Krishna&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/simformsolutions/flutter_showcaseview&#34;&gt;ShowCaseView&lt;/a&gt; [687⭐] - Way to showcase your app features on iOS and Android by &lt;a href=&#34;https://github.com/simformsolutions&#34;&gt;Simform&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Material Design&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tiagojencmartins/unicornspeeddial&#34;&gt;Unicorn Speed Dial&lt;/a&gt; [300⭐] - Floating Action Button with Speed Dial by &lt;a href=&#34;https://github.com/tiagojencmartins&#34;&gt;Tiago Martins&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/letsar/flutter_slidable&#34;&gt;Slidable&lt;/a&gt; [2008⭐] - Slidable list item with left and right slide actions by &lt;a href=&#34;https://github.com/letsar&#34;&gt;Romain Rastel&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Cupertino Design&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aliyigitbireroglu/flutter-peek-and-pop&#34;&gt;Peek &amp;amp; Pop&lt;/a&gt; [188⭐] - Peek &amp;amp; Pop implementation based on the iOS functionality by &lt;a href=&#34;https://github.com/aliyigitbireroglu&#34;&gt;Ali Yigit Bireroglu&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Effect&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/43550853/how-do-i-do-the-frosted-glass-effect-in-flutter&#34;&gt;Frosted Glass&lt;/a&gt; - Render effect by &lt;a href=&#34;http://www.collinjackson.com&#34;&gt;Collin Jackson&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FlutterRocks/page-transformer&#34;&gt;Parallax&lt;/a&gt; [735⭐] - ViewPager by &lt;a href=&#34;https://github.com/roughike&#34;&gt;Iiro Krankka&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hnvn/flutter_shimmer&#34;&gt;Shimmer&lt;/a&gt; [1387⭐] - Shimmer effect while content is loading by &lt;a href=&#34;https://github.com/hnvn&#34;&gt;HungHD&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/i-protoss/wave&#34;&gt;Wave&lt;/a&gt; [742⭐] - Displaying some waves with custom color, duration, floating and blur effects by &lt;a href=&#34;https://github.com/RockerFlower&#34;&gt;RockerFlower&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iamSahdeep/liquid_swipe_flutter&#34;&gt;Liquid Swipe&lt;/a&gt; - Liquid swipe to your stacked containers by &lt;a href=&#34;https://github.com/iamSahdeep&#34;&gt;Sahdeep Singh&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skkallayath/photofilters&#34;&gt;PhotoFilters&lt;/a&gt; [297⭐] - Apply filters to an image by &lt;a href=&#34;https://github.com/skkallayath&#34;&gt;Sharafudheen KK&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JonathanMonga/flutter_shine.dart&#34;&gt;Shine&lt;/a&gt; [137⭐] - Pretty shadows with dynamic light positions by &lt;a href=&#34;https://github.com/JonathanMonga/&#34;&gt;Jonathan Monga&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mcaubrey/clay_containers&#34;&gt;Clay Containers&lt;/a&gt; [369⭐] - Neumorphic widget primitives to serve as the foundation of your own designs by &lt;a href=&#34;https://github.com/mcaubrey&#34;&gt;Michael Charles&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Calendar&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pinkfish/flutter_calendar&#34;&gt;Calendar Widget&lt;/a&gt; [162⭐] - Calendar widget by &lt;a href=&#34;https://github.com/pinkfish&#34;&gt;David Bennett&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dooboolab/flutter_calendar_carousel&#34;&gt;Calendar Carousel Widget&lt;/a&gt; &#xA;  &lt;!-- stargazers:dooboolab/flutter_calendar_carousel--&gt; - Calendar carousel by &lt;a href=&#34;https://github.com/dooboolab/flutter_calendar_carousel&#34;&gt;dooboolab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aleksanderwozniak/table_calendar&#34;&gt;Table Calendar&lt;/a&gt; [1167⭐] - Calendar organized neatly into a Table, with vertical autosizing by &lt;a href=&#34;https://github.com/aleksanderwozniak&#34;&gt;Aleksander Woźniak&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jamalianpour/time_planner&#34;&gt;Time Planner&lt;/a&gt; [66⭐] - A beautiful, easy to use and customizable time planner for flutter mobile, desktop and web by &lt;a href=&#34;https://github.com/Jamalianpour&#34;&gt;Mohammad Jamalianpour&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Login&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GeekyAnts/flutter-login-home-animation&#34;&gt;Login Animation&lt;/a&gt; [1044⭐] - Smooth animation from login to home by &lt;a href=&#34;https://github.com/geekruchika&#34;&gt;Ruchika Gupta&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NearHuscarl/flutter_login&#34;&gt;Flutter Login&lt;/a&gt; - Login widget with slick animation from start to finish by &lt;a href=&#34;https://github.com/NearHuscarl&#34;&gt;NearHuscarl&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Backend-Driven&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dengyin2000/dynamic_widget&#34;&gt;Dynamic Widget&lt;/a&gt; [1100⭐] - Build your dynamic UI with json, and the json format is very similar with flutter widget code by &lt;a href=&#34;https://github.com/dengyin2000&#34;&gt;Denny Deng&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Image&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/serenader2014/flutter_carousel_slider&#34;&gt;Carousel Slider&lt;/a&gt; [1178⭐] - Carousel slider widget, support infinite scroll and custom child widget by &lt;a href=&#34;https://github.com/serenader2014&#34;&gt;serenader&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pulyaevskiy/parallax-image&#34;&gt;Parallax Image&lt;/a&gt; [238⭐] - Image parallax by &lt;a href=&#34;https://github.com/pulyaevskiy&#34;&gt;Anatoly Pulyaevskiy&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/renancaraujo/photo_view&#34;&gt;Photo View&lt;/a&gt; [1478⭐] - Scalable image view with loading placeholder by &lt;a href=&#34;https://github.com/renancaraujo&#34;&gt;Renan C. Araújo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dnfield/flutter_svg&#34;&gt;SVG&lt;/a&gt; [1270⭐] - SVG parsing, rendering, and widget library by &lt;a href=&#34;https://github.com/dnfield&#34;&gt;Dan Field&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hnvn/flutter_image_cropper&#34;&gt;Image Cropper&lt;/a&gt; [814⭐] - Crop your images support ratio, rotation, zoom by &lt;a href=&#34;https://github.com/hnvn&#34;&gt;HungHD&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/renefloor/flutter_cached_network_image&#34;&gt;Cached Network Image&lt;/a&gt; [1911⭐] - Show images from the internet and keep them in the cache directory by.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xvrh/lottie-flutter&#34;&gt;Lottie&lt;/a&gt; [665⭐] - Use airbnb&#39;s popular &lt;a href=&#34;https://airbnb.design/lottie/&#34;&gt;After Effects Animation library&lt;/a&gt; by &lt;a href=&#34;https://github.com/xvrh/lottie-flutter&#34;&gt;xvrh&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/renancaraujo/bitmap&#34;&gt;Bitmap&lt;/a&gt; [128⭐] - Perform Bitmap manipulations (such as contrast and exposure) with a help from the Dart FFI by &lt;a href=&#34;https://github.com/renancaraujo&#34;&gt;Renan C. Araújo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xclud/flutter_crop&#34;&gt;Crop&lt;/a&gt; [171⭐] - Crop any widget/image in Android, iOS, Web and Desktop by &lt;a href=&#34;https://github.com/xclud/&#34;&gt;Mahdi K. Fard&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Image Picker&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/plugins/tree/master/packages/image_picker&#34;&gt;Image Picker&lt;/a&gt; - Images Selection by &lt;a href=&#34;http://www.collinjackson.com&#34;&gt;Collin Jackson&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker&#34;&gt;WeChat Assets Picker&lt;/a&gt; [811⭐] - Assets picker in WeChat style, support multi assets by &lt;a href=&#34;https://github.com/AlexV525&#34;&gt;Alex Li&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Map&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apptreesoftware/flutter_google_map_view&#34;&gt;Google Map View&lt;/a&gt; [415⭐] - Displaying google map plugin by &lt;a href=&#34;https://www.linkedin.com/company/apptree-software/&#34;&gt;AppTree Software&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aloisdeniel/flutter_geocoder&#34;&gt;GeoCoder&lt;/a&gt; [162⭐] - Forward and reverse geocoding by &lt;a href=&#34;https://aloisdeniel.github.com&#34;&gt;Aloïs Deniel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mapbox/flutter-mapbox-gl&#34;&gt;Mapbox GL&lt;/a&gt; [251⭐] - Interactive, customizable vector maps by Mapbox.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fluttify-project/amap_map_fluttify&#34;&gt;AMap&lt;/a&gt; [504⭐] - Access to AMap services(高德地图) by &lt;a href=&#34;https://github.com/fluttify-project&#34;&gt;fluttify-project&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Charts&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xqwzts/flutter_circular_chart&#34;&gt;Circular Chart&lt;/a&gt; [355⭐] - Animated radial and pie charts by &lt;a href=&#34;https://github.com/xqwzts&#34;&gt;Victor Choueiri&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xqwzts/flutter_sparkline&#34;&gt;Sparkline&lt;/a&gt; [245⭐] - Sparkline by &lt;a href=&#34;https://github.com/xqwzts&#34;&gt;Victor Choueiri&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/charts&#34;&gt;Charts&lt;/a&gt; [2505⭐] - By Google Charts Team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trentpiercy/flutter-candlesticks&#34;&gt;Candlesticks&lt;/a&gt; [358⭐] - OHLC and Trade Volume Charts by &lt;a href=&#34;https://github.com/trentpiercy&#34;&gt;Trent Piercy&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thekeenant/fcharts&#34;&gt;FCharts&lt;/a&gt; [321⭐] - Beautiful, responsive, animated charts by &lt;a href=&#34;https://keenant.com&#34;&gt;Keenan Thompson&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart&#34;&gt;FL Chart&lt;/a&gt; [3846⭐] - Draw fantastic charts in Flutter by &lt;a href=&#34;http://www.ikhoshabi.com&#34;&gt;Iman Khoshabi&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aeyrium/bezier-chart&#34;&gt;Bezier Chart&lt;/a&gt; [401⭐] - Beautiful bezier line chart widget for flutter that is highly interactive and configurable by &lt;a href=&#34;https://twitter.com/diegoveloper&#34;&gt;Diego Velasquez&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/entronad/flutter_echarts&#34;&gt;Echarts&lt;/a&gt; [533⭐] - Large collection of advanced reactives charts by &lt;a href=&#34;https://github.com/entronad&#34;&gt;LIN Chen&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/entronad/graphic&#34;&gt;Graphic&lt;/a&gt; [383⭐] - Data visualization library based on the Grammar of Graphics by &lt;a href=&#34;https://github.com/entronad&#34;&gt;LIN Chen&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Navigation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/goposse/fluro&#34;&gt;Fluro&lt;/a&gt; [3362⭐] - The brightest, hippest, coolest router for Flutter with Navigation, wildcard, query, transitions by &lt;a href=&#34;http://goposse.com&#34;&gt;Posse&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leocavalcante/page_view_indicator&#34;&gt;PageView Indicator&lt;/a&gt; [132⭐] - Build page indicators for the PageView by &lt;a href=&#34;https://github.com/leocavalcante&#34;&gt;Leo Cavalcante&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Dennis-Krasnov/Flutter-Deep-Link-Navigation&#34;&gt;Deep Link Navigation&lt;/a&gt; [53⭐] - Elegant abstraction for complete deep linking navigation in Flutter by &lt;a href=&#34;https://denniskrasnov.com&#34;&gt;Dennis Krasnov&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jonataslaw/get&#34;&gt;Get&lt;/a&gt; [5499⭐] - Navigate between screens &amp;amp; display snackbars/dialogs/bottomSheets without context by &lt;a href=&#34;https://github.com/jonataslaw&#34;&gt;Jonny Borges&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/slovnicki/beamer&#34;&gt;Beamer&lt;/a&gt; [290⭐] - Route through guarded page stacks and URLs using the Navigator 2.0 API effortlessly by &lt;a href=&#34;https://github.com/slovnicki&#34;&gt;Sandro Lovnički&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Auth&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/plugins/tree/master/packages/local_auth&#34;&gt;Local Auth&lt;/a&gt; - Touch ID, lock code, fingerprint auth on iOS and Android.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AppleEducate/flutter_login&#34;&gt;Login&lt;/a&gt; [628⭐] - FaceID, TouchID, and Fingerprint Reader by &lt;a href=&#34;http://appleeducate.com&#34;&gt;Rody Davis&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/plugins/tree/master/packages/google_sign_in&#34;&gt;Google Sign-In&lt;/a&gt; - Google OAuth.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_auth&#34;&gt;Firebase Auth&lt;/a&gt; - Firebase OAuth.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/roughike/flutter_facebook_login&#34;&gt;Facebook Login&lt;/a&gt; [399⭐] - Authenticate with native Android &amp;amp; iOS Facebook login SDKs by &lt;a href=&#34;https://github.com/roughike&#34;&gt;Iiro Krankka&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tomgilder/flutter_apple_sign_in&#34;&gt;Apple Sign-In&lt;/a&gt; [157⭐] - Apple sign in by &lt;a href=&#34;https://github.com/tomgilder&#34;&gt;Tom Gilder&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hitherejoe/FlutterOAuth&#34;&gt;OAuth&lt;/a&gt; [170⭐] - Buffer, Strava, Unsplash, Github OAuth by &lt;a href=&#34;http://www.hitherejoe.com&#34;&gt;Joe Birch&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@gildaswise/flutter-adding-sign-in-with-google-and-phone-authentication-to-your-app-69f681518f9b&#34;&gt;Firebase Phone Auth&lt;/a&gt; - Phone number auth via SMS by &lt;a href=&#34;https://github.com/gildaswise&#34;&gt;Gildásio Filho&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Clancey/simple_auth&#34;&gt;SimpleAuth&lt;/a&gt; [314⭐] - Azure Active Directory, Amazon, Dropbox, Facebook, Github, Google, Instagram, Linked In, Microsoft Live Connect, Github, OAuth, Basic Auth by &lt;a href=&#34;https://github.com/Clancey&#34;&gt;James Clancey&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaikuB/flutter_appauth&#34;&gt;Flutter AppAuth&lt;/a&gt; [176⭐] - Plugin that provides a wrapper around the AppAuth iOS and Android SDKs by &lt;a href=&#34;https://github.com/MaikuB&#34;&gt;Michael Bui&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Text &amp;amp; Rich Content&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/flutter_markdown&#34;&gt;Markdown&lt;/a&gt; null - Markdown renderer for Flutter. It supports the original format, but no inline html.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/benhurott/flutter-masked-text&#34;&gt;Masked Text&lt;/a&gt; [244⭐] - Masked text with custom and monetary formatting by &lt;a href=&#34;https://github.com/benhurott&#34;&gt;Ben-hur Santos Ott&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/memspace/zefyr&#34;&gt;Zefyr&lt;/a&gt; [2016⭐] - Soft &amp;amp; gentle rich text editor by &lt;a href=&#34;https://github.com/memspace/zefyr&#34;&gt;Memspace&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leisim/auto_size_text&#34;&gt;AutoSizeText&lt;/a&gt; [1496⭐] - Automatically resizes text to fit perfectly within its bounds by &lt;a href=&#34;https://github.com/leisim&#34;&gt;Simon Leier&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fayeed/flutter_parsed_text&#34;&gt;Parsed Text&lt;/a&gt; [190⭐] - Interactive text based on content recognition, also supports Regex by &lt;a href=&#34;https://github.com/fayeed/&#34;&gt;Fayeed Pawaskar&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shah-xad/flutter_tex&#34;&gt;TeX&lt;/a&gt; [186⭐] - Render Mathematics Equations with full HTML and JavaScript support by &lt;a href=&#34;https://github.com/shah-xad&#34;&gt;Shahzad Akram&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BertrandBev/code_field&#34;&gt;Code Field&lt;/a&gt; - Customizable code field widget supporting syntax highlighting by &lt;a href=&#34;https://github.com/BertrandBev&#34;&gt;Bertrand Bevillard&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Forms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danvick/flutter_form_builder&#34;&gt;Form Builder&lt;/a&gt; [935⭐] - Framework that simplifies building forms, validating fields, reacting to changes, and collecting the final user input by &lt;a href=&#34;https://github.com/danvick&#34;&gt;Danvick Miller&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joanpablo/reactive_forms&#34;&gt;Reactive Forms&lt;/a&gt; [233⭐] - Model-driven approach to handling Forms inputs and validations, heavily inspired in Angular&#39;s Reactive Forms.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Analytics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dart-lang/usage&#34;&gt;Usage&lt;/a&gt; [123⭐] - Google Analytics wrapper for command-line, web, and Flutter apps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_analytics&#34;&gt;Firebase Analytics&lt;/a&gt; - Connect to Firebase Analytics API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seenickcode/pure_mixpanel&#34;&gt;Pure Mixpanel&lt;/a&gt; [21⭐] - Analytics for the popular &lt;a href=&#34;https://mixpanel.com&#34;&gt;Mixpanel.com&lt;/a&gt; &lt;a href=&#34;https://twitter.com/seenickcode&#34;&gt;Nick Manning&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Internationalization&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KingWu/gen_lang&#34;&gt;GenLang&lt;/a&gt; [88⭐] - Code generator for Internationalization by &lt;a href=&#34;https://github.com/KingWu&#34;&gt;King Wu&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bratan/flutter_translate&#34;&gt;Flutter Translate&lt;/a&gt; [279⭐] - Internationalization (i18n) library by &lt;a href=&#34;http://bratan.me&#34;&gt;Florin Bratan&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fkirc/attranslate&#34;&gt;attranslate&lt;/a&gt; - Semi-automated translation of ARB or JSON files by &lt;a href=&#34;https://github.com/fkirc&#34;&gt;fkirc&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Styling&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rxlabz/flutterial&#34;&gt;Flutterial&lt;/a&gt; [1437⭐] - Flutter Material Theme explorer by &lt;a href=&#34;https://twitter.com/rxlabz&#34;&gt;Erick Ghaumez&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bregydoc/pigment&#34;&gt;Pigment&lt;/a&gt; [184⭐] - Simple but useful package for use colors in flutter.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Media&lt;/h3&gt; &#xA;&lt;h4&gt;Audio&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shadow-app/flutter_audio_recorder&#34;&gt;Flutter Audio Recorder&lt;/a&gt; - Provides full controls and access to recording details such as level metering by &lt;a href=&#34;https://github.com/nikli2009&#34;&gt;Wenyan Li&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ZaraclaJ/audio_recorder&#34;&gt;Audio Recorder&lt;/a&gt; [169⭐] - Record audio and store it locally by &lt;a href=&#34;https://twitter.com/jordanalcrz&#34;&gt;Jordan Alcaraz&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dooboolab/flutter_sound&#34;&gt;Flutter Sound&lt;/a&gt; [666⭐] - Flutter audio recorder and player at one hand by &lt;a href=&#34;https://github.com/dooboolab&#34;&gt;dooboolab&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/florent37/Flutter-AssetsAudioPlayer&#34;&gt;AssetsAudioPlayer&lt;/a&gt; [567⭐] Simultaneous playback of audio from assets/network/file and displaying notifications [android / ios / web / macos]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/audio_service&#34;&gt;Audio Service&lt;/a&gt; - System background audio support by &lt;a href=&#34;https://github.com/ryanheise&#34;&gt;Ryan Heise&lt;/a&gt;. &lt;a href=&#34;https://suragch.medium.com/background-audio-in-flutter-with-audio-service-and-just-audio-3cce17b4a7d?sk=0837a1b1773e27a4f879ff3072e90305&#34;&gt;Tutorial&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/Suragch1&#34;&gt;Suragch&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Video&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudwebrtc/flutter-webrtc&#34;&gt;WebRTC&lt;/a&gt; [2747⭐] - WebRTC plugin for iOS/Android by &lt;a href=&#34;https://github.com/cloudwebrtc&#34;&gt;CloudWebRtc&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/brianegan/chewie&#34;&gt;Chewie&lt;/a&gt; [1353⭐] - Provides low-level access to video playback by &lt;a href=&#34;https://github.com/brianegan&#34;&gt;Brian Egan&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sbis04/video_trimmer&#34;&gt;Video Trimmer&lt;/a&gt; [276⭐] - Visualise and trim videos by &lt;a href=&#34;https://github.com/sbis04&#34;&gt;Souvik Biswas&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Apparence-io/camera_awesome&#34;&gt;CamerAwesome&lt;/a&gt; [295⭐] - Community camera plugin rework by &lt;a href=&#34;https://apparence.io&#34;&gt;Apparence.io studio&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Voice&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rxlabz/speech_recognition&#34;&gt;Speech Recognition&lt;/a&gt; [323⭐] - Speech to text by &lt;a href=&#34;https://twitter.com/rxlabz&#34;&gt;Erick Ghaumez&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marcinszalek.pl/flutter/ok-google-flutter/&#34;&gt;OK Google&lt;/a&gt; - Integrate google assistant by &lt;a href=&#34;https://marcinszalek.pl/&#34;&gt;Marcin Szalek&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Storage&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_storage&#34;&gt;Firebase Storage&lt;/a&gt; - Firebase as data storage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mogol/flutter_secure_storage&#34;&gt;Secure Storage&lt;/a&gt; [723⭐] - Keychain and Keystore storage by &lt;a href=&#34;https://github.com/mogol&#34;&gt;German Saprykin&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Preferences&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/roughike/streaming_shared_preferences&#34;&gt;Streaming Shared Preferences&lt;/a&gt;&#xA;  &lt;!--stargazers:roughike/streaming_shared_preferences--&gt; - Reactive key-value store, shared preferences with Streams by &lt;a href=&#34;https://github.com/roughike&#34;&gt;Iiro Krankka&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Monetization&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/admob&#34;&gt;Admob&lt;/a&gt; - GoogleAdmob supports interstitial ads in both iOS and Android by Brett Nesbitt.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FirebaseExtended/flutterfire/tree/master/packages/firebase_admob&#34;&gt;Firebase AdMob&lt;/a&gt; - Ad integration using Firebase.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dooboolab/flutter_inapp_purchase&#34;&gt;Inapp Purchase&lt;/a&gt; [464⭐] - Features set of &#39;in app purchase&#39; derived from &lt;a href=&#34;https://github.com/dooboolab/react-native-iap&#34;&gt;react-native-iap&lt;/a&gt; by &lt;a href=&#34;https://github.com/dooboolab&#34;&gt;dooboolab&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kmcgill88/admob_flutter&#34;&gt;Admob Flutter&lt;/a&gt; - Admob plugin that shows banner ads using native platform views by &lt;a href=&#34;https://github.com/YoussefKababe&#34;&gt;Youssef Kababe&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/kmcgill88&#34;&gt;Kevin McGill&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dreamsoftin/facebook_audience_network&#34;&gt;Facebook Audience Network&lt;/a&gt; - Facebook Audience Network Ad plugin that shows banner, interstitial, in-stream video, rewarded video &amp;amp; natvie ads by &lt;a href=&#34;https://github.com/dreamsoftin&#34;&gt;Dreamsoft Innovations&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/in-app-payments-flutter-plugin&#34;&gt;Square In-App Payments SDK&lt;/a&gt; [283⭐] - Take payments by embedding a card entry form in your app that produces nonces from customer-provided card information or digital wallets by &lt;a href=&#34;https://github.com/orgs/square&#34;&gt;Square&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Templates&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FlutterRocks/movie-details-ui&#34;&gt;Movie Details&lt;/a&gt; [372⭐] - Movie details page by &lt;a href=&#34;https://github.com/roughike&#34;&gt;Iiro Krankka&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CodemateLtd/FlutterMates&#34;&gt;Mates&lt;/a&gt; [482⭐] - How to load profiles from the randomuser.me API and a nice profile details page by &lt;a href=&#34;https://github.com/roughike&#34;&gt;Iiro Krankka&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alessandroaime/Weather&#34;&gt;Weather&lt;/a&gt; [141⭐] - Weather app to learn how to use Canvas and Animation by &lt;a href=&#34;https://github.com/alessandroaime&#34;&gt;Alessandro Aime&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/brianegan/flutter_architecture_samples&#34;&gt;TodoMVC&lt;/a&gt; [7528⭐] - TODO application ready to go with different flavors : Vanilla, Redux, built_redux by &lt;a href=&#34;https://github.com/brianegan&#34;&gt;Brian Egan&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/braulio94/menu_flutter&#34;&gt;Restaurant Menu&lt;/a&gt; [553⭐] - Restaurant menu by &lt;a href=&#34;https://github.com/braulio94&#34;&gt;Braulio Cassule&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tomialagbe/flutter_ui_challenges&#34;&gt;UI Challenges&lt;/a&gt; [1272⭐] - Profile, Travel, Food App by &lt;a href=&#34;https://github.com/tomialagbe&#34;&gt;Tomi Alagbe&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matthinc/flutter_cupertino_settings&#34;&gt;Cupertino Settings&lt;/a&gt; [219⭐] - iOS Settings by &lt;a href=&#34;https://github.com/matthinc&#34;&gt;Matthias Rupp&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thosakwe/flutter_music_player&#34;&gt;Music Player&lt;/a&gt; [205⭐] - music player component by &lt;a href=&#34;https://thosakwe.com/&#34;&gt;Tobe O&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ivaskuu/dashboard&#34;&gt;Dashboard&lt;/a&gt; [814⭐] - Dashboard and Shop Items by &lt;a href=&#34;https://github.com/Ivaskuu&#34;&gt;Ivascu Adrian&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/littlemarc2011/FlutterTodo&#34;&gt;Todo&lt;/a&gt; [519⭐] - Todo template from Dribble by &lt;a href=&#34;https://www.marc-little.com/&#34;&gt;Marc L&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/geekruchika/FlutterCardSwipe&#34;&gt;Card Swipe Animation&lt;/a&gt; [462⭐] - Swipe cards template by &lt;a href=&#34;https://github.com/geekruchika&#34;&gt;Ruchika Gupta&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-UI-Kit&#34;&gt;UI Kit&lt;/a&gt; [5707⭐] - Collection of useful UIs in a UIKit by &lt;a href=&#34;https://github.com/iampawan&#34;&gt;Pawan Kumar&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/putraxor/flutter-book-app&#34;&gt;Book&lt;/a&gt; [300⭐] - Bookshelf by &lt;a href=&#34;https://github.com/putraxor&#34;&gt;Ardiansyah Putra&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huextrat/TheGorgeousLogin&#34;&gt;The Gorgeous Login&lt;/a&gt; [1497⭐] - Design and smooth login template by &lt;a href=&#34;https://github.com/huextrat&#34;&gt;Hugo Extrat&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/longhoang2984/flutter_payment_app_ui&#34;&gt;Liquid Pay Payment App&lt;/a&gt; [251⭐] - Liquid Pay App Concept by &lt;a href=&#34;https://github.com/longhoang2984&#34;&gt;Long Hoang&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SnakeyHips/drawapp&#34;&gt;DrawApp&lt;/a&gt; [208⭐] - Sample Drawing App to demonstrate how to allow user to draw onto canvas with color picker and brush thickness slider by &lt;a href=&#34;https://github.com/SnakeyHips&#34;&gt;Jake Gough&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KingWu/flutter_starter_kit&#34;&gt;Starter Kit&lt;/a&gt; [596⭐] - App Store implementation to learn Bloc, RxDart, Sqflite, Fluro and Dio. by &lt;a href=&#34;https://github.com/KingWu&#34;&gt;King Wu&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jhomlala/feather&#34;&gt;Feather&lt;/a&gt; [472⭐] - Beautiful weather application. Application includes RxDart, Dio, BLoC, i18n, unit and widget tests. by &lt;a href=&#34;https://github.com/jhomlala&#34;&gt;Jakub Homlala&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/javico2609/flutter-challenges&#34;&gt;Clone UI Challenges&lt;/a&gt; [1280⭐] - Collection of useful UIs clones by &lt;a href=&#34;https://github.com/javico2609&#34;&gt;Javier González&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JideGuru/FlutterFoodybite&#34;&gt;FlutterFoodybite&lt;/a&gt; [1113⭐] - Beautiful food app UI template by &lt;a href=&#34;https://github.com/JideGuru&#34;&gt;JideGuru&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/diegoveloper/flutter-samples&#34;&gt;Flutter Samples&lt;/a&gt; [2464⭐] - Collection of nice flutter samples by &lt;a href=&#34;https://github.com/diegoveloper&#34;&gt;Diego Velásquez&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gregertw/actingweb_firstapp&#34;&gt;ActingWeb First_App&lt;/a&gt; [285⭐] - Starter app with basic elements for a team-developed production-quality app by &lt;a href=&#34;https://github.com/gregertw&#34;&gt;Greger Wedel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pawlik92/flutter_whirlpool&#34;&gt;Smart Washing Machine&lt;/a&gt; [590⭐] - Smart washing machine UI challenge app with Box2D physic engine by &lt;a href=&#34;https://github.com/pawlik92&#34;&gt;Tomasz Pawlikowski&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JHBitencourt/beautiful_timelines&#34;&gt;Beautiful Timelines&lt;/a&gt; [186⭐] - A set of beautiful timelines by &lt;a href=&#34;https://github.com/JHBitencourt&#34;&gt;Julio Bitencourt&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Clone&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pd4d10/git-touch&#34;&gt;GitTouch&lt;/a&gt; [979⭐] - Open source mobile client for GitHub, GitLab, Bitbucket and Gitea by &lt;a href=&#34;https://github.com/pd4d10&#34;&gt;Rongjian Zhang&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Machine Learning&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/azihsoyn/flutter_mlkit&#34;&gt;MLKit&lt;/a&gt; [377⭐] - Firebase Machine Learning Kit by &lt;a href=&#34;https://github.com/azihsoyn&#34;&gt;Naoya Yoshizawa&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BayesWitnesses/m2cgen&#34;&gt;m2cgen&lt;/a&gt; [1953⭐] - CLI tool to convert ML models into native Dart code by &lt;a href=&#34;https://github.com/BayesWitnesses&#34;&gt;BayesWitnesses&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Vision&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/santetis/flutter_camera_ml_vision&#34;&gt;ML Vision Camera Stream&lt;/a&gt; [218⭐] - ML vision recognitions (QRcode, face, ...) with live camera stream by &lt;a href=&#34;https://github.com/jaumard&#34;&gt;Aumard Jimmy&lt;/a&gt; and &lt;a href=&#34;https://github.com/santetis&#34;&gt;Santetis&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edufolly/flutter_mobile_vision&#34;&gt;Google Mobile Vision&lt;/a&gt; [433⭐] - Google Mobile Vision by &lt;a href=&#34;https://github.com/edufolly&#34;&gt;Eduardo Folly&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Augmented Reality&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/olexale/arkit_flutter_plugin&#34;&gt;ARKit Plugin&lt;/a&gt; [612⭐] - Wrapper for ARKit - Apple&#39;s augmented reality platform for iOS by &lt;a href=&#34;https://github.com/olexale&#34;&gt;Olexandr Leuschenko&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/giandifra/arcore_flutter_plugin&#34;&gt;ARCore Plugin&lt;/a&gt; [316⭐] - Augmented reality with ARCore platform by &lt;a href=&#34;https://github.com/giandifra&#34;&gt;Gian Marco Di Francesco&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/flutter/packages&#34;&gt;Pub packages&lt;/a&gt; - Packages filter in Dart Pub Repository.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/plugins/tree/master/packages&#34;&gt;Plugins&lt;/a&gt; - Official Flutter Team Plugins.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Device&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dart-flitter/flutter_webview_plugin&#34;&gt;WebView&lt;/a&gt; [1376⭐] - Render web content by &lt;a href=&#34;https://twitter.com/HadrienLejard&#34;&gt;Hadrien Lejard&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Lyokone/flutterlocation&#34;&gt;Location&lt;/a&gt; [836⭐] - Handle location, handling callbacks to get continuous location by &lt;a href=&#34;https://github.com/Lyokone&#34;&gt;Lyokone&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/battery&#34;&gt;Battery&lt;/a&gt; - Access various information about the battery.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/proximity_plugin&#34;&gt;Proximity Sensor Plugin&lt;/a&gt; - A plugin to access the proximity sensor of your device by &lt;a href=&#34;https://github.com/Samaritan1011001&#34;&gt;Manoj NB&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/loup-v/geolocation&#34;&gt;Geolocation&lt;/a&gt; [214⭐] - Fully featured geolocation plugin: current location, location updates, geocode, places and more by &lt;a href=&#34;http://intheloup.io&#34;&gt;Loup&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaikuB/flutter_local_notifications&#34;&gt;Local Notifications&lt;/a&gt; [1715⭐] - Plugin for displaying local notifications by &lt;a href=&#34;https://github.com/MaikuB&#34;&gt;Michael Bui&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/builttoroam/flutter_plugins/tree/master/device_calendar&#34;&gt;Device Calendar&lt;/a&gt; - Plugin for modifying calendars on the user&#39;s device by &lt;a href=&#34;http://builttoroam.com&#34;&gt;Built to Roam&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/g123k/flutter_app_badger&#34;&gt;Badger&lt;/a&gt; [233⭐] - Update app badge on the launcher by &lt;a href=&#34;https://twitter.com/g123k&#34;&gt;Edouard Marquez&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GigaDroid/flutter_udid&#34;&gt;UDID&lt;/a&gt; [166⭐] - Persistent UDID across app reinstalls by &lt;a href=&#34;https://kukuk.me&#34;&gt;Leon Kukuk&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hnvn/flutter_downloader&#34;&gt;Downloader&lt;/a&gt; [655⭐] - Create and manage download tasks by &lt;a href=&#34;https://github.com/hnvn&#34;&gt;HungHD&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pichillilorenzo/flutter_inappwebview&#34;&gt;InAppWebView&lt;/a&gt; [1688⭐] - Add inline WebView widgets or open an in-app browser window by &lt;a href=&#34;https://github.com/pichillilorenzo&#34;&gt;Lorenzo Pichilli&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pichillilorenzo/flutter_appavailability&#34;&gt;AppAvailability&lt;/a&gt; [80⭐] - List, launch and check installed apps by &lt;a href=&#34;https://github.com/pichillilorenzo&#34;&gt;Lorenzo Pichilli&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/miguelpruivo/plugins_flutter_file_picker&#34;&gt;File Picker&lt;/a&gt; [719⭐] - Native file explorer to load absolute file path by &lt;a href=&#34;https://github.com/miguelpruivo&#34;&gt;Miguel Ruivo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/X-dea/Flutter_VPN&#34;&gt;VPN&lt;/a&gt;&#xA;  &lt;!--stargazers:X-dea/Flutter_VPN--&gt; - Access VPN services by &lt;a href=&#34;https://github.com/ctrysbita&#34;&gt;Jason C.H&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/baseflow/flutter-geolocator&#34;&gt;Geolocator&lt;/a&gt;&#xA;  &lt;!--stargazers:baseflow/flutter-geolocator--&gt; - A Flutter geolocation plugin which provides easy access to the platform specific location services by &lt;a href=&#34;https://baseflow.com&#34;&gt;Baseflow&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/baseflow/flutter-permission-handler&#34;&gt;Permission Handler&lt;/a&gt;&#xA;  &lt;!--stargazers:baseflow/flutter-permission-handler--&gt; - A Flutter permission plugin which provides a cross-platform (iOS, Android) API to request and check permissions by &lt;a href=&#34;https://baseflow.com&#34;&gt;Baseflow&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fasky-software/flutter_widgetkit&#34;&gt;WidgetKit&lt;/a&gt;&#xA;  &lt;!--stargazers:baseflow/fasky-software/flutter_widgetkit--&gt; - A plugins which allows you to create a Widget-Extention for iOS by &lt;a href=&#34;https://github.com/tomLadder&#34;&gt;Thomas Leiter&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Scanner&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/villela/flutter_qrcode_reader&#34;&gt;QR Code Reader&lt;/a&gt; [218⭐] - QR Code reader plugin by &lt;a href=&#34;https://github.com/villela&#34;&gt;Matheus Villela&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facundomedica/fast_qr_reader_view&#34;&gt;Fast QR Reader View&lt;/a&gt; [275⭐] - Live multicode reader by &lt;a href=&#34;https://github.com/facundomedica&#34;&gt;Facundo Medica&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Bluetooth / NFC / Beacon&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pauldemarco/flutter_blue&#34;&gt;Blue&lt;/a&gt; [1914⭐] - Bluetooth by &lt;a href=&#34;https://github.com/pauldemarco&#34;&gt;Paul DeMarco&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/loup-v/beacons&#34;&gt;Beacons&lt;/a&gt; [75⭐] - Flutter beacons plugin by &lt;a href=&#34;http://intheloup.io&#34;&gt;Loup&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matteocrippa/flutter-nfc-reader&#34;&gt;NFC Reader&lt;/a&gt; [285⭐] - NFC reader plugin for iOS and Android by &lt;a href=&#34;https://github.com/matteocrippa&#34;&gt;Matteo Crippa&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pszklarska/beacon_broadcast&#34;&gt;Beacon broadcast&lt;/a&gt; [70⭐] - Library for turning your phone into a beacon by &lt;a href=&#34;https://github.com/pszklarska/&#34;&gt;Paulina Szklarska&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PhilipsHue/flutter_reactive_ble&#34;&gt;Reactive Ble&lt;/a&gt; [272⭐] - Handles BLE operations for multiple devices by &lt;a href=&#34;https://github.com/PhilipsHue&#34;&gt;Philips Hue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/okadan/flutter-nfc-manager&#34;&gt;NFC Manager&lt;/a&gt; [83⭐] - Generic NFC plugin for iOS and Android by &lt;a href=&#34;https://github.com/okadan&#34;&gt;Naoki Okada&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Storage&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tekartik/sqflite&#34;&gt;Sqflite&lt;/a&gt; [2289⭐] - SQLite flutter plugin by &lt;a href=&#34;https://www.linkedin.com/in/alextekartik/&#34;&gt;Alexandre Roux&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/simolus3/moor&#34;&gt;Moor&lt;/a&gt; - Moor is an easy to use, reactive, typesafe persistence library for Dart &amp;amp; Flutter by &lt;a href=&#34;https://github.com/simolus3&#34;&gt;. Simon Binder&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Services&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VictorRancesCode/flutter_dialogflow&#34;&gt;Dialogflow&lt;/a&gt; [186⭐] - Plugin to easily integrate with dialogflow by &lt;a href=&#34;https://github.com/VictorRancesCode/&#34;&gt;Victor Rances&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/intercom&#34;&gt;Intercom&lt;/a&gt; [23⭐] - Add Intercom integration to your app by &lt;a href=&#34;https://github.com/v3rm0n&#34;&gt;Maido Kaara&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OneSignal/OneSignal-Flutter-SDK&#34;&gt;OneSignal&lt;/a&gt; [497⭐] - Push notification service by &lt;a href=&#34;https://github.com/OneSignal&#34;&gt;OneSignal&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pinkfish/flutter_places_dialog&#34;&gt;Place Dialog&lt;/a&gt; [45⭐] - Places picker dialog returning the places to the app by &lt;a href=&#34;https://github.com/pinkfish&#34;&gt;David Bennett&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AppleEducate/app_review&#34;&gt;App Rating&lt;/a&gt; [30⭐] - Requesting and Writing Reviews for the App Store and Google Play by &lt;a href=&#34;http://appleeducate.com&#34;&gt;Rody Davis&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Frameworks&lt;/h2&gt; &#xA;&lt;h3&gt;State management&lt;/h3&gt; &#xA;&lt;h4&gt;Standard&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc&#34;&gt;Bloc&lt;/a&gt; [8181⭐] - Collection of packages that help implement the BLoC design pattern by &lt;a href=&#34;https://github.com/felangel&#34;&gt;Felix Angelov&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mobxjs/mobx.dart&#34;&gt;MobX&lt;/a&gt; [2037⭐] - Supercharge the state-management in your apps with Transparent Functional Reactive Programming (TFRP). Port of MobX from the Js/React land.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;Provider&lt;/a&gt; [3974⭐] - State-management library for Flutter by &lt;a href=&#34;https://github.com/rrousselGit&#34;&gt;Remi Rousselet&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;RiverPod&lt;/a&gt; [2214⭐] - Provider, but different by &lt;a href=&#34;https://github.com/rrousselGit&#34;&gt;Remi Rousselet&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jonataslaw/getx&#34;&gt;GetX&lt;/a&gt; &#xA;  &lt;!--jonataslaw/getx--&gt; - Contextless, State-management &amp;amp; navigation by &lt;a href=&#34;https://github.com/jonataslaw&#34;&gt;Jonny Borges&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/letsar/binder&#34;&gt;Binder&lt;/a&gt; [167⭐] - A lightweight, yet powerful way to bind your application state with your business logic, by &lt;a href=&#34;https://github.com/letsar&#34;&gt;Romain Rastel&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Redux / ELM / Dependency Injection&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/davidmarne/flutter_built_redux&#34;&gt;Built redux&lt;/a&gt; [81⭐] - Automatic subscribing to your redux stores. Based on the built pattern by &lt;a href=&#34;https://github.com/davidmarne&#34;&gt;David Marne&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/johnpryan/redux.dart&#34;&gt;Redux.dart&lt;/a&gt; [486⭐] - Port of Redux to Dart with an ecosystem of middleware, Flutter integrations, and time traveling dev tools by &lt;a href=&#34;https://github.com/johnpryan&#34;&gt;John Ryan&lt;/a&gt; and &lt;a href=&#34;https://gitlab.com/users/brianegan/projects&#34;&gt;Brian Egan&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/brianegan/flutter_redux&#34;&gt;Redux&lt;/a&gt; [1522⭐] - Built to work with &lt;a href=&#34;https://github.com/johnpryan/redux.dart&#34;&gt;redux.dart&lt;/a&gt;, utilities that allow you to easily consume a Redux Store to build Widgets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/inject.dart&#34;&gt;Inject&lt;/a&gt; [847⭐] - Compile-time dependency injection by Google.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/flutter_flux&#34;&gt;Flux&lt;/a&gt; [368⭐] - Implementation of the Flux framework by Google.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/fish-redux&#34;&gt;Fish&lt;/a&gt; [7214⭐] - Alibaba Redux implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/async_redux&#34;&gt;Async Redux&lt;/a&gt; [199⭐] - Redux without boilerplate. Allows for both sync and async reducers by &lt;a href=&#34;https://github.com/marcglasberg/&#34;&gt;Marcelo Glasberg&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Widgets&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rrousselGit/flutter_hooks&#34;&gt;Hooks&lt;/a&gt; [1965⭐] - Advanced code sharing between widgets by &lt;a href=&#34;https://github.com/rrousselGit&#34;&gt;Remi Rousselet&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rrousselGit/functional_widget&#34;&gt;Functional widget&lt;/a&gt; [435⭐] - Code generator writing widgets as functions with annotations by &lt;a href=&#34;https://github.com/rrousselGit&#34;&gt;Remi Rousselet&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Data&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zino-app/graphql-flutter&#34;&gt;Graphql&lt;/a&gt; [2796⭐] - Implementation of the GraphQL spec by &lt;a href=&#34;https://github.com/zino-app&#34;&gt;Zino App B.V.&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DarshanGowda0/GeoFlutterFire&#34;&gt;GeoFlutterFire&lt;/a&gt; [244⭐] - Implementation of GeoFirestore for flutter by &lt;a href=&#34;https://darshann.me/&#34;&gt;Darshan Gowda&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gql-dart/ferry&#34;&gt;Ferry&lt;/a&gt; [334⭐] - Powerful &amp;amp; Extensible GraphQL Client by &lt;a href=&#34;https://github.com/smkhalsa&#34;&gt;Sat Mandir Khalsa&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Backend&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dengyin2000/dynamic_widget&#34;&gt;Dynamic Widget&lt;/a&gt; [1100⭐] - Build your dynamic UI with json, and the json format is very similar with flutter widget code by &lt;a href=&#34;https://github.com/dengyin2000&#34;&gt;Denny Deng&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aldycool/NETCoreSync&#34;&gt;NETCoreSync&lt;/a&gt; - Centralized database synchronization framework for multiple clients, built on top of &lt;a href=&#34;https://github.com/simolus3/moor&#34;&gt;Moor&lt;/a&gt; library by &lt;a href=&#34;https://github.com/aldycool&#34;&gt;Aldy J&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/parse-community/Parse-SDK-Flutter/tree/master/packages/flutter&#34;&gt;Parse for Flutter&lt;/a&gt; [394⭐] - Open source backend framework by &lt;a href=&#34;https://parseplatform.org/&#34;&gt;ParsePlatform&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Animation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Norbert515/flutter_sequence_animation&#34;&gt;Sequence Animation&lt;/a&gt; [338⭐] - Composite staggered animations by &lt;a href=&#34;https://twitter.com/norbertkozsir&#34;&gt;Norbert Kozsir&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jogboms/flutter_spinkit&#34;&gt;SpinKit&lt;/a&gt; [2405⭐] - Animated loading indicators by &lt;a href=&#34;https://twitter.com/jogboms&#34;&gt;Jeremiah Ogbomo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Norbert515/flutter_villains&#34;&gt;Villains&lt;/a&gt; [328⭐] - Page transition animations by &lt;a href=&#34;https://twitter.com/norbertkozsir&#34;&gt;Norbert Kozsir&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aagarwal1012/Animated-Text-Kit&#34;&gt;AnimatedTextKit&lt;/a&gt; [1268⭐] - A collection of cool text animations by &lt;a href=&#34;https://github.com/aagarwal1012/&#34;&gt;Ayush Agarwal&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/biocarl/drawing_animation&#34;&gt;Drawing Animation&lt;/a&gt; [384⭐] - Create drawing line animations based on SVG path data by &lt;a href=&#34;https://twitter.com/cahaucks&#34;&gt;Carl Hauck&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felixblaschke/simple_animations&#34;&gt;Simple Animations&lt;/a&gt; - Create awesome custom animations easily by &lt;a href=&#34;https://github.com/felixblaschke&#34;&gt;Felix Blaschke&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/efoxTeam/flutter-animation-set&#34;&gt;Flutter-animation-set&lt;/a&gt; [264⭐] - Easy to build an animation set by &lt;a href=&#34;https://github.com/efoxTeam&#34;&gt;efoxTeam&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mobiten/flutter_staggered_animations&#34;&gt;Staggered Animations&lt;/a&gt; [977⭐] - Easily add staggered animations to your ListView, GridView, Column and Row by &lt;a href=&#34;https://mobiten.com/&#34;&gt;mobiten&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/animate_do&#34;&gt;Animate Do&lt;/a&gt; - Animation package inspired in Animate.css by &lt;a href=&#34;https://twitter.com/Fernando_Her85&#34;&gt;Fernando Herrera&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/creativecreatorormaybenot/funvas&#34;&gt;Funvas&lt;/a&gt; [361⭐] - Create fun &lt;em&gt;time based canvas animations&lt;/em&gt; by &lt;a href=&#34;https://twitter.com/creativemaybeno&#34;&gt;creativecreatorormaybenot&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jonsamwell/flutter_gherkin&#34;&gt;Flutter Gherkin&lt;/a&gt; [150⭐] - Fully featured Gherkin parser and UI automated test runner by &lt;a href=&#34;https://github.com/jonsamwell&#34;&gt;Jon Samwell&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Codelessly/ResponsiveFramework&#34;&gt;Responsive Framework&lt;/a&gt; [702⭐] - Automatically adapt UI to different screen sizes. Responsiveness made simple by &lt;a href=&#34;https://codelessly.com&#34;&gt;Codelessly&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Experimental&lt;/h2&gt; &#xA;&lt;p&gt;This section contains libraries that take an experimental or unorthodox approach.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ReinBentdal/styled_widget&#34;&gt;styled_widget&lt;/a&gt; [671⭐] - Simplifying your widget tree structure by defining widgets using methods by &lt;a href=&#34;https://github.com/ReinBentdal&#34;&gt;Rein Gundersen Bentdal&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Engines&lt;/h2&gt; &#xA;&lt;h3&gt;Rendering&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/roipeker/graphx&#34;&gt;Graphx&lt;/a&gt; [293⭐] - Making drawings and animations extremely simple, inspired by Flash, by &lt;a href=&#34;https://github.com/roipeker&#34;&gt;Roi Peker&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Game&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame&#34;&gt;Flame&lt;/a&gt; [5173⭐] - Minimalist game engine by &lt;a href=&#34;https://github.com/luanpotter&#34;&gt;Luan Nico&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spritewidget/spritewidget&#34;&gt;SpriteWidget&lt;/a&gt; [1186⭐] - Toolkit for building complex, high performance animations and 2D games by &lt;a href=&#34;https://github.com/vlidholt&#34;&gt;Viktor Lidholt&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Open source games&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RedBrogdon/flutterflip&#34;&gt;Flip&lt;/a&gt; [201⭐] - Reversi game by &lt;a href=&#34;https://github.com/RedBrogdon&#34;&gt;Andrew Brogdon&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anuranBarman/2048&#34;&gt;2048&lt;/a&gt; [205⭐] - 2048 game by &lt;a href=&#34;https://github.com/anuranBarman&#34;&gt;Anuran Barman&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/renancaraujo/trex-flame&#34;&gt;TRex&lt;/a&gt; [316⭐] - Port of the famous Chrome&#39;s Trex game by &lt;a href=&#34;https://github.com/renancaraujo&#34;&gt;Renan C. Araújo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boeledi/flutter_crush&#34;&gt;Crush&lt;/a&gt; [409⭐] - How to build a Math-3 game, like Candy Crush, Bejeweled by &lt;a href=&#34;https://didierboelens.com&#34;&gt;Didier Boelens&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kevmoo/slide_puzzle&#34;&gt;Slide Puzzle&lt;/a&gt; [152⭐] - Classic slide (15) puzzle by &lt;a href=&#34;https://github.com/kevmoo&#34;&gt;Kevin Moore&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boyan01/flutter-tetris&#34;&gt;Tetris&lt;/a&gt; [1280⭐] - Tetris game by &lt;a href=&#34;https://github.com/boyan01&#34;&gt;YangBin&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vintage/party_flutter&#34;&gt;Party Charades&lt;/a&gt; [165⭐] - Party charades by &lt;a href=&#34;https://github.com/vintage&#34;&gt;Kamil Rykowski&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Float-like-a-dash-Sting-like-a-dart/GhostRigger&#34;&gt;Ghost Rigger&lt;/a&gt; [159⭐] - Ghost Rigger is a cyberpunk inspired puzzle game by &lt;a href=&#34;https://github.com/b099l3&#34;&gt;Iain Smith&lt;/a&gt; and &lt;a href=&#34;https://github.com/ernestoyaquello&#34;&gt;Julio Ernesto Rodríguez Cabañas&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/satyamx64/space_empires&#34;&gt;Space Empires&lt;/a&gt; [32⭐] - A 4X Space themed strategy game by &lt;a href=&#34;https://github.com/satyamx64&#34;&gt;Satyam Sharma&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Game Engine resources&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/awesome-flame&#34;&gt;Awesome Flame&lt;/a&gt;&#xA;  &lt;!--stargazers:flame-engine/awesome-flame--&gt; - Curated list of the best Flame games, projects, libraries, tools, tutorials, articles and more by &lt;a href=&#34;https://github.com/flame-engine&#34;&gt;Flame Engine&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open Source Apps&lt;/h2&gt; &#xA;&lt;h3&gt;Premium&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/2d-inc/HistoryOfEverything&#34;&gt;History Of Everything&lt;/a&gt; [5887⭐] - Animated vertical timeline of humanity by &lt;a href=&#34;https://www.2dimensions.com/&#34;&gt;2D, Inc&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/2d-inc/developer_quest&#34;&gt;Developer Quest&lt;/a&gt; [2917⭐] - Become a tech lead, slay bugs by &lt;a href=&#34;https://www.2dimensions.com/&#34;&gt;2D, Inc&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy&#34;&gt;AppFlowy&lt;/a&gt; [12156⭐] - The Open Source Notion Alternative. You are in charge of your data and customizations. Built with Flutter and Rust by &lt;a href=&#34;https://www.appflowy.io/&#34;&gt;AppFlowy team&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Top&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/samples&#34;&gt;Flutter Team Samples&lt;/a&gt; [10919⭐] - Collection of examples (including maps, json, Material and Cupertino) by the &lt;a href=&#34;https://github.com/orgs/flutter/people&#34;&gt;Flutter team&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/flutter-common-widgets-app&#34;&gt;Flutter Common Widgets&lt;/a&gt; [22910⭐] - Collection of official widgets demos &amp;amp; docs in chinese to help developers learn quickly by &lt;a href=&#34;https://github.com/alibaba-paimai-frontend&#34;&gt;Alibaba Auction Frontend Team&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/efortuna/memechat&#34;&gt;Meme Chat&lt;/a&gt; [514⭐] - Chat app on Flutter, using Firebase, Google Sign In, and device camera integration by a team of Googlers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dart-flitter/flitter&#34;&gt;Flitter&lt;/a&gt; [183⭐] - Glitter app by &lt;a href=&#34;https://twitter.com/HadrienLejard&#34;&gt;Hadrien Lejard&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/kevin_segaud&#34;&gt;Kevin Segaud&lt;/a&gt;. It uses Redux and Jaguar.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fablue/lime-flutter&#34;&gt;Lime&lt;/a&gt; [356⭐] - Lime social network by Sebastian Sellmair.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sergiandreplace/flutter_planets_tutorial&#34;&gt;Planets&lt;/a&gt; [711⭐] - Planet exploration that demonstrate rich UI by &lt;a href=&#34;http://sergiandreplace.com&#34;&gt;Sergi Martínez&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/theankurkedia/NewsBuzz&#34;&gt;NewsBuzz&lt;/a&gt; [505⭐] - Firebase backed news reader using News API by &lt;a href=&#34;https://github.com/theankurkedia&#34;&gt;Ankur Kedia&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/konifar/droidkaigi2018-flutter&#34;&gt;DroidKaigi2018-flutter&lt;/a&gt; [513⭐] - Unofficial conference app for DroidKaigi 2018 Tokyo by &lt;a href=&#34;https://github.com/konifar&#34;&gt;konifar&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Music-Player&#34;&gt;Music Player&lt;/a&gt; [1332⭐] - Full featured music player by &lt;a href=&#34;https://about.me/imthepk&#34;&gt;Pawan Kumar&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/burhanrashid52/WhatTodo&#34;&gt;WhatTodo&lt;/a&gt; [910⭐] - Todoist like UI by &lt;a href=&#34;https://about.me/burhanrashid52&#34;&gt;Burhanuddin Rashid&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mdanics/fluttergram&#34;&gt;FlutterGram&lt;/a&gt; [1939⭐] - Complete Instagram based on Firestore &amp;amp; Google Functions by &lt;a href=&#34;https://github.com/mdanics&#34;&gt;MDanics&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Norbert515/BookSearch&#34;&gt;BookSearch&lt;/a&gt; [472⭐] - Digital BookShelf for your reading progress by &lt;a href=&#34;https://github.com/Norbert515&#34;&gt;Norbert515&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aaronoe/FlutterCinematic&#34;&gt;Cinematic&lt;/a&gt; [832⭐] - UI for Movie DB Public API by &lt;a href=&#34;https://github.com/aaronoe&#34;&gt;Aaron Oertel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/benoitletondor/Beer-Me-Up&#34;&gt;Beer-Me-Up&lt;/a&gt; [441⭐] - Beer tracking nicely designed by &lt;a href=&#34;https://github.com/benoitletondor&#34;&gt;Benoit Letondor&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trentpiercy/trace&#34;&gt;Trace&lt;/a&gt; [789⭐] - Modern and powerful crypto portfolio &amp;amp; market explorer by &lt;a href=&#34;https://github.com/trentpiercy&#34;&gt;Trent Piercy&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huextrat/Taskist&#34;&gt;Taskist&lt;/a&gt; [729⭐] - Taskist is a ToDo List app for Task Management by &lt;a href=&#34;https://github.com/huextrat&#34;&gt;Hugo EXTRAT&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bluemix/tourism-demo&#34;&gt;Tourism&lt;/a&gt; [251⭐] - Tourism app based on redux w/ animations &amp;amp; i18n by &lt;a href=&#34;https://github.com/bluemix/tourism-demo&#34;&gt;blueMix&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matthewtory/trinity-orientation-2018&#34;&gt;Trinity Orientation @ Univ Toronto&lt;/a&gt; [562⭐] - Orientation week at Trinity College, U of T by &lt;a href=&#34;https://github.com/matthewtory&#34;&gt;Matthew Tory&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DrPaulT/flutter-engine-test&#34;&gt;Transform Widget&lt;/a&gt; - Image widgets as 3D game engine sprites by &lt;a href=&#34;https://github.com/DrPaulT&#34;&gt;Paul Thomas&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aleksanderwozniak/deer&#34;&gt;Deer&lt;/a&gt; [297⭐] - Minimalist Todo Planner built using BLoC pattern by &lt;a href=&#34;https://github.com/aleksanderwozniak&#34;&gt;Aleksander Woźniak&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jogboms/tailor_made&#34;&gt;TailorMade&lt;/a&gt; [235⭐] - Managing a Fashion designer&#39;s daily routine using a mixture of ReBLoC w/ Firebase Cloud Store &amp;amp; Functions by &lt;a href=&#34;https://twitter.com/jogboms&#34;&gt;Jeremiah Ogbomo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/InvertedX/instory&#34;&gt;Instory&lt;/a&gt; [194⭐] - Instgram story downloader with a beautiful UI &lt;a href=&#34;https://twitter.com/_sarath_kumar&#34;&gt;Sarath&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jesusrp98/spacex-go&#34;&gt;Spacex-Go&lt;/a&gt; [645⭐] - Simple yet powerful, open-source SpaceX launch tracker. &lt;a href=&#34;https://twitter.com/jesusrp98&#34;&gt;jesusrp98&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pinkeshdarji/SuperHeroInteraction&#34;&gt;Superhero Interaction&lt;/a&gt; [218⭐] - Cool Superhero interaction animation by &lt;a href=&#34;https://github.com/pinkeshdarji&#34;&gt;Pinkesh Darji&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flschweiger/reply&#34;&gt;Reply&lt;/a&gt; [535⭐] - &#39;Reply&#39; Material Design case study by &lt;a href=&#34;https://github.com/flschweiger&#34;&gt;Frederik Schweiger&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AmitJoki/Enigma&#34;&gt;Enigma&lt;/a&gt; - Privacy chat with end-to-end encryption by &lt;a href=&#34;https://github.com/AmitJoki&#34;&gt;AmitJoki&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KarimElghamry/chillify&#34;&gt;Chillify&lt;/a&gt; - Fancy music app made with Provider and Bloc pattern by &lt;a href=&#34;https://github.com/KarimElghamry&#34;&gt;Karim Elghamry&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/scitbiz/flutter_pokedex&#34;&gt;Pokedex&lt;/a&gt; - Pokedex app with beautiful UI and smooth animation by &lt;a href=&#34;https://github.com/scitbiz&#34;&gt;Hung Pham&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/janoodleFTW/timy-messenger&#34;&gt;Timy Messenger&lt;/a&gt; [1742⭐] - Group messaging app with a focus on organizing events by &lt;a href=&#34;https://github.com/miquelbeltran&#34;&gt;Miguel Beltran&lt;/a&gt; and &lt;a href=&#34;https://github.com/fheinfling&#34;&gt;Franz Heinfling&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GitJournal/GitJournal&#34;&gt;GitJournal&lt;/a&gt; [1717⭐] - Journaling your data in a Git Repo by &lt;a href=&#34;https://github.com/vHanda&#34;&gt;Vishesh Handa&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/authpass/authpass&#34;&gt;AuthPass&lt;/a&gt; [1061⭐] - Keepass compatible password manager for mobile and desktop by &lt;a href=&#34;https://github.com/hpoul&#34;&gt;hpoul&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone&#34;&gt;Fwitter&lt;/a&gt; [1523⭐] - Full Twitter clone using Firebase solution by &lt;a href=&#34;https://github.com/TheAlphamerc&#34;&gt;Sonu Sharma&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robertodoering/harpy&#34;&gt;Harpy&lt;/a&gt; [825⭐] - Feature rich Twitter client by &lt;a href=&#34;https://github.com/robertodoering&#34;&gt;Roberto Doering&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Utilities&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/franzsilva/flutter_launcher_icons&#34;&gt;Launcher Icons&lt;/a&gt; - Generate your launcher icons easily by &lt;a href=&#34;https://github.com/MarkOSullivan94&#34;&gt;Mark O&#39;Sullivan&lt;/a&gt; and &lt;a href=&#34;https://github.com/franzsilva&#34;&gt;Franz Silva&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://fluttericon.com/&#34;&gt;FlutterIcon&lt;/a&gt; [310⭐] - Icon set generator by &lt;a href=&#34;https://github.com/ilikerobots&#34;&gt;Mike Hoolehan&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leoafarias/fvm&#34;&gt;FVM&lt;/a&gt; [2233⭐] - Flutter Version Management: A simple cli to manage Flutter SDK versions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TatsuUkraine/dart_environment_config&#34;&gt;Environment Configuration&lt;/a&gt; [86⭐] - CLI tool to generate &lt;code&gt;.env&lt;/code&gt; configurations for application environments by &lt;a href=&#34;https://github.com/TatsuUkraine&#34;&gt;TatsuUkraine&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AngeloAvv/flutter_flavorizr&#34;&gt;Flutter Flavorizr&lt;/a&gt; [160⭐] - CLI utility to easily generate flavors for Android and iOS in less than 3 minutes by &lt;a href=&#34;https://github.com/AngeloAvv&#34;&gt;Angelo Cassano&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/westracer/fontify&#34;&gt;Fontify&lt;/a&gt; [77⭐] - CLI tool to convert SVG icons to OTF font and generate Flutter-compatible class by &lt;a href=&#34;https://github.com/westracer&#34;&gt;Igor Kharakhordin&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FlutterGen/flutter_gen&#34;&gt;FlutterGen&lt;/a&gt; [791⭐] - Assets code generator for your images, fonts, colors, etc — Get rid of String-based APIs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VeryGoodOpenSource/very_good_cli&#34;&gt;Very Good Cli&lt;/a&gt; [1135⭐] - Very Good Command Line Interface for Dart created by &lt;a href=&#34;https://github.com/VeryGoodOpenSource&#34;&gt;Very Good Ventures&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leoafarias/sidekick&#34;&gt;Flutter Sidekick&lt;/a&gt; [544⭐] - Simple app to make Flutter development more delightful by &lt;a href=&#34;https://github.com/leoafarias&#34;&gt;Leo Farias&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dart-code-checker/dart-code-metrics&#34;&gt;Dart Code Metrics&lt;/a&gt; [430⭐] - Additional linter which reports code metrics, checks for anti-patterns and provides additional rules for the Dart analyzer by &lt;a href=&#34;https://github.com/dart-code-checker&#34;&gt;Dart Code Checker team&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;VSCode&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Nash.awesome-flutter-snippets&#34;&gt;Awesome Snippets&lt;/a&gt; - Collection of commonly used classes and methods by &lt;a href=&#34;https://twitter.com/Nash0x7E2&#34;&gt;Nash&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=gornivv.vscode-flutter-files&#34;&gt;Flutter Files&lt;/a&gt; - Quick generation for BLoC templates files by context menu by &lt;a href=&#34;https://github.com/gorniv&#34;&gt;Gorniv&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=localizely.flutter-intl&#34;&gt;Flutter Intl&lt;/a&gt; - i18n binding from arb files by &lt;a href=&#34;https://twitter.com/localizely&#34;&gt;Localizely&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;IntelliJ / Android Studio&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marius-h/flutter_enhancement_suite&#34;&gt;Enhancement_Suite&lt;/a&gt; [196⭐] - Search for pub.dev libraries, update version, Bloc, Snippet, etc you&#39;re covered by &lt;a href=&#34;https://github.com/marius-h&#34;&gt;Marius Höfler&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/plugin/13666-flutter-intl&#34;&gt;Flutter Intl&lt;/a&gt; - 18n binding from arb files by &lt;a href=&#34;https://twitter.com/localizely&#34;&gt;Localizely&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Desktop&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/flutter-desktop-embedding&#34;&gt;Desktop Embedding&lt;/a&gt; [6950⭐] - Desktop implementations of the Flutter embedding API by Google.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-flutter-desktop/go-flutter&#34;&gt;Golang Desktop Embedder&lt;/a&gt; [5083⭐] - Golang embedder for desktop by &lt;a href=&#34;https://github.com/pchampio&#34;&gt;Pierre Champion&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nativeshell/nativeshell&#34;&gt;Native Shell&lt;/a&gt; [372⭐] - Experimental embedder for Flutter by &lt;a href=&#34;https://twitter.com/matejknopp&#34;&gt;Matej Knopp&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gliheng/flutter-rs&#34;&gt;Rust Desktop Embedder&lt;/a&gt; [1871⭐] - Rust embedder for desktop by &lt;a href=&#34;https://github.com/gliheng&#34;&gt;juju&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitsdojo/bitsdojo_window&#34;&gt;bitsdojo_window&lt;/a&gt; &#xA;  &lt;!--bitsdojo/bitsdojo_window--&gt; - Customize windows owner-drawn chrome by &lt;a href=&#34;https://github.com/bitsdojo&#34;&gt;BitsDojo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ardera/flutter-pi&#34;&gt;Raspberry Pi Embedder&lt;/a&gt; [747⭐] - Light-weight Embedder for Raspberry Pi by &lt;a href=&#34;https://github.com/ardera&#34;&gt;Hannes Winkler&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bdlukaa/fluent_ui&#34;&gt;Fluent UI&lt;/a&gt; [566⭐] - Microsoft&#39;s Fluent Design System in Flutter by &lt;a href=&#34;https://twitter.com/bdlukaadev&#34;&gt;Bruno D&#39;Luka&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GroovinChip/macos_ui&#34;&gt;MacOS UI&lt;/a&gt; [492⭐] - Widgets and themes implementing the current macOS design language by &lt;a href=&#34;https://twitter.com/GroovinChip&#34;&gt;Groovin Chip&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ubuntu/yaru.dart&#34;&gt;Ubuntu Yaru&lt;/a&gt; [134⭐] - Distinct look and feel of the Ubuntu Desktop by &lt;a href=&#34;https://github.com/ubuntu&#34;&gt;Ubuntu&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leanflutter/awesome-flutter-desktop&#34;&gt;Awesome Flutter Desktop&lt;/a&gt; [516⭐] - A curated list of awesome things related to Flutter desktop by &lt;a href=&#34;https://github.com/leanflutter&#34;&gt;LeanFlutter&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Books&lt;/h2&gt; &#xA;&lt;h3&gt;Learning Flutter - Beginners&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Beginning-App-Development-Flutter-Cross-Platform/dp/1484251806&#34;&gt;Beginning App Development&lt;/a&gt; - by &lt;a href=&#34;https://github.com/rapPayne&#34;&gt;Rap Payne&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Beginning-Flutter-Hands-Guide-Development/dp/1119550823&#34;&gt;Beginning Flutter&lt;/a&gt; - by &lt;a href=&#34;https://github.com/JediPixels&#34;&gt;Marco Napoli&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Flutter-Beginners-introductory-cross-platform-applications/dp/1788996089&#34;&gt;Flutter for Beginners&lt;/a&gt; - by &lt;a href=&#34;https://github.com/biessek&#34;&gt;Alessandro Biessek&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Flutter-Action-Eric-Windmill/dp/1617296147&#34;&gt;Flutter in Action&lt;/a&gt; - by &lt;a href=&#34;https://github.com/ericwindmill&#34;&gt;Eric Windmill&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Learn-Google-Flutter-Fast-Example/dp/1092297375&#34;&gt;Learn Google Flutter Fast&lt;/a&gt; - by &lt;a href=&#34;https://github.com/markclow&#34;&gt;Mark Clow&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Cookbooks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Practical-Flutter-Improve-Development-Open-Source/dp/1484249712&#34;&gt;Practical Flutter&lt;/a&gt; - by &lt;a href=&#34;https://github.com/fzammetti&#34;&gt;Frank Zammetti&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Podcasts&lt;/h2&gt; &#xA;&lt;h3&gt;English&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/show/2qJVeu47e2eAum4j7lxXXv?si=d26QVJQsSRyRHeybfL_01Q&#34;&gt;It&#39;s all widgets! Flutter podcast&lt;/a&gt; - by &lt;a href=&#34;https://twitter.com/hillelcoren&#34;&gt;Hillel Coren&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Portuguese&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/show/4AlxqGkkrqe0mfIx3Mi7Xt?si=1eC0a22MR1OkEAT7HErT-A&#34;&gt;Universo Flutter&lt;/a&gt; - by &lt;a href=&#34;http://deandreamatias.com/&#34;&gt;Matias de Andrea&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Spanish&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/show/3QUTYR6jspNxHK8akJFxYf?si=MZtgjIMyTi6-WgN9Go6vZQ&#34;&gt;Código Flutter&lt;/a&gt; - by &lt;a href=&#34;https://guillermogarcia.es/&#34;&gt;Guillermo García&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Russian&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open.spotify.com/show/5qc1VFD4pkJlUYZBVTOFCI?si=OWn7VCELRO2QV03Gi2u8nA&amp;amp;nd=1&#34;&gt;Flutter Dev Podcast&lt;/a&gt; - by &lt;a href=&#34;https://twitter.com/saturovv&#34;&gt;Eugene Saturov&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bonus&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itsallwidgets.com&#34;&gt;It&#39;s All Widgets!&lt;/a&gt; - Open list of published apps by &lt;a href=&#34;https://twitter.com/hillelcoren&#34;&gt;Hillel Coren&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/ThomasBurkhartB&#34;&gt;Thomas Burkhart&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/devangelslondon&#34;&gt;Simon Lightfoot&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/scottstoll2017&#34;&gt;Scott Stoll&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jpnurmi/awesome-flutter-linux&#34;&gt;Awesome Flutter Linux&lt;/a&gt; - A curated list of awesome Linux-specific Flutter packages and projects by &lt;a href=&#34;https://twitter.com/jpnurmi&#34;&gt;J-P Nurmi&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Fun&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=sIIgtClYq0s&#34;&gt;The One&lt;/a&gt; [444👍]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hardware&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bus710/matrix2&#34;&gt;Matrix2&lt;/a&gt; - Sense Hat&#39;s LED matrix control game by &lt;a href=&#34;https://github.com/bus710&#34;&gt;bus710&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Guide &amp;amp; Interviews&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/whatsupcoders/Flutter-Interview-Questions&#34;&gt;Interview Questions&lt;/a&gt; - List of helpful questions you can use to interview potential candidates by &lt;a href=&#34;https://github.com/whatsupcoders/Whatsupcoders-flutter&#34;&gt;Whatsupcoders&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/intl-flutter-starter-kit-18415e739fb6&#34;&gt;The International Flutter Starter Kit&lt;/a&gt; - Guide by the experts by &lt;a href=&#34;https://twitter.com/BeyzaSunayGler1&#34;&gt;Beyza Sunay Guler&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://twitter.com/__nawalhmw&#34;&gt;Nawal Alhamwi&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;h3&gt;Presentation material&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1GDGdQ0ghrxTNTx6aZLT41eV5sPZvV7bU&#34;&gt;Logo&lt;/a&gt; - Logo for stickers impressions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Communication&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitter.im/flutter/flutter&#34;&gt;Gitter&lt;/a&gt; - Exchange channel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/FlutterDev/&#34;&gt;r/FlutterDev&lt;/a&gt; - Reddit community by &lt;a href=&#34;https://www.reddit.com/user/JaapVermeulen&#34;&gt;u/JaapVermeulen&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/N7Yshp4&#34;&gt;Discord&lt;/a&gt; - Discord server to discuss and get help by &lt;a href=&#34;https://twitter.com/AndrewPritykin&#34;&gt;Pritykin&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fluttercommunity&#34;&gt;Flutter Community&lt;/a&gt; - Central place for community made packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenFlutter&#34;&gt;OpenFlutter&lt;/a&gt; - Make it easier 让 Flutter 更简单.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hashnode.com/n/flutter&#34;&gt;Hashnode&lt;/a&gt; - Read and write posts, participate in discussions or ask questions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Misc&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutterevents.com&#34;&gt;Flutter Events&lt;/a&gt; - An open list of Flutter events by &lt;a href=&#34;https://twitter.com/hillelcoren&#34;&gt;@hillelcoren&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutterx.com&#34;&gt;FlutterX&lt;/a&gt; - Searchable list of resources by &lt;a href=&#34;https://twitter.com/hillelcoren&#34;&gt;Hillel Coren&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇦🇴 Angola&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Facebook &lt;a href=&#34;https://facebook.com/groups/556888664681938&#34;&gt;Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Facebook &lt;a href=&#34;https://facebook.com/Flutter-Angola-2076395262380886/&#34;&gt;Page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter &lt;a href=&#34;https://twitter.com/AngolaFlutter&#34;&gt;Page&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇦🇺 Australia&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Slack &lt;a href=&#34;https://gdg-sydney.slack.com&#34;&gt;GDG Sydney&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/gdgsydney&#34;&gt;GDG Sydney&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter &lt;a href=&#34;https://twitter.com/FlutterSydney&#34;&gt;Flutter Sydney&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bangladesh&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/groups/flutter.bangladesh/&#34;&gt;Facebook Group&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇧🇷 Brazil&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Slack &lt;a href=&#34;https://flutterbr.slack.com&#34;&gt;Flutter Brasil&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Medium &lt;a href=&#34;https://medium.com/flutter-comunidade-br&#34;&gt;Flutter Comunidade BR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter &lt;a href=&#34;https://twitter.com/br_flutter&#34;&gt;Flutter Comunidade BR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/flutter-sp&#34;&gt;São Paulo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.flutterparainiciantes.com.br&#34;&gt;Flutter para iniciantes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;cm Cameroon&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Twitter &lt;a href=&#34;https://twitter.com/fluttercm&#34;&gt;Flutter Cameroon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Telegram &lt;a href=&#34;https://t.me/fluttercameroon&#34;&gt;Flutter &amp;amp; Dart Community CM&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇨🇦 Canada&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/FlutterToronto&#34;&gt;Toronto&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/FlutterMontreal&#34;&gt;Montreal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/FlutterCalgary&#34;&gt;Calgary&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇨🇮 Côte d&#39;Ivoire (Ivory Coast)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Facebook &lt;a href=&#34;https://web.facebook.com/flutterci/&#34;&gt;Page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Facebook &lt;a href=&#34;https://web.facebook.com/groups/1725273507587759/&#34;&gt;Group&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇩🇰 Denmark&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/Flutter-Developers-Denmark/&#34;&gt;Denmark&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇪🇹 Ethiopia&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/flutter_forum/&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇫🇷 France&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/fr-FR/Flutter-Bordeaux&#34;&gt;Bordeaux&lt;/a&gt; - &lt;a href=&#34;https://www.meetup.com/fr-FR/Flutter-Lille&#34;&gt;Lille&lt;/a&gt; - &lt;a href=&#34;https://www.meetup.com/fr-FR/Flutter-Paris&#34;&gt;Paris&lt;/a&gt; - &lt;a href=&#34;https://www.meetup.com/fr-FR/Flutter-Rennes&#34;&gt;Rennes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/FlutterFrance&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://linktr.ee/flutter_france&#34;&gt;Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.flutter-digest.com/&#34;&gt;Newsletter Flutter Digest&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇩🇪 Germany&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/flutter-berlin/&#34;&gt;Berlin&lt;/a&gt; - &lt;a href=&#34;https://www.meetup.com/flutter-school/&#34;&gt;Düsseldorf&lt;/a&gt; - &lt;a href=&#34;https://www.meetup.com/Karlsruhe-Flutter-Meetup/&#34;&gt;Karlsruhe&lt;/a&gt; - &lt;a href=&#34;https://www.meetup.com/Flutter-Hamburg/&#34;&gt;Hamburg&lt;/a&gt; - &lt;a href=&#34;https://www.meetup.com/Flutter-Stuttgart/&#34;&gt;Stuttgart&lt;/a&gt; - &lt;a href=&#34;https://www.meetup.com/Flutter-Munich&#34;&gt;Munich&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter &lt;a href=&#34;https://twitter.com/flutterBerlin&#34;&gt;Flutter Berlin&lt;/a&gt; - &lt;a href=&#34;https://twitter.com/flutter_school&#34;&gt;Düsseldorf&lt;/a&gt; - &lt;a href=&#34;https://twitter.com/FlutterMunich&#34;&gt;Munich&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack &lt;a href=&#34;https://flutterberlin.slack.com/join/shared_invite/enQtMzQ1NDI0NjU4Mjc5LWVjOTg0NmUxZmU4YzZjZjFkMWNjYWYyYTI5NjMyZWE5MDZjNDM0YzgyNWQyM2EzM2E0NDE4ZmQyMzQyMzRlNjI&#34;&gt;Flutter Berlin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LinkedIn &lt;a href=&#34;https://www.linkedin.com/company/Flutter-Munich&#34;&gt;Munich&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇬🇷 Greece&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/Athens-Flutter-Group/&#34;&gt;Athens&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack &lt;a href=&#34;https://join.slack.com/t/fluttergr/shared_invite/enQtNzQwODM2NzIxOTg0LWFjNWYxYzkyMTdmYWQ4ZWYyMWI2YjcyOTI4YzAzYjY2Nzk3OWNkMTkwZGRjNjRiMGFlNzgyOGRhMmEyZTQ3MmM&#34;&gt;Flutter GR&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇮🇹 Italy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Telegram &lt;a href=&#34;https://t.me/flutteritdevs&#34;&gt;Flutter Italia Developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Website &lt;a href=&#34;https://flutteritalia.dev&#34;&gt;flutteritalia.dev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇮🇳 India&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Telegram &lt;a href=&#34;https://t.me/flutterindia&#34;&gt;Flutter India 🇮🇳&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇮🇱 Israel&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Facebook &lt;a href=&#34;https://www.facebook.com/groups/2779846762051712&#34;&gt;Flutter Israel Developers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇮🇩 Indonesia&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Telegram &lt;a href=&#34;https://t.me/flutter_id&#34;&gt;Flutter Indonesia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇯🇵 Japan&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/Tokyo-Flutter/&#34;&gt;Tokyo Flutter Developers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇰🇪 Kenya&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/KenyaFlutterDev/&#34;&gt;Flutter Developers Kenya&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter &lt;a href=&#34;https://twitter.com/KenyaFlutterDev/&#34;&gt;Flutter Developers Kenya&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇰🇷 Korea&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/ko-KR/Flutter-Korea/&#34;&gt;Flutter Korea&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Facebook &lt;a href=&#34;https://www.facebook.com/groups/flutterkorea/&#34;&gt;Flutter Korea User Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack &lt;a href=&#34;http://slack.gdg.kr/&#34;&gt;GDG Korea #flutter channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇲🇾 Malaysia&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Telegram &lt;a href=&#34;https://t.me/flutterdevmalaysia&#34;&gt;Flutter/Dart Dev Malaysia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇳🇬 Nigeria&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Slack &lt;a href=&#34;https://devcenter-square-slack.herokuapp.com&#34;&gt;DevCenter Square&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Telegram &lt;a href=&#34;https://t.me/joinchat/PAH0fVA0l7F_zMM537lo9w&#34;&gt;FlutterLagos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter &lt;a href=&#34;https://twitter.com/FlutterLagos&#34;&gt;FlutterLagos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇵🇰 Pakistan&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/groups/FlutterPK/&#34;&gt;Facebook Group&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇵🇭 Philippines&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.ph/&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.meetup.com/flutterph/&#34;&gt;Meetup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/flutter_ph&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.facebook.com/flutterphilippines/&#34;&gt;Facebook Page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.facebook.com/groups/flutterphilippines/&#34;&gt;Facebook Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutterph&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇵🇱 Poland&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/groups/2228619364094561/about/&#34;&gt;Flutter Developers Poland Facebook Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://bit.ly/flutter-pl-slack&#34;&gt;Flutter Poland Slack workspace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.meetup.com/Flutter-Warsaw/&#34;&gt;Flutter Warsaw Meetup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/flutterwarsaw&#34;&gt;Flutter Warsaw Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCO7yMprO8cFwV4QnuhTMVlQ&#34;&gt;Flutter Warsaw YouTube Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.meetup.com/poznan-flutter-developers/&#34;&gt;Poznan Flutter Developer Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.meetup.com/Flutter-Wroc%C5%82aw/&#34;&gt;Flutter Wrocław Meetup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/pl-PL/Flutter-Tricity/&#34;&gt;Tricity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter &lt;a href=&#34;https://twitter.com/FlutterTricity/&#34;&gt;Tricity&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇵🇹 Portugal&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.meetup.com/flutterportugal&#34;&gt;Meetup&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇵🇪 Peru&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Facebook &lt;a href=&#34;https://www.facebook.com/groups/flutterperu/&#34;&gt;Flutter Peru Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://meetup.com/Flutter-Peru/&#34;&gt;Flutter Peru&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter &lt;a href=&#34;https://twitter.com/FlutterPeru&#34;&gt;Flutter Peru&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇷🇺 Russia&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/rudart&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇪🇸 Spain&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.madrid&#34;&gt;Madrid Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.meetup.com/es-ES/Flutter-Madrid&#34;&gt;Madrid Meetup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/FlutterMadrid&#34;&gt;Madrid Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇱🇰 Sri Lanka&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitter.im/Colombo-Flutter-Community&#34;&gt;Gitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fluttercmb.slack.com/&#34;&gt;Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Colombo-Flutter-Meetup&#34;&gt;Community GitHub Page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/flutterCMB/&#34;&gt;Facebook Page&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇹🇷 Turkey&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/flutter_turkiye&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-t%C3%BCrkiye/&#34;&gt;Medium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/FlutterTurk&#34;&gt;Telegram Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/FlutterTR&#34;&gt;Telegram Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bit.ly/flutterTR&#34;&gt;Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutterturkey&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇺🇦 Ukraine&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/artflutter&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ArtFlutter&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇬🇧 United Kingdom&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutterldn.dev/&#34;&gt;Flutter London&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/FlutterLDN/&#34;&gt;London&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/FlutterLDN&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UC_a-vGdkAIRMKT1zzZ4I2ag&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇺🇸 United States&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/Flutter-Chicago/&#34;&gt;Chicago&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Meetup [Washington DC] (&lt;a href=&#34;https://www.meetup.com/DCFlutter/&#34;&gt;https://www.meetup.com/DCFlutter/&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🏴 Kurdistan&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Meetup &lt;a href=&#34;https://www.meetup.com/Flutter-Kurdistan/&#34;&gt;Kurdistan&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇳🇴 Norway&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.meetup.com/Oslo-Flutter-Dart-Meetup/&#34;&gt;Meetup Oslo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.meetup.com/Flutter-Stavanger/&#34;&gt;Meetup Stavanger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/flutterNorway&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🇺🇿 Uzbekistan&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/dartdevuz&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/&#34;&gt;&lt;img src=&#34;http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg?sanitize=true&#34; alt=&#34;CC0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To the extent possible under law, &lt;a href=&#34;https://www.linkedin.com/in/robert-felker/&#34;&gt;Robert Felker&lt;/a&gt; has waived all copyright and related or neighboring rights to this work.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>juliansteenbakker/mobile_scanner</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/juliansteenbakker/mobile_scanner</id>
    <link href="https://github.com/juliansteenbakker/mobile_scanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A universal scanner for Flutter based on MLKit. Uses CameraX on Android and AVFoundation on iOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mobile_scanner&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/mobile_scanner&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/mobile_scanner.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/lint&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-lint-4BC0F5.svg?sanitize=true&#34; alt=&#34;style: lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/juliansteenbakker/mobile_scanner/actions/workflows/flutter.yml&#34;&gt;&lt;img src=&#34;https://github.com/juliansteenbakker/mobile_scanner/actions/workflows/flutter.yml/badge.svg?sanitize=true&#34; alt=&#34;mobile_scanner&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/juliansteenbakker&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/juliansteenbakker?label=sponsor%20me&#34; alt=&#34;GitHub Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A universal barcode and QR code scanner for Flutter based on MLKit. Uses CameraX on Android, AVFoundation on iOS and Apple Vision &amp;amp; AVFoundation on macOS.&lt;/p&gt; &#xA;&lt;h2&gt;Platform Support&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MacOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Web&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;SDK 21 and newer. Reason: CameraX requires at least SDK 21. Also, make sure you upgrade kotlin to the latest version in your project.&lt;/p&gt; &#xA;&lt;p&gt;This packages uses the &lt;strong&gt;bundled version&lt;/strong&gt; of MLKit Barcode-scanning for Android. This version is more accurate and immediately available to devices. However, this version will increas the size of the app with approximately 3 to 10 MB. The alternative for this is to use the &lt;strong&gt;unbundled version&lt;/strong&gt; of MLKit Barcode-scanning for Android. This version is older than the bundled version however this only increases the size by around 600KB.&lt;/p&gt; &#xA;&lt;p&gt;To use this version you must alter the mobile_scanner gradle file to replace &lt;code&gt;com.google.mlkit:barcode-scanning:17.0.2&lt;/code&gt; with &lt;code&gt;com.google.android.gms:play-services-mlkit-barcode-scanning:18.0.0&lt;/code&gt;. Keep in mind that if you alter the gradle files directly in your project it can be overriden when you update your pubspec.yaml. I am still searching for a way to properly replace the module in gradle but have yet to find one.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/vision/barcode-scanning/android&#34;&gt;You can read more about the difference between the two versions here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;p&gt;iOS 11 and newer. Reason: MLKit for iOS requires at least iOS 10 and a &lt;a href=&#34;https://developers.google.com/ml-kit/migration/ios&#34;&gt;64bit device&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Add the following keys to your Info.plist file, located in &#xA;  &lt;project root&gt;&#xA;   /ios/Runner/Info.plist:&#xA;  &lt;/project&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;NSCameraUsageDescription - describe why your app needs access to the camera. This is called Privacy - Camera Usage Description in the visual editor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you want to use the local gallery feature from &lt;a href=&#34;https://pub.dev/packages/image_picker&#34;&gt;image_picker&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;NSPhotoLibraryUsageDescription - describe why your app needs permission for the photo library. This is called Privacy - Photo Library Usage Description in the visual editor.&lt;/p&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;macOS 10.13 or newer. Reason: Apple Vision library.&lt;/p&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;p&gt;Add this to &lt;code&gt;web/index.html&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/jsqr@1.4.0/dist/jsQR.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Web only supports QR codes for now. Do you have experience with Flutter Web development? &lt;a href=&#34;https://github.com/juliansteenbakker/mobile_scanner/issues/54&#34;&gt;Help me with migrating from jsQR to qr-scanner for full barcode support!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features Supported&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Features&lt;/th&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;   &lt;th&gt;macOS&lt;/th&gt; &#xA;   &lt;th&gt;Web&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;analyzeImage (Gallery)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Import &lt;code&gt;package:mobile_scanner/mobile_scanner.dart&lt;/code&gt;, and use the widget with or without the controller.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t provide a controller, you can&#39;t control functions like the torch(flash) or switching camera.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t set allowDuplicates to false, you can get multiple scans in a very short time, causing things like pop() to fire lots of times.&lt;/p&gt; &#xA;&lt;p&gt;Example without controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:mobile_scanner/mobile_scanner.dart&#39;;&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(title: const Text(&#39;Mobile Scanner&#39;)),&#xA;      body: MobileScanner(&#xA;          allowDuplicates: false,&#xA;          onDetect: (barcode, args) {&#xA;            if (barcode.rawValue == null) {&#xA;              debugPrint(&#39;Failed to scan Barcode&#39;);&#xA;            } else {&#xA;              final String code = barcode.rawValue!;&#xA;              debugPrint(&#39;Barcode found! $code&#39;);&#xA;            }&#xA;          }),&#xA;    );&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example with controller and initial values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:mobile_scanner/mobile_scanner.dart&#39;;&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(title: const Text(&#39;Mobile Scanner&#39;)),&#xA;      body: MobileScanner(&#xA;          allowDuplicates: false,&#xA;          controller: MobileScannerController(&#xA;            facing: CameraFacing.front, torchEnabled: true),&#xA;          onDetect: (barcode, args) {&#xA;            if (barcode.rawValue == null) {&#xA;              debugPrint(&#39;Failed to scan Barcode&#39;);&#xA;            } else {&#xA;              final String code = barcode.rawValue!;&#xA;              debugPrint(&#39;Barcode found! $code&#39;);&#xA;            }&#xA;          }),&#xA;    );&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example with controller and torch &amp;amp; camera controls:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:mobile_scanner/mobile_scanner.dart&#39;;&#xA;&#xA;  MobileScannerController cameraController = MobileScannerController();&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;        appBar: AppBar(&#xA;          title: const Text(&#39;Mobile Scanner&#39;),&#xA;          actions: [&#xA;            IconButton(&#xA;              color: Colors.white,&#xA;              icon: ValueListenableBuilder(&#xA;                valueListenable: cameraController.torchState,&#xA;                builder: (context, state, child) {&#xA;                  switch (state as TorchState) {&#xA;                    case TorchState.off:&#xA;                      return const Icon(Icons.flash_off, color: Colors.grey);&#xA;                    case TorchState.on:&#xA;                      return const Icon(Icons.flash_on, color: Colors.yellow);&#xA;                  }&#xA;                },&#xA;              ),&#xA;              iconSize: 32.0,&#xA;              onPressed: () =&amp;gt; cameraController.toggleTorch(),&#xA;            ),&#xA;            IconButton(&#xA;              color: Colors.white,&#xA;              icon: ValueListenableBuilder(&#xA;                valueListenable: cameraController.cameraFacingState,&#xA;                builder: (context, state, child) {&#xA;                  switch (state as CameraFacing) {&#xA;                    case CameraFacing.front:&#xA;                      return const Icon(Icons.camera_front);&#xA;                    case CameraFacing.back:&#xA;                      return const Icon(Icons.camera_rear);&#xA;                  }&#xA;                },&#xA;              ),&#xA;              iconSize: 32.0,&#xA;              onPressed: () =&amp;gt; cameraController.switchCamera(),&#xA;            ),&#xA;          ],&#xA;        ),&#xA;        body: MobileScanner(&#xA;            allowDuplicates: false,&#xA;            controller: cameraController,&#xA;            onDetect: (barcode, args) {&#xA;              if (barcode.rawValue == null) {&#xA;                debugPrint(&#39;Failed to scan Barcode&#39;);&#xA;              } else {&#xA;                final String code = barcode.rawValue!;&#xA;                debugPrint(&#39;Barcode found! $code&#39;);&#xA;              }&#xA;            }));&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>flutter/flutter</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/flutter/flutter</id>
    <link href="https://github.com/flutter/flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter makes it easy and fast to build beautiful apps for mobile and beyond&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://flutter.dev&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/archived-master/src/_assets/image/flutter-lockup-bg.jpg?raw=true&#34; alt=&#34;Flutter logo&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/flutter/flutter/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/flutter/flutter.svg?sanitize=true&#34; alt=&#34;Build Status - Cirrus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flutter/flutter/wiki/Chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/608014603317936148&#34; alt=&#34;Discord badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=flutterdev&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/flutterdev.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter handle&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/5631&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5631/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flutter is Google&#39;s SDK for crafting beautiful, fast user experiences for mobile, web, and desktop from a single codebase. Flutter works with existing code, is used by developers and organizations around the world, and is free and open source.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/get-started/&#34;&gt;Install Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs&#34;&gt;Flutter documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/flutter/wiki&#34;&gt;Development wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/flutter/raw/master/CONTRIBUTING.md&#34;&gt;Contributing to Flutter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For announcements about new releases, follow the &lt;a href=&#34;https://groups.google.com/forum/#!forum/flutter-announce&#34;&gt;flutter-announce@googlegroups.com&lt;/a&gt; mailing list. Our documentation also tracks &lt;a href=&#34;https://flutter.dev/docs/release/breaking-changes&#34;&gt;breaking changes&lt;/a&gt; across releases.&lt;/p&gt; &#xA;&lt;h2&gt;Terms of service&lt;/h2&gt; &#xA;&lt;p&gt;The Flutter tool may occasionally download resources from Google servers. By downloading or using the Flutter SDK you agree to the Google Terms of Service: &lt;a href=&#34;https://policies.google.com/terms&#34;&gt;https://policies.google.com/terms&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example, when installed from GitHub (as opposed to from a prepackaged archive), the Flutter tool will download the Dart SDK from Google servers immediately when first run, as it is used to execute the &lt;code&gt;flutter&lt;/code&gt; tool itself. This will also occur when Flutter is upgraded (e.g. by running the &lt;code&gt;flutter upgrade&lt;/code&gt; command).&lt;/p&gt; &#xA;&lt;h2&gt;About Flutter&lt;/h2&gt; &#xA;&lt;p&gt;We think Flutter will help you create beautiful, fast apps, with a productive, extensible and open development model, whether you&#39;re targeting iOS or Android, web, Windows, macOS, Linux or embedding it as the UI toolkit for a platform of your choice.&lt;/p&gt; &#xA;&lt;h3&gt;Beautiful user experiences&lt;/h3&gt; &#xA;&lt;p&gt;We want to enable designers to deliver their full creative vision without being forced to water it down due to limitations of the underlying framework. Flutter&#39;s &lt;a href=&#34;https://flutter.dev/docs/resources/inside-flutter&#34;&gt;layered architecture&lt;/a&gt; gives you control over every pixel on the screen and its powerful compositing capabilities let you overlay and animate graphics, video, text, and controls without limitation. Flutter includes a full &lt;a href=&#34;https://flutter.dev/widgets/&#34;&gt;set of widgets&lt;/a&gt; that deliver pixel-perfect experiences whether you&#39;re building for iOS (&lt;a href=&#34;https://docs.flutter.dev/development/ui/widgets/cupertino&#34;&gt;Cupertino&lt;/a&gt;) or Android (&lt;a href=&#34;https://docs.flutter.dev/development/ui/widgets/material&#34;&gt;Material&lt;/a&gt;), along with support for customizing or creating entirely new visual components.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/main/src/assets/images/docs/homepage/reflectly-hero-600px.png?raw=true&#34; alt=&#34;Reflectly hero image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fast results&lt;/h3&gt; &#xA;&lt;p&gt;Flutter is fast. It&#39;s powered by the same hardware-accelerated 2D graphics library that underpins Chrome and Android: &lt;a href=&#34;https://skia.org/&#34;&gt;Skia&lt;/a&gt;. We architected Flutter to support glitch-free, jank-free graphics at the native speed of your device. Flutter code is powered by the world-class &lt;a href=&#34;https://dart.dev/&#34;&gt;Dart platform&lt;/a&gt;, which enables compilation to 32-bit and 64-bit ARM machine code for iOS and Android, as well as JavaScript for the web and Intel x64 for desktop devices.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/main/src/assets/images/docs/homepage/dart-diagram-small.png?raw=true&#34; alt=&#34;Dart diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Productive development&lt;/h3&gt; &#xA;&lt;p&gt;Flutter offers stateful hot reload, allowing you to make changes to your code and see the results instantly without restarting your app or losing its state.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.flutter.dev/development/tools/hot-reload&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/main/src/assets/images/docs/tools/android-studio/hot-reload.gif?raw=true&#34; alt=&#34;Hot reload animation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Extensible and open model&lt;/h3&gt; &#xA;&lt;p&gt;Flutter works with any development tool (or none at all), and also includes editor plug-ins for both &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter&#34;&gt;Visual Studio Code&lt;/a&gt; and &lt;a href=&#34;https://plugins.jetbrains.com/plugin/9212-flutter&#34;&gt;IntelliJ / Android Studio&lt;/a&gt;. Flutter provides &lt;a href=&#34;https://pub.dev/flutter&#34;&gt;tens of thousands of packages&lt;/a&gt; to speed your development, regardless of your target platform. And accessing other native code is easy, with support for both &lt;a href=&#34;https://flutter.dev/docs/development/platform-integration/c-interop&#34;&gt;FFI&lt;/a&gt; and &lt;a href=&#34;https://flutter.dev/docs/development/platform-integration/platform-channels&#34;&gt;platform-specific APIs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Flutter is a fully open-source project, and we welcome contributions. Information on how to get started can be found in our &lt;a href=&#34;https://raw.githubusercontent.com/flutter/flutter/master/CONTRIBUTING.md&#34;&gt;contributor guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flame-engine/flame</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/flame-engine/flame</id>
    <link href="https://github.com/flame-engine/flame" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter based game engine&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt; &lt;img alt=&#34;flame&#34; width=&#34;200px&#34; src=&#34;https://user-images.githubusercontent.com/6718144/101553774-3bc7b000-39ad-11eb-8a6a-de2daa31bd64.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A Flutter-based game engine. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Pub&#34; href=&#34;https://pub.dev/packages/flame&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flame.svg?style=popout&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/flame-engine/flame/workflows/cicd/badge.svg?branch=main&amp;amp;event=push&#34; alt=&#34;Test&#34;&gt; &lt;a title=&#34;Discord&#34; href=&#34;https://discord.gg/pxrBmy4&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/509714518008528896.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Melos&#34; href=&#34;https://github.com/invertase/melos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20with-melos-f700ff.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-ZH.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-PL.md&#34;&gt;Polski&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-RU.md&#34;&gt;Русский&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-ES.md&#34;&gt;Español&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-JA.md&#34;&gt;日本語&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The full documentation for Flame can be found on &lt;a href=&#34;https://docs.flame-engine.org/&#34;&gt;docs.flame-engine.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To change the version of the documentation, use the version selector noted with &lt;code&gt;version:&lt;/code&gt; in the top of the page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The documentation that resides in the main branch is newer than the released documentation on the docs website.&lt;/p&gt; &#xA;&lt;p&gt;Other useful links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flame-engine.org/&#34;&gt;The official Flame site&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://examples.flame-engine.org/&#34;&gt;Examples&lt;/a&gt; of most features which can be tried out from your browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tutorials.flame-engine.org/&#34;&gt;Tutorials&lt;/a&gt; - A simple tutorial to get started.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/flame/latest/&#34;&gt;API Reference&lt;/a&gt; - The generated dartdoc API reference.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;There is a Flame community on &lt;a href=&#34;https://discord.gg/5unKpdQD78&#34;&gt;Blue Fire&#39;s Discord server&lt;/a&gt; where you can ask any of your Flame related questions.&lt;/p&gt; &#xA;&lt;p&gt;If you are more comfortable with StackOverflow, you can also create a question there. Add the &lt;a href=&#34;https://stackoverflow.com/questions/tagged/flame&#34;&gt;Flame tag&lt;/a&gt;, so that anyone following the tag can help out.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The goal of the Flame Engine is to provide a complete set of out-of-the-way solutions for common problems that games developed with Flutter might share.&lt;/p&gt; &#xA;&lt;p&gt;Some of the key features provided are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A game loop.&lt;/li&gt; &#xA; &lt;li&gt;A component/object system (FCS).&lt;/li&gt; &#xA; &lt;li&gt;Effects and particles.&lt;/li&gt; &#xA; &lt;li&gt;Collision detection.&lt;/li&gt; &#xA; &lt;li&gt;Gesture and input handling.&lt;/li&gt; &#xA; &lt;li&gt;Images, animations, sprites, and sprite sheets.&lt;/li&gt; &#xA; &lt;li&gt;General utilities to make development easier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On top of those features, you can augment Flame with bridge packages. Through these libraries, you will be able to access bindings to other packages, including custom Flame components and helpers, in order to make integrations seamless.&lt;/p&gt; &#xA;&lt;p&gt;Flame officially provides bridge libraries to the following packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_audio&#34;&gt;flame_audio&lt;/a&gt; for &lt;a href=&#34;https://github.com/bluefireteam/audioplayers&#34;&gt;AudioPlayers&lt;/a&gt;: Play multiple audio files simultaneously.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_bloc&#34;&gt;flame_bloc&lt;/a&gt; for &lt;a href=&#34;https://github.com/felangel/bloc&#34;&gt;Bloc&lt;/a&gt;: A predictable state management library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_fire_atlas&#34;&gt;flame_fire_atlas&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/fire-atlas&#34;&gt;FireAtlas&lt;/a&gt;: Create texture atlases for games.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_forge2d&#34;&gt;flame_forge2d&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/forge2d&#34;&gt;Forge2D&lt;/a&gt;: A Box2D physics engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_lint&#34;&gt;flame_lint&lt;/a&gt; - Our set of linting (&lt;code&gt;analysis_options.yaml&lt;/code&gt;) rules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_oxygen&#34;&gt;flame_oxygen&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/oxygen&#34;&gt;Oxygen&lt;/a&gt;: A lightweight Entity Component System (ECS) framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_rive&#34;&gt;flame_rive&lt;/a&gt; for &lt;a href=&#34;https://rive.app/&#34;&gt;Rive&lt;/a&gt;: Create interactive animations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_svg&#34;&gt;flame_svg&lt;/a&gt; for &lt;a href=&#34;https://github.com/dnfield/flutter_svg&#34;&gt;flutter_svg&lt;/a&gt;: Draw SVG files in Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_tiled&#34;&gt;flame_tiled&lt;/a&gt; for &lt;a href=&#34;https://www.mapeditor.org/&#34;&gt;Tiled&lt;/a&gt;: 2D tile map level editor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;The Flame Engine&#39;s top sponsors:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://verygood.ventures/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/media/unicorn_two_toned.png&#34; alt=&#34;Very Good Ventures&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cypherstack.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/media/logo_cypherstack.png&#34; alt=&#34;Cypher Stack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to sponsor Flame? Check our Patreon on the section below, or contact us on Discord.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to show us your support is by giving the project a star.&lt;/p&gt; &#xA;&lt;p&gt;You can also support us by becoming a patron on Patreon:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/bluefireoss&#34;&gt;&lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button.png&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or by making a single donation by buying us a coffee:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/bluefire&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/835641/60540201-fcd7fa00-9ce4-11e9-87ec-1e98568e9f58.png&#34; alt=&#34;Buy Me A Coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also show on your repository that your game is made with Flame by using one of the following badges:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?sanitize=true&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?style=flat-square&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?style=for-the-badge&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg)](https://flame-engine.org)&#xA;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg?style=flat-square)](https://flame-engine.org)&#xA;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg?style=for-the-badge)](https://flame-engine.org)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Have you found a bug or have a suggestion of how to enhance Flame? Open an issue and we will take a look at it as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;Do you want to contribute with a PR? PRs are always welcome, just make sure to create it from the correct branch (main) and follow the &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/.github/pull_request_template.md&#34;&gt;checklist&lt;/a&gt; which will appear when you open the PR.&lt;/p&gt; &#xA;&lt;p&gt;For bigger changes, or if in doubt, make sure to talk about your contribution to the team. Either via an issue, GitHub discussion, or reach out to the team either using the &lt;a href=&#34;https://discord.gg/pxrBmy4&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;A simple tutorial to get started can be found on &lt;a href=&#34;https://tutorials.flame-engine.org&#34;&gt;tutorials.flame-engine.org&lt;/a&gt; and examples of most features in Flame can be found on &lt;a href=&#34;https://examples.flame-engine.org&#34;&gt;examples.flame-engine.org&lt;/a&gt;. To access the code for each example, press the &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt; button in the top right corner.&lt;/p&gt; &#xA;&lt;h3&gt;Highlighted community tutorials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;@Devowl&#39;s Flutter &amp;amp; Flame series:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-flame-step-1-create-your-game-b3b6ee387d77&#34;&gt;Step 1: Create your game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-flame-step-2-game-basics-48b4493424f3&#34;&gt;Step 2: Game basics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-3-sprites-and-inputs-7ca9cc7c8b91&#34;&gt;Step 3: Sprites and inputs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-4-collisions-viewport-ff2da048e3a6&#34;&gt;Step 4: Collisions &amp;amp; Viewport&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-5-level-generation-camera-62a060a286e3&#34;&gt;Step 5: Level generation &amp;amp; camera&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Other tutorials:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;@Vguzzi&#39;s article &lt;a href=&#34;https://www.raywenderlich.com/27407121-building-games-in-flutter-with-flame-getting-started&#34;&gt;Building Games in Flutter with Flame&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;@DevKage&#39;s YouTube series with the &lt;a href=&#34;https://www.youtube.com/playlist?list=PLiZZKL9HLmWOmQgYxWHuOHOWsUUlhCCOY&#34;&gt;Dino run tutorial&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We offer a curated list of Games, Libraries and Articles over at &lt;a href=&#34;https://github.com/flame-engine/awesome-flame&#34;&gt;awesome-flame&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that some of the articles might be slightly outdated, but can still be useful.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/orgs/bluefireteam/people&#34;&gt;Blue Fire team&lt;/a&gt;, who are continuously working on maintaining and improving Flame and its ecosystem.&lt;/li&gt; &#xA; &lt;li&gt;All the friendly contributors and people who are helping in the community.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>OpenFlutter/flutter_screenutil</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/OpenFlutter/flutter_screenutil</id>
    <link href="https://github.com/OpenFlutter/flutter_screenutil" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter screen adaptation, font adaptation, get screen information&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flutter_screenutil&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_screenutil&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_screenutil.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_screenutil/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_screenutil/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_screenutil/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_screenutil/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A flutter plugin for adapting screen and font size.Let your UI display a reasonable layout on different screen sizes!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This plugin is still under development, and some APIs might not be available yet.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_screenutil/raw/master/README_CN.md&#34;&gt;中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_screenutil/raw/master/README_PT.md&#34;&gt;README em Português&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_screenutil&#34;&gt;github&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_screenutil/raw/master/CHANGELOG.md&#34;&gt;Update log&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Add dependency&lt;/h3&gt; &#xA;&lt;p&gt;Please check the latest version before installation. If there is any problem with the new version, please use the previous version&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  flutter:&#xA;    sdk: flutter&#xA;  # add flutter_screenutil&#xA;  flutter_screenutil: ^{latest version}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add the following imports to your Dart code&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter_screenutil/flutter_screenutil.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Property&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default Value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;deviceSize&lt;/td&gt; &#xA;   &lt;td&gt;Size&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;The size of the physical device&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;designSize&lt;/td&gt; &#xA;   &lt;td&gt;Size&lt;/td&gt; &#xA;   &lt;td&gt;Size(360,690)&lt;/td&gt; &#xA;   &lt;td&gt;The size of the device screen in the design draft, in dp&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;builder&lt;/td&gt; &#xA;   &lt;td&gt;Function&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;Return widget that uses the library in a property (ex: MaterialApp&#39;s theme)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;child&lt;/td&gt; &#xA;   &lt;td&gt;Widget&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;A part of builder that its dependencies/properties don&#39;t use the library&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rebuildFactor&lt;/td&gt; &#xA;   &lt;td&gt;Function&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;default&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Returns whether to rebuild or not when screen metrics changes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;orientation&lt;/td&gt; &#xA;   &lt;td&gt;Orientation&lt;/td&gt; &#xA;   &lt;td&gt;portrait&lt;/td&gt; &#xA;   &lt;td&gt;screen orientation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;splitScreenMode&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;support for split screen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;minTextAdapt&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Whether to adapt the text according to the minimum of width and height&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;context&lt;/td&gt; &#xA;   &lt;td&gt;BuildContext&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;Get physical device data if not provided, by MediaQuery.of(context)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note : You must either provide builder, child or both.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Initialize and set the fit size and font size to scale according to the system&#39;s &#34;font size&#34; accessibility option&lt;/h3&gt; &#xA;&lt;p&gt;Please set the size of the design draft before use, the width and height of the design draft.&lt;/p&gt; &#xA;&lt;h4&gt;The first way (You must use it once in your app)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatelessWidget {&#xA;  const MyApp({Key? key}) : super(key: key);&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    //Set the fit size (Find your UI design, look at the dimensions of the device screen and fill it in,unit in dp)&#xA;    return ScreenUtilInit(&#xA;      designSize: const Size(360, 690),&#xA;      minTextAdapt: true,&#xA;      splitScreenMode: true,&#xA;      builder: (context , child) {&#xA;        return MaterialApp(&#xA;          debugShowCheckedModeBanner: false,&#xA;          title: &#39;First Method&#39;,&#xA;          // You can use the library anywhere in the app even in theme&#xA;          theme: ThemeData(&#xA;            primarySwatch: Colors.blue,&#xA;            textTheme: Typography.englishLike2018.apply(fontSizeFactor: 1.sp),&#xA;          ),&#xA;          home: child,&#xA;        );&#xA;      },&#xA;      child: const HomePage(title: &#39;First Method&#39;),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;The second way:You need a trick to support font adaptation in the textTheme of app theme&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Hybrid development uses the second way&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;not support this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;  ...&#xA;  //To support the following, you need to use the first initialization method&#xA;  theme: ThemeData(&#xA;    textTheme: TextTheme(&#xA;      button: TextStyle(fontSize: 45.sp)&#xA;    ),&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;but you can do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void main() async {&#xA;  // Add this line&#xA;  await ScreenUtil.ensureScreenSize();&#xA;  runApp(MyApp());&#xA;}&#xA;...&#xA;MaterialApp(&#xA;  ...&#xA;  builder: (ctx, child) {&#xA;    ScreenUtil.init(ctx);&#xA;    return Theme(&#xA;      data: ThemeData(&#xA;        primarySwatch: Colors.blue,&#xA;        textTheme: TextTheme(bodyText2: TextStyle(fontSize: 30.sp)),&#xA;      ),&#xA;      child: HomePage(title: &#39;FlutterScreenUtil Demo&#39;),&#xA;    );&#xA;  },&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class MyApp extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      debugShowCheckedModeBanner: false,&#xA;      title: &#39;Flutter_ScreenUtil&#39;,&#xA;      theme: ThemeData(&#xA;        primarySwatch: Colors.blue,&#xA;      ),&#xA;      home: HomePage(title: &#39;FlutterScreenUtil Demo&#39;),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;class HomePage extends StatefulWidget {&#xA;  const HomePage({Key key, this.title}) : super(key: key);&#xA;&#xA;  final String title;&#xA;&#xA;  @override&#xA;  _HomePageState createState() =&amp;gt; _HomePageState();&#xA;}&#xA;&#xA;class _HomePageState extends State&amp;lt;HomePage&amp;gt; {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    //Set the fit size (fill in the screen size of the device in the design) &#xA;    //If the design is based on the size of the 360*690(dp)&#xA;    ScreenUtil.init(context, designSize: const Size(360, 690));&#xA;    ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;h4&gt;Pass the dp size of the design draft&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;    ScreenUtil().setWidth(540)  (dart sdk&amp;gt;=2.6 : 540.w) //Adapted to screen width&#xA;    ScreenUtil().setHeight(200) (dart sdk&amp;gt;=2.6 : 200.h) //Adapted to screen height , under normal circumstances, the height still uses x.w&#xA;    ScreenUtil().radius(200)    (dart sdk&amp;gt;=2.6 : 200.r)    //Adapt according to the smaller of width or height&#xA;    ScreenUtil().setSp(24)      (dart sdk&amp;gt;=2.6 : 24.sp) //Adapter font&#xA;    12.sm   //return min(12,12.sp)&#xA;&#xA;    ScreenUtil().pixelRatio       //Device pixel density&#xA;    ScreenUtil().screenWidth   (dart sdk&amp;gt;=2.6 : 1.sw)    //Device width&#xA;    ScreenUtil().screenHeight  (dart sdk&amp;gt;=2.6 : 1.sh)    //Device height&#xA;    ScreenUtil().bottomBarHeight  //Bottom safe zone distance, suitable for buttons with full screen&#xA;    ScreenUtil().statusBarHeight  //Status bar height , Notch will be higher&#xA;    ScreenUtil().textScaleFactor  //System font scaling factor&#xA;&#xA;    ScreenUtil().scaleWidth //The ratio of actual width to UI design&#xA;    ScreenUtil().scaleHeight //The ratio of actual height to UI design&#xA;&#xA;    ScreenUtil().orientation  //Screen orientation&#xA;    0.2.sw  //0.2 times the screen width&#xA;    0.5.sh  //50% of screen height&#xA;    20.setVerticalSpacing  // SizedBox(height: 20 * scaleHeight)&#xA;    20.horizontalSpace  // SizedBox(height: 20 * scaleWidth)&#xA;    const RPadding.all(8)   // Padding.all(8.r) - take advantage of const key word&#xA;    REdgeInsts.all(8)       // EdgeInsets.all(8.r)&#xA;    EdgeInsets.only(left:8,right:8).r // EdgeInsets.only(left:8.r,right:8.r).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Adapt screen size&lt;/h4&gt; &#xA;&lt;p&gt;Pass the dp size of the design draft((The unit is the same as the unit at initialization))：&lt;/p&gt; &#xA;&lt;p&gt;Adapted to screen width: &lt;code&gt;ScreenUtil().setWidth(540)&lt;/code&gt;,&lt;/p&gt; &#xA;&lt;p&gt;Adapted to screen height: &lt;code&gt;ScreenUtil().setHeight(200)&lt;/code&gt;, In general, the height is best to adapt to the width&lt;/p&gt; &#xA;&lt;p&gt;If your dart sdk&amp;gt;=2.6, you can use extension functions:&lt;/p&gt; &#xA;&lt;p&gt;example:&lt;/p&gt; &#xA;&lt;p&gt;instead of :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Container(&#xA;  width: ScreenUtil().setWidth(50),&#xA;  height:ScreenUtil().setHeight(200),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;you can use it like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Container(&#xA;  width: 50.w,&#xA;  height:200.h&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;Note&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;The height can also use setWidth to ensure that it is not deformed(when you want a square)&lt;/p&gt; &#xA;&lt;p&gt;The setHeight method is mainly to adapt to the height, which is used when you want to control the height of a screen on the UI to be the same as the actual display.&lt;/p&gt; &#xA;&lt;p&gt;Generally speaking, 50.w!=50.h.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;//for example:&#xA;&#xA;//If you want to display a rectangle:&#xA;Container(&#xA;  width: 375.w,&#xA;  height: 375.h,&#xA;),&#xA;            &#xA;//If you want to display a square based on width:&#xA;Container(&#xA;  width: 300.w,&#xA;  height: 300.w,&#xA;),&#xA;&#xA;//If you want to display a square based on height:&#xA;Container(&#xA;  width: 300.h,&#xA;  height: 300.h,&#xA;),&#xA;&#xA;//If you want to display a square based on minimum(height, width):&#xA;Container(&#xA;  width: 300.r,&#xA;  height: 300.r,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Adapter font&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;//Incoming font size(The unit is the same as the unit at initialization)&#xA;ScreenUtil().setSp(28) &#xA;28.sp&#xA;&#xA;//for example:&#xA;Column(&#xA;  crossAxisAlignment: CrossAxisAlignment.start,&#xA;  children: &amp;lt;Widget&amp;gt;[&#xA;    Text(&#xA;      &#39;16sp, will not change with the system.&#39;,&#xA;      style: TextStyle(&#xA;        color: Colors.black,&#xA;        fontSize: 16.sp,&#xA;      ),&#xA;      textScaleFactor: 1.0,&#xA;    ),&#xA;    Text(&#xA;      &#39;16sp,if data is not set in MediaQuery,my font size will change with the system.&#39;,&#xA;      style: TextStyle(&#xA;        color: Colors.black,&#xA;        fontSize: 16.sp,&#xA;      ),&#xA;    ),&#xA;  ],&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Setting font does not change with system font size&lt;/h4&gt; &#xA;&lt;p&gt;APP global:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;  debugShowCheckedModeBanner: false,&#xA;  title: &#39;Flutter_ScreenUtil&#39;,&#xA;  theme: ThemeData(&#xA;    primarySwatch: Colors.blue,&#xA;  ),&#xA;  builder: (context, widget) {&#xA;    return MediaQuery(&#xA;      ///Setting font does not change with system font size&#xA;      data: MediaQuery.of(context).copyWith(textScaleFactor: 1.0),&#xA;      child: widget,&#xA;    );&#xA;  },&#xA;  home: HomePage(title: &#39;FlutterScreenUtil Demo&#39;),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specified Text:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Text(&#34;text&#34;, textScaleFactor: 1.0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specified Widget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MediaQuery(&#xA;  // If there is no context available you can wrap [MediaQuery] with [Builder]&#xA;  data: MediaQuery.of(context).copyWith(textScaleFactor: 1.0),&#xA;  child: AnyWidget(),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_screenutil/issues/115&#34;&gt;widget test&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_screenutil/raw/master/example/lib&#34;&gt;example demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use second method run: &lt;code&gt;flutter run --dart-define=method=2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Effect&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OpenFlutter/flutter_screenutil/master/demo_en.png&#34; alt=&#34;effect&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OpenFlutter/flutter_screenutil/master/demo_tablet_en.png&#34; alt=&#34;tablet effect&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter/plugins</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/flutter/plugins</id>
    <link href="https://github.com/flutter/plugins" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Plugins for Flutter maintained by the Flutter team&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter plugins&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/flutter/plugins/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/flutter/plugins.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flutter/plugins/actions/workflows/release.yml&#34;&gt;&lt;img src=&#34;https://github.com/flutter/plugins/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Release Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo is a companion repo to the main &lt;a href=&#34;https://github.com/flutter/flutter&#34;&gt;flutter repo&lt;/a&gt;. It contains the source code for Flutter first-party plugins (i.e., plugins developed by the core Flutter team). Check the &lt;code&gt;packages&lt;/code&gt; directory for all plugins.&lt;/p&gt; &#xA;&lt;p&gt;Flutter plugins enable access to platform-specific APIs. For more information about plugins, and how to use them, see &lt;a href=&#34;https://flutter.dev/platform-plugins/&#34;&gt;https://flutter.dev/platform-plugins/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These plugins are also available on &lt;a href=&#34;https://pub.dev/flutter/packages&#34;&gt;pub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please file any issues, bugs, or feature requests in the &lt;a href=&#34;https://github.com/flutter/flutter/issues/new&#34;&gt;main flutter repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Issues pertaining to this repository are &lt;a href=&#34;https://github.com/flutter/flutter/issues?q=is%3Aopen+is%3Aissue+label%3Aplugin&#34;&gt;labeled &#34;plugin&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute a new plugin to the Flutter ecosystem, please see the documentation for &lt;a href=&#34;https://flutter.dev/developing-packages/&#34;&gt;developing packages&lt;/a&gt; and &lt;a href=&#34;https://flutter.dev/platform-channels/&#34;&gt;platform channels&lt;/a&gt;. You can store your plugin source code in any GitHub repository (the present repo is only intended for plugins developed by the core Flutter team). Once your plugin is ready, you can &lt;a href=&#34;https://flutter.dev/developing-packages/#publish&#34;&gt;publish&lt;/a&gt; it to the &lt;a href=&#34;https://pub.dev/&#34;&gt;pub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to contribute a change to any of the existing plugins in this repo, please review our &lt;a href=&#34;https://github.com/flutter/plugins/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;, and send a &lt;a href=&#34;https://github.com/flutter/plugins/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;These are the available plugins in this repository.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Pub&lt;/th&gt; &#xA;   &lt;th&gt;Points&lt;/th&gt; &#xA;   &lt;th&gt;Popularity&lt;/th&gt; &#xA;   &lt;th&gt;Likes&lt;/th&gt; &#xA;   &lt;th&gt;Issues&lt;/th&gt; &#xA;   &lt;th&gt;Pull requests&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/camera/&#34;&gt;camera&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/camera&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/camera.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/camera/score&#34;&gt;&lt;img src=&#34;https://badges.bar/camera/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/camera/score&#34;&gt;&lt;img src=&#34;https://badges.bar/camera/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/camera/score&#34;&gt;&lt;img src=&#34;https://badges.bar/camera/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20camera&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20camera?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20camera&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20camera?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/espresso/&#34;&gt;espresso&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/espresso&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/espresso.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/espresso/score&#34;&gt;&lt;img src=&#34;https://badges.bar/espresso/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/espresso/score&#34;&gt;&lt;img src=&#34;https://badges.bar/espresso/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/espresso/score&#34;&gt;&lt;img src=&#34;https://badges.bar/espresso/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20espresso&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20espresso?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20espresso&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20espresso?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/file_selector/&#34;&gt;file_selector&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/file_selector&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/file_selector.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/file_selector/score&#34;&gt;&lt;img src=&#34;https://badges.bar/file_selector/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/file_selector/score&#34;&gt;&lt;img src=&#34;https://badges.bar/file_selector/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/file_selector/score&#34;&gt;&lt;img src=&#34;https://badges.bar/file_selector/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20file_selector&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20file_selector?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20file_selector&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20file_selector?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/flutter_plugin_android_lifecycle/&#34;&gt;flutter_plugin_android_lifecycle&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_plugin_android_lifecycle&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_plugin_android_lifecycle.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_plugin_android_lifecycle/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_plugin_android_lifecycle/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_plugin_android_lifecycle/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_plugin_android_lifecycle/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_plugin_android_lifecycle/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_plugin_android_lifecycle/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20flutter_plugin_android_lifecycle&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20flutter_plugin_android_lifecycle?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20flutter_plugin_android_lifecycle&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20flutter_plugin_android_lifecycle?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/google_maps_flutter&#34;&gt;google_maps_flutter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_maps_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_maps_flutter.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_maps_flutter/score&#34;&gt;&lt;img src=&#34;https://badges.bar/google_maps_flutter/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_maps_flutter/score&#34;&gt;&lt;img src=&#34;https://badges.bar/google_maps_flutter/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_maps_flutter/score&#34;&gt;&lt;img src=&#34;https://badges.bar/google_maps_flutter/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20maps&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20maps?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20google_maps_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20google_maps_flutter?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/google_sign_in/&#34;&gt;google_sign_in&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_sign_in&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_sign_in.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_sign_in/score&#34;&gt;&lt;img src=&#34;https://badges.bar/google_sign_in/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_sign_in/score&#34;&gt;&lt;img src=&#34;https://badges.bar/google_sign_in/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_sign_in/score&#34;&gt;&lt;img src=&#34;https://badges.bar/google_sign_in/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20google_sign_in&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20google_sign_in?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20google_sign_in&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20google_sign_in?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/image_picker/&#34;&gt;image_picker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/image_picker&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/image_picker.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/image_picker/score&#34;&gt;&lt;img src=&#34;https://badges.bar/image_picker/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/image_picker/score&#34;&gt;&lt;img src=&#34;https://badges.bar/image_picker/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/image_picker/score&#34;&gt;&lt;img src=&#34;https://badges.bar/image_picker/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20image_picker&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20image_picker?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20image_picker&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20image_picker?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/in_app_purchase/&#34;&gt;in_app_purchase&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/in_app_purchase&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/in_app_purchase.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/in_app_purchase/score&#34;&gt;&lt;img src=&#34;https://badges.bar/in_app_purchase/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/in_app_purchase/score&#34;&gt;&lt;img src=&#34;https://badges.bar/in_app_purchase/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/in_app_purchase/score&#34;&gt;&lt;img src=&#34;https://badges.bar/in_app_purchase/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20in_app_purchase&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20in_app_purchase?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20in_app_purchase&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20in_app_purchase?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/ios_platform_images/&#34;&gt;ios_platform_images&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/ios_platform_images&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/ios_platform_images.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/ios_platform_images/score&#34;&gt;&lt;img src=&#34;https://badges.bar/ios_platform_images/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/ios_platform_images/score&#34;&gt;&lt;img src=&#34;https://badges.bar/ios_platform_images/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/ios_platform_images/score&#34;&gt;&lt;img src=&#34;https://badges.bar/ios_platform_images/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20ios_platform_images&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20ios_platform_images?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20ios_platform_images&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20ios_platform_images?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/local_auth/&#34;&gt;local_auth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/local_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/local_auth.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/local_auth/score&#34;&gt;&lt;img src=&#34;https://badges.bar/local_auth/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/local_auth/score&#34;&gt;&lt;img src=&#34;https://badges.bar/local_auth/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/local_auth/score&#34;&gt;&lt;img src=&#34;https://badges.bar/local_auth/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20local_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20local_auth?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20local_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20local_auth?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/path_provider/&#34;&gt;path_provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/path_provider&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/path_provider.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/path_provider/score&#34;&gt;&lt;img src=&#34;https://badges.bar/path_provider/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/path_provider/score&#34;&gt;&lt;img src=&#34;https://badges.bar/path_provider/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/path_provider/score&#34;&gt;&lt;img src=&#34;https://badges.bar/path_provider/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20path_provider&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20path_provider?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20path_provider&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20path_provider?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/plugin_platform_interface/&#34;&gt;plugin_platform_interface&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/plugin_platform_interface&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/plugin_platform_interface.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/plugin_platform_interface/score&#34;&gt;&lt;img src=&#34;https://badges.bar/plugin_platform_interface/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/plugin_platform_interface/score&#34;&gt;&lt;img src=&#34;https://badges.bar/plugin_platform_interface/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/plugin_platform_interface/score&#34;&gt;&lt;img src=&#34;https://badges.bar/plugin_platform_interface/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20plugin_platform_interface&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20plugin_platform_interface?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20plugin_platform_interface&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20plugin_platform_interface?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/quick_actions/&#34;&gt;quick_actions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/quick_actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/quick_actions.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/quick_actions/score&#34;&gt;&lt;img src=&#34;https://badges.bar/quick_actions/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/quick_actions/score&#34;&gt;&lt;img src=&#34;https://badges.bar/quick_actions/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/quick_actions/score&#34;&gt;&lt;img src=&#34;https://badges.bar/quick_actions/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20quick_actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20quick_actions?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20quick_actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20quick_actions?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/shared_preferences/&#34;&gt;shared_preferences&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/shared_preferences&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/shared_preferences.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/shared_preferences/score&#34;&gt;&lt;img src=&#34;https://badges.bar/shared_preferences/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/shared_preferences/score&#34;&gt;&lt;img src=&#34;https://badges.bar/shared_preferences/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/shared_preferences/score&#34;&gt;&lt;img src=&#34;https://badges.bar/shared_preferences/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20shared_preferences&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20shared_preferences?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20shared_preferences&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20shared_preferences?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/url_launcher/&#34;&gt;url_launcher&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/url_launcher&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/url_launcher.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/url_launcher/score&#34;&gt;&lt;img src=&#34;https://badges.bar/url_launcher/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/url_launcher/score&#34;&gt;&lt;img src=&#34;https://badges.bar/url_launcher/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/url_launcher/score&#34;&gt;&lt;img src=&#34;https://badges.bar/url_launcher/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20url_launcher&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20url_launcher?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20url_launcher&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20url_launcher?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/video_player/&#34;&gt;video_player&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/video_player&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/video_player.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/video_player/score&#34;&gt;&lt;img src=&#34;https://badges.bar/video_player/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/video_player/score&#34;&gt;&lt;img src=&#34;https://badges.bar/video_player/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/video_player/score&#34;&gt;&lt;img src=&#34;https://badges.bar/video_player/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20video_player&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20video_player?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20video_player&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20video_player?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/webview_flutter/&#34;&gt;webview_flutter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/webview_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/webview_flutter.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/webview_flutter/score&#34;&gt;&lt;img src=&#34;https://badges.bar/webview_flutter/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/webview_flutter/score&#34;&gt;&lt;img src=&#34;https://badges.bar/webview_flutter/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/webview_flutter/score&#34;&gt;&lt;img src=&#34;https://badges.bar/webview_flutter/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20webview&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20webview?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20webview_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20webview_flutter?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>flutter/gallery</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/flutter/gallery</id>
    <link href="https://github.com/flutter/gallery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter Gallery is a resource to help developers evaluate and use Flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Gallery&lt;/h1&gt; &#xA;&lt;p&gt;Flutter Gallery is a resource to help developers evaluate and use Flutter. It is a collection of Material Design &amp;amp; Cupertino widgets, behaviors, and vignettes implemented with Flutter. We often get asked how one can see Flutter in action, and this gallery demonstrates what Flutter provides and how it behaves in the wild.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6655696/73928238-0d7fcc80-48d3-11ea-8a7e-ea7dc5d6e713.png&#34; alt=&#34;Flutter Gallery&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Showcase for &lt;code&gt;material&lt;/code&gt;, &lt;code&gt;cupertino&lt;/code&gt;, and other widgets&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/gallery/main/lib/layout/adaptive.dart&#34;&gt;Adpative layout&lt;/a&gt; for mobile and desktop&lt;/li&gt; &#xA; &lt;li&gt;State restoration support&lt;/li&gt; &#xA; &lt;li&gt;Settings to text scaling, text direction, locale, theme, and more...&lt;/li&gt; &#xA; &lt;li&gt;Demo for &lt;code&gt;animations&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Foldable support and demo for &lt;code&gt;dual_screen&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Deferred loading&lt;/li&gt; &#xA; &lt;li&gt;CI/CD&lt;/li&gt; &#xA; &lt;li&gt;...and much more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;Flutter Gallery has been built to support multiple platforms. These include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android (&lt;a href=&#34;https://play.google.com/store/apps/details?id=io.flutter.demo.gallery&#34;&gt;Google Play Store&lt;/a&gt;, &lt;a href=&#34;https://github.com/flutter/gallery/releases/latest&#34;&gt;.apk&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;iOS (locally)&lt;/li&gt; &#xA; &lt;li&gt;web (&lt;a href=&#34;https://gallery.flutter.dev/&#34;&gt;gallery.flutter.dev&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;macOS (&lt;a href=&#34;https://github.com/flutter/gallery/releases/latest&#34;&gt;.zip&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Linux (&lt;a href=&#34;https://github.com/flutter/gallery/releases/latest&#34;&gt;.tar.gz&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Windows (&lt;a href=&#34;https://github.com/flutter/gallery/releases/latest&#34;&gt;.zip&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;One can run the gallery locally for any of these platforms. For desktop platforms, please see the &lt;a href=&#34;https://docs.flutter.dev/desktop&#34;&gt;Flutter docs&lt;/a&gt; for the latest requirements.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd gallery/&#xA;flutter pub get&#xA;flutter run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Troubleshooting&lt;/summary&gt; &#xA; &lt;h3&gt;Flutter &lt;code&gt;master&lt;/code&gt; channel&lt;/h3&gt; &#xA; &lt;p&gt;The Flutter Gallery targets Flutter&#39;s &lt;code&gt;master&lt;/code&gt; channel. As such, it can take advantage of new SDK features that haven&#39;t landed in the stable channel.&lt;/p&gt; &#xA; &lt;p&gt;If you&#39;d like to run the Flutter Gallery, you may have to switch to the &lt;code&gt;master&lt;/code&gt; channel first:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter channel master&#xA;flutter upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;When you&#39;re done, use this command to return to the safety of the &lt;code&gt;stable&lt;/code&gt; channel:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter channel stable&#xA;flutter upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Generating localizations&lt;/summary&gt; &#xA; &lt;p&gt;If this is the first time building the Flutter Gallery, the localized code will not be present in the project directory. However, after running the application for the first time, a synthetic package will be generated containing the app&#39;s localizations through importing &lt;code&gt;package:flutter_gen/gen_l10n/&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter pub get&#xA;flutter pub run grinder l10n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See separate &lt;a href=&#34;https://raw.githubusercontent.com/flutter/gallery/main/lib/l10n/README.md&#34;&gt;README&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Generating highlighted code segments&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter pub get&#xA;flutter pub run grinder update-code-segments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See separate &lt;a href=&#34;https://raw.githubusercontent.com/flutter/gallery/main/tool/codeviewer_cli/README.md&#34;&gt;README&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Including a new splash animation&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Convert your animation to a &lt;code&gt;.gif&lt;/code&gt; file. Ideally, use a background color of &lt;code&gt;0xFF030303&lt;/code&gt; to ensure the animation blends into the background of the app.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Add your new &lt;code&gt;.gif&lt;/code&gt; file to the assets directory under &lt;code&gt;assets/splash_effects&lt;/code&gt;. Ensure the name follows the format &lt;code&gt;splash_effect_$num.gif&lt;/code&gt;. The number should be the next number after the current largest number in the repository.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Update the map &lt;code&gt;_effectDurations&lt;/code&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/flutter/gallery/main/lib/pages/splash.dart&#34;&gt;splash.dart&lt;/a&gt; to include the number of the new &lt;code&gt;.gif&lt;/code&gt; as well as its estimated duration. The duration is used to determine how long to display the splash animation at launch.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Releasing&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;for flutter-hackers members&lt;/summary&gt; &#xA; &lt;p&gt;The process is largely automated and easy to set in motion.&lt;/p&gt; &#xA; &lt;p&gt;First things first, bump the &lt;code&gt;pubspec.yaml&lt;/code&gt; version number. This can be in a PR making a change or a separate PR. Use &lt;a href=&#34;https://semver.org/&#34;&gt;semantic versioning&lt;/a&gt; to determine which part to increment. The version number after the &lt;code&gt;+&lt;/code&gt; should also be incremented. For example &lt;code&gt;1.2.3+010203&lt;/code&gt; with a patch should become &lt;code&gt;1.2.4+010204&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Then, use the following workflows. It is strongly recommended to use the staging/beta environments when available, before deploying to production.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/gallery/actions/workflows/release_deploy_play_store.yml&#34;&gt;Deploy to Play Store&lt;/a&gt;: Uses Fastlane to create a &lt;a href=&#34;https://play.google.com/console/u/0/developers/7661132837216938445/app/4974617875198505129/tracks/open-testing&#34;&gt;beta&lt;/a&gt; (freely available on the &lt;a href=&#34;https://play.google.com/apps/testing/io.flutter.demo.gallery&#34;&gt;Play Store&lt;/a&gt;), promote an existing beta to production, or publish straight to &lt;a href=&#34;https://play.google.com/console/u/0/developers/7661132837216938445/app/4974617875198505129/tracks/production&#34;&gt;production&lt;/a&gt; (&lt;a href=&#34;https://play.google.com/store/apps/details?id=io.flutter.demo.gallery&#34;&gt;Play Store&lt;/a&gt;). &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Once an .aab is released with a particular version number, it can&#39;t be replaced. The version number must be incremented again.&lt;/p&gt; &#xA;   &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/gallery/actions/workflows/release_deploy_web.yml&#34;&gt;Deploy to web&lt;/a&gt;: Deploys a web build to the Firebase-hosted &lt;a href=&#34;https://gallery-flutter-staging.web.app&#34;&gt;staging&lt;/a&gt; or &lt;a href=&#34;https://gallery.flutter.dev&#34;&gt;production&lt;/a&gt; site.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/gallery/actions/workflows/release_draft_github_release.yml&#34;&gt;Draft GitHub release&lt;/a&gt;: Drafts a GitHub release, including automatically generated release notes and packaged builds for Android, macOS, Linux, and Windows. &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The release draft is private until published. Upon being published, the specified version tag will be created.&lt;/p&gt; &#xA;   &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;For posterity, information about doing these things locally is available at &lt;a href=&#34;http://go/flutter-gallery-manual-deployment&#34;&gt;go/flutter-gallery-manual-deployment&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;The gallery has its own set of unit, golden, and integration tests.&lt;/p&gt; &#xA;&lt;p&gt;In addition, Flutter itself uses the gallery in tests. To enable breaking changes, the gallery version is pinned in two places:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter analyze&lt;/code&gt;: &lt;a href=&#34;https://github.com/flutter/tests/raw/master/registry/flutter_gallery.test&#34;&gt;https://github.com/flutter/tests/blob/master/registry/flutter_gallery.test&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DeviceLab tests: &lt;a href=&#34;https://github.com/flutter/flutter/raw/master/dev/devicelab/lib/versions/gallery.dart&#34;&gt;https://github.com/flutter/flutter/blob/master/dev/devicelab/lib/versions/gallery.dart&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>singerdmx/flutter-quill</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/singerdmx/flutter-quill</id>
    <link href="https://github.com/singerdmx/flutter-quill" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rich text editor for Flutter&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/10923085/119221946-2de89000-baf2-11eb-8285-68168a78c658.png&#34; width=&#34;600px&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;A rich text editor for Flutter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/singerdmx/flutter-quill/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/singerdmx/flutter-quill.svg?style=for-the-badge&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/singerdmx/flutter-quill/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=for-the-badge&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/singerdmx/flutter-quill/watchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/singerdmx/flutter-quill.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=ffffff&#34; alt=&#34;Watch on GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/singerdmx/flutter-quill/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/singerdmx/flutter-quill.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=ffffff&#34; alt=&#34;Star on GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/singerdmx/flutter-quill/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/singerdmx/flutter-quill.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=ffffff&#34; alt=&#34;Watch on GitHub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;FlutterQuill is a rich text editor and a &lt;a href=&#34;https://quilljs.com/docs/formats&#34;&gt;Quill&lt;/a&gt; component for &lt;a href=&#34;https://github.com/flutter/flutter&#34;&gt;Flutter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This library is a WYSIWYG editor built for the modern mobile platform, with web compatibility under development. Check out our &lt;a href=&#34;https://youtube.com/playlist?list=PLbhaS_83B97vONkOAWGJrSXWX58et9zZ2&#34;&gt;Youtube Playlist&lt;/a&gt; to take a detailed walkthrough of the code base. You can join our &lt;a href=&#34;https://join.slack.com/t/bulletjournal1024/shared_invite/zt-fys7t9hi-ITVU5PGDen1rNRyCjdcQ2g&#34;&gt;Slack Group&lt;/a&gt; for discussion.&lt;/p&gt; &#xA;&lt;p&gt;Demo App: &lt;a href=&#34;https://bulletjournal.us/home/index.html&#34;&gt;https://bulletjournal.us/home/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pub: &lt;a href=&#34;https://pub.dev/packages/flutter_quill&#34;&gt;https://pub.dev/packages/flutter_quill&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;code&gt;example&lt;/code&gt; directory for a minimal example of how to use FlutterQuill. You typically just need to instantiate a controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;QuillController _controller = QuillController.basic();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then embed the toolbar and the editor, within your app. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Column(&#xA;  children: [&#xA;    QuillToolbar.basic(controller: _controller),&#xA;    Expanded(&#xA;      child: Container(&#xA;        child: QuillEditor.basic(&#xA;          controller: _controller,&#xA;          readOnly: false, // true for view only mode&#xA;        ),&#xA;      ),&#xA;    )&#xA;  ],&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://github.com/singerdmx/flutter-quill/raw/master/example/lib/pages/home_page.dart&#34;&gt;Sample Page&lt;/a&gt; for advanced usage.&lt;/p&gt; &#xA;&lt;h2&gt;Input / Output&lt;/h2&gt; &#xA;&lt;p&gt;This library uses &lt;a href=&#34;https://quilljs.com/docs/formats&#34;&gt;Quill&lt;/a&gt; as an internal data format.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;_controller.document.toDelta()&lt;/code&gt; to extract the deltas.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;_controller.document.toPlainText()&lt;/code&gt; to extract plain text.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;FlutterQuill provides some JSON serialisation support, so that you can save and open documents. To save a document as JSON, do something like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;var json = jsonEncode(_controller.document.toDelta().toJson());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then write this to storage.&lt;/p&gt; &#xA;&lt;p&gt;To open a FlutterQuill editor with an existing JSON representation that you&#39;ve previously stored, you can do something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;var myJSON = jsonDecode(incomingJSONText);&#xA;_controller = QuillController(&#xA;          document: Document.fromJson(myJSON),&#xA;          selection: TextSelection.collapsed(offset: 0));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;QuillToolbar&lt;/code&gt; class lets you customise which formatting options are available. &lt;a href=&#34;https://github.com/singerdmx/flutter-quill/raw/master/example/lib/pages/home_page.dart&#34;&gt;Sample Page&lt;/a&gt; provides sample code for advanced usage and configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Font Size&lt;/h3&gt; &#xA;&lt;p&gt;Within the editor toolbar, a drop-down with font-sizing capabilities is available. This can be enabled or disabled with &lt;code&gt;showFontSize&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When enabled, the default font-size values can be modified via &lt;em&gt;optional&lt;/em&gt; &lt;code&gt;fontSizeValues&lt;/code&gt;. &lt;code&gt;fontSizeValues&lt;/code&gt; accepts a &lt;code&gt;Map&amp;lt;String, String&amp;gt;&lt;/code&gt; consisting of a &lt;code&gt;String&lt;/code&gt; title for the font size and a &lt;code&gt;String&lt;/code&gt; value for the font size. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;fontSizeValues: const {&#39;Small&#39;: &#39;8&#39;, &#39;Medium&#39;: &#39;24.5&#39;, &#39;Large&#39;: &#39;46&#39;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Font size can be cleared with a value of &lt;code&gt;0&lt;/code&gt;, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;fontSizeValues: const {&#39;Small&#39;: &#39;8&#39;, &#39;Medium&#39;: &#39;24.5&#39;, &#39;Large&#39;: &#39;46&#39;, &#39;Clear&#39;: &#39;0&#39;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom Icons&lt;/h3&gt; &#xA;&lt;p&gt;You may add custom icons to the &lt;em&gt;end&lt;/em&gt; of the toolbar, via the &lt;code&gt;customIcons&lt;/code&gt; option, which is a &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;QuillCustomIcon&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To add an Icon, we should use a new QuillCustomIcon class&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    QuillCustomIcon(&#xA;        icon:Icons.ac_unit,&#xA;        onTap: () {&#xA;          debugPrint(&#39;snowflake&#39;);&#xA;        }&#xA;    ),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each &lt;code&gt;QuillCustomIcon&lt;/code&gt; is used as part of the &lt;code&gt;customIcons&lt;/code&gt; option as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;QuillToolbar.basic(&#xA;   (...),&#xA;    customIcons: [&#xA;        QuillCustomIcon(&#xA;            icon:Icons.ac_unit,&#xA;            onTap: () {&#xA;              debugPrint(&#39;snowflake1&#39;);&#xA;            }&#xA;        ),&#xA;&#xA;        QuillCustomIcon(&#xA;            icon:Icons.ac_unit,&#xA;            onTap: () {&#xA;              debugPrint(&#39;snowflake2&#39;);&#xA;            }&#xA;        ),&#xA;&#xA;        QuillCustomIcon(&#xA;            icon:Icons.ac_unit,&#xA;            onTap: () {&#xA;              debugPrint(&#39;snowflake3&#39;);&#xA;            }&#xA;        ),&#xA;    ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Web&lt;/h2&gt; &#xA;&lt;p&gt;For web development, use &lt;code&gt;flutter config --enable-web&lt;/code&gt; for flutter or use &lt;a href=&#34;https://github.com/zenoamaro/react-quill&#34;&gt;ReactQuill&lt;/a&gt; for React.&lt;/p&gt; &#xA;&lt;p&gt;It is required to provide &lt;code&gt;EmbedBuilder&lt;/code&gt;, e.g. &lt;a href=&#34;https://github.com/singerdmx/flutter-quill/raw/master/example/lib/universal_ui/universal_ui.dart#L28&#34;&gt;defaultEmbedBuilderWeb&lt;/a&gt;. Also it is required to provide &lt;code&gt;webImagePickImpl&lt;/code&gt;, e.g. &lt;a href=&#34;https://github.com/singerdmx/flutter-quill/raw/master/example/lib/pages/home_page.dart#L218&#34;&gt;Sample Page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Desktop&lt;/h2&gt; &#xA;&lt;p&gt;It is required to provide &lt;code&gt;filePickImpl&lt;/code&gt; for toolbar image button, e.g. &lt;a href=&#34;https://github.com/singerdmx/flutter-quill/raw/master/example/lib/pages/home_page.dart#L198&#34;&gt;Sample Page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Custom Size Image for Mobile&lt;/h2&gt; &#xA;&lt;p&gt;Define &lt;code&gt;mobileWidth&lt;/code&gt;, &lt;code&gt;mobileHeight&lt;/code&gt;, &lt;code&gt;mobileMargin&lt;/code&gt;, &lt;code&gt;mobileAlignment&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;      &#34;insert&#34;: {&#xA;         &#34;image&#34;: &#34;https://user-images.githubusercontent.com/122956/72955931-ccc07900-3d52-11ea-89b1-d468a6e2aa2b.png&#34;&#xA;      },&#xA;      &#34;attributes&#34;:{&#xA;         &#34;style&#34;:&#34;mobileWidth: 50; mobileHeight: 50; mobileMargin: 10; mobileAlignment: topLeft&#34;&#xA;      }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Translation&lt;/h2&gt; &#xA;&lt;p&gt;The package offers translations for the quill toolbar and editor, it will follow the system locale unless you set your own locale with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;QuillToolbar(locale: Locale(&#39;fr&#39;), ...)&#xA;QuillEditor(locale: Locale(&#39;fr&#39;), ...)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Currently, translations are available for these 19 locales:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;en&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;ar&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;de&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;da&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;fr&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;zh&#39;, &#39;CN&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;ko&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;ru&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;es&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;tr&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;uk&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;ur&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;pt&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;pl&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;vi&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;id&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;no&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;fa&#39;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Locale(&#39;hi&#39;)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributing to translations&lt;/h3&gt; &#xA;&lt;p&gt;The translation file is located at &lt;a href=&#34;https://raw.githubusercontent.com/singerdmx/flutter-quill/master/lib/src/translations/toolbar.i18n.dart&#34;&gt;lib/src/translations/toolbar.i18n.dart&lt;/a&gt;. Feel free to contribute your own translations, just copy the English translations map and replace the values with your translations. Then open a pull request so everyone can benefit from your translations!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img width=&#34;400&#34; alt=&#34;1&#34; src=&#34;https://user-images.githubusercontent.com/122956/103142422-9bb19c80-46b7-11eb-83e4-dd0538a9236e.png&#34;&gt; &lt;img width=&#34;400&#34; alt=&#34;1&#34; src=&#34;https://user-images.githubusercontent.com/122956/103142455-0531ab00-46b8-11eb-89f8-26a77de9227f.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img width=&#34;400&#34; alt=&#34;1&#34; src=&#34;https://user-images.githubusercontent.com/122956/102963021-f28f5a00-449c-11eb-8f5f-6e9dd60844c4.png&#34;&gt; &lt;img width=&#34;400&#34; alt=&#34;1&#34; src=&#34;https://user-images.githubusercontent.com/122956/102977404-c9c88e00-44b7-11eb-9423-b68f3b30b0e0.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://bulletjournal.us/home/index.html&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/122956/72955931-ccc07900-3d52-11ea-89b1-d468a6e2aa2b.png&#34; width=&#34;150px&#34; height=&#34;150px&#34;&gt;&lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>firebase/flutterfire</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/firebase/flutterfire</id>
    <link href="https://github.com/firebase/flutterfire" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥 A collection of Firebase plugins for Flutter apps.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://firebase.google.com/docs/flutter&#34;&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/firebase/flutterfire/master/.github/images/flutterfire_300x.png&#34;&gt;&lt;br&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;FlutterFire&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://twitter.com/flutterfiredev&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/flutterfiredev.svg?colorA=1da1f2&amp;amp;colorB=&amp;amp;label=Follow%20on%20Twitter&amp;amp;style=flat-square&#34; alt=&#34;Follow on Twitter&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/invertase/melos&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/maintained%20with-melos-f700ff.svg?style=flat-square&#34; alt=&#34;Maintained with Melos&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/flutterfire/master/CHANGELOG.md&#34;&gt;[Changelog]&lt;/a&gt; • &lt;a href=&#34;https://pub.dev/publishers/firebase.google.com/packages&#34;&gt;[Packages]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;FlutterFire is a set of &lt;a href=&#34;https://flutter.io/platform-plugins/&#34;&gt;Flutter plugins&lt;/a&gt; that enable Flutter apps to use &lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt; services. You can follow an example that shows how to use these plugins in the &lt;a href=&#34;https://firebase.google.com/codelabs/firebase-get-to-know-flutter&#34;&gt;Firebase for Flutter&lt;/a&gt; codelab.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt; is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. Flutter is used by developers and organizations around the world, and is free and open source.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/flutter/setup&#34;&gt;Add Firebase to your Flutter app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/flutter/setup#available-plugins&#34;&gt;Available plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/flutterfire/master/packages/flutterfire_ui/README.md&#34;&gt;FlutterFire UI&lt;/a&gt; (beta)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/flutterfire/master/packages/cloud_firestore_odm/README.md&#34;&gt;Firestore ODM&lt;/a&gt; (alpha)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please file FlutterFire specific issues, bugs, or feature requests in our &lt;a href=&#34;https://github.com/FirebaseExtended/flutterfire/issues/new/choose&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Plugin issues that are not specific to FlutterFire can be filed in the &lt;a href=&#34;https://github.com/flutter/flutter/issues/new&#34;&gt;Flutter issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note about contributing to Docs&lt;/strong&gt;: We&#39;re in the process of updating documentation for the Firebase SDK for Flutter. Please hold your PRs for docs until May 5th, 2022.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to contribute a change to any of the existing plugins in this repo, please review our &lt;a href=&#34;https://github.com/FirebaseExtended/flutterfire/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; and open a &lt;a href=&#34;https://github.com/FirebaseExtended/flutterfire/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Status-Experimental-blue&#34; alt=&#34;Status: Experimental&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is maintained by Googlers but is not a supported Firebase product. Issues here are answered by maintainers and other community members on GitHub on a best-effort basis.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Lyokone/flutterlocation</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/Lyokone/flutterlocation</id>
    <link href="https://github.com/Lyokone/flutterlocation" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter plugin to easily handle realtime location in iOS and Android. Provides settings for optimizing performance or battery.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Location Plugin&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/location&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/location.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/cirrus/github/Lyokone/flutterlocation?task=test&#34; alt=&#34;Cirrus CI - Task and Script Build Status&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/Lyokone/flutterlocation&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Lyokone/flutterlocation/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This plugin for &lt;a href=&#34;https://flutter.io&#34;&gt;Flutter&lt;/a&gt; handles getting a location on Android and iOS. It also provides callbacks when the location is changed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Lyokone/flutterlocation/pull/730&#34;&gt;Version 5&lt;/a&gt; of the plugin is under construction, so new features will not be merged in version 4 for the time being.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=65qbtJMltVk&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;http://img.youtube.com/vi/65qbtJMltVk/0.jpg&#34; alt=&#34;Youtube Video&#34; width=&#34;480&amp;quot;&#34; height=&#34;360&#34; border=&#34;10&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lyokone.github.io/flutterlocation&#34;&gt;Web demo&lt;/a&gt; (more features available on Android/iOS)&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Add this to your package&#39;s &lt;code&gt;pubspec.yaml&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  location: ^4.4.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;With Flutter 1.12, all the dependencies are automatically added to your project. If your project was created before Flutter 1.12, you might need to follow &lt;a href=&#34;https://github.com/flutter/flutter/wiki/Upgrading-pre-1.12-Android-projects&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use location background mode on Android, you have to use the enableBackgroundMode({bool enable}) API before accessing location in the background and adding necessary permissions. You should place the required permissions in your applications &#xA; &lt;your-app&gt;&#xA;  /android/app/src/main/AndroidManifest.xml:&#xA; &lt;/your-app&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    &amp;lt;uses-permission android:name=&#34;android.permission.FOREGROUND_SERVICE&#34; /&amp;gt;&#xA;    &amp;lt;uses-permission android:name=&#34;android.permission.ACCESS_BACKGROUND_LOCATION&#34;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Remember that the user has to accept the location permission to &lt;code&gt;always allow&lt;/code&gt; to use the background location. The Android 11 option to &lt;code&gt;always allow&lt;/code&gt; is not presented on the location permission dialog prompt. The user has to enable it manually from the app settings. This should be explained to the user on a separate UI that redirects the user to the app&#39;s location settings managed by the operating system. More on that topic can be found on &lt;a href=&#34;https://developer.android.com/training/location/permissions#request-background-location&#34;&gt;Android developer&lt;/a&gt; pages.&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;p&gt;And to use it in iOS, you have to add this permission in Info.plist :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;// This is probably the only one you need. Background location is supported&#xA;// by this -- the caveat is that a blue badge is shown in the status bar&#xA;// when the app is using location service while in the background.&#xA;NSLocationWhenInUseUsageDescription&#xA;&#xA;// Deprecated, use NSLocationAlwaysAndWhenInUseUsageDescription instead.&#xA;NSLocationAlwaysUsageDescription&#xA;&#xA;// Use this very carefully. This key is required only if your iOS app&#xA;// uses APIs that access the user’s location information at all times,&#xA;// even if the app isn&#39;t running.&#xA;NSLocationAlwaysAndWhenInUseUsageDescription&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To receive location when application is in background, to Info.plist you have to add property list key :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;UIBackgroundModes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;with string value:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;location&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;p&gt;Nothing to do, the plugin works directly out of box.&lt;/p&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;Ensure that the application is properly &#34;sandboxed&#34; and that the location is enabled. You can do this in Xcode with the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In the project navigator, click on your application&#39;s target. This should bring up a view with tabs such as &#34;General&#34;, &#34;Capabilities&#34;, &#34;Resource Tags&#34;, etc.&lt;/li&gt; &#xA; &lt;li&gt;Click on the &#34;Capabilities&#34; tab. This will give you a list of items such as &#34;App Groups&#34;, &#34;App Sandbox&#34;, and so on. Each item will have an &#34;On/Off&#34; button.&lt;/li&gt; &#xA; &lt;li&gt;Turn on the &#34;App Sandbox&#34; item and press the &#34;&amp;gt;&#34; button on the left to show the sandbox stuff.&lt;/li&gt; &#xA; &lt;li&gt;In the &#34;App Data&#34; section, select &#34;Location&#34;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Add this permission in Info.plist :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;NSLocationWhenInUseUsageDescription&#xA;NSLocationAlwaysUsageDescription&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Then you just have to import the package with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:location/location.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to request location, you should always check Location Service status and Permission status manually&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Location location = new Location();&#xA;&#xA;bool _serviceEnabled;&#xA;PermissionStatus _permissionGranted;&#xA;LocationData _locationData;&#xA;&#xA;_serviceEnabled = await location.serviceEnabled();&#xA;if (!_serviceEnabled) {&#xA;  _serviceEnabled = await location.requestService();&#xA;  if (!_serviceEnabled) {&#xA;    return;&#xA;  }&#xA;}&#xA;&#xA;_permissionGranted = await location.hasPermission();&#xA;if (_permissionGranted == PermissionStatus.denied) {&#xA;  _permissionGranted = await location.requestPermission();&#xA;  if (_permissionGranted != PermissionStatus.granted) {&#xA;    return;&#xA;  }&#xA;}&#xA;&#xA;_locationData = await location.getLocation();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also get continuous callbacks when your position is changing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;location.onLocationChanged.listen((LocationData currentLocation) {&#xA;  // Use current location&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To receive location when application is in background you have to enable it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;location.enableBackgroundMode(enable: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be sure to check the example project to get other code samples.&lt;/p&gt; &#xA;&lt;p&gt;On Android, a foreground notification is displayed with information that location service is running in the background.&lt;/p&gt; &#xA;&lt;p&gt;On iOS, while the app is in the background and gets the location, the blue system bar notifies users about updates. Tapping on this bar moves the User back to the app.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Lyokone/flutterlocation/master/location/src/background_location_android.png&#34; alt=&#34;Androig background location&#34; width=&#34;343&#34; height=&#34;686&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Lyokone/flutterlocation/master/location/src/background_location_ios.png&#34; alt=&#34;iOS background location&#34; width=&#34;386&#34; height=&#34;686&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Public Methods Summary&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Return&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Future&amp;lt;PermissionStatus&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;requestPermission()&lt;/strong&gt; &lt;br&gt;Request the Location permission. Return a PermissionStatus to know if the permission has been granted.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Future&amp;lt;PermissionStatus&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;hasPermission()&lt;/strong&gt; &lt;br&gt;Return a PermissionStatus to know the state of the location permission.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Future&amp;lt;bool&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;serviceEnabled()&lt;/strong&gt; &lt;br&gt;Return a boolean to know if the Location Service is enabled or if the user manually deactivated it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Future&amp;lt;bool&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;requestService()&lt;/strong&gt; &lt;br&gt;Show an alert dialog to request the user to activate the Location Service. On iOS, will only display an alert due to Apple Guidelines, the user having to manually go to Settings. Return a boolean to know if the Location Service has been activated (always &lt;code&gt;false&lt;/code&gt; on iOS).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Future&amp;lt;bool&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;changeSettings(LocationAccuracy accuracy = LocationAccuracy.HIGH, int interval = 1000, double distanceFilter = 0)&lt;/strong&gt; &lt;br&gt;Will change the settings of futur requests. &lt;code&gt;accuracy&lt;/code&gt;will describe the accuracy of the request (see the LocationAccuracy object). &lt;code&gt;interval&lt;/code&gt; will set the desired interval for active location updates, in milliseconds (only affects Android). &lt;code&gt;distanceFilter&lt;/code&gt; set the minimum displacement between location updates in meters.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Future&amp;lt;LocationData&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;getLocation()&lt;/strong&gt; &lt;br&gt;Allow to get a one time position of the user. It will try to request permission if not granted yet and will throw a &lt;code&gt;PERMISSION_DENIED&lt;/code&gt; error code if permission still not granted.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Stream&amp;lt;LocationData&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;onLocationChanged&lt;/strong&gt; &lt;br&gt;Get the stream of the user&#39;s location. It will try to request permission if not granted yet and will throw a &lt;code&gt;PERMISSION_DENIED&lt;/code&gt; error code if permission still not granted.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Future&amp;lt;bool&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;enableBackgroundMode({bool enable})&lt;/strong&gt; &lt;br&gt;Allow or disallow to retrieve location events in the background. Return a boolean to know if background mode was successfully enabled.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You should try to manage permission manually with &lt;code&gt;requestPermission()&lt;/code&gt; to avoid error, but plugin will try handle some cases for you.&lt;/p&gt; &#xA;&lt;h2&gt;Objects&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class LocationData {&#xA;  final double latitude; // Latitude, in degrees&#xA;  final double longitude; // Longitude, in degrees&#xA;  final double accuracy; // Estimated horizontal accuracy of this location, radial, in meters&#xA;  final double altitude; // In meters above the WGS 84 reference ellipsoid&#xA;  final double speed; // In meters/second&#xA;  final double speedAccuracy; // In meters/second, always 0 on iOS&#xA;  final double heading; // Heading is the horizontal direction of travel of this device, in degrees&#xA;  final double time; // timestamp of the LocationData&#xA;  final bool isMock; // Is the location currently mocked&#xA;}&#xA;&#xA;&#xA;enum LocationAccuracy {&#xA;  powerSave, // To request best accuracy possible with zero additional power consumption,&#xA;  low, // To request &#34;city&#34; level accuracy&#xA;  balanced, // To request &#34;block&#34; level accuracy&#xA;  high, // To request the most accurate locations available&#xA;  navigation // To request location for navigation usage (affect only iOS)&#xA;}&#xA;&#xA;// Status of a permission request to use location services.&#xA;enum PermissionStatus {&#xA;  /// The permission to use location services has been granted.&#xA;  granted,&#xA;  // The permission to use location services has been denied by the user. May have been denied forever on iOS.&#xA;  denied,&#xA;  // The permission to use location services has been denied forever by the user. No dialog will be displayed on permission request.&#xA;  deniedForever&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: you can convert the timestamp into a &lt;code&gt;DateTime&lt;/code&gt; with: &lt;code&gt;DateTime.fromMillisecondsSinceEpoch(locationData.time.toInt())&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Please feel free to &lt;a href=&#34;https://github.com/Lyokone/flutterlocation/issues&#34;&gt;give me any feedback&lt;/a&gt; helping support this plugin !&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alextran1502/immich</title>
    <updated>2022-05-31T02:35:30Z</updated>
    <id>tag:github.com,2022-05-31:/alextran1502/immich</id>
    <link href="https://github.com/alextran1502/immich" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Self-hosted photo and video backup solution directly from your mobile phone.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?color=3F51B5&amp;amp;style=for-the-badge&amp;amp;label=License&amp;amp;logoColor=000000&amp;amp;labelColor=ececec&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alextran1502/immich&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/alextran1502/immich.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;color=3F51B5&amp;amp;label=Stars&amp;amp;logoColor=000000&amp;amp;labelColor=ececec&#34; alt=&#34;Star on Github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://immichci.little-home.net/viewType.html?buildTypeId=Immich_BuildAndroidAndGetArtifact&amp;amp;guest=1&#34;&gt; &lt;img src=&#34;https://img.shields.io/teamcity/http/immichci.little-home.net/s/Immich_BuildAndroidAndGetArtifact.svg?style=for-the-badge&amp;amp;label=Android&amp;amp;logo=teamcity&amp;amp;logoColor=000000&amp;amp;labelColor=ececec&#34; alt=&#34;Android Build&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://immichci.little-home.net/viewType.html?buildTypeId=Immich_BuildAndPublishIOSToTestFlight&amp;amp;guest=1&#34;&gt; &lt;img src=&#34;https://img.shields.io/teamcity/http/immichci.little-home.net/s/Immich_BuildAndPublishIOSToTestFlight.svg?style=for-the-badge&amp;amp;label=iOS&amp;amp;logo=teamcity&amp;amp;logoColor=000000&amp;amp;labelColor=ececec&#34; alt=&#34;iOS Build&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://actions-badge.atrox.dev/alextran1502/immich/goto?ref=main&#34;&gt; &lt;img alt=&#34;Build Status&#34; src=&#34;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Falextran1502%2Fimmich%2Fbadge%3Fref%3Dmain&amp;amp;style=for-the-badge&amp;amp;label=Server Docker&amp;amp;logo=docker&amp;amp;labelColor=ececec&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/immich-logo.svg?sanitize=true&#34; width=&#34;200&#34; title=&#34;Immich Logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Immich&lt;/h1&gt; &#xA;&lt;p&gt;Self-hosted photo and video backup solution directly from your mobile phone.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/y8ZeaAigGmNvlSoKhU/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Loading ~4000 images/videos&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h3&gt;Mobile client&lt;/h3&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/login-screen.png&#34; width=&#34;150&#34; title=&#34;Login With Custom URL&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/backup-screen.png&#34; width=&#34;150&#34; title=&#34;Backup Setting Info&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/selective-backup-screen.png&#34; width=&#34;150&#34; title=&#34;Backup Setting Info&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/home-screen.jpeg&#34; width=&#34;150&#34; title=&#34;Home Screen&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/search-screen.jpeg&#34; width=&#34;150&#34; title=&#34;Curated Search Info&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/shared-albums.png&#34; width=&#34;150&#34; title=&#34;Shared Albums&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/nsc6.png&#34; width=&#34;150&#34; title=&#34;EXIF Info&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Web client&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/dashboard_photos.jpeg&#34; width=&#34;100%&#34; title=&#34;Home Dashboard&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Note&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;!! NOT READY FOR PRODUCTION! DO NOT USE TO STORE YOUR ASSETS !!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project is under heavy development, there will be continuous functions, features and api changes.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upload and view assets (videos/images).&lt;/li&gt; &#xA; &lt;li&gt;Auto Backup.&lt;/li&gt; &#xA; &lt;li&gt;Download asset to local device.&lt;/li&gt; &#xA; &lt;li&gt;Multi-user supported.&lt;/li&gt; &#xA; &lt;li&gt;Quick navigation with drag scroll bar.&lt;/li&gt; &#xA; &lt;li&gt;Support HEIC/HEIF Backup.&lt;/li&gt; &#xA; &lt;li&gt;Extract and display EXIF info.&lt;/li&gt; &#xA; &lt;li&gt;Real-time render from multi-device upload event.&lt;/li&gt; &#xA; &lt;li&gt;Image Tagging/Classification based on ImageNet dataset&lt;/li&gt; &#xA; &lt;li&gt;Object detection based on COCO SSD.&lt;/li&gt; &#xA; &lt;li&gt;Search assets based on tags and exif data (lens, make, model, orientation)&lt;/li&gt; &#xA; &lt;li&gt;[Optional] Reverse geocoding using Mapbox (Generous free-tier of 100,000 search/month)&lt;/li&gt; &#xA; &lt;li&gt;Show asset&#39;s location information on map (OpenStreetMap).&lt;/li&gt; &#xA; &lt;li&gt;Show curated places on the search page&lt;/li&gt; &#xA; &lt;li&gt;Show curated objects on the search page&lt;/li&gt; &#xA; &lt;li&gt;Shared album with users on the same server&lt;/li&gt; &#xA; &lt;li&gt;Selective backup - albums can be included and excluded during the backup process.&lt;/li&gt; &#xA; &lt;li&gt;Web interface is available for administrative tasks (creating new users) and viewing assets on the server - additional features are coming.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;System Requirement&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;OS&lt;/strong&gt;: Preferred unix-based operating system (Ubuntu, Debian, MacOS...etc).&lt;/p&gt; &#xA;&lt;p&gt;I haven&#39;t tested with &lt;code&gt;Docker for Windows&lt;/code&gt; as well as &lt;code&gt;WSL&lt;/code&gt; on Windows&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Raspberry Pi can be used but &lt;code&gt;microservices&lt;/code&gt; container has to be comment out in &lt;code&gt;docker-compose&lt;/code&gt; since TensorFlow has not been supported in Docker image on arm64v7 yet.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;RAM&lt;/strong&gt;: At least 2GB, preffered 4GB.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Core&lt;/strong&gt;: At least 2 cores, preffered 4 cores.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;You can use docker compose for development and testing out the application, there are several services that compose Immich:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;NestJs&lt;/strong&gt; - Backend of the application&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SvelteKit&lt;/strong&gt; - Web frontend of the application&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt; - Main database of the application&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Redis&lt;/strong&gt; - For sharing websocket instance between docker instances and background tasks message queue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Nginx&lt;/strong&gt; - Load balancing and optimized file uploading.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TensorFlow&lt;/strong&gt; - Object Detection and Image Classification.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Step 1: Populate .env file&lt;/h2&gt; &#xA;&lt;p&gt;Navigate to &lt;code&gt;docker&lt;/code&gt; directory and run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then populate the value in there.&lt;/p&gt; &#xA;&lt;p&gt;Notice that if set &lt;code&gt;ENABLE_MAPBOX&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, you will have to provide &lt;code&gt;MAPBOX_KEY&lt;/code&gt; for the server to run.&lt;/p&gt; &#xA;&lt;p&gt;Pay attention to the key &lt;code&gt;UPLOAD_LOCATION&lt;/code&gt;, this directory must exist and is owned by the user that run the &lt;code&gt;docker-compose&lt;/code&gt; command below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;###################################################################################&#xA;# Database&#xA;###################################################################################&#xA;DB_USERNAME=postgres&#xA;DB_PASSWORD=postgres&#xA;DB_DATABASE_NAME=immich&#xA;&#xA;###################################################################################&#xA;# Upload File Config&#xA;###################################################################################&#xA;UPLOAD_LOCATION=&amp;lt;put-the-path-of-the-upload-folder-here&amp;gt;&#xA;&#xA;###################################################################################&#xA;# JWT SECRET&#xA;###################################################################################&#xA;JWT_SECRET=randomstringthatissolongandpowerfulthatnoonecanguess&#xA;&#xA;###################################################################################&#xA;# MAPBOX&#xA;####################################################################################&#xA;# ENABLE_MAPBOX is either true of false -&amp;gt; if true, you have to provide MAPBOX_KEY&#xA;ENABLE_MAPBOX=false&#xA;MAPBOX_KEY=&#xA;&#xA;###################################################################################&#xA;# WEB&#xA;###################################################################################&#xA;# This is the URL of your vm/server where you host Immich, so that the web frontend&#xA;# know where can it make the request to.&#xA;# For example: If your server IP address is 10.1.11.50, the environment variable will&#xA;# be VITE_SERVER_ENDPOINT=http://10.1.11.50:2283&#xA;VITE_SERVER_ENDPOINT=http://192.168.1.216:2283&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step 2: Start the server&lt;/h2&gt; &#xA;&lt;p&gt;To &lt;strong&gt;start&lt;/strong&gt;, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose -f ./docker/docker-compose.yml up &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have a few thousand photos/videos, I suggest running docker-compose with &lt;em&gt;scaling&lt;/em&gt; option for the &lt;code&gt;immich_server&lt;/code&gt; container to handle high I/O load when using fast scrolling.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose -f ./docker/docker-compose.yml up --scale immich-server=5 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To &lt;em&gt;update&lt;/em&gt; docker-compose with newest image (if you have started the docker-compose previously)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose -f ./docker/docker-compose.yml pull &amp;amp;&amp;amp; docker-compose -f ./docker/docker-compose.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The server will be running at &lt;code&gt;http://your-ip:2283&lt;/code&gt; through &lt;code&gt;Nginx&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Step 3: Register User&lt;/h2&gt; &#xA;&lt;p&gt;Access the web interface at &lt;code&gt;http://your-ip:2285&lt;/code&gt; to register an admin account.&lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/admin-registration-form.png&#34; width=&#34;300&#34; title=&#34;Admin Registration&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;Additional accounts on the server can be created by the admin account.&lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/admin-interface.png&#34; width=&#34;500&#34; title=&#34;Admin User Management&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Step 4: Run mobile app&lt;/h2&gt; &#xA;&lt;p&gt;The app is distributed on several platforms below.&lt;/p&gt; &#xA;&lt;h2&gt;F-Droid&lt;/h2&gt; &#xA;&lt;p&gt;You can get the app on F-droid by clicking the image below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f-droid.org/packages/app.alextran.immich&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Android&lt;/h2&gt; &#xA;&lt;h4&gt;Get the app on Google Play Store &lt;a href=&#34;https://play.google.com/store/apps/details?id=app.alextran.immich&#34;&gt;here&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;The App version might be lagging behind the latest release due to the review process.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/google-play-qr-code.png&#34; width=&#34;200&#34; title=&#34;Google Play Store&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;iOS&lt;/h2&gt; &#xA;&lt;h4&gt;Get the app on Apple AppStore &lt;a href=&#34;https://apps.apple.com/us/app/immich/id1613945652&#34;&gt;here&lt;/a&gt;:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;The App version might be lagging behind the latest release due to the review process.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alextran1502/immich/main/design/ios-qr-code.png&#34; width=&#34;200&#34; title=&#34;Apple App Store&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;The development environment can be started from the root of the project after populating the &lt;code&gt;.env&lt;/code&gt; file with the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make dev # required Makefile installed on the system.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All servers and web container are hot reload for quick feedback loop.&lt;/p&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;p&gt;If you like the app, find it helpful, and want to support me to offset the cost of publishing to AppStores, you can sponsor the project with &lt;a href=&#34;https://github.com/sponsors/alextran1502&#34;&gt;&lt;strong&gt;Github Sponsor&lt;/strong&gt;&lt;/a&gt;, or a one time donation with the Buy Me a coffee link below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/altran1502&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;&amp;quot;Buy Me A Coffee&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is also a meaningful way to give me motivation and encouragement to continue working on the app.&lt;/p&gt; &#xA;&lt;p&gt;Cheers! 🎉&lt;/p&gt; &#xA;&lt;h1&gt;Known Issue&lt;/h1&gt; &#xA;&lt;h2&gt;TensorFlow Build Issue&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;This is a known issue on RaspberryPi 4 arm64-v7 and incorrect Promox setup&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;TensorFlow doesn&#39;t run with older CPU architecture, it requires a CPU with AVX and AVX2 instruction set. If you encounter the error &lt;code&gt;illegal instruction core dump&lt;/code&gt; when running the docker-compose command above, check for your CPU flags with the command and make sure you see &lt;code&gt;AVX&lt;/code&gt; and &lt;code&gt;AVX2&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;more /proc/cpuinfo | grep flags&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are running virtualization in Promox, the VM doesn&#39;t have the flag enabled.&lt;/p&gt; &#xA;&lt;p&gt;You need to change the CPU type from &lt;code&gt;kvm64&lt;/code&gt; to &lt;code&gt;host&lt;/code&gt; under VMs hardware tab.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Hardware &amp;gt; Processors &amp;gt; Edit &amp;gt; Advanced &amp;gt; Type (dropdown menu) &amp;gt; host&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Otherwise you can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;edit &lt;code&gt;docker-compose.yml&lt;/code&gt; file and comment the whole &lt;code&gt;immich_microservices&lt;/code&gt; service &lt;strong&gt;which will disable machine learning features like object detection and image classification&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;switch to a different VM/desktop with different architecture.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>