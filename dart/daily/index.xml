<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-24T01:34:02Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>boskokg/flutter_blue_plus</title>
    <updated>2023-05-24T01:34:02Z</updated>
    <id>tag:github.com,2023-05-24:/boskokg/flutter_blue_plus</id>
    <link href="https://github.com/boskokg/flutter_blue_plus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter plugin for connecting and communicationg with Bluetooth Low Energy devices, on Android and iOS&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_blue_plus&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_blue_plus.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;FlutterBlue&#34; src=&#34;https://github.com/boskokg/flutter_blue_plus/raw/master/site/flutterblue.png?raw=true&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt;&#xA;&lt;br&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;FlutterBluePlus is a bluetooth plugin for &lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt;, a new app SDK to help developers build modern multi-platform apps. Note: this plugin is continuous work from FlutterBlue since maintaince stoped.&lt;/p&gt; &#xA;&lt;h2&gt;Alpha version&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;This package must be tested on a real device.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cross-Platform Bluetooth LE&lt;/h2&gt; &#xA;&lt;p&gt;FlutterBluePlus aims to offer the most from both platforms (iOS and Android).&lt;/p&gt; &#xA;&lt;p&gt;Using the FlutterBluePlus instance, you can scan for and connect to nearby devices (&lt;a href=&#34;https://raw.githubusercontent.com/boskokg/flutter_blue_plus/master/#bluetoothdevice-api&#34;&gt;BluetoothDevice&lt;/a&gt;). Once connected to a device, the BluetoothDevice object can discover services (&lt;a href=&#34;https://raw.githubusercontent.com/boskokg/flutter_blue_plus/master/lib/src/bluetooth_service.dart&#34;&gt;BluetoothService&lt;/a&gt;), characteristics (&lt;a href=&#34;https://raw.githubusercontent.com/boskokg/flutter_blue_plus/master/lib/src/bluetooth_characteristic.dart&#34;&gt;BluetoothCharacteristic&lt;/a&gt;), and descriptors (&lt;a href=&#34;https://raw.githubusercontent.com/boskokg/flutter_blue_plus/master/lib/src/bluetooth_descriptor.dart&#34;&gt;BluetoothDescriptor&lt;/a&gt;). The BluetoothDevice object is then used to directly interact with characteristics and descriptors.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Obtain an instance&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FlutterBluePlus flutterBlue = FlutterBluePlus.instance;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scan for devices&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Start scanning&#xA;flutterBlue.startScan(timeout: Duration(seconds: 4));&#xA;&#xA;// Listen to scan results&#xA;var subscription = flutterBlue.scanResults.listen((results) {&#xA;    // do something with scan results&#xA;    for (ScanResult r in results) {&#xA;        print(&#39;${r.device.name} found! rssi: ${r.rssi}&#39;);&#xA;    }&#xA;});&#xA;&#xA;// Stop scanning&#xA;flutterBlue.stopScan();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Connect to a device&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Connect to the device&#xA;await device.connect();&#xA;&#xA;// Disconnect from device&#xA;device.disconnect();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Discover services&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;List&amp;lt;BluetoothService&amp;gt; services = await device.discoverServices();&#xA;services.forEach((service) {&#xA;    // do something with service&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Read and write characteristics&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Reads all characteristics&#xA;var characteristics = service.characteristics;&#xA;for(BluetoothCharacteristic c in characteristics) {&#xA;    List&amp;lt;int&amp;gt; value = await c.read();&#xA;    print(value);&#xA;}&#xA;&#xA;// Writes to a characteristic&#xA;await c.write([0x12, 0x34])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Read and write descriptors&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Reads all descriptors&#xA;var descriptors = characteristic.descriptors;&#xA;for(BluetoothDescriptor d in descriptors) {&#xA;    List&amp;lt;int&amp;gt; value = await d.read();&#xA;    print(value);&#xA;}&#xA;&#xA;// Writes to a descriptor&#xA;await d.write([0x12, 0x34])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Set notifications and listen to changes&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;await characteristic.setNotifyValue(true);&#xA;characteristic.value.listen((value) {&#xA;    // do something with new value&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Read the MTU and request larger size&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final mtu = await device.mtu.first;&#xA;await device.requestMtu(512);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that iOS will not allow requests of MTU size, and will always try to negotiate the highest possible MTU (iOS supports up to MTU size 185)&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Change the minSdkVersion for Android&lt;/h3&gt; &#xA;&lt;p&gt;flutter_blue_plus is compatible only from version 19 of Android SDK so you should change this in &lt;strong&gt;android/app/build.gradle&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Android {&#xA;  defaultConfig {&#xA;     minSdkVersion: 19&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add permissions for Bluetooth&lt;/h3&gt; &#xA;&lt;p&gt;We need to add the permission to use Bluetooth and access location:&lt;/p&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;In the &lt;strong&gt;android/app/src/main/AndroidManifest.xml&lt;/strong&gt; let’s add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&#x9; &amp;lt;uses-permission android:name=&#34;android.permission.BLUETOOTH&#34; /&amp;gt;  &#xA;&#x9; &amp;lt;uses-permission android:name=&#34;android.permission.BLUETOOTH_ADMIN&#34; /&amp;gt;  &#xA;&#x9; &amp;lt;uses-permission android:name=&#34;android.permission.ACCESS_COARSE_LOCATION&#34;/&amp;gt;  &#xA; &amp;lt;application&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;strong&gt;IOS&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;In the &lt;strong&gt;ios/Runner/Info.plist&lt;/strong&gt; let’s add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#x9;&amp;lt;dict&amp;gt;  &#xA;&#x9;    &amp;lt;key&amp;gt;NSBluetoothAlwaysUsageDescription&amp;lt;/key&amp;gt;  &#xA;&#x9;    &amp;lt;string&amp;gt;Need BLE permission&amp;lt;/string&amp;gt;  &#xA;&#x9;    &amp;lt;key&amp;gt;NSBluetoothPeripheralUsageDescription&amp;lt;/key&amp;gt;  &#xA;&#x9;    &amp;lt;string&amp;gt;Need BLE permission&amp;lt;/string&amp;gt;  &#xA;&#x9;    &amp;lt;key&amp;gt;NSLocationAlwaysAndWhenInUseUsageDescription&amp;lt;/key&amp;gt;  &#xA;&#x9;    &amp;lt;string&amp;gt;Need Location permission&amp;lt;/string&amp;gt;  &#xA;&#x9;    &amp;lt;key&amp;gt;NSLocationAlwaysUsageDescription&amp;lt;/key&amp;gt;  &#xA;&#x9;    &amp;lt;string&amp;gt;Need Location permission&amp;lt;/string&amp;gt;  &#xA;&#x9;    &amp;lt;key&amp;gt;NSLocationWhenInUseUsageDescription&amp;lt;/key&amp;gt;  &#xA;&#x9;    &amp;lt;string&amp;gt;Need Location permission&amp;lt;/string&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For location permissions on iOS see more at: &lt;a href=&#34;https://developer.apple.com/documentation/corelocation/requesting_authorization_for_location_services&#34;&gt;https://developer.apple.com/documentation/corelocation/requesting_authorization_for_location_services&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;h3&gt;FlutterBlue API&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;scan&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Starts a scan for Bluetooth Low Energy devices.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;state&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Stream of state changes for the Bluetooth Adapter.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;isAvailable&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Checks whether the device supports Bluetooth.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;isOn&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Checks if Bluetooth functionality is turned on.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;BluetoothDevice API&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;connect&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Establishes a connection to the device.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;disconnect&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Cancels an active or pending connection to the device.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;discoverServices&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Discovers services offered by the remote device as well as their characteristics and descriptors.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;services&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gets a list of services. Requires that discoverServices() has completed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;state&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Stream of state changes for the Bluetooth Device.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;mtu&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Stream of mtu size changes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;requestMtu&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Request to change the MTU for the device.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;readRssi&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Read RSSI from a connected device.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;requestConnectionPriority&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Request to update a high priority, low latency connection. An application should only request high priority connection parameters to transfer large amounts of data over LE quickly.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;removeBond&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Remove Bluetooth Bond of device&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;setPreferredPhy&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set preferred RX and TX phy for connection and phy options&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;BluetoothCharacteristic API&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;read&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Retrieves the value of the characteristic.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;write&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Writes the value of the characteristic.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;setNotifyValue&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sets notifications or indications on the characteristic.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;value&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Stream of characteristic&#39;s value when changed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;BluetoothDescriptor API&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;read&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Retrieves the value of the descriptor.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;write&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Writes the value of the descriptor.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;When I scan using a service UUID filter, it doesn&#39;t find any devices.&lt;/h3&gt; &#xA;&lt;p&gt;Make sure the device is advertising which service UUID&#39;s it supports. This is found in the advertisement packet as &lt;strong&gt;UUID 16 bit complete list&lt;/strong&gt; or &lt;strong&gt;UUID 128 bit complete list&lt;/strong&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>avinashkranjan/Friday</title>
    <updated>2023-05-24T01:34:02Z</updated>
    <id>tag:github.com,2023-05-24:/avinashkranjan/Friday</id>
    <link href="https://github.com/avinashkranjan/Friday" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎓 Friday - Your Personal Class Manager Assistant, It&#39;ll never let you miss another assignment deadline or upcoming test.&lt;/p&gt;&lt;hr&gt;&lt;h2 align=&#34;center&#34;&gt; 🎓 Friday &lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/avinashkranjan/Friday&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/55796944/95674682-5eb52e00-0bcf-11eb-969b-cb7add59921c.png&#34; alt=&#34;Logo&#34; height=&#34;150px&#34; width=&#34;150px&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;h2 align=&#34;center&#34;&gt; &#34;Friday - Your Personal Class Assistant, It&#39;ll never let you miss another assignment deadline or any upcoming test.&#34; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/issues/avinashkranjan/Friday&#34; alt=&#34;Issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/avinashkranjan/Friday&#34; alt=&#34;Pull Requests&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/avinashkranjan/Friday&#34; alt=&#34;Forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/avinashkranjan/Friday&#34; alt=&#34;Stars&#34;&gt; &lt;a href=&#34;https://github.com/avinashkranjan/Friday&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/avinashkranjan/Friday&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/avinashkranjan/Friday.svg?label=Repo%20size&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;/h2&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt; Introduction 🚩 &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Since after the pandemic almost everything has been moved on to the virtual world So has &lt;b&gt;Education&lt;/b&gt;. All our classes have been moved online and with that, all our &lt;b&gt;&lt;em&gt; assignments, test, exams, Viva&lt;/em&gt;&lt;/b&gt; are being held on an online platform as well, With so many &lt;b&gt;&lt;em&gt;assignment deadlines, upcoming exam dates, and being busy with our life&lt;/em&gt;&lt;/b&gt; we forget the deadlines and exam dates on most occasion. I don&#39;t know how many of you but it happens to me frequently. So I came up with this &lt;b&gt;app&lt;/b&gt; which once fed with all the required data it&#39;ll remind you of the &lt;b&gt;&lt;em&gt;assignment deadlines, upcoming exams, unfinished homework&lt;/em&gt;&lt;/b&gt;. So, you can plan your schedule accordingly. &lt;/p&gt;&#xA;&lt;h2 align=&#34;center&#34;&gt; Tech Stack 🔥 &lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/dart-%230175C2.svg?&amp;amp;style=for-the-badge&amp;amp;logo=dart&amp;amp;logoColor=white&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Flutter%20-%2302569B.svg?&amp;amp;style=for-the-badge&amp;amp;logo=Flutter&amp;amp;logoColor=white&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/figma%20-%23F24E1E.svg?&amp;amp;style=for-the-badge&amp;amp;logo=figma&amp;amp;logoColor=white&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/github%20-%23121011.svg?&amp;amp;style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt; Application Preview 👀 &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/55796944/95674880-cb7cf800-0bd0-11eb-94fd-20b50ab35219.png&#34; height=&#34;363px&#34; width=&#34;181px&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/55796944/95674883-cddf5200-0bd0-11eb-9b9a-f22d94217089.png&#34; height=&#34;363px&#34; width=&#34;181px&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/55796944/95674884-d041ac00-0bd0-11eb-9eb3-299fd123973a.png&#34; height=&#34;363px&#34; width=&#34;181px&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/55796944/95674885-d172d900-0bd0-11eb-9259-d22fb91cfad6.png&#34; height=&#34;363px&#34; width=&#34;181px&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/avinashkranjan/Friday/releases/download/v1.0.0/friday.apk&#34;&gt; &lt;img src=&#34;https://forthebadge.com/images/badges/check-it-out.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt; Working Preview ▶ &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/55796944/95675411-b904bd80-0bd4-11eb-945d-810010a86da8.gif&#34; height=&#34;408px&#34; width=&#34;204px&#34;&gt; &lt;/p&gt;&#xA;&lt;h2 align=&#34;center&#34;&gt; Video Preview ⏩ &lt;a href=&#34;https://youtu.be/IJCo80Y0wjI&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Click Me%20-%23FF0000.svg?&amp;amp; style=for-the-badge logo=YouTube&amp;amp;logoColor=white&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;/h2&gt;&#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to these wonderful people.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/avinashkranjan/Friday/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=avinashkranjan/Friday&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;Contributions of any kind welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Open Source Programs &lt;em&gt;Friday&lt;/em&gt; has been Part of 🚀&lt;/h2&gt; &#xA;&lt;a&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;a href=&#34;https://gssoc.girlscript.tech/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GirlScriptSummerOfCode/MentorshipProgram/master/GSsoc%20Type%20Logo%20Black.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Project Admin ❤️ &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/avinashkranjan&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/55796944/95675026-dab07580-0bd1-11eb-93e2-1cb1de8acf38.png&#34; width=&#34;150px&#34; height=&#34;150px&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/avinashkranjan%20-%230077B5.svg?&amp;amp;style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/iavinashranjan%20-%231DA1F2.svg?&amp;amp;style=for-the-badge&amp;amp;logo=Twitter&amp;amp;logoColor=white&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/avinashkranjan7%20-%23E4405F.svg?&amp;amp;style=for-the-badge&amp;amp;logo=Instagram&amp;amp;logoColor=white&#34;&gt; &lt;/p&gt;</summary>
  </entry>
</feed>