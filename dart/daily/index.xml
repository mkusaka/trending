<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-13T01:27:22Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dna2github/NodeBase</title>
    <updated>2023-08-13T01:27:22Z</updated>
    <id>tag:github.com,2023-08-13:/dna2github/NodeBase</id>
    <link href="https://github.com/dna2github/NodeBase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Android NodeJS Platform to Build Sharable Application&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NodeBase&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/dna2github/NodeBase/images/log.png&#34;&gt; &#xA;&lt;p&gt;Android NodeJS Platform to Build Sharable Application&lt;/p&gt; &#xA;&lt;p&gt;Running Node.js application over Wifi and share with your friends.&lt;/p&gt; &#xA;&lt;p&gt;For previous mature version, please explore source code on &lt;a href=&#34;https://github.com/dna2github/NodeBase/tree/kotlin&#34;&gt;kotlin&lt;/a&gt; branch.&lt;/p&gt; &#xA;&lt;p&gt;Currently we are redesigning whole NodeBase based on Flutter.&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Platform/App market is online &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;click into platform or application page&lt;/li&gt; &#xA;   &lt;li&gt;click on the top-right cart icon button&lt;/li&gt; &#xA;   &lt;li&gt;select what you want to download &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;e.g. download platform &lt;code&gt;node-10.10.0&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt; &lt;pre&gt;&lt;code&gt; download app `file-transfer`&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;pre&gt;&lt;code&gt; edit app `file-transfer` platform value to `node-10.10.0`&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;pre&gt;&lt;code&gt; start `file-transfer` by clicking play icon button&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create a new platform, for example named &lt;code&gt;node&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;fill node url like &lt;code&gt;file:///sdcard/bin-node-v10.10.0&lt;/code&gt; or &lt;code&gt;https://example.com/latest/arm/node&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;click download button and wait for task complete&lt;/li&gt; &#xA;   &lt;li&gt;(NodeBase will copy the binary to its app zone and make it executable)&lt;/li&gt; &#xA;   &lt;li&gt;Wow; now we not only support node binary but also customized exectuables.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create a new app, for example named &lt;code&gt;test&lt;/code&gt; and its platform is &lt;code&gt;node&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;click into the new app&lt;/li&gt; &#xA;   &lt;li&gt;download an app zip into for example &lt;code&gt;/sdcard/test.zip&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;fill &lt;code&gt;Import / Export&lt;/code&gt; text field with &lt;code&gt;/sdcard/test.zip&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;click upload button and wait for task complete&lt;/li&gt; &#xA;   &lt;li&gt;(NodeBase will extract zip app as a app folder into app zone)&lt;/li&gt; &#xA;   &lt;li&gt;fill &lt;code&gt;Params&lt;/code&gt; text field (for example, file manager need to config target folder as first param)&lt;/li&gt; &#xA;   &lt;li&gt;click &lt;code&gt;play&lt;/code&gt; button to start node app&lt;/li&gt; &#xA;   &lt;li&gt;click &lt;code&gt;open in browser&lt;/code&gt; button to open the app in a webview / &lt;code&gt;pop-out&lt;/code&gt; button to open in external browser&lt;/li&gt; &#xA;   &lt;li&gt;click &lt;code&gt;stop&lt;/code&gt; button to stop node app&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;App folder structure&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;/&amp;lt;app_name&amp;gt;/config.json&#xA;{&#xA;   &#34;host&#34;: &#34;http://127.0.0.1&#34;&#xA;   &#34;port&#34;: 0,&#xA;   &#34;home&#34;: &#34;/index.html&#34;,&#xA;   &#34;entry&#34;: &#34;index.js&#34;&#xA;}&#xA;&#xA;/&amp;lt;app_name&amp;gt;/static/index.html&#xA;[...] source code frontend client&#xA;&#xA;/&amp;lt;app_name&amp;gt;/index.js&#xA;ref: https://github.com/stallpool/halfbase/tree/master/nodejs/tinyserver/index.js&#xA;[...] source code for backend server&#xA;[...] hook `/index.html` to load `/app/static/index.html`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;App examples: &lt;a href=&#34;https://github.com/nodebase0&#34;&gt;https://github.com/nodebase0&lt;/a&gt;, includes file-viewer-uploader, nodepad, ...&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;This project is a starting point for a Flutter application.&lt;/p&gt; &#xA;&lt;p&gt;A few resources to get you started if this is your first Flutter project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/codelab&#34;&gt;Lab: Write your first Flutter app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/cookbook&#34;&gt;Cookbook: Useful Flutter samples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For help getting started with Flutter, view our &lt;a href=&#34;https://flutter.dev/docs&#34;&gt;online documentation&lt;/a&gt;, which offers tutorials, samples, guidance on mobile development, and a full API reference.&lt;/p&gt; &#xA;&lt;h5&gt;NodeJS/Python binary for ARM&lt;/h5&gt; &#xA;&lt;p&gt;ref: &lt;a href=&#34;https://github.com/dna2github/dna2oslab/releases/tag/0.2.0-android-gt6-arm&#34;&gt;https://github.com/dna2github/dna2oslab/releases/tag/0.2.0-android-gt6-arm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Java binary&lt;/h5&gt; &#xA;&lt;p&gt;write a shell script &lt;code&gt;java&lt;/code&gt; and &lt;code&gt;adb push java /sdcard&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;#!/system/bin/sh&#xA;&#xA;exec dalvikvm $@&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;create a new platform in NodeBase and download java wrapper from &lt;code&gt;file:///sdcard/java&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;then write a command line tool to have a try. ref: &lt;a href=&#34;https://github.com/dna2github/dna2sevord/tree/master/past/others/walkserver/javacmd&#34;&gt;https://github.com/dna2github/dna2sevord/tree/master/past/others/walkserver/javacmd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Golang binary&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;# download go source package and extract&#xA;cd src&#xA;GOOS=android GOARCH=arm64 ./bootstrap.bash&#xA;&#xA;tar zcf go-android-arm64-bootstrap.tar.gz go-android-arm64-bootstrap&#xA;adb push go-android-arm64-bootstrap.tar.gz /sdcard/&#xA;# we suggest write a javascript script to set up golang environment on your Android&#xA;# to extract tar package to NodeBase app zone /data/user/0/net.seven.nodebase/&#xA;# e.g. /data/user/0/net.seven.nodebase/go-android-arm64-bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;write a shell script &lt;code&gt;go&lt;/code&gt; and &lt;code&gt;adb push go /sdcard&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;#!/system/bin/sh&#xA;&#xA;SELF=$(cd `dirname $0`; pwd)&#xA;BASE=/data/user/0/net.seven.nodebase/go-android-arm64-bootstrap&#xA;CACHEBASE=${BASE}/cache&#xA;mkdir -p ${CACHEBASE}/{cache,tmp,local}&#xA;export GOROOT=${BASE}&#xA;export GOPATH=${CACHEBASE}/golang/local&#xA;export GOCACHE=${CACHEBASE}/golang/cache&#xA;export GOTMPDIR=${CACHEBASE}/golang/tmp&#xA;export CGO_ENABLED=0&#xA;exec ${BASE}/bin/go run $@&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;create a new platform in NodeBase and download go wrapper from &lt;code&gt;file:///sdcard/go&lt;/code&gt;;&lt;/p&gt; &#xA;&lt;p&gt;then write a tiny server to have a try. ref: &lt;a href=&#34;https://github.com/stallpool/halfbase/raw/master/golang/tinyserver/main.go&#34;&gt;https://github.com/stallpool/halfbase/blob/master/golang/tinyserver/main.go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Notice&lt;/h5&gt; &#xA;&lt;p&gt;currently NodeBase support kill a program with 1-level children, for example &lt;code&gt;go run main.go&lt;/code&gt; will spawn a child process &lt;code&gt;main&lt;/code&gt;; if click on &lt;code&gt;stop&lt;/code&gt; button, NodeBase can kill the &lt;code&gt;go run&lt;/code&gt; and its child &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;if remove &lt;code&gt;exec&lt;/code&gt; in the &lt;code&gt;go&lt;/code&gt; wrapper shell script, the shell script will run in &lt;code&gt;sh&lt;/code&gt;, it spawn &lt;code&gt;go run&lt;/code&gt; and the &lt;code&gt;go run&lt;/code&gt; spawn &lt;code&gt;main&lt;/code&gt;; when &lt;code&gt;stop&lt;/code&gt; the application, NodeBase will merely kill &lt;code&gt;sh&lt;/code&gt; and its child &lt;code&gt;go run&lt;/code&gt;; but &lt;code&gt;main&lt;/code&gt; will still be running there, which may cause next &lt;code&gt;start&lt;/code&gt; failure (like port has already been used) and need to kill whole NodeBase for cleanup.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>HeadspaceMeditation/statsig-flutter</title>
    <updated>2023-08-13T01:27:22Z</updated>
    <id>tag:github.com,2023-08-13:/HeadspaceMeditation/statsig-flutter</id>
    <link href="https://github.com/HeadspaceMeditation/statsig-flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A headspace improvement on the existing Statsig Flutter plugin&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Statsig Dart SDK&lt;/h2&gt; &#xA;&lt;p&gt;For SDK Documentation, visit &lt;a href=&#34;https://docs.statsig.com/client/introduction&#34;&gt;https://docs.statsig.com/client/introduction&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>