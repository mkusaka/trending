<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-11T01:28:36Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mateusz-bak/openreads</title>
    <updated>2024-02-11T01:28:36Z</updated>
    <id>tag:github.com,2024-02-11:/mateusz-bak/openreads</id>
    <link href="https://github.com/mateusz-bak/openreads" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A mobile books tracker written in Flutter that respects your privacy.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Openreads&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mateusz-bak/openreads/master/doc/github/github-banner.png&#34; width=&#34;100%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mateusz-bak/openreads/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/mateusz-bak/openreads?label=latest%20version&amp;amp;style=flat-square&#34; alt=&#34;GitHub tag (latest by date)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mateusz-bak/openreads/actions/workflows/test_build.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/mateusz-bak/openreads/test_build.yml?style=flat-square&#34; alt=&#34;GitHub Workflow Status (with event)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/openreads/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/weblate-translations_needed-orange?style=flat-square&amp;amp;logo=weblate&#34; alt=&#34;Weblate project translated&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#openreads:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/matrix.org-join_community-teal?style=flat-square&amp;amp;logo=matrix&#34; alt=&#34;Join the community&#34;&gt;&lt;/a&gt; &lt;a rel=&#34;me&#34; href=&#34;https://fosstodon.org/@openreads&#34;&gt;&lt;img alt=&#34;Mastodon Follow&#34; src=&#34;https://img.shields.io/mastodon/follow/110707338082983645?domain=https%3A%2F%2Ffosstodon.org&amp;amp;style=flat-square&amp;amp;logo=mastodon&amp;amp;color=royalblue&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f-droid.org/en/packages/software.mdev.bookstracker&#34;&gt;&lt;img height=&#34;70&#34; alt=&#34;Get it on F-Droid&#34; src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=software.mdev.bookstracker&#34;&gt;&lt;img height=&#34;70&#34; alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mateusz-bak/openreads/releases/latest&#34;&gt;&lt;img height=&#34;70&#34; alt=&#34;Get it on Github&#34; src=&#34;https://raw.githubusercontent.com/mateusz-bak/openreads/master/doc/github/get-it-on-github.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Openreads is a privacy oriented and open source cross-platform app written in Flutter available for Android and iOS for keeping track of your books.&lt;/h3&gt; &#xA;&lt;h4&gt;There are four lists provided so you won&#39;t get confused:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;books you finished,&lt;/li&gt; &#xA; &lt;li&gt;books you are currently reading,&lt;/li&gt; &#xA; &lt;li&gt;books you want to read later,&lt;/li&gt; &#xA; &lt;li&gt;books you didn&#39;t finish.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can use custom tags and filter through them.&lt;/p&gt; &#xA;&lt;h4&gt;A book can be added by:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;looking it up in the Open Library database,&lt;/li&gt; &#xA; &lt;li&gt;scanning its barcode,&lt;/li&gt; &#xA; &lt;li&gt;adding its details manually.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;You can also view some cool statistics!&lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;doc/gplay/app-mockup/Google Pixel 4 XL Screenshot 0.png&#34; width=&#34;19%&#34;&gt; &lt;img src=&#34;doc/gplay/app-mockup/Google Pixel 4 XL Screenshot 1.png&#34; width=&#34;19%&#34;&gt; &lt;img src=&#34;doc/gplay/app-mockup/Google Pixel 4 XL Screenshot 2.png&#34; width=&#34;19%&#34;&gt; &lt;img src=&#34;doc/gplay/app-mockup/Google Pixel 4 XL Screenshot 3.png&#34; width=&#34;19%&#34;&gt; &lt;img src=&#34;doc/gplay/app-mockup/Google Pixel 4 XL Screenshot 4.png&#34; width=&#34;19%&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Do you want to support Openreads development? You are welcome to take below actions:&lt;/p&gt; &#xA;&lt;h3&gt;ü™ô Become a Sponsor&lt;/h3&gt; &#xA;&lt;p&gt;Fund the project, or simply say thank you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/mateusz-bak&#34;&gt;&lt;img height=&#34;50&#34; alt=&#34;Become a GitHub Sponsor&#34; src=&#34;https://raw.githubusercontent.com/mateusz-bak/openreads/master/doc/github/button_become-a-github-sponsor.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.buymeacoffee.com/mateuszbak&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; height=&#34;50&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üì£ Spread the word about Openreads&lt;/h3&gt; &#xA;&lt;h4&gt;üëç Vote on Alternativeto.net&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://alternativeto.net/software/openreads/about/&#34;&gt;Alternativeto.net link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;üåü Give a star to the project&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mateusz-bak/openreads&#34;&gt;Github.com link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üìñ Translate Openreads&lt;/h3&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;https://hosted.weblate.org/engage/openreads/&#34;&gt;Weblate&lt;/a&gt; and help with the translations.&lt;/p&gt; &#xA;&lt;a href=&#34;https://hosted.weblate.org/engage/openreads/&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widgets/openreads/-/multi-auto.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;üêû Report bugs or new ideas&lt;/h3&gt; &#xA;&lt;p&gt;Submit an issue here: &lt;a href=&#34;https://github.com/mateusz-bak/openreads/issues&#34;&gt;Openreads issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;üìù Contributors guide&lt;/h3&gt; &#xA;&lt;p&gt;Take a look at our &lt;a href=&#34;https://raw.githubusercontent.com/mateusz-bak/openreads/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;üìÑ Attributions&lt;/h2&gt; &#xA;&lt;h3&gt;üëÅÔ∏è‚Äçüó®Ô∏è Icons&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fontawesome.com/&#34; title=&#34;Font Awesome&#34;&gt;Font Awesome&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ùì FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;What platforms is Openreads available for?&lt;/strong&gt; &lt;br&gt; The app is written in the cross-platform framework Flutter. Android and iOS versions are available. Be aware that releasing an app to the App Store requires paid Apple Developer account ($99 per year) so please consider donating.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Does Openreads support importing/exporting CSV file?&lt;/strong&gt;&lt;br&gt; Yes! See format of the CSV file: &lt;a href=&#34;https://raw.githubusercontent.com/mateusz-bak/openreads/master/doc/csv.md&#34;&gt;Openreads CSV format&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;From which apps can Openreads import CSV files?&lt;/strong&gt;&lt;br&gt; GoodReads, BookWyrm&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Which data providers does OpenReads use?&lt;/strong&gt;&lt;br&gt; Currently the one and only data source for the app is &lt;a href=&#34;https://openlibrary.org/&#34;&gt;OpenLibrary&lt;/a&gt;, a FOSS crowdsourced library. Other sources (like BookBrainz) are considered for the future. There are no plans to add proprietary sources to the app (see: &lt;a href=&#34;https://github.com/mateusz-bak/openreads/issues/90#issuecomment-1722339001&#34;&gt;https://github.com/mateusz-bak/openreads/issues/90#issuecomment-1722339001&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Is it possible to upload my book&#39;s data to OpenLibrary?&lt;/strong&gt;&lt;br&gt; Not for now; see &lt;a href=&#34;https://github.com/mateusz-bak/openreads/issues/85&#34;&gt;https://github.com/mateusz-bak/openreads/issues/85&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üèóÔ∏è Build Process&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone or download this repository&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/mateusz-bak/openreads.git&#xA;cd openreads&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download dependencies&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flutter pub get&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build and install the app on your device&lt;br&gt; ‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è&lt;br&gt; WARNING: If you already have the Openreads app installed on your device, this step will uninstall it before installing the debug version. This deletes all app data, to keep your books please make a backup first.&lt;br&gt; ‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è&lt;br&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flutter run&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>fluttercandies/flutter_image_compress</title>
    <updated>2024-02-11T01:28:36Z</updated>
    <id>tag:github.com,2024-02-11:/fluttercandies/flutter_image_compress</id>
    <link href="https://github.com/fluttercandies/flutter_image_compress" rel="alternate"></link>
    <summary type="html">&lt;p&gt;flutter image compress&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flutter_image_compress&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluttercandies/flutter_image_compress&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/fluttercandies-ImageCompress-blue.svg?sanitize=true&#34; alt=&#34;ImageCompress&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dartlang.org/packages/flutter_image_compress&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_image_compress.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_image_compress/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/fluttercandies/flutter_image_compress?style=flat-square&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_image_compress&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/fluttercandies/flutter_image_compress.svg?style=social&amp;amp;label=Stars&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/flutter?sort=votes&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&amp;amp;style=flat-square&#34; alt=&#34;Awesome Flutter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5bcc0gy&#34;&gt;&lt;img src=&#34;https://pub.idqqimg.com/wpa/images/group.png&#34; alt=&#34;FlutterCandies&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Compresses image as native plugin (Obj-C/Kotlin). This library works on Android and iOS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#flutter_image_compress&#34;&gt;flutter_image_compress&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#why-dont-you-use-dart-to-do-it&#34;&gt;Why don&#39;t you use dart to do it&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#about-common-params&#34;&gt;About common params&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#minwidth-and-minheight&#34;&gt;minWidth and minHeight&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#rotate&#34;&gt;rotate&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#autocorrectionangle&#34;&gt;autoCorrectionAngle&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#quality&#34;&gt;quality&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#format&#34;&gt;format&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#webp&#34;&gt;Webp&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#heifheic&#34;&gt;HEIF(Heic)&lt;/a&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#heif-for-ios&#34;&gt;Heif for iOS&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#heif-for-android&#34;&gt;Heif for Android&lt;/a&gt;&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#insamplesize&#34;&gt;inSampleSize&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#keepexif&#34;&gt;keepExif&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#result&#34;&gt;Result&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#about-listint-and-uint8list&#34;&gt;About &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; and &lt;code&gt;Uint8List&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#runtime-error&#34;&gt;Runtime Error&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#compressing-returns-null&#34;&gt;Compressing returns &lt;code&gt;null&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#about-exif-information&#34;&gt;About EXIF information&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#web&#34;&gt;Web&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#about-macos&#34;&gt;About macOS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_image_compress/main/#platform-features&#34;&gt;Platform Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why don&#39;t you use dart to do it&lt;/h2&gt; &#xA;&lt;p&gt;QÔºöDart already has image compression libraries. Why use native?&lt;/p&gt; &#xA;&lt;p&gt;AÔºöFor unknown reasons, image compression in Dart language is not efficient, even in release version. Using isolate does not solve the problem.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://pub.dev/packages/flutter_image_compress/versions&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_image_compress.svg?sanitize=true&#34; alt=&#34;pub&#34;&gt;&lt;/a&gt; version.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  flutter_image_compress: &amp;lt;latest_version&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or run this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter pub add flutter_image_compress&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;import the package in your code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter_image_compress/flutter_image_compress.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use as:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluttercandies/flutter_image_compress/raw/main/packages/flutter_image_compress/example/lib/main.dart&#34;&gt;See full example&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are several ways to use the library api.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;  // 1. compress file and get Uint8List&#xA;  Future&amp;lt;Uint8List&amp;gt; testCompressFile(File file) async {&#xA;    var result = await FlutterImageCompress.compressWithFile(&#xA;      file.absolute.path,&#xA;      minWidth: 2300,&#xA;      minHeight: 1500,&#xA;      quality: 94,&#xA;      rotate: 90,&#xA;    );&#xA;    print(file.lengthSync());&#xA;    print(result.length);&#xA;    return result;&#xA;  }&#xA;&#xA;  // 2. compress file and get file.&#xA;  Future&amp;lt;File&amp;gt; testCompressAndGetFile(File file, String targetPath) async {&#xA;    var result = await FlutterImageCompress.compressAndGetFile(&#xA;        file.absolute.path, targetPath,&#xA;        quality: 88,&#xA;        rotate: 180,&#xA;      );&#xA;&#xA;    print(file.lengthSync());&#xA;    print(result.lengthSync());&#xA;&#xA;    return result;&#xA;  }&#xA;&#xA;  // 3. compress asset and get Uint8List.&#xA;  Future&amp;lt;Uint8List&amp;gt; testCompressAsset(String assetName) async {&#xA;    var list = await FlutterImageCompress.compressAssetImage(&#xA;      assetName,&#xA;      minHeight: 1920,&#xA;      minWidth: 1080,&#xA;      quality: 96,&#xA;      rotate: 180,&#xA;    );&#xA;&#xA;    return list;&#xA;  }&#xA;&#xA;  // 4. compress Uint8List and get another Uint8List.&#xA;  Future&amp;lt;Uint8List&amp;gt; testComporessList(Uint8List list) async {&#xA;    var result = await FlutterImageCompress.compressWithList(&#xA;      list,&#xA;      minHeight: 1920,&#xA;      minWidth: 1080,&#xA;      quality: 96,&#xA;      rotate: 135,&#xA;    );&#xA;    print(list.length);&#xA;    print(result.length);&#xA;    return result;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;About common params&lt;/h2&gt; &#xA;&lt;h3&gt;minWidth and minHeight&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;minWidth&lt;/code&gt; and &lt;code&gt;minHeight&lt;/code&gt; are constraints on image scaling.&lt;/p&gt; &#xA;&lt;p&gt;For example, a 4000*2000 image, &lt;code&gt;minWidth&lt;/code&gt; set to 1920, &lt;code&gt;minHeight&lt;/code&gt; set to 1080, the calculation is as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Using dart as an example, the actual implementation is Kotlin or OC.&#xA;import &#39;dart:math&#39; as math;&#xA;&#xA;void main() {&#xA;  var scale = calcScale(&#xA;    srcWidth: 4000,&#xA;    srcHeight: 2000,&#xA;    minWidth: 1920,&#xA;    minHeight: 1080,&#xA;  );&#xA;&#xA;  print(&#34;scale = $scale&#34;); // scale = 1.8518518518518519&#xA;  print(&#34;target width = ${4000 / scale}, height = ${2000 / scale}&#34;); // target width = 2160.0, height = 1080.0&#xA;}&#xA;&#xA;double calcScale({&#xA;  double srcWidth,&#xA;  double srcHeight,&#xA;  double minWidth,&#xA;  double minHeight,&#xA;}) {&#xA;  var scaleW = srcWidth / minWidth;&#xA;  var scaleH = srcHeight / minHeight;&#xA;  var scale = math.max(1.0, math.min(scaleW, scaleH));&#xA;  return scale;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your image width is smaller than &lt;code&gt;minWidth&lt;/code&gt; or height smaller than &lt;code&gt;minHeight&lt;/code&gt;, scale will be 1, that is, the size will not change.&lt;/p&gt; &#xA;&lt;h3&gt;rotate&lt;/h3&gt; &#xA;&lt;p&gt;If you need to rotate the picture, use this parameter.&lt;/p&gt; &#xA;&lt;h3&gt;autoCorrectionAngle&lt;/h3&gt; &#xA;&lt;p&gt;This property only exists in the version after 0.5.0.&lt;/p&gt; &#xA;&lt;p&gt;And for historical reasons, there may be conflicts with rotate attributes, which need to be self-corrected.&lt;/p&gt; &#xA;&lt;p&gt;Modify rotate to 0 or autoCorrectionAngle to false.&lt;/p&gt; &#xA;&lt;h3&gt;quality&lt;/h3&gt; &#xA;&lt;p&gt;Quality of target image.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;format&lt;/code&gt; is png, the param will be ignored in iOS.&lt;/p&gt; &#xA;&lt;h3&gt;format&lt;/h3&gt; &#xA;&lt;p&gt;Supports jpeg or png, default is jpeg.&lt;/p&gt; &#xA;&lt;p&gt;The format class sign &lt;code&gt;enum CompressFormat&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Heif and webp Partially supported.&lt;/p&gt; &#xA;&lt;h4&gt;Webp&lt;/h4&gt; &#xA;&lt;p&gt;Support android by the system api (speed very nice). The library also supports iOS. However, we&#39;re using &lt;a href=&#34;https://github.com/SDWebImage/SDWebImageWebPCoder&#34;&gt;third-party libraries&lt;/a&gt;, it is not recommended due to encoding speed. In the future, &lt;code&gt;libwebp&lt;/code&gt; by google (C/C++) may be used to do coding work, bypassing other three-party libraries, but there are no plan for that currently.&lt;/p&gt; &#xA;&lt;h4&gt;HEIF(Heic)&lt;/h4&gt; &#xA;&lt;h5&gt;Heif for iOS&lt;/h5&gt; &#xA;&lt;p&gt;Only support iOS 11+.&lt;/p&gt; &#xA;&lt;h5&gt;Heif for Android&lt;/h5&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://developer.android.com/reference/androidx/heifwriter/HeifWriter.html&#34;&gt;HeifWriter&lt;/a&gt; for the implementation.&lt;/p&gt; &#xA;&lt;p&gt;Only support API 28+.&lt;/p&gt; &#xA;&lt;p&gt;And may require hardware encoder support, does not guarantee that all devices &lt;em&gt;above&lt;/em&gt; API 28 are available.&lt;/p&gt; &#xA;&lt;h3&gt;inSampleSize&lt;/h3&gt; &#xA;&lt;p&gt;The param is only support android.&lt;/p&gt; &#xA;&lt;p&gt;For a description of this parameter, see the &lt;a href=&#34;https://developer.android.com/reference/android/graphics/BitmapFactory.Options.html#inSampleSize&#34;&gt;Android official website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;keepExif&lt;/h3&gt; &#xA;&lt;p&gt;If this parameter is true, EXIF information is saved in the compressed result.&lt;/p&gt; &#xA;&lt;p&gt;Attention should be paid to the following points:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Default value is false.&lt;/li&gt; &#xA; &lt;li&gt;Even if set to true, the direction attribute is not included.&lt;/li&gt; &#xA; &lt;li&gt;Only support jpg format, PNG format does not support.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Result&lt;/h2&gt; &#xA;&lt;p&gt;The result of returning a List collection will not have null, but will always be an empty array.&lt;/p&gt; &#xA;&lt;p&gt;The returned file may be null. In addition, please decide for yourself whether the file exists.&lt;/p&gt; &#xA;&lt;h3&gt;About &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; and &lt;code&gt;Uint8List&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You may need to convert &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; to &lt;code&gt;Uint8List&lt;/code&gt; to display images.&lt;/p&gt; &#xA;&lt;p&gt;To use &lt;code&gt;Uint8List&lt;/code&gt;, you need import package to your code like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CaiJingLong/asset_for_picgo/master/20190519111735.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final image = Uint8List.fromList(imageList);&#xA;ImageProvider provider = MemoryImage(Uint8List.fromList(imageList));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Usage in &lt;code&gt;Image&lt;/code&gt; Widget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;Widget&amp;gt; _compressImage() async {&#xA;  List&amp;lt;int&amp;gt; image = await testCompressFile(file);&#xA;  ImageProvider provider = MemoryImage(Uint8List.fromList(image));&#xA;  imageWidget = Image(&#xA;    image: provider ?? AssetImage(&#39;img/img.jpg&#39;),&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Write to file usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;void&amp;gt; writeToFile(List&amp;lt;int&amp;gt; image, String filePath) {&#xA;  return File(filePath).writeAsBytes(image, flush: true);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Runtime Error&lt;/h2&gt; &#xA;&lt;p&gt;Because of some support issues, all APIs will be compatible with format and system compatibility, and an exception (&lt;code&gt;UnsupportedError&lt;/code&gt;) may be thrown, so if you insist on using webp and heic formats, please catch the exception yourself and use it on unsupported devices jpeg compression.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;Uint8List&amp;gt; compressAndTryCatch(String path) async {&#xA;  Uint8List result;&#xA;  try {&#xA;    result = await FlutterImageCompress.compressWithFile(&#xA;      path,&#xA;      format: CompressFormat.heic,&#xA;    );&#xA;  } on UnsupportedError catch (e) {&#xA;    print(e);&#xA;    result = await FlutterImageCompress.compressWithFile(&#xA;      path,&#xA;      format: CompressFormat.jpeg,&#xA;    );&#xA;  }&#xA;  return result;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Android&lt;/h2&gt; &#xA;&lt;p&gt;You may need to update Kotlin to version &lt;code&gt;1.5.21&lt;/code&gt; or higher.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Compressing returns &lt;code&gt;null&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes, compressing will return null. You should check if you can read/write the file, and the parent folder of the target file must exist.&lt;/p&gt; &#xA;&lt;p&gt;For example, use the &lt;a href=&#34;https://pub.dartlang.org/packages/path_provide&#34;&gt;path_provider&lt;/a&gt; plugin to access some application folders, and use a permission plugin to request permission to access SD cards on Android/iOS.&lt;/p&gt; &#xA;&lt;h2&gt;About EXIF information&lt;/h2&gt; &#xA;&lt;p&gt;Using this library, EXIF information will be removed by default.&lt;/p&gt; &#xA;&lt;p&gt;EXIF information can be retained by setting keepExif to true, but not &lt;code&gt;direction&lt;/code&gt; information.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PNG/JPEG encoder: System API.&lt;/li&gt; &#xA; &lt;li&gt;WebP encoder: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/SDWebImage/SDWebImageWebPCoder&#34;&gt;SDWebImageWebPCoder&lt;/a&gt; on iOS.&lt;/li&gt; &#xA;   &lt;li&gt;System API on Android.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;HEIF encoder: System API. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/jetpack/androidx/releases/heifwriter&#34;&gt;HeifWriter&lt;/a&gt; on Android P+.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Web&lt;/h2&gt; &#xA;&lt;p&gt;The web implementation is not required for many people,&lt;/p&gt; &#xA;&lt;p&gt;This plugin uses &lt;a href=&#34;https://www.npmjs.com/package/pica?activeTab=readme&#34;&gt;pica&lt;/a&gt; to implement compression.&lt;/p&gt; &#xA;&lt;p&gt;Currently, &lt;a href=&#34;https://github.com/flutter/flutter/issues/126131&#34;&gt;debug mode does not allow you to use the dynamic script loading scheme&lt;/a&gt;. And when you actually deploy, you may choose server deployment or cdn deployment, so here we suggest you add script node to head or body by yourself in your &lt;code&gt;&amp;lt;flutte_project&amp;gt;/web/index.html&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Add for &lt;code&gt;&amp;lt;flutte_project&amp;gt;/web/index.html&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/pica@9.0.1/dist/pica.min.js&#34; &amp;gt;&amp;lt;/script&amp;gt;&#xA;&#xA;&amp;lt;!-- or --&amp;gt;&#xA;&#xA;&amp;lt;script src=&#34;https://unpkg.com/pica/dist/pica.min.js&#34; &amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;About web compatibility: two methods with file will throw an exception when used on the web.&lt;/p&gt; &#xA;&lt;h2&gt;About macOS&lt;/h2&gt; &#xA;&lt;p&gt;You need change the minimum deployment target to 10.15.&lt;/p&gt; &#xA;&lt;p&gt;Open xcode project, select Runner target, and change the value of &lt;code&gt;macOS Deployment Target&lt;/code&gt; to &lt;code&gt;10.15&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;And, change the &lt;code&gt;Podfile&lt;/code&gt;: Change &lt;code&gt;platform&lt;/code&gt; to &lt;code&gt;platform :osx, &#39;10.15&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Platform Features&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Feature&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Web&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;macOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method: compressWithList&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method: compressAssetImage&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method: compressWithFile&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method: compressAndGetFile&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;format: jpeg&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;format: png&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;format: webp&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob#browser_compatibility&#34; title=&#34;Browser support&#34;&gt;üåê&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;format: heic&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;param: quality&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob#browser_compatibility&#34; title=&#34;Browser support&#34;&gt;üåê&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;param: rotate&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;param: keepExif&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>