<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-26T01:37:26Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bostrot/wsl2-distro-manager</title>
    <updated>2022-07-26T01:37:26Z</updated>
    <id>tag:github.com,2022-07-26:/bostrot/wsl2-distro-manager</id>
    <link href="https://github.com/bostrot/wsl2-distro-manager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A GUI to quickly manage your WSL2 instances&lt;/p&gt;&lt;hr&gt;&lt;a title=&#34;Made with Fluent Design&#34; href=&#34;https://github.com/bdlukaa/fluent_ui&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/fluent-design-blue?style=flat-square&amp;amp;color=7A7574&amp;amp;labelColor=0078D7&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;WSL Distro Manager&lt;/h1&gt; &#xA;&lt;p&gt;A quick way to manage your WSL instances with a GUI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7342321/161707979-f4c3091f-3f24-475e-87d4-0157caafab2a.png&#34; alt=&#34;Preview with Darkmode&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/7342321/161708030-4f39a89e-7a2d-4460-b002-da7a619d6302.png&#34;&gt;Here&lt;/a&gt; is how it looks in Lightmode if you are into that.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;This app is available on the &lt;a href=&#34;https://www.microsoft.com/store/productId/9NWS9K95NMJB&#34;&gt;Windows Store&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;as a direct download from the &lt;a href=&#34;https://github.com/bostrot/wsl2-distro-manager/releases&#34;&gt;Releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;winget install Bostrot.WSLManager&lt;/code&gt; (outdated version)&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;Enable Flutter Desktop &lt;code&gt;flutter config --enable-windows-desktop&lt;/code&gt; (&lt;a href=&#34;https://flutter.dev/desktop&#34;&gt;https://flutter.dev/desktop&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;flutter upgrade&lt;/p&gt; &#xA;&lt;p&gt;Run with &lt;code&gt;flutter run -d windows&lt;/code&gt; and build with &lt;code&gt;flutter build windows&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why&lt;/h2&gt; &#xA;&lt;p&gt;WSL is great. It makes it very simple to spin up new workplaces with different systems for the project you need or just testing.&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;Fairly simple. Download the latest release from the releases Page and start wsl2distromanager.exe&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Starting the program. YAY!&lt;/li&gt; &#xA; &lt;li&gt;Quick Actions (execute pre-defined scripts directly on your instances for quick configurations)&lt;/li&gt; &#xA; &lt;li&gt;Download and use Turnkey or other LXC containers (experimental, tested with e.g. Turnkey Wordpress)&lt;/li&gt; &#xA; &lt;li&gt;Use your own repository for rootfs&#39; or LXC containers&lt;/li&gt; &#xA; &lt;li&gt;List WSL&lt;/li&gt; &#xA; &lt;li&gt;Copy WSL&lt;/li&gt; &#xA; &lt;li&gt;Delete WSL&lt;/li&gt; &#xA; &lt;li&gt;Start WSL&lt;/li&gt; &#xA; &lt;li&gt;Rename WSL&lt;/li&gt; &#xA; &lt;li&gt;Create WSL&lt;/li&gt; &#xA; &lt;li&gt;Download WSL&lt;/li&gt; &#xA; &lt;li&gt;Select rootfs from storage&lt;/li&gt; &#xA; &lt;li&gt;and more but I am tired of writing already ... Feel free to open a PR.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What works&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Starting the program. YAY!&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Quick Actions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; List WSL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Copy WSL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Delete WSL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Start WSL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Rename WSL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Create WSL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Download WSL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Select rootfs from storage&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Use turnkey/LXC images as base&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;How do I access my Turnkey instance? (e.g. Wordpress)&lt;/h3&gt; &#xA;&lt;p&gt;Turnkey instances can be inited with &lt;code&gt;turnkey-init&lt;/code&gt; in console. This will let you choose new passwords for your services.&lt;/p&gt; &#xA;&lt;h3&gt;What does it mean that it installs &#34;fake_systemd&#34; with Turnkey?&lt;/h3&gt; &#xA;&lt;p&gt;As systemd is not officially supported in WSL (yet) &lt;a href=&#34;https://github.com/bostrot/fake-systemd&#34;&gt;fake_systemd&lt;/a&gt; is a custom fork from @kvaps specifically for WSL so that Turnkey services will actually startup when opening the instance.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;You are very welcome to contribute to this project in order to make it better.&lt;/p&gt; &#xA;&lt;h3&gt;Docs&lt;/h3&gt; &#xA;&lt;p&gt;Currently only the WSL API is documented with dart doc. You can find the documentation &lt;a href=&#34;https://bostrot.github.io/wsl2-distro-manager/api/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code contributions&lt;/h3&gt; &#xA;&lt;p&gt;If you have made a code contribution feel free to open a PR and/or an issue.&lt;/p&gt; &#xA;&lt;h3&gt;Language contributions&lt;/h3&gt; &#xA;&lt;p&gt;Localizations are saved in &lt;code&gt;/lib/i18n/&lt;/code&gt; as json files. New languages can be added either directly in the appropriate json file (e.g. &lt;code&gt;en.json&lt;/code&gt;) or via the localizations &lt;a href=&#34;https://github.com/Flutterando/localization/releases&#34;&gt;windows/mac application&lt;/a&gt; which provides a GUI.&lt;/p&gt; &#xA;&lt;p&gt;As of some restrictions with fluent_ui package currently it is easier not to use the country code in the file name so instead of &lt;code&gt;en_US.json&lt;/code&gt; just &lt;code&gt;en.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to publish a PR :)&lt;/p&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;You need more help but the FAQ did not help?&lt;/p&gt; &#xA;&lt;p&gt;Contact me on Telegram &lt;a href=&#34;https://t.me/bostrot_bot&#34;&gt;@bostrot_bot&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Or just open an issue here.&lt;/p&gt; &#xA;&lt;h2&gt;Stuff&lt;/h2&gt; &#xA;&lt;h3&gt;Create signed msix package&lt;/h3&gt; &#xA;&lt;p&gt;(Only for maintainers with build certificate)&lt;/p&gt; &#xA;&lt;p&gt;To create a signed msix package set the .githooks directory as your git hooks directory:&lt;/p&gt; &#xA;&lt;p&gt;git config --local core.hooksPath .githooks/&lt;/p&gt; &#xA;&lt;p&gt;Then it will update version numbers, build sign and commit everything with the push. This will take the configuration from the file &lt;code&gt;certs/pubspec.yaml&lt;/code&gt; and replace the version (&lt;code&gt;xxx&lt;/code&gt; in the pubspec.yaml) with the current version from the running pubspec file.&lt;/p&gt; &#xA;&lt;p&gt;You can also sign it manually by adding the msix config to the end of the pubspec.yaml file and then run &lt;code&gt;flutter pub run msix:create&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This project is made with [Flutter](https://flutter.dev/docs) for Desktop :)&#xA;&#xA;Sign package for Windows Store: flutter build windows &amp;amp;&amp;amp; flutter pub run msix:create&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>abdullahmansss/udemy</title>
    <updated>2022-07-26T01:37:26Z</updated>
    <id>tag:github.com,2022-07-26:/abdullahmansss/udemy</id>
    <link href="https://github.com/abdullahmansss/udemy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;udemy_flutter&lt;/h1&gt; &#xA;&lt;p&gt;A new Flutter application.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This project is a starting point for a Flutter application.&lt;/p&gt; &#xA;&lt;p&gt;A few resources to get you started if this is your first Flutter project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/codelab&#34;&gt;Lab: Write your first Flutter app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/cookbook&#34;&gt;Cookbook: Useful Flutter samples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For help getting started with Flutter, view our &lt;a href=&#34;https://flutter.dev/docs&#34;&gt;online documentation&lt;/a&gt;, which offers tutorials, samples, guidance on mobile development, and a full API reference.&lt;/p&gt;</summary>
  </entry>
</feed>