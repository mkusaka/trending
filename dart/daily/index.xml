<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-01T01:38:49Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hivedb/hive</title>
    <updated>2022-07-01T01:38:49Z</updated>
    <id>tag:github.com,2022-07-01:/hivedb/hive</id>
    <link href="https://github.com/hivedb/hive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight and blazing fast key-value database written in pure Dart.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hivedb/hive/master/.github/logo_transparent.svg?sanitize=true&#34; width=&#34;350px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Fast, Enjoyable &amp;amp; Secure NoSQL Database&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hivedb/hive/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/hivedb/hive/Dart%20CI/nndb?label=tests&amp;amp;labelColor=333940&amp;amp;logo=github&#34; alt=&#34;GitHub Workflow Status (branch)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/hivedb/hive&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/hivedb/hive/nndb?labelColor=333940&amp;amp;logo=codecov&amp;amp;logoColor=white&#34; alt=&#34;Codecov branch&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/hive&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/hive?label=pub.dev&amp;amp;labelColor=333940&amp;amp;logo=dart&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hivedb/hive/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/hivedb/hive?color=%23007A88&amp;amp;labelColor=333940&amp;amp;logo=apache&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hive is a lightweight and blazing fast key-value database written in pure Dart. Inspired by &lt;a href=&#34;https://en.wikipedia.org/wiki/Bitcask&#34;&gt;Bitcask&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://docs.hivedb.dev/&#34;&gt;Documentation &amp;amp; Samples&lt;/a&gt; üìñ&lt;/h3&gt; &#xA;&lt;p&gt;If you need queries, multi-isolate support or links between objects check out &lt;a href=&#34;https://github.com/isar/isar&#34;&gt;Isar Database&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üöÄ Cross platform: mobile, desktop, browser&lt;/li&gt; &#xA; &lt;li&gt;‚ö° Great performance (see &lt;a href=&#34;https://raw.githubusercontent.com/hivedb/hive/master/#benchmark&#34;&gt;benchmark&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;‚ù§Ô∏è Simple, powerful, &amp;amp; intuitive API&lt;/li&gt; &#xA; &lt;li&gt;üîí Strong encryption built in&lt;/li&gt; &#xA; &lt;li&gt;üéà &lt;strong&gt;NO&lt;/strong&gt; native dependencies&lt;/li&gt; &#xA; &lt;li&gt;üîã Batteries included&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://docs.hivedb.dev&#34;&gt;Quick Start&lt;/a&gt; documentation to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can use Hive just like a map. It is not necessary to await &lt;code&gt;Futures&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var box = Hive.box(&#39;myBox&#39;);&#xA;&#xA;box.put(&#39;name&#39;, &#39;David&#39;);&#xA;&#xA;var name = box.get(&#39;name&#39;);&#xA;&#xA;print(&#39;Name: $name&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;BoxCollections&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;BoxCollections&lt;/code&gt; are a set of boxes which can be similarly used as normal boxes, except of that they dramatically improve speed on web. They support opening and closing all boxes of a collection at once and more efficiently store data in indexed DB on web.&lt;/p&gt; &#xA;&lt;p&gt;Aside, they also expose Transactions which can be used to speed up tremendous numbers of database transactions on web.&lt;/p&gt; &#xA;&lt;p&gt;On &lt;code&gt;dart:io&lt;/code&gt; platforms, there is no performance gain by BoxCollections or Transactions. Only BoxCollections might be useful for some box hierarchy and development experience.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Create a box collection&#xA;  final collection = await BoxCollection.open(&#xA;    &#39;MyFirstFluffyBox&#39;, // Name of your database&#xA;    {&#39;cats&#39;, &#39;dogs&#39;}, // Names of your boxes&#xA;    path: &#39;./&#39;, // Path where to store your boxes (Only used in Flutter / Dart IO)&#xA;    key: HiveCipher(), // Key to encrypt your boxes (Only used in Flutter / Dart IO)&#xA;  );&#xA;&#xA;  // Open your boxes. Optional: Give it a type.&#xA;  final catsBox = collection.openBox&amp;lt;Map&amp;gt;(&#39;cats&#39;);&#xA;&#xA;  // Put something in&#xA;  await catsBox.put(&#39;fluffy&#39;, {&#39;name&#39;: &#39;Fluffy&#39;, &#39;age&#39;: 4});&#xA;  await catsBox.put(&#39;loki&#39;, {&#39;name&#39;: &#39;Loki&#39;, &#39;age&#39;: 2});&#xA;&#xA;  // Get values of type (immutable) Map?&#xA;  final loki = await catsBox.get(&#39;loki&#39;);&#xA;  print(&#39;Loki is ${loki?[&#39;age&#39;]} years old.&#39;);&#xA;&#xA;  // Returns a List of values&#xA;  final cats = await catsBox.getAll([&#39;loki&#39;, &#39;fluffy&#39;]);&#xA;  print(cats);&#xA;&#xA;  // Returns a List&amp;lt;String&amp;gt; of all keys&#xA;  final allCatKeys = await catsBox.getAllKeys();&#xA;  print(allCatKeys);&#xA;&#xA;  // Returns a Map&amp;lt;String, Map&amp;gt; with all keys and entries&#xA;  final catMap = await catsBox.getAllValues();&#xA;  print(catMap);&#xA;&#xA;  // delete one or more entries&#xA;  await catsBox.delete(&#39;loki&#39;);&#xA;  await catsBox.deleteAll([&#39;loki&#39;, &#39;fluffy&#39;]);&#xA;&#xA;  // ...or clear the whole box at once&#xA;  await catsBox.clear();&#xA;&#xA;  // Speed up write actions with transactions&#xA;  await collection.transaction(&#xA;    () async {&#xA;      await catsBox.put(&#39;fluffy&#39;, {&#39;name&#39;: &#39;Fluffy&#39;, &#39;age&#39;: 4});&#xA;      await catsBox.put(&#39;loki&#39;, {&#39;name&#39;: &#39;Loki&#39;, &#39;age&#39;: 2});&#xA;      // ...&#xA;    },&#xA;    boxNames: [&#39;cats&#39;], // By default all boxes become blocked.&#xA;    readOnly: false,&#xA;  );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Store objects&lt;/h2&gt; &#xA;&lt;p&gt;Hive not only supports primitives, lists and maps but also any Dart object you like. You need to generate a type adapter before you can store objects.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;@HiveType(typeId: 0)&#xA;class Person extends HiveObject {&#xA;&#xA;  @HiveField(0)&#xA;  String name;&#xA;&#xA;  @HiveField(1)&#xA;  int age;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Extending &lt;code&gt;HiveObject&lt;/code&gt; is optional but it provides handy methods like &lt;code&gt;save()&lt;/code&gt; and &lt;code&gt;delete()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var box = await Hive.openBox(&#39;myBox&#39;);&#xA;&#xA;var person = Person()&#xA;  ..name = &#39;Dave&#39;&#xA;  ..age = 22;&#xA;box.add(person);&#xA;&#xA;print(box.getAt(0)); // Dave - 22&#xA;&#xA;person.age = 30;&#xA;person.save();&#xA;&#xA;print(box.getAt(0)) // Dave - 30&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Hive ‚ù§Ô∏è Flutter&lt;/h2&gt; &#xA;&lt;p&gt;Hive was written with Flutter in mind. It is a perfect fit if you need a lightweight datastore for your app. After adding the required dependencies and initializing Hive, you can use Hive in your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:hive/hive.dart&#39;;&#xA;import &#39;package:hive_flutter/hive_flutter.dart&#39;;&#xA;&#xA;class SettingsPage extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return ValueListenableBuilder(&#xA;      valueListenable: Hive.box(&#39;settings&#39;).listenable(),&#xA;      builder: (context, box, widget) {&#xA;        return Switch(&#xA;          value: box.get(&#39;darkMode&#39;),&#xA;          onChanged: (val) {&#xA;            box.put(&#39;darkMode&#39;, val);&#xA;          }&#xA;        );&#xA;      },&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Boxes are cached and therefore fast enough to be used directly in the &lt;code&gt;build()&lt;/code&gt; method of Flutter widgets.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmark&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;1000 read iterations&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;1000 write iterations&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hivedb/hive/master/.github/benchmark_read.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hivedb/hive/master/.github/benchmark_write.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SharedPreferences is on par with Hive when it comes to read performance. SQLite performs much worse.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hive greatly outperforms SQLite and SharedPreferences when it comes to writing or deleting.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The benchmark was performed on a Oneplus 6T with Android Q. You can &lt;a href=&#34;https://github.com/hivedb/hive_benchmark&#34;&gt;run the benchmark yourself&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;*Take this benchmark with a grain of salt. It is very hard to compare databases objectively since they were made for different purposes.&lt;/p&gt; &#xA;&lt;h3&gt;Licence&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2019 Simon Leier&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Baseflow/flutter-permission-handler</title>
    <updated>2022-07-01T01:38:49Z</updated>
    <id>tag:github.com,2022-07-01:/Baseflow/flutter-permission-handler</id>
    <link href="https://github.com/Baseflow/flutter-permission-handler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Permission plugin for Flutter. This plugin provides a cross-platform (iOS, Android) API to request and check permissions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter permission_handler plugin&lt;/h1&gt; &#xA;&lt;p&gt;The Flutter permission_handler plugin is build following the federated plugin architecture. A detailed explanation of the federated plugin concept can be found in the &lt;a href=&#34;https://flutter.dev/docs/development/packages-and-plugins/developing-packages#federated-plugins&#34;&gt;Flutter documentation&lt;/a&gt;. This means the permission_handler plugin is separated into the following packages:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/permission_handler&#34;&gt;&lt;code&gt;permission_handler&lt;/code&gt;&lt;/a&gt;: the app facing package. This is the package users depend on to use the plugin in their project. For details on how to use the &lt;code&gt;permission_handler&lt;/code&gt; plugin you can refer to its &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-permission-handler/master/permission_handler/README.md&#34;&gt;README.md&lt;/a&gt; file. At this moment the Android and iOS platform implementations are also part of this package. Additional platform support will be added in their own individual &#34;platform package(s)&#34;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/permission_handler_platform_interface&#34;&gt;&lt;code&gt;permission_handler_platform_interface&lt;/code&gt;&lt;/a&gt;: this packages declares the interface which all platform packages must implement to support the app-facing package. Instructions on how to implement a platform packages can be found int the &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-permission-handler/master/permission_handler_platform_interface/README.md&#34;&gt;README.md&lt;/a&gt; of the &lt;code&gt;permission_handler_platform_interface&lt;/code&gt; package.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>GitJournal/GitJournal</title>
    <updated>2022-07-01T01:38:49Z</updated>
    <id>tag:github.com,2022-07-01:/GitJournal/GitJournal</id>
    <link href="https://github.com/GitJournal/GitJournal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mobile first Note Taking integrated with Git&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;400&#34; height=&#34;auto&#34; src=&#34;https://gitjournal.io/images/logo.png&#34;&gt; &lt;br&gt;Mobile first Markdown Notes integrated with Git &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=io.gitjournal.gitjournal&amp;amp;utm_source=github&amp;amp;utm_medium=link&#34;&gt;&lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://gitjournal.io/images/android-store-badge.png&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://apps.apple.com/app/gitjournal/id1466519634&amp;amp;utm_source=github&amp;amp;utm_medium=link&#34;&gt;&lt;img alt=&#34;Download on the App Store&#34; src=&#34;https://gitjournal.io/images/ios-store-badge.svg?sanitize=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://circleci.com/gh/GitJournal/GitJournal&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://circleci.com/gh/GitJournal/GitJournal.svg?style=svg&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/agpl-3.0&#34;&gt;&lt;img alt=&#34;License: AGPL v3&#34; src=&#34;https://img.shields.io/badge/License-AGPL%20v3-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://api.reuse.software/info/github.com/GitJournal/GitJournal&#34;&gt;&lt;img alt=&#34;REUSE status&#34; src=&#34;https://api.reuse.software/badge/github.com/GitJournal/GitJournal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/vHanda&#34;&gt;&lt;img alt=&#34;Donate via GitHub&#34; src=&#34;https://img.shields.io/badge/Sponsor-Github-%235a353&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://en.cryptobadges.io/donate/bc1qe97tgx5sndlk6ynz0e7na0hseevwy5uydk369r&#34;&gt;&lt;img alt=&#34;Donate via Bitcoin&#34; src=&#34;https://en.cryptobadges.io/badge/micro/bc1qe97tgx5sndlk6ynz0e7na0hseevwy5uydk369r&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://en.cryptobadges.io/donate/0xD4964e0E9A8Ca8A0be8db717690D888Aa5e92DcD&#34;&gt;&lt;img alt=&#34;Donate via Bitcoin&#34; src=&#34;https://en.cryptobadges.io/badge/micro/0xD4964e0E9A8Ca8A0be8db717690D888Aa5e92DcD&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Summary&lt;/h1&gt; &#xA;&lt;p&gt;GitJournal is a note taking app focused on privacy and data portability. It stores all its notes in a standardized Markdown + YAML header format (optional). The notes are stored in a Git Repo of your choice - GitHub / Gitlab / Custom-provider. This means you can easily self host or host your notes in one of the many &lt;a href=&#34;https://raw.githubusercontent.com/GitJournal/GitJournal/master/docs/git_hosts.md&#34;&gt;Git providers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://discord.gg/abBwyEK&#34;&gt;Discord Server&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reddit Community&lt;/strong&gt; - &lt;a href=&#34;https://www.reddit.com/r/GitJournal/&#34;&gt;Join Us&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Newsletter&lt;/strong&gt; - &lt;a href=&#34;https://gitjournal.io/newsletter&#34;&gt;Signup Here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Twitter&lt;/strong&gt; - &lt;a href=&#34;https://twitter.com/GitJournalApp&#34;&gt;Follow for Updates&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://gitjournal.io/screenshots/android/2020-06-04/en-GB/images/phoneScreenshots/Nexus 6P-1.png&#34; width=&#34;240&#34; height=&#34;auto&#34;&gt; &lt;img src=&#34;https://gitjournal.io/screenshots/android/2020-06-04/en-GB/images/phoneScreenshots/Nexus 6P-2.png&#34; width=&#34;240&#34; height=&#34;auto&#34;&gt; &lt;img src=&#34;https://gitjournal.io/screenshots/android/2020-06-04/en-GB/images/phoneScreenshots/Nexus 6P-4.png&#34; width=&#34;240&#34; height=&#34;auto&#34;&gt; &lt;img src=&#34;https://gitjournal.io/screenshots/android/2020-06-04/en-GB/images/phoneScreenshots/Nexus 6P-5.png&#34; width=&#34;240&#34; height=&#34;auto&#34;&gt; &lt;img src=&#34;https://gitjournal.io/screenshots/android/2020-06-04/en-GB/images/phoneScreenshots/Nexus 6P-6.png&#34; width=&#34;240&#34; height=&#34;auto&#34;&gt; &lt;img src=&#34;https://gitjournal.io/screenshots/android/2020-06-04/en-GB/images/phoneScreenshots/Nexus 6P-7.png&#34; width=&#34;240&#34; height=&#34;auto&#34;&gt; &lt;img src=&#34;https://gitjournal.io/screenshots/android/2020-06-04/en-GB/images/phoneScreenshots/Nexus 6P-16.png&#34; width=&#34;240&#34; height=&#34;auto&#34;&gt; &lt;img src=&#34;https://gitjournal.io/screenshots/android/2020-06-04/en-GB/images/phoneScreenshots/Nexus 6P-11.png&#34; width=&#34;240&#34; height=&#34;auto&#34;&gt; &lt;img src=&#34;https://gitjournal.io/screenshots/android/2020-06-04/en-GB/images/phoneScreenshots/Nexus 6P-13.png&#34; width=&#34;240&#34; height=&#34;auto&#34;&gt; &lt;img src=&#34;https://gitjournal.io/screenshots/android/2020-06-04/en-GB/images/phoneScreenshots/Nexus 6P-12.png&#34; width=&#34;240&#34; height=&#34;auto&#34;&gt; &lt;img src=&#34;https://gitjournal.io/screenshots/android/2020-06-04/en-GB/images/phoneScreenshots/Nexus 6P-18.png&#34; width=&#34;240&#34; height=&#34;auto&#34;&gt; &lt;img src=&#34;https://gitjournal.io/screenshots/android/2020-06-04/en-GB/images/phoneScreenshots/Nexus 6P-20.png&#34; width=&#34;240&#34; height=&#34;auto&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Migrating from Existing Apps&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vHanda/google-keep-exporter&#34;&gt;Google Keep&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/sanzoghenzo/fb5011aa566292a4eb1b62fc7a4a50cc&#34;&gt;Day One Classic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/sanzoghenzo/fb5011aa566292a4eb1b62fc7a4a50cc&#34;&gt;Narrate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/isae/gitjournal-simplenote-exporter&#34;&gt;Simplenote&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please feel free to &lt;a href=&#34;https://github.com/GitJournal/GitJournal/issues/new&#34;&gt;open an issue&lt;/a&gt; for any bug or feature request. Additionally, you can vote on existing &lt;a href=&#34;https://github.com/GitJournal/GitJournal/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc&#34;&gt;Issues&lt;/a&gt; by reacting with a &#39;üëç&#39;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Most of GitJournal code is licensed under AGPL, however the documentation (including this file) and translations are under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>