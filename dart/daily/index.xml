<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-01T01:31:07Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>intel/rohd</title>
    <updated>2025-07-01T01:31:07Z</updated>
    <id>tag:github.com,2025-07-01:/intel/rohd</id>
    <link href="https://github.com/intel/rohd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Rapid Open Hardware Development (ROHD) framework is a framework for describing and verifying hardware in the Dart programming language.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;ROHD&#34; src=&#34;https://intel.github.io/rohd-website/assets/images/rohd_logo_w_white_background.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Rapid Open Hardware Development (ROHD) Framework&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/intel/rohd/actions/workflows/general.yml&#34;&gt;&lt;img src=&#34;https://github.com/intel/rohd/actions/workflows/general.yml/badge.svg?event=push&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://intel.github.io/rohd/rohd/rohd-library.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/API%20Docs-generated-success&#34; alt=&#34;API Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/jubxF84yGw&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1001179329411166267?label=Chat&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/intel/rohd/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-BSD--3-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/intel/rohd/raw/main/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg?sanitize=true&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ROHD (pronounced like &#34;road&#34;) is a framework for describing and verifying hardware in the Dart programming language.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For documentation, guides, and more, &lt;a href=&#34;https://intel.github.io/rohd-website/&#34;&gt;&lt;strong&gt;visit the ROHD Website!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://intel.github.io/rohd-website/get-started/overview/&#34;&gt;Install now&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dartpad.dev/?id=375e800a9d0bd402c9bfa5ebe2210c40&#34;&gt;Try it in-browser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://intel.github.io/rohd-website/docs/sample-example/&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/intel/rohd/tree/main/doc/tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@ROHD-DEV&#34;&gt;YouTube Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://intel.github.io/rohd/rohd/rohd-library.html&#34;&gt;API Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://intel.github.io/rohd-website/blog/&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/intel/rohd/raw/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also open this repository in a GitHub Codespace to run the example in your browser with a full IDE. This is also an easy way to get started with contributions!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/codespaces/new?hide_repo_select=true&amp;amp;ref=main&amp;amp;repo=409325108&#34;&gt;&lt;img src=&#34;https://github.com/codespaces/badge.svg?sanitize=true&#34; alt=&#34;Open in GitHub Codespaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Get involved&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/jubxF84yGw&#34;&gt;Join the Discord chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://intel.github.io/rohd-website/forum/rohd-forum/&#34;&gt;Attend the ROHD Forum meetings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/intel/rohd/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About ROHD&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full power of the modern &lt;strong&gt;Dart language&lt;/strong&gt; for hardware design and verification&lt;/li&gt; &#xA; &lt;li&gt;Makes &lt;strong&gt;validation collateral&lt;/strong&gt; simpler to develop and debug. The &lt;a href=&#34;https://github.com/intel/rohd-vf&#34;&gt;ROHD Verification Framework&lt;/a&gt; helps build well-structured testbenches.&lt;/li&gt; &#xA; &lt;li&gt;Develop &lt;strong&gt;layers of abstraction&lt;/strong&gt; within a hardware design, making it more flexible and powerful&lt;/li&gt; &#xA; &lt;li&gt;Easy &lt;strong&gt;IP integration&lt;/strong&gt; and &lt;strong&gt;interfaces&lt;/strong&gt;; using an IP is as easy as an import. Reduces tedious, redundant, and error prone aspects of integration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple and fast build&lt;/strong&gt;, free of complex build systems and EDA vendor tools&lt;/li&gt; &#xA; &lt;li&gt;Can use the excellent pub.dev &lt;strong&gt;package manager&lt;/strong&gt; and all the packages it has to offer&lt;/li&gt; &#xA; &lt;li&gt;Built-in event-based &lt;strong&gt;fast simulator&lt;/strong&gt; with &lt;strong&gt;4-value&lt;/strong&gt; (0, 1, X, and Z) support and a &lt;strong&gt;waveform dumper&lt;/strong&gt; to .vcd file format&lt;/li&gt; &#xA; &lt;li&gt;Conversion of modules to equivalent, human-readable, structurally similar &lt;strong&gt;SystemVerilog&lt;/strong&gt; for integration or downstream tool consumption&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run-time dynamic&lt;/strong&gt; module port definitions (numbers, names, widths, etc.) and internal module logic, including recursive module contents&lt;/li&gt; &#xA; &lt;li&gt;Leverage the &lt;a href=&#34;https://github.com/intel/rohd-hcl&#34;&gt;ROHD Hardware Component Library (ROHD-HCL)&lt;/a&gt; with reusable and configurable design and verification components.&lt;/li&gt; &#xA; &lt;li&gt;Simple, free, &lt;strong&gt;open source tool stack&lt;/strong&gt; without any headaches from library dependencies, file ordering, elaboration/analysis options, +defines, etc.&lt;/li&gt; &#xA; &lt;li&gt;Excellent, simple, fast &lt;strong&gt;unit-testing&lt;/strong&gt; framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Less verbose&lt;/strong&gt; than alternatives (fewer lines of code)&lt;/li&gt; &#xA; &lt;li&gt;Enables &lt;strong&gt;higher quality&lt;/strong&gt; development&lt;/li&gt; &#xA; &lt;li&gt;Replaces hacky perl/python scripting for automation with powerful &lt;strong&gt;native control of design generation&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fewer bugs and lines of code means &lt;strong&gt;shorter development schedule&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support for &lt;strong&gt;cosimulation with verilog modules&lt;/strong&gt; (via &lt;a href=&#34;https://github.com/intel/rohd-cosim&#34;&gt;ROHD Cosim&lt;/a&gt;) and &lt;strong&gt;instantiation of verilog modules&lt;/strong&gt; in generated SystemVerilog code&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;strong&gt;modern IDEs&lt;/strong&gt; like Visual Studio Code, with excellent static analysis, fast autocomplete, built-in debugger, linting, git integration, extensions, and much more&lt;/li&gt; &#xA; &lt;li&gt;Simulate with &lt;strong&gt;various abstraction levels of models&lt;/strong&gt; from architectural, to functional, to cycle-accurate, to RTL levels in the same language and environment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ROHD is &lt;em&gt;not&lt;/em&gt; a new language, it is &lt;em&gt;not&lt;/em&gt; a hardware description language (HDL), and it is &lt;em&gt;not&lt;/em&gt; a version of High-Level Synthesis (HLS). ROHD can be classified as a generator framework.&lt;/p&gt; &#xA;&lt;p&gt;You can think of this project as an attempt to &lt;em&gt;replace&lt;/em&gt; SystemVerilog and related build systems as the front-end methodology of choice in the industry.&lt;/p&gt; &#xA;&lt;p&gt;One of ROHD&#39;s goals is to help grow an open-source community around reusable hardware designs and verification components.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;ROHD is under active development. If you&#39;re interested in contributing, have feedback or a question, or found a bug, please see &lt;a href=&#34;https://github.com/intel/rohd/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Copyright (C) 2021-2025 Intel Corporation&lt;br&gt; SPDX-License-Identifier: BSD-3-Clause&lt;/p&gt;</summary>
  </entry>
</feed>