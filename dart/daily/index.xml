<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-29T01:31:48Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bravekingzhang/flutter_template</title>
    <updated>2023-07-29T01:31:48Z</updated>
    <id>tag:github.com,2023-07-29:/bravekingzhang/flutter_template</id>
    <link href="https://github.com/bravekingzhang/flutter_template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个flutter高效开发的模板&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Template&lt;/h1&gt; &#xA;&lt;p&gt;Flutter Template 是一个&lt;code&gt;高质量&lt;/code&gt;、易于使用的 &lt;code&gt;Flutter 项目模板&lt;/code&gt;，旨在帮助开发者&lt;code&gt;快速构建&lt;/code&gt;出色的跨平台应用程序。该模板采用了 &lt;code&gt;Get 框架&lt;/code&gt;、&lt;code&gt;优秀的设计模式&lt;/code&gt;和&lt;code&gt;合理的文件结构&lt;/code&gt;，以确保开发者能够编写出&lt;code&gt;易于维护的代码&lt;/code&gt;。此外，该模板还使用了 &lt;code&gt;Isar 数据库&lt;/code&gt;，以提供&lt;code&gt;卓越的性能&lt;/code&gt;和&lt;code&gt;全平台支持&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;清晰架构实现的 TODO LIST 效果&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/bravekingzhang/flutter_template/raw/main/artificial/demo.gif&#34; style=&#34;width: 50%;&#34;&gt; &#xA;&lt;p&gt;不要怕，非常简单，但是应有尽有，数据库持久化，全局状态管理，&lt;strong&gt;因为优秀的代码组织结构，促成了非常简洁的代码就实现了一个 todo-list&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/bravekingzhang/flutter_template/raw/main/artificial/drawer.png&#34; style=&#34;width: 50%;&#34;&gt; &#xA;&lt;h2&gt;特点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用 &lt;a href=&#34;https://pub.dev/packages/get&#34;&gt;Get&lt;/a&gt; 框架进行状态管理、依赖注入和路由管理，简化了应用程序的开发和维护。&lt;/li&gt; &#xA; &lt;li&gt;采用模块化的设计模式，使代码结构清晰、组织良好，便于扩展和维护。&lt;/li&gt; &#xA; &lt;li&gt;使用 &lt;a href=&#34;https://pub.dev/packages/isar&#34;&gt;Isar&lt;/a&gt; 数据库，提供高性能、跨平台的数据存储和查询功能。&lt;/li&gt; &#xA; &lt;li&gt;优化的文件结构，使开发者能够轻松找到和管理项目中的各个部分。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dio&lt;/code&gt; 网络请求框架，轻松处理网络请求，支持拦截器，支持便捷的错误处理，请求重试，请求缓存等功能。&lt;/li&gt; &#xA; &lt;li&gt;oauth2 &lt;code&gt;flutter_web_auth_2&lt;/code&gt; 登录框架，轻松实现 github 登录，支持多平台。&lt;/li&gt; &#xA; &lt;li&gt;图片加载框架&lt;code&gt;extended_image&lt;/code&gt;，支持加载网络图片，支持缓存图片，支持图片加载进度条，支持图片加载失败的占位图。&lt;/li&gt; &#xA; &lt;li&gt;轻松替换 app 的 icon。&lt;/li&gt; &#xA; &lt;li&gt;包含一些预构建的组件和页面，以帮助开发者快速开始构建应用程序。&lt;/li&gt; &#xA; &lt;li&gt;开箱即用，开发者只需要关注业务即可。&lt;/li&gt; &#xA; &lt;li&gt;多语言的支持。&lt;/li&gt; &#xA; &lt;li&gt;主题设置的支持。&lt;/li&gt; &#xA; &lt;li&gt;灵活扩展的设置页&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;项目结构&lt;/h2&gt; &#xA;&lt;p&gt;项目中，TodoList 应用程序的结构如下所示：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;➜  lib git:(main) ✗ tree -L 2&#xA;.&#xA;├── components&#xA;│   ├── add_todo_dialog.dart&#xA;│   ├── code_wrapper.dart&#xA;│   ├── latex.dart&#xA;│   ├── markdown.dart&#xA;│   ├── todo_item.dart&#xA;│   └── user&#xA;├── controller&#xA;│   ├── settings.dart&#xA;│   ├── todo.dart&#xA;│   └── user.dart&#xA;├── i18n&#xA;│   └── translations.dart&#xA;├── main.dart&#xA;├── models&#xA;│   ├── github_user.dart&#xA;│   ├── todo.dart&#xA;│   └── todo.g.dart&#xA;├── pages&#xA;│   ├── home.dart&#xA;│   ├── settings.dart&#xA;│   ├── todo_list.dart&#xA;│   └── unknown.dart&#xA;├── repository&#xA;│   ├── todo_repository.dart&#xA;│   └── user_repository.dart&#xA;├── routes.dart&#xA;└── service&#xA;    └── http_service.dart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;components\&lt;/code&gt; 放置了一些预构建的组件，以帮助开发者快速开始构建应用程序。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;service\&lt;/code&gt; 放置应用程序的服务，如网络请求服务等等。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;controller\&lt;/code&gt; 放置了一些控制器，可以参考 &lt;a href=&#34;https://pub.dev/packages/get&#34;&gt;Get&lt;/a&gt;。 如何写 controller，来实现全局数据管理&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;repository\&lt;/code&gt; 放置了一些数据仓库，如数据库存操作，网络操作等等，主要是处理数据的逻辑。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pages\&lt;/code&gt; 放置了一些页面，如首页、设置页面等，其他页面放置在此。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;i18n&lt;/code&gt; 放置了一些国际化资源，以帮助开发者快速构建支持国际化的语言包。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;models\&lt;/code&gt; 放置了一些数据模型，如 Todo 模型等。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;routes.dart&lt;/code&gt; 定义了应用程序的路由。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;main.dart&lt;/code&gt; 是应用程序的入口文件，包括主题配置，多语言配置，基本不需要修改这里。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;p&gt;要开始使用 Flutter Template，请按照以下步骤操作：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;克隆此仓库：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;git clone https://github.com/bravekingzhang/flutter_template.git&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or 直接点我的项目的 &lt;code&gt;Use this template&lt;/code&gt; button，直接通过这个模板创建一个自己的项目。&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;进入项目目录：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;cd flutter_template&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;获取依赖项：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;flutter pub get&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;运行项目：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;flutter run&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;现在，你已经成功运行了 Flutter Template，并可以开始构建你的应用程序。&lt;/p&gt; &#xA;&lt;h2&gt;项目配置&lt;/h2&gt; &#xA;&lt;p&gt;修改项目名字，请到项目的根目录下执行，&lt;strong&gt;请注意 flutter 项目命名规范&lt;/strong&gt;，因为会体现在包名中，所以尽量取类似这样的名字 &lt;code&gt;flutter_app&lt;/code&gt;,&lt;code&gt;todo_list&lt;/code&gt;,&lt;code&gt;leetcode&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./rename_project.sh your_project_name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;贡献&lt;/h2&gt; &#xA;&lt;p&gt;我们欢迎任何形式的贡献！如果你有任何建议、问题或需求，请随时提交 &lt;a href=&#34;https://github.com/bravekingzhang/flutter_template/issues&#34;&gt;Issue&lt;/a&gt; 或 &lt;a href=&#34;https://github.com/bravekingzhang/flutter_template/pulls&#34;&gt;Pull Request&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;许可证&lt;/h2&gt; &#xA;&lt;p&gt;本项目采用 &lt;a href=&#34;https://github.com/bravekingzhang/flutter_template/raw/main/LICENSE&#34;&gt;MIT 许可证&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>