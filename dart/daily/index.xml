<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-01T01:38:58Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>flyerhq/flutter_chat_ui</title>
    <updated>2022-08-01T01:38:58Z</updated>
    <id>tag:github.com,2022-08-01:/flyerhq/flutter_chat_ui</id>
    <link href="https://github.com/flyerhq/flutter_chat_ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Actively maintained, community-driven chat UI implementation with an optional Firebase BaaS.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://flyer.chat&#34;&gt; &lt;img src=&#34;https://flyer.chat/assets/logo-dark.svg?sanitize=true&#34; width=&#34;288px&#34; alt=&#34;Flyer Chat Logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Flutter Chat UI&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Actively maintained, community-driven chat UI implementation with an optional &lt;a href=&#34;https://pub.dev/packages/flutter_firebase_chat_core&#34;&gt;Firebase BaaS&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; ðŸ‡ºðŸ‡¦ðŸ‡ºðŸ‡¦ We are Ukrainians. If you enjoy our work, please &lt;a href=&#34;https://u24.gov.ua&#34;&gt;consider donating&lt;/a&gt; to help save our country. ðŸ‡ºðŸ‡¦ðŸ‡ºðŸ‡¦ &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://pub.dartlang.org/packages/flutter_chat_ui&#34;&gt; &lt;img alt=&#34;Pub&#34; src=&#34;https://img.shields.io/pub/v/flutter_chat_ui&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/flyerhq/flutter_chat_ui/actions?query=workflow%3Abuild&#34;&gt; &lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/flyerhq/flutter_chat_ui/workflows/build/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/flyerhq/flutter_chat_ui&#34;&gt; &lt;img alt=&#34;CodeFactor&#34; src=&#34;https://www.codefactor.io/repository/github/flyerhq/flutter_chat_ui/badge&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://flyer.chat&#34;&gt; &lt;img alt=&#34;Chat Image&#34; src=&#34;https://user-images.githubusercontent.com/14123304/174447563-c7f9d268-711a-4cd8-a582-7645d359b0c8.jpg&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Flyer Chat is a platform for creating in-app chat experiences using Flutter or &lt;a href=&#34;https://github.com/flyerhq/react-native-chat-ui&#34;&gt;React Native&lt;/a&gt;. This repository contains chat UI implementation for Flutter.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Free, open-source and community-driven&lt;/strong&gt;. We offer no paid plugins and strive to create an easy-to-use, almost drop-in chat experience for any application. Contributions are more than welcome! Please read our &lt;a href=&#34;https://raw.githubusercontent.com/flyerhq/flutter_chat_ui/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Backend agnostic&lt;/strong&gt;. You can choose the backend you prefer. But if you don&#39;t have one, we provide our own free and open-source &lt;a href=&#34;https://pub.dev/packages/flutter_firebase_chat_core&#34;&gt;Firebase implementation&lt;/a&gt;, which can be used to create a working chat in minutes. We are also working on our more advanced SaaS and self-hosted solutions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Customizable&lt;/strong&gt;. Supports custom themes, locales and more. Check our &lt;a href=&#34;https://docs.flyer.chat/flutter/chat-ui/&#34;&gt;documentation&lt;/a&gt; for the info. More options are on the way, let us know if something is missing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Minimum dependencies&lt;/strong&gt;. Our packages are lightweight. Use your favourite packages for selecting images, opening files etc. See the &lt;a href=&#34;https://github.com/flyerhq/flutter_chat_ui/raw/main/example/lib/main.dart&#34;&gt;example&lt;/a&gt; for possible implementation.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Dart &amp;gt;=2.17.0&lt;/code&gt; and &lt;code&gt;Flutter &amp;gt;=2.0.0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://docs.flyer.chat/flutter/chat-ui/&#34;&gt;documentation&lt;/a&gt; or see the &lt;a href=&#34;https://github.com/flyerhq/flutter_chat_ui/tree/main/example&#34;&gt;example&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://raw.githubusercontent.com/flyerhq/flutter_chat_ui/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; before submitting a pull request to the project.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Flyer Chat has adopted the &lt;a href=&#34;https://www.contributor-covenant.org&#34;&gt;Contributor Covenant&lt;/a&gt; as its Code of Conduct, and we expect project participants to adhere to it. Please read &lt;a href=&#34;https://raw.githubusercontent.com/flyerhq/flutter_chat_ui/main/CODE_OF_CONDUCT.md&#34;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/flyerhq/flutter_chat_ui/main/LICENSE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter-form-builder-ecosystem/flutter_form_builder</title>
    <updated>2022-08-01T01:38:58Z</updated>
    <id>tag:github.com,2022-08-01:/flutter-form-builder-ecosystem/flutter_form_builder</id>
    <link href="https://github.com/flutter-form-builder-ecosystem/flutter_form_builder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple form maker for Flutter Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Form Builder&lt;/h1&gt; &#xA;&lt;p&gt;This package helps in creation of data collection forms in Flutter by removing the boilerplate needed to build a form, validate fields, react to changes and collect final user input.&lt;/p&gt; &#xA;&lt;p&gt;Also included are common ready-made form input fields for FormBuilder. This gives you a convenient way of adding common ready-made input fields instead of creating your own FormBuilderField from scratch.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_form_builder&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_form_builder?logo=flutter&amp;amp;style=for-the-badge&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/actions/workflows/base.yaml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/flutter-form-builder-ecosystem/flutter_form_builder/Base?logo=github&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/flutter-form-builder-ecosystem/flutter_form_builder/&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/flutter-form-builder-ecosystem/flutter_form_builder?logo=codecov&amp;amp;style=for-the-badge&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/flutter-form-builder-ecosystem/flutter_form_builder&#34;&gt;&lt;img src=&#34;https://img.shields.io/codefactor/grade/github/flutter-form-builder-ecosystem/flutter_form_builder?logo=codefactor&amp;amp;style=for-the-badge&#34; alt=&#34;CodeFactor Grade&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/25KNPMJQf2&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/985922433578053673?logo=discord&amp;amp;style=for-the-badge&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#inpus&#34;&gt;Inputs&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#use&#34;&gt;Use&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#setup&#34;&gt;Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#basic-use&#34;&gt;Basic use&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#especific-uses&#34;&gt;Especific uses&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#support&#34;&gt;Support&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#contribute&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#questions-and-answers&#34;&gt;Questions and answers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#donations&#34;&gt;Donations&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#ecosystem&#34;&gt;Ecosystem&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#thanks-to&#34;&gt;Thanks to&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a form with several type of inputs&lt;/li&gt; &#xA; &lt;li&gt;Get values from form by easy way&lt;/li&gt; &#xA; &lt;li&gt;Apply validators to inputs fields&lt;/li&gt; &#xA; &lt;li&gt;React to form fields changes and validations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Inputs&lt;/h2&gt; &#xA;&lt;p&gt;The currently supported fields include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderCheckbox&lt;/code&gt; - Single checkbox field&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderCheckboxGroup&lt;/code&gt; - List of checkboxes for multiple selection&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderChoiceChip&lt;/code&gt; - Creates a chip that acts like a radio button.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderDateRangePicker&lt;/code&gt; - For selection of a range of dates&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderDateTimePicker&lt;/code&gt; - For &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt; and &lt;code&gt;DateTime&lt;/code&gt; input&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderDropdown&lt;/code&gt; - Used to select one value from a list as a Dropdown&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderFilterChip&lt;/code&gt; - Creates a chip that acts like a checkbox&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderRadioGroup&lt;/code&gt; - Used to select one value from a list of Radio Widgets&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderRangeSlider&lt;/code&gt; - Used to select a range from a range of values&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderSegmentedControl&lt;/code&gt; - For selection of a value using the &lt;code&gt;CupertinoSegmentedControl&lt;/code&gt; widget as an input&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderSlider&lt;/code&gt; - For selection of a numerical value on a slider&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderSwitch&lt;/code&gt; - On/Off switch field&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FormBuilderTextField&lt;/code&gt; - A Material Design text field input&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Parameters&lt;/h3&gt; &#xA;&lt;p&gt;In order to create an input field in the form, along with the label, and any applicable validation, there are several attributes that are supported by all types of inputs namely:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Attribute&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Yes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This will form the key in the form value Map&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;initialValue&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;T&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;No&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The initial value of the input field&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;No&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Determines whether the field widget will accept user input.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;decoration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;InputDecoration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;InputDecoration()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;No&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Defines the border, labels, icons, and styles used to decorate the field.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;validator&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;FormFieldValidator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;No&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A &lt;code&gt;FormFieldValidator&lt;/code&gt; that will check the validity of value in the &lt;code&gt;FormField&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;onChanged&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ValueChanged&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;No&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This event function will fire immediately the the field value changes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;valueTransformer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ValueTransformer&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;No&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Function that transforms field value before saving to form value. e.g. transform TextField value for numeric field from &lt;code&gt;String&lt;/code&gt; to &lt;code&gt;num&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;The rest of the attributes will be determined by the type of Widget being used.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Use&lt;/h2&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;No especific setup required: only install the dependency and use :)&lt;/p&gt; &#xA;&lt;h3&gt;Basic use&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final _formKey = GlobalKey&amp;lt;FormBuilderState&amp;gt;();&#xA;&#xA;FormBuilder(&#xA;    key: _formKey,&#xA;    child:  FormBuilderTextField(&#xA;        name: &#39;text&#39;,&#xA;        onChanged: (val) {&#xA;            print(val); // Print the text value write into TextField&#xA;        },&#xA;    ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://pub.dev/packages/flutter_form_builder/example&#34;&gt;pud.dev example tab&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/example/lib/main.dart&#34;&gt;github code&lt;/a&gt; for more details&lt;/p&gt; &#xA;&lt;h3&gt;Especific uses&lt;/h3&gt; &#xA;&lt;h4&gt;Building your own custom field&lt;/h4&gt; &#xA;&lt;p&gt;To build your own field within a &lt;code&gt;FormBuilder&lt;/code&gt;, we use &lt;code&gt;FormBuilderField&lt;/code&gt; which will require that you define your own field. Read &lt;a href=&#34;https://medium.com/@danvickmiller/building-a-custom-flutter-form-builder-field-c67e2b2a27f4&#34;&gt;this article&lt;/a&gt; for step-by-step instructions on how to build your own custom field.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var options = [&#34;Option 1&#34;, &#34;Option 2&#34;, &#34;Option 3&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FormBuilderField(&#xA;  name: &#34;name&#34;,&#xA;  validator: FormBuilderValidators.compose([&#xA;# Flutter Form Builder&#xA;    FormBuilderValidators.required(),&#xA;  ]),&#xA;  builder: (FormFieldState&amp;lt;dynamic&amp;gt; field) {&#xA;    return InputDecorator(&#xA;      decoration: InputDecoration(&#xA;        labelText: &#34;Select option&#34;,&#xA;        contentPadding:&#xA;            EdgeInsets.only(top: 10.0, bottom: 0.0),&#xA;        border: InputBorder.none,&#xA;        errorText: field.errorText,&#xA;      ),&#xA;      child: Container(&#xA;        height: 200,&#xA;        child: CupertinoPicker(&#xA;          itemExtent: 30,&#xA;          children: options.map((c) =&amp;gt; Text(c)).toList(),&#xA;          onSelectedItemChanged: (index) {&#xA;            field.didChange(options[index]);&#xA;          },&#xA;        ),&#xA;      ),&#xA;    );&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Programmatically changing field value&lt;/h4&gt; &#xA;&lt;p&gt;You can either change the value of one field at a time like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;_formKey.currentState.fields[&#39;color_picker&#39;].didChange(Colors.black);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or multiple fields value like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;_formKey.currentState.patchValue({&#xA;  &#39;age&#39;: &#39;50&#39;,&#xA;  &#39;slider&#39;: 6.7,&#xA;  &#39;filter_chip&#39;: [&#39;Test 1&#39;],&#xA;  &#39;choice_chip&#39;: &#39;Test 2&#39;,&#xA;  &#39;rate&#39;: 4,&#xA;  &#39;chips_test&#39;: [&#xA;    Contact(&#xA;        &#39;Andrew&#39;, &#xA;        &#39;stock@man.com&#39;, &#xA;        &#39;https://d2gg9evh47fn9z.cloudfront.net/800px_COLOURBOX4057996.jpg&#39;,&#xA;    ),&#xA;  ],&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Programmatically inducing an error&lt;/h4&gt; &#xA;&lt;h5&gt;Option 1 - Using FormBuilder / FieldBuilderField key&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final _formKey = GlobalKey&amp;lt;FormBuilderState&amp;gt;();&#xA;final _emailFieldKey = GlobalKey&amp;lt;FormBuilderFieldState&amp;gt;();&#xA;...&#xA;FormBuilder(&#xA;  key: _formKey,&#xA;  child: Column(&#xA;    children: [&#xA;      FormBuilderTextField(&#xA;        key: _emailFieldKey,&#xA;        name: &#39;email&#39;,&#xA;        decoration: const InputDecoration(labelText: &#39;Email&#39;),&#xA;        validator: FormBuilderValidators.compose([&#xA;          FormBuilderValidators.required(),&#xA;          FormBuilderValidators.email(),&#xA;        ]),&#xA;      ),&#xA;      ElevatedButton(&#xA;        child: const Text(&#39;Submit&#39;),&#xA;        onPressed: () async {&#xA;          if(await checkIfEmailExists()){&#xA;            // Either invalidate using Form Key&#xA;            _formKey.currentState?.invalidateField(&#xA;                name: &#39;email&#39;, errorText: &#39;Email already taken.&#39;);&#xA;            // OR invalidate using Field Key&#xA;            _emailFieldKey.currentState&#xA;                ?.invalidate(&#39;Email already taken&#39;);&#xA;          }&#xA;        },&#xA;      ),&#xA;    ],&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Option 2 - Using InputDecoration.errorText&lt;/h5&gt; &#xA;&lt;p&gt;Declare a variable to hold your error:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dart&#34;&gt;String _emailError;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the variable as the &lt;code&gt;errorText&lt;/code&gt; within &lt;code&gt;InputDecoration&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dart&#34;&gt;FormBuilderTextField(&#xA;  name: &#39;email&#39;,&#xA;  decoration: InputDecoration(&#xA;    labelText: &#39;Email&#39;,&#xA;    errorText: _emailError,&#xA;  ),&#xA;  validator: FormBuilderValidators.compose([&#xA;      FormBuilderValidators.required(),&#xA;      FormBuilderValidators.email(),&#xA;  ]),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set the error text&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dart&#34;&gt;RaisedButton(&#xA;  child: Text(&#39;Submit&#39;),&#xA;  onPressed: () async {&#xA;    setState(() =&amp;gt; _emailError = null);&#xA;    if(await checkIfEmailExists()){&#xA;      setState(() =&amp;gt; _emailError = &#39;Email already taken.&#39;);&#xA;    }&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Conditional validation&lt;/h4&gt; &#xA;&lt;p&gt;You can also validate a field based on the value of another field&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FormBuilderRadioGroup(&#xA;  decoration: InputDecoration(labelText: &#39;My best language&#39;),&#xA;  name: &#39;my_language&#39;,&#xA;  validator: FormBuilderValidators.required(),&#xA;  options: [&#xA;    &#39;Dart&#39;,&#xA;    &#39;Kotlin&#39;,&#xA;    &#39;Java&#39;,&#xA;    &#39;Swift&#39;,&#xA;    &#39;Objective-C&#39;,&#xA;    &#39;Other&#39;&#xA;  ]&#xA;    .map((lang) =&amp;gt; FormBuilderFieldOption(value: lang))&#xA;    .toList(growable: false),&#xA;  ),&#xA;  FormBuilderTextField(&#xA;    name: &#39;specify&#39;,&#xA;    decoration:&#xA;        InputDecoration(labelText: &#39;If Other, please specify&#39;),&#xA;    validator: (val) {&#xA;      if (_formKey.currentState.fields[&#39;my_language&#39;]?.value ==&#xA;              &#39;Other&#39; &amp;amp;&amp;amp;&#xA;          (val == null || val.isEmpty)) {&#xA;        return &#39;Kindly specify your language&#39;;&#xA;      }&#xA;      return null;&#xA;    },&#xA;  ),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Implement reset, clear or other button into FormBuilderField&lt;/h4&gt; &#xA;&lt;p&gt;If you can add some button to reset specific field, can use the &lt;code&gt;decoration&lt;/code&gt; parameter like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;List&amp;lt;String&amp;gt; genderOptions = [&#39;Male&#39;, &#39;Female&#39;, &#39;Other&#39;];&#xA;&#xA;FormBuilderDropdown&amp;lt;String&amp;gt;(&#xA;  name: &#39;gender&#39;,&#xA;  decoration: InputDecoration(&#xA;    labelText: &#39;Gender&#39;,&#xA;    initialValue: &#39;Male&#39;,&#xA;    suffix: IconButton(&#xA;      icon: const Icon(Icons.close),&#xA;      onPressed: () {&#xA;        _formKey.currentState!.fields[&#39;gender&#39;]&#xA;            ?.reset();&#xA;      },&#xA;    ),&#xA;    hintText: &#39;Select Gender&#39;,&#xA;  ),&#xA;  items: genderOptions&#xA;      .map((gender) =&amp;gt; DropdownMenuItem(&#xA;            alignment: AlignmentDirectional.center,&#xA;            value: gender,&#xA;            child: Text(gender),&#xA;          ))&#xA;      .toList(),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or if is allowed by the field, set a value like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FormBuilderTextField(&#xA;  name: &#39;age&#39;,&#xA;  decoration: InputDecoration(&#xA;    labelText: &#39;Age&#39;,&#xA;    suffixIcon: IconButton(&#xA;      icon: const Icon(Icons.plus_one),&#xA;      onPressed: () {&#xA;        _formKey.currentState!.fields[&#39;age&#39;]&#xA;            ?.didChange(&#39;14&#39;);&#xA;      },&#xA;    ),&#xA;  ),&#xA;  initialValue: &#39;13&#39;,&#xA;  keyboardType: TextInputType.number,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;h3&gt;Contribute&lt;/h3&gt; &#xA;&lt;p&gt;You have some ways to contribute to this packages&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Beginner: Reporting bugs or request new features&lt;/li&gt; &#xA; &lt;li&gt;Intermediate: Implement new features (from issues or not) and created pull requests&lt;/li&gt; &#xA; &lt;li&gt;Advanced: Join to &lt;a href=&#34;https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/#ecosystem&#34;&gt;organization&lt;/a&gt; like a member and help coding, manage issues, dicuss new features and other things&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/flutter-form-builder-ecosystem/.github/raw/main/CONTRIBUTING.md&#34;&gt;contribution file&lt;/a&gt; for more details&lt;/p&gt; &#xA;&lt;h3&gt;Questions and answers&lt;/h3&gt; &#xA;&lt;p&gt;You can join to &lt;a href=&#34;https://discord.gg/25KNPMJQf2&#34;&gt;our Discord server&lt;/a&gt; or search answers in &lt;a href=&#34;https://stackoverflow.com/questions/tagged/flutter-form-builder&#34;&gt;StackOverflow&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Donations&lt;/h3&gt; &#xA;&lt;p&gt;Buy a coffe to &lt;a href=&#34;https://twitter.com/danvickmiller&#34;&gt;Danvick Miller&lt;/a&gt;, creator of this awesome package&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/danvick&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/guidelines/download-assets-sm-1.svg?sanitize=true&#34; alt=&#34;Buy me a coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/issues/1049&#34;&gt;Improve focus behavior&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add more widget tests and missing tests for some fields: &lt;a href=&#34;https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/issues/1090&#34;&gt;#1090&lt;/a&gt;/&lt;a href=&#34;https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/issues/1089&#34;&gt;#1089&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/issues/1027&#34;&gt;Add visual examples&lt;/a&gt; (images, gifs, videos, sample application)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/issues&#34;&gt;Solve open issues&lt;/a&gt;, &lt;a href=&#34;https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/labels/bug&#34;&gt;prioritizing bugs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ecosystem&lt;/h2&gt; &#xA;&lt;p&gt;Take a look to &lt;a href=&#34;https://github.com/flutter-form-builder-ecosystem&#34;&gt;our awesome ecosystem&lt;/a&gt; and all packages in there&lt;/p&gt; &#xA;&lt;h2&gt;Thanks to&lt;/h2&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;a href=&#34;https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=flutter-form-builder-ecosystem/flutter_form_builder&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Made with &lt;a href=&#34;https://contrib.rocks&#34;&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>