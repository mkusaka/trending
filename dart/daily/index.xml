<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-23T01:30:33Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>justsoft/video_thumbnail</title>
    <updated>2025-02-23T01:30:33Z</updated>
    <id>tag:github.com,2025-02-23:/justsoft/video_thumbnail</id>
    <link href="https://github.com/justsoft/video_thumbnail" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This plugin generates thumbnail from video file or URL. It returns image in memory or writes into a file. It offers rich options to control the image format, resolution and quality. Supports iOS and Android.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;video_thumbnail&lt;/h1&gt; &#xA;&lt;p&gt;This plugin generates thumbnail from video file or URL. It returns image in memory or writes into a file. It offers rich options to control the image format, resolution and quality. Supports iOS and Android.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/video_thumbnail&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/pub-v0.5.3-blue&#34; alt=&#34;pub ver&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/justsoft/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/mashape/apistatus.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/justsoft/video_thumbnail/raw/master/video_file.png?raw=true&#34; alt=&#34;video-file&#34;&gt; &lt;img src=&#34;https://github.com/justsoft/video_thumbnail/raw/master/video_url.png?raw=true&#34; alt=&#34;video-url&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Methods&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;function&lt;/th&gt; &#xA;   &lt;th&gt;parameter&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;   &lt;th&gt;return&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;thumbnailData&lt;/td&gt; &#xA;   &lt;td&gt;String &lt;code&gt;[video]&lt;/code&gt;, optional Map&amp;lt;String, dynamic&amp;gt; &lt;code&gt;[headers]&lt;/code&gt;, ImageFormat &lt;code&gt;[imageFormat]&lt;/code&gt;(JPEG/PNG/WEBP), int &lt;code&gt;[maxHeight]&lt;/code&gt;(0: for the original resolution of the video, or scaled by the source aspect ratio), [maxWidth]&lt;code&gt;(0: for the original resolution of the video, or scaled by the source aspect ratio), int &lt;/code&gt;[timeMs]&lt;code&gt;generates the thumbnail from the frame around the specified millisecond, int&lt;/code&gt;[quality]`(0-100)&lt;/td&gt; &#xA;   &lt;td&gt;generates thumbnail from &lt;code&gt;[video]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[Future&amp;lt;Uint8List&amp;gt;]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;thumbnailFile&lt;/td&gt; &#xA;   &lt;td&gt;String &lt;code&gt;[video]&lt;/code&gt;, optional Map&amp;lt;String, dynamic&amp;gt; &lt;code&gt;[headers]&lt;/code&gt;, String &lt;code&gt;[thumbnailPath]&lt;/code&gt;(folder or full path where to store the thumbnail file, null to save to same folder as the video file), ImageFormat &lt;code&gt;[imageFormat]&lt;/code&gt;(JPEG/PNG/WEBP), int &lt;code&gt;[maxHeight]&lt;/code&gt;(0: for the original resolution of the video, or scaled by the source aspect ratio), int &lt;code&gt;[maxWidth]&lt;/code&gt;(0: for the original resolution of the video, or scaled by the source aspect ratio), int &lt;code&gt;[timeMs]&lt;/code&gt; generates the thumbnail from the frame around the specified millisecond, int &lt;code&gt;[quality]&lt;/code&gt;(0-100)&lt;/td&gt; &#xA;   &lt;td&gt;creates a file of the thumbnail from the &lt;code&gt;[video]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[Future&amp;lt;String&amp;gt;]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Warning:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Giving both the &lt;code&gt;maxHeight&lt;/code&gt; and &lt;code&gt;maxWidth&lt;/code&gt; has different result on Android platform, it actually scales the thumbnail to the specified maxHeight and maxWidth. To generate the thumbnail from a network resource, the &lt;code&gt;video&lt;/code&gt; must be properly URL encoded.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installing&lt;/strong&gt; add &lt;a href=&#34;https://pub.dev/packages/video_thumbnail&#34;&gt;video_thumbnail&lt;/a&gt; as a dependency in your pubspec.yaml file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  video_thumbnail: ^0.5.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;import&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:video_thumbnail/video_thumbnail.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Generate a thumbnail in memory from video file&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final uint8list = await VideoThumbnail.thumbnailData(&#xA;  video: videofile.path,&#xA;  imageFormat: ImageFormat.JPEG,&#xA;  maxWidth: 128, // specify the width of the thumbnail, let the height auto-scaled to keep the source aspect ratio&#xA;  quality: 25,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Generate a thumbnail file from video URL&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final fileName = await VideoThumbnail.thumbnailFile(&#xA;  video: &#34;https://flutter.github.io/assets-for-api-docs/assets/videos/butterfly.mp4&#34;,&#xA;  thumbnailPath: (await getTemporaryDirectory()).path,&#xA;  imageFormat: ImageFormat.WEBP,&#xA;  maxHeight: 64, // specify the height of the thumbnail, let the width auto-scaled to keep the source aspect ratio&#xA;  quality: 75,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Generate a thumbnail file from video Assets declared in pubspec.yaml&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final byteData = await rootBundle.load(&#34;assets/my_video.mp4&#34;);&#xA;Directory tempDir = await getTemporaryDirectory();&#xA;&#xA;File tempVideo = File(&#34;${tempDir.path}/assets/my_video.mp4&#34;)&#xA;  ..createSync(recursive: true)&#xA;  ..writeAsBytesSync(byteData.buffer.asUint8List(byteData.offsetInBytes, byteData.lengthInBytes));&#xA;&#xA;final fileName = await VideoThumbnail.thumbnailFile(&#xA;  video: tempVideo.path,&#xA;  thumbnailPath: (await getTemporaryDirectory()).path,&#xA;  imageFormat: ImageFormat.PNG,  &#xA;  quality: 100,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;p&gt;Fork or pull requests are always welcome. Currently it seems have a little performance issue while generating WebP thumbnail by using libwebp under iOS.&lt;/p&gt;</summary>
  </entry>
</feed>