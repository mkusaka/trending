<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-16T01:34:03Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>anandnet/Harmony-Music</title>
    <updated>2023-07-16T01:34:03Z</updated>
    <id>tag:github.com,2023-07-16:/anandnet/Harmony-Music</id>
    <link href="https://github.com/anandnet/Harmony-Music" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Android App for streaming Music&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://github.com/anandnet/Harmony-Music/raw/main/cover.png&#34; width=&#34;1200&#34;&gt; &#xA;&lt;h1&gt;Harmony Music&lt;/h1&gt; &#xA;&lt;p&gt;An app for music streaming made with Flutter(Currently support Android only).&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ability to play song from Ytube/Ytube Music.&lt;/li&gt; &#xA; &lt;li&gt;Song cache while playing&lt;/li&gt; &#xA; &lt;li&gt;Radio feature support&lt;/li&gt; &#xA; &lt;li&gt;Background music&lt;/li&gt; &#xA; &lt;li&gt;Playlist creation &amp;amp; bookmark support&lt;/li&gt; &#xA; &lt;li&gt;Artist &amp;amp; Album bookmark support&lt;/li&gt; &#xA; &lt;li&gt;Import song,Playlist,Album,Artist via sharing from Ytube/Ytube Music.&lt;/li&gt; &#xA; &lt;li&gt;Streaming quality control&lt;/li&gt; &#xA; &lt;li&gt;Skip silence&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Theme&lt;/li&gt; &#xA; &lt;li&gt;Equalizer support&lt;/li&gt; &#xA; &lt;li&gt;Lyrics support&lt;/li&gt; &#xA; &lt;li&gt;No Advertisment&lt;/li&gt; &#xA; &lt;li&gt;No Login required&lt;/li&gt; &#xA; &lt;li&gt;No permission required&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Download&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/anandnet/Harmony-Music/releases/latest&#34;&gt;&lt;img src=&#34;https://github.com/anandnet/Harmony-Music/raw/main/don_github.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;To Do&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Backup &amp;amp; Restore&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Troubleshoot&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;if you are facing Notification control issue or music playback stopped by system optimization, please enable ignore battery optimization option from settings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;This project has been created while learning &amp;amp; learning is the main intention.&#xA;This project is not sponsured or affiliated with, funded, authorized, endorsed by any content provider.&#xA;Any Song, content, trademark used in this app are intellectual property of their respective owners.&#xA;Harmony music is not responsible for any infringement of copyright or other intellectual property rights that may result&#xA;from the use of the songs and other content available through this app.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Learning References &amp;amp; Credits&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.flutter.dev/&#34;&gt;Flutter documentation&lt;/a&gt; - a best guide to learn cross platform Ui/app developemnt&lt;br&gt; &lt;a href=&#34;https://suragch.medium.com/&#34;&gt;Suragch&lt;/a&gt;&#39;s Article related to Just audio &amp;amp; state management,architectural style&lt;br&gt; &lt;a href=&#34;https://github.com/sigma67&#34;&gt;sigma67&lt;/a&gt;&#39;s unofficial ytmusic api project&lt;br&gt; App UI inspired by &lt;a href=&#34;https://github.com/vfsfitvnm&#34;&gt;vfsfitvnm&lt;/a&gt;&#39;s ViMusic&lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Major Packages used&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;just_audio: ^0.9.32 - provide audio player to play song&lt;/li&gt; &#xA; &lt;li&gt;audio_service: ^0.18.9 - manage background music &amp;amp; platform audio services&lt;/li&gt; &#xA; &lt;li&gt;get: ^4.6.5 - package for high-performance state management, intelligent dependency injection, and route management&lt;/li&gt; &#xA; &lt;li&gt;youtube_explode_dart: ^1.12.4 - Third party package to provide song url&lt;/li&gt; &#xA; &lt;li&gt;hive: ^2.2.3 - offline db used&lt;/li&gt; &#xA; &lt;li&gt;hive_flutter: ^1.1.0&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>2697a/bujuan</title>
    <updated>2023-07-16T01:34:03Z</updated>
    <id>tag:github.com,2023-07-16:/2697a/bujuan</id>
    <link href="https://github.com/2697a/bujuan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter移动端+桌面端三方网易云播放器&lt;/p&gt;&lt;hr&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/2697a/bujuan/2.0.0/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png&#34; alt=&#34;app_icon_256&#34; style=&#34;zoom: 50%;&#34;&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;bujuan&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;一个支持Android、iOS、MacOS、Windows、Linux的三方网易云播放器。&lt;/p&gt; &#xA;&lt;h4&gt;MacOS (适配中)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/2697a/bujuan/2.0.0/images/957.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Android &amp;amp; IOS (UI一致)&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/2697a/bujuan/2.0.0/images/956.jpeg&#34; alt=&#34;956&#34; style=&#34;zoom:20%;&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/2697a/bujuan/2.0.0/images/954.jpeg&#34; alt=&#34;954&#34; style=&#34;zoom:20%;&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/2697a/bujuan/2.0.0/images/955.jpeg&#34; alt=&#34;955&#34; style=&#34;zoom:20%;&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;功能介绍&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;采用flutter开发，可打包编译为所有平台，采用Skia作为2D渲染引擎，Dart语言作为运行，性能可媲美原生。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;集成Rust版&lt;a href=&#34;https://github.com/UnblockNeteaseMusic/server-rust&#34;&gt;UnblockNeteaseMusic&lt;/a&gt;,可以获取灰色歌曲音源。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Api参考于开源项目 &lt;a href=&#34;https://github.com/Binaryify/NeteaseCloudMusicApi&#34;&gt;NeteaseCloudMusicApi&lt;/a&gt; 。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;播放器尽量做到简洁美观（由于是个人项目，没有专业的ui设计，适配上面可能暂时会有一些问题。）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;播放页面模仿YouTube Music，动画流畅精美。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;网易云账号登录（邮箱、二维码）。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;每日推荐、私人Fm、电台、云盘。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;歌手、专辑、搜索&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;去除无用功能，专注于用户音乐。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;本地音乐已从该版本剔除（考虑后期制作一个单独的本地版本）。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;开发进度&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ Android &amp;amp; IOS 基本已经完善剩余Bug修复和新增功能&lt;/li&gt; &#xA; &lt;li&gt;☑️ MacOS 正在适配中（届时和横屏模式同时推出）&lt;/li&gt; &#xA; &lt;li&gt;☑️Windows&lt;/li&gt; &#xA; &lt;li&gt;☑️Linux&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;代码部署编译&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;需提前准备好&lt;a href=&#34;https://flutter.cn/&#34;&gt;Flutter&lt;/a&gt;、&lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt;环境。&lt;/li&gt; &#xA; &lt;li&gt;关于Rust使用开源项目&lt;a href=&#34;https://github.com/fzyzcjy/flutter_rust_bridge&#34;&gt;flutter_rust_bridge&lt;/a&gt;，请参考。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter pub get&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter build apk --release&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter build ios&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter build macos&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Earlybyte/aad_oauth</title>
    <updated>2023-07-16T01:34:03Z</updated>
    <id>tag:github.com,2023-07-16:/Earlybyte/aad_oauth</id>
    <link href="https://github.com/Earlybyte/aad_oauth" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter Azure Active Directory OAuth Package&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure Active Directory OAuth&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/aad_oauth&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/aad_oauth.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tenhobi/effective_dart&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-effective_dart-40c4ff.svg?sanitize=true&#34; alt=&#34;style: effective dart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/aad_oauth/score&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/points/aad_oauth?logo=dart&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/Earlybyte/aad_oauth?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Earlybyte/aad_oauth.svg?sanitize=true&#34; alt=&#34;Join the chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Flutter OAuth package for performing user authentication against Azure Active Directory OAuth2 v2.0 endpoint. Forked from &lt;a href=&#34;https://github.com/hitherejoe/FlutterOAuth&#34;&gt;hitherejoe.FlutterOAuth&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Supported Flows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow&#34;&gt;Authorization code flow (including refresh token flow)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/active-directory-b2c/authorization-code-flow&#34;&gt;Authorization code flow B2C&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;For using this library you have to create an azure app at the &lt;a href=&#34;https://apps.dev.microsoft.com/&#34;&gt;Azure App registration portal&lt;/a&gt;. Use native app as platform type (with callback URL: &lt;a href=&#34;https://login.live.com/oauth20_desktop.srf&#34;&gt;https://login.live.com/oauth20_desktop.srf&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Your minSdkVersion must be &amp;gt;= 20 in &lt;code&gt;android/app/build.gradle&lt;/code&gt; section &lt;code&gt;android / defaultConfig&lt;/code&gt; to support webview_flutter. Version 19 may build but will likely fail at runtime.&lt;/p&gt; &#xA;&lt;p&gt;If your app does not have the &lt;code&gt;android.permission.INTERNET&lt;/code&gt; permission you must add it to the AndroidManifest &lt;code&gt;&amp;lt;uses-permission android:name=&#34;android.permission.INTERNET&#34;/&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Afterwards you must create a navigatorKey and initialize the library as follow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;  final navigatorKey = GlobalKey&amp;lt;NavigatorState&amp;gt;();&#xA;&#xA;  // ... &#xA;&#xA;  static final Config config = new Config(&#xA;    tenant: &#34;YOUR_TENANT_ID&#34;,&#xA;    clientId: &#34;YOUR_CLIENT_ID&#34;,&#xA;    scope: &#34;openid profile offline_access&#34;,&#xA;    // redirectUri is Optional as a default is calculated based on app type/web location&#xA;    redirectUri: &#34;your redirect url available in azure portal&#34;,&#xA;    navigatorKey: navigatorKey,&#xA;    webUseRedirect: true, // default is false - on web only, forces a redirect flow instead of popup auth&#xA;    //Optional parameter: Centered CircularProgressIndicator while rendering web page in WebView&#xA;    loader: Center(child: CircularProgressIndicator()),&#xA;    postLogoutRedirectUri: &#39;http://your_base_url/logout&#39;, //optional&#xA;  );&#xA;&#xA;  final AadOAuth oauth = new AadOAuth(config);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This allows you to pass in an tenant ID, client ID, scope and redirect url.&lt;/p&gt; &#xA;&lt;p&gt;The same &lt;code&gt;navigatorKey&lt;/code&gt; must be provided to the top-level &lt;code&gt;MaterialApp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;  // ...&#xA;  // Material App must be built with the same navigatorKey&#xA;  // to support navigation to the login route for interactive&#xA;  // authentication.&#xA;  // ...&#xA;&#xA;    Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      // ...&#xA;      navigatorKey: navigatorKey,&#xA;      // ...&#xA;    );&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then once you have an OAuth instance, you can call &lt;code&gt;login()&lt;/code&gt; and afterwards &lt;code&gt;getAccessToken()&lt;/code&gt; to retrieve an access token:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final result = await oauth.login();&#xA;result.fold(&#xA;  (failure) =&amp;gt; showError(failure.toString()),&#xA;  (token) =&amp;gt; showMessage(&#39;Logged in successfully, your access token: $token&#39;),&#xA;);&#xA;String accessToken = await oauth.getAccessToken();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tokens are stored in Keychain for iOS or Keystore for Android. To destroy the tokens you can call &lt;code&gt;logout()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;await oauth.logout();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Web Usage&lt;/h3&gt; &#xA;&lt;p&gt;For web you also have to add some lines to your &lt;code&gt;index.html&lt;/code&gt; (see the &lt;code&gt;index.html&lt;/code&gt; in the example applications):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;&#xA;  &amp;lt;script type=&#34;text/javascript&#34; src=&#34;https://alcdn.msauth.net/browser/2.13.1/js/msal-browser.min.js&#34;&#xA;    integrity=&#34;sha384-2Vr9MyareT7qv+wLp1zBt78ZWB4aljfCTMUrml3/cxm0W81ahmDOC6uyNmmn0Vrc&#34;&#xA;    crossorigin=&#34;anonymous&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;  &amp;lt;script src=&#34;assets/packages/aad_oauth/assets/msalv2.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;/head&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that when using redirect flow on web, the &lt;code&gt;login()&lt;/code&gt; call will not return if the user has not logged in yet because the page is redirected and the app is destroyed until login is complete. Your application must take care of calling &lt;code&gt;login()&lt;/code&gt; again once reloaded to complete the login process within the flutter application - if login was successful, this second call will be fast, and will not cause another redirection.&lt;/p&gt; &#xA;&lt;p&gt;When using redirecting logins with the example application, you will need to click on the login button again following a successful login to see the token details.&lt;/p&gt; &#xA;&lt;h3&gt;B2C Usage&lt;/h3&gt; &#xA;&lt;p&gt;Setup your B2C directory - &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/active-directory-b2c/tutorial-create-tenant/&#34;&gt;Azure AD B2C Setup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Register an App on the previously created B2C directory - &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/active-directory-b2c/tutorial-register-applications?tabs=applications&#34;&gt;Azure AD B2C App Register&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Use native app as plattform type (with callback URL: &lt;a href=&#34;https://login.live.com/oauth20_desktop.srf&#34;&gt;https://login.live.com/oauth20_desktop.srf&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Create your user flows - &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/active-directory-b2c/tutorial-create-user-flows&#34;&gt;Azure AD B2C User Flows&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Add your Azure tenant ID, tenantName, client ID (ID of App), client Secret (Secret of App) and redirectUrl in the main.dart source-code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;  static final Config configB2Ca = new Config(&#xA;    tenant: &#34;YOUR_TENANT_NAME&#34;,&#xA;    clientId: &#34;YOUR_CLIENT_ID&#34;,&#xA;    scope: &#34;YOUR_CLIENT_ID offline_access&#34;,&#xA;    // redirectUri: &#34;https://login.live.com/oauth20_desktop.srf&#34;, // Note: this is the default for Mobile&#xA;    clientSecret: &#34;YOUR_CLIENT_SECRET&#34;,&#xA;    isB2C: true,&#xA;    policy: &#34;YOUR_USER_FLOW___USER_FLOW_A&#34;,&#xA;    tokenIdentifier: &#34;UNIQUE IDENTIFIER A&#34;,&#xA;    navigatorKey: navigatorKey,&#xA;  );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Afterwards you can login and get an access token for accessing other resources. You can also use multiple configs at the same time.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add the following to your pubspec.yaml dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  aad_oauth: &#34;^0.4.4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Contributions can be submitted as pull requests and are highly welcomed. Changes will be bundled together into a release. You can find the next release date and past releases in the &lt;a href=&#34;https://raw.githubusercontent.com/Earlybyte/aad_oauth/master/CHANGELOG.md&#34;&gt;CHANGELOG file&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>