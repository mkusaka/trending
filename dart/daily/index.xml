<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-13T01:38:36Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dart-lang/pub</title>
    <updated>2022-08-13T01:38:36Z</updated>
    <id>tag:github.com,2022-08-13:/dart-lang/pub</id>
    <link href="https://github.com/dart-lang/pub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The package manager for Dart&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dart-lang/pub/actions/workflows/test.yaml?query=workflow%3A%22Dart+CI%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/dart-lang/pub/workflows/Dart%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pub is the package manager for Dart.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing to pub&lt;/h1&gt; &#xA;&lt;p&gt;Thanks for being interested in contributing to pub! Contributing to a new project can be hard: there&#39;s a lot of new code and practices to learn. This document is intended to get you up and running as quickly as possible. For more information, see the &lt;a href=&#34;https://dart.dev/tools/pub/cmd&#34;&gt;pub tool documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The first step towards contributing is to contact the pub dev team and let us know what you&#39;re working on, so we can be sure not to start working on the same thing at the same time. Open an &lt;a href=&#34;http://github.com/dart-lang/pub/issues/new&#34;&gt;issue&lt;/a&gt; letting us know that you&#39;re interested in contributing and what you plan on working on. This will also let us give you specific advice about where to start.&lt;/p&gt; &#xA;&lt;h2&gt;Organization&lt;/h2&gt; &#xA;&lt;p&gt;Pub isn&#39;t a package, but it&#39;s organized like one. It has four top-level directories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;lib/&lt;/code&gt; contains the implementation of pub. Currently, it&#39;s all in &lt;code&gt;lib/src/&lt;/code&gt;, since there are no libraries intended for public consumption.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;test/&lt;/code&gt; contains the tests for pub.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;bin/&lt;/code&gt; contains &lt;code&gt;pub.dart&lt;/code&gt;, the entrypoint script that&#39;s run whenever a user types &#34;pub&#34; on the command line or runs it in the Dart editor. This is usually run through shell scripts in &lt;code&gt;sdk/bin&lt;/code&gt; at the root of the Dart repository.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s probably easiest to start diving into the codebase by looking at a particular pub command. Each command is encapsulated in files in &lt;code&gt;lib/src/command/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running pub&lt;/h2&gt; &#xA;&lt;p&gt;To run pub from the Git repository, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dart bin/pub.dart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing pub&lt;/h2&gt; &#xA;&lt;p&gt;Before any change is made to pub, all tests should pass. To run a pub test, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dart tool/test.dart test/path/to_test.dart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run all tests at once, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dart tool/test.dart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Changes to pub should be accompanied by one or more tests that exercise the new functionality. When adding a test, the best strategy is to find a similar test in &lt;code&gt;test/&lt;/code&gt; and follow the same patterns.&lt;/p&gt; &#xA;&lt;p&gt;Pub tests come in two basic forms. The first, which is usually used to unit test classes and libraries internal to pub, has many tests in a single file. This is used when each test will take a short time to run. For example, &lt;code&gt;test/version_test.dart&lt;/code&gt; contains unit tests for pub&#39;s Version class.&lt;/p&gt; &#xA;&lt;p&gt;The other form, used by most pub tests, is usually used for integration tests of user-visible pub commands. Each test has a file to itself, which is named after the test description. This is used when tests can take a long time to run to avoid having the tests time out when running on the build bots. For example, &lt;code&gt;tests/get/hosted/get_transitive_test.dart&lt;/code&gt; tests the resolution of transitive hosted dependencies when using &lt;code&gt;pub get&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Landing your patch&lt;/h2&gt; &#xA;&lt;p&gt;All patches to official Dart packages, including to pub, need to undergo code review before they&#39;re submitted. The full process for putting up your patch for review is &lt;a href=&#34;https://github.com/dart-lang/sdk/raw/main/CONTRIBUTING.md&#34;&gt;documented elsewhere&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wolfenrain/wattles</title>
    <updated>2022-08-13T01:38:36Z</updated>
    <id>tag:github.com,2022-08-13:/wolfenrain/wattles</id>
    <link href="https://github.com/wolfenrain/wattles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Wattle(s) is a strongly typed Dart ORM that does not require code generation.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; Wattle(s) &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/wolfenrain/wattles/actions&#34;&gt;&lt;img src=&#34;https://github.com/wolfenrain/wattles/workflows/wattles/badge.svg?sanitize=true&#34; alt=&#34;wattles&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wolfenrain/wattles/actions&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wolfenrain/wattles/main/coverage_badge.svg?sanitize=true&#34; alt=&#34;coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/very_good_analysis&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-very_good_analysis-B22C89.svg?sanitize=true&#34; alt=&#34;style: very good analysis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-purple.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;wattles • [ wot-l ] •&lt;/p&gt; &#xA; &lt;p&gt;a lightweight construction material made by weaving thin branches or slats between upright stakes to form a woven lattice&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Wattle(s) is a strongly typed Dart ORM that does not require code generation.&lt;/p&gt;</summary>
  </entry>
</feed>