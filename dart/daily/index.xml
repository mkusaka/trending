<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-08T01:40:07Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>longer96/flutter-demo</title>
    <updated>2022-07-08T01:40:07Z</updated>
    <id>tag:github.com,2022-07-08:/longer96/flutter-demo</id>
    <link href="https://github.com/longer96/flutter-demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥Flutter 那些花里胡哨的界面🔥，花里胡哨的底部导航，仿抖音、小红书底部菜单，向上展开菜单，半圆菜单，中间凹进去的菜单，动画底部导航&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🔥Flutter 那些花里胡哨的界面🔥 进来绝不后悔&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/longer96/flutter-demo/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/longer96/flutter-demo.svg?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/longer96/flutter-demo/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/longer96/flutter-demo.svg?style=social&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;拖动滑块验证，仿B站(bilibili)底部菜单，仿抖音、小红书底部菜单，向上展开菜单，半圆菜单，中间凹进去的菜单 等等.... 收集、实现了一些花里胡哨的底部导航。防止重复造轮，避免产品经理和程序员又又又又又又打起来!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;觉得对你有帮助的希望点个star &lt;a href=&#34;https://github.com/longer96/flutter-demo/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/longer96/flutter-demo.svg?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;有很棒的底部菜单希望推荐&lt;/li&gt; &#xA; &lt;li&gt;需要使用的，建议大家clone下来，直接引入，具体需求(如未读消息)自己添加&lt;/li&gt; &#xA; &lt;li&gt;欢迎Fork &amp;amp; pr贡献您的代码，大家共同学习❤&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://footer.eeaarr.cn&#34;&gt;Web版在线Demo&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;apk&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://d.cc53.cn/sn6c&#34;&gt;http://d.cc53.cn/sn6c&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;200px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/qr.png&#34;&gt; &#xA;&lt;h3&gt;拖动滑块验证&lt;/h3&gt; &#xA;&lt;img width=&#34;320px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/b/00.gif&#34;&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;底部菜单&lt;/h3&gt; &#xA;&lt;h4&gt;效果图 (gif效果不太好，可下载或web体验)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flutter自带菜单，凹进去&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/b/01.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;右侧展开菜单&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/b/02.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;向上展开菜单&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/b/03.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;半折扇菜单，弧形菜单&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/b/04.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;山峦起伏菜单&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/2.gif&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/b/05.gif&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;参考图&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;效果图&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;中间凹进去的菜单&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/b/06.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;底部菜单 仿B站&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/b/07.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;圆圈圈菜单&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/b/08.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;圆圈圈圈菜单&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/b/09.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;抖音、小红书&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/b/dy.png&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;看上去像拉面的菜单&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/0.gif&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/b/10.gif&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;参考图&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;效果图&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;流畅动画的底部导航 &lt;a href=&#34;https://github.com/mahmoud-eslami/bottom_animation&#34;&gt;demo地址&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/o1.gif&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/o2.gif&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;效果图1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;效果图2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;底部导航 &lt;a href=&#34;https://github.com/lukepighetti/salomon_bottom_bar&#34;&gt;demo地址&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/o3.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;底部导航 &lt;a href=&#34;https://github.com/imaNNeoFighT/circular_bottom_navigation&#34;&gt;demo地址&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/o4.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;底部导航 &lt;a href=&#34;https://github.com/therezacuet/Motion-Tab-Bar&#34;&gt;demo地址&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/o5.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;底部导航 &lt;a href=&#34;https://github.com/retroportalstudio/spincircle_bottom_bar&#34;&gt;demo地址&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/o6.gif&#34;&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;更多效果图参考（想练习的童鞋可以实现）&lt;/h3&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt; &lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/1.gif&#34;&gt; &lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/3.gif&#34;&gt; &lt;br&gt;&lt;br&gt; &lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/4.gif&#34;&gt; &lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/5.gif&#34;&gt; &lt;br&gt;&lt;br&gt; &lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/6.gif&#34;&gt; &lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/7.gif&#34;&gt; &lt;br&gt;&lt;br&gt; &lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/8.gif&#34;&gt; &lt;img width=&#34;300px&#34; style=&#34;max-width:100%;&#34; src=&#34;https://github.com/longer96/flutter-demo/raw/master/imgs/a/9.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;推荐阅读&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/589533168/channel/detail?cid=130705&#34;&gt;Flutter动画 教程B站王叔&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>xiaoyaocz/dmzj_flutter</title>
    <updated>2022-07-08T01:40:07Z</updated>
    <id>tag:github.com,2022-07-08:/xiaoyaocz/dmzj_flutter</id>
    <link href="https://github.com/xiaoyaocz/dmzj_flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;动漫之家Flutter客户端&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;动漫之家 Flutter&lt;/h1&gt; &#xA;&lt;p&gt;使用Flutter编写的动漫之家第三方客户端&lt;/p&gt; &#xA;&lt;h2&gt;截图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://vip1.loli.net/2020/08/02/UrBtvZGVcEThqIY.png&#34; alt=&#34;未标题-1.png&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CRED-CLUB/neopop-flutter</title>
    <updated>2022-07-08T01:40:07Z</updated>
    <id>tag:github.com,2022-07-08:/CRED-CLUB/neopop-flutter</id>
    <link href="https://github.com/CRED-CLUB/neopop-flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NeoPOP is CRED&#39;s inbuilt library for using NeoPOP components in your app&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NeoPOP&lt;/h1&gt; &#xA;&lt;p&gt;NeoPOP is CRED&#39;s inbuilt library for using NeoPOP components in your app.&lt;/p&gt; &#xA;&lt;h3&gt;What really is NeoPOP?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cred.club/neopop&#34;&gt;NeoPOP&lt;/a&gt; was created with one simple goal; to create the next generation of a beautiful, affirmative design system. NeoPOP stays true to everything that design at CRED stands for.&lt;/p&gt; &#xA;&lt;p&gt;NeoPOP is built for &lt;a href=&#34;https://github.com/CRED-CLUB/neopop-android&#34;&gt;Android&lt;/a&gt;, &lt;a href=&#34;https://github.com/CRED-CLUB/neopop-ios&#34;&gt;iOS&lt;/a&gt;, &lt;a href=&#34;https://pub.dev/packages/neopop&#34;&gt;Flutter&lt;/a&gt; and &lt;a href=&#34;https://github.com/CRED-CLUB/neopop-web&#34;&gt;Web&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/1gN3wzy.jpg&#34; alt=&#34;NeoPOP Banner&#34; title=&#34;NeoPOP Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;neopop&lt;/code&gt; as a &lt;a href=&#34;https://flutter.dev/using-packages/&#34;&gt;dependency in your pubspec.yaml file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;    neopop: ^1.0.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;NeoPopButton&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9965653/173539706-fa521743-b214-4372-87dd-799d9b8b6c70.png&#34; alt=&#34;Configs&#34;&gt; &lt;code&gt;NeoPopButton&lt;/code&gt; render 5 surfaces, top, left, right, bottom and center. &lt;code&gt;NeoPopButton&lt;/code&gt; widget gives you mutliple configs that you can use for your widget.&lt;/p&gt; &#xA;&lt;h2&gt;Elevated&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9965653/172596228-1bcb92d0-d293-4290-ac38-b9a693a2fab2.png&#34; alt=&#34;Elevated&#34; title=&#34;Elevated Button&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9965653/175874614-ab316981-29d1-4ed5-a90b-6fe840ac9700.gif&#34; alt=&#34;elevated&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NeoPopButton(&#xA;    color: Colors.white,&#xA;    onTapUp: () =&amp;gt; HapticFeedback.vibrate(),&#xA;    onTapDown: () =&amp;gt; HapticFeedback.vibrate(),&#xA;    child: Padding(&#xA;        padding: EdgeInsets.symmetric(horizontal: 20, vertical: 15),&#xA;        child: Row(&#xA;            mainAxisAlignment: MainAxisAlignment.center,&#xA;            children: [&#xA;                Text(&#34;Pay now&#34;),&#xA;            ],&#xA;        ),&#xA;    ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Flat&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9965653/172597180-63b4c386-9b7c-4211-a64c-a79892232481.png&#34; alt=&#34;Flat&#34; title=&#34;Flat Button&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9965653/175874619-b5edb3e8-6c18-4f15-8e60-ef44cb004c94.gif&#34; alt=&#34;flatButton&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;By specifying the &lt;code&gt;buttonPosition&lt;/code&gt; as &lt;code&gt;Position.center&lt;/code&gt;, NeoPOP will compute right and bottom surface&#39;s color according to &lt;code&gt;color&lt;/code&gt;. Top and left surface&#39;s color is computed w.r.t &lt;code&gt;parentColor&lt;/code&gt; and &lt;code&gt;grandparentColor&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NeoPopButton(&#xA;    color: Colors.white,&#xA;    onTapUp: () =&amp;gt; HapticFeedback.vibrate(),&#xA;    onTapDown: () =&amp;gt; HapticFeedback.vibrate(),&#xA;    parentColor: Colors.transparent,&#xA;    buttonPosition: Position.center,&#xA;    child: Padding(&#xA;        padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 15),&#xA;        child: Row(&#xA;            mainAxisAlignment: MainAxisAlignment.center,&#xA;            children: const [&#xA;                Text(&#34;Pay Now&#34;),&#xA;            ],&#xA;        ),&#xA;    ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Shimmer&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;const NeoPopShimmer(&#xA;    shimmerColor: Colors.yellow,&#xA;    child: Padding(&#xA;        padding: const EdgeInsets.symmetric(horizontal: 100, vertical: 15),&#xA;        child: Text(&#34;Hello&#34;),&#xA;    ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Flat Strokes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9965653/172597728-5830cc72-1d2a-4d52-8089-55fb61449996.png&#34; alt=&#34;Flat Strokes&#34; title=&#34;Flat Strokes&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9965653/175874617-a90ef305-d460-4887-927c-0ddecfe45975.gif&#34; alt=&#34;flatStroked&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To add border on a flat button, add &lt;code&gt;border&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NeoPopButton(&#xA;    color: const Color.fromRGBO(0, 0, 0, 1),&#xA;    buttonPosition: Position.center,&#xA;    onTapUp: () {},&#xA;    border: const Border.fromBorderSide(&#xA;        BorderSide(color: kBorderColorWhite, width: kButtonBorderWidth),&#xA;    ),&#xA;    child: Padding(&#xA;        padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 15),&#xA;        child: Row(&#xA;            mainAxisAlignment: MainAxisAlignment.center,&#xA;            children: const [&#xA;                Text(&#34;Pay Now&#34;, style: TextStyle(color: Colors.white)),&#xA;            ],&#xA;        ),&#xA;    ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Elevated Strokes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9965653/172597473-630c86b9-574d-4f65-afeb-171c5ec147cc.png&#34; alt=&#34;Elevated Strokes&#34; title=&#34;Elevated Strokes&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9965653/175874610-3e92e9e9-cbed-4906-a90b-423c615e465d.gif&#34; alt=&#34;elevatedStroked&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NeoPopButton(&#xA;    color: kSecondaryButtonLightColor,&#xA;    bottomShadowColor: ColorUtils.getVerticalShadow(kBorderColorGreen).toColor(),&#xA;    rightShadowColor: ColorUtils.getHorizontalShadow(kBorderColorGreen).toColor(),&#xA;    animationDuration: kButtonAnimationDuration,&#xA;    depth: kButtonDepth,&#xA;    onTapUp: () {},&#xA;    border: Border.all(&#xA;        color: kBorderColorGreen,&#xA;        width: kButtonBorderWidth,&#xA;    ),&#xA;    child: Padding(&#xA;        padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 15),&#xA;        child: Row(&#xA;            mainAxisAlignment: MainAxisAlignment.center,&#xA;            children: const [&#xA;                Text(&#34;Scan &amp;amp; Pay&#34;, style: TextStyle(color: Colors.white)),&#xA;            ],&#xA;        ),&#xA;    ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Adjacent Buttons&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/58745044/176997736-e93eae47-caa7-4905-a678-5e6eba0ac70f.jpg&#34; alt=&#34;Adjacent Buttons&#34; title=&#34;Adjacent Buttons&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Vertically Aligned Buttons&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Column(&#xA;    mainAxisSize: MainAxisSize.min,&#xA;    children: [&#xA;        NeoPopButton(&#xA;        color: kSecondaryButtonLightColor,&#xA;        bottomShadowColor: kShadowColorDarkGreen,&#xA;        rightShadowColor: kShadowColorGreen,&#xA;        buttonPosition: Position.fullBottom,&#xA;        onTapUp: () {},&#xA;        border: Border.all(&#xA;            color: kBorderColorGreen, width: kButtonBorderWidth,&#xA;        ),&#xA;        child:  const Padding(&#xA;                    padding: EdgeInsets.symmetric(horizontal: 8.0, vertical: 15.0),&#xA;                    child: Text(&#xA;                    &#34;Button&#34;,&#xA;                    style: TextStyle(color: Colors.white),&#xA;                ),&#xA;            ),&#xA;        ),&#xA;        NeoPopButton(&#xA;            color: kPrimaryButtonColor,&#xA;            buttonPosition: Position.fullBottom,&#xA;            onTapUp: () {},&#xA;            child:  const Padding(&#xA;                padding: EdgeInsets.symmetric(horizontal: 8.0, vertical: 15.0),&#xA;                child: Text(&#34;Button&#34;),&#xA;            ),&#xA;        ),&#xA;    ],&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Horizontally Aligned Buttons&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Row(&#xA;    mainAxisSize: MainAxisSize.min,&#xA;    children: [&#xA;        Expanded(&#xA;        child: NeoPopButton(&#xA;            color: kPrimaryButtonColor,&#xA;            buttonPosition: Position.fullBottom,&#xA;            depth: kButtonDepth,&#xA;            onTapUp: () {},&#xA;            child: const Center(&#xA;            child:  Padding(&#xA;                    padding: EdgeInsets.symmetric(&#xA;                        horizontal: 8.0, vertical: 15.0),&#xA;                    child: Text(&#34;Button&#34;),&#xA;                    ),&#xA;                ),&#xA;            ),&#xA;        ),&#xA;        Expanded(&#xA;            child: NeoPopButton(&#xA;                color: kSecondaryButtonLightColor,&#xA;                bottomShadowColor: kShadowColorDarkGreen,&#xA;                rightShadowColor: kShadowColorGreen,&#xA;                buttonPosition: Position.fullBottom,&#xA;                depth: kButtonDepth,&#xA;                onTapUp: () {},&#xA;                border: Border.all(&#xA;                    color: kBorderColorGreen, width: kButtonBorderWidth,&#xA;                ),&#xA;                child: const Center(&#xA;                child: Padding(&#xA;                    padding: EdgeInsets.symmetric( horizontal: 8.0, vertical: 15.0),&#xA;                    child: Text(&#xA;                            &#34;Button&#34;,&#xA;                            style: TextStyle(color: Colors.white),&#xA;                        ),&#xA;                    ),&#xA;                ),&#xA;            ),&#xA;        ),&#xA;    ],&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;NeoPopButton Attributes&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Attribute&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;child&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Widget&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The child of button widget&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Color of the button&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;depth&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;double&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The depth of the button if it is elevated&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;onTapUp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;VoidCallback?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Callback triggered when the forward &amp;amp; reverse button animation is finished&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;onTapDown&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;VoidCallback?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Callback triggered as soon as the user clicks the &lt;code&gt;enabled&lt;/code&gt; button&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;onLongPress&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;VoidCallback?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Callback triggered when user has long pressed the cta&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;disabledColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Color of the button when it is disabled&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;parentColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Button&#39;s immediate ancestor&#39;s color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;grandparentColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Button&#39;s second level ancestor&#39;s color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;buttonPosition&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Position&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The position of button in reference to parent view. &lt;code&gt;default - Position.fullBottom&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;animationDuration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Animation duration of the button click. &lt;code&gt;default - const Duration(milliseconds: 50)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;forwardDuration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Duration?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;If you want different forward duration for button click, use forwardDuration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;reverseDuration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Duration?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;If you want different reverse duration for button click, use reverseDuration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;border&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Border?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The border to be painted around the button&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;If set to &lt;code&gt;false&lt;/code&gt;, the button will be disabled. &lt;code&gt;default - true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;shadowColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Color?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The base color of the shadow. The shadow colors will be derived from this&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;rightShadowColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Color?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The color of the right shadow.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;leftShadowColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Color?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The color of the left shadow.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;topShadowColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Color?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The color of the top shadow.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;bottomShadowColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Color?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The color of the bottom shadow.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;NeoPopTiltedButton&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/58745044/176997116-89e1de77-f903-4051-8145-012f3af1fe7d.jpg&#34; alt=&#34;NeoPopTiltedButton&#34; title=&#34;NeoPopTiltedButton&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Non Floating&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9965653/172599904-75d12903-f490-47d6-b8df-39adc9ef058e.png&#34; alt=&#34;Non Floating&#34; title=&#34;Non Floating&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9965653/175874607-e8e10326-1d6d-4b7d-be8f-50cc8f37ee14.gif&#34; alt=&#34;tiltNonFloating&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; NeoPopTiltedButton(&#xA;    color: kPrimaryButtonColor,&#xA;    onTapUp: () {},&#xA;    child: Padding(&#xA;        padding: const EdgeInsets.symmetric(&#xA;        horizontal: 80.0,&#xA;        vertical: 15,&#xA;        ),&#xA;        child: SvgPicture.asset(&#39;assets/svg/cta_text_view.svg&#39;),&#xA;    ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Floating&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9965653/172599406-6da2d3a4-06ff-4a74-bd6a-988b36a59159.png&#34; alt=&#34;Floating&#34; title=&#34;Floating&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9965653/175874595-86cc0725-df20-4ab3-b432-a6110d4c97c4.gif&#34; alt=&#34;tiltFloating&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NeoPopTiltedButton(&#xA;    isFloating: true,&#xA;    onTapUp: () =&amp;gt; HapticFeedback.vibrate(),&#xA;    onTapDown: () =&amp;gt; HapticFeedback.vibrate(),&#xA;    decoration: const NeoPopTiltedButtonDecoration(&#xA;        color: kPopYellowColor,&#xA;        plunkColor: kPlunkColorYellow,&#xA;        shadowColor: kTiltedButtonShadowColor,&#xA;    ),&#xA;    child: Padding(&#xA;        padding: const EdgeInsets.symmetric(&#xA;        horizontal: 70.0,&#xA;        vertical: 15,&#xA;        ),&#xA;        child: SvgPicture.asset(&#39;assets/svg/cta_text_play_now.svg&#39;),&#xA;    ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Strokes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9965653/172600281-53eec23d-3596-470e-95ed-dc93ebef82bb.png&#34; alt=&#34;Strokes&#34; title=&#34;Strokes&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9965653/175874601-91a27b7d-9e1b-4148-9a26-b9c9245e7a05.gif&#34; alt=&#34;TiltStroked&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NeoPopTiltedButton(&#xA;    isFloating: true,&#xA;    onTapUp: () {},&#xA;    decoration: const NeoPopTiltedButtonDecoration(&#xA;        color: Color(0xFF0D0D0D),&#xA;        plunkColor: Color(0xFF3F6915),&#xA;        shadowColor: Colors.black,&#xA;        border: Border.fromBorderSide(&#xA;        BorderSide(color: Color(0xFF8DD04A), width: 1),&#xA;        ),&#xA;    ),&#xA;    child: const Padding(&#xA;        padding: EdgeInsets.symmetric(horizontal: 70.0, vertical: 15),&#xA;        child: Text(&#39;Play Now&#39;, style: TextStyle(color: Colors.white)),&#xA;    ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Shimmer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9965653/175874574-99f209f2-2d14-458b-9f92-959e6aabf112.gif&#34; alt=&#34;shimmer&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NeoPopTiltedButton(&#xA;    isFloating: true,&#xA;    onTapUp: () {},&#xA;    decoration: const NeoPopTiltedButtonDecoration(&#xA;        color: Color.fromRGBO(255, 235, 52, 1),&#xA;        plunkColor: Color.fromRGBO(255, 235, 52, 1),&#xA;        shadowColor: Color.fromRGBO(36, 36, 36, 1),&#xA;        showShimmer: true,&#xA;    ),&#xA;    child: const Padding(&#xA;        padding: EdgeInsets.symmetric(&#xA;        horizontal: 70.0,&#xA;        vertical: 15,&#xA;        ),&#xA;        child: Text(&#39;Play Now&#39;),&#xA;    ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;NeoPopTiltedButton Attributes&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Attribute&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;child&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Widget&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The child of the button&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Color?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Color of the button&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;decoration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;NeoPopTiltedButtonDecoration?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The decoration to paint the button. The &lt;code&gt;color&lt;/code&gt; and &lt;code&gt;decoration&lt;/code&gt; arguments cannot both be supplied, since it would potentially result in the decoration drawing over the background color. To supply a decoration with a color, use &lt;code&gt;decoration&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;buttonDepth&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;double?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The depth of the tilted button. &lt;code&gt;default: 8.0&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;onTapUp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;VoidCallback?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A callback triggered when a pointer that will trigger a tap with button has stopped contacting the screen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;onTapDown&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;VoidCallback?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A callback triggered when a pointer that might cause a tap with button has contacted the screen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;shadowDistance&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;double?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The maximum distance from the button at which the shadow is painted. &lt;code&gt;default: 20&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;yPosFactor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;double?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Factor that defines the floating positions of buttons and shadow along vertical-axis. &lt;code&gt;default: 5&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;isFloating&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Whether the button is floating. &lt;code&gt;default: false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;floatingDuration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Duration?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The duration of the floating animation. One floating cycle i.e to-and-fro movement of the button and shadow accounts for two floating durations. &lt;code&gt;default: Duration(milliseconds: 1500)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;floatingDelay&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Duration?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The delay between two floating cycles. &lt;code&gt;default: Duration(milliseconds: 750)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;tapDuration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Duration?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The duration of the animation when button is pressed or released. &lt;code&gt;default: Duration(milliseconds: 100)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Whether the button is enabled. &lt;code&gt;default: true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome! We&#39;d love help improving this library. Feel free to browse through open issues to look for things that need work. If you have a feature request or bug, please open a new issue so we can track it.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2022 Dreamplug Technologies Private Limited.  &#xA;  &#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);  &#xA;you may not use this file except in compliance with the License.  &#xA;You may obtain a copy of the License at  &#xA;  &#xA; http://www.apache.org/licenses/LICENSE-2.0  &#xA;Unless required by applicable law or agreed to in writing, software  &#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,  &#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  &#xA;See the License for the specific language governing permissions and  &#xA;limitations under the License.  &#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>