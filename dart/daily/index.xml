<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-05T01:33:09Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>theyakka/qr.flutter</title>
    <updated>2023-03-05T01:33:09Z</updated>
    <id>tag:github.com,2023-03-05:/theyakka/qr.flutter</id>
    <link href="https://github.com/theyakka/qr.flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;QR.Flutter is a Flutter library for simple and fast QR code rendering via a Widget or custom painter.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://storage.googleapis.com/product-logos/logo_qr_flutter.png&#34; align=&#34;center&#34; width=&#34;200&#34;&gt; &#xA;&lt;p&gt;QR.Flutter is a Flutter library for simple and fast QR code rendering via a Widget or custom painter.&lt;/p&gt; &#xA;&lt;h1&gt;Need help?&lt;/h1&gt; &#xA;&lt;p&gt;Please do not submit an issue for a &#34;How do i ..?&#34; or &#34;What is the deal with ..?&#34; type question. They will pretty much be closed instantly. If you have questions, please ask them on the Discussions board or on Stack Overflow. They will get answered there.&lt;/p&gt; &#xA;&lt;p&gt;Using issues creates a large amount of noise and results in real issues getting fixed slower.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Null safety&lt;/li&gt; &#xA; &lt;li&gt;Built on &lt;a href=&#34;https://github.com/kevmoo/qr.dart&#34;&gt;QR - Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Automatic QR code version/type detection or manual entry&lt;/li&gt; &#xA; &lt;li&gt;Supports QR code versions 1 - 40&lt;/li&gt; &#xA; &lt;li&gt;Error correction / redundancy&lt;/li&gt; &#xA; &lt;li&gt;Configurable output size, padding, background and foreground colors&lt;/li&gt; &#xA; &lt;li&gt;Supports image overlays&lt;/li&gt; &#xA; &lt;li&gt;Export to image data to save to file or use in memory&lt;/li&gt; &#xA; &lt;li&gt;No internet connection required&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Version compatibility&lt;/strong&gt;: 4.0.0+ supports null safety and requires a version of Flutter that is compatible. If you&#39;re using an incompatible version of flutter, please use a 3.x version of this library.&lt;/p&gt; &#xA;&lt;p&gt;You should add the following to your &lt;code&gt;pubspec.yaml&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  qr_flutter: ^4.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you&#39;re using the Flutter &lt;code&gt;master&lt;/code&gt; channel, if you encounter build issues, or want to try the latest and greatest then you should use the &lt;code&gt;master&lt;/code&gt; branch and not a specific release version. To do so, use the following configuration in your &lt;code&gt;pubspec.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  qr_flutter:&#xA;    git:&#xA;      url: git://github.com/lukef/qr.flutter.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Keep in mind the &lt;code&gt;master&lt;/code&gt; branch could be unstable.&lt;/p&gt; &#xA;&lt;p&gt;After adding the dependency to your &lt;code&gt;pubspec.yaml&lt;/code&gt; you can run: &lt;code&gt;flutter packages get&lt;/code&gt; or update your packages using your IDE.&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;p&gt;To start, import the dependency in your code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:qr_flutter/qr_flutter.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, to render a basic QR code you can use the following code (or something like it):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;QrImage(&#xA;  data: &#34;1234567890&#34;,&#xA;  version: QrVersions.auto,&#xA;  size: 200.0,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Depending on your data requirements you may want to tweak the QR code output. The following options are available:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;version&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;int&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;QrVersions.auto&lt;/code&gt; or a value between 1 and 40. See &lt;a href=&#34;http://www.qrcode.com/en/about/version.html&#34;&gt;http://www.qrcode.com/en/about/version.html&lt;/a&gt; for limitations and details.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;errorCorrectionLevel&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;int&lt;/td&gt; &#xA;   &lt;td&gt;A value defined on &lt;code&gt;QrErrorCorrectLevel&lt;/code&gt;. e.g.: &lt;code&gt;QrErrorCorrectLevel.L&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;size&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;double&lt;/td&gt; &#xA;   &lt;td&gt;The (square) size of the image. If not given, will auto size using shortest size constraint.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;padding&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;EdgeInsets&lt;/td&gt; &#xA;   &lt;td&gt;Padding surrounding the QR code data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;backgroundColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Color&lt;/td&gt; &#xA;   &lt;td&gt;The background color (default is none).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;foregroundColor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Color&lt;/td&gt; &#xA;   &lt;td&gt;The foreground color (default is black).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;gapless&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;Adds an extra pixel in size to prevent gaps (default is true).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;errorStateBuilder&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;QrErrorBuilder&lt;/td&gt; &#xA;   &lt;td&gt;Allows you to show an error state &lt;code&gt;Widget&lt;/code&gt; in the event there is an error rendering the QR code (e.g.: version is too low, input is too long, etc).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;constrainErrorBounds&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;If true, the error &lt;code&gt;Widget&lt;/code&gt; will be constrained to the square that the QR code was going to be drawn in. If false, the error state &lt;code&gt;Widget&lt;/code&gt; will grow/shrink to whatever size it needs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;embeddedImage&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ImageProvider&lt;/td&gt; &#xA;   &lt;td&gt;An &lt;code&gt;ImageProvider&lt;/code&gt; that defines an image to be overlaid in the center of the QR code.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;embeddedImageStyle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;QrEmbeddedImageStyle&lt;/td&gt; &#xA;   &lt;td&gt;Properties to style the embedded image.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;embeddedImageEmitsError&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;If true, any failure to load the embedded image will trigger the &lt;code&gt;errorStateBuilder&lt;/code&gt; or render an empty &lt;code&gt;Container&lt;/code&gt;. If false, the QR code will be rendered and the embedded image will be ignored.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;semanticsLabel&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;semanticsLabel&lt;/code&gt; will be used by screen readers to describe the content of the QR code.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Examples&lt;/h1&gt; &#xA;&lt;p&gt;There is a simple, working, example Flutter app in the &lt;code&gt;/example&lt;/code&gt; directory. You can use it to play with all the options.&lt;/p&gt; &#xA;&lt;p&gt;Also, the following examples give you a quick overview on how to use the library.&lt;/p&gt; &#xA;&lt;p&gt;A basic QR code will look something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;QrImage(&#xA;  data: &#39;This is a simple QR code&#39;,&#xA;  version: QrVersions.auto,&#xA;  size: 320,&#xA;  gapless: false,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A QR code with an image (from your application&#39;s assets) will look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;QrImage(&#xA;  data: &#39;This QR code has an embedded image as well&#39;,&#xA;  version: QrVersions.auto,&#xA;  size: 320,&#xA;  gapless: false,&#xA;  embeddedImage: AssetImage(&#39;assets/images/my_embedded_image.png&#39;),&#xA;  embeddedImageStyle: QrEmbeddedImageStyle(&#xA;    size: Size(80, 80),&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To show an error state in the event that the QR code can&#39;t be validated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;QrImage(&#xA;  data: &#39;This QR code will show the error state instead&#39;,&#xA;  version: 1,&#xA;  size: 320,&#xA;  gapless: false,&#xA;  errorStateBuilder: (cxt, err) {&#xA;    return Container(&#xA;      child: Center(&#xA;        child: Text(&#xA;          &#34;Uh oh! Something went wrong...&#34;,&#xA;          textAlign: TextAlign.center,&#xA;        ),&#xA;      ),&#xA;    );&#xA;  },&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;h2&gt;Has it been tested in production? Can I use it in production?&lt;/h2&gt; &#xA;&lt;p&gt;Yep! It&#39;s stable and ready to rock. It&#39;s currently in use in quite a few production applications including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sixpoint: &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.sixpoint.sixpoint&amp;amp;hl=en_US&#34;&gt;Android&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://itunes.apple.com/us/app/sixpoint/id663008674?mt=8&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Outro&lt;/h1&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to Kevin Moore for his awesome &lt;a href=&#34;https://github.com/kevmoo/qr.dart&#34;&gt;QR - Dart&lt;/a&gt; library. It&#39;s the core of this library.&lt;/p&gt; &#xA;&lt;p&gt;For author/contributor information, see the &lt;code&gt;AUTHORS&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;QR.Flutter is released under a BSD-3 license. See &lt;code&gt;LICENSE&lt;/code&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>shorebirdtech/shorebird</title>
    <updated>2023-03-05T01:33:09Z</updated>
    <id>tag:github.com,2023-03-05:/shorebirdtech/shorebird</id>
    <link href="https://github.com/shorebirdtech/shorebird" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Home of the Shorebird Tools 🐦&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Shorebird 🐦&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/9hKJcWGcaB&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/9hKJcWGcaB&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shorebirdtech/shorebird/main/LICENSE-MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/shorebirdtech/shorebird/main/LICENSE-APACHE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache-orange.svg?sanitize=true&#34; alt=&#34;License: Apache&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Home of the Shorebird Tools&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re in the process of converting the quick demos written by one person, into a multi-contributor project usable by others. Previous demo code can be found at: &lt;a href=&#34;https://github.com/shorebirdtech/old_repo&#34;&gt;https://github.com/shorebirdtech/old_repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This repository is a monorepo containing the following packages:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shorebirdtech/shorebird/main/packages/shorebird_cli/README.md&#34;&gt;shorebird_cli&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Command-line which allows developers to interact with various Shorebird services&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shorebirdtech/shorebird/main/packages/shorebird_code_push_api/README.md&#34;&gt;shorebird_code_push_api&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Server which exposes endpoints to support CodePush for Flutter applications&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/shorebirdtech/shorebird/main/packages/shorebird_code_push_api_client/README.md&#34;&gt;shorebird_code_push_api_client&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dart library which allows Dart applications to interact with the ShoreBird CodePush API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For more information, please refer to the documentation for each package.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;❗️ Note: This project is under heavy development. Things will change frequently and none of the code is ready for production use. We will do our best to keep the documentation up-to-date.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re interested in contributing, please join us on &lt;a href=&#34;https://discord.gg/9hKJcWGcaB&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Shorebird projects are licensed for use under either Apache License, Version 2.0 (LICENSE-APACHE or &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;) MIT license (LICENSE-MIT or &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;) at your option.&lt;/p&gt; &#xA;&lt;p&gt;See our license philosophy for more information on why we license files this way: &lt;a href=&#34;https://github.com/shorebirdtech/handbook/raw/main/engineering.md#licensing-philosophy&#34;&gt;https://github.com/shorebirdtech/handbook/blob/main/engineering.md#licensing-philosophy&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Yassinmaher/chat-app</title>
    <updated>2023-03-05T01:33:09Z</updated>
    <id>tag:github.com,2023-03-05:/Yassinmaher/chat-app</id>
    <link href="https://github.com/Yassinmaher/chat-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chat_app&lt;/h1&gt; &#xA;&lt;p&gt;A new Flutter project.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This project is a starting point for a Flutter application.&lt;/p&gt; &#xA;&lt;p&gt;A few resources to get you started if this is your first Flutter project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/codelab&#34;&gt;Lab: Write your first Flutter app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/cookbook&#34;&gt;Cookbook: Useful Flutter samples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For help getting started with Flutter, view our &lt;a href=&#34;https://flutter.dev/docs&#34;&gt;online documentation&lt;/a&gt;, which offers tutorials, samples, guidance on mobile development, and a full API reference.&lt;/p&gt;</summary>
  </entry>
</feed>