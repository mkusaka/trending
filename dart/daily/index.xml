<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-27T01:39:32Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LukeMoody01/mason_bricks</title>
    <updated>2022-06-27T01:39:32Z</updated>
    <id>tag:github.com,2022-06-27:/LukeMoody01/mason_bricks</id>
    <link href="https://github.com/LukeMoody01/mason_bricks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of bricks that enable developers to be more productive when writing code.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/felangel/mason/master/assets/mason_full.png&#34; height=&#34;125&#34; alt=&#34;mason logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/felangel/mason/actions&#34;&gt;&lt;img src=&#34;https://github.com/felangel/mason/workflows/mason/badge.svg?sanitize=true&#34; alt=&#34;mason&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/very_good_analysis&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-very_good_analysis-B22C89.svg?sanitize=true&#34; alt=&#34;style: very good analysis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-purple.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A collection of bricks that enable developers to be more productive when writing code. &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Bricks ðŸ§±&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Brick&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://brickhub.dev/bricks/model/0.3.7&#34;&gt;model&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A brick to create your model with properties and all the supporting methods, copyWith, to/from json, equatable and more!&lt;/td&gt; &#xA;   &lt;td&gt;0.3.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://brickhub.dev/bricks/feature_brick/0.3.0&#34;&gt;feature_brick&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A brick to create a feature using best practices and your state management of choice!&lt;/td&gt; &#xA;   &lt;td&gt;0.3.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://brickhub.dev/bricks/app_ui/0.0.4&#34;&gt;app_ui&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A brick to create your UI package that holds all your app&#39;s Colors, Typography, Layout, Theme, and more!&lt;/td&gt; &#xA;   &lt;td&gt;0.0.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://brickhub.dev/bricks/service/0.0.4&#34;&gt;service&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A brick to create your service and interface with your defined methods. With optional singleton handling!&lt;/td&gt; &#xA;   &lt;td&gt;0.0.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://brickhub.dev/bricks/service_package/0.0.4&#34;&gt;service_package&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A brick to create your service package including methods, models, tests, and more!&lt;/td&gt; &#xA;   &lt;td&gt;0.0.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;In the works...&lt;/td&gt; &#xA;   &lt;td&gt;In the works...&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LukeMoody01/mason_bricks/tree/master/bricks/model&#34;&gt;Model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LukeMoody01/mason_bricks/tree/master/bricks/feature_brick&#34;&gt;Feature Brick&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LukeMoody01/mason_bricks/tree/master/bricks/app_ui&#34;&gt;App UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LukeMoody01/mason_bricks/tree/master/bricks/service&#34;&gt;Service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LukeMoody01/mason_bricks/tree/master/bricks/service_package&#34;&gt;Service Package&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://github.com/LukeMoody01/mason_bricks/tree/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details on our code of conduct, and the process for submitting pull requests to us.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LukeMoody01&#34;&gt;Luke Moody&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>DavBfr/dart_pdf</title>
    <updated>2022-06-27T01:39:32Z</updated>
    <id>tag:github.com,2022-06-27:/DavBfr/dart_pdf</id>
    <link href="https://github.com/DavBfr/dart_pdf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pdf creation module for dart/flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pdf for Dart and Flutter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/DavBfr/dart_pdf/workflows/Dart%20CI/badge.svg?sanitize=true&#34; alt=&#34;Dart CI&#34;&gt; &lt;a href=&#34;https://pub.dartlang.org/packages/pdf&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/pdf.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dartlang.org/packages/printing&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/printing.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/DavBfr/dart_pdf&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/DavBfr/dart_pdf/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This set of plugins allows Flutter apps to generate and print pdf files to the device printer. This plugin works for iOS and Android.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;dart pdf: &lt;a href=&#34;https://pub.dev/packages/pdf&#34;&gt;https://pub.dev/packages/pdf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;flutter printing: &lt;a href=&#34;https://pub.dev/packages/printing&#34;&gt;https://pub.dev/packages/printing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Live Demo: &lt;a href=&#34;https://davbfr.github.io/dart_pdf/&#34;&gt;https://davbfr.github.io/dart_pdf/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/JORBmbw9h&#34; title=&#34;Buy Me A Coffee&#34;&gt;&lt;img src=&#34;https://bmc-cdn.nyc3.digitaloceanspaces.com/BMC-button-images/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; title=&#34;Buy Me A Coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Follow the instructions here: &lt;a href=&#34;https://raw.githubusercontent.com/DavBfr/dart_pdf/master/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A Makefile is available on the project root directory to download and prepare the dependencies.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Realank/flutter_datetime_picker</title>
    <updated>2022-06-27T01:39:32Z</updated>
    <id>tag:github.com,2022-06-27:/Realank/flutter_datetime_picker</id>
    <link href="https://github.com/Realank/flutter_datetime_picker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a date time picker in flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Datetime Picker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_datetime_picker&#34;&gt;(Pub) flutter_datetime_picker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A flutter date time picker inspired by &lt;a href=&#34;https://github.com/wuzhendev/flutter-cupertino-date-picker&#34;&gt;flutter-cupertino-date-picker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;you can choose date / time / date&amp;amp;time in multiple languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Albanian(sq)&lt;/li&gt; &#xA; &lt;li&gt;Arabic(ar)&lt;/li&gt; &#xA; &lt;li&gt;Armenian(hy)&lt;/li&gt; &#xA; &lt;li&gt;Azerbaijan(az)&lt;/li&gt; &#xA; &lt;li&gt;Basque(eu)&lt;/li&gt; &#xA; &lt;li&gt;Bengali(bn)&lt;/li&gt; &#xA; &lt;li&gt;Bulgarian(bg)&lt;/li&gt; &#xA; &lt;li&gt;Catalan(cat)&lt;/li&gt; &#xA; &lt;li&gt;Chinese(zh)&lt;/li&gt; &#xA; &lt;li&gt;Danish(da)&lt;/li&gt; &#xA; &lt;li&gt;Dutch(nl)&lt;/li&gt; &#xA; &lt;li&gt;English(en)&lt;/li&gt; &#xA; &lt;li&gt;French(fr)&lt;/li&gt; &#xA; &lt;li&gt;German(de)&lt;/li&gt; &#xA; &lt;li&gt;Hebrew(he)&lt;/li&gt; &#xA; &lt;li&gt;Indonesian(id)&lt;/li&gt; &#xA; &lt;li&gt;Italian(it)&lt;/li&gt; &#xA; &lt;li&gt;Japanese(jp)&lt;/li&gt; &#xA; &lt;li&gt;Kazakh(kk)&lt;/li&gt; &#xA; &lt;li&gt;Korean(ko)&lt;/li&gt; &#xA; &lt;li&gt;Persian(fa)&lt;/li&gt; &#xA; &lt;li&gt;Polish (pl)&lt;/li&gt; &#xA; &lt;li&gt;Portuguese(pt)&lt;/li&gt; &#xA; &lt;li&gt;Russian(ru)&lt;/li&gt; &#xA; &lt;li&gt;Spanish(es)&lt;/li&gt; &#xA; &lt;li&gt;Swedish(sv)&lt;/li&gt; &#xA; &lt;li&gt;Thai(th)&lt;/li&gt; &#xA; &lt;li&gt;Turkish(tr)&lt;/li&gt; &#xA; &lt;li&gt;Vietnamese(vi)&lt;/li&gt; &#xA; &lt;li&gt;Khmer(kh)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and you can also custom your own picker content&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Date picker&lt;/th&gt; &#xA;   &lt;th&gt;Time picker&lt;/th&gt; &#xA;   &lt;th&gt;Date Time picker&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Realank/flutter_datetime_picker/master/screen_date.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Realank/flutter_datetime_picker/master/screen_time.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Realank/flutter_datetime_picker/master/screen_datetime_chinese.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;International:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Date Time picker (Chinese)&lt;/th&gt; &#xA;   &lt;th&gt;Date Time picker (America)&lt;/th&gt; &#xA;   &lt;th&gt;Date Time picker (Dutch)&lt;/th&gt; &#xA;   &lt;th&gt;Date Time picker (Russian)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Realank/flutter_datetime_picker/master/screen_datetime_chinese.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Realank/flutter_datetime_picker/master/screen_datetime_english.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Realank/flutter_datetime_picker/master/screen_datetime_dutch.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Realank/flutter_datetime_picker/master/screen_datetime_russian.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Demo App&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Realank/flutter_datetime_picker/master/main_page.png&#34; alt=&#34;main page&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;TextButton(&#xA;    onPressed: () {&#xA;        DatePicker.showDatePicker(context,&#xA;                              showTitleActions: true,&#xA;                              minTime: DateTime(2018, 3, 5),&#xA;                              maxTime: DateTime(2019, 6, 7), onChanged: (date) {&#xA;                            print(&#39;change $date&#39;);&#xA;                          }, onConfirm: (date) {&#xA;                            print(&#39;confirm $date&#39;);&#xA;                          }, currentTime: DateTime.now(), locale: LocaleType.zh);&#xA;    },&#xA;    child: Text(&#xA;        &#39;show date time picker (Chinese)&#39;,&#xA;        style: TextStyle(color: Colors.blue),&#xA;    ));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customize&lt;/h2&gt; &#xA;&lt;p&gt;If you want to customize your own style of date time picker, there is a class called CommonPickerModel, every type of date time picker is extended from this class, you can refer to other picker model (eg. DatePickerModel), and write your custom one, then pass this model to showPicker method, so that your own date time picker will appear, itâ€™s easy, and will perfectly meet your demand&lt;/p&gt; &#xA;&lt;p&gt;How to customize your own picker model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class CustomPicker extends CommonPickerModel {&#xA;  String digits(int value, int length) {&#xA;    return &#39;$value&#39;.padLeft(length, &#34;0&#34;);&#xA;  }&#xA;&#xA;  CustomPicker({DateTime currentTime, LocaleType locale}) : super(locale: locale) {&#xA;    this.currentTime = currentTime ?? DateTime.now();&#xA;    this.setLeftIndex(this.currentTime.hour);&#xA;    this.setMiddleIndex(this.currentTime.minute);&#xA;    this.setRightIndex(this.currentTime.second);&#xA;  }&#xA;&#xA;  @override&#xA;  String leftStringAtIndex(int index) {&#xA;    if (index &amp;gt;= 0 &amp;amp;&amp;amp; index &amp;lt; 24) {&#xA;      return this.digits(index, 2);&#xA;    } else {&#xA;      return null;&#xA;    }&#xA;  }&#xA;&#xA;  @override&#xA;  String middleStringAtIndex(int index) {&#xA;    if (index &amp;gt;= 0 &amp;amp;&amp;amp; index &amp;lt; 60) {&#xA;      return this.digits(index, 2);&#xA;    } else {&#xA;      return null;&#xA;    }&#xA;  }&#xA;&#xA;  @override&#xA;  String rightStringAtIndex(int index) {&#xA;    if (index &amp;gt;= 0 &amp;amp;&amp;amp; index &amp;lt; 60) {&#xA;      return this.digits(index, 2);&#xA;    } else {&#xA;      return null;&#xA;    }&#xA;  }&#xA;&#xA;  @override&#xA;  String leftDivider() {&#xA;    return &#34;|&#34;;&#xA;  }&#xA;&#xA;  @override&#xA;  String rightDivider() {&#xA;    return &#34;|&#34;;&#xA;  }&#xA;&#xA;  @override&#xA;  List&amp;lt;int&amp;gt; layoutProportions() {&#xA;    return [1, 2, 1];&#xA;  }&#xA;&#xA;  @override&#xA;  DateTime finalTime() {&#xA;    return currentTime.isUtc&#xA;        ? DateTime.utc(currentTime.year, currentTime.month, currentTime.day,&#xA;            this.currentLeftIndex(), this.currentMiddleIndex(), this.currentRightIndex())&#xA;        : DateTime(currentTime.year, currentTime.month, currentTime.day, this.currentLeftIndex(),&#xA;            this.currentMiddleIndex(), this.currentRightIndex());&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;For help getting started with Flutter, view our online &lt;a href=&#34;https://flutter.io/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For help on editing package code, view the &lt;a href=&#34;https://flutter.io/developing-packages/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>