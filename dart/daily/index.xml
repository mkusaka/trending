<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-25T01:30:50Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>edufolly/flutter_bluetooth_serial</title>
    <updated>2025-06-25T01:30:50Z</updated>
    <id>tag:github.com,2025-06-25:/edufolly/flutter_bluetooth_serial</id>
    <link href="https://github.com/edufolly/flutter_bluetooth_serial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A basic Flutter Bluetooth Serial&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;flutter_bluetooth_serial&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_bluetooth_serial&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_bluetooth_serial.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flutter basic implementation for Classical Bluetooth (only RFCOMM for now).&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The first goal of this project, started by @edufolly was making an interface for Serial Port Protocol (HC-05 Adapter). Now the plugin features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Adapter status monitoring,&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Turning adapter on and off,&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Opening settings,&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Discovering devices (and requesting discoverability),&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Listing bonded devices and pairing new ones,&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connecting to multiple devices at the same time,&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Sending and receiving data (multiple connections).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The plugin (for now) uses Serial Port profile for moving data over RFCOMM, so make sure there is running Service Discovery Protocol that points to SP/RFCOMM channel of the device. There could be &lt;a href=&#34;https://stackoverflow.com/a/32149519/4880243&#34;&gt;max up to 7 Bluetooth connections&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For now there is only Android support.&lt;/p&gt; &#xA;&lt;h2&gt;Funding&lt;/h2&gt; &#xA;&lt;p&gt;Your contribution will help drive the development of quality tools for the Flutter and Dart developer community. Any amount will be appreciated. Thank you for your continued support!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/edufolly&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/guidelines/download-assets-sm-2.svg?sanitize=true&#34; alt=&#34;BuyMeACoffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;PIX&lt;/h2&gt; &#xA;&lt;p&gt;Sua contribuição ajudará a impulsionar o desenvolvimento de ferramentas de qualidade para a comunidade de desenvolvedores Flutter e Dart. Qualquer quantia será apreciada. Obrigado pelo seu apoio contínuo!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nubank.com.br/pagar/2bt2q/RBr4Szfuwr&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/edufolly/flutter_bluetooth_serial/master/helpers/pix.png&#34; alt=&#34;PIX&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h4&gt;Depending&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# Add dependency to `pubspec.yaml` of your project.&#xA;dependencies:&#xA;  # ...&#xA;  flutter_bluetooth_serial: ^0.4.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installing&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter pub get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Importing&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter_bluetooth_serial/flutter_bluetooth_serial.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Usage&lt;/h4&gt; &#xA;&lt;p&gt;You should look to the Dart code of the library (mostly documented functions) or to the examples code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Some simplest connection :F&#xA;try {&#xA;    BluetoothConnection connection = await BluetoothConnection.toAddress(address);&#xA;    print(&#39;Connected to the device&#39;);&#xA;&#xA;    connection.input.listen((Uint8List data) {&#xA;        print(&#39;Data incoming: ${ascii.decode(data)}&#39;);&#xA;        connection.output.add(data); // Sending data&#xA;&#xA;        if (ascii.decode(data).contains(&#39;!&#39;)) {&#xA;            connection.finish(); // Closing connection&#xA;            print(&#39;Disconnecting by local host&#39;);&#xA;        }&#xA;    }).onDone(() {&#xA;        print(&#39;Disconnected by remote request&#39;);&#xA;    });&#xA;}&#xA;catch (exception) {&#xA;    print(&#39;Cannot connect, exception occured&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Work is underway to make the communication easier than operations on byte streams. See #41 for discussion about the topic.&lt;/p&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://raw.githubusercontent.com/edufolly/flutter_bluetooth_serial/master/example/README.md&#34;&gt;example application&lt;/a&gt; with connections with both Arduino HC-05 and Raspberry Pi (RFCOMM) Bluetooth interfaces.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Main screen and options&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Discovery and connecting&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Simple chat with server&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Background connection&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/qeeMsVe.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/zruuelZ.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/y5mTUey.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/3wvwDVo.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;To-do list&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add some utils to easier manage &lt;code&gt;BluetoothConnection&lt;/code&gt; (see discussion #41),&lt;/li&gt; &#xA; &lt;li&gt;Allow connection method/protocol/UUID specification,&lt;/li&gt; &#xA; &lt;li&gt;Listening/server mode,&lt;/li&gt; &#xA; &lt;li&gt;Recognizing and displaying &lt;code&gt;BluetoothClass&lt;/code&gt; of device,&lt;/li&gt; &#xA; &lt;li&gt;Maybe integration with &lt;code&gt;flutter_blue&lt;/code&gt; one day ;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You might also want to check &lt;a href=&#34;https://github.com/edufolly/flutter_bluetooth_serial/milestones&#34;&gt;milestones&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:edufolly@gmail.com&#34;&gt;Eduardo Folly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:martin.mauch@gmail.com&#34;&gt;Martin Mauch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:patryk.ludwikowski.7@gmail.com&#34;&gt;Patryk Ludwikowski&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After version 0.3.0 we have a lot of collaborators. If you would like to be credited, please send me an &lt;a href=&#34;mailto:edufolly@gmail.com&#34;&gt;email&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>