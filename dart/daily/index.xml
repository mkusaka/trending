<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-06T01:28:20Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dart-lang/site-www</title>
    <updated>2024-02-06T01:28:20Z</updated>
    <id>tag:github.com,2024-02-06:/dart-lang/site-www</id>
    <link href="https://github.com/dart-lang/site-www" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Source for Dart website&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://github.com/dart-lang/site-shared/raw/main/src/_assets/image/dart/logo/64.png&#34; alt=&#34;Dart&#34; width=&#34;28&#34; height=&#34;28&#34;&gt; The Dart language site (dart.dev)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dart-lang/site-www/actions?query=workflow%3Abuild+branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/dart-lang/site-www/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Build Status SVG&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://deps.dev/project/github/dart-lang%2Fsite-www&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/dart-lang/site-www/badge&#34; alt=&#34;OpenSSF Scorecard SVG&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.firsttimersonly.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/first--timers--only-friendly-blue.svg?style=flat-square&#34; alt=&#34;first-timers SVG&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://dart.dev&#34;&gt;https://dart.dev&lt;/a&gt; site, built with &lt;a href=&#34;https://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt; and hosted on &lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dart-lang/site-www/main/CONTRIBUTING.md&#34;&gt;We welcome contributions&lt;/a&gt;, and we&#39;re &lt;a href=&#34;https://www.firsttimersonly.com/&#34;&gt;first-timer friendly&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Start by looking for an &lt;a href=&#34;https://github.com/dart-lang/site-www/issues&#34;&gt;issue&lt;/a&gt; that catches your interest, or create an issue with your proposed change. Ask for the issue to be assigned to you.&lt;/p&gt; &#xA;&lt;p&gt;To update this site, fork the repo, make your changes, and generate a pull request. For simple changes (such as to CSS and text), you probably don&#39;t need to build this site. Often you can make changes using the GitHub UI.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you clone this repo locally, see the instructions below on cloning with its submodule.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If your change involves code samples, adds/removes pages, or affects navigation, you&#39;ll need to build and test your work before submitting.&lt;/p&gt; &#xA;&lt;p&gt;If you want or need to build, follow the steps below.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Help us improve these instructions!&lt;/strong&gt; If you have any problems getting set up to build or performing the actual build, please &lt;a href=&#34;https://github.com/dart-lang/site-www/edit/main/README.md&#34;&gt;edit this README&lt;/a&gt; or &lt;a href=&#34;https://github.com/dart-lang/site-www/issues/new?title=README%20issue&#34;&gt;file an issue&lt;/a&gt; (or both).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Before you build this site&lt;/h2&gt; &#xA;&lt;p&gt;For changes beyond simple text and CSS tweaks, we recommend building the site.&lt;/p&gt; &#xA;&lt;h3&gt;1. Get the prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Install the following tools, if you don&#39;t have them already:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;bash&lt;/strong&gt;, the Bourne shell. These instructions assume you&#39;re using &lt;code&gt;bash&lt;/code&gt;, and setup might not work if you use another shell.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;GNU Make&lt;/strong&gt;. On Windows the easiest way to install Make is &lt;code&gt;choco install make&lt;/code&gt; using command prompt or powershell as an admin. Other options include using a &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install&#34;&gt;subsystem&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;. We use Docker for local dev, tests, and building the site. Install it from &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;https://docs.docker.com/get-docker/&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Firebase CLI&lt;/strong&gt;, for hosting the site locally. One way to get this is to run &lt;code&gt;npm install -g firebase-tools&lt;/code&gt;. For full setup details, read the &lt;a href=&#34;https://firebase.google.com/docs/cli&#34;&gt;Firebase CLI documentation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. Clone this repo &lt;em&gt;and&lt;/em&gt; its submodules&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This repo has git &lt;em&gt;submodules&lt;/em&gt;, which affects how you clone it. The GitHub documentation has general help on &lt;a href=&#34;https://docs.github.com/en/get-started/quickstart/fork-a-repo&#34;&gt;forking&lt;/a&gt; and &lt;a href=&#34;https://help.github.com/articles/cloning-a-repository&#34;&gt;cloning&lt;/a&gt; repos.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you&#39;re not a member of the Dart organization, we recommend you &lt;strong&gt;create a fork&lt;/strong&gt; of this repo under your own account, and then submit a PR from that fork.&lt;/p&gt; &#xA;&lt;p&gt;Once you have a fork (or you&#39;re a Dart org member), &lt;em&gt;choose one&lt;/em&gt; of the following submodule-cloning techniques:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repo and its submodule at the same time using the &lt;code&gt;--recurse-submodules&lt;/code&gt; option:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ git clone --recurse-submodules https://github.com/dart-lang/site-www.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;OR&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you&#39;ve already cloned the repo without its submodule, then run this command from the repo root:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; At any time during development you can use the &lt;code&gt;git submodule&lt;/code&gt; command to refresh submodules:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ git pull; git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up your local environment and serve changes&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Optional:&lt;/em&gt; After cloning the repo and its submodules, create a branch for your changes:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ git checkout -b &amp;lt;BRANCH_NAME&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the Docker Desktop application isn&#39;t already running on your machine, start it. Look for the Docker status icon: if it has an exclamation point (&lt;code&gt;!&lt;/code&gt;), then update Docker Desktop before proceeding.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the initial local setup command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ make setup&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Serve the site locally (via &lt;code&gt;docker-compose&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ make up&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The site is generated, and then the development server runs in the Docker container, with the generated &lt;code&gt;_site&lt;/code&gt; directory visible locally as a mirrored volume from inside the container.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;View your changes in the browser by navigating to &lt;code&gt;http://localhost:4000&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Unless you&#39;re editing files under &lt;code&gt;site-shared&lt;/code&gt;, you can safely ignore &lt;code&gt;ERROR: directory is already being watched&lt;/code&gt; messages. For details, see &lt;a href=&#34;https://github.com/flutter/website/issues/1363&#34;&gt;#1363&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make your changes to the local repo.&lt;/p&gt; &lt;p&gt;The site will rebuild and the browser will autoreload to reflect the changes.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; If you aren&#39;t seeing the changes you expect (e.g. src/_data), &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;C&lt;/kbd&gt; out of your running dev server and rebuild the site from scratch using the following commands:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ make down &amp;amp;&amp;amp; make clean &amp;amp;&amp;amp; make up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Commit your changes to the branch and submit your PR.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/dart-lang/site-www/main/#pre-push-site-checks&#34;&gt;Pre-push site checks&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you&#39;ve finished developing, shut down the Docker container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ make down&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; To find additional commands, read the &lt;a href=&#34;https://raw.githubusercontent.com/dart-lang/site-www/main/(https://github.com/dart-lang/site-www/raw/main/Makefile)&#34;&gt;Makefile&lt;/a&gt;. For example, if you need to debug the Docker setup, you can run:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ make run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Pre-push site checks&lt;/h2&gt; &#xA;&lt;h3&gt;Checking documentation and example code&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;ve made changes to this site&#39;s documentation and/or example code, and committed locally, then run the following commands before pushing your work:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;# Enter a running Docker container shell&#xA;$ make run&#xA;&#xA;# Check/validate example code&#xA;$ dart run dart_site check-all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If these scripts report errors or warnings, then address those issues and rerun the above commands. Otherwise, you can push your changes.&lt;/p&gt; &#xA;&lt;h2&gt;Deploying to a staging site&lt;/h2&gt; &#xA;&lt;p&gt;You can deploy your local edits to a personal Firebase hosting staging site as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If you don&#39;t already have a Firebase project,&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Navigate to the &lt;a href=&#34;https://console.firebase.google.com&#34;&gt;Firebase Console&lt;/a&gt; and create your own Firebase project (for example, &lt;code&gt;dart-dev-staging&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Head back to your local repo shell and verify that you are logged in.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ firebase login&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Ensure that your project exists and activate that project:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ firebase projects:list&#xA;$ firebase use &amp;lt;your-project&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the site via Docker:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ make build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will build the site and copy it to your local &lt;code&gt;_site&lt;/code&gt; directory. If that directory previously existed, it will be replaced.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deploy to your activated Firebase project&#39;s default hosting site:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ FIREBASE_PROJECT=&amp;lt;your-project&amp;gt; make deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; Add your &lt;code&gt;FIREBASE_PROJECT&lt;/code&gt; env var to your &lt;code&gt;.env&lt;/code&gt; file and it will overwrite the default every time you deploy without specifying.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to your PR on GitHub and update it with the location of the staged version, the names of your reviewers, and so on.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>tariqzarif/getit</title>
    <updated>2024-02-06T01:28:20Z</updated>
    <id>tag:github.com,2024-02-06:/tariqzarif/getit</id>
    <link href="https://github.com/tariqzarif/getit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;getit&lt;/h1&gt; &#xA;&lt;p&gt;A UI I made in my free time&lt;/p&gt; &#xA;&lt;p&gt;UI link &lt;a href=&#34;https://dribbble.com/shots/22731660-Shopping-App-UI&#34;&gt;https://dribbble.com/shots/22731660-Shopping-App-UI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open for work.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/tariqzarif/getit/assets/102945917/6c7ad7ee-623f-41dd-bf93-29b2d82de621&#34; alt=&#34;getit&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>