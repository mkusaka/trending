<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-30T01:37:04Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>niuhuan/jasmine</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/niuhuan/jasmine</id>
    <link href="https://github.com/niuhuan/jasmine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;(R18+) 一个美观易用的漫画客户端, 同时支持支持 Android / iOS / MacOS / Windows / Linux。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jasmine Comic&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/niuhuan/jasmine/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/niuhuan/jasmine&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/niuhuan/jasmine/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/niuhuan/jasmine&#34; alt=&#34;releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/niuhuan/jasmine/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/niuhuan/jasmine/total&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;一个简单易用的漫画二次元客户端，同时支持支持 Android / iOS / MacOS / Windows.&lt;/p&gt; &#xA;&lt;p&gt;此APP内容存在限制级别内容(露骨/血腥/暴力)，建议在18岁以下的用户在监护人陪同下使用，并请您在遵守当地法律法规。&lt;/p&gt; &#xA;&lt;p&gt;如果您觉得此软件对您有帮助，可以star进行支持。同时欢迎您issue，一起让软件变得更好。&lt;/p&gt; &#xA;&lt;p&gt;仓库地址 &lt;a href=&#34;https://github.com/niuhuan/jasmine&#34;&gt;https://github.com/niuhuan/jasmine&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;软件截图&lt;/h2&gt; &#xA;&lt;h4&gt;浏览器&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/jasmine/master/images/app_screen.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;阅读器&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/jasmine/master/images/reader_screen.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;实现功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 漫画 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 漫画分类检索&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 阅读漫画&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 搜索漫画&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 收藏漫画&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 浏览记录&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 下载漫画&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 游戏&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 社区 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 获取评论&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 发布评论&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 用户 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 登录/注册&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 设备优化 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 安卓的120Hz或更高评率屏幕的支持&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;技术架构&lt;/h2&gt; &#xA;&lt;p&gt;flutter + rust&lt;/p&gt; &#xA;&lt;p&gt;flutter实现了高性能的跨平台界面渲染，rust实现了安全以及高效的业务调度。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/jasmine/master/images/technologies.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;请您遵守使用规则&lt;/h2&gt; &#xA;&lt;p&gt;本软件或本软件的拓展, 个人或企业不可用于商业用途, 不可上架任何商店&lt;/p&gt; &#xA;&lt;p&gt;拓展包括但是不限于以下内容&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用本软件进行继续开发形成的软件。&lt;/li&gt; &#xA; &lt;li&gt;引入本软件部分内容为依赖/参考本软件/使用本软件内代码的同时, 包含本软件内一致内容或功能的软件。&lt;/li&gt; &#xA; &lt;li&gt;直接对本软件进行打包发布&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;软件副本分发规则&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;不要在任何其他 &lt;strong&gt;二次元软件&lt;/strong&gt; 的 &lt;strong&gt;聊天社区&lt;/strong&gt; 或 &lt;strong&gt;开发社区&lt;/strong&gt; 内, 发布有关本软件的链接或信息&lt;/li&gt; &#xA; &lt;li&gt;不要发送本软件安装包到 &lt;strong&gt;任何社区内&lt;/strong&gt; , 不要将APK/IPA/ZIP/DMG发送包括任何聊天软件内的群聊功能。 分享本软件时, 在社区中使用Github中提供的Releases页面的链接, 或使用私聊窗口发送。&lt;/li&gt; &#xA; &lt;li&gt;作者不对分发软件承担任何后果, 请您遵守当地以及副本接受社区或副本接收人所在地区的法律。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>honjow/FEhViewer</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/honjow/FEhViewer</id>
    <link href="https://github.com/honjow/FEhViewer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An e-hentai/exhentai app make on flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FEhViewer&lt;/h1&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://github.com/honjow/FEhViewer/raw/nullsafety/README_cn.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitHub.com/honjow/FEhViewer/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/honjow/FEhViewer/total.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/honjow/FEhViewer/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/honjow/FEhViewer/latest/total&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/honjow/FEhViewer/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/honjow/FEhViewer&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/honjow/FEhViewer&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/joinchat/AEj27KMQe0JiMmUx&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Telegram-blue.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=fr6P5pYFbbdzh9djpE0QEMcX0sJd9ISj&amp;amp;jump_from=webapi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-QQ-blue.svg?sanitize=true&#34; alt=&#34;QQ&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;An Unofficial e-hentai app make on flutter&lt;/p&gt; &#xA;&lt;h2&gt;🔍 Translations Wanted 🔍&lt;/h2&gt; &#xA;&lt;p&gt;Please submit a pull request if you want to help with translation.&lt;/p&gt; &#xA;&lt;p&gt;App Strings: &lt;code&gt;lib/l10n/{lang}.arb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation for iOS&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get the ipa file from &lt;a href=&#34;https://github.com/honjow/FEhViewer/releases/latest&#34;&gt;Releases&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use some software like &lt;a href=&#34;https://altstore.io&#34;&gt;AltStore&lt;/a&gt; to install the ipa file on your device.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Descriptions&lt;/h2&gt; &#xA;&lt;p&gt;The main reference for UI is &lt;a href=&#34;https://github.com/kayanouriko/E-HentaiViewer&#34;&gt;E-HentaiViewer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Current Issues:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;List sliding may have a small lag. Not as smooth as native apps&lt;/li&gt; &#xA; &lt;li&gt;Does miss some essential features (still under development)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;The code and logic of the following projects are used and referenced for development&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kayanouriko/E-HentaiViewer&#34;&gt;E-HentaiViewer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seven332/EhViewer&#34;&gt;EhViewer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;EhTagTranslation&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EhTagTranslation/Database&#34;&gt;EhTagTranslation/Database&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Translation&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KeepSOBP&#34;&gt;KeepSOBP&lt;/a&gt; Korean translation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;h3&gt;Home Page List&lt;/h3&gt; &#xA;&lt;img width=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/honjow/FEhViewer/nullsafety/screenshot/home1.jpg&#34;&gt; &#xA;&lt;h3&gt;Gallery&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img width=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/honjow/FEhViewer/nullsafety/screenshot/gallery1.jpg&#34;&gt; &lt;img width=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/honjow/FEhViewer/nullsafety/screenshot/gallery2.jpg&#34;&gt; &lt;img width=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/honjow/FEhViewer/nullsafety/screenshot/gallery3.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Search&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img width=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/honjow/FEhViewer/nullsafety/screenshot/search1.jpg&#34;&gt; &lt;img width=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/honjow/FEhViewer/nullsafety/screenshot/search2.jpg&#34;&gt; &lt;img width=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/honjow/FEhViewer/nullsafety/screenshot/search3.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Read&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img width=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/honjow/FEhViewer/nullsafety/screenshot/read1.jpg&#34;&gt; &lt;img width=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/honjow/FEhViewer/nullsafety/screenshot/read2.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Function&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Popula,Watch,Home,Favorites&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; List View,Waterfall View Switch&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Gallery information view&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Gallery Image view&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatically turn pages&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; eh/ex switch&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Tag search&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Login&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Search&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Search term matching tag&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Advanced search&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Save and share images&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cache optimization&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Advanced settings&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; post comments, vote up ，vote down&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; watched and user tag&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Download&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;h2&gt;Dependency projects/plugins (partial)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;network: &lt;a href=&#34;https://pub.dev/packages/dio&#34;&gt;dio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Status Management: &lt;a href=&#34;https://pub.dev/packages/get&#34;&gt;getx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;db: &lt;a href=&#34;https://pub.dev/packages/sqflite&#34;&gt;sqflite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Data Persistence: &lt;a href=&#34;https://pub.dev/packages/shared_preferences&#34;&gt;shared_preferences&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;intl: &lt;a href=&#34;https://pub.dev/packages/intl&#34;&gt;intl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Image: &lt;a href=&#34;https://pub.dev/packages/cached_network_image&#34;&gt;cached_network_image&lt;/a&gt;、&lt;a href=&#34;https://pub.dev/packages/extended_image&#34;&gt;extended_image&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About compiling&lt;/h2&gt; &#xA;&lt;p&gt;flutter version is the latest release version &lt;br&gt; rename &lt;code&gt;/lib/config/config.dart.sample&lt;/code&gt; to &lt;code&gt;/lib/config/config.dart&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flame-engine/flame</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/flame-engine/flame</id>
    <link href="https://github.com/flame-engine/flame" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter based game engine&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt; &lt;img alt=&#34;flame&#34; width=&#34;200px&#34; src=&#34;https://user-images.githubusercontent.com/6718144/101553774-3bc7b000-39ad-11eb-8a6a-de2daa31bd64.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A Flutter-based game engine. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Pub&#34; href=&#34;https://pub.dev/packages/flame&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flame.svg?style=popout&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/flame-engine/flame/workflows/cicd/badge.svg?branch=main&amp;amp;event=push&#34; alt=&#34;Test&#34;&gt; &lt;a title=&#34;Discord&#34; href=&#34;https://discord.gg/pxrBmy4&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/509714518008528896.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Melos&#34; href=&#34;https://github.com/invertase/melos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20with-melos-f700ff.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-ZH.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-PL.md&#34;&gt;Polski&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-RU.md&#34;&gt;Русский&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-ES.md&#34;&gt;Español&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-JA.md&#34;&gt;日本語&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The full documentation for Flame can be found on &lt;a href=&#34;https://docs.flame-engine.org/&#34;&gt;docs.flame-engine.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To change the version of the documentation, use the version selector noted with &lt;code&gt;version:&lt;/code&gt; in the top of the page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The documentation that resides in the main branch is newer than the released documentation on the docs website.&lt;/p&gt; &#xA;&lt;p&gt;Other useful links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flame-engine.org/&#34;&gt;The official Flame site&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://examples.flame-engine.org/&#34;&gt;Examples&lt;/a&gt; of most features which can be tried out from your browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tutorials.flame-engine.org/&#34;&gt;Tutorials&lt;/a&gt; - A simple tutorial to get started.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/flame/latest/&#34;&gt;API Reference&lt;/a&gt; - The generated dartdoc API reference.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;There is a Flame community on &lt;a href=&#34;https://discord.gg/5unKpdQD78&#34;&gt;Blue Fire&#39;s Discord server&lt;/a&gt; where you can ask any of your Flame related questions.&lt;/p&gt; &#xA;&lt;p&gt;If you are more comfortable with StackOverflow, you can also create a question there. Add the &lt;a href=&#34;https://stackoverflow.com/questions/tagged/flame&#34;&gt;Flame tag&lt;/a&gt;, so that anyone following the tag can help out.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The goal of the Flame Engine is to provide a complete set of out-of-the-way solutions for common problems that games developed with Flutter might share.&lt;/p&gt; &#xA;&lt;p&gt;Some of the key features provided are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A game loop.&lt;/li&gt; &#xA; &lt;li&gt;A component/object system (FCS).&lt;/li&gt; &#xA; &lt;li&gt;Effects and particles.&lt;/li&gt; &#xA; &lt;li&gt;Collision detection.&lt;/li&gt; &#xA; &lt;li&gt;Gesture and input handling.&lt;/li&gt; &#xA; &lt;li&gt;Images, animations, sprites, and sprite sheets.&lt;/li&gt; &#xA; &lt;li&gt;General utilities to make development easier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On top of those features, you can augment Flame with bridge packages. Through these libraries, you will be able to access bindings to other packages, including custom Flame components and helpers, in order to make integrations seamless.&lt;/p&gt; &#xA;&lt;p&gt;Flame officially provides bridge libraries to the following packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_audio&#34;&gt;flame_audio&lt;/a&gt; for &lt;a href=&#34;https://github.com/bluefireteam/audioplayers&#34;&gt;AudioPlayers&lt;/a&gt;: Play multiple audio files simultaneously.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_bloc&#34;&gt;flame_bloc&lt;/a&gt; for &lt;a href=&#34;https://github.com/felangel/bloc&#34;&gt;Bloc&lt;/a&gt;: A predictable state management library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_fire_atlas&#34;&gt;flame_fire_atlas&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/fire-atlas&#34;&gt;FireAtlas&lt;/a&gt;: Create texture atlases for games.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_forge2d&#34;&gt;flame_forge2d&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/forge2d&#34;&gt;Forge2D&lt;/a&gt;: A Box2D physics engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_lint&#34;&gt;flame_lint&lt;/a&gt; - Our set of linting (&lt;code&gt;analysis_options.yaml&lt;/code&gt;) rules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_oxygen&#34;&gt;flame_oxygen&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/oxygen&#34;&gt;Oxygen&lt;/a&gt;: A lightweight Entity Component System (ECS) framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_rive&#34;&gt;flame_rive&lt;/a&gt; for &lt;a href=&#34;https://rive.app/&#34;&gt;Rive&lt;/a&gt;: Create interactive animations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_svg&#34;&gt;flame_svg&lt;/a&gt; for &lt;a href=&#34;https://github.com/dnfield/flutter_svg&#34;&gt;flutter_svg&lt;/a&gt;: Draw SVG files in Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_tiled&#34;&gt;flame_tiled&lt;/a&gt; for &lt;a href=&#34;https://www.mapeditor.org/&#34;&gt;Tiled&lt;/a&gt;: 2D tile map level editor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;The Flame Engine&#39;s top sponsors:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://verygood.ventures/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/media/unicorn_two_toned.png&#34; alt=&#34;Very Good Ventures&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cypherstack.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/media/logo_cypherstack.png&#34; alt=&#34;Cypher Stack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to sponsor Flame? Check our Patreon on the section below, or contact us on Discord.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to show us your support is by giving the project a star.&lt;/p&gt; &#xA;&lt;p&gt;You can also support us by becoming a patron on Patreon:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/bluefireoss&#34;&gt;&lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button.png&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or by making a single donation by buying us a coffee:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/bluefire&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/835641/60540201-fcd7fa00-9ce4-11e9-87ec-1e98568e9f58.png&#34; alt=&#34;Buy Me A Coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also show on your repository that your game is made with Flame by using one of the following badges:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?sanitize=true&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?style=flat-square&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?style=for-the-badge&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg)](https://flame-engine.org)&#xA;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg?style=flat-square)](https://flame-engine.org)&#xA;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg?style=for-the-badge)](https://flame-engine.org)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Have you found a bug or have a suggestion of how to enhance Flame? Open an issue and we will take a look at it as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;Do you want to contribute with a PR? PRs are always welcome, just make sure to create it from the correct branch (main) and follow the &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/.github/pull_request_template.md&#34;&gt;checklist&lt;/a&gt; which will appear when you open the PR.&lt;/p&gt; &#xA;&lt;p&gt;For bigger changes, or if in doubt, make sure to talk about your contribution to the team. Either via an issue, GitHub discussion, or reach out to the team either using the &lt;a href=&#34;https://discord.gg/pxrBmy4&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;A simple tutorial to get started can be found on &lt;a href=&#34;https://tutorials.flame-engine.org&#34;&gt;tutorials.flame-engine.org&lt;/a&gt; and examples of most features in Flame can be found on &lt;a href=&#34;https://examples.flame-engine.org&#34;&gt;examples.flame-engine.org&lt;/a&gt;. To access the code for each example, press the &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt; button in the top right corner.&lt;/p&gt; &#xA;&lt;h3&gt;Highlighted community tutorials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;@Devowl&#39;s Flutter &amp;amp; Flame series:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-flame-step-1-create-your-game-b3b6ee387d77&#34;&gt;Step 1: Create your game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-flame-step-2-game-basics-48b4493424f3&#34;&gt;Step 2: Game basics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-3-sprites-and-inputs-7ca9cc7c8b91&#34;&gt;Step 3: Sprites and inputs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-4-collisions-viewport-ff2da048e3a6&#34;&gt;Step 4: Collisions &amp;amp; Viewport&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-5-level-generation-camera-62a060a286e3&#34;&gt;Step 5: Level generation &amp;amp; camera&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Other tutorials:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;@Vguzzi&#39;s article &lt;a href=&#34;https://www.raywenderlich.com/27407121-building-games-in-flutter-with-flame-getting-started&#34;&gt;Building Games in Flutter with Flame&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;@DevKage&#39;s YouTube series with the &lt;a href=&#34;https://www.youtube.com/playlist?list=PLiZZKL9HLmWOmQgYxWHuOHOWsUUlhCCOY&#34;&gt;Dino run tutorial&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We offer a curated list of Games, Libraries and Articles over at &lt;a href=&#34;https://github.com/flame-engine/awesome-flame&#34;&gt;awesome-flame&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that some of the articles might be slightly outdated, but can still be useful.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/orgs/bluefireteam/people&#34;&gt;Blue Fire team&lt;/a&gt;, who are continuously working on maintaining and improving Flame and its ecosystem.&lt;/li&gt; &#xA; &lt;li&gt;All the friendly contributors and people who are helping in the community.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>pichillilorenzo/flutter_inappwebview</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/pichillilorenzo/flutter_inappwebview</id>
    <link href="https://github.com/pichillilorenzo/flutter_inappwebview" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter plugin that allows you to add an inline webview, to use a headless webview, and to open an in-app browser window.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter InAppWebView Plugin &lt;a href=&#34;https://twitter.com/intent/tweet?text=Flutter%20InAppBrowser%20plugin!&amp;amp;url=https://github.com/pichillilorenzo/flutter_inappwebview&amp;amp;hashtags=flutter,flutterio,dart,dartlang,webview&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Share on Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.facebook.com/sharer/sharer.php?u=https%3A//github.com/pichillilorenzo/flutter_inappwebview&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share-facebook-blue.svg?longCache=true&amp;amp;style=flat&amp;amp;colorB=%234267b2&#34; alt=&#34;Share on Facebook&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_inappwebview&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_inappwebview.svg?sanitize=true&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_inappwebview/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_inappwebview/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_inappwebview/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_inappwebview/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_inappwebview/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_inappwebview/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/flutter-inappwebview&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&amp;amp;style=flat-square&#34; alt=&#34;Awesome Flutter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/pichillilorenzo/flutter_inappwebview/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://inappwebview.dev/donate/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/support-donate-yellow.svg?sanitize=true&#34; alt=&#34;Donate to this project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pichillilorenzo/flutter_inappwebview/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/pichillilorenzo/flutter_inappwebview&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pichillilorenzo/flutter_inappwebview&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/pichillilorenzo/flutter_inappwebview?style=social&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pichillilorenzo/flutter_inappwebview&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/pichillilorenzo/flutter_inappwebview?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5956938/110180687-8751f480-7e0a-11eb-89cc-d62f85c148cb.png&#34; alt=&#34;InAppWebView-logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Flutter plugin that allows you to add an inline webview, to use an headless webview, and to open an in-app browser window.&lt;/p&gt; &#xA;&lt;h2&gt;Articles/Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/&#34;&gt;Official documentation: inappwebview.dev/docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read the online &lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_inappwebview/latest/&#34;&gt;API Reference&lt;/a&gt; to get the &lt;strong&gt;full API documentation&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/blog/&#34;&gt;Official blog: inappwebview.dev/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Find open source projects on the &lt;a href=&#34;https://inappwebview.dev/showcase/&#34;&gt;Official Showcase page: inappwebview.dev/showcase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check the &lt;a href=&#34;https://github.com/pichillilorenzo/flutter_inappwebview/raw/master/example/integration_test/webview_flutter_test.dart&#34;&gt;example/integration_test/webview_flutter_test.dart&lt;/a&gt; file for other code examples&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pichillilorenzo/flutter_browser_app&#34;&gt;Flutter Browser App&lt;/a&gt;: A Full-Featured Mobile Browser App (such as the Google Chrome mobile browser) created using Flutter and the features offered by the flutter_inappwebview plugin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Showcase - Who use it&lt;/h2&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://inappwebview.dev/showcase/&#34;&gt;Showcase&lt;/a&gt; page to see an open list of Apps built with &lt;strong&gt;Flutter&lt;/strong&gt; and &lt;strong&gt;Flutter InAppWebView&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Are you using the &lt;strong&gt;Flutter InAppWebView&lt;/strong&gt; plugin and would you like to add your App there?&lt;/h4&gt; &#xA;&lt;p&gt;Send a submission request to the &lt;a href=&#34;https://inappwebview.dev/submit-app/&#34;&gt;Submit App&lt;/a&gt; page!&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dart sdk: &#34;&amp;gt;=2.14.0 &amp;lt;3.0.0&#34;&lt;/li&gt; &#xA; &lt;li&gt;Flutter: &#34;&amp;gt;=2.5.0&#34;&lt;/li&gt; &#xA; &lt;li&gt;Android: &lt;code&gt;minSdkVersion 17&lt;/code&gt; and add support for &lt;code&gt;androidx&lt;/code&gt; (see &lt;a href=&#34;https://flutter.dev/docs/development/androidx-migration&#34;&gt;AndroidX Migration&lt;/a&gt; to migrate an existing app)&lt;/li&gt; &#xA; &lt;li&gt;iOS: &lt;code&gt;--ios-language swift&lt;/code&gt;, Xcode version &lt;code&gt;&amp;gt;= 12&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;flutter_inappwebview&lt;/code&gt; as a &lt;a href=&#34;https://flutter.io/using-packages/&#34;&gt;dependency in your pubspec.yaml file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Main Classes Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/in-app-webview/basic-usage/&#34;&gt;InAppWebView&lt;/a&gt;: Flutter Widget for adding an inline native WebView integrated into the flutter widget tree.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/context-menu/basic-usage/&#34;&gt;ContextMenu&lt;/a&gt;: This class represents the WebView context menu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/headless-in-app-webview/basic-usage/&#34;&gt;HeadlessInAppWebView&lt;/a&gt;: Class that represents a WebView in headless mode. It can be used to run a WebView in background without attaching an InAppWebView to the widget tree.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/in-app-browser/basic-usage/&#34;&gt;InAppBrowser&lt;/a&gt;: In-App Browser using native WebView.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/chrome-safari-browser/basic-usage/&#34;&gt;ChromeSafariBrowser&lt;/a&gt;: In-App Browser using Chrome Custom Tabs on Android / SFSafariViewController on iOS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/in-app-localhost-server/basic-usage/&#34;&gt;InAppLocalhostServer&lt;/a&gt;: This class allows you to create a simple server on &lt;a href=&#34;http://localhost:%5Bport%5D/&#34;&gt;http://localhost:[port]/&lt;/a&gt;. The default port value is 8080.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/cookie-manager/basic-usage/&#34;&gt;CookieManager&lt;/a&gt;: This class implements a singleton object (shared instance) which manages the cookies used by WebView instances.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/http-auth-credential-database/basic-usage/&#34;&gt;HttpAuthCredentialDatabase&lt;/a&gt;: This class implements a singleton object (shared instance) that manages the shared HTTP auth credentials cache.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/web-storage-manager/basic-usage/&#34;&gt;WebStorageManager&lt;/a&gt;: This class implements a singleton object (shared instance) which manages the web storage used by WebView instances.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Did you find this plugin useful? Please consider to &lt;a href=&#34;https://inappwebview.dev/donate/&#34;&gt;make a donation&lt;/a&gt; to help improve it!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alesimula/wsa_pacman</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/alesimula/wsa_pacman</id>
    <link href="https://github.com/alesimula/wsa_pacman" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A GUI package manager and package installer for Windows Subsystem for Android (WSA)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;wsa_pacman&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/README/screenshots/installer.png?raw=true&#34; alt=&#34;Installer&#34; title=&#34;Installer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A GUI package manager and package installer for Windows Subsystem for Android (WSA).&lt;/p&gt; &#xA;&lt;p&gt;Currently provides a double-click GUI installer for .apk and .xapk files that shows app information (package, icon, version and permissions), allows normal installations as well as upgrades and downgrades.&lt;/p&gt; &#xA;&lt;p&gt;The app additionally provides a button to open Android settings and one to open the &#34;Manage Applications&#34; Android settings page, from which you can uninstall or disable applications and grant or revoke permissions&lt;/p&gt; &#xA;&lt;h2&gt;Settings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Autostart WSA &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;on/off&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android port &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: 58526&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Language &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/locale/&#34;&gt;All options&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Theme mode &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;System&lt;/li&gt; &#xA;   &lt;li&gt;Dark&lt;/li&gt; &#xA;   &lt;li&gt;Light&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Window transparency (mica) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Full&lt;/li&gt; &#xA;   &lt;li&gt;Partial&lt;/li&gt; &#xA;   &lt;li&gt;Disabled&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Adaptive icon shape &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Squircle&lt;/li&gt; &#xA;   &lt;li&gt;Circle&lt;/li&gt; &#xA;   &lt;li&gt;Rounded square&lt;/li&gt; &#xA;   &lt;li&gt;Disabled&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;ruby&gt;&lt;p&gt; &lt;/p&gt;&lt;h2&gt;More screenshots&lt;/h2&gt; &lt;p&gt;&lt;/p&gt; &lt;/ruby&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/README/screenshots/installing.png?raw=true&#34; alt=&#34;Installing&#34; title=&#34;Installing&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/README/screenshots/installed.png?raw=true&#34; alt=&#34;Installed&#34; title=&#34;Installed&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/README/screenshots/downgrade.png?raw=true&#34; alt=&#34;Downgrade&#34; title=&#34;Downgrade&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/README/screenshots/main_screen.png?raw=true&#34; alt=&#34;Main screen&#34; title=&#34;Main screen&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alesimula/wsa_pacman/main/README/screenshots/settings_screen.png?raw=true&#34; alt=&#34;Settings&#34; title=&#34;Settings&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>rrousselGit/riverpod</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/rrousselGit/riverpod</id>
    <link href="https://github.com/rrousselGit/riverpod" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple way to access state while robust and testable.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/rrousselGit/river_pod/actions&#34;&gt;&lt;img src=&#34;https://github.com/rrousselGit/river_pod/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/rrousselgit/river_pod&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/rrousselgit/river_pod/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rrousselgit/river_pod&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/rrousselgit/river_pod.svg?style=flat&amp;amp;logo=github&amp;amp;colorB=deeppink&amp;amp;label=stars&#34; alt=&#34;Star on Github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-purple.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/Bbumvej&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/765557403865186374.svg?logo=discord&amp;amp;color=blue&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.netlify.com&#34;&gt; &lt;img src=&#34;https://www.netlify.com/img/global/badges/netlify-color-accent.svg?sanitize=true&#34; alt=&#34;Deploys by Netlify&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/rrousselGit/river_pod/raw/master/resources/icon/Facebook%20Cover%20A.png?raw=true&#34; width=&#34;100%&#34; alt=&#34;Riverpod&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;A state-management library that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;catches programming errors at compile time rather than at runtime&lt;/li&gt; &#xA; &lt;li&gt;removes nesting for listening/combining objects&lt;/li&gt; &#xA; &lt;li&gt;ensures that the code is testable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;riverpod&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/riverpod&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/riverpod.svg?label=riverpod&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;flutter_riverpod&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_riverpod&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/riverpod.svg?label=flutter_riverpod&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hooks_riverpod&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/hooks_riverpod&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/riverpod.svg?label=hooks_riverpod&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Welcome to &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;This project can be considered as a rewrite of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; to make improvements that would be otherwise impossible.&lt;/p&gt; &#xA;&lt;p&gt;For learning how to use &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;, see its documentation: &lt;a href=&#34;https://riverpod.dev&#34;&gt;https://riverpod.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Long story short:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare your providers as global variables:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final counterProvider = StateNotifierProvider((ref) {&#xA;  return Counter();&#xA;});&#xA;&#xA;class Counter extends StateNotifier&amp;lt;int&amp;gt; {&#xA;  Counter(): super(0);&#xA;&#xA;  void increment() =&amp;gt; state++;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use them inside your widgets in a compile time safe way. No runtime exceptions!&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Example extends ConsumerWidget {&#xA;  @override&#xA;  Widget build(BuildContext context, WidgetRef ref) {&#xA;    final count = ref.watch(counterProvider);&#xA;    return Text(count.toString());&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#FAQ&#34;&gt;FAQ&lt;/a&gt; if you have questions about what this means for &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Migration&lt;/h2&gt; &#xA;&lt;p&gt;With the release of version 1.0.0, the syntax for interacting with providers changed.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://riverpod.dev/docs/migration/0.14.0_to_1.0.0/&#34;&gt;the migration guide&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;h2&gt;Index&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#migration&#34;&gt;Migration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#index&#34;&gt;Index&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#faq&#34;&gt;FAQ&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#why-another-project-when-provider-already-exists&#34;&gt;Why another project when provider already exists?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#is-it-safe-to-use-in-production&#34;&gt;Is it safe to use in production?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#will-this-get-merged-with-provider-at-some-point&#34;&gt;Will this get merged with provider at some point?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#will-provider-be-deprecatedstop-being-supported&#34;&gt;Will provider be deprecated/stop being supported?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;If &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; is a simplification of &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s, then &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; is a reimplementation of &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s from scratch.&lt;/p&gt; &#xA;&lt;p&gt;It is very similar to &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; in principle, but also has major differences as an attempt to fix the common problems that &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; face.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; has multiple goals. First, it inherits the goals of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Being able to safely create, observe and dispose states without having to worry about losing the state on widget rebuild.&lt;/li&gt; &#xA; &lt;li&gt;Making our objects visible in Flutter&#39;s devtool by default.&lt;/li&gt; &#xA; &lt;li&gt;Testable and composable&lt;/li&gt; &#xA; &lt;li&gt;Improve the readability of &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s when we have multiple of them (which would naturally lead to a deeply nested widget tree).&lt;/li&gt; &#xA; &lt;li&gt;Make apps more scalable with a unidirectional data flow.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;From there, &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; goes a few steps beyond:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reading objects is now &lt;strong&gt;compile-safe&lt;/strong&gt;. No more runtime exception.&lt;/li&gt; &#xA; &lt;li&gt;It makes the &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; pattern more flexible, which allows supporting commonly requested features like: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Being able to have multiple providers of the same type.&lt;/li&gt; &#xA;   &lt;li&gt;Disposing the state of a provider when it is no longer used.&lt;/li&gt; &#xA;   &lt;li&gt;Have computed states&lt;/li&gt; &#xA;   &lt;li&gt;Making a provider private.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Simplifies complex object graphs. It is easier to depend on asynchronous state.&lt;/li&gt; &#xA; &lt;li&gt;Makes the pattern independent from Flutter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These are achieved by no longer using &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s. Instead, &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; implements its own mechanism that works in a similar fashion.&lt;/p&gt; &#xA;&lt;p&gt;For learning how to use &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;, see its documentation: &lt;a href=&#34;https://riverpod.dev&#34;&gt;https://riverpod.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcomed!&lt;/p&gt; &#xA;&lt;p&gt;Here is a curated list of how you can help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Report bugs and scenarios that are difficult to implement&lt;/li&gt; &#xA; &lt;li&gt;Report parts of the documentation that are unclear&lt;/li&gt; &#xA; &lt;li&gt;Fix typos/grammar mistakes&lt;/li&gt; &#xA; &lt;li&gt;Update the documentation / add examples&lt;/li&gt; &#xA; &lt;li&gt;Implement new features by making a pull-request&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Why another project when provider already exists?&lt;/h3&gt; &#xA;&lt;p&gt;While &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; is largely used and well accepted by the community, it is not perfect either.&lt;/p&gt; &#xA;&lt;p&gt;People regularly file issues or ask questions about some problems they face, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Why do I have a &lt;code&gt;ProviderNotFoundException&lt;/code&gt;?&lt;/li&gt; &#xA; &lt;li&gt;How can I automatically dispose my state when not used anymore?&lt;/li&gt; &#xA; &lt;li&gt;How to make a provider that depends on other (potentially complex) providers?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These are legitimate problems, and I believe that something can be improved to fix those.&lt;/p&gt; &#xA;&lt;p&gt;The issue is, these problems are deeply rooted in how &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; works, and fixing those problems is likely impossible without drastic changes to the mechanism of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In a way, if &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; is a candle then &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; is a lightbulb. They have very similar usages, but we cannot create a lightbulb by improving our candle.&lt;/p&gt; &#xA;&lt;h3&gt;Is it safe to use in production?&lt;/h3&gt; &#xA;&lt;p&gt;Yes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; is stable and actively maintained.&lt;/p&gt; &#xA;&lt;h3&gt;Will this get merged with provider at some point?&lt;/h3&gt; &#xA;&lt;p&gt;No. At least not until it is proven that the community likes &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; and that it doesn&#39;t cause more problems than it solves.&lt;/p&gt; &#xA;&lt;p&gt;While &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; and this project have a lot in common, they do have some major differences. Differences big enough that it would be a large breaking change for users of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; to migrate &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Considering that, separating both projects initially sounds like a better compromise.&lt;/p&gt; &#xA;&lt;h3&gt;Will provider be deprecated/stop being supported?&lt;/h3&gt; &#xA;&lt;p&gt;Not in the short term, no.&lt;/p&gt; &#xA;&lt;p&gt;However, a migration tool is planned to help assist migration from provider to &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/freezed/master/sponsorkit/sponsors.svg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rrousselGit/freezed/master/sponsorkit/sponsors.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter/packages</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/flutter/packages</id>
    <link href="https://github.com/flutter/packages" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of useful packages maintained by the Flutter team&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Packages&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/flutter/packages/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/flutter/packages.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flutter/packages/actions/workflows/release.yml&#34;&gt;&lt;img src=&#34;https://github.com/flutter/packages/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Release Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo is a companion repo to the main &lt;a href=&#34;https://github.com/flutter/flutter&#34;&gt;flutter repo&lt;/a&gt;. It contains the source code for Flutter&#39;s first-party packages (i.e., packages developed by the core Flutter team). Check the &lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages&#34;&gt;&lt;code&gt;packages&lt;/code&gt;&lt;/a&gt; directory to see all packages.&lt;/p&gt; &#xA;&lt;p&gt;These packages are also available on &lt;a href=&#34;https://pub.dartlang.org/flutter/packages&#34;&gt;pub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please file any issues, bugs, or feature requests in the &lt;a href=&#34;https://github.com/flutter/flutter/issues/new&#34;&gt;main flutter repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute a new package to the Flutter ecosystem, please see the documentation for &lt;a href=&#34;https://flutter.io/developing-packages/&#34;&gt;developing packages&lt;/a&gt;. You can store your package source code in any GitHub repository (the present repo is only intended for packages developed by the core Flutter team). Once your package is ready you can &lt;a href=&#34;https://flutter.io/developing-packages/#publish&#34;&gt;publish&lt;/a&gt; to the &lt;a href=&#34;https://pub.dartlang.org/&#34;&gt;pub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to contribute a change to any of the existing packages in this repo, please review our &lt;a href=&#34;https://github.com/flutter/packages/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;, and send a &lt;a href=&#34;https://github.com/flutter/packages/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;p&gt;These are the available packages in this repository.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Pub&lt;/th&gt; &#xA;   &lt;th&gt;Issues&lt;/th&gt; &#xA;   &lt;th&gt;Pull requests&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/animations/&#34;&gt;animations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/animations&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/animations.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20animations&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20animations?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20animations&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20animations?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/css_colors/&#34;&gt;css_colors&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/css_colors&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/css_colors.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20css_colors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20css_colors?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20css_colors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20css_colors?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/extension_google_sign_in_as_googleapis_auth/&#34;&gt;extension_google_sign_in_as_googleapis_auth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/extension_google_sign_in_as_googleapis_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/extension_google_sign_in_as_googleapis_auth.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20extension_google_sign_in_as_googleapis_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20extension_google_sign_in_as_googleapis_auth?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20extension_google_sign_in_as_googleapis_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20extension_google_sign_in_as_googleapis_auth?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/fuchsia_ctl/&#34;&gt;fuchsia_ctl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/fuchsia_ctl&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/fuchsia_ctl.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20fuchsia_ctl&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20fuchsia_ctl?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20fuchsia_ctl&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20fuchsia_ctl?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/flutter_image/&#34;&gt;flutter_image&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_image&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_image.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20flutter_image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20flutter_image?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20flutter_image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20flutter_image?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/flutter_lints/&#34;&gt;flutter_lints&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_lints&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_lints.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20flutter_lints&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20flutter_lints?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20flutter_lints&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20flutter_lints?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/flutter_markdown/&#34;&gt;flutter_markdown&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_markdown&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_markdown.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20flutter_markdown&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20flutter_markdown?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20flutter_markdown&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20flutter_markdown?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/go_router/&#34;&gt;go_router&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/go_router&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/go_router.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20go_router&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20go_router?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20go_router&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20go_router?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/go_router_builder/&#34;&gt;go_router_builder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/go_router_builder&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/go_router_builder.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20go_router_builder&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20go_router_builder?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20go_router_builder&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20go_router_builder?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/multicast_dns/&#34;&gt;multicast_dns&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/multicast_dns&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/multicast_dns.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20multicast_dns&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20multicast_dns?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20multicast_dns&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20multicast_dns?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/palette_generator/&#34;&gt;palette_generator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/palette_generator&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/palette_generator.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20palette_generator&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20palette_generator?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20palette_generator&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20palette_generator?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/pigeon/&#34;&gt;pigeon&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/pigeon&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/pigeon.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/pigeon&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/pigeon?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20pigeon&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20pigeon?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/pointer_interceptor/&#34;&gt;pointer_interceptor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/pointer_interceptor&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/pointer_interceptor.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20pointer_interceptor&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20pointer_interceptor?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20pointer_interceptor&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20pointer_interceptor?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/xdg_directories/&#34;&gt;xdg_directories&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/xdg_directories&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/xdg_directories.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20xdg_directories&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20xdg_directories?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20xdg_directories&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20xdg_directories?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>niuhuan/pikapika</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/niuhuan/pikapika</id>
    <link href="https://github.com/niuhuan/pikapika" rel="alternate"></link>
    <summary type="html">&lt;p&gt;(R18+) 美观易用且无广告的二次元客户端，同时支持MacOS，Windows，Android，iOS。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PIKAPIKA - 漫画客户端&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/niuhuan/pikapika&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/niuhuan/pikapika/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/niuhuan/pikapika&#34; alt=&#34;releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/niuhuan/pikapika/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/niuhuan/pikapika/total&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;美观易用且无广告的漫画客户端, 能运行在Windows/MacOS/Linux/Android/IOS中。&lt;/li&gt; &#xA; &lt;li&gt;此APP内容存在限制级别内容(例如 露骨/血腥/暴力/吸毒)，18岁以下的用户需在监护人陪同下使用，并请您在遵守当地法律法规。&lt;/li&gt; &#xA; &lt;li&gt;您的star和issue是对开发者的莫大鼓励, 可以源仓库下载最新的源码/安装包, 表示支持/提出建议。&lt;/li&gt; &#xA; &lt;li&gt;源仓库地址 &lt;a href=&#34;https://github.com/niuhuan/pikapika&#34;&gt;https://github.com/niuhuan/pikapika&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;界面 / 功能&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/reader.png&#34; alt=&#34;阅读器&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;分流&lt;/h3&gt; &#xA;&lt;p&gt;VPN-&amp;gt;代理-&amp;gt;分流, 这三个功能如果同时设置, 您会在您手机的VPN上访问代理, 使用代理请求分流服务器。&lt;/p&gt; &#xA;&lt;h3&gt;漫画分类/搜索&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/categories_screen.png&#34; alt=&#34;分类&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/comic_list.png&#34; alt=&#34;列表&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;漫画阅读/下载/导入/导出&lt;/h3&gt; &#xA;&lt;p&gt;您可以在除IOS外导出任意已经完成的下载到zip, 从另外一台设备导入。 导出的zip解压后可以直接使用其中的HTML进行阅读&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/exporting.png&#34; alt=&#34;导出下载&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/exporting2.png&#34; alt=&#34;HTML预览&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;游戏&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/games.png&#34; alt=&#34;games&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/game.png&#34; alt=&#34;game&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 用户 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 登录 / 注册 / 获取个人信息 / 自动打卡&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 修改密码 / 修改签名 / 修改头像&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 漫画 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 分类 / 搜索 / 随机本子 / 看此本子的也在看 / 排行榜&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 在分类中搜索 / 按 &#34;分类 / 标签 / 创建人 / 汉化组&#34; 检索&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 漫画详情 / 章节 / 看图 / 将图片保存到相册&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 收藏 / 喜欢&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 获取评论 / 评论 / 评论回复 (社区评论后无法删除, 请谨慎使用)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 游戏 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 列表 / 详情 / 无广告下载&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 下载 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 导入导出 / 无线共享 / 移动设备与PC设备传输&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 聊天室&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 缓存 / 清理&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 设备支持 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 安卓 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 高刷新频率屏幕适配 (90/120/144... Hz)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 安卓10以上随系统进入深色/夜间模式&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;其他说明&lt;/h2&gt; &#xA;&lt;p&gt;数据资料存储位置&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ios/android : 程序自身数据目录中, 删除就会清理&lt;/li&gt; &#xA; &lt;li&gt;windows : 程序同一目录中data文件夹下&lt;/li&gt; &#xA; &lt;li&gt;macos : ~/Library/Application\ Support/pikapika&lt;/li&gt; &#xA; &lt;li&gt;linux : ~/.pikapika&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;技术架构&lt;/h2&gt; &#xA;&lt;h3&gt;多平台适配&lt;/h3&gt; &#xA;&lt;p&gt;这个应用程序使用golang和dart(flutter)作为主要语言, 可以兼容Windows, linux, MacOS, Android, IOS&lt;/p&gt; &#xA;&lt;p&gt;使用了不同的框架桥接到桌面和移动平台上&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;go-flutter =&amp;gt; Windows / MacOS / Linux&lt;/li&gt; &#xA; &lt;li&gt;gomobile =&amp;gt; Android / IOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/pikapika/master/images/platforms.png&#34; alt=&#34;平台&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;构建环境&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;golang&lt;/a&gt; (1.16)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/&#34;&gt;flutter&lt;/a&gt; (2.10.3)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;请您遵守使用规则&lt;/h2&gt; &#xA;&lt;p&gt;本软件仅供学习交流使用, 本软件或本软件的拓展, 个人或企业不可用于商业用途, 不可上架任何商店&lt;/p&gt; &#xA;&lt;p&gt;拓展包括但是不限于以下内容&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用本软件进行继续开发形成的软件。&lt;/li&gt; &#xA; &lt;li&gt;引入本软件部分内容为依赖/参考本软件/使用本软件内代码的同时, 包含本软件内一致内容或功能的软件。&lt;/li&gt; &#xA; &lt;li&gt;直接对本软件进行打包发布&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;软件副本分发规则&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;不要在任何其他 &lt;strong&gt;二次元软件&lt;/strong&gt; 的 &lt;strong&gt;聊天社区&lt;/strong&gt; 或 &lt;strong&gt;开发社区&lt;/strong&gt; 内, 发布有关本软件的链接或信息&lt;/li&gt; &#xA; &lt;li&gt;不要发送本软件安装包到 &lt;strong&gt;任何社区内&lt;/strong&gt; , 不要将APK/IPA/ZIP/DMG发送包括任何聊天软件内的群聊功能。 分享本软件时, 在社区中使用Github中提供的Releases页面的链接, 或使用私聊窗口发送。&lt;/li&gt; &#xA; &lt;li&gt;作者不对分发软件承担任何后果, 请您遵守当地以及副本接受社区或副本接收人所在地区的法律。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>RivaanRanawat/instagram-flutter-clone</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/RivaanRanawat/instagram-flutter-clone</id>
    <link href="https://github.com/RivaanRanawat/instagram-flutter-clone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Responsive Instagram Clone developed with Flutter &amp; Firebase&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Instagram Clone&lt;/h1&gt; &#xA;&lt;p&gt;A completely Responsive Instagram App- Works on Android, iOS &amp;amp; Web!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Responsive Instagram UI&lt;/li&gt; &#xA; &lt;li&gt;Email &amp;amp; Password Authentication&lt;/li&gt; &#xA; &lt;li&gt;Share Posts with Caption&lt;/li&gt; &#xA; &lt;li&gt;Display Posts with Caption&lt;/li&gt; &#xA; &lt;li&gt;Like &amp;amp; Comment on Posts&lt;/li&gt; &#xA; &lt;li&gt;Search Users&lt;/li&gt; &#xA; &lt;li&gt;Follow Users&lt;/li&gt; &#xA; &lt;li&gt;Display User Posts, Followers &amp;amp; Following&lt;/li&gt; &#xA; &lt;li&gt;EVERYTHING REAL TIME&lt;/li&gt; &#xA; &lt;li&gt;Sign Out&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;YouTube&lt;/h2&gt; &#xA;&lt;p&gt;I have created a tutorial based on this, do check it out on my channel &lt;a href=&#34;https://youtu.be/BBccK1zTgxw&#34;&gt;Rivaan Ranawat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;600&#34; src=&#34;https://github.com/RivaanRanawat/instagram-flutter-clone/raw/master/screenshot.png&#34; alt=&#34;Youtube Tutorial Image&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;After cloning this repository, migrate to &lt;code&gt;instagram-flutter-clone&lt;/code&gt; folder. Then, follow the following steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create Firebase Project&lt;/li&gt; &#xA; &lt;li&gt;Enable Authentication&lt;/li&gt; &#xA; &lt;li&gt;Make Firestore Rules&lt;/li&gt; &#xA; &lt;li&gt;Create Android, iOS &amp;amp; Web Apps&lt;/li&gt; &#xA; &lt;li&gt;Take Web FirebaseOptions and put it in main function in main.dart file replacing my keys (My keys wont work as I deleted my project) Then run the following commands to run your app:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  flutter pub get&#xA;  open -a simulator (to get iOS Simulator)&#xA;  flutter run&#xA;  flutter run -d chrome --web-renderer html (to see the best output)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tech Used&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt;: Firebase Auth, Firebase Storage, Firebase Firestore&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Client&lt;/strong&gt;: Flutter, Provider&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;If you have any feedback, please reach out to me at &lt;a href=&#34;mailto:namanrivaan@gmail.com&#34;&gt;namanrivaan@gmail.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter/flutter</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/flutter/flutter</id>
    <link href="https://github.com/flutter/flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter makes it easy and fast to build beautiful apps for mobile and beyond&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://flutter.dev&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/archived-master/src/_assets/image/flutter-lockup-bg.jpg?raw=true&#34; alt=&#34;Flutter logo&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/flutter/flutter/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/flutter/flutter.svg?sanitize=true&#34; alt=&#34;Build Status - Cirrus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flutter/flutter/wiki/Chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/608014603317936148&#34; alt=&#34;Discord badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=flutterdev&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/flutterdev.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter handle&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/5631&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5631/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flutter is Google&#39;s SDK for crafting beautiful, fast user experiences for mobile, web, and desktop from a single codebase. Flutter works with existing code, is used by developers and organizations around the world, and is free and open source.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/get-started/&#34;&gt;Install Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs&#34;&gt;Flutter documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/flutter/wiki&#34;&gt;Development wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/flutter/raw/master/CONTRIBUTING.md&#34;&gt;Contributing to Flutter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For announcements about new releases, follow the &lt;a href=&#34;https://groups.google.com/forum/#!forum/flutter-announce&#34;&gt;flutter-announce@googlegroups.com&lt;/a&gt; mailing list. Our documentation also tracks &lt;a href=&#34;https://flutter.dev/docs/release/breaking-changes&#34;&gt;breaking changes&lt;/a&gt; across releases.&lt;/p&gt; &#xA;&lt;h2&gt;Terms of service&lt;/h2&gt; &#xA;&lt;p&gt;The Flutter tool may occasionally download resources from Google servers. By downloading or using the Flutter SDK you agree to the Google Terms of Service: &lt;a href=&#34;https://policies.google.com/terms&#34;&gt;https://policies.google.com/terms&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example, when installed from GitHub (as opposed to from a prepackaged archive), the Flutter tool will download the Dart SDK from Google servers immediately when first run, as it is used to execute the &lt;code&gt;flutter&lt;/code&gt; tool itself. This will also occur when Flutter is upgraded (e.g. by running the &lt;code&gt;flutter upgrade&lt;/code&gt; command).&lt;/p&gt; &#xA;&lt;h2&gt;About Flutter&lt;/h2&gt; &#xA;&lt;p&gt;We think Flutter will help you create beautiful, fast apps, with a productive, extensible and open development model, whether you&#39;re targeting iOS or Android, web, Windows, macOS, Linux or embedding it as the UI toolkit for a platform of your choice.&lt;/p&gt; &#xA;&lt;h3&gt;Beautiful user experiences&lt;/h3&gt; &#xA;&lt;p&gt;We want to enable designers to deliver their full creative vision without being forced to water it down due to limitations of the underlying framework. Flutter&#39;s &lt;a href=&#34;https://flutter.dev/docs/resources/inside-flutter&#34;&gt;layered architecture&lt;/a&gt; gives you control over every pixel on the screen and its powerful compositing capabilities let you overlay and animate graphics, video, text, and controls without limitation. Flutter includes a full &lt;a href=&#34;https://flutter.dev/widgets/&#34;&gt;set of widgets&lt;/a&gt; that deliver pixel-perfect experiences whether you&#39;re building for iOS (&lt;a href=&#34;https://docs.flutter.dev/development/ui/widgets/cupertino&#34;&gt;Cupertino&lt;/a&gt;) or Android (&lt;a href=&#34;https://docs.flutter.dev/development/ui/widgets/material&#34;&gt;Material&lt;/a&gt;), along with support for customizing or creating entirely new visual components.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/main/src/assets/images/docs/homepage/reflectly-hero-600px.png?raw=true&#34; alt=&#34;Reflectly hero image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fast results&lt;/h3&gt; &#xA;&lt;p&gt;Flutter is fast. It&#39;s powered by the same hardware-accelerated 2D graphics library that underpins Chrome and Android: &lt;a href=&#34;https://skia.org/&#34;&gt;Skia&lt;/a&gt;. We architected Flutter to support glitch-free, jank-free graphics at the native speed of your device. Flutter code is powered by the world-class &lt;a href=&#34;https://dart.dev/&#34;&gt;Dart platform&lt;/a&gt;, which enables compilation to 32-bit and 64-bit ARM machine code for iOS and Android, as well as JavaScript for the web and Intel x64 for desktop devices.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/main/src/assets/images/docs/homepage/dart-diagram-small.png?raw=true&#34; alt=&#34;Dart diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Productive development&lt;/h3&gt; &#xA;&lt;p&gt;Flutter offers stateful hot reload, allowing you to make changes to your code and see the results instantly without restarting your app or losing its state.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.flutter.dev/development/tools/hot-reload&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/main/src/assets/images/docs/tools/android-studio/hot-reload.gif?raw=true&#34; alt=&#34;Hot reload animation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Extensible and open model&lt;/h3&gt; &#xA;&lt;p&gt;Flutter works with any development tool (or none at all), and also includes editor plug-ins for both &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter&#34;&gt;Visual Studio Code&lt;/a&gt; and &lt;a href=&#34;https://plugins.jetbrains.com/plugin/9212-flutter&#34;&gt;IntelliJ / Android Studio&lt;/a&gt;. Flutter provides &lt;a href=&#34;https://pub.dev/flutter&#34;&gt;tens of thousands of packages&lt;/a&gt; to speed your development, regardless of your target platform. And accessing other native code is easy, with support for both &lt;a href=&#34;https://flutter.dev/docs/development/platform-integration/c-interop&#34;&gt;FFI&lt;/a&gt; and &lt;a href=&#34;https://flutter.dev/docs/development/platform-integration/platform-channels&#34;&gt;platform-specific APIs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Flutter is a fully open-source project, and we welcome contributions. Information on how to get started can be found in our &lt;a href=&#34;https://raw.githubusercontent.com/flutter/flutter/master/CONTRIBUTING.md&#34;&gt;contributor guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>deckerst/aves</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/deckerst/aves</id>
    <link href="https://github.com/deckerst/aves" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aves is a gallery and metadata explorer app, built for Android with Flutter.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/deckerst/aves/develop/aves_logo.svg?sanitize=true&#34; alt=&#34;Aves logo&#34; width=&#34;200&#34;&gt; &#xA; &lt;h2&gt;Aves&lt;/h2&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/deckerst/aves?include_prereleases&amp;amp;sort=semver&#34; alt=&#34;Version badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/deckerst/aves/Quality%20check&#34; alt=&#34;Build badge&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;Aves is a gallery and metadata explorer app. It is built for Android, with Flutter.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=deckers.thibault.aves&amp;amp;pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://appgallery.huawei.com/app/C106014023&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deckerst/common/main/assets/huawei-appgallery-badge-english-black.png&#34; alt=&#34;Get it on Huawei AppGallery&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.amazon.com/dp/B09XQHQQ72&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deckerst/common/main/assets/amazon-appstore-badge-english-black.png&#34; alt=&#34;Get it on Amazon Appstore&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://apt.izzysoft.de/fdroid/index/apk/deckers.thibault.aves&#34;&gt;&lt;img src=&#34;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&#34; alt=&#34;Get it on IzzyOnDroid&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/deckerst/aves/releases/latest&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deckerst/common/main/assets/get-it-on-github.png&#34; alt=&#34;Get it on GitHub&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/deckerst/aves/wiki/App-Versions&#34;&gt;Compare versions&lt;/a&gt;&lt;/p&gt; &#xA; &lt;div align=&#34;left&#34;&gt; &#xA;  &lt;h2&gt;Features&lt;/h2&gt; &#xA;  &lt;p&gt;Aves can handle all sorts of images and videos, including your typical JPEGs and MP4s, but also more exotic things like &lt;strong&gt;multi-page TIFFs, SVGs, old AVIs and more&lt;/strong&gt;!&lt;/p&gt; &#xA;  &lt;p&gt;It scans your media collection to identify &lt;strong&gt;motion photos&lt;/strong&gt;, &lt;strong&gt;panoramas&lt;/strong&gt; (aka photo spheres), &lt;strong&gt;360° videos&lt;/strong&gt;, as well as &lt;strong&gt;GeoTIFF&lt;/strong&gt; files.&lt;/p&gt; &#xA;  &lt;p&gt;&lt;strong&gt;Navigation and search&lt;/strong&gt; is an important part of Aves. The goal is for users to easily flow from albums to photos to tags to maps, etc.&lt;/p&gt; &#xA;  &lt;p&gt;Aves integrates with Android (from &lt;strong&gt;API 19 to 32&lt;/strong&gt;, i.e. from KitKat to Android 12L) with features such as &lt;strong&gt;app shortcuts&lt;/strong&gt; and &lt;strong&gt;global search&lt;/strong&gt; handling. It also works as a &lt;strong&gt;media viewer and picker&lt;/strong&gt;.&lt;/p&gt; &#xA;  &lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;  &lt;div align=&#34;center&#34;&gt; &#xA;   &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/deckerst/aves_extra/main/screenshots/play/en/1.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deckerst/aves_extra/main/screenshots/readme/en/1.png&#34; alt=&#34;Collection screenshot&#34; width=&#34;130&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/deckerst/aves_extra/main/screenshots/play/en/2.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deckerst/aves_extra/main/screenshots/readme/en/2.png&#34; alt=&#34;Image screenshot&#34; width=&#34;130&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/deckerst/aves_extra/main/screenshots/play/en/5.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deckerst/aves_extra/main/screenshots/readme/en/5.png&#34; alt=&#34;Stats screenshot&#34; width=&#34;130&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/deckerst/aves_extra/main/screenshots/play/en/3.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deckerst/aves_extra/main/screenshots/readme/en/3.png&#34; alt=&#34;Info (basic) screenshot&#34; width=&#34;130&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/deckerst/aves_extra/main/screenshots/play/en/4.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deckerst/aves_extra/main/screenshots/readme/en/4.png&#34; alt=&#34;Info (metadata) screenshot&#34; width=&#34;130&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/deckerst/aves_extra/main/screenshots/play/en/6.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deckerst/aves_extra/main/screenshots/readme/en/6.png&#34; alt=&#34;Countries screenshot&#34; width=&#34;130&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;div align=&#34;left&#34;&gt; &#xA;    &lt;h2&gt;Changelog&lt;/h2&gt; &#xA;    &lt;p&gt;The list of changes for past and future releases is available &lt;a href=&#34;https://github.com/deckerst/aves/raw/develop/CHANGELOG.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;    &lt;h2&gt;Permissions&lt;/h2&gt; &#xA;    &lt;p&gt;Aves requires a few permissions to do its job:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;read contents of shared storage&lt;/strong&gt;: the app only accesses media files, and modifying them requires explicit access grants from the user,&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;read locations from media collection&lt;/strong&gt;: necessary to display the media coordinates, and to group them by country (via reverse geocoding),&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;have network access&lt;/strong&gt;: necessary for the map view, and most likely for precise reverse geocoding too,&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;view network connections&lt;/strong&gt;: checking for connection states allows Aves to gracefully degrade features that depend on internet.&lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;    &lt;h2&gt;Contributing&lt;/h2&gt; &#xA;    &lt;h3&gt;Issues&lt;/h3&gt; &#xA;    &lt;p&gt;&lt;a href=&#34;https://github.com/deckerst/aves/issues/new?assignees=&amp;amp;labels=type%3Abug&amp;amp;template=bug_report.md&amp;amp;title=&#34;&gt;Bug reports&lt;/a&gt; and &lt;a href=&#34;https://github.com/deckerst/aves/issues/new?assignees=&amp;amp;labels=type%3Afeature&amp;amp;template=feature_request.md&amp;amp;title=&#34;&gt;feature requests&lt;/a&gt; are welcome, but read the &lt;a href=&#34;https://github.com/deckerst/aves/issues/234&#34;&gt;guidelines&lt;/a&gt; first. If you have questions, check out the &lt;a href=&#34;https://github.com/deckerst/aves/discussions&#34;&gt;discussions&lt;/a&gt;.&lt;/p&gt; &#xA;    &lt;h3&gt;Code&lt;/h3&gt; &#xA;    &lt;p&gt;At this stage this project does &lt;em&gt;not&lt;/em&gt; accept PRs, except for translations.&lt;/p&gt; &#xA;    &lt;h3&gt;Translations&lt;/h3&gt; &#xA;    &lt;p&gt;If you want to translate this app in your language and share the result, &lt;a href=&#34;https://github.com/deckerst/aves/wiki/Contributing-to-Translations&#34;&gt;there is a guide&lt;/a&gt;. English, Korean and French are already handled by me. Russian, German, Spanish, Portuguese, Indonesian, Japanese, Italian &amp;amp; Chinese are handled by generous volunteers.&lt;/p&gt; &#xA;    &lt;h3&gt;Donations&lt;/h3&gt; &#xA;    &lt;p&gt;Some users have expressed the wish to financially support the project. Thanks! ❤️&lt;/p&gt; &#xA;    &lt;p&gt;&lt;a href=&#34;https://paypal.me/ThibaultDeckers&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deckerst/common/main/assets/paypal-badge-cropped.png&#34; alt=&#34;Donate with PayPal&#34; height=&#34;40&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://liberapay.com/deckerst/donate&#34;&gt;&lt;img src=&#34;https://liberapay.com/assets/widgets/donate.svg?sanitize=true&#34; alt=&#34;Donate using Liberapay&#34; height=&#34;40&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;    &lt;h2&gt;Project Setup&lt;/h2&gt; &#xA;    &lt;p&gt;Before running or building the app, update the dependencies for the desired flavor:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code&gt;# (cd scripts/; ./apply_flavor_play.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;To build the project, create a file named &lt;code&gt;&amp;lt;app dir&amp;gt;/android/key.properties&lt;/code&gt;. It should contain a reference to a keystore for app signing, and other necessary credentials. See &lt;a href=&#34;https://github.com/deckerst/aves/raw/develop/android/key_template.properties&#34;&gt;key_template.properties&lt;/a&gt; for the expected keys.&lt;/p&gt; &#xA;    &lt;p&gt;To run the app:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code&gt;# flutter run -t lib/main_play.dart --flavor play&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;To run the app on API 19 emulators:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code&gt;# flutter run -t lib/main_play.dart --flavor play --enable-software-rendering&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>Sangwan5688/BlackHole</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/Sangwan5688/BlackHole</id>
    <link href="https://github.com/Sangwan5688/BlackHole" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Music Player App made with Flutter&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/87353286/144381080-faf8e557-7909-43a1-a8e2-208936e5a8f8.png&#34; alt=&#34;Repo Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;BlackHole&lt;/h1&gt; &#xA;&lt;p&gt;An Open-Source Music Player App for all your needs!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flutter.dev/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Made%20with-Flutter-1f425f.svg?sanitize=true&#34; alt=&#34;made-with-flutter&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/Sangwan5688/BlackHole&#34; alt=&#34;Release&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/Sangwan5688/BlackHole/total&#34; alt=&#34;Downloads&#34;&gt; &lt;a href=&#34;https://github.com/Sangwan5688/BlackHole/actions/workflows/flutter.yml&#34;&gt;&lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/actions/workflows/flutter.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/blackhole/&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/blackhole/-/translations/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation-Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Don&#39;t forget to &lt;span&gt;⭐&lt;/span&gt; the repo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com//Sangwan5688/BlackHole&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Sangwan5688/BlackHole.svg?style=social&amp;amp;label=Star&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/forks/Sangwan5688/BlackHole.svg?style=social&amp;amp;label=Forks&#34; alt=&#34;GitHub forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/followers/Sangwan5688.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;GitHub followers&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://android.izzysoft.de/repo/apk/com.shadow.blackhole&#34;&gt;&lt;img src=&#34;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&#34; alt=&#34;Get it on IzzyDroid&#34; height=&#34;100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/packages/com.shadow.blackhole/&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://github.com/Sangwan5688/BlackHole/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-181717?logo=github&amp;amp;logoColor=white&#34; alt=&#34;Download from GitHub&#34; height=&#34;60&#34;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://t.me/blackhole_official&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-2CA5E0?logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;Join Telegram Channel&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sangwan5688/BlackHole/main/README.ES.md&#34;&gt;Spanish &lt;span&gt;🇪🇸&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sangwan5688/BlackHole/main/README.RU.md&#34;&gt;Russian &lt;span&gt;🇷🇺&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sangwan5688/BlackHole/main/README.FR.md&#34;&gt;French &lt;span&gt;🇫🇷&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sangwan5688/BlackHole/main/README.PT.md&#34;&gt;Portuguese &lt;span&gt;🇧🇷&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hosted.weblate.org/projects/blackhole/translations/&#34;&gt;Translate App on Weblate&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Best Streaming Quality (320kbps aac)&lt;/li&gt; &#xA; &lt;li&gt;Song, Album, Artist and Playlist Search&lt;/li&gt; &#xA; &lt;li&gt;Language Specific Promoted Playlists&lt;/li&gt; &#xA; &lt;li&gt;Trending Songs&lt;/li&gt; &#xA; &lt;li&gt;Artist and Genre Radios&lt;/li&gt; &#xA; &lt;li&gt;Support 15+ music languages&lt;/li&gt; &#xA; &lt;li&gt;Local and Global Top Spotify songs&lt;/li&gt; &#xA; &lt;li&gt;Add Songs to Favorite&lt;/li&gt; &#xA; &lt;li&gt;Playlists support&lt;/li&gt; &#xA; &lt;li&gt;Import Playlists from Spotify &amp;amp; YouTube&lt;/li&gt; &#xA; &lt;li&gt;Import/Export Playlists as JSON File&lt;/li&gt; &#xA; &lt;li&gt;Share Playlists&lt;/li&gt; &#xA; &lt;li&gt;Sleep timer&lt;/li&gt; &#xA; &lt;li&gt;Lyrics Support&lt;/li&gt; &#xA; &lt;li&gt;Queue Management&lt;/li&gt; &#xA; &lt;li&gt;Listening history record&lt;/li&gt; &#xA; &lt;li&gt;Dark mode / accent color&lt;/li&gt; &#xA; &lt;li&gt;Custom Gradients and other Theme options&lt;/li&gt; &#xA; &lt;li&gt;Supports Portrait as well as Landscape mode&lt;/li&gt; &#xA; &lt;li&gt;Download for offline play (320kbps with ID3 tags)&lt;/li&gt; &#xA; &lt;li&gt;Play Online as well as Offline Songs&lt;/li&gt; &#xA; &lt;li&gt;Tag Editing Support&lt;/li&gt; &#xA; &lt;li&gt;Trending Search Results&lt;/li&gt; &#xA; &lt;li&gt;YouTube Search Support&lt;/li&gt; &#xA; &lt;li&gt;Promoted Youtube Playlists&lt;/li&gt; &#xA; &lt;li&gt;Play videos as audio&lt;/li&gt; &#xA; &lt;li&gt;Auto Song Recommendations&lt;/li&gt; &#xA; &lt;li&gt;Inbuilt Equalizer&lt;/li&gt; &#xA; &lt;li&gt;Backup &amp;amp; Restore&lt;/li&gt; &#xA; &lt;li&gt;Auto Update Check&lt;/li&gt; &#xA; &lt;li&gt;Cache support&lt;/li&gt; &#xA; &lt;li&gt;No Subscription&lt;/li&gt; &#xA; &lt;li&gt;No Ads&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and much more... Check it yourself :)&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/fastlane/metadata/android/en-US/images/phoneScreenshots/1.png?raw=true&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/fastlane/metadata/android/en-US/images/phoneScreenshots/2.png?raw=true&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/fastlane/metadata/android/en-US/images/phoneScreenshots/3.png?raw=true&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/fastlane/metadata/android/en-US/images/phoneScreenshots/4.png?raw=true&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/fastlane/metadata/android/en-US/images/phoneScreenshots/5.png?raw=true&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/fastlane/metadata/android/en-US/images/phoneScreenshots/6.png?raw=true&#34; width=&#34;32%&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright © 2021 Ankit Sangwan&#xA;&#xA;BlackHole is a free software licensed under GPL v3.0&#xA;It is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;&#xA;without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Being Open Source doesn&#39;t mean you can just make a copy of the app and upload it on playstore or sell&#xA;a closed source copy of the same.&#xA;Read the following carefully:&#xA;1. Any copy of a software under GPL must be under same license. So you can&#39;t upload the app on a closed source&#xA;  app repository like PlayStore/AppStore without distributing the source code.&#xA;2. You can&#39;t sell any copied/modified version of the app under any &#34;non-free&#34; license.&#xA;   You must provide the copy with the original software or with instructions on how to obtain original software,&#xA;   should clearly state all changes, should clearly disclose full source code, should include same license&#xA;   and all copyrights should be retained.&#xA;&#xA;In simple words, You can ONLY use the source code of this app for `Open Source` Project under `GPL v3.0` or later&#xA;with all your source code CLEARLY DISCLOSED on any code hosting platform like GitHub, with clear INSTRUCTIONS on&#xA;how to obtain the original software, should clearly STATE ALL CHANGES made and should RETAIN all copyrights.&#xA;Use of this software under any &#34;non-free&#34; license is NOT permitted.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/LICENSE&#34;&gt;GNU General Public License&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Building from Source&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If you don&#39;t have Flutter SDK installed, please visit official &lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter&lt;/a&gt; site.&lt;/li&gt; &#xA; &lt;li&gt;Fetch latest source code from master branch.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/Sangwan5688/BlackHole.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run the app with Android Studio or VS Code. Or the command line:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;flutter pub get&#xA;flutter run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome. Please read our &lt;a href=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; before contributing.&lt;/p&gt; &#xA;&lt;h2&gt;Facing any Issue?&lt;/h2&gt; &#xA;&lt;p&gt;Have a look at some &lt;a href=&#34;https://github.com/Sangwan5688/BlackHole/wiki/Common-Issues&#34;&gt;common Issues&lt;/a&gt; that you might face. If your problem is not there, feel free to open an Issue :)&lt;/p&gt; &#xA;&lt;h2&gt;Want to test Beta Versions? Need help??&lt;/h2&gt; &#xA;&lt;p&gt;You can join our &lt;a href=&#34;https://t.me/blackhole_official&#34;&gt;Telegram Channel&lt;/a&gt; or &lt;a href=&#34;https://t.me/joinchat/fHDC1AWnOhw0ZmI9&#34;&gt;Telegram Group&lt;/a&gt;, if you have any query, or need help with something as well as to get beta updates of the project.&lt;/p&gt; &#xA;&lt;h2&gt;Liked my work?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/ankitsangwan&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s New&lt;/h2&gt; &#xA;&lt;p&gt;To read full changelog visit the &lt;a href=&#34;https://github.com/Sangwan5688/BlackHole/wiki/Changelog&#34;&gt;wiki page&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bluefireteam/audioplayers</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/bluefireteam/audioplayers</id>
    <link href="https://github.com/bluefireteam/audioplayers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter plugin to play multiple audio files simultaneously (Android/iOS)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AudioPlayers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/audioplayers&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/audioplayers.svg?style=popout&amp;amp;include_prereleases&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/luanpotter/audioplayers/actions?query=workflow%3A%22build%22+branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/luanpotter/audioplayers/workflows/build/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/pxrBmy4&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/509714518008528896.svg?sanitize=true&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/invertase/melos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20with-melos-f700ff.svg?sanitize=true&#34; alt=&#34;Melos&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Flutter plugin to play multiple simultaneously audio files, works for Android, iOS, Linux, macOS, Windows, and web.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bluefireteam/audioplayers/main/images/screenshot1.png&#34; width=&#34;250&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bluefireteam/audioplayers/main/images/screenshot2.png&#34; width=&#34;250&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bluefireteam/audioplayers/main/images/screenshot3.png&#34; width=&#34;250&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: all the docs have been update to reflect the content for the v1 release (currently &lt;code&gt;1.0.0-rc.4&lt;/code&gt;). If you are looking for v0 specific information and guidance, please checkout &lt;a href=&#34;https://github.com/bluefireteam/audioplayers/tree/46816bf55859c9c88b204e3828cce6190ff87483&#34;&gt;the version of this repo before the first v0 change&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are interest in migrating to v1, please check &lt;a href=&#34;https://raw.githubusercontent.com/bluefireteam/audioplayers/main/migration_guide.md&#34;&gt;our migration guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;If you have any problems, please follow these steps before opening an issue.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Carefully read the &lt;a href=&#34;https://raw.githubusercontent.com/bluefireteam/audioplayers/main/getting_started.md&#34;&gt;Getting Started tutorial&lt;/a&gt; before anything else. Re-read if necessary.&lt;/li&gt; &#xA; &lt;li&gt;Check our &lt;a href=&#34;https://github.com/bluefireteam/audioplayers/raw/main/troubleshooting.md&#34;&gt;Troubleshooting Guide&lt;/a&gt; for solutions for most problems.&lt;/li&gt; &#xA; &lt;li&gt;If you have a missing feature report or feature request, please first check the &lt;a href=&#34;https://raw.githubusercontent.com/bluefireteam/audioplayers/main/feature_parity_table.md&#34;&gt;Feature Parity Table&lt;/a&gt; to understand our roadmap and what we know is missing. We love contributions!&lt;/li&gt; &#xA; &lt;li&gt;Join &lt;a href=&#34;https://discord.gg/5unKpdQD78&#34;&gt;Blue Fire&#39;s Discord server&lt;/a&gt; and ask for directions. Maybe it&#39;s not a bug, or it&#39;s a known issue.&lt;/li&gt; &#xA; &lt;li&gt;If you are more comfortable with StackOverflow, you can also create a question there. Add the generic &lt;a href=&#34;https://stackoverflow.com/questions/tagged/flame&#34;&gt;Flame tag&lt;/a&gt;, so that anyone following the tag can help out.&lt;/li&gt; &#xA; &lt;li&gt;If the issue still persists, go to the &lt;a href=&#34;https://github.com/bluefireteam/audioplayers/issues/new/choose&#34;&gt;create an issue&lt;/a&gt; page and follow the step-by-step there before submitting.&lt;/li&gt; &#xA; &lt;li&gt;If the step-by-step there doesn&#39;t give you any help, then proceed to create the issue &lt;strong&gt;following the template&lt;/strong&gt;. Do not skip mandatory sections. Do not include the literal text of the template, rather replace the sections with what they should contain.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Any issues created not following the list above can be flagged or closed by our team.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;All help is appreciated but if you have questions, bug reports, issues, feature requests, pull requests, etc, please first refer to our &lt;a href=&#34;https://raw.githubusercontent.com/bluefireteam/audioplayers/main/contributing.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Be sure to check the &lt;a href=&#34;https://raw.githubusercontent.com/bluefireteam/audioplayers/main/feature_parity_table.md&#34;&gt;Feature Parity Table&lt;/a&gt; to understand if your suggestion is already tracked, on the roadmap, or out of scope for this project.&lt;/p&gt; &#xA;&lt;p&gt;Also, as always, please give us a star to help!&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;We tried to make audioplayers as simple to use as possible.&lt;/p&gt; &#xA;&lt;p&gt;Please follow our &lt;a href=&#34;https://raw.githubusercontent.com/bluefireteam/audioplayers/main/getting_started.md&#34;&gt;Getting Started tutorial&lt;/a&gt; for all high-level information you need to know.&lt;/p&gt; &#xA;&lt;p&gt;Then, if you want to dig deeper, our code is very well documented with dartdocs, so check &lt;a href=&#34;https://pub.dev/documentation/audioplayers/1.0.0-rc.1/&#34;&gt;our API reference&lt;/a&gt; or the codebase itself on your IDE (or on GitHub).&lt;/p&gt; &#xA;&lt;p&gt;If something is not clear on our docs, please send a PR to help us improve.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to show us your support is by giving the project a star.&lt;/p&gt; &#xA;&lt;p&gt;You can also support us by becoming a patron on Patreon:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/bluefireoss&#34;&gt;&lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button.png&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or by making a single donation by buying us a coffee:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/bluefire&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/835641/60540201-fcd7fa00-9ce4-11e9-87ec-1e98568e9f58.png&#34; alt=&#34;Buy Me A Coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this software was made by the community, for the community, on our spare time, with no commercial affiliation. It is provided as is and any positive contribution is appreciated. Be kind and mindful of the free time that a battalion of people has gifted on behalf of the community to craft and maintain this.&lt;/p&gt; &#xA;&lt;h2&gt;Feature Parity Table&lt;/h2&gt; &#xA;&lt;p&gt;Not all features are available on all platforms. &lt;a href=&#34;https://raw.githubusercontent.com/bluefireteam/audioplayers/main/feature_parity_table.md&#34;&gt;Click here&lt;/a&gt; to see a table relating what features can be used on each target.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to use it for ideas for possible PRs and contributions you can help with on our roadmap! If you are submitting a PR, don&#39;t forget to update the table.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This was originally a fork of &lt;a href=&#34;https://github.com/rxlabz/audioplayer&#34;&gt;rxlabz&#39;s audioplayer&lt;/a&gt;, but since we have diverged and added more features.&lt;/p&gt; &#xA;&lt;p&gt;Thanks for @rxlabz for the amazing work!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bdlukaa/fluent_ui</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/bdlukaa/fluent_ui</id>
    <link href="https://github.com/bdlukaa/fluent_ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implements Microsoft&#39;s Fluent Design System in Flutter.&lt;/p&gt;&lt;hr&gt;&lt;div&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;fluent_ui&lt;/h1&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Discord&#34; href=&#34;https://discord.gg/674gpDQUVq&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/809528329337962516?label=discord&amp;amp;logo=discord&#34;&gt; &lt;/a&gt; &lt;a title=&#34;Pub&#34; href=&#34;https://pub.dartlang.org/packages/fluent_ui&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/v/fluent_ui.svg?style=popout&amp;amp;include_prereleases&#34;&gt; &lt;/a&gt; &lt;a title=&#34;Made with Fluent Design&#34; href=&#34;https://github.com/bdlukaa/fluent_ui&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/fluent-design-blue?style=flat-square&amp;amp;color=7A7574&amp;amp;labelColor=0078D7&#34;&gt; &lt;/a&gt; &lt;a title=&#34;Github License&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/bdlukaa/fluent_ui&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; Design beautiful native windows apps using Flutter &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Unofficial implementation of Fluent UI for &lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/flutter.dev&#34;&gt;Flutter&lt;/a&gt;. It&#39;s written based on the &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/&#34;&gt;official documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;You can check the web version of it &lt;a href=&#34;https://bdlukaa.github.io/fluent_ui/&#34;&gt;here&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/images/example-showcase.png&#34; alt=&#34;Example Showcase&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Content&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#badge&#34;&gt;Badge&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#style&#34;&gt;Style&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#icons&#34;&gt;Icons&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#colors&#34;&gt;Colors&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#accent-color&#34;&gt;Accent color&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#brightness&#34;&gt;Brightness&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#visual-density&#34;&gt;Visual Density&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#typography&#34;&gt;Typograpy&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#font&#34;&gt;Font&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#type-ramp&#34;&gt;Type ramp&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#reveal-focus&#34;&gt;Reveal Focus&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#motion&#34;&gt;Motion&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#page-transitions&#34;&gt;Page Transitions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#navigation&#34;&gt;Navigation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#navigation-view&#34;&gt;Navigation View&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#app-bar&#34;&gt;App Bar&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#navigation-pane&#34;&gt;Navigation Pane&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#navigation-body&#34;&gt;Navigation Body&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#info-badge&#34;&gt;Info Badge&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#tab-view&#34;&gt;Tab View&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#bottom-navigation&#34;&gt;Bottom Navigation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#inputs&#34;&gt;Inputs&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#button&#34;&gt;Button&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#filled-button&#34;&gt;Filled Button&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#icon-button&#34;&gt;Icon Button&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#outlined-button&#34;&gt;Outlined Button&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#outlined-button&#34;&gt;Text Button&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#split-button&#34;&gt;Split Button&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#toggle-button&#34;&gt;Toggle Button&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#checkbox&#34;&gt;Checkbox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#toggle-switch&#34;&gt;Toggle Switch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#radio-buttons&#34;&gt;Radio Buttons&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#dropdown-button&#34;&gt;DropDown Button&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#slider&#34;&gt;Slider&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#choosing-between-vertical-and-horizontal-sliders&#34;&gt;Choosing between vertical and horizontal sliders&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#forms&#34;&gt;Forms&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#textbox&#34;&gt;TextBox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#auto-suggest-box&#34;&gt;Auto Suggest Box&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#combo-box&#34;&gt;Combo Box&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#widgets&#34;&gt;Widgets&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#tooltip&#34;&gt;Tooltip&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#content-dialog&#34;&gt;Content Dialog&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#expander&#34;&gt;Expander&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#flyout&#34;&gt;Flyout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;TODO&lt;/strong&gt; &lt;a href=&#34;&#34;&gt;Teaching tip&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#acrylic&#34;&gt;Acrylic&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#infobar&#34;&gt;InfoBar&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;TODO&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#calendar-view&#34;&gt;Calendar View&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;TODO&lt;/strong&gt; &lt;a href=&#34;&#34;&gt;Calendar Date Picker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#date-picker&#34;&gt;Date Picker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#time-picker&#34;&gt;Time Picker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#progress-bar-and-progress-ring&#34;&gt;Progress Bar and Progress Ring&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#scrollbar&#34;&gt;Scrollbar&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#list-tile&#34;&gt;List Tile&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#info-label&#34;&gt;Info Label&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#treeview&#34;&gt;TreeView&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#scrollable-tree-view&#34;&gt;Scrollable tree view&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#lazily-load-nodes&#34;&gt;Lazily load nodes&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#commandbar&#34;&gt;CommandBar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#mobile-widgets&#34;&gt;Mobile Widgets&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#chip&#34;&gt;Chip&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#pill-button-bar&#34;&gt;Pill Button Bar&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#snackbar&#34;&gt;Snackbar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#layout-widgets&#34;&gt;Layout Widgets&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#dynamicoverflow&#34;&gt;DynamicOverflow&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#equivalents-with-the-material-library&#34;&gt;Equivalents with the material library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#Localization&#34;&gt;Localization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#contribution&#34;&gt;Contribution&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#contributing-new-localizations&#34;&gt;Contributing new localizations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;Since Flutter has stable Windows support, it&#39;s necessary to have support to its UI guidelines to build apps with fidelity, the same way it has support for Material and Cupertino. See &lt;a href=&#34;https://github.com/flutter/flutter/issues/46481&#34;&gt;this&lt;/a&gt; for more info on the offical fluent ui support&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/development/ui/widgets/material&#34;&gt;Material UI for Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/development/ui/widgets/cupertino&#34;&gt;Cupertino UI for Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GroovinChip/macos_ui&#34;&gt;MacOS UI for Flutter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Want to be a sponsor? Become one &lt;a href=&#34;https://patreon.com/bdlukaa&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;These are our really cool sponsors!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/phorcys420&#34;&gt;&lt;img src=&#34;https://github.com/phorcys420.png&#34; width=&#34;50px&#34; alt=&#34;phorcys420&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add the package to your dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  fluent_ui: ^3.10.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  fluent_ui:&#xA;    git: https://github.com/bdlukaa/fluent_ui.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can see the example app &lt;a href=&#34;https://bdlukaa.github.io/fluent_ui//&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, run &lt;code&gt;dart pub get&lt;/code&gt; to download the package.&lt;/p&gt; &#xA;&lt;p&gt;Projects using this library should use the stable channel of Flutter&lt;/p&gt; &#xA;&lt;h3&gt;Badge&lt;/h3&gt; &#xA;&lt;p&gt;Are you using this library on your app? You can use a badge to tell others:&lt;/p&gt; &#xA;&lt;a title=&#34;Made with Fluent Design&#34; href=&#34;https://github.com/bdlukaa/fluent_ui&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/fluent-design-blue?style=flat-square&amp;amp;color=7A7574&amp;amp;labelColor=0078D7&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Add the following code to your &lt;code&gt;README.md&lt;/code&gt; or to your website:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a title=&#34;Made with Fluent Design&#34; href=&#34;https://github.com/bdlukaa/fluent_ui&#34;&amp;gt;&#xA;  &amp;lt;img&#xA;    src=&#34;https://img.shields.io/badge/fluent-design-blue?style=flat-square&amp;amp;color=7A7574&amp;amp;labelColor=0078D7&#34;&#xA;  /&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Style&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/&#34;&gt;Learn more about Fluent Style&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;FluentTheme&lt;/code&gt; widget to, well... theme your widgets. You can style your widgets in two ways:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Using the &lt;code&gt;FluentApp&lt;/code&gt; widget&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FluentApp(&#xA;  title: &#39;MyApp&#39;,&#xA;  theme: ThemeData(&#xA;    ...&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Using the &lt;code&gt;FluentTheme&lt;/code&gt; widget&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FluentTheme(&#xA;  theme: ThemeData(&#xA;    ...&#xA;  ),&#xA;  child: ...,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Icons&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/microsoft/fluentui-system-icons/raw/master/art/readme-banner.png&#34; alt=&#34;Icons Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Inside your app, you use icons to represent an action, such as copying text or navigating to the settings page. This library includes an icon library with it, so you can just call &lt;code&gt;FluentIcons.[icon_name]&lt;/code&gt; in any &lt;code&gt;Icon&lt;/code&gt; widget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Icon(FluentIcons.add),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a complete reference of current icons, please check the &lt;a href=&#34;https://bdlukaa.github.io/fluent_ui/&#34;&gt;online demo&lt;/a&gt; and click on &#34;Icons&#34;.&lt;/p&gt; &#xA;&lt;p&gt;The online demo has a search box and also supports clipboard copy in order to find every icon as fast as possible.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/images/icons/inside-icons.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Colors&lt;/h2&gt; &#xA;&lt;p&gt;This library also includes the Fluent UI colors with it, so you can just call &lt;code&gt;Colors.[color_name]&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TextStyle(color: Colors.black),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Avaiable colors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.transparent&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.white&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.black&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.grey&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.yellow&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.orange&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.red&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.magenta&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.purple&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.blue&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.teal&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.green&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Accent color&lt;/h3&gt; &#xA;&lt;p&gt;Common controls use an accent color to convey state information. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/color#accent-color&#34;&gt;Learn more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default, the accent color is &lt;code&gt;Colors.blue&lt;/code&gt;. However, you can also customize your app&#39;s accent color to reflect your brand:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ThemeData(&#xA;  accentColor: Colors.blue,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use the system&#39;s accent color, you can use the plugin &lt;a href=&#34;https://pub.dev/packages/system_theme&#34;&gt;system_theme&lt;/a&gt; made by me :). It has support for (as of 04/01/2021) Android, Web and Windows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:system_theme/system_theme.dart&#39;;&#xA;&#xA;ThemeData(&#xA;  accentColor: SystemTheme.accentInstance.accent.toAccentColor(),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Brightness&lt;/h2&gt; &#xA;&lt;p&gt;You can change the theme brightness to change the color of your app to&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Brightness.light&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/images/color/light-theme.svg?sanitize=true&#34; alt=&#34;Light theme&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Brightness.dark&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/images/color/dark-theme.svg?sanitize=true&#34; alt=&#34;Dark theme&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;It defaults to the brightness of the device. (&lt;code&gt;MediaQuery.of(context).platformBrightness&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ThemeData(&#xA;  brightness: Brightness.light, // or Brightness.dark&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Visual Density&lt;/h2&gt; &#xA;&lt;p&gt;Density, in the context of a UI, is the vertical and horizontal &#34;compactness&#34; of the components in the UI. It is unitless, since it means different things to different UI components.&lt;/p&gt; &#xA;&lt;p&gt;The default for visual densities is zero for both vertical and horizontal densities. It does not affect text sizes, icon sizes, or padding values.&lt;/p&gt; &#xA;&lt;p&gt;For example, for buttons, it affects the spacing around the child of the button. For lists, it affects the distance between baselines of entries in the list. For chips, it only affects the vertical size, not the horizontal size.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ThemeData(&#xA;  visualDensity: VisualDensity.adaptivePlatformDensity,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following widgets make use of visual density:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chip&lt;/li&gt; &#xA; &lt;li&gt;PillButtonBar&lt;/li&gt; &#xA; &lt;li&gt;Snackbar&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Typography&lt;/h2&gt; &#xA;&lt;p&gt;To set a typography, you can use the &lt;code&gt;ThemeData&lt;/code&gt; class combined with the &lt;code&gt;Typography&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ThemeData(&#xA;  typography: Typography(&#xA;    caption: TextStyle(&#xA;      fontSize: 12,&#xA;      color: Colors.black,&#xA;      fontWeight: FontWeight.normal,&#xA;    ),&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Font&lt;/h3&gt; &#xA;&lt;p&gt;You should use one font throughout your app&#39;s UI, and we recommend sticking with the default font for Windows apps, &lt;strong&gt;Segoe UI Variable&lt;/strong&gt;. It&#39;s designed to maintain optimal legibility across sizes and pixel densities and offers a clean, light, and open aesthetic that complements the content of the system. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/style/typography#font&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/style/images/type/segoe-sample.svg?sanitize=true&#34; alt=&#34;Font Segoe UI Showcase&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Type ramp&lt;/h3&gt; &#xA;&lt;p&gt;The Windows type ramp establishes crucial relationships between the type styles on a page, helping users read content easily. All sizes are in effective pixels. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/style/typography#type-ramp&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/style/images/type/text-block-type-ramp.svg?sanitize=true&#34; alt=&#34;Windows Type Ramp&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reveal Focus&lt;/h2&gt; &#xA;&lt;p&gt;Reveal Focus is a lighting effect for &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/devices/designing-for-tv&#34;&gt;10-foot experiences&lt;/a&gt;, such as Xbox One and television screens. It animates the border of focusable elements, such as buttons, when the user moves gamepad or keyboard focus to them. It&#39;s turned off by default, but it&#39;s simple to enable. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/reveal-focus&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Reveal Focus calls attention to focused elements by adding an animated glow around the element&#39;s border:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/images/traveling-focus-fullscreen-light-rf.gif&#34; alt=&#34;Reveal Focus Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is especially helpful in 10-foot scenarios where the user might not be paying full attention to the entire TV screen.&lt;/p&gt; &#xA;&lt;h3&gt;Enabling it&lt;/h3&gt; &#xA;&lt;p&gt;Reveal Focus is off by default. To enable it, change the &lt;code&gt;focusTheme&lt;/code&gt; in your app &lt;code&gt;ThemeData&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;theme: ThemeData(&#xA;  focusTheme: FocusThemeData(&#xA;    glowFactor: 4.0,&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To enable it in a 10 foot screen, use the method &lt;code&gt;is10footScreen&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;dart:ui&#39; as ui;&#xA;&#xA;theme: ThemeData(&#xA;  focusTheme: FocusThemeData(&#xA;    glowFactor: is10footScreen(ui.window.physicalSize.width) ? 2.0 : 0.0,&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go to the &lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/example&#34;&gt;example&lt;/a&gt; project to a full example&lt;/p&gt; &#xA;&lt;h3&gt;Why isn&#39;t Reveal Focus on by default?&lt;/h3&gt; &#xA;&lt;p&gt;As you can see, it&#39;s fairly easy to turn on Reveal Focus when the app detects it&#39;s running on 10 foot screen. So, why doesn&#39;t the system just turn it on for you? Because Reveal Focus increases the size of the focus visual, which might cause issues with your UI layout. In some cases, you&#39;ll want to customize the Reveal Focus effect to optimize it for your app.&lt;/p&gt; &#xA;&lt;h3&gt;Customizing Reveal Focus&lt;/h3&gt; &#xA;&lt;p&gt;You can customize the focus border, border radius and glow color:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;focusTheme: FocusStyle(&#xA;  borderRadius: BorderRadius.zero,&#xA;  glowColor: theme.accentColor?.withOpacity(0.2),&#xA;  glowFactor: 0.0,&#xA;  border: BorderSide(&#xA;    width: 2.0,&#xA;    color: theme.inactiveColor ?? Colors.transparent,&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To customize it to a single widget, wrap the widget in a &lt;code&gt;FocusTheme&lt;/code&gt; widget, and change the options you want:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FocusTheme(&#xA;  data: FocusThemeData(...),&#xA;  child: Button(&#xA;    text: Text(&#39;Custom Focus Button&#39;),&#xA;    onPressed: () {},&#xA;  )&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Motion&lt;/h1&gt; &#xA;&lt;p&gt;This package widely uses animation in the widgets. The animation duration and curve can be defined on the app theme.&lt;/p&gt; &#xA;&lt;h2&gt;Page transitions&lt;/h2&gt; &#xA;&lt;p&gt;Page transitions navigate users between pages in an app, providing feedback as the relationship between pages. Page transitions help users understand if they are at the top of a navigation hierarchy, moving between sibling pages, or navigating deeper into the page hierarchy.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s recommended to widely use page transitions on &lt;code&gt;NavigationView&lt;/code&gt;, that can be implemented using the widget &lt;code&gt;NavigationBody&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This library gives you the following implementations to navigate between your pages:&lt;/p&gt; &#xA;&lt;h4&gt;Entrance&lt;/h4&gt; &#xA;&lt;p&gt;Entrance is a combination of a slide up animation and a fade in animation for the incoming content. Use entrance when the user is taken to the top of a navigational stack, such as navigating between tabs or left-nav items.&lt;/p&gt; &#xA;&lt;p&gt;The desired feeling is that the user has started over.&lt;/p&gt; &#xA;&lt;p&gt;Avaiable with the widget &lt;code&gt;EntrancePageTransition&lt;/code&gt;, it produces the following effect:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/motion/images/page-refresh.gif&#34; alt=&#34;Entrance Page Transition Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Drill In&lt;/h4&gt; &#xA;&lt;p&gt;Use drill when users navigate deeper into an app, such as displaying more information after selecting an item.&lt;/p&gt; &#xA;&lt;p&gt;The desired feeling is that the user has gone deeper into the app.&lt;/p&gt; &#xA;&lt;p&gt;Avaiable with the widget &lt;code&gt;DrillInPageTransition&lt;/code&gt;, it produces the following effect:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/motion/images/drill.gif&#34; alt=&#34;Drill Page Transition Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Horizontal&lt;/h4&gt; &#xA;&lt;p&gt;It&#39;s avaiable with the widget &lt;code&gt;HorizontalSlidePageTransition&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Navigation&lt;/h1&gt; &#xA;&lt;p&gt;The default Flutter Navigation is available on the &lt;code&gt;FluentApp&lt;/code&gt; widget, that means you can simply call &lt;code&gt;Navigator.push&lt;/code&gt; and &lt;code&gt;Navigator.pop&lt;/code&gt; to navigate between routes. See &lt;a href=&#34;https://flutter.dev/docs/cookbook/navigation/navigation-basics&#34;&gt;navigate to a new screen and back&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Navigation View&lt;/h2&gt; &#xA;&lt;p&gt;The NavigationView control provides top-level navigation for your app. It adapts to a variety of screen sizes and supports both &lt;em&gt;top&lt;/em&gt; and &lt;em&gt;left&lt;/em&gt; navigation styles.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/nav-view-header.png&#34; alt=&#34;Navigation Panel&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;App Bar&lt;/h3&gt; &#xA;&lt;p&gt;The app bar is the top app bar that every desktop nowadays have.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NavigationView(&#xA;  appBar: NavigationAppBar(&#xA;    title: Text(&#39;Nice App Title :)&#39;),&#xA;    actions: Row(children: [&#xA;      /// These actions are usually the minimize, maximize and close window&#xA;    ]),&#xA;    /// If automaticallyImplyLeading is true, a &#39;back button&#39; will be added to&#xA;    /// app bar. This property can be overritten by [leading]&#xA;    automaticallyImplyLeading: true,&#xA;  ),&#xA;  ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Navigation Pane&lt;/h3&gt; &#xA;&lt;p&gt;The pane is the pane that can be displayed at the left or at the top.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NavigationView(&#xA;  ...,&#xA;  pane: NavigationPane(&#xA;    /// The current selected index&#xA;    selected: index,&#xA;    /// Called whenever the current index changes&#xA;    onChanged: (i) =&amp;gt; setState(() =&amp;gt; index = i),&#xA;    displayMode: PaneDisplayMode.auto,&#xA;  ),&#xA;  ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can change the &lt;code&gt;displayMode&lt;/code&gt; to make it fit the screen.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Screenshot&lt;/th&gt; &#xA;   &lt;th&gt;Info&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Top&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/displaymode-top.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The pane is positioned above the content. We recommend top navigation when: &lt;br&gt;- You have 5 or fewer top-level navigation categories that are equally important, and any additional top-level navigation categories that end up in the dropdown overflow menu are considered less important.&lt;br&gt; - You need to show all navigation options on screen. - You want more space for your app content. &lt;br&gt;- Icons cannot clearly describe your app&#39;s navigation categories.&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Open&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/displaymode-left.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The pane is expanded and positioned to the left of the content. We recommend &lt;em&gt;open&lt;/em&gt; navigation when: &lt;br&gt;- You have 5-10 equally important top-level navigation categories.&lt;br&gt;- You want navigation categories to be very prominent, with less space for other app content.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Compact&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/displaymode-leftcompact.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The pane shows only icons until opened and is positioned to the left of the content.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Minimal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/displaymode-leftminimal.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Only the menu button is shown until the pane is opened. When opened, it&#39;s positioned to the left of the content.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Auto&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/displaymode-auto.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;By default, &lt;code&gt;displayMode&lt;/code&gt; is set to &lt;code&gt;auto&lt;/code&gt;. In Auto mode, the NavigationView adapts between &lt;code&gt;minimal&lt;/code&gt; when the window is narrow, to &lt;code&gt;compact&lt;/code&gt;, and then &lt;code&gt;open&lt;/code&gt; as the window gets wider.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can customize the selected indicator. By default &lt;code&gt;StickyNavigationIndicator&lt;/code&gt; is used, but you can also use the old windows indicator:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;pane: NavigationPane(&#xA;  indicator: const EndNavigationIndicator(),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Navigation body&lt;/h3&gt; &#xA;&lt;p&gt;A navigation body is used to implement page transitions into a navigation view. It knows what is the current display mode of the parent &lt;code&gt;NavigationView&lt;/code&gt;, if any, and define the page transitions accordingly.&lt;/p&gt; &#xA;&lt;p&gt;For top mode, the horizontal page transition is used. For the others, drill in page transition is used.&lt;/p&gt; &#xA;&lt;p&gt;You can also supply a builder function to create the pages instead of a list of widgets. For this use the &lt;code&gt;NavigationBody.builder&lt;/code&gt; constructor.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;int _currentIndex = 0;&#xA;&#xA;NavigationView(&#xA;  ...,&#xA;  content: NavigationBody(index: _currentIndex, children: [...]),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;NavigationBody.builder&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NavigationView(&#xA;  ...,&#xA;  content: NavigationBody.builder(&#xA;    index: _currentIndex,&#xA;    itemBuilder: (context, index) {&#xA;      return ...;&#xA;    }&#xA;  )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ScaffoldPage&lt;/code&gt; is usually used with the navigation body as its children:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NavigationBody(&#xA;  index: _currentIndex,&#xA;  children: [&#xA;    const ScaffoldPage(&#xA;      topBar: PageHeader(header: Text(&#39;Your Songs&#39;))&#xA;    )&#xA;  ],&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Info Badge&lt;/h3&gt; &#xA;&lt;p&gt;Badging is a non-intrusive and intuitive way to display notifications or bring focus to an area within an app - whether that be for notifications, indicating new content, or showing an alert. An &lt;code&gt;InfoBadge&lt;/code&gt; is a small piece of UI that can be added into an app and customized to display a number, icon, or a simple dot. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/info-badge&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/infobadge/infobadge-example-1.png&#34; alt=&#34;InfoBadge Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;InfoBadge is built into &lt;code&gt;NavigationView&lt;/code&gt;, but can also be placed as a standalone widget, allowing you to place InfoBadge into any control or piece of UI of your choosing. When you use an &lt;code&gt;InfoBadge&lt;/code&gt; somewhere other than &lt;code&gt;NavigationView&lt;/code&gt;, you are responsible for programmatically determining when to show and dismiss the &lt;code&gt;InfoBadge&lt;/code&gt;, and where to place the &lt;code&gt;InfoBadge&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to add an info badge to a &lt;code&gt;PaneItem&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NavigationView(&#xA;  ...,&#xA;  pane: NavigationPane(&#xA;    ...&#xA;    children: [&#xA;      PaneItem(&#xA;        icon: Icon(FluentIcons.more),&#xA;        title: const Text(&#39;Others&#39;),&#xA;        infoBadge: const InfoBadge(&#xA;          source: Text(&#39;9&#39;),&#xA;        ),&#xA;      ),&#xA;    ],&#xA;  ),&#xA;  ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which produces the folllowing effects in the display modes:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Open&lt;/th&gt; &#xA;   &lt;th&gt;Compact&lt;/th&gt; &#xA;   &lt;th&gt;Top&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/infobadge/navview-expanded.png&#34; alt=&#34;Open InfoBadge Preview&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/infobadge/navview-compact.png&#34; alt=&#34;Compact InfoBadge Preview&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/infobadge/navview-top.png&#34; alt=&#34;Top InfoBadge Preview&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Tab View&lt;/h2&gt; &#xA;&lt;p&gt;The TabView control is a way to display a set of tabs and their respective content. TabViews are useful for displaying several pages (or documents) of content while giving a user the capability to rearrange, open, or close new tabs. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/tab-view&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a tab view:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;SizedBox(&#xA;  height: 600,&#xA;  child: TabView(&#xA;    currentIndex: currentIndex,&#xA;    onChanged: (index) =&amp;gt; setState(() =&amp;gt; currentIndex = index),&#xA;    onNewPressed: () {&#xA;      setState(() =&amp;gt; tabs++);&#xA;    },&#xA;    tabs: List.generate(tabs, (index) {&#xA;      return Tab(&#xA;        text: Text(&#39;Tab $index&#39;),&#xA;        closeIcon: FluentIcons.chrome_close,&#xA;      );&#xA;    }),&#xA;    bodies: List.generate(&#xA;      tabs,&#xA;      (index) =&amp;gt; Container(&#xA;        color: index.isEven ? Colors.red : Colors.yellow,&#xA;      ),&#xA;    ),&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/tabview/tab-introduction.png&#34; alt=&#34;TabView Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bottom Navigation&lt;/h2&gt; &#xA;&lt;p&gt;The bottom navigation displays icons and optional text at the bottom of the screen for switching between different primary destinations in an app. This is commomly used on small screens. &lt;a href=&#34;https://developer.microsoft.com/pt-br/fluentui#/controls/android/bottomnavigation&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a bottom navigation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;int index = 0;&#xA;&#xA;ScaffoldPage(&#xA;  content: NavigationBody(index: index, children: [&#xA;    Container(),&#xA;    Container(),&#xA;    Container(),&#xA;  ]),&#xA;  bottomBar: BottomNavigation(&#xA;    index: index,&#xA;    onChanged: (i) =&amp;gt; setState(() =&amp;gt; index = i),&#xA;    items: [&#xA;      BottomNavigationItem(&#xA;        icon: Icon(Icons.two_k),&#xA;        selectedIcon: Icon(Icons.two_k_plus),&#xA;        title: Text(&#39;Both&#39;),&#xA;      ),&#xA;      BottomNavigationItem(&#xA;        icon: Icon(Icons.phone_android_outlined),&#xA;        selectedIcon: Icon(Icons.phone_android),&#xA;        title: Text(&#39;Android&#39;),&#xA;      ),&#xA;      BottomNavigationItem(&#xA;        icon: Icon(Icons.phone_iphone_outlined),&#xA;        selectedIcon: Icon(Icons.phone_iphone),&#xA;        title: Text(&#39;iOS&#39;),&#xA;      ),&#xA;    ],&#xA;  )&#xA;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Inputs&lt;/h1&gt; &#xA;&lt;p&gt;Inputs are widgets that reacts to user interection. On most of the inputs you can set &lt;code&gt;onPressed&lt;/code&gt; or &lt;code&gt;onChanged&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt; to disable it.&lt;/p&gt; &#xA;&lt;h2&gt;Button&lt;/h2&gt; &#xA;&lt;p&gt;A button gives the user a way to trigger an immediate action. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/buttons&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic button:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Button(&#xA;  child: Text(&#39;Standard XAML button&#39;),&#xA;  // Set onPressed to null to disable the button&#xA;  onPressed: () {&#xA;    print(&#39;button pressed&#39;);&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/button.png&#34; alt=&#34;Button&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also use some alternative buttons:&lt;/p&gt; &#xA;&lt;h3&gt;Filled Button&lt;/h3&gt; &#xA;&lt;p&gt;This button is identical to the &lt;code&gt;Button&lt;/code&gt;, but with accent color fill in background&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FilledButton(&#xA;  child: Text(&#39;FILLED BUTTON&#39;),&#xA;  onPressed: () {&#xA;    print(&#39;pressed filled button&#39;);&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Icon Button&lt;/h3&gt; &#xA;&lt;p&gt;This button is used to display an &lt;code&gt;Icon&lt;/code&gt; as content. It&#39;s optmized to show icons.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;IconButton(&#xA;  icon: Icon(FluentIcons.add),&#xA;  onPressed: () {&#xA;    print(&#39;pressed icon button&#39;);&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Outlined Button&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;OutlinedButton(&#xA;  child: Text(&#39;OUTLINED BUTTON&#39;),&#xA;  onPressed: () {&#xA;    print(&#39;pressed outlined button&#39;);&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Text Button&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TextButton(&#xA;  child: Text(&#39;TEXT BUTTON&#39;),&#xA;  onPressed: () {&#xA;    print(&#39;pressed text button&#39;);&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Split Button&lt;/h2&gt; &#xA;&lt;p&gt;A Split Button has two parts that can be invoked separately. One part behaves like a standard button and invokes an immediate action. The other part invokes a flyout that contains additional options that the user can choose from. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/buttons#create-a-split-button&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use a &lt;code&gt;SplitButtonBar&lt;/code&gt; to create a Split Button. It takes two &lt;code&gt;Button&lt;/code&gt;s in the &lt;code&gt;buttons&lt;/code&gt; property. You can also customize the button spacing by changing the property &lt;code&gt;interval&lt;/code&gt; in its theme.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a split button:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;const double splitButtonHeight = 25.0;&#xA;&#xA;SplitButtonBar(&#xA;  style: SplitButtonThemeData(&#xA;    interval: 1, // the default value is one&#xA;  ),&#xA;  // There need to be at least 2 items in the buttons, and they must be non-null&#xA;  buttons: [&#xA;    SizedBox(&#xA;      height: splitButtonHeight,&#xA;      child: Button(&#xA;        child: Container(&#xA;          height: 24,&#xA;          width: 24,&#xA;          color: FluentTheme.of(context).accentColor,&#xA;        ),&#xA;        onPressed: () {},&#xA;      ),&#xA;    ),&#xA;    IconButton(&#xA;      icon: const SizedBox(&#xA;        height: splitButtonHeight,&#xA;        child: const Icon(FluentIcons.chevron_down, size: 10.0),&#xA;      ),&#xA;      onPressed: () {},&#xA;    ),&#xA;  ],&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following button:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/split-button-rtb.png&#34; alt=&#34;SplitButtonBar Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Toggle Button&lt;/h2&gt; &#xA;&lt;p&gt;A button that can be on or off.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic toggle button:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;bool _value = false;&#xA;&#xA;ToggleButton(&#xA;  child: Text(&#39;Toggle Button&#39;),&#xA;  checked: _value,&#xA;  onChanged: (value) =&amp;gt; setState(() =&amp;gt; _value = value),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Checkbox&lt;/h2&gt; &#xA;&lt;p&gt;A check box is used to select or deselect action items. It can be used for a single item or for a list of multiple items that a user can choose from. The control has three selection states: unselected, selected, and indeterminate. Use the indeterminate state when a collection of sub-choices have both unselected and selected states. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/checkbox&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a checkbox:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;bool _checked = true;&#xA;&#xA;Checkbox(&#xA;  checked: _checked,&#xA;  onChanged: (value) =&amp;gt; setState(() =&amp;gt; _checked = value),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Handling its states&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;State&lt;/th&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;checked&lt;/td&gt; &#xA;   &lt;td&gt;checked&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;unchecked&lt;/td&gt; &#xA;   &lt;td&gt;checked&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;indeterminate&lt;/td&gt; &#xA;   &lt;td&gt;checked&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;enabled&lt;/td&gt; &#xA;   &lt;td&gt;onChanged&lt;/td&gt; &#xA;   &lt;td&gt;non-null&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;disabled&lt;/td&gt; &#xA;   &lt;td&gt;onChanged&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/templates-checkbox-states-default.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Toggle Switch&lt;/h2&gt; &#xA;&lt;p&gt;The toggle switch represents a physical switch that allows users to turn things on or off, like a light switch. Use toggle switch controls to present users with two mutually exclusive options (such as on/off), where choosing an option provides immediate results. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/toggles&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic toggle switch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;bool _checked = false;&#xA;&#xA;ToggleSwitch(&#xA;  checked: _checked,&#xA;  onChanged: (v) =&amp;gt; setState(() =&amp;gt; _checked = v),&#xA;  content: Text(_checked ? &#39;On&#39; : &#39;Off&#39;);&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/toggleswitches01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Radio Buttons&lt;/h2&gt; &#xA;&lt;p&gt;Radio buttons, also called option buttons, let users select one option from a collection of two or more mutually exclusive, but related, options. Radio buttons are always used in groups, and each option is represented by one radio button in the group.&lt;/p&gt; &#xA;&lt;p&gt;In the default state, no radio button in a RadioButtons group is selected. That is, all radio buttons are cleared. However, once a user has selected a radio button, the user can&#39;t deselect the button to restore the group to its initial cleared state.&lt;/p&gt; &#xA;&lt;p&gt;The singular behavior of a RadioButtons group distinguishes it from check boxes, which support multi-selection and deselection, or clearing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/radio-button&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic set of radio buttons:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;int _currentIndex = -1;&#xA;&#xA;final List&amp;lt;String&amp;gt; radioButtons = &amp;lt;String&amp;gt;[&#xA;  &#39;RadioButton 1&#39;,&#xA;  &#39;RadioButton 2&#39;,&#xA;  &#39;RadioButton 3&#39;,&#xA;];&#xA;&#xA;Column(&#xA;  children: List.generate(radioButtons.length, (index) {&#xA;    return RadioButton(&#xA;      checked: _currentIndex == index,&#xA;      // set onChanged to null to disable the button&#xA;      onChanged: (value) =&amp;gt; setState(() =&amp;gt; _currentIndex = index),&#xA;      content: Text(radioButtons[index]),&#xA;    );&#xA;  }),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/controls/radio-button.png&#34; alt=&#34;Radio Buttons&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;DropDown button&lt;/h2&gt; &#xA;&lt;p&gt;A DropDownButton is a button that shows a chevron as a visual indicator that it has an attached flyout that contains more options. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/buttons#create-a-drop-down-button&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/drop-down-button-align.png&#34; alt=&#34;DropDown Button&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a drop down button:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;DropDownButton(&#xA;  leading: const Icon(FluentIcons.align_left),&#xA;  title: const Text(&#39;Alignment&#39;),&#xA;  items: [&#xA;    DropDownButtonItem(&#xA;      title: const Text(&#39;Left&#39;),&#xA;      leading: const Icon(FluentIcons.align_left),&#xA;      onTap: () =&amp;gt; debugPrint(&#39;left&#39;),&#xA;    ),&#xA;    DropDownButtonItem(&#xA;      title: const Text(&#39;Center&#39;),&#xA;      leading: const Icon(FluentIcons.align_center),&#xA;      onTap: () =&amp;gt; debugPrint(&#39;center&#39;),&#xA;    ),&#xA;    DropDownButtonItem(&#xA;      title: const Text(&#39;Right&#39;),&#xA;      leading: const Icon(FluentIcons.align_right),&#xA;      onTap: () =&amp;gt; debugPrint(&#39;right&#39;),&#xA;    ),&#xA;  ],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Slider&lt;/h2&gt; &#xA;&lt;p&gt;A slider is a control that lets the user select from a range of values by moving a thumb control along a track. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/slider&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A slider is a good choice when you know that users think of the value as a relative quantity, not a numeric value. For example, users think about setting their audio volume to low or medium—not about setting the value to 2 or 5.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t use a slider for binary settings. Use a &lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#toggle-switches&#34;&gt;toggle switch&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic slider:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;double _sliderValue = 0;&#xA;&#xA;SizedBox(&#xA;  // The default width is 200.&#xA;  // The slider does not have its own widget, so you have to add it yourself.&#xA;  // The slider always try to be as big as possible&#xA;  width: 200,&#xA;  child: Slider(&#xA;    max: 100,&#xA;    value: _sliderValue,&#xA;    onChanged: (v) =&amp;gt; setState(() =&amp;gt; _sliderValue = v),&#xA;    // Label is the text displayed above the slider when the user is interacting with it.&#xA;    label: &#39;${_sliderValue.toInt()}&#39;,&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/controls/slider.png&#34; alt=&#34;Slider Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Choosing between vertical and horizontal sliders&lt;/h3&gt; &#xA;&lt;p&gt;You can set &lt;code&gt;vertical&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to create a vertical slider&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Horizontal&lt;/th&gt; &#xA;   &lt;th&gt;Vertical&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;If the control is used to seek within media, like in a video app.&lt;/td&gt; &#xA;   &lt;td&gt;if the slider represents a real-world value that is normally shown vertically (such as temperature).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Rating Bar&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The property &lt;code&gt;starSpacing&lt;/code&gt; was not implemented yet&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The rating control allows users to view and set ratings that reflect degrees of satisfaction with content and services. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/rating&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;double rating = 0.0;&#xA;&#xA;RatingBar(&#xA;  rating: rating,&#xA;  onChanged: (v) =&amp;gt; setState(() =&amp;gt; rating = v),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can set &lt;code&gt;amount&lt;/code&gt; to change the amount of stars. The &lt;code&gt;rating&lt;/code&gt; must be less than the stars and more than 0. You can also change the &lt;code&gt;icon&lt;/code&gt;, its size and color. You can make the bar read only by setting &lt;code&gt;onChanged&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/rating_rs2_doc_ratings_intro.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Forms&lt;/h1&gt; &#xA;&lt;p&gt;A form is a group of controls that collect and submit data from users. Forms are typically used for settings pages, surveys, creating accounts, and much more.&lt;/p&gt; &#xA;&lt;h2&gt;TextBox&lt;/h2&gt; &#xA;&lt;p&gt;A Text Box lets a user type text into an app. It&#39;s typically used to capture a single line of text, but can be configured to capture multiple lines of text. The text displays on the screen in a simple, uniform, plaintext format. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/text-box&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/text-box.png&#34; alt=&#34;TextBox Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/example/lib/screens/forms.dart&#34;&gt;Forms screen&lt;/a&gt; in the example app for reference.&lt;/p&gt; &#xA;&lt;p&gt;You can use the widget &lt;code&gt;TextBox&lt;/code&gt; to create text boxes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TextBox(&#xA;  controller: ...,&#xA;  header: &#39;Notes&#39;,&#xA;  placeholder: &#39;Type your notes here&#39;,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/text-box-ex1.png&#34; alt=&#34;TextBox Example Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to validate the text box, use a &lt;code&gt;TextFormBox&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TextFormBox(&#xA;  placeholder: &#39;Your email&#39;,&#xA;  validator: (text) {&#xA;    if (text == null || text.isEmpty) return &#39;Provide an email&#39;;&#xA;  }&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Auto Suggest Box&lt;/h2&gt; &#xA;&lt;p&gt;Use an AutoSuggestBox to provide a list of suggestions for a user to select from as they type. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/auto-suggest-box&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final autoSuggestBox = TextEditingController();&#xA;&#xA;AutoSuggestBox&amp;lt;String&amp;gt;(&#xA;  controller: autoSuggestBox,&#xA;  items: [&#xA;    &#39;Blue&#39;,&#xA;    &#39;Green&#39;,&#xA;    &#39;Red&#39;,&#xA;    &#39;Yellow&#39;,&#xA;    &#39;Grey&#39;,&#xA;  ],&#xA;  onSelected: (text) {&#xA;    print(text);&#xA;  },&#xA;  textBoxBuilder: (context, controller, focusNode, key) {&#xA;    const BorderSide _kDefaultRoundedBorderSide = BorderSide(&#xA;      style: BorderStyle.solid,&#xA;      width: 0.8,&#xA;    );&#xA;    return TextBox(&#xA;      key: key,&#xA;      controller: controller,&#xA;      focusNode: focusNode,&#xA;      suffixMode: OverlayVisibilityMode.editing,&#xA;      suffix: IconButton(&#xA;        icon: Icon(FluentIcons.close),&#xA;        onPressed: () {&#xA;          controller.clear();&#xA;          focusNode.unfocus();&#xA;        },&#xA;      ),&#xA;      placeholder: &#39;Type a color&#39;,&#xA;    );&#xA;  },&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/controls_autosuggest_expanded01.png&#34; alt=&#34;Auto suggest box example&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Screenshots&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/control-examples/auto-suggest-box-groove.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/controls_autosuggest_noresults.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Combo Box&lt;/h2&gt; &#xA;&lt;p&gt;Use a combo box (also known as a drop-down list) to present a list of items that a user can select from. A combo box starts in a compact state and expands to show a list of selectable items. A ListBox is similar to a combo box, but is not collapsible/does not have a compact state. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/combo-box&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic combo box:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;final values = [&#39;Blue&#39;, &#39;Green&#39;, &#39;Yellow&#39;, &#39;Red&#39;];&#xA;String? comboBoxValue;&#xA;&#xA;SizedBox(&#xA;  width: 200,&#xA;  child: Combobox&amp;lt;String&amp;gt;(&#xA;    placeholder: Text(&#39;Selected list item&#39;),&#xA;    isExpanded: true,&#xA;    items: values&#xA;        .map((e) =&amp;gt; ComboboxItem&amp;lt;String&amp;gt;(&#xA;              value: e,&#xA;              child: Text(e),&#xA;            ))&#xA;        .toList(),&#xA;    value: comboBoxValue,&#xA;    onChanged: (value) {&#xA;      // print(value);&#xA;      if (value != null) setState(() =&amp;gt; comboBoxValue = value);&#xA;    },&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/combo-box-no-selection.png&#34; alt=&#34;Combo box Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Widgets&lt;/h1&gt; &#xA;&lt;h2&gt;Tooltip&lt;/h2&gt; &#xA;&lt;p&gt;A tooltip is a short description that is linked to another control or object. Tooltips help users understand unfamiliar objects that aren&#39;t described directly in the UI. They display automatically when the user moves focus to, presses and holds, or hovers the mouse pointer over a control. The tooltip disappears after a few seconds, or when the user moves the finger, pointer or keyboard/gamepad focus. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/tooltips&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To add a tooltip to a widget, wrap it in a &lt;code&gt;Tooltip&lt;/code&gt; widget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Tooltip(&#xA;  message: &#39;Click to perform an action&#39;,&#xA;  child: Button(&#xA;    child: Text(&#39;Button with tooltip&#39;),&#xA;    onPressed: () {&#xA;      print(&#39;Pressed button with tooltip&#39;);&#xA;    }&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s located above or below the &lt;code&gt;child&lt;/code&gt; widget. You can specify the preffered location when both locations are available using the &lt;code&gt;preferBelow&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/controls/tool-tip.png&#34; alt=&#34;Tooltip Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Content Dialog&lt;/h2&gt; &#xA;&lt;p&gt;Dialogs are modal UI overlays that provide contextual app information. They block interactions with the app window until being explicitly dismissed. They often request some kind of action from the user. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/dialogs-and-flyouts/dialogs&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can create a Dialog with the widget &lt;code&gt;ContentDialog&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ContentDialog(&#xA;  title: Text(&#39;No WiFi connection&#39;),&#xA;  content: Text(&#39;Check your connection and try again&#39;),&#xA;  actions: [&#xA;    Button(&#xA;      child: Text(&#39;Ok&#39;),&#xA;      onPressed: () {&#xA;        Navigator.pop(context);&#xA;      }&#xA;    )&#xA;  ],&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/dialogs/dialog_rs2_one_button.png&#34; alt=&#34;No Wifi Connection Dialog&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can display the dialog as an overlay by calling the function &lt;code&gt;showDialog&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;showDialog(&#xA;  context: context,&#xA;  builder: (context) {&#xA;    return ContentDialog(...);&#xA;  },&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/dialogs/dialog_rs2_delete_file.png&#34; alt=&#34;Delete File Dialog&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/dialogs/dialog_rs2_three_button_default.png&#34; alt=&#34;Subscribe to App Service Dialog&#34;&gt;\&lt;/p&gt; &#xA;&lt;h2&gt;Expander&lt;/h2&gt; &#xA;&lt;p&gt;Expander lets you show or hide less important content that&#39;s related to a piece of primary content that&#39;s always visible. Items contained in the &lt;code&gt;header&lt;/code&gt; are always visible. The user can expand and collapse the &lt;code&gt;content&lt;/code&gt; area, where secondary content is displayed, by interacting with the header. When the content area is expanded, it pushes other UI elements out of the way; it does not overlay other UI. The Expander can expand upwards or downwards.&lt;/p&gt; &#xA;&lt;p&gt;Both the &lt;code&gt;header&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; areas can contain any content, from simple text to complex UI layouts. For example, you can use the control to show additional options for an item.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/expander-default.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use an Expander when some primary content should always be visible, but related secondary content may be hidden until needed. This UI is commonly used when display space is limited and when information or options can be grouped together. Hiding the secondary content until it&#39;s needed can also help to focus the user on the most important parts of your app.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create an expander:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Expander(&#xA;  header: const Text(&#39;This thext is in header&#39;),&#xA;  content: const Text(&#39;This is the content&#39;),&#xA;  direction: ExpanderDirection.down, // (optional). Defaults to ExpanderDirection.down&#xA;  initiallyExpanded: false, // (false). Defaults to false&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open and close the expander programatically:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final _expanderKey = GlobalKey&amp;lt;ExpanderState&amp;gt;();&#xA;&#xA;Expander(&#xA;  header: const Text(&#39;This thext is in header&#39;),&#xA;  content: const Text(&#39;This is the content&#39;),&#xA;),&#xA;&#xA;// Call this function to close the expander&#xA;void close() {&#xA;  _expanderKey.currentState?.open = false;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Flyout&lt;/h2&gt; &#xA;&lt;p&gt;A flyout is a light dismiss container that can show arbitrary UI as its content. Flyouts can contain other flyouts or context menus to create a nested experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/flyout-smoke.png&#34; alt=&#34;Flyout Opened Above Button 3&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final flyoutController = FlyoutController();&#xA;&#xA;Flyout(&#xA;  controller: flyoutController,&#xA;  content: const FlyoutContent(&#xA;    constraints: BoxConstraints(maxWidth: 100),&#xA;    child: Text(&#39;The Flyout for Button 3 has LightDismissOverlayMode enabled&#39;),&#xA;  ),&#xA;  child: Button(&#xA;    child: Text(&#39;Button 3&#39;),&#xA;    onPressed: flyoutController.open,&#xA;  ),&#xA;);&#xA;&#xA;@override&#xA;void dispose() {&#xA;  // Dispose the controller to free up resources&#xA;  flyoutController.dispose();&#xA;  super.dispose();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acrylic&lt;/h2&gt; &#xA;&lt;p&gt;Acrylic is a type of Brush that creates a translucent texture. You can apply acrylic to app surfaces to add depth and help establish a visual hierarchy. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/acrylic&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/images/header-acrylic.svg?sanitize=true&#34; alt=&#34;Acrylic&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Do&lt;/th&gt; &#xA;   &lt;th&gt;Don&#39;t&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Do use acrylic as the background material of non-primary app surfaces like navigation panes.&lt;/td&gt; &#xA;   &lt;td&gt;Don&#39;t put desktop acrylic on large background surfaces of your app - this breaks the mental model of acrylic being used primarily for transient surfaces.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Do extend acrylic to at least one edge of your app to provide a seamless experience by subtly blending with the app’s surroundings.&lt;/td&gt; &#xA;   &lt;td&gt;Don’t place in-app and background acrylics directly adjacent to avoid visual tension at the seams.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Don&#39;t place multiple acrylic panes with the same tint and opacity next to each other because this results in an undesirable visible seam.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Don’t place accent-colored text over acrylic surfaces.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;SizedBox(&#xA;  height: ...,&#xA;  width: ...,&#xA;  child: Acrylic(&#xA;          child: Button(&#xA;            child: Text(&#39;Mom it\&#39;s me hehe &amp;lt;3&#39;),&#xA;            onPressed: () {&#xA;              print(&#39;button inside acrylic pressed&#39;);&#xA;            }&#xA;          ),&#xA;        ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/images/luminosityversustint.png&#34; alt=&#34;Acrylic preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;InfoBar&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;InfoBar&lt;/code&gt; control is for displaying app-wide status messages to users that are highly visible yet non-intrusive. There are built-in Severity levels to easily indicate the type of message shown as well as the option to include your own call to action or hyperlink button. Since the InfoBar is inline with other UI content the option is there for the control to always be visible or dismissed by the user.&lt;/p&gt; &#xA;&lt;p&gt;You can easility create it using the &lt;code&gt;InfoBar&lt;/code&gt; widget and theme it using &lt;code&gt;InfoBarThemeData&lt;/code&gt;. It has built-in support for both light and dark theme:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;bool _visible = true;&#xA;&#xA;if (_visible)&#xA;  InfoBar(&#xA;    title: Text(&#39;Update available&#39;),&#xA;    content: Text(&#39;Restart the app to apply the latest update.&#39;), // optional&#xA;    severity: InfoBarSeverity.info, // optional. Default to InfoBarSeverity.info&#xA;    onClose: () {&#xA;      // Dismiss the info bar&#xA;      setState(() =&amp;gt; _visible = false);&#xA;    }&#xA;  ),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/infobar-default-title-message.png&#34; alt=&#34;InfoBar Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Date Picker&lt;/h2&gt; &#xA;&lt;p&gt;The date picker gives you a standardized way to let users pick a localized date value using touch, mouse, or keyboard input. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/date-picker&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The entry point displays the chosen date, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection. The date picker overlays other UI; it doesn&#39;t push other UI out of the way.&lt;/p&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://pub.dev/packages/intl&#34;&gt;intl&lt;/a&gt; to format the dates. You can &lt;a href=&#34;https://pub.dev/packages/intl#current-locale&#34;&gt;change the current locale&lt;/a&gt; to change formatting&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic date picker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;DateTime date = DateTime.now();&#xA;&#xA;SizedBox(&#xA;  width: 295,&#xA;  child: DatePicker(&#xA;    header: &#39;Date of birth&#39;,&#xA;    selected: date,&#xA;    onChanged: (v) =&amp;gt; setState(() =&amp;gt; date = v),&#xA;  ),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/controls-datepicker-expand.gif&#34; alt=&#34;DatePicker Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Time Picker&lt;/h2&gt; &#xA;&lt;p&gt;The time picker gives you a standardized way to let users pick a time value using touch, mouse, or keyboard input. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/time-picker&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use a time picker to let a user pick a single time value.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic time picker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;DateTime date = DateTime.now();&#xA;&#xA;SizedBox(&#xA;  width: 240,&#xA;  child: TimePicker(&#xA;    header: &#39;Arrival time&#39;,&#xA;    selected: date,&#xA;    onChanged: (v) =&amp;gt; setState(() =&amp;gt; date = v),&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/controls-timepicker-expand.gif&#34; alt=&#34;Time Picker Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Progress Bar and Progress Ring&lt;/h2&gt; &#xA;&lt;p&gt;A progress control provides feedback to the user that a long-running operation is underway. It can mean that the user cannot interact with the app when the progress indicator is visible, and can also indicate how long the wait time might be, depending on the indicator used.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a ProgressBar:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ProgressBar(value: 35)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/progressbar-determinate.png&#34; alt=&#34;Determinate Progress Bar&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can omit the &lt;code&gt;value&lt;/code&gt; property to create an indeterminate progress bar:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/progressbar-indeterminate.gif&#34; alt=&#34;Indeterminate Progress Bar&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Indeterminate Progress Bar is a courtesy of &lt;a href=&#34;https://github.com/raitonoberu&#34;&gt;@raitonubero&lt;/a&gt;. Show him some love&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a progress ring:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ProgressRing(value: 35)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/progress_ring.jpg&#34; alt=&#34;Determinate Progress Ring&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can omit the &lt;code&gt;value&lt;/code&gt; property to create an indeterminate progress ring:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/progressring-indeterminate.gif&#34; alt=&#34;Indeterminate Progress Ring&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Both Indeterminate ProgressBar and Indeterminate ProgressRing is a courtesy of &lt;a href=&#34;https://github.com/raitonoberu&#34;&gt;@raitonubero&lt;/a&gt;. Show him some love ❤&lt;/p&gt; &#xA;&lt;h2&gt;Scrollbar&lt;/h2&gt; &#xA;&lt;p&gt;A scrollbar thumb indicates which portion of a [ScrollView] is actually visible. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/scroll-controls&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Depending on the situation, the scrollbar uses two different visualizations, shown in the following illustration: the panning indicator (left) and the traditional scrollbar (right).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that the arrows aren&#39;t visible. See &lt;a href=&#34;https://github.com/flutter/flutter/issues/80370&#34;&gt;this&lt;/a&gt; and &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/issues/14&#34;&gt;this&lt;/a&gt; issues for more info.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/scrollbar-panning.png&#34; alt=&#34;Scrollbar Panning Indicator&#34;&gt; &lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/scrollbar-traditional.png&#34; alt=&#34;Traditional Scrollbar&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;When the scrollbar is visible it is overlaid as 16px on top of the content inside your ScrollView. In order to ensure good UX design you will want to ensure that no interactive content is obscured by this overlay. Additionally if you would prefer not to have UX overlap, leave 16px of padding on the edge of the viewport to allow for the scrollbar.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to add a scrollbar to a ScrollView:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final _controller = ScrollController();&#xA;&#xA;Scrollbar(&#xA;  controller: _controller,&#xA;  child: ListView.builder(&#xA;    controller: _controller,&#xA;    /// You can add a padding to the view to avoid having the scrollbar over the UI elements&#xA;    padding: EdgeInsets.only(right: 16.0),&#xA;    itemCount: 100,&#xA;    itemBuilder: (context, index) {&#xA;      return ListTile(title: Text(&#39;$index&#39;));&#xA;    }&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/conscious-scroll.gif&#34; alt=&#34;Scrollbar Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can change the &lt;code&gt;isAlwaysVisible&lt;/code&gt; property to either enable or disable the fade effect. It&#39;s disabled by default.&lt;/p&gt; &#xA;&lt;h2&gt;List Tile&lt;/h2&gt; &#xA;&lt;p&gt;You can use a &lt;code&gt;ListTile&lt;/code&gt; in a &lt;code&gt;ListView&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final people = {&#xA;  &#39;Mass in B minor&#39;: &#39;Johann Sebastian Bach&#39;,&#xA;  &#39;Third Symphony&#39;: &#39;Ludwig van Beethoven&#39;,&#xA;  &#39;Serse&#39;: &#39;George Frideric Hendel&#39;,&#xA;};&#xA;&#xA;ListView.builder(&#xA;  itemCount: people.length,&#xA;  itemBuilder: (context, index) {&#xA;    final title = people.keys.elementAt(index);&#xA;    final subtitle = people[title];&#xA;    return ListTile(&#xA;      leading: CircleAvatar(),&#xA;      title: Text(title),&#xA;      subtitle: Text(subtitle!),&#xA;    );&#xA;  }&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/listitems/doublelineexample.png&#34; alt=&#34;Double Line Example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to create a tappable tile, use &lt;code&gt;TappableListTile&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;h2&gt;Info Label&lt;/h2&gt; &#xA;&lt;p&gt;You can use an &lt;code&gt;InfoLabel&lt;/code&gt; to tell the user the purpose of something.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to add an info header to a combobox:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;InfoLabel(&#xA;  label: &#39;Colors&#39;,&#xA;  child: ComboBox(...),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/combo-box-no-selection.png&#34; alt=&#34;InfoHeader Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some widgets, such as &lt;code&gt;ComboBox&lt;/code&gt; and &lt;code&gt;TextBox&lt;/code&gt;, already come with a &lt;code&gt;header&lt;/code&gt; property, so you can use them easily with them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ComboBox(&#xA;  header: &#39;Control header&#39;,&#xA;  ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will produce the same as the image above.&lt;/p&gt; &#xA;&lt;h2&gt;TreeView&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;TreeView&lt;/code&gt; control enables a hierarchical list with expanding and collapsing nodes that contain nested items. It can be used to illustrate a folder structure or nested relationships in your UI. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/tree-view&#34;&gt;Learn More&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The tree view uses a combination of indentation and icons to represent the nested relationship between parent nodes and child nodes. Collapsed nodes use a chevron pointing to the right, and expanded nodes use a chevron pointing down.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/treeview-simple.png&#34; alt=&#34;TreeView Simple&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can include an icon in the tree view item data template to represent nodes. For example, if you show a file system hierarchy, you could use folder icons for the parent notes and file icons for the leaf nodes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/treeview-icons.png&#34; alt=&#34;TreeView Icons&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Each &lt;code&gt;TreeViewItem&lt;/code&gt; can optionally take a &lt;code&gt;value&lt;/code&gt; allowing you to store an arbitrary identifier with each item. This can be used in conjunction with &lt;code&gt;onSelectionChanged&lt;/code&gt; to easily identify which items were selected without having to deconstruct the content widget.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a tree view:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TreeView(&#xA;  items: [&#xA;    TreeViewItem(&#xA;      content: const Text(&#39;Work Documents&#39;),&#xA;      children: [&#xA;        TreeViewItem(content: const Text(&#39;XYZ Functional Spec&#39;)),&#xA;        TreeViewItem(content: const Text(&#39;Feature Schedule&#39;)),&#xA;        TreeViewItem(content: const Text(&#39;Overall Project Plan&#39;)),&#xA;        TreeViewItem(content: const Text(&#39;Feature Resources Allocation&#39;)),&#xA;      ],&#xA;    ),&#xA;    TreeViewItem(&#xA;      content: const Text(&#39;Personal Documents&#39;),&#xA;      children: [&#xA;        TreeViewItem(&#xA;          content: const Text(&#39;Home Remodel&#39;),&#xA;          children: [&#xA;            TreeViewItem(content: const Text(&#39;Contractor Contact Info&#39;)),&#xA;            TreeViewItem(content: const Text(&#39;Paint Color Scheme&#39;)),&#xA;            TreeViewItem(content: const Text(&#39;Flooring weedgrain type&#39;)),&#xA;            TreeViewItem(content: const Text(&#39;Kitchen cabinet style&#39;)),&#xA;          ],&#xA;        ),&#xA;      ],&#xA;    ),&#xA;  ],&#xA;  onItemInvoked: (item) =&amp;gt; debugPrint(item), // (optional)&#xA;  // (optional). Can be TreeViewSelectionMode.single or TreeViewSelectionMode.multiple&#xA;  selectionMode: TreeViewSelectionMode.none, &#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scrollable tree view&lt;/h3&gt; &#xA;&lt;p&gt;Vertical scrolling can be enabled for a tree view by setting the &lt;code&gt;shrinkWrap&lt;/code&gt; property to false. If you have many items, consider setting &lt;code&gt;itemExtent&lt;/code&gt;, &lt;code&gt;cacheExtent&lt;/code&gt;, and/or &lt;code&gt;usePrototypeItem&lt;/code&gt; for much better performance.&lt;/p&gt; &#xA;&lt;h3&gt;Lazily load nodes&lt;/h3&gt; &#xA;&lt;p&gt;Load nodes as required by the user&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;late List&amp;lt;TreeViewItem&amp;gt; items;&#xA;&#xA;@override&#xA;void initState() {&#xA;  super.initState();&#xA;  items = [&#xA;    TreeViewItem(&#xA;      content: const Text(&#39;Parent node&#39;),&#xA;      children: [], // REQUIRED. An initial list of children must be provided. It must be mutable&#xA;      onInvoked: (item) async {&#xA;        // If the node is already populated, return&#xA;        if (item.children.isNotEmpty) return;&#xA;        setState(() =&amp;gt; item.loading = true);&#xA;        // Fetch more nodes from an async source, such as an API or device storage&#xA;        final List&amp;lt;TreeViewItem&amp;gt; nodes = await fetchNodes();&#xA;        setState(() {&#xA;          item.loading = false;&#xA;          item.children.addAll(nodes);&#xA;        });&#xA;      }&#xA;    )&#xA;  ];&#xA;}&#xA;&#xA;TreeView(&#xA;  items: items,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CommandBar&lt;/h2&gt; &#xA;&lt;p&gt;A &lt;code&gt;CommandBar&lt;/code&gt; control provides quick access to common tasks. This could be application-level or page-level commands. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/command-bar&#34;&gt;Learn More&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/controls-appbar-icons.png&#34; alt=&#34;CommandBar Simple&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;CommandBar&lt;/code&gt; is composed of a number of &lt;code&gt;CommandBarItem&lt;/code&gt; objects, which could be &lt;code&gt;CommandBarButton&lt;/code&gt;, a &lt;code&gt;CommandBarSeparator&lt;/code&gt;, or any custom object (e.g., a &#34;split button&#34; object). Sub-class &lt;code&gt;CommandBarItem&lt;/code&gt; to create your own custom items.&lt;/p&gt; &#xA;&lt;p&gt;Each &lt;code&gt;CommandBarItem&lt;/code&gt; widget knows how to render itself in three different modes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CommandBarItemDisplayMode.inPrimary&lt;/code&gt;: Displayed horizontally in primary area&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CommandBarItemDisplayMode.inPrimaryCompact&lt;/code&gt;: More compact horizontal display (e.g., only the icon is displayed for &lt;code&gt;CommandBarButton&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CommandBarItemDisplayMode.inSecondary&lt;/code&gt;: Displayed within flyout menu &lt;code&gt;ListView&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &#34;primary area&#34; of the command bar displays items horizontally. The &#34;secondary area&#34; of the command bar is a flyout menu accessed via an &#34;overflow widget&#34; (by default, a &#34;more&#34; button). You can specify items that should be displayed for each area. The overflow widget will only be displayed if there are items in the secondary area (including any items that dynamically overflowed into the secondary area, if dynamic overflow is enabled).&lt;/p&gt; &#xA;&lt;p&gt;Whether or not the &#34;compact&#34; mode is selected for items displayed in the primary area is determined by an optional width breakpoint. If set, if the width of the widget is less than the breakpoint, it will render each primary &lt;code&gt;CommandBarItem&lt;/code&gt; using the compact mode.&lt;/p&gt; &#xA;&lt;p&gt;Different behaviors can be selected when the width of the &lt;code&gt;CommandBarItem&lt;/code&gt; widgets exceeds the constraints, as determined by the specified &lt;code&gt;CommandBarOverflowBehavior&lt;/code&gt;, including dynamic overflow (putting primary items into the secondary area on overflow), wrapping, clipping, scrolling, and no wrapping (will overflow).&lt;/p&gt; &#xA;&lt;p&gt;The horizontal and vertical alignment can also be customized via the &lt;code&gt;mainAxisAlignment&lt;/code&gt; and &lt;code&gt;crossAxisAlignment&lt;/code&gt; properties. The main axis alignment respects current directionality.&lt;/p&gt; &#xA;&lt;p&gt;A &lt;code&gt;CommandBarCard&lt;/code&gt; can be used to create a raised card around a &lt;code&gt;CommandBar&lt;/code&gt;. While this is not officially part of the Fluent design language, the concept is commonly used in the Office desktop apps for the app-level command bar.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example of a right-aligned command bar that has additional items in the secondary area:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;CommandBar(&#xA;  mainAxisAlignment: MainAxisAlignment.end,&#xA;  overflowBehavior: CommandBarOverflowBehavior.dynamicOverflow,&#xA;  compactBreakpointWidth: 768,&#xA;  primaryItems: [&#xA;    CommandBarButton(&#xA;      icon: const Icon(FluentIcons.add),&#xA;      label: const Text(&#39;Add&#39;),&#xA;      onPressed: () {},&#xA;    ),&#xA;    CommandBarButton(&#xA;      icon: const Icon(FluentIcons.edit),&#xA;      label: const Text(&#39;Edit&#39;),&#xA;      onPressed: () {},&#xA;    ),&#xA;    CommandBarButton(&#xA;      icon: const Icon(FluentIcons.delete),&#xA;      label: const Text(&#39;Edit&#39;),&#xA;      onPressed: () {},&#xA;    ),&#xA;  ],&#xA;  secondaryItems: [&#xA;    CommandBarButton(&#xA;      icon: const Icon(FluentIcons.archive),&#xA;      label: const Text(&#39;Archive&#39;),&#xA;      onPressed: () {},&#xA;    ),&#xA;    CommandBarButton(&#xA;      icon: const Icon(FluentIcons.move),&#xA;      label: const Text(&#39;Move&#39;),&#xA;      onPressed: () {},&#xA;    ),&#xA;  ],&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To put a tooltip on any other kind of &lt;code&gt;CommandBarItem&lt;/code&gt; (or otherwise wrap it in another widget), use &lt;code&gt;CommandBarBuilderItem&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;CommandBarBuilderItem(&#xA;  builder: (context, mode, w) =&amp;gt; Tooltip(&#xA;    message: &#34;Create something new!&#34;,&#xA;    child: w,&#xA;  ),&#xA;  wrappedItem: CommandBarButton(&#xA;    icon: const Icon(FluentIcons.add),&#xA;    label: const Text(&#39;Add&#39;),&#xA;    onPressed: () {},&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More complex examples, including command bars with items that align to each side of a carded bar, are in the example app.&lt;/p&gt; &#xA;&lt;h1&gt;Mobile Widgets&lt;/h1&gt; &#xA;&lt;p&gt;Widgets with focus on mobile. Based on the official documentation and source code for &lt;a href=&#34;https://developer.microsoft.com/pt-br/fluentui#/controls/ios&#34;&gt;iOS&lt;/a&gt; and &lt;a href=&#34;https://developer.microsoft.com/pt-br/fluentui#/controls/android&#34;&gt;Android&lt;/a&gt;. Most of the widgets above can adapt to small screens, and will fit on all your devices.&lt;/p&gt; &#xA;&lt;h2&gt;Bottom Sheet&lt;/h2&gt; &#xA;&lt;p&gt;Bottom Sheet is used to display a modal list of menu items. They slide up over the main app content as a result of a user triggered action. &lt;a href=&#34;https://developer.microsoft.com/pt-br/fluentui#/controls/android/bottomsheet&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to display a bottom sheet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;showBottomSheet(&#xA;  context: context,&#xA;  builder: (context) {&#xA;    return BottomSheet(&#xA;      // header: ...,&#xA;      description: Text(&#39;Description or Details here&#39;),&#xA;      children: [&#xA;        ...,&#xA;        // Usually a `ListTile` or `TappableListTile`&#xA;      ],&#xA;    );&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To close it, just call &lt;code&gt;Navigator.of(context).pop()&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static2.sharepointonline.com/files/fabric/fabric-website/images/controls/android/updated/img_bottomsheet_01_light.png?text=LightMode&#34; alt=&#34;Bottom Sheet Showcase&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Chip&lt;/h2&gt; &#xA;&lt;p&gt;Chips are compact representations of entities (most commonly, people) that can be clicked, deleted, or dragged easily.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a chip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Chip(&#xA;  image: CircleAvatar(size: 12.0),&#xA;  text: Text(&#39;Chip&#39;),&#xA;),&#xA;Chip.selected(&#xA;  image: FlutterLogo(size: 14.0),&#xA;  text: Text(&#39;Chip&#39;),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/45696119/119724339-f9a00700-be44-11eb-940b-1966eefe3798.png&#34; alt=&#34;Light Chips&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/45696119/119724337-f9077080-be44-11eb-9b73-e1dc4ffbeefd.png&#34; alt=&#34;Dark Chips&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Pill Button Bar&lt;/h2&gt; &#xA;&lt;p&gt;A Pill Button Bar is a horizontal scrollable list of pill-shaped text buttons in which only one button can be selected at a given time.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a pill button bar:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;int index = 0;&#xA;&#xA;PillButtonBar(&#xA;  selected: index,&#xA;  onChanged: (i) =&amp;gt; setState(() =&amp;gt; index = i),&#xA;  items: [&#xA;    PillButtonBarItem(text: Text(&#39;All&#39;)),&#xA;    PillButtonBarItem(text: Text(&#39;Mail&#39;)),&#xA;    PillButtonBarItem(text: Text(&#39;Peopl&#39;)),&#xA;    PillButtonBarItem(text: Text(&#39;Events&#39;)),&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static2.sharepointonline.com/files/fabric/fabric-website/images/controls/ios/updated/img_pillbar_01_light.png?text=LightMode&#34; alt=&#34;Light PillButtonBar&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static2.sharepointonline.com/files/fabric/fabric-website/images/controls/ios/updated/img_pillbar_01_dark.png?text=DarkMode&#34; alt=&#34;Dark PillButtonBar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Snackbar&lt;/h2&gt; &#xA;&lt;p&gt;Snackbars provide a brief message about an operation at the bottom of the screen. They can contain a custom action or view or use a style geared towards making special announcements to your users.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to display a snackbar at the bottom of the screen:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;showSnackbar(&#xA;  context,&#xA;  Snackbar(&#xA;    content: Text(&#39;A new update is available!&#39;),&#xA;  ),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static2.sharepointonline.com/files/fabric/fabric-website/images/controls/android/updated/img_snackbar_01_standard_dark.png?text=DarkMode&#34; alt=&#34;Snackbar Example&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Layout Widgets&lt;/h1&gt; &#xA;&lt;p&gt;Widgets that help to layout other widgets.&lt;/p&gt; &#xA;&lt;h2&gt;DynamicOverflow&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;DynamicOverflow&lt;/code&gt; widget is similar to the &lt;code&gt;Wrap&lt;/code&gt; widget, but only lays out children widgets in a single run, and if there is not room to display them all, it will hide widgets that don&#39;t fit, and display the &#34;overflow widget&#34; at the end. Optionally, the &#34;overflow widget&#34; can be displayed all the time. Displaying the overflow widget will take precedence over any children widgets.&lt;/p&gt; &#xA;&lt;p&gt;This is used to implement the dynamic overflow mode for &lt;code&gt;CommandBar&lt;/code&gt;, but could be useful on its own. It supports both horizontal and vertical layout modes, and various main axis and cross axis alignments.&lt;/p&gt; &#xA;&lt;h1&gt;Equivalents with the material library&lt;/h1&gt; &#xA;&lt;p&gt;The list of equivalents between this library and &lt;code&gt;flutter/material.dart&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Material&lt;/th&gt; &#xA;   &lt;th&gt;Fluent&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TextButton&lt;/td&gt; &#xA;   &lt;td&gt;Button&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IconButton&lt;/td&gt; &#xA;   &lt;td&gt;IconButton&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Checkbox&lt;/td&gt; &#xA;   &lt;td&gt;Checkbox&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RadioButton&lt;/td&gt; &#xA;   &lt;td&gt;RadioButton&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;RatingBar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;SplitButton&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;ToggleButton&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Switch&lt;/td&gt; &#xA;   &lt;td&gt;ToggleSwitch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TextField&lt;/td&gt; &#xA;   &lt;td&gt;TextBox&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TextFormField&lt;/td&gt; &#xA;   &lt;td&gt;TextFormBox&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DropdownButton&lt;/td&gt; &#xA;   &lt;td&gt;Combobox&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PopupMenuButton&lt;/td&gt; &#xA;   &lt;td&gt;DropDownButton&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;AutoSuggestBox&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AlertDialog&lt;/td&gt; &#xA;   &lt;td&gt;ContentDialog&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MaterialBanner&lt;/td&gt; &#xA;   &lt;td&gt;InfoBar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tooltip&lt;/td&gt; &#xA;   &lt;td&gt;Tooltip&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Flyout&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Drawer&lt;/td&gt; &#xA;   &lt;td&gt;NavigationPane&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BottomNavigation&lt;/td&gt; &#xA;   &lt;td&gt;BottomNavigation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Divider&lt;/td&gt; &#xA;   &lt;td&gt;Divider&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VerticalDivider&lt;/td&gt; &#xA;   &lt;td&gt;Divider&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Material&lt;/td&gt; &#xA;   &lt;td&gt;Acrylic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ListTile&lt;/td&gt; &#xA;   &lt;td&gt;ListTile&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CheckboxListTile&lt;/td&gt; &#xA;   &lt;td&gt;CheckboxListTile&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SwitchListTile&lt;/td&gt; &#xA;   &lt;td&gt;SwitchListTile&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LinearProgressIndicator&lt;/td&gt; &#xA;   &lt;td&gt;ProgressBar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CircularProgressIndicator&lt;/td&gt; &#xA;   &lt;td&gt;ProgressRing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;_DatePickerDialog&lt;/td&gt; &#xA;   &lt;td&gt;DatePicker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;_TimePickerDialog&lt;/td&gt; &#xA;   &lt;td&gt;TimePicker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Scaffold&lt;/td&gt; &#xA;   &lt;td&gt;ScaffoldPage&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AppBar&lt;/td&gt; &#xA;   &lt;td&gt;NavigationAppBar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Drawer&lt;/td&gt; &#xA;   &lt;td&gt;NavigationView&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chip&lt;/td&gt; &#xA;   &lt;td&gt;Chip&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Snackbar&lt;/td&gt; &#xA;   &lt;td&gt;Snackbar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;PillButtonBar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExpansionPanel&lt;/td&gt; &#xA;   &lt;td&gt;Expander&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;p&gt;FluentUI widgets currently supports out-of-the-box an wide number of languages, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Arabic&lt;/li&gt; &#xA; &lt;li&gt;English&lt;/li&gt; &#xA; &lt;li&gt;Dutch&lt;/li&gt; &#xA; &lt;li&gt;French&lt;/li&gt; &#xA; &lt;li&gt;German&lt;/li&gt; &#xA; &lt;li&gt;Hindi&lt;/li&gt; &#xA; &lt;li&gt;Italian&lt;/li&gt; &#xA; &lt;li&gt;Portuguese&lt;/li&gt; &#xA; &lt;li&gt;Russian&lt;/li&gt; &#xA; &lt;li&gt;Simplified Chinese&lt;/li&gt; &#xA; &lt;li&gt;Spanish&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/issues/new&#34;&gt;file an issue&lt;/a&gt; if you find a problem or &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/pulls&#34;&gt;make pull requests&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All contributions are welcome :)&lt;/p&gt; &#xA;&lt;h3&gt;Contributing new localizations&lt;/h3&gt; &#xA;&lt;p&gt;In &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/pull/216&#34;&gt;PR#216&lt;/a&gt; we added support for new localizations in FluentUI Widgets.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute adding new localizations please follow this steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/fork&#34;&gt;Fork the repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;lib/l10n/intl_en.arb&lt;/code&gt; file into &lt;code&gt;lib/l10n&lt;/code&gt; folder with a new language code, following &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes&#34;&gt;this list of ISO 859-1 codes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Update the contents in the newly created file. Specially, please update the &lt;code&gt;@locale&lt;/code&gt; value with the corresponding ISO code.&lt;/li&gt; &#xA; &lt;li&gt;Then update the &lt;code&gt;localization.dart:defaultSupportedLocales&lt;/code&gt; list, adding an entry for each new locale&lt;/li&gt; &#xA; &lt;li&gt;If your IDE doesn&#39;t have any of the &lt;code&gt;intl&lt;/code&gt; plugins (&lt;a href=&#34;https://plugins.jetbrains.com/plugin/13666-flutter-intl&#34;&gt;Intl plugin for Android Studio/IntelliJ&lt;/a&gt; / &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=localizely.flutter-intl&#34;&gt;Flutter Intl for VSCode&lt;/a&gt; ) please run your project and code generation will take place.&lt;/li&gt; &#xA; &lt;li&gt;When you&#39;re done, &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/pulls&#34;&gt;make a new pull request&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More about &lt;a href=&#34;https://docs.flutter.dev/development/accessibility-and-localization/internationalization&#34;&gt;Localization in the Flutter Official Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Acknowledgements&lt;/h3&gt; &#xA;&lt;p&gt;Irrespective of order, thanks to all the people below for contributing with the project. It means a lot to me :)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HrX03&#34;&gt;@HrX03&lt;/a&gt; for the &lt;code&gt;Acrylic&lt;/code&gt;, &lt;code&gt;FluentIcons&lt;/code&gt; generator and &lt;code&gt;_FluentTextSelectionControls&lt;/code&gt; implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raitonoberu&#34;&gt;@raitonubero&lt;/a&gt; &lt;code&gt;ProgressBar&lt;/code&gt; and &lt;code&gt;ProgressRing&lt;/code&gt; implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alexmercerind&#34;&gt;@alexmercerind&lt;/a&gt; for the &lt;a href=&#34;https://github.com/alexmercerind/flutter_acrylic&#34;&gt;flutter_acrylic&lt;/a&gt; plugin, used on the example app&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leanflutter&#34;&gt;@leanflutter&lt;/a&gt; for the &lt;a href=&#34;https://github.com/leanflutter/window_manager&#34;&gt;window_manager&lt;/a&gt; plugin, used on the example app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/henry2man&#34;&gt;@henry2man&lt;/a&gt; for the &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/pull/216&#34;&gt;localization support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/klondikedragon&#34;&gt;@klondikedragon&lt;/a&gt; for &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/pull/232&#34;&gt;&lt;code&gt;CommandBar&lt;/code&gt; implementation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>superlistapp/super_editor</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/superlistapp/super_editor</id>
    <link href="https://github.com/superlistapp/super_editor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Rich Text Editor for Flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;super_editor&lt;/h1&gt; &#xA;&lt;p&gt;The missing Rich Text Editor for Flutter. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/superlistapp/super_editor/main/super_editor/README.md&#34;&gt;SuperEditor README&lt;/a&gt; about how to use the packages, or run the &lt;a href=&#34;https://raw.githubusercontent.com/superlistapp/super_editor/main/super_editor/example/README.md&#34;&gt;sample editor&lt;/a&gt;. There&#39;s also a version for Web accessible at &lt;a href=&#34;https://superlist.com/SuperEditor/&#34;&gt;https://superlist.com/SuperEditor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to &lt;a href=&#34;https://join.slack.com/t/superlist-community/shared_invite/zt-10cpx277q-uZ~pmjlTWg9QQzH64OK9_w&#34;&gt;join us on Slack&lt;/a&gt; and say hello 👋.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jonataslaw/getx</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/jonataslaw/getx</id>
    <link href="https://github.com/jonataslaw/getx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open screens/snackbars/dialogs/bottomSheets without context, manage states and inject dependencies easily with Get.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonataslaw/getx-community/master/get.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/get&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/get.svg?label=get&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/sentry/score&#34;&gt;&lt;img src=&#34;https://badges.bar/get/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/get/score&#34;&gt;&lt;img src=&#34;https://badges.bar/get/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/get/score&#34;&gt;&lt;img src=&#34;https://badges.bar/get/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/jonataslaw/get/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;building&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/effective_dart&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-effective_dart-40c4ff.svg?sanitize=true&#34; alt=&#34;style: effective dart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/9Hpt99N&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/722900883784073290.svg?logo=discord&#34; alt=&#34;Discord Shield&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://communityinviter.com/apps/getxworkspace/getx&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-orange.svg?sanitize=true&#34; alt=&#34;Get on Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/joinchat/PhdbJRmsZNpAqSLJL6bH7g&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Telegram-blue.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Solido/awesome-flutter&#34;&gt; &lt;img alt=&#34;Awesome Flutter&#34; src=&#34;https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.buymeacoffee.com/jonataslaw&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://i.imgur.com/aV6DDA7.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important; box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonataslaw/getx-community/master/getx.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;strong&gt;Languages:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-English-blueviolet?style=for-the-badge&#34; alt=&#34;English&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README-vi.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Vietnamese-blueviolet?style=for-the-badge&#34; alt=&#34;Vietnamese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.id-ID.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Indonesian-blueviolet?style=for-the-badge&#34; alt=&#34;Indonesian&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ur-PK.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Urdu-blueviolet?style=for-the-badge&#34; alt=&#34;Urdu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.zh-cn.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Chinese-blueviolet?style=for-the-badge&#34; alt=&#34;Chinese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.pt-br.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Portuguese-blueviolet?style=for-the-badge&#34; alt=&#34;Portuguese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README-es.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Spanish-blueviolet?style=for-the-badge&#34; alt=&#34;Spanish&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ru.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Russian-blueviolet?style=for-the-badge&#34; alt=&#34;Russian&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.pl.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Polish-blueviolet?style=for-the-badge&#34; alt=&#34;Polish&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ko-kr.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Korean-blueviolet?style=for-the-badge&#34; alt=&#34;Korean&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README-fr.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-French-blueviolet?style=for-the-badge&#34; alt=&#34;French&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ja-JP.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Japanese-blueviolet?style=for-the-badge&#34; alt=&#34;Japanese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.tr-TR.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Turkish-blueviolet?style=for-the-badge&#34; alt=&#34;Turkish&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#about-get&#34;&gt;About Get&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#installing&#34;&gt;Installing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#counter-app-with-getx&#34;&gt;Counter App with GetX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#the-three-pillars&#34;&gt;The Three pillars&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#state-management&#34;&gt;State management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#reactive-state-manager&#34;&gt;Reactive State Manager&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#more-details-about-state-management&#34;&gt;More details about state management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#route-management&#34;&gt;Route management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#more-details-about-route-management&#34;&gt;More details about route management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#dependency-management&#34;&gt;Dependency management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#more-details-about-dependency-management&#34;&gt;More details about dependency management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#utils&#34;&gt;Utils&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#internationalization&#34;&gt;Internationalization&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#translations&#34;&gt;Translations&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#using-translations&#34;&gt;Using translations&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#locales&#34;&gt;Locales&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#change-locale&#34;&gt;Change locale&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#system-locale&#34;&gt;System locale&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#change-theme&#34;&gt;Change Theme&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getconnect&#34;&gt;GetConnect&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#default-configuration&#34;&gt;Default configuration&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#custom-configuration&#34;&gt;Custom configuration&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getpage-middleware&#34;&gt;GetPage Middleware&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#priority&#34;&gt;Priority&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#redirect&#34;&gt;Redirect&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagecalled&#34;&gt;onPageCalled&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onbindingsstart&#34;&gt;OnBindingsStart&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagebuildstart&#34;&gt;OnPageBuildStart&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagebuilt&#34;&gt;OnPageBuilt&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagedispose&#34;&gt;OnPageDispose&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#other-advanced-apis&#34;&gt;Other Advanced APIs&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#optional-global-settings-and-manual-configurations&#34;&gt;Optional Global Settings and Manual configurations&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#local-state-widgets&#34;&gt;Local State Widgets&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#valuebuilder&#34;&gt;ValueBuilder&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#obxvalue&#34;&gt;ObxValue&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#useful-tips&#34;&gt;Useful tips&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getview&#34;&gt;GetView&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getresponsiveview&#34;&gt;GetResponsiveView&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#how-to-use-it&#34;&gt;How to use it&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getwidget&#34;&gt;GetWidget&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getxservice&#34;&gt;GetxService&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#breaking-changes-from-20&#34;&gt;Breaking changes from 2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#why-getx&#34;&gt;Why Getx?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#community&#34;&gt;Community&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#community-channels&#34;&gt;Community channels&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#how-to-contribute&#34;&gt;How to contribute&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#articles-and-videos&#34;&gt;Articles and videos&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;About Get&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX is an extra-light and powerful solution for Flutter. It combines high-performance state management, intelligent dependency injection, and route management quickly and practically.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX has 3 basic principles. This means that these are the priority for all resources in the library: &lt;strong&gt;PRODUCTIVITY, PERFORMANCE AND ORGANIZATION.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;PERFORMANCE:&lt;/strong&gt; GetX is focused on performance and minimum consumption of resources. GetX does not use Streams or ChangeNotifier.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;PRODUCTIVITY:&lt;/strong&gt; GetX uses an easy and pleasant syntax. No matter what you want to do, there is always an easier way with GetX. It will save hours of development and will provide the maximum performance your application can deliver.&lt;/p&gt; &lt;p&gt;Generally, the developer should be concerned with removing controllers from memory. With GetX this is not necessary because resources are removed from memory when they are not used by default. If you want to keep it in memory, you must explicitly declare &#34;permanent: true&#34; in your dependency. That way, in addition to saving time, you are less at risk of having unnecessary dependencies on memory. Dependency loading is also lazy by default.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;ORGANIZATION:&lt;/strong&gt; GetX allows the total decoupling of the View, presentation logic, business logic, dependency injection, and navigation. You do not need context to navigate between routes, so you are not dependent on the widget tree (visualization) for this. You don&#39;t need context to access your controllers/blocs through an inheritedWidget, so you completely decouple your presentation logic and business logic from your visualization layer. You do not need to inject your Controllers/Models/Blocs classes into your widget tree through &lt;code&gt;MultiProvider&lt;/code&gt;s. For this, GetX uses its own dependency injection feature, decoupling the DI from its view completely.&lt;/p&gt; &lt;p&gt;With GetX you know where to find each feature of your application, having clean code by default. In addition to making maintenance easy, this makes the sharing of modules something that until then in Flutter was unthinkable, something totally possible. BLoC was a starting point for organizing code in Flutter, it separates business logic from visualization. GetX is a natural evolution of this, not only separating the business logic but the presentation logic. Bonus injection of dependencies and routes are also decoupled, and the data layer is out of it all. You know where everything is, and all of this in an easier way than building a hello world. GetX is the easiest, practical, and scalable way to build high-performance applications with the Flutter SDK. It has a large ecosystem around it that works perfectly together, it&#39;s easy for beginners, and it&#39;s accurate for experts. It is secure, stable, up-to-date, and offers a huge range of APIs built-in that are not present in the default Flutter SDK.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX is not bloated. It has a multitude of features that allow you to start programming without worrying about anything, but each of these features are in separate containers and are only started after use. If you only use State Management, only State Management will be compiled. If you only use routes, nothing from the state management will be compiled.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX has a huge ecosystem, a large community, a large number of collaborators, and will be maintained as long as the Flutter exists. GetX too is capable of running with the same code on Android, iOS, Web, Mac, Linux, Windows, and on your server. &lt;strong&gt;It is possible to fully reuse your code made on the frontend on your backend with &lt;a href=&#34;https://github.com/jonataslaw/get_server&#34;&gt;Get Server&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;In addition, the entire development process can be completely automated, both on the server and on the front end with &lt;a href=&#34;https://github.com/jonataslaw/get_cli&#34;&gt;Get CLI&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;In addition, to further increase your productivity, we have the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=get-snippets.get-snippets&#34;&gt;extension to VSCode&lt;/a&gt; and the &lt;a href=&#34;https://plugins.jetbrains.com/plugin/14975-getx-snippets&#34;&gt;extension to Android Studio/Intellij&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installing&lt;/h1&gt; &#xA;&lt;p&gt;Add Get to your pubspec.yaml file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  get:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Import get in files that it will be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:get/get.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Counter App with GetX&lt;/h1&gt; &#xA;&lt;p&gt;The &#34;counter&#34; project created by default on new project on Flutter has over 100 lines (with comments). To show the power of Get, I will demonstrate how to make a &#34;counter&#34; changing the state with each click, switching between pages and sharing the state between screens, all in an organized way, separating the business logic from the view, in ONLY 26 LINES CODE INCLUDING COMMENTS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1: Add &#34;Get&#34; before your MaterialApp, turning it into GetMaterialApp&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void main() =&amp;gt; runApp(GetMaterialApp(home: Home()));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Note: this does not modify the MaterialApp of the Flutter, GetMaterialApp is not a modified MaterialApp, it is just a pre-configured Widget, which has the default MaterialApp as a child. You can configure this manually, but it is definitely not necessary. GetMaterialApp will create routes, inject them, inject translations, inject everything you need for route navigation. If you use Get only for state management or dependency management, it is not necessary to use GetMaterialApp. GetMaterialApp is necessary for routes, snackbars, internationalization, bottomSheets, dialogs, and high-level apis related to routes and absence of context.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Note²: This step is only necessary if you gonna use route management (&lt;code&gt;Get.to()&lt;/code&gt;, &lt;code&gt;Get.back()&lt;/code&gt; and so on). If you not gonna use it then it is not necessary to do step 1&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Step 2: Create your business logic class and place all variables, methods and controllers inside it. You can make any variable observable using a simple &#34;.obs&#34;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Controller extends GetxController{&#xA;  var count = 0.obs;&#xA;  increment() =&amp;gt; count++;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 3: Create your View, use StatelessWidget and save some RAM, with Get you may no longer need to use StatefulWidget.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Home extends StatelessWidget {&#xA;&#xA;  @override&#xA;  Widget build(context) {&#xA;&#xA;    // Instantiate your class using Get.put() to make it available for all &#34;child&#34; routes there.&#xA;    final Controller c = Get.put(Controller());&#xA;&#xA;    return Scaffold(&#xA;      // Use Obx(()=&amp;gt; to update Text() whenever count is changed.&#xA;      appBar: AppBar(title: Obx(() =&amp;gt; Text(&#34;Clicks: ${c.count}&#34;))),&#xA;&#xA;      // Replace the 8 lines Navigator.push by a simple Get.to(). You don&#39;t need context&#xA;      body: Center(child: ElevatedButton(&#xA;              child: Text(&#34;Go to Other&#34;), onPressed: () =&amp;gt; Get.to(Other()))),&#xA;      floatingActionButton:&#xA;          FloatingActionButton(child: Icon(Icons.add), onPressed: c.increment));&#xA;  }&#xA;}&#xA;&#xA;class Other extends StatelessWidget {&#xA;  // You can ask Get to find a Controller that is being used by another page and redirect you to it.&#xA;  final Controller c = Get.find();&#xA;&#xA;  @override&#xA;  Widget build(context){&#xA;     // Access the updated count variable&#xA;     return Scaffold(body: Center(child: Text(&#34;${c.count}&#34;)));&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Result:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonataslaw/getx-community/master/counter-app-gif.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a simple project but it already makes clear how powerful Get is. As your project grows, this difference will become more significant.&lt;/p&gt; &#xA;&lt;p&gt;Get was designed to work with teams, but it makes the job of an individual developer simple.&lt;/p&gt; &#xA;&lt;p&gt;Improve your deadlines, deliver everything on time without losing performance. Get is not for everyone, but if you identified with that phrase, Get is for you!&lt;/p&gt; &#xA;&lt;h1&gt;The Three pillars&lt;/h1&gt; &#xA;&lt;h2&gt;State management&lt;/h2&gt; &#xA;&lt;p&gt;Get has two different state managers: the simple state manager (we&#39;ll call it GetBuilder) and the reactive state manager (GetX/Obx)&lt;/p&gt; &#xA;&lt;h3&gt;Reactive State Manager&lt;/h3&gt; &#xA;&lt;p&gt;Reactive programming can alienate many people because it is said to be complicated. GetX turns reactive programming into something quite simple:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You won&#39;t need to create StreamControllers.&lt;/li&gt; &#xA; &lt;li&gt;You won&#39;t need to create a StreamBuilder for each variable&lt;/li&gt; &#xA; &lt;li&gt;You will not need to create a class for each state.&lt;/li&gt; &#xA; &lt;li&gt;You will not need to create a get for an initial value.&lt;/li&gt; &#xA; &lt;li&gt;You will not need to use code generators&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Reactive programming with Get is as easy as using setState.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s imagine that you have a name variable and want that every time you change it, all widgets that use it are automatically changed.&lt;/p&gt; &#xA;&lt;p&gt;This is your count variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var name = &#39;Jonatas Borges&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make it observable, you just need to add &#34;.obs&#34; to the end of it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var name = &#39;Jonatas Borges&#39;.obs;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in the UI, when you want to show that value and update the screen whenever the values changes, simply do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Obx(() =&amp;gt; Text(&#34;${controller.name}&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s all. It&#39;s &lt;em&gt;that&lt;/em&gt; simple.&lt;/p&gt; &#xA;&lt;h3&gt;More details about state management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;See an more in-depth explanation of state management &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/state_management.md&#34;&gt;here&lt;/a&gt;. There you will see more examples and also the difference between the simple state manager and the reactive state manager&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will get a good idea of GetX power.&lt;/p&gt; &#xA;&lt;h2&gt;Route management&lt;/h2&gt; &#xA;&lt;p&gt;If you are going to use routes/snackbars/dialogs/bottomsheets without context, GetX is excellent for you too, just see it:&lt;/p&gt; &#xA;&lt;p&gt;Add &#34;Get&#34; before your MaterialApp, turning it into GetMaterialApp&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp( // Before: MaterialApp(&#xA;  home: MyHome(),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to a new screen:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;Get.to(NextScreen());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to new screen with name. See more details on named routes &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/route_management.md#navigation-with-named-routes&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;Get.toNamed(&#39;/details&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To close snackbars, dialogs, bottomsheets, or anything you would normally close with Navigator.pop(context);&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.back();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To go to the next screen and no option to go back to the previous screen (for use in SplashScreens, login screens, etc.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.off(NextScreen());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To go to the next screen and cancel all previous routes (useful in shopping carts, polls, and tests)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.offAll(NextScreen());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Noticed that you didn&#39;t have to use context to do any of these things? That&#39;s one of the biggest advantages of using Get route management. With this, you can execute all these methods from within your controller class, without worries.&lt;/p&gt; &#xA;&lt;h3&gt;More details about route management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Get works with named routes and also offers lower-level control over your routes! There is in-depth documentation &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/route_management.md&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependency management&lt;/h2&gt; &#xA;&lt;p&gt;Get has a simple and powerful dependency manager that allows you to retrieve the same class as your Bloc or Controller with just 1 lines of code, no Provider context, no inheritedWidget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Controller controller = Get.put(Controller()); // Rather Controller controller = Controller();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Note: If you are using Get&#39;s State Manager, pay more attention to the bindings API, which will make it easier to connect your view to your controller.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instead of instantiating your class within the class you are using, you are instantiating it within the Get instance, which will make it available throughout your App. So you can use your controller (or class Bloc) normally&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Get dependency management is decoupled from other parts of the package, so if for example, your app is already using a state manager (any one, it doesn&#39;t matter), you don&#39;t need to rewrite it all, you can use this dependency injection with no problems at all&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;controller.fetchApi();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Imagine that you have navigated through numerous routes, and you need data that was left behind in your controller, you would need a state manager combined with the Provider or Get_it, correct? Not with Get. You just need to ask Get to &#34;find&#34; for your controller, you don&#39;t need any additional dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Controller controller = Get.find();&#xA;//Yes, it looks like Magic, Get will find your controller, and will deliver it to you. You can have 1 million controllers instantiated, Get will always give you the right controller.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then you will be able to recover your controller data that was obtained back there:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Text(controller.textFromApi);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;More details about dependency management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;See a more in-depth explanation of dependency management &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/dependency_management.md&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Utils&lt;/h1&gt; &#xA;&lt;h2&gt;Internationalization&lt;/h2&gt; &#xA;&lt;h3&gt;Translations&lt;/h3&gt; &#xA;&lt;p&gt;Translations are kept as a simple key-value dictionary map. To add custom translations, create a class and extend &lt;code&gt;Translations&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:get/get.dart&#39;;&#xA;&#xA;class Messages extends Translations {&#xA;  @override&#xA;  Map&amp;lt;String, Map&amp;lt;String, String&amp;gt;&amp;gt; get keys =&amp;gt; {&#xA;        &#39;en_US&#39;: {&#xA;          &#39;hello&#39;: &#39;Hello World&#39;,&#xA;        },&#xA;        &#39;de_DE&#39;: {&#xA;          &#39;hello&#39;: &#39;Hallo Welt&#39;,&#xA;        }&#xA;      };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using translations&lt;/h4&gt; &#xA;&lt;p&gt;Just append &lt;code&gt;.tr&lt;/code&gt; to the specified key and it will be translated, using the current value of &lt;code&gt;Get.locale&lt;/code&gt; and &lt;code&gt;Get.fallbackLocale&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Text(&#39;title&#39;.tr);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using translation with singular and plural&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var products = [];&#xA;Text(&#39;singularKey&#39;.trPlural(&#39;pluralKey&#39;, products.length, Args));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using translation with parameters&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:get/get.dart&#39;;&#xA;&#xA;&#xA;Map&amp;lt;String, Map&amp;lt;String, String&amp;gt;&amp;gt; get keys =&amp;gt; {&#xA;    &#39;en_US&#39;: {&#xA;        &#39;logged_in&#39;: &#39;logged in as @name with email @email&#39;,&#xA;    },&#xA;    &#39;es_ES&#39;: {&#xA;       &#39;logged_in&#39;: &#39;iniciado sesión como @name con e-mail @email&#39;,&#xA;    }&#xA;};&#xA;&#xA;Text(&#39;logged_in&#39;.trParams({&#xA;  &#39;name&#39;: &#39;Jhon&#39;,&#xA;  &#39;email&#39;: &#39;jhon@example.com&#39;&#xA;  }));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Locales&lt;/h3&gt; &#xA;&lt;p&gt;Pass parameters to &lt;code&gt;GetMaterialApp&lt;/code&gt; to define the locale and translations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;return GetMaterialApp(&#xA;    translations: Messages(), // your translations&#xA;    locale: Locale(&#39;en&#39;, &#39;US&#39;), // translations will be displayed in that locale&#xA;    fallbackLocale: Locale(&#39;en&#39;, &#39;UK&#39;), // specify the fallback locale in case an invalid locale is selected.&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Change locale&lt;/h4&gt; &#xA;&lt;p&gt;Call &lt;code&gt;Get.updateLocale(locale)&lt;/code&gt; to update the locale. Translations then automatically use the new locale.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var locale = Locale(&#39;en&#39;, &#39;US&#39;);&#xA;Get.updateLocale(locale);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;System locale&lt;/h4&gt; &#xA;&lt;p&gt;To read the system locale, you could use &lt;code&gt;Get.deviceLocale&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;return GetMaterialApp(&#xA;    locale: Get.deviceLocale,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Change Theme&lt;/h2&gt; &#xA;&lt;p&gt;Please do not use any higher level widget than &lt;code&gt;GetMaterialApp&lt;/code&gt; in order to update it. This can trigger duplicate keys. A lot of people are used to the prehistoric approach of creating a &#34;ThemeProvider&#34; widget just to change the theme of your app, and this is definitely NOT necessary with &lt;strong&gt;GetX™&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can create your custom theme and simply add it within &lt;code&gt;Get.changeTheme&lt;/code&gt; without any boilerplate for that:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.changeTheme(ThemeData.light());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to create something like a button that changes the Theme in &lt;code&gt;onTap&lt;/code&gt;, you can combine two &lt;strong&gt;GetX™&lt;/strong&gt; APIs for that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The api that checks if the dark &lt;code&gt;Theme&lt;/code&gt; is being used.&lt;/li&gt; &#xA; &lt;li&gt;And the &lt;code&gt;Theme&lt;/code&gt; Change API, you can just put this within an &lt;code&gt;onPressed&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.changeTheme(Get.isDarkMode? ThemeData.light(): ThemeData.dark());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When &lt;code&gt;.darkmode&lt;/code&gt; is activated, it will switch to the &lt;em&gt;light theme&lt;/em&gt;, and when the &lt;em&gt;light theme&lt;/em&gt; becomes active, it will change to &lt;em&gt;dark theme&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;GetConnect&lt;/h2&gt; &#xA;&lt;p&gt;GetConnect is an easy way to communicate from your back to your front with http or websockets&lt;/p&gt; &#xA;&lt;h3&gt;Default configuration&lt;/h3&gt; &#xA;&lt;p&gt;You can simply extend GetConnect and use the GET/POST/PUT/DELETE/SOCKET methods to communicate with your Rest API or websockets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class UserProvider extends GetConnect {&#xA;  // Get request&#xA;  Future&amp;lt;Response&amp;gt; getUser(int id) =&amp;gt; get(&#39;http://youapi/users/$id&#39;);&#xA;  // Post request&#xA;  Future&amp;lt;Response&amp;gt; postUser(Map data) =&amp;gt; post(&#39;http://youapi/users&#39;, body: data);&#xA;  // Post request with File&#xA;  Future&amp;lt;Response&amp;lt;CasesModel&amp;gt;&amp;gt; postCases(List&amp;lt;int&amp;gt; image) {&#xA;    final form = FormData({&#xA;      &#39;file&#39;: MultipartFile(image, filename: &#39;avatar.png&#39;),&#xA;      &#39;otherFile&#39;: MultipartFile(image, filename: &#39;cover.png&#39;),&#xA;    });&#xA;    return post(&#39;http://youapi/users/upload&#39;, form);&#xA;  }&#xA;&#xA;  GetSocket userMessages() {&#xA;    return socket(&#39;https://yourapi/users/socket&#39;);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom configuration&lt;/h3&gt; &#xA;&lt;p&gt;GetConnect is highly customizable You can define base Url, as answer modifiers, as Requests modifiers, define an authenticator, and even the number of attempts in which it will try to authenticate itself, in addition to giving the possibility to define a standard decoder that will transform all your requests into your Models without any additional configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class HomeProvider extends GetConnect {&#xA;  @override&#xA;  void onInit() {&#xA;    // All request will pass to jsonEncode so CasesModel.fromJson()&#xA;    httpClient.defaultDecoder = CasesModel.fromJson;&#xA;    httpClient.baseUrl = &#39;https://api.covid19api.com&#39;;&#xA;    // baseUrl = &#39;https://api.covid19api.com&#39;; // It define baseUrl to&#xA;    // Http and websockets if used with no [httpClient] instance&#xA;&#xA;    // It&#39;s will attach &#39;apikey&#39; property on header from all requests&#xA;    httpClient.addRequestModifier((request) {&#xA;      request.headers[&#39;apikey&#39;] = &#39;12345678&#39;;&#xA;      return request;&#xA;    });&#xA;&#xA;    // Even if the server sends data from the country &#34;Brazil&#34;,&#xA;    // it will never be displayed to users, because you remove&#xA;    // that data from the response, even before the response is delivered&#xA;    httpClient.addResponseModifier&amp;lt;CasesModel&amp;gt;((request, response) {&#xA;      CasesModel model = response.body;&#xA;      if (model.countries.contains(&#39;Brazil&#39;)) {&#xA;        model.countries.remove(&#39;Brazilll&#39;);&#xA;      }&#xA;    });&#xA;&#xA;    httpClient.addAuthenticator((request) async {&#xA;      final response = await get(&#34;http://yourapi/token&#34;);&#xA;      final token = response.body[&#39;token&#39;];&#xA;      // Set the header&#xA;      request.headers[&#39;Authorization&#39;] = &#34;$token&#34;;&#xA;      return request;&#xA;    });&#xA;&#xA;    //Autenticator will be called 3 times if HttpStatus is&#xA;    //HttpStatus.unauthorized&#xA;    httpClient.maxAuthRetries = 3;&#xA;  }&#xA;  }&#xA;&#xA;  @override&#xA;  Future&amp;lt;Response&amp;lt;CasesModel&amp;gt;&amp;gt; getCases(String path) =&amp;gt; get(path);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GetPage Middleware&lt;/h2&gt; &#xA;&lt;p&gt;The GetPage has now new property that takes a list of GetMiddleWare and run them in the specific order.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: When GetPage has a Middlewares, all the children of this page will have the same middlewares automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Priority&lt;/h3&gt; &#xA;&lt;p&gt;The Order of the Middlewares to run can be set by the priority in the GetMiddleware.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final middlewares = [&#xA;  GetMiddleware(priority: 2),&#xA;  GetMiddleware(priority: 5),&#xA;  GetMiddleware(priority: 4),&#xA;  GetMiddleware(priority: -8),&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;those middlewares will be run in this order &lt;strong&gt;-8 =&amp;gt; 2 =&amp;gt; 4 =&amp;gt; 5&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Redirect&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called when the page of the called route is being searched for. It takes RouteSettings as a result to redirect to. Or give it null and there will be no redirecting.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;RouteSettings redirect(String route) {&#xA;  final authService = Get.find&amp;lt;AuthService&amp;gt;();&#xA;  return authService.authed.value ? null : RouteSettings(name: &#39;/login&#39;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;onPageCalled&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called when this Page is called before anything created you can use it to change something about the page or give it new page&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetPage onPageCalled(GetPage page) {&#xA;  final authService = Get.find&amp;lt;AuthService&amp;gt;();&#xA;  return page.copyWith(title: &#39;Welcome ${authService.UserName}&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OnBindingsStart&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right before the Bindings are initialize. Here you can change Bindings for this page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;List&amp;lt;Bindings&amp;gt; onBindingsStart(List&amp;lt;Bindings&amp;gt; bindings) {&#xA;  final authService = Get.find&amp;lt;AuthService&amp;gt;();&#xA;  if (authService.isAdmin) {&#xA;    bindings.add(AdminBinding());&#xA;  }&#xA;  return bindings;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OnPageBuildStart&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right after the Bindings are initialize. Here you can do something after that you created the bindings and before creating the page widget.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetPageBuilder onPageBuildStart(GetPageBuilder page) {&#xA;  print(&#39;bindings are ready&#39;);&#xA;  return page;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OnPageBuilt&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right after the GetPage.page function is called and will give you the result of the function. and take the widget that will be showed.&lt;/p&gt; &#xA;&lt;h3&gt;OnPageDispose&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right after disposing all the related objects (Controllers, views, ...) of the page.&lt;/p&gt; &#xA;&lt;h2&gt;Other Advanced APIs&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// give the current args from currentScreen&#xA;Get.arguments&#xA;&#xA;// give name of previous route&#xA;Get.previousRoute&#xA;&#xA;// give the raw route to access for example, rawRoute.isFirst()&#xA;Get.rawRoute&#xA;&#xA;// give access to Routing API from GetObserver&#xA;Get.routing&#xA;&#xA;// check if snackbar is open&#xA;Get.isSnackbarOpen&#xA;&#xA;// check if dialog is open&#xA;Get.isDialogOpen&#xA;&#xA;// check if bottomsheet is open&#xA;Get.isBottomSheetOpen&#xA;&#xA;// remove one route.&#xA;Get.removeRoute()&#xA;&#xA;// back repeatedly until the predicate returns true.&#xA;Get.until()&#xA;&#xA;// go to next route and remove all the previous routes until the predicate returns true.&#xA;Get.offUntil()&#xA;&#xA;// go to next named route and remove all the previous routes until the predicate returns true.&#xA;Get.offNamedUntil()&#xA;&#xA;//Check in what platform the app is running&#xA;GetPlatform.isAndroid&#xA;GetPlatform.isIOS&#xA;GetPlatform.isMacOS&#xA;GetPlatform.isWindows&#xA;GetPlatform.isLinux&#xA;GetPlatform.isFuchsia&#xA;&#xA;//Check the device type&#xA;GetPlatform.isMobile&#xA;GetPlatform.isDesktop&#xA;//All platforms are supported independently in web!&#xA;//You can tell if you are running inside a browser&#xA;//on Windows, iOS, OSX, Android, etc.&#xA;GetPlatform.isWeb&#xA;&#xA;&#xA;// Equivalent to : MediaQuery.of(context).size.height,&#xA;// but immutable.&#xA;Get.height&#xA;Get.width&#xA;&#xA;// Gives the current context of the Navigator.&#xA;Get.context&#xA;&#xA;// Gives the context of the snackbar/dialog/bottomsheet in the foreground, anywhere in your code.&#xA;Get.contextOverlay&#xA;&#xA;// Note: the following methods are extensions on context. Since you&#xA;// have access to context in any place of your UI, you can use it anywhere in the UI code&#xA;&#xA;// If you need a changeable height/width (like Desktop or browser windows that can be scaled) you will need to use context.&#xA;context.width&#xA;context.height&#xA;&#xA;// Gives you the power to define half the screen, a third of it and so on.&#xA;// Useful for responsive applications.&#xA;// param dividedBy (double) optional - default: 1&#xA;// param reducedBy (double) optional - default: 0&#xA;context.heightTransformer()&#xA;context.widthTransformer()&#xA;&#xA;/// Similar to MediaQuery.of(context).size&#xA;context.mediaQuerySize()&#xA;&#xA;/// Similar to MediaQuery.of(context).padding&#xA;context.mediaQueryPadding()&#xA;&#xA;/// Similar to MediaQuery.of(context).viewPadding&#xA;context.mediaQueryViewPadding()&#xA;&#xA;/// Similar to MediaQuery.of(context).viewInsets;&#xA;context.mediaQueryViewInsets()&#xA;&#xA;/// Similar to MediaQuery.of(context).orientation;&#xA;context.orientation()&#xA;&#xA;/// Check if device is on landscape mode&#xA;context.isLandscape()&#xA;&#xA;/// Check if device is on portrait mode&#xA;context.isPortrait()&#xA;&#xA;/// Similar to MediaQuery.of(context).devicePixelRatio;&#xA;context.devicePixelRatio()&#xA;&#xA;/// Similar to MediaQuery.of(context).textScaleFactor;&#xA;context.textScaleFactor()&#xA;&#xA;/// Get the shortestSide from screen&#xA;context.mediaQueryShortestSide()&#xA;&#xA;/// True if width be larger than 800&#xA;context.showNavbar()&#xA;&#xA;/// True if the shortestSide is smaller than 600p&#xA;context.isPhone()&#xA;&#xA;/// True if the shortestSide is largest than 600p&#xA;context.isSmallTablet()&#xA;&#xA;/// True if the shortestSide is largest than 720p&#xA;context.isLargeTablet()&#xA;&#xA;/// True if the current device is Tablet&#xA;context.isTablet()&#xA;&#xA;/// Returns a value&amp;lt;T&amp;gt; according to the screen size&#xA;/// can give value for:&#xA;/// watch: if the shortestSide is smaller than 300&#xA;/// mobile: if the shortestSide is smaller than 600&#xA;/// tablet: if the shortestSide is smaller than 1200&#xA;/// desktop: if width is largest than 1200&#xA;context.responsiveValue&amp;lt;T&amp;gt;()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Optional Global Settings and Manual configurations&lt;/h3&gt; &#xA;&lt;p&gt;GetMaterialApp configures everything for you, but if you want to configure Get manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;  navigatorKey: Get.key,&#xA;  navigatorObservers: [GetObserver()],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will also be able to use your own Middleware within &lt;code&gt;GetObserver&lt;/code&gt;, this will not influence anything.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;  navigatorKey: Get.key,&#xA;  navigatorObservers: [&#xA;    GetObserver(MiddleWare.observer) // Here&#xA;  ],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can create &lt;em&gt;Global Settings&lt;/em&gt; for &lt;code&gt;Get&lt;/code&gt;. Just add &lt;code&gt;Get.config&lt;/code&gt; to your code before pushing any route. Or do it directly in your &lt;code&gt;GetMaterialApp&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  enableLog: true,&#xA;  defaultTransition: Transition.fade,&#xA;  opaqueRoute: Get.isOpaqueRouteDefault,&#xA;  popGesture: Get.isPopGestureEnable,&#xA;  transitionDuration: Get.defaultDurationTransition,&#xA;  defaultGlobalState: Get.defaultGlobalState,&#xA;);&#xA;&#xA;Get.config(&#xA;  enableLog = true,&#xA;  defaultPopGesture = true,&#xA;  defaultTransition = Transitions.cupertino&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can optionally redirect all the logging messages from &lt;code&gt;Get&lt;/code&gt;. If you want to use your own, favourite logging package, and want to capture the logs there:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  enableLog: true,&#xA;  logWriterCallback: localLogWriter,&#xA;);&#xA;&#xA;void localLogWriter(String text, {bool isError = false}) {&#xA;  // pass the message to your favourite logging package here&#xA;  // please note that even if enableLog: false log messages will be pushed in this callback&#xA;  // you get check the flag if you want through GetConfig.isLogEnable&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Local State Widgets&lt;/h3&gt; &#xA;&lt;p&gt;These Widgets allows you to manage a single value, and keep the state ephemeral and locally. We have flavours for Reactive and Simple. For instance, you might use them to toggle obscureText in a &lt;code&gt;TextField&lt;/code&gt;, maybe create a custom Expandable Panel, or maybe modify the current index in &lt;code&gt;BottomNavigationBar&lt;/code&gt; while changing the content of the body in a &lt;code&gt;Scaffold&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;ValueBuilder&lt;/h4&gt; &#xA;&lt;p&gt;A simplification of &lt;code&gt;StatefulWidget&lt;/code&gt; that works with a &lt;code&gt;.setState&lt;/code&gt; callback that takes the updated value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ValueBuilder&amp;lt;bool&amp;gt;(&#xA;  initialValue: false,&#xA;  builder: (value, updateFn) =&amp;gt; Switch(&#xA;    value: value,&#xA;    onChanged: updateFn, // same signature! you could use ( newValue ) =&amp;gt; updateFn( newValue )&#xA;  ),&#xA;  // if you need to call something outside the builder method.&#xA;  onUpdate: (value) =&amp;gt; print(&#34;Value updated: $value&#34;),&#xA;  onDispose: () =&amp;gt; print(&#34;Widget unmounted&#34;),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;ObxValue&lt;/h4&gt; &#xA;&lt;p&gt;Similar to &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#valuebuilder&#34;&gt;&lt;code&gt;ValueBuilder&lt;/code&gt;&lt;/a&gt;, but this is the Reactive version, you pass a Rx instance (remember the magical .obs?) and updates automatically... isn&#39;t it awesome?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ObxValue((data) =&amp;gt; Switch(&#xA;        value: data.value,&#xA;        onChanged: data, // Rx has a _callable_ function! You could use (flag) =&amp;gt; data.value = flag,&#xA;    ),&#xA;    false.obs,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Useful tips&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;.obs&lt;/code&gt;ervables (also known as &lt;em&gt;Rx&lt;/em&gt; Types) have a wide variety of internal methods and operators.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Is very common to &lt;em&gt;believe&lt;/em&gt; that a property with &lt;code&gt;.obs&lt;/code&gt; &lt;strong&gt;IS&lt;/strong&gt; the actual value... but make no mistake! We avoid the Type declaration of the variable, because Dart&#39;s compiler is smart enough, and the code looks cleaner, but:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var message = &#39;Hello world&#39;.obs;&#xA;print( &#39;Message &#34;$message&#34; has Type ${message.runtimeType}&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Even if &lt;code&gt;message&lt;/code&gt; &lt;em&gt;prints&lt;/em&gt; the actual String value, the Type is &lt;strong&gt;RxString&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;p&gt;So, you can&#39;t do &lt;code&gt;message.substring( 0, 4 )&lt;/code&gt;. You have to access the real &lt;code&gt;value&lt;/code&gt; inside the &lt;em&gt;observable&lt;/em&gt;: The most &#34;used way&#34; is &lt;code&gt;.value&lt;/code&gt;, but, did you know that you can also use...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final name = &#39;GetX&#39;.obs;&#xA;// only &#34;updates&#34; the stream, if the value is different from the current one.&#xA;name.value = &#39;Hey&#39;;&#xA;&#xA;// All Rx properties are &#34;callable&#34; and returns the new value.&#xA;// but this approach does not accepts `null`, the UI will not rebuild.&#xA;name(&#39;Hello&#39;);&#xA;&#xA;// is like a getter, prints &#39;Hello&#39;.&#xA;name() ;&#xA;&#xA;/// numbers:&#xA;&#xA;final count = 0.obs;&#xA;&#xA;// You can use all non mutable operations from num primitives!&#xA;count + 1;&#xA;&#xA;// Watch out! this is only valid if `count` is not final, but var&#xA;count += 1;&#xA;&#xA;// You can also compare against values:&#xA;count &amp;gt; 2;&#xA;&#xA;/// booleans:&#xA;&#xA;final flag = false.obs;&#xA;&#xA;// switches the value between true/false&#xA;flag.toggle();&#xA;&#xA;&#xA;/// all types:&#xA;&#xA;// Sets the `value` to null.&#xA;flag.nil();&#xA;&#xA;// All toString(), toJson() operations are passed down to the `value`&#xA;print( count ); // calls `toString()` inside  for RxInt&#xA;&#xA;final abc = [0,1,2].obs;&#xA;// Converts the value to a json Array, prints RxList&#xA;// Json is supported by all Rx types!&#xA;print(&#39;json: ${jsonEncode(abc)}, type: ${abc.runtimeType}&#39;);&#xA;&#xA;// RxMap, RxList and RxSet are special Rx types, that extends their native types.&#xA;// but you can work with a List as a regular list, although is reactive!&#xA;abc.add(12); // pushes 12 to the list, and UPDATES the stream.&#xA;abc[3]; // like Lists, reads the index 3.&#xA;&#xA;&#xA;// equality works with the Rx and the value, but hashCode is always taken from the value&#xA;final number = 12.obs;&#xA;print( number == 12 ); // prints &amp;gt; true&#xA;&#xA;/// Custom Rx Models:&#xA;&#xA;// toJson(), toString() are deferred to the child, so you can implement override on them, and print() the observable directly.&#xA;&#xA;class User {&#xA;    String name, last;&#xA;    int age;&#xA;    User({this.name, this.last, this.age});&#xA;&#xA;    @override&#xA;    String toString() =&amp;gt; &#39;$name $last, $age years old&#39;;&#xA;}&#xA;&#xA;final user = User(name: &#39;John&#39;, last: &#39;Doe&#39;, age: 33).obs;&#xA;&#xA;// `user` is &#34;reactive&#34;, but the properties inside ARE NOT!&#xA;// So, if we change some variable inside of it...&#xA;user.value.name = &#39;Roi&#39;;&#xA;// The widget will not rebuild!,&#xA;// `Rx` don&#39;t have any clue when you change something inside user.&#xA;// So, for custom classes, we need to manually &#34;notify&#34; the change.&#xA;user.refresh();&#xA;&#xA;// or we can use the `update()` method!&#xA;user.update((value){&#xA;  value.name=&#39;Roi&#39;;&#xA;});&#xA;&#xA;print( user );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;StateMixin&lt;/h2&gt; &#xA;&lt;p&gt;Another way to handle your &lt;code&gt;UI&lt;/code&gt; state is use the &lt;code&gt;StateMixin&amp;lt;T&amp;gt;&lt;/code&gt; . To implement it, use the &lt;code&gt;with&lt;/code&gt; to add the &lt;code&gt;StateMixin&amp;lt;T&amp;gt;&lt;/code&gt; to your controller which allows a T model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Controller extends GetController with StateMixin&amp;lt;User&amp;gt;{}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;change()&lt;/code&gt; method change the State whenever we want. Just pass the data and the status in this way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;change(data, status: RxStatus.success());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;RxStatus allow these status:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;RxStatus.loading();&#xA;RxStatus.success();&#xA;RxStatus.empty();&#xA;RxStatus.error(&#39;message&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To represent it in the UI, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class OtherClass extends GetView&amp;lt;Controller&amp;gt; {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;&#xA;      body: controller.obx(&#xA;        (state)=&amp;gt;Text(state.name),&#xA;        &#xA;        // here you can put your custom loading indicator, but&#xA;        // by default would be Center(child:CircularProgressIndicator())&#xA;        onLoading: CustomLoadingIndicator(),&#xA;        onEmpty: Text(&#39;No data found&#39;),&#xA;&#xA;        // here also you can set your own error widget, but by&#xA;        // default will be an Center(child:Text(error))&#xA;        onError: (error)=&amp;gt;Text(error),&#xA;      ),&#xA;    );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;GetView&lt;/h4&gt; &#xA;&lt;p&gt;I love this Widget, is so simple, yet, so useful!&lt;/p&gt; &#xA;&lt;p&gt;Is a &lt;code&gt;const Stateless&lt;/code&gt; Widget that has a getter &lt;code&gt;controller&lt;/code&gt; for a registered &lt;code&gt;Controller&lt;/code&gt;, that&#39;s all.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; class AwesomeController extends GetController {&#xA;   final String title = &#39;My Awesome View&#39;;&#xA; }&#xA;&#xA;  // ALWAYS remember to pass the `Type` you used to register your controller!&#xA; class AwesomeView extends GetView&amp;lt;AwesomeController&amp;gt; {&#xA;   @override&#xA;   Widget build(BuildContext context) {&#xA;     return Container(&#xA;       padding: EdgeInsets.all(20),&#xA;       child: Text(controller.title), // just call `controller.something`&#xA;     );&#xA;   }&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;GetResponsiveView&lt;/h4&gt; &#xA;&lt;p&gt;Extend this widget to build responsive view. this widget contains the &lt;code&gt;screen&lt;/code&gt; property that have all information about the screen size and type.&lt;/p&gt; &#xA;&lt;h5&gt;How to use it&lt;/h5&gt; &#xA;&lt;p&gt;You have two options to build it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;with &lt;code&gt;builder&lt;/code&gt; method you return the widget to build.&lt;/li&gt; &#xA; &lt;li&gt;with methods &lt;code&gt;desktop&lt;/code&gt;, &lt;code&gt;tablet&lt;/code&gt;,&lt;code&gt;phone&lt;/code&gt;, &lt;code&gt;watch&lt;/code&gt;. the specific method will be built when the screen type matches the method when the screen is [ScreenType.Tablet] the &lt;code&gt;tablet&lt;/code&gt; method will be exuded and so on. &lt;strong&gt;Note:&lt;/strong&gt; If you use this method please set the property &lt;code&gt;alwaysUseBuilder&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With &lt;code&gt;settings&lt;/code&gt; property you can set the width limit for the screen types.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SchabanBo/get_page_example/raw/master/docs/Example.gif?raw=true&#34; alt=&#34;example&#34;&gt; Code to this screen &lt;a href=&#34;https://github.com/SchabanBo/get_page_example/raw/master/lib/pages/responsive_example/responsive_view.dart&#34;&gt;code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;GetWidget&lt;/h4&gt; &#xA;&lt;p&gt;Most people have no idea about this Widget, or totally confuse the usage of it. The use case is very rare, but very specific: It &lt;code&gt;caches&lt;/code&gt; a Controller. Because of the &lt;em&gt;cache&lt;/em&gt;, can&#39;t be a &lt;code&gt;const Stateless&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;So, when do you need to &#34;cache&#34; a Controller?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you use, another &#34;not so common&#34; feature of &lt;strong&gt;GetX&lt;/strong&gt;: &lt;code&gt;Get.create()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Get.create(()=&amp;gt;Controller())&lt;/code&gt; will generate a new &lt;code&gt;Controller&lt;/code&gt; each time you call &lt;code&gt;Get.find&amp;lt;Controller&amp;gt;()&lt;/code&gt;,&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s where &lt;code&gt;GetWidget&lt;/code&gt; shines... as you can use it, for example, to keep a list of Todo items. So, if the widget gets &#34;rebuilt&#34;, it will keep the same controller instance.&lt;/p&gt; &#xA;&lt;h4&gt;GetxService&lt;/h4&gt; &#xA;&lt;p&gt;This class is like a &lt;code&gt;GetxController&lt;/code&gt;, it shares the same lifecycle ( &lt;code&gt;onInit()&lt;/code&gt;, &lt;code&gt;onReady()&lt;/code&gt;, &lt;code&gt;onClose()&lt;/code&gt;). But has no &#34;logic&#34; inside of it. It just notifies &lt;strong&gt;GetX&lt;/strong&gt; Dependency Injection system, that this subclass &lt;strong&gt;can not&lt;/strong&gt; be removed from memory.&lt;/p&gt; &#xA;&lt;p&gt;So is super useful to keep your &#34;Services&#34; always reachable and active with &lt;code&gt;Get.find()&lt;/code&gt;. Like: &lt;code&gt;ApiService&lt;/code&gt;, &lt;code&gt;StorageService&lt;/code&gt;, &lt;code&gt;CacheService&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;void&amp;gt; main() async {&#xA;  await initServices(); /// AWAIT SERVICES INITIALIZATION.&#xA;  runApp(SomeApp());&#xA;}&#xA;&#xA;/// Is a smart move to make your Services intiialize before you run the Flutter app.&#xA;/// as you can control the execution flow (maybe you need to load some Theme configuration,&#xA;/// apiKey, language defined by the User... so load SettingService before running ApiService.&#xA;/// so GetMaterialApp() doesnt have to rebuild, and takes the values directly.&#xA;void initServices() async {&#xA;  print(&#39;starting services ...&#39;);&#xA;  /// Here is where you put get_storage, hive, shared_pref initialization.&#xA;  /// or moor connection, or whatever that&#39;s async.&#xA;  await Get.putAsync(() =&amp;gt; DbService().init());&#xA;  await Get.putAsync(SettingsService()).init();&#xA;  print(&#39;All services started...&#39;);&#xA;}&#xA;&#xA;class DbService extends GetxService {&#xA;  Future&amp;lt;DbService&amp;gt; init() async {&#xA;    print(&#39;$runtimeType delays 2 sec&#39;);&#xA;    await 2.delay();&#xA;    print(&#39;$runtimeType ready!&#39;);&#xA;    return this;&#xA;  }&#xA;}&#xA;&#xA;class SettingsService extends GetxService {&#xA;  void init() async {&#xA;    print(&#39;$runtimeType delays 1 sec&#39;);&#xA;    await 1.delay();&#xA;    print(&#39;$runtimeType ready!&#39;);&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The only way to actually delete a &lt;code&gt;GetxService&lt;/code&gt;, is with &lt;code&gt;Get.reset()&lt;/code&gt; which is like a &#34;Hot Reboot&#34; of your app. So remember, if you need absolute persistence of a class instance during the lifetime of your app, use &lt;code&gt;GetxService&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;You can test your controllers like any other class, including their lifecycles:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Controller extends GetxController {&#xA;  @override&#xA;  void onInit() {&#xA;    super.onInit();&#xA;    //Change value to name2&#xA;    name.value = &#39;name2&#39;;&#xA;  }&#xA;&#xA;  @override&#xA;  void onClose() {&#xA;    name.value = &#39;&#39;;&#xA;    super.onClose();&#xA;  }&#xA;&#xA;  final name = &#39;name1&#39;.obs;&#xA;&#xA;  void changeName() =&amp;gt; name.value = &#39;name3&#39;;&#xA;}&#xA;&#xA;void main() {&#xA;  test(&#39;&#39;&#39;&#xA;Test the state of the reactive variable &#34;name&#34; across all of its lifecycles&#39;&#39;&#39;,&#xA;      () {&#xA;    /// You can test the controller without the lifecycle,&#xA;    /// but it&#39;s not recommended unless you&#39;re not using&#xA;    ///  GetX dependency injection&#xA;    final controller = Controller();&#xA;    expect(controller.name.value, &#39;name1&#39;);&#xA;&#xA;    /// If you are using it, you can test everything,&#xA;    /// including the state of the application after each lifecycle.&#xA;    Get.put(controller); // onInit was called&#xA;    expect(controller.name.value, &#39;name2&#39;);&#xA;&#xA;    /// Test your functions&#xA;    controller.changeName();&#xA;    expect(controller.name.value, &#39;name3&#39;);&#xA;&#xA;    /// onClose was called&#xA;    Get.delete&amp;lt;Controller&amp;gt;();&#xA;&#xA;    expect(controller.name.value, &#39;&#39;);&#xA;  });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Tips&lt;/h4&gt; &#xA;&lt;h5&gt;Mockito or mocktail&lt;/h5&gt; &#xA;&lt;p&gt;If you need to mock your GetxController/GetxService, you should extend GetxController, and mixin it with Mock, that way&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class NotificationServiceMock extends GetxService with Mock implements NotificationService {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Using Get.reset()&lt;/h5&gt; &#xA;&lt;p&gt;If you are testing widgets, or test groups, use Get.reset at the end of your test or in tearDown to reset all settings from your previous test.&lt;/p&gt; &#xA;&lt;h5&gt;Get.testMode&lt;/h5&gt; &#xA;&lt;p&gt;if you are using your navigation in your controllers, use &lt;code&gt;Get.testMode = true&lt;/code&gt; at the beginning of your main.&lt;/p&gt; &#xA;&lt;h1&gt;Breaking changes from 2.0&lt;/h1&gt; &#xA;&lt;p&gt;1- Rx types:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Before&lt;/th&gt; &#xA;   &lt;th&gt;After&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxString&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IntX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxInt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MapX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxMap&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ListX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxList&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NumX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxNum&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DoubleX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxDouble&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;RxController and GetBuilder now have merged, you no longer need to memorize which controller you want to use, just use GetxController, it will work for simple state management and for reactive as well.&lt;/p&gt; &#xA;&lt;p&gt;2- NamedRoutes Before:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  namedRoutes: {&#xA;    &#39;/&#39;: GetRoute(page: Home()),&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  getPages: [&#xA;    GetPage(name: &#39;/&#39;, page: () =&amp;gt; Home()),&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Why this change? Often, it may be necessary to decide which page will be displayed from a parameter, or a login token, the previous approach was inflexible, as it did not allow this. Inserting the page into a function has significantly reduced the RAM consumption, since the routes will not be allocated in memory since the app was started, and it also allowed to do this type of approach:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;GetStorage box = GetStorage();&#xA;&#xA;GetMaterialApp(&#xA;  getPages: [&#xA;    GetPage(name: &#39;/&#39;, page:(){&#xA;      return box.hasData(&#39;token&#39;) ? Home() : Login();&#xA;    })&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Why Getx?&lt;/h1&gt; &#xA;&lt;p&gt;1- Many times after a Flutter update, many of your packages will break. Sometimes compilation errors happen, errors often appear that there are still no answers about, and the developer needs to know where the error came from, track the error, only then try to open an issue in the corresponding repository, and see its problem solved. Get centralizes the main resources for development (State, dependency and route management), allowing you to add a single package to your pubspec, and start working. After a Flutter update, the only thing you need to do is update the Get dependency, and get to work. Get also resolves compatibility issues. How many times a version of a package is not compatible with the version of another, because one uses a dependency in one version, and the other in another version? This is also not a concern using Get, as everything is in the same package and is fully compatible.&lt;/p&gt; &#xA;&lt;p&gt;2- Flutter is easy, Flutter is incredible, but Flutter still has some boilerplate that may be unwanted for most developers, such as &lt;code&gt;Navigator.of(context).push (context, builder [...]&lt;/code&gt;. Get simplifies development. Instead of writing 8 lines of code to just call a route, you can just do it: &lt;code&gt;Get.to(Home())&lt;/code&gt; and you&#39;re done, you&#39;ll go to the next page. Dynamic web urls are a really painful thing to do with Flutter currently, and that with GetX is stupidly simple. Managing states in Flutter, and managing dependencies is also something that generates a lot of discussion, as there are hundreds of patterns in the pub. But there is nothing as easy as adding a &#34;.obs&#34; at the end of your variable, and place your widget inside an Obx, and that&#39;s it, all updates to that variable will be automatically updated on the screen.&lt;/p&gt; &#xA;&lt;p&gt;3- Ease without worrying about performance. Flutter&#39;s performance is already amazing, but imagine that you use a state manager, and a locator to distribute your blocs/stores/controllers/ etc. classes. You will have to manually call the exclusion of that dependency when you don&#39;t need it. But have you ever thought of simply using your controller, and when it was no longer being used by anyone, it would simply be deleted from memory? That&#39;s what GetX does. With SmartManagement, everything that is not being used is deleted from memory, and you shouldn&#39;t have to worry about anything but programming. You will be assured that you are consuming the minimum necessary resources, without even having created a logic for this.&lt;/p&gt; &#xA;&lt;p&gt;4- Actual decoupling. You may have heard the concept &#34;separate the view from the business logic&#34;. This is not a peculiarity of BLoC, MVC, MVVM, and any other standard on the market has this concept. However, this concept can often be mitigated in Flutter due to the use of context. If you need context to find an InheritedWidget, you need it in the view, or pass the context by parameter. I particularly find this solution very ugly, and to work in teams we will always have a dependence on View&#39;s business logic. Getx is unorthodox with the standard approach, and while it does not completely ban the use of StatefulWidgets, InitState, etc., it always has a similar approach that can be cleaner. Controllers have life cycles, and when you need to make an APIREST request for example, you don&#39;t depend on anything in the view. You can use onInit to initiate the http call, and when the data arrives, the variables will be populated. As GetX is fully reactive (really, and works under streams), once the items are filled, all widgets that use that variable will be automatically updated in the view. This allows people with UI expertise to work only with widgets, and not have to send anything to business logic other than user events (like clicking a button), while people working with business logic will be free to create and test the business logic separately.&lt;/p&gt; &#xA;&lt;p&gt;This library will always be updated and implementing new features. Feel free to offer PRs and contribute to them.&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;h2&gt;Community channels&lt;/h2&gt; &#xA;&lt;p&gt;GetX has a highly active and helpful community. If you have questions, or would like any assistance regarding the use of this framework, please join our community channels, your question will be answered more quickly, and it will be the most suitable place. This repository is exclusive for opening issues, and requesting resources, but feel free to be part of GetX Community.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Slack&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Telegram&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://communityinviter.com/apps/getxworkspace/getx&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-orange.svg?sanitize=true&#34; alt=&#34;Get on Slack&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://discord.com/invite/9Hpt99N&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/722900883784073290.svg?logo=discord&#34; alt=&#34;Discord Shield&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://t.me/joinchat/PhdbJRmsZNpAqSLJL6bH7g&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Telegram-blue.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Want to contribute to the project? We will be proud to highlight you as one of our collaborators. Here are some points where you can contribute and make Get (and Flutter) even better.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Helping to translate the readme into other languages.&lt;/li&gt; &#xA; &lt;li&gt;Adding documentation to the readme (a lot of Get&#39;s functions haven&#39;t been documented yet).&lt;/li&gt; &#xA; &lt;li&gt;Write articles or make videos teaching how to use Get (they will be inserted in the Readme and in the future in our Wiki).&lt;/li&gt; &#xA; &lt;li&gt;Offering PRs for code/tests.&lt;/li&gt; &#xA; &lt;li&gt;Including new functions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Any contribution is welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Articles and videos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLV1fXIAyjeuZ6M8m56zajMUwu4uE3-SL0&#34;&gt;Flutter Getx EcoSystem package for arabic people&lt;/a&gt; - Tutorial by &lt;a href=&#34;https://github.com/UsamaElgendy&#34;&gt;Pesa Coder&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/swlh/flutter-dynamic-themes-in-3-lines-c3b375f292e3&#34;&gt;Dynamic Themes in 3 lines using GetX™&lt;/a&gt; - Tutorial by &lt;a href=&#34;https://github.com/RodBr&#34;&gt;Rod Brown&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RaqPIoJSTtI&#34;&gt;Complete GetX™ Navigation&lt;/a&gt; - Route management video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CNpXbeI_slw&#34;&gt;Complete GetX State Management&lt;/a&gt; - State management video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/ttQtlX_Q0eU&#34;&gt;GetX™ Other Features&lt;/a&gt; - Utils, storage, bindings and other features video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=BiV0DcXgk58&#34;&gt;Firestore User with GetX | Todo App&lt;/a&gt; - Video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-H-T_BSgfOE&#34;&gt;Firebase Auth with GetX | Todo App&lt;/a&gt; - Video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/the-flutter-getx-ecosystem-state-management-881c7235511d&#34;&gt;The Flutter GetX™ Ecosystem ~ State Management&lt;/a&gt; - State management by &lt;a href=&#34;https://github.com/imaachman&#34;&gt;Aachman Garg&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/the-flutter-getx-ecosystem-dependency-injection-8e763d0ec6b9&#34;&gt;The Flutter GetX™ Ecosystem ~ Dependency Injection&lt;/a&gt; - Dependency Injection by &lt;a href=&#34;https://github.com/imaachman&#34;&gt;Aachman Garg&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=IYQgtu9TM74&#34;&gt;GetX, the all-in-one Flutter package&lt;/a&gt; - A brief tutorial covering State Management and Navigation by Thad Carnevalli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=EcnqFasHf18&#34;&gt;Build a To-do List App from scratch using Flutter and GetX&lt;/a&gt; - UI + State Management + Storage video by Thad Carnevalli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jeffmcmorris/getx-flutter-firebase-auth-example-b383c1dd1de2&#34;&gt;GetX Flutter Firebase Auth Example&lt;/a&gt; - Article by Jeff McMorris.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.appwithflutter.com/flutter-state-management-with-getx/&#34;&gt;Flutter State Management with GetX – Complete App&lt;/a&gt; - by App With Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.appwithflutter.com/flutter-routing-using-get-package/&#34;&gt;Flutter Routing with Animation using Get Package&lt;/a&gt; - by App With Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dartpad.dev/2b3d0d6f9d4e312c5fdbefc414c1727e?&#34;&gt;A minimal example on dartpad&lt;/a&gt; - by &lt;a href=&#34;https://github.com/roipeker&#34;&gt;Roi Peker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>abuanwar072/E-commerce-Complete-Flutter-UI</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/abuanwar072/E-commerce-Complete-Flutter-UI</id>
    <link href="https://github.com/abuanwar072/E-commerce-Complete-Flutter-UI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;E-Commerce Complate App - Flutter UI&lt;/h1&gt; &#xA;&lt;p&gt;In the first part of our complete e-commerce app, we show you how you can create a nice clean onboarding screen for your e-commerce app that can run both Andriod and iOS devices because it builds with flutter. Then on the second episode, we build a Sign in, Forgot Password screen with a custom error indicator. The third Episode contains Sign Up and OTP screen. The fourth episode is the most exciting episode because we build our home page on this episode than on the fifth episode we work on our product page, last not least on the 6th episode we build an order screen which has some cool stuff like swipe to remove. At the end 7th episode we build a profile screen.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://youtube.com/playlist?list=PLxUBb2A_UUy8OlaNZpS2mfL8xpHcnd_Af&#34;&gt;Watch it on YouTube&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Packages we are using:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;flutter_svg: &lt;a href=&#34;https://pub.dev/packages/flutter_svg&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Video Preview of Final UI&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/intro.gif&#34; alt=&#34;Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screens it contains:&lt;/h2&gt; &#xA;&lt;p&gt;=&amp;gt; Onboarding&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Login&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Forgot Password&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Sign Up&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Complete Profile&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; OTP Verification&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Home Page&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Product Details&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Order&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Profile (added)&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Bottom Navigation Bar (added)&lt;/p&gt; &#xA;&lt;p&gt;Now it contains all the screen, thanks for your love and support 🙏&lt;/p&gt; &#xA;&lt;h2&gt;Photos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/1.png&#34; alt=&#34;Preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/2.png&#34; alt=&#34;Preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/3.png&#34; alt=&#34;Preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/4.png&#34; alt=&#34;Preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/5.png&#34; alt=&#34;Preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/6.png&#34; alt=&#34;Preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/7.png&#34; alt=&#34;Preview&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fleaflet/flutter_map</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/fleaflet/flutter_map</id>
    <link href="https://github.com/fleaflet/flutter_map" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter map widget inspired by Leaflet&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flutter_map&lt;/h1&gt; &#xA;&lt;p&gt;A versatile mapping package for Flutter, based off of &lt;a href=&#34;https://leafletjs.com/&#34;&gt;&#39;leaflet.js&#39;&lt;/a&gt;. Simple and easy to learn, yet completely customizable and configurable, it&#39;s the best choice for mapping in your Flutter app.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_map&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_map.svg?label=Latest+Version&#34; alt=&#34;Pub.dev&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fleaflet/flutter_map/actions?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://badgen.net/github/checks/fleaflet/flutter_map?label=Checks+%26+Tests&amp;amp;color=orange&#34; alt=&#34;Checks &amp;amp; Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_map/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_map/pub%20points&#34; alt=&#34;points&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/fleaflet/flutter_map/stargazers&#34;&gt;&lt;img src=&#34;https://badgen.net/github/stars/fleaflet/flutter_map?label=stars&amp;amp;color=green&amp;amp;icon=github&#34; alt=&#34;stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_map/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_map/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://GitHub.com/fleaflet/flutter_map/issues&#34;&gt;&lt;img src=&#34;https://badgen.net/github/open-issues/fleaflet/flutter_map?label=Open+Issues&amp;amp;color=green&#34; alt=&#34;Open Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/fleaflet/flutter_map/pulls&#34;&gt;&lt;img src=&#34;https://badgen.net/github/open-prs/fleaflet/flutter_map?label=Open+PRs&amp;amp;color=green&#34; alt=&#34;Open PRs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://discord.gg/egEGeByf4q&#34;&gt;Discord Server&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Join the Discord server: &lt;a href=&#34;https://discord.gg/egEGeByf4q&#34;&gt;https://discord.gg/egEGeByf4q&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Talk about &#39;flutter_map&#39;, get and give help, and receive notifications about new &#39;flutter_map&#39; updates! More additions planned in the future.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://fleaflet-docs.netlify.app&#34;&gt;Beta Documentation&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;View the beta documentation: &lt;a href=&#34;https://fleaflet-docs.netlify.app&#34;&gt;https://fleaflet-docs.netlify.app&lt;/a&gt;!&lt;br&gt; Link liable to break and/or change. Most contents should be correct (but not yet verified), but some documentation may be missing/misleading.&lt;/p&gt; &#xA;&lt;p&gt;Any feedback is appreciated! Please comment or leave a code review on &lt;a href=&#34;https://raw.githubusercontent.com/fleaflet/flutter_map/master/pull/992&#34;&gt;pull request #992&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation &amp;amp; Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Add &#39;flutter_map&#39; to your &#39;pubspec.yaml&#39; with the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; flutter pub add flutter_map&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Include in your project with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter_map/flutter_map.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;Configure your app to use the &lt;code&gt;INTERNET&lt;/code&gt; permission in the manifest file located in &lt;code&gt;&amp;lt;project root&amp;gt;/android/app/src/main/AndroidManifest.xml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;uses-permission android:name=&#34;android.permission.INTERNET&#34;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Configure the map using &lt;code&gt;MapOptions&lt;/code&gt; and layer options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(BuildContext context) {&#xA;  return FlutterMap(&#xA;    options: MapOptions(&#xA;      center: LatLng(51.5, -0.09),&#xA;      zoom: 13.0,&#xA;    ),&#xA;    layers: [&#xA;      TileLayerOptions(&#xA;        urlTemplate: &#34;https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,&#xA;        subdomains: [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;],&#xA;        attributionBuilder: (_) {&#xA;          return Text(&#34;© OpenStreetMap contributors&#34;);&#xA;        },&#xA;      ),&#xA;      MarkerLayerOptions(&#xA;        markers: [&#xA;          Marker(&#xA;            width: 80.0,&#xA;            height: 80.0,&#xA;            point: LatLng(51.5, -0.09),&#xA;            builder: (ctx) =&amp;gt;&#xA;            Container(&#xA;              child: FlutterLogo(),&#xA;            ),&#xA;          ),&#xA;        ],&#xA;      ),&#xA;    ],&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, initialize the map by specifying &lt;code&gt;bounds&lt;/code&gt; instead of &lt;code&gt;center&lt;/code&gt; and &lt;code&gt;zoom&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MapOptions(&#xA;  bounds: LatLngBounds(LatLng(58.8, 6.1), LatLng(59, 6.2)),&#xA;  boundsOptions: FitBoundsOptions(padding: EdgeInsets.all(8.0)),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Azure Maps provider&lt;/h3&gt; &#xA;&lt;p&gt;To configure &lt;a href=&#34;https://azure.com/maps&#34;&gt;Azure Maps&lt;/a&gt;, use the following &lt;code&gt;MapOptions&lt;/code&gt; and layer options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(BuildContext context) {&#xA;  return new FlutterMap(&#xA;    options: new MapOptions(&#xA;      center: new LatLng(51.5, -0.09),&#xA;      zoom: 13.0,&#xA;    ),&#xA;    layers: [&#xA;      new TileLayerOptions(&#xA;        urlTemplate: &#34;https://atlas.microsoft.com/map/tile/png?api-version=1&amp;amp;layer=basic&amp;amp;style=main&amp;amp;tileSize=256&amp;amp;view=Auto&amp;amp;zoom={z}&amp;amp;x={x}&amp;amp;y={y}&amp;amp;subscription-key={subscriptionKey}&#34;,&#xA;        additionalOptions: {&#xA;          &#39;subscriptionKey&#39;: &#39;&amp;lt;YOUR_AZURE_MAPS_SUBSCRIPTON_KEY&amp;gt;&#39;&#xA;        },&#xA;      ),&#xA;      new MarkerLayerOptions(&#xA;        markers: [&#xA;          new Marker(&#xA;            width: 80.0,&#xA;            height: 80.0,&#xA;            point: new LatLng(51.5, -0.09),&#xA;            builder: (ctx) =&amp;gt;&#xA;            new Container(&#xA;              child: new FlutterLogo(),&#xA;            ),&#xA;          ),&#xA;        ],&#xA;      ),&#xA;    ],&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use Azure Maps, &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-maps/quick-demo-map-app&#34;&gt;set up an account and get a subscription key&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Open Street Map provider&lt;/h3&gt; &#xA;&lt;p&gt;Configure the map to use &lt;a href=&#34;https://openstreetmap.org&#34;&gt;Open Street Map&lt;/a&gt; by using the following &lt;code&gt;MapOptions&lt;/code&gt; and layer options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(BuildContext context) {&#xA;  return new FlutterMap(&#xA;    options: new MapOptions(&#xA;      center: new LatLng(51.5, -0.09),&#xA;      zoom: 13.0,&#xA;    ),&#xA;    layers: [&#xA;      new TileLayerOptions(&#xA;        urlTemplate: &#34;https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,&#xA;        subdomains: [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]&#xA;      ),&#xA;      new MarkerLayerOptions(&#xA;        markers: [&#xA;          new Marker(&#xA;            width: 80.0,&#xA;            height: 80.0,&#xA;            point: new LatLng(51.5, -0.09),&#xA;            builder: (ctx) =&amp;gt;&#xA;            new Container(&#xA;              child: new FlutterLogo(),&#xA;            ),&#xA;          ),&#xA;        ],&#xA;      ),&#xA;    ],&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mapbox provider&lt;/h3&gt; &#xA;&lt;p&gt;To configure &lt;a href=&#34;https://www.mapbox.com/&#34;&gt;Mapbox&lt;/a&gt;, you should create your &lt;a href=&#34;https://docs.mapbox.com/help/getting-started/access-tokens/&#34;&gt;access token&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use tiles provided and hosted by Mapbox. The list can be found &lt;a href=&#34;https://docs.mapbox.com/api/maps/styles/#mapbox-styles&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(BuildContext context) {&#xA;  return new FlutterMap(&#xA;    options: new MapOptions(&#xA;      center: new LatLng(51.5, -0.09),&#xA;      zoom: 13.0,&#xA;    ),&#xA;    layers: [&#xA;      new TileLayerOptions(&#xA;        urlTemplate: &#34;https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/&#34;&#xA;                     &#34;{z}/{x}/{y}?access_token=$accessToken&#34;,&#xA;      ),&#xA;      new MarkerLayerOptions(&#xA;        markers: [&#xA;          new Marker(&#xA;            width: 80.0,&#xA;            height: 80.0,&#xA;            point: new LatLng(51.5, -0.09),&#xA;            builder: (ctx) =&amp;gt;&#xA;            new Container(&#xA;              child: new FlutterLogo(),&#xA;            ),&#xA;          ),&#xA;        ],&#xA;      ),&#xA;    ],&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure &lt;code&gt;accessToken&lt;/code&gt; is properly encoded as valid URI component. If you use Mapbox Studio with your own tile sets, just use URL like this: &lt;code&gt;https://api.mapbox.com/styles/v1/:accountName/:tileSetId/tiles/256/{z}/{x}/{y}@2x&lt;/code&gt; where &lt;code&gt;:accountName&lt;/code&gt; is your user account name and &lt;code&gt;:tileSetId&lt;/code&gt; is the ID of your tile set, more information is &lt;a href=&#34;https://docs.mapbox.com/help/glossary/style-url/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Widget Layers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Use the new way to create layers&lt;/strong&gt; (compatible with previous version)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(BuildContext context) {&#xA;  return FlutterMap(&#xA;    options: MapOptions(&#xA;      center: LatLng(51.5, -0.09),&#xA;      zoom: 13.0,&#xA;    ),&#xA;    layers: [&#xA;      MarkerLayerOptions(&#xA;        markers: [&#xA;          Marker(&#xA;            width: 80.0,&#xA;            height: 80.0,&#xA;            point: LatLng(51.5, -0.09),&#xA;            builder: (ctx) =&amp;gt;&#xA;            Container(&#xA;              child: FlutterLogo(),&#xA;            ),&#xA;          ),&#xA;        ],&#xA;      ),&#xA;    ],&#xA;    children: &amp;lt;Widget&amp;gt;[&#xA;      TileLayerWidget(options: TileLayerOptions(&#xA;        urlTemplate: &#34;https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,&#xA;        subdomains: [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]&#xA;      )),&#xA;      MarkerLayerWidget(options: MarkerLayerOptions(&#xA;        markers: [&#xA;          Marker(&#xA;            width: 80.0,&#xA;            height: 80.0,&#xA;            point: LatLng(51.5, -0.09),&#xA;            builder: (ctx) =&amp;gt;&#xA;            Container(&#xA;              child: FlutterLogo(),&#xA;            ),&#xA;          ),&#xA;        ],&#xA;      )),&#xA;    ],&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom CRS&lt;/h3&gt; &#xA;&lt;p&gt;By default flutter_map supports only WGS84 (EPSG:4326) and Google Mercator (EPSG:3857) projections. The &lt;a href=&#34;https://github.com/maRci002/proj4dart&#34;&gt;proj4dart&lt;/a&gt; package provides additional reference systems (CRS).&lt;/p&gt; &#xA;&lt;p&gt;To use proj4dart, first define a custom CRS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var resolutions = &amp;lt;double&amp;gt;[32768, 16384, 8192, 4096, 2048, 1024, 512, 256, 128];&#xA;var maxZoom = (resolutions.length - 1).toDouble();&#xA;&#xA;var epsg3413CRS = Proj4Crs.fromFactory(&#xA;  code: &#39;EPSG:3413&#39;,&#xA;  proj4Projection:&#xA;      proj4.Projection.add(&#39;EPSG:3413&#39;, &#39;+proj=stere +lat_0=90 +lat_ts=70 +lon_0=-45 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs&#39;),&#xA;  resolutions: resolutions,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use the custom CRS in the map layer and in WMS layers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;child: FlutterMap(&#xA;  options: MapOptions(&#xA;    // Set the map&#39;s CRS&#xA;    crs: epsg3413CRS,&#xA;    center: LatLng(65.05166470332148, -19.171744826394896),&#xA;    maxZoom: maxZoom,&#xA;  ),&#xA;  layers: [&#xA;    TileLayerOptions(&#xA;      wmsOptions: WMSTileLayerOptions(&#xA;        // Set the WMS layer&#39;s CRS too&#xA;        crs: epsg3413CRS,&#xA;        baseUrl: &#39;https://www.gebco.net/data_and_products/gebco_web_services/north_polar_view_wms/mapserv?&#39;,&#xA;        layers: [&#39;gebco_north_polar_view&#39;],&#xA;      ),&#xA;    ),&#xA;  ],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more details, see the &lt;a href=&#34;https://raw.githubusercontent.com/fleaflet/flutter_map/master/example/lib/pages/custom_crs/Readme.md&#34;&gt;custom CRS README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run the example&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;code&gt;example/&lt;/code&gt; folder for a working example app.&lt;/p&gt; &#xA;&lt;p&gt;To run it, in a terminal cd into the folder. Then execute &lt;code&gt;ulimit -S -n 2048&lt;/code&gt; (&lt;a href=&#34;https://github.com/trentpiercy/trace/issues/1#issuecomment-404494469&#34;&gt;ref&lt;/a&gt;). Then execute &lt;code&gt;flutter run&lt;/code&gt; with a running emulator.&lt;/p&gt; &#xA;&lt;h2&gt;Downloading and caching offline maps&lt;/h2&gt; &#xA;&lt;p&gt;This section provides an overview of the available caching tile providers. If you would like to provide preconfigured and prepackaged map tiles to your app users, see the &#39;Preconfigured Offline Maps&#39; section below.&lt;/p&gt; &#xA;&lt;p&gt;The two available options included in flutter_map&lt;/p&gt; &#xA;&lt;h3&gt;1. Use &lt;code&gt;NetworkImage&lt;/code&gt; by using &lt;code&gt;NonCachingNetworkTileProvider&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Whilst the name might make you think differently, it is designed to prevent you from using it and expecting it to cache; because it doesn&#39;t.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;FlutterMap&lt;/code&gt; &lt;code&gt;NonCachingNetworkTileProvider&lt;/code&gt; implementaion uses &lt;code&gt;NetworkImage&lt;/code&gt; which should cache images in memory until the app restart (through &lt;code&gt;Image.network&lt;/code&gt;). See the &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/Image/Image.network.html&#34;&gt;Image.network&lt;/a&gt; docs and &lt;a href=&#34;https://flutter.dev/docs/cookbook/images/network-image#placeholders-and-caching&#34;&gt;NetworkImage&lt;/a&gt; docs for more details.&lt;/p&gt; &#xA;&lt;h3&gt;2. Using the &lt;code&gt;cached_network_image&lt;/code&gt; dependency&lt;/h3&gt; &#xA;&lt;p&gt;This dependency has an &lt;code&gt;ImageProvider&lt;/code&gt; that caches images to disk, which means the cache persists through an app restart. You&#39;ll need to &lt;a href=&#34;https://pub.dev/packages/cached_network_image/install&#34;&gt;include the package&lt;/a&gt; in your &lt;code&gt;pubspec.yaml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Create your own provider using the code below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:cached_network_image/cached_network_image.dart&#39;;&#xA;class CachedTileProvider extends TileProvider {&#xA;  const CachedTileProvider();&#xA;  @override&#xA;  ImageProvider getImage(Coords&amp;lt;num&amp;gt; coords, TileLayerOptions options) {&#xA;    return CachedNetworkImageProvider(&#xA;      getTileUrl(coords, options),&#xA;      //Now you can set options that determine how the image gets cached via whichever plugin you use.&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, add the &lt;code&gt;CachedTileProvider&lt;/code&gt; &lt;code&gt;TileProvider&lt;/code&gt; to the appropriate &lt;code&gt;TileLayerOptions&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TileLayerOptions(&#xA;  urlTemplate: &#39;https://example.com/{x}/{y}/{z}&#39;,&#xA;  tileProvider: const CachedTileProvider()&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Offline Maps using TileMill&lt;/h2&gt; &#xA;&lt;p&gt;This section provides instructions for preconfigured and prepackaged offline maps. To see how to setup caching and downloading, see the &#39;Dynamically Downloading &amp;amp; Caching Offline Maps&#39; section above.&lt;/p&gt; &#xA;&lt;p&gt;This guide uses an open source program called &lt;a href=&#34;https://tilemill-project.github.io/tilemill/&#34;&gt;TileMill&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;First, &lt;a href=&#34;https://tilemill-project.github.io/tilemill/docs/install/&#34;&gt;install TileMill&lt;/a&gt; on your machine. Then, follow &lt;a href=&#34;https://tilemill-project.github.io/tilemill/docs/guides/osm-bright-mac-quickstart/&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once you have your map exported to &lt;code&gt;.mbtiles&lt;/code&gt;, you can use &lt;a href=&#34;https://github.com/alfanhui/mbtilesToPngs&#34;&gt;mbtilesToPng&lt;/a&gt; to unpack into &lt;code&gt;/{z}/{x}/{y}.png&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Move this to assets folder and add the appropriate asset directories to &lt;code&gt;pubspec.yaml&lt;/code&gt;. Minimum required fields for this solution are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(ctx) {&#xA;  return FlutterMap(&#xA;    options: MapOptions(&#xA;      center: LatLng(56.704173, 11.543808),&#xA;      zoom: 13.0,&#xA;      swPanBoundary: LatLng(56.6877, 11.5089),&#xA;      nePanBoundary: LatLng(56.7378, 11.6644),&#xA;    ),&#xA;    layers: [&#xA;      TileLayerOptions(&#xA;        tileProvider: AssetTileProvider(),&#xA;        urlTemplate: &#34;assets/offlineMap/{z}/{x}/{y}.png&#34;,&#xA;      ),&#xA;    ],&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A missing asset error will be thrown if the PanBoundaries are outside the offline map boundary.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;code&gt;flutter_map_example/&lt;/code&gt; folder for a working example.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;code&gt;FileTileProvider()&lt;/code&gt;, which loads tiles from the filesystem.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JaffaKetchup/flutter_map_tile_caching&#34;&gt;flutter_map_tile_caching&lt;/a&gt;: Provides ability to properly cache tiles for offline use &amp;amp; easily download a region of a map for later offline use&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lpongetti/flutter_map_marker_cluster&#34;&gt;flutter_map_marker_cluster&lt;/a&gt;: Provides Beautiful Animated Marker Clustering functionality&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/igaurab/user_location_plugin&#34;&gt;user_location&lt;/a&gt;: A plugin to handle and plot the current user location in FlutterMap&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Xennis/flutter_map_location&#34;&gt;flutter_map_location&lt;/a&gt;: A plugin to request and display the users location and heading on the map&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tlserver/flutter_map_location_marker&#34;&gt;flutter_map_location_marker&lt;/a&gt;: A simple and powerful plugin display the users location and heading&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OwnWeb/flutter_map_tappable_polyline&#34;&gt;flutter_map_tappable_polyline&lt;/a&gt;: A plugin to add &lt;code&gt;onTap&lt;/code&gt; callback to &lt;code&gt;Polyline&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mat8854/lat_lon_grid_plugin&#34;&gt;lat_lon_grid_plugin&lt;/a&gt;: Adds a latitude / longitude grid as plugin to the FlutterMap&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rorystephenson/flutter_map_marker_popup&#34;&gt;flutter_map_marker_popup&lt;/a&gt;: A plugin to show customisable popups for markers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OwnWeb/map_elevation&#34;&gt;map_elevation&lt;/a&gt;: A widget to display elevation of a track (polyline) like Leaflet.Elevation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/androidseb/flutter_map_floating_marker_titles&#34;&gt;flutter_map_floating_marker_titles&lt;/a&gt;: Displaying floating marker titles on the map view&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/vector_map_tiles&#34;&gt;vector_map_tiles&lt;/a&gt;: A plugin that enables the use of vector tiles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_map_dragmarker&#34;&gt;flutter_map_dragmarker&lt;/a&gt;: A plugin that enables a marker to be dragged.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_map_line_editor&#34;&gt;flutter_map_line_editor&lt;/a&gt;: A plugin that enables creation/editing of polylines and polygons.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;For the latest roadmap, please see the &lt;a href=&#34;https://github.com/johnpryan/flutter_map/issues&#34;&gt;Issue Tracker&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard</id>
    <link href="https://github.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Responsive Admin Panel or Dashboard using Flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Responsive Admin Panel or Dashboard - Flutter UI&lt;/h1&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/master/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-3-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://abuanwar072.github.io/Flutter-Responsive-Admin-Panel-or-Dashboard/#/&#34;&gt;Live Preview&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Packages we are using:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;flutter_svg: &lt;a href=&#34;https://pub.dev/packages/flutter_svg&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;google_fonts: &lt;a href=&#34;https://pub.dev/packages/google_fonts&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;provider: &lt;a href=&#34;https://pub.dev/packages/provider&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fonts&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Poppins &lt;a href=&#34;https://fonts.google.com/specimen/Poppins&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://youtu.be/_uOgXpEHNbc&#34;&gt;Watch it on YouTube&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;On Flutter V2.* web officially supported on a stable branch. Today I share an Admin panel or you can call it dashboard UI build with flutter. Now you can build your app dashboard using flutter. This dashboard contains almost everything that you need like a chart, table, nice small card for showing info. It works perfectly on the Web, macOS app, Tablet also on both Android and iOS phones. It&#39;s time to code once run everywhere. Yeah, Flutter web is not SEO friendly but we don&#39;t need SEO for the admin panel.&lt;/p&gt; &#xA;&lt;h3&gt;Responsive Admin Panel or Dashboard Final UI&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/master/gif.gif&#34; alt=&#34;Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/master/ui.png&#34; alt=&#34;App UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/simon1tan&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1250858?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Simon Tan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/issues?q=author%3Asimon1tan&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/gillescoolen&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/31668393?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gilles&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/issues?q=author%3Agillescoolen&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RounakTadvi&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/38634459?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rounak Tadvi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/master/#maintenance-RounakTadvi&#34; title=&#34;Maintenance&#34;&gt;🚧&lt;/a&gt; &lt;a href=&#34;https://github.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/commits?author=RounakTadvi&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter/codelabs</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/flutter/codelabs</id>
    <link href="https://github.com/flutter/codelabs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter codelab examples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter codelabs&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flutter/codelabs/actions?workflow=Flutter%20CI&#34;&gt;&lt;img src=&#34;https://github.com/flutter/codelabs/workflows/Flutter%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the code for a variety of &lt;a href=&#34;https://codelabs.developers.google.com/?product=flutter&#34;&gt;Flutter Codelabs&lt;/a&gt;. Here is a list of the codelabs represented here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-adaptive-app&#34;&gt;Adaptive Apps in Flutter&lt;/a&gt; is in &lt;code&gt;adaptive_app&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/google-maps-in-flutter&#34;&gt;Adding Google Maps to a Flutter app&lt;/a&gt; is in &lt;code&gt;google-maps-in-flutter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-in-app-purchases&#34;&gt;Adding in-app purchases to your Flutter app&lt;/a&gt; is in &lt;code&gt;in_app_purchases&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-webview&#34;&gt;Adding WebView to your Flutter app&lt;/a&gt; is in &lt;code&gt;webview_flutter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/google-photos-sharing&#34;&gt;Build a Photo Sharing app with Google Photos and Flutter &lt;/a&gt; is in &lt;code&gt;photos-sharing&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-cupertino&#34;&gt;Building a Cupertino app with Flutter&lt;/a&gt; is in &lt;code&gt;cupertino_store&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/codelabs/firebase-get-to-know-flutter&#34;&gt;Get to know Firebase for Flutter&lt;/a&gt; is in &lt;code&gt;firebase-get-to-know-flutter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-app-testing&#34;&gt;How to test a Flutter app&lt;/a&gt; is in &lt;code&gt;testing_codelab&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/write-flutter-plugin&#34;&gt;How to write a Flutter plugin&lt;/a&gt; is in &lt;code&gt;plugin_codelab&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/web-url-launcher&#34;&gt;Using a plugin with a Flutter web app&lt;/a&gt; is in &lt;code&gt;star_counter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/flutter-github-client&#34;&gt;Write a Flutter desktop application&lt;/a&gt; is in &lt;code&gt;github-client&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1&#34;&gt;Write your first Flutter app, part 1&lt;/a&gt; and &lt;a href=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2&#34;&gt;Write your first Flutter app, part 2&lt;/a&gt; are in &lt;code&gt;startup_namer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/learn/pathways/text-classification-flutter&#34;&gt;Get started with text classification in Flutter apps&lt;/a&gt; pathway is in &lt;code&gt;tfserving-flutter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/tfrecommenders-flutter&#34;&gt;Building a fullstack movie recommendation system&lt;/a&gt; is in &lt;code&gt;tfrs-flutter&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To learn more about setting up Flutter and running apps, see &lt;a href=&#34;https://flutter.dev/docs/get-started&#34;&gt;flutter.dev/get-started&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mitesh77/Best-Flutter-UI-Templates</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/mitesh77/Best-Flutter-UI-Templates</id>
    <link href="https://github.com/mitesh77/Best-Flutter-UI-Templates" rel="alternate"></link>
    <summary type="html">&lt;p&gt;completely free for everyone. Its build-in Flutter Dart.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Best-Flutter-UI-Templates&lt;/h1&gt; &#xA;&lt;p&gt;completely free for everyone. Its build-in Flutter Dart.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/mitesh&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/best_flutter_ui_templates/assets/introduction_animation/introduction_animation.png&#34; alt=&#34;Image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/best_flutter_ui_templates/assets/hotel/hotel_booking.png&#34; alt=&#34;Image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/best_flutter_ui_templates/assets/fitness_app/fitness_app.png&#34; alt=&#34;Image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/images/custom_drawer.png&#34; alt=&#34;Image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/best_flutter_ui_templates/assets/design_course/design_course.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Some Screenshots&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/images/introduction_animation.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/images/hotel_booking.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/images/custom_drawer.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/images/fitness_app.gif&#34; height=&#34;300em&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/images/design_course.gif&#34; height=&#34;300em&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>diegoveloper/flutter-samples</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/diegoveloper/flutter-samples</id>
    <link href="https://github.com/diegoveloper/flutter-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter Samples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Samples&lt;/h1&gt; &#xA;&lt;p&gt;You can follow me on twitter &lt;a href=&#34;https://www.twitter.com/diegoveloper&#34;&gt;@diegoveloper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/diegoveloper&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To build and run this project:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get Flutter &lt;a href=&#34;https://flutter.dev&#34;&gt;here&lt;/a&gt; if you don&#39;t already have it&lt;/li&gt; &#xA; &lt;li&gt;Clone this repository.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into the repo folder.&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;flutter run-android&lt;/code&gt; or &lt;code&gt;flutter run-ios&lt;/code&gt; to build the app.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;(Please note that a Mac with XCode is required to build for iOS)&lt;/p&gt; &#xA;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Logo_of_YouTube_%282015-2017%29.svg/502px-Logo_of_YouTube_%282015-2017%29.svg.png&#34; width=&#34;250&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=bYqeGigTsBw&#34; title=&#34;diegoveloper&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/bYqeGigTsBw/0.jpg&#34; alt=&#34;IMAGE ALT TEXT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FLUTTER SAMPLES&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://medium.com/@diegoveloper/hello-flutter-eb49e9b27916&#34;&gt;&lt;strong&gt;Hello Flutter&lt;/strong&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://medium.com/@diegoveloper/flutter-splash-screen-9f4e05542548&#34;&gt;&lt;strong&gt;Splash screen in Flutter&lt;/strong&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/1600/1*Px0kTaFj9fnY2VJdrWGJgA.gif&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/1600/1*GfM4eb_y_rM6BaAgDYBWZA.gif&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://medium.com/@diegoveloper/flutter-fetching-parsing-json-data-c019ddddaa34&#34;&gt;&lt;strong&gt;Fetching &amp;amp; Parsing JSON data&lt;/strong&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://medium.com/@diegoveloper/flutter-persistent-tab-bars-a26220d322bc&#34;&gt;&lt;strong&gt;Persistent Tab bars&lt;/strong&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/1600/1*KJKHYTFubWr2vamVczhQ_Q.gif&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/1600/1*s0gi3k5upbW-o88cgW61gg.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://medium.com/@diegoveloper/flutter-collapsing-toolbar-sliver-app-bar-14b858e87abe&#34;&gt;&lt;strong&gt;Collapsing Toolbar - Sliver App Bar&lt;/strong&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://medium.com/@diegoveloper/flutter-shared-element-transitions-hero-heroes-f1a083cb123a&#34;&gt;&lt;strong&gt;Shared Element Transitions — Hero&lt;/strong&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/1600/1*xtROWw7cWRrK5b7tPbw2mg.gif&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/1600/1*IeAD2e0hM_QThzry3v1FMw.gif&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://medium.com/@diegoveloper/flutter-lets-know-the-scrollcontroller-and-scrollnotification-652b2685a4ac&#34;&gt;&lt;strong&gt;ScrollController and ScrollNotification&lt;/strong&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://medium.com/@diegoveloper/flutter-app-clone-android-messages-e4b034a6c893&#34;&gt;&lt;strong&gt;App Clone - Android Messages&lt;/strong&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/1600/1*_QUSvcpBYYX8v_SiXWpeRA.gif&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/1600/1*Rb2ATV7nL0lO5K2VcF1NVw.gif&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-communication-between-widgets-f5590230df1e&#34;&gt;&lt;strong&gt;Communication between widgets&lt;/strong&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Animations / Foldable Page&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/1600/1*kIZJa1_i0OcsqymMxk04zA.gif&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/e5Xc8eQQCwyF5AoG7U/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Animations / List-Detail&lt;/th&gt; &#xA;   &lt;th&gt;Animations / Circular List/&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/YrquS6qE7hXmAD82Bf/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/iNwDIyUWQ9tDo10tJ6/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;App Clone / Twitter Profile Clone&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://medium.com/@diegoveloper/flutter-increase-the-power-of-your-appbar-sliverappbar-c4f67c4e076f&#34;&gt;Custom AppBar &amp;amp; SliverAppBar&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/JH0WO8BWjl6rxwcols/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/jRwXjfQDEnnMLbrVL1/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Animations / Split Widgets&lt;/th&gt; &#xA;   &lt;th&gt;Animations / Custom Sliver Header&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/fWqRy75Zg5lEtP5qkc/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/JOXClC3XFwHosWAVqX/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Menu Navigations / Header Navigation&lt;/th&gt; &#xA;   &lt;th&gt;Animations / Turn on the light&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/f5SP7mJnO4x9mK4CSv/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/VgSfLeabru2qTerOrp/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Animations / Hide my widgets&lt;/th&gt; &#xA;   &lt;th&gt;Animations / Menu Exploration&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/h4x6fHw65l3KdnDrTi/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/Y07CGmYvcNyl9rkgbY/giphy.gif&#34; width=&#34;250&#34;&gt;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;  &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;App Clone / Photo Concept&lt;/th&gt; &#xA;   &lt;th&gt;App Clone / Movies Concept&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/XybRawN2vj4YV3fhul/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/UuNiEk20TKjn4F4H7a/giphy.gif&#34; width=&#34;250&#34;&gt;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;  &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;App Clone / Sports Store&lt;/th&gt; &#xA;   &lt;th&gt;App Clone / Shoes Store&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/RJn8BMmOzfaW101iS2/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/MeP49gjvFbUDShkzJM/giphy.gif&#34; width=&#34;250&#34;&gt;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;  &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;App Clone / Album Flow&lt;/th&gt; &#xA;   &lt;th&gt;App Clone / Credit Cards Concept&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/emGlZPMbFpkNDrFuO7/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/UrsStRAMXOT93wwyP2/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://medium.com/@diegoveloper/flutter-sliverappbar-with-stretchy-header-9ca04f316ff0&#34;&gt;Custom AppBar &amp;amp; SliverAppBar&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=VXdpxnjmy0M&#34;&gt;App Clone / Travel Concept Demo&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/QuIvsrhjCr4oPS49qa/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/gF30YeWCn0Ncf0qxCS/giphy.gif&#34; width=&#34;250&#34;&gt;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=becUP_s-KfU&#34;&gt;Animations / Shrink Top List&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Animations / Neon Button&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://media.giphy.com/media/XFproCCYQ9eDR416g1/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt;&#xA;     &lt;img src=&#34;https://media.giphy.com/media/L1W2zwjOZAbVadQU56/giphy.gif&#34; width=&#34;250&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>abuanwar072/Welcome-Login-Signup-Page-Flutter</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/abuanwar072/Welcome-Login-Signup-Page-Flutter</id>
    <link href="https://github.com/abuanwar072/Welcome-Login-Signup-Page-Flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mobile app onboarding, Login, Signup page with #flutter.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome page, Login Page and Sign up page - Flutter UI&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://youtu.be/ExKYjqgswJg&#34;&gt;Watch it on YouTube&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Packages we are using:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;flutter_svg: &lt;a href=&#34;https://pub.dev/packages/flutter_svg&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We design 3 screens first one is a welcome screen like then user open your app it shows then users have two options, if he has an account then press the login button and it just shifts him to the login screen or if he or she don&#39;t have an account then press signup button its transfers to the signup screen.&lt;/p&gt; &#xA;&lt;h3&gt;Auth UI&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/Welcome-Login-Signup-Page-Flutter/master/UI.png&#34; alt=&#34;App UI&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TheAlphamerc/flutter_ecommerce_app</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/TheAlphamerc/flutter_ecommerce_app</id>
    <link href="https://github.com/TheAlphamerc/flutter_ecommerce_app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;E-Commerce App built in flutter&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;flutter_ecommerce_app&lt;/h2&gt; &#xA;&lt;p&gt;E-Commerce app is a design implementaion of &lt;a href=&#34;https://dribbble.com/shots/10446127-E-commerce-App-Exploration/attachments/2283107?mode=media&#34;&gt;E-commerce App&lt;/a&gt; designed by &lt;a href=&#34;https://dribbble.com/Saif_Uddin_Imran&#34;&gt;Imran&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hits.seeyoufarm.com&#34;&gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2FTheAlphamerc%2Fflutter_ecommerce_app&amp;amp;count_bg=%2379C83D&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=hits&amp;amp;edge_flat=false&#34; alt=&#34;Hits&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/workflows/Dart%20CI/badge.svg?sanitize=true&#34; alt=&#34;Dart CI&#34;&gt; &lt;a href=&#34;https://github.com/Thealphamerc/flutter_ecommerce_app&#34;&gt;&lt;img src=&#34;https://badges.frapsoft.com/os/v2/open-source.svg?v=103&#34; alt=&#34;Open Source Love&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/twitter/url?style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fthealphamerc&#34; alt=&#34;Twitter URL&#34;&gt; &lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_ecommerce_app&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_ecommerce_app?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/forks/TheAlphamerc/flutter_ecommerce_app?style=social&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download App &lt;img src=&#34;https://img.shields.io/github/downloads/Thealphamerc/flutter_ecommerce_app/total?color=green&#34; alt=&#34;GitHub All Releases&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/releases/download/v1.0.0/app-release.apk&#34;&gt;&lt;img src=&#34;https://playerzon.com/asset/download.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://cdn.dribbble.com/users/2432994/screenshots/10446127/media/fa0a9ce348e0bfa18b00ba2240543064.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Android Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;HomePage&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Product Detail Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Cart Page&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/raw/master/screenshots/screenshot_1.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/raw/master/screenshots/screenshot_2.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/raw/master/screenshots/screenshot_3.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;iOS Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;HomePage&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Product Detail Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Cart Page&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/raw/master/screenshots/screenshot_ios_1.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/raw/master/screenshots/screenshot_ios_2.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/raw/master/screenshots/screenshot_ios_3.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;lib&#xA;│───main.dart    &#xA;└───src&#xA;    │───config&#xA;    |    └──route.dart&#xA;    │───model&#xA;    │    │──category.dart&#xA;    |    │──data.dart&#xA;    |    └──product.dart&#xA;    │───pages&#xA;    |    │──homePage.dart&#xA;    |    │──mainPage.dart&#xA;    |    │──product_detail.dart&#xA;    |    └──shoping_cart_page.dart&#xA;    │───theme&#xA;    |    │──light_color.dart&#xA;    |    └──theme.dart&#xA;    └───widgets&#xA;         │──BottomNavigationBar&#xA;         |   |──bootom_navigation_bar.dart&#xA;         |   |──bottom_curved_Painter.dart&#xA;         |   └──centered_elasticIn_curve.dart&#xA;         |──bottom_navigation_bar.dart&#xA;         |  customRoute.dart&#xA;         |  prduct_icon.dart&#xA;         │──product_card.dart&#xA;         └──title_text.dart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pull Requests&lt;/h2&gt; &#xA;&lt;p&gt;I welcome and encourage all pull requests. It usually will take me within 24-48 hours to respond to any issue or request.&lt;/p&gt; &#xA;&lt;h2&gt;Flutter projects&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Project Name&lt;/th&gt; &#xA;   &lt;th&gt;Stars&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone&#34;&gt;Twitter clone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_twitter_clone&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_twitter_clone?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_healthcare_app&#34;&gt;Healthcare App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_healthcare_app&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_healthcare_app?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_smart_course&#34;&gt;Smart course&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_smart_course&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_smart_course?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_pokedex&#34;&gt;Pokedex&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_pokedex&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_pokedex?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_login_signup&#34;&gt;Authentication&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_login_signup&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_login_signup?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_wallet_app&#34;&gt;Wallet App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_wallet_app&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_wallet_app?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_news_app&#34;&gt;News App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_news_app&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_news_app?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_SoftUI_watchApp&#34;&gt;Watch App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_SoftUI_watchApp&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_SoftUI_watchApp?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_smart_home_app&#34;&gt;Smart Home App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_smart_home_app&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_smart_home_app?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_yatch_booking&#34;&gt;Yatch Booking App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_yatch_booking&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_yatch_booking?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Flutter plugins&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Plugin Name&lt;/th&gt; &#xA;   &lt;th&gt;Stars&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/empty_widget&#34;&gt;Empty widget&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%empty_widget&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/empty_widget?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_plugin_add_thumbnail&#34;&gt;Add Thumbnail&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_plugin_add_thumbnail&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_plugin_add_thumbnail?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_plugin_filter_list&#34;&gt;Filter List&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_plugin_filter_list&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_plugin_filter_list?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Created &amp;amp; Maintained By&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TheAlphamerc&#34;&gt;Sonu Sharma&lt;/a&gt; (&lt;a href=&#34;https://www.twitter.com/TheAlphamerc&#34;&gt;Twitter&lt;/a&gt;) (&lt;a href=&#34;https://www.youtube.com/user/sonusharma045sonu/&#34;&gt;Youtube&lt;/a&gt;) (&lt;a href=&#34;https://www.instagram.com/_sonu_sharma__&#34;&gt;Insta&lt;/a&gt;) (&lt;a href=&#34;https://dev.to/thealphamerc&#34;&gt;Dev.to&lt;/a&gt;) &lt;img src=&#34;https://img.shields.io/twitter/follow/thealphamerc?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you found this project helpful or you learned something from the source code and want to thank me, consider buying me a cup of &lt;span&gt;☕&lt;/span&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.paypal.me/TheAlphamerc/&#34;&gt;PayPal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can also nominate me for Github Star developer program &lt;a href=&#34;https://stars.github.com/nominate&#34;&gt;https://stars.github.com/nominate&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Visitors Count&lt;/h2&gt; &#xA;&lt;img align=&#34;left&#34; src=&#34;https://profile-counter.glitch.me/flutter_ecommerce_app/count.svg?sanitize=true&#34; alt=&#34;Loading&#34;&gt;</summary>
  </entry>
  <entry>
    <title>xdd666t/flutter_use</title>
    <updated>2022-05-30T01:37:04Z</updated>
    <id>tag:github.com,2022-05-30:/xdd666t/flutter_use</id>
    <link href="https://github.com/xdd666t/flutter_use" rel="alternate"></link>
    <summary type="html">&lt;p&gt;some trick used by flutter | Flutter使用的一些骚操作&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/CNAD666/flutter_use&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/CNAD666/flutter_use?logo=github&#34; alt=&#34;stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CNAD666/flutter_use/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/CNAD666/flutter_use?logo=github&#34; alt=&#34;issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;效果地址&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Web：&lt;a href=&#34;https://xdd666t.github.io/flutter_use/web/index.html&#34;&gt;https://xdd666t.github.io/flutter_use/web/index.html&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;编译的web代码及其资源在docs文件夹下，这边github page路径选择的是docs&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Windows：&lt;a href=&#34;https://wwa.lanzoui.com/b099z6w6d&#34;&gt;Windows平台安装包&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;密码：xdd666&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;代码路径&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;代码规范：&lt;a href=&#34;https://juejin.cn/post/6939774499399139336&#34;&gt;Flutter 改善套娃地狱问题（仿喜马拉雅PC页面举例）&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;每一个靓仔应该去了解了解的奇技淫巧&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;├─lib&#xA;│  ├─module&#xA;│  │  ├─function&#xA;│  │  │  ├─himalaya       ///仿喜马拉雅PC代码在此目录下&#xA;│  │  │  │  └─widget&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;一个更优雅的Flutter Dialog解决方案：&lt;a href=&#34;https://juejin.cn/post/7026150456673959943&#34;&gt;这一次，解决Flutter Dialog的各种痛点！&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;简洁，强大，侵入性极低的Flutter Dialog解决方案&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;├─lib&#xA;│  ├─module&#xA;│  │  ├─function&#xA;│  │  │  ├─smart_dialog   ///SmartDialog功能演示demo代码在此目录下&#xA;│  │  │  │  └─widget&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GetX &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;使用篇：&lt;a href=&#34;https://juejin.cn/post/6924104248275763208&#34;&gt;Flutter GetX使用---简洁的魅力！&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;源码篇：&lt;a href=&#34;https://juejin.cn/post/6984593635681517582&#34;&gt;Flutter GetX深度剖析 | 我们终将走出自己的路（万字图文）&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;├─lib&#xA;│  ├─module&#xA;│  │  ├─example&#xA;│  │  │  ├─getx                 ///getx演示代码在此目录下&#xA;│  │  │  │  ├─auto_dispose&#xA;│  │  │  │  ├─counter_binding&#xA;│  │  │  │  ├─counter_easy&#xA;│  │  │  │  ├─counter_high_get&#xA;│  │  │  │  ├─counter_rx&#xA;│  │  │  │  ├─easy_x&#xA;│  │  │  │  │  ├─easy_builder&#xA;│  │  │  │  │  └─ebx&#xA;│  │  │  │  ├─easy_x_builder&#xA;│  │  │  │  ├─easy_x_ebx&#xA;│  │  │  │  ├─jump_page&#xA;│  │  │  │  │  ├─jump_one&#xA;│  │  │  │  │  └─jump_two&#xA;│  │  │  │  └─widget&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Provider：Provider的刷新机制真的很有趣！&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;使用+源码深度剖析：&lt;a href=&#34;https://juejin.cn/post/6968272002515894303&#34;&gt;Flutter Provider的另一面（万字图文）&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;├─lib&#xA;│  ├─module&#xA;│  │  ├─example&#xA;│  │  │  ├─provider        /// provider演示代码在此目录下&#xA;│  │  │  │  ├─counter_easy&#xA;│  │  │  │  ├─counter_high&#xA;│  │  │  │  ├─custom_builder&#xA;│  │  │  │  ├─easy_p&#xA;│  │  │  │  ├─easy_p_counter&#xA;│  │  │  │  ├─easy_p_counter_global&#xA;│  │  │  │  ├─span_page&#xA;│  │  │  │  │  ├─span_one&#xA;│  │  │  │  │  └─span_two&#xA;│  │  │  │  └─test_notifier&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bloc &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;使用篇：&lt;a href=&#34;https://juejin.cn/post/6856268776510504968&#34;&gt;flutter_bloc使用解析---骚年，你还在手搭bloc吗！&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;源码篇：&lt;a href=&#34;https://juejin.cn/post/6973900070358319135&#34;&gt;Flutter Bloc背后的思想&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;├─lib&#xA;│  ├─module&#xA;│  │  ├─common&#xA;│  │  │  └─widget&#xA;│  │  ├─example&#xA;│  │  │  ├─bloc               ///bloc演示代码在此目录下&#xA;│  │  │  │  ├─counter_bloc&#xA;│  │  │  │  ├─counter_cubit&#xA;│  │  │  │  ├─custom_builder&#xA;│  │  │  │  ├─easy_c&#xA;│  │  │  │  ├─easy_c_counter&#xA;│  │  │  │  ├─span_page&#xA;│  │  │  │  │  ├─span_one&#xA;│  │  │  │  │  └─span_two&#xA;│  │  │  │  └─stream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;关于编译&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;因为引用了：window_size 依赖，可能会导致编译运行报错（window上），进行下述设置即可解决 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Window 10系统：设置 -&amp;gt; 更新和安全 -&amp;gt; 开发者选项 -&amp;gt; 开发人员模式：从任意元（包括松散文件）安装应用 -&amp;gt; 开启即可&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CNAD666/MyData/pic/flutter/blog/20210309154345.png&#34; alt=&#34;image-20210309154335161&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;打包操作&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;android（关闭R8压缩） &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;flutter build apk --no-shrink&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;ios（生成 .app ，然后 在 XCode 执行 打包 操作） &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;flutter build ios --release&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;web：使用CanvasKit模式 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;flutter build web --web-renderer canvaskit&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>