<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-23T01:30:42Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Jayjerome/Task_manager_application</title>
    <updated>2024-01-23T01:30:42Z</updated>
    <id>tag:github.com,2024-01-23:/Jayjerome/Task_manager_application</id>
    <link href="https://github.com/Jayjerome/Task_manager_application" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Task Manager App is a Flutter mobile application designed to help users manage their tasks efficiently. The app utilizes the Bloc architecture for state management and incorporates error handling for a smooth user experience.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/Jayjerome/Task_manager_application/assets/42614202/068af056-f6ee-4d4b-a6f5-d070f666a18f&#34; alt=&#34;Frame 3&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Task Manager App&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The Task Manager App is a Flutter mobile application designed to help users manage their tasks efficiently. The app utilizes the Bloc architecture for state management and incorporates error handling for a smooth user experience.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Add New Task:&lt;/strong&gt; Easily add new tasks with titles, descriptions, start and end dates.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Edit and Delete Tasks:&lt;/strong&gt; Each tasks created can be edited and deleted.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sort and Search:&lt;/strong&gt; Sort tasks by date or completion status, and search for specific tasks using keywords.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Error Handling:&lt;/strong&gt; The app includes error handling mechanisms to gracefully handle and display errors to users.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure you have Flutter installed on your machine. If not, follow the &lt;a href=&#34;https://flutter.dev/docs/get-started/install&#34;&gt;Flutter installation guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository to your local machine.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a terminal and navigate to the project directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following command to install dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter pub get&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Run the app on an emulator or physical device using the following command:&lt;/p&gt; &#xA;&lt;p&gt;flutter run&lt;/p&gt; &#xA;&lt;h3&gt;State Management&lt;/h3&gt; &#xA;&lt;p&gt;The app uses the Bloc architecture for efficient state management. Key Bloc classes include:&lt;/p&gt; &#xA;&lt;p&gt;TasksBloc: Manages the overall state of tasks in the application. TasksEvent: Represents events triggering state changes. TasksState: Represents different states of the tasks, such as loading, success, or failure.&lt;/p&gt; &#xA;&lt;h3&gt;Error Handling&lt;/h3&gt; &#xA;&lt;p&gt;Error handling is implemented throughout the app to ensure a seamless user experience. The LoadTaskFailure, AddTaskFailure, and UpdateTaskFailure states provide details about errors encountered during data loading, task creation, and task updates.&lt;/p&gt; &#xA;&lt;h3&gt;Unit Test&lt;/h3&gt; &#xA;&lt;p&gt;Unit test has been integrated to test all functionalities from initial state to creating new task, updating task and deleting task&lt;/p&gt;</summary>
  </entry>
</feed>