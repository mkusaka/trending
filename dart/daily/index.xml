<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-11T01:31:10Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Cateners/tiny_computer</title>
    <updated>2024-01-11T01:31:10Z</updated>
    <id>tag:github.com,2024-01-11:/Cateners/tiny_computer</id>
    <link href="https://github.com/Cateners/tiny_computer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Click-to-run debian 12 xfce on android for Chinese users, with fcitx pinyin input method and some useful packages preinstalled. No termux required.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;小小电脑&lt;/h1&gt; &#xA;&lt;img decoding=&#34;async&#34; src=&#34;https://raw.githubusercontent.com/Cateners/tiny_computer/master/readme/cover0.png&#34; width=&#34;50%&#34;&gt; &#xA;&lt;p&gt;给所有安卓arm64设备的“PC应用引擎”平替&lt;/p&gt; &#xA;&lt;p&gt;Click-to-run debian bookworm xfce on android for Chinese users, with fcitx pinyin input method preinstalled. No termux required.&lt;/p&gt; &#xA;&lt;h2&gt;特点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;一键安装，即开即用&lt;/li&gt; &#xA; &lt;li&gt;来自kali-undercover的win10主题(仅xfce版本)，友好的界面&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img decoding=&#34;async&#34; src=&#34;https://raw.githubusercontent.com/Cateners/tiny_computer/master/readme/img1.png&#34; width=&#34;50%&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;提供常用软件的一键安装指令&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img decoding=&#34;async&#34; src=&#34;https://raw.githubusercontent.com/Cateners/tiny_computer/master/readme/img2.png&#34; width=&#34;50%&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可方便地改变屏幕缩放，不用担心屏幕过大或过小&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img decoding=&#34;async&#34; src=&#34;https://raw.githubusercontent.com/Cateners/tiny_computer/master/readme/img3.gif&#34; width=&#34;50%&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;便捷访问设备文件，或通过设备SAF访问软件文件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img decoding=&#34;async&#34; src=&#34;https://raw.githubusercontent.com/Cateners/tiny_computer/master/readme/img4.png&#34; width=&#34;50%&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;提供终端和众多可调节参数供高级用户使用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img decoding=&#34;async&#34; src=&#34;https://raw.githubusercontent.com/Cateners/tiny_computer/master/readme/img5.png&#34; width=&#34;50%&#34;&gt; &#xA;&lt;h2&gt;原理&lt;/h2&gt; &#xA;&lt;p&gt;使用proot运行debian环境&lt;/p&gt; &#xA;&lt;p&gt;内置&lt;a href=&#34;https://github.com/novnc/noVNC&#34;&gt;noVNC&lt;/a&gt;显示图形界面&lt;/p&gt; &#xA;&lt;h2&gt;项目结构&lt;/h2&gt; &#xA;&lt;p&gt;assets的文件来源信息可以在&lt;a href=&#34;https://raw.githubusercontent.com/Cateners/tiny_computer/master/extra/readme.md&#34;&gt;这里&lt;/a&gt;找到。&lt;/p&gt; &#xA;&lt;p&gt;完整的容器制作过程可以在&lt;a href=&#34;https://raw.githubusercontent.com/Cateners/tiny_computer/master/extra/build-tiny-rootfs.md&#34;&gt;这里&lt;/a&gt;看到。&lt;/p&gt; &#xA;&lt;p&gt;数据包不再在assets中更新，而是随releases提供，主要是为了避免git越来越大&lt;/p&gt; &#xA;&lt;p&gt;lib目录：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;main.dart文件，页面布局，有点乱&lt;/li&gt; &#xA; &lt;li&gt;workflow.dart文件，逻辑部分，目前也还可以理解 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Util 工具类&lt;/li&gt; &#xA;   &lt;li&gt;TermPty 一个终端&lt;/li&gt; &#xA;   &lt;li&gt;G 全局变量类&lt;/li&gt; &#xA;   &lt;li&gt;Workflow 从软件点开到容器启动的所有步骤&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;编译&lt;/h2&gt; &#xA;&lt;p&gt;你需要配置好flutter和安卓sdk，然后克隆此项目。&lt;/p&gt; &#xA;&lt;p&gt;在编译之前，需要在release中下载系统rootfs(或者&lt;a href=&#34;https://raw.githubusercontent.com/Cateners/tiny_computer/master/extra/build-tiny-rootfs.md&#34;&gt;自行制作&lt;/a&gt;)，之后使用split命令分割，拷贝到assets。一般我将其分为98MB。&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;split -b 98M debian.tar.xz&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;然后修改workflow的代码，找到复制资源的部分，把生成的xa*名字写进去(我还不知道怎么写代码识别有多少个xa*文件)&lt;/p&gt; &#xA;&lt;p&gt;接下来就可以编译了。我使用的命令如下：&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;flutter build apk --target-platform android-arm64 --split-per-abi --obfuscate --split-debug-info=tiny_computer/sdi&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;目前已知bug&lt;/h2&gt; &#xA;&lt;p&gt;多用户/分身情形无法sudo, 其它见issue&lt;/p&gt; &#xA;&lt;h2&gt;一些链接&lt;/h2&gt; &#xA;&lt;p&gt;这是我的第一个flutter软件，感谢这些项目为我指路&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;要一点基础的 &lt;a href=&#34;https://book.flutterchina.club&#34;&gt;《Flutter实战·第二版》&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;也许是零基础的Flutter视频课程 &lt;a href=&#34;https://www.youtube.com/watch?v=wFn-m-OgKPU&amp;amp;list=PL6yRaaP0WPkVtoeNIGqILtRAgd3h2CNpT&#34;&gt;freeCodeCamp Flutter Course&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安卓上的VS Code &lt;a href=&#34;https://github.com/nightmare-space/vscode_for_android&#34;&gt;Code FA&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This project is a starting point for a Flutter application.&lt;/p&gt; &#xA;&lt;p&gt;A few resources to get you started if this is your first Flutter project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.flutter.dev/get-started/codelab&#34;&gt;Lab: Write your first Flutter app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.flutter.dev/cookbook&#34;&gt;Cookbook: Useful Flutter samples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For help getting started with Flutter development, view the &lt;a href=&#34;https://docs.flutter.dev/&#34;&gt;online documentation&lt;/a&gt;, which offers tutorials, samples, guidance on mobile development, and a full API reference.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>daegalus/formler</title>
    <updated>2024-01-11T01:31:10Z</updated>
    <id>tag:github.com,2024-01-11:/daegalus/formler</id>
    <link href="https://github.com/daegalus/formler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A form parser for Dart.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/Daegalus/formler&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Daegalus/formler.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;formler&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/Daegalus/formler?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/Daegalus/formler&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simple form data parser.&lt;/p&gt; &#xA;&lt;p&gt;Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Handles multipart/form-data content.&lt;/li&gt; &#xA; &lt;li&gt;Handles x-www-urlencoded form content.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://daegalus.github.com/annotated/formler/formler/formler.html&#34;&gt;Annotated source code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Pubspec&lt;/h3&gt; &#xA;&lt;p&gt;pub.dartlang.org: (you can use &#39;any&#39; instead of a version if you just want the latest always)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  formler: 1.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:formler/formler.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start parsing ...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Parse a Multipart form&#xA;Formler formler = new Formler(bytes, &#34;--someBoundaryStuff&#34;);&#xA;Map form = formler.parse(); // -&amp;gt; {fieldName: .... }&#xA;&#xA;// Parse a UrlEncoded form&#xA;Formler.parseUrlEncoded(&#34;username=someValue+other%26val&amp;amp;password=eqwdawd9&#34;); // -&amp;gt; { &#34;username&#34;: &#34;someValue other&amp;amp;val&#34;, &#34;password&#34;: &#34;eqwdawd9&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;h3&gt;new Formler(List&#xA; &lt;int&gt;&#xA;   bytes, String boundary)&#xA; &lt;/int&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Creates a new Formler instance with the byte contents of the request and the boundary from the contentType.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;bytes&lt;/code&gt; - (List&#xA;  &lt;int&gt;&#xA;   ) A list of bytes respresnting the POST form data.&#xA;  &lt;/int&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Returns the new instance of &lt;code&gt;Formler&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;formler.parse()&lt;/h3&gt; &#xA;&lt;p&gt;Actually does the parsing of the data and creates the data map of the contents.&lt;/p&gt; &#xA;&lt;p&gt;Returns &lt;code&gt;Map&lt;/code&gt; representation of the parsed data.&lt;/p&gt; &#xA;&lt;h3&gt;(static) Formler.parseUrlEncoded(String postBody, [bool printErrors = true])&lt;/h3&gt; &#xA;&lt;p&gt;Parses a UrlEncoded post body string.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;postBody&lt;/code&gt; - (String) A string of key/urlencoded value pairs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;printErrors&lt;/code&gt; - (Bool) Set to false if you don&#39;t want Formler to print warnings to STDOUT. Default is true.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Returns &lt;code&gt;Map&lt;/code&gt; representation of the parsed Data&lt;/p&gt; &#xA;&lt;p&gt;Example: Encode a hex string.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;In dartvm&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dart test\formler_test.dart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In Browser&lt;/p&gt; &#xA;&lt;p&gt;At the moment, this package does not work client-side as it uses server-side only UInt8Lists. I might have to wait till UInt8Arrays and UInt8Lists are merged into 1&lt;/p&gt; &#xA;&lt;h2&gt;Release notes&lt;/h2&gt; &#xA;&lt;p&gt;v0.1.2&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pull Request accepted to fix package versions for increased compatibility.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.1.1&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fix empty string and handle malformed urlencoded strings gracefully.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.1.0&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dart 1.0 Readiness&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.0.8&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixing analyzer complaints.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.0.7&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixing package changes for Crypto and URI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.0.6&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Including fixes for TypedData and Regex and also switched to useing the Base64 Decode built into Crypto now.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.0.5&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Accepted pull request to add multi-file support. Must have overlooked this in my excitement to get this parser working.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.0.4&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixing an import/part issue that affected Fukiya.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.0.3&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Binary file upload parsing bug fixed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.0.2&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Parsing Bugs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.0.1&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Initial Release&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>bagisto/opensource-ecommerce-mobile-app</title>
    <updated>2024-01-11T01:31:10Z</updated>
    <id>tag:github.com,2024-01-11:/bagisto/opensource-ecommerce-mobile-app</id>
    <link href="https://github.com/bagisto/opensource-ecommerce-mobile-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source eCommerce Mobile App&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://www.bagisto.com&#34;&gt;&lt;img src=&#34;https://bagisto.com/wp-content/themes/bagisto/images/logo.png&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=bagistoshop&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/bagistoshop?style=social&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/channel/UCbrfqnhyiDv-bb9QuZtonYQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/youtube/channel/subscribers/UCbrfqnhyiDv-bb9QuZtonYQ?style=social&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Open Source eCommerce Mobile App&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bagisto.com/en/&#34;&gt;Bagisto&lt;/a&gt; revolutionizes the world of mobile commerce with its open-source eCommerce mobile app solution. This app seamlessly transforms your Bagisto store into a powerful mobile platform, providing real-time synchronization of products and categories. With a user-friendly interface, managing orders becomes a breeze, making it an essential tool for both tech-savvy individuals and those new to eCommerce.&lt;/p&gt; &#xA;&lt;p&gt;This mobile app, built on the foundation of the Bagisto eCommerce framework and leveraging the robust Laravel stack, offers a plethora of features for a comprehensive and efficient mobile shopping experience. The app ensures easy product information management and accelerates time-to-market for your products, all while giving you complete control over your store.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Multi-locale support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Product share&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Product Search&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Wishlist&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compare Product&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;All Type Product Supported&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Multi-Currency Support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Dark Mode Supported&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Product Review&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Coupons Supported&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Guest Checkout&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Push Notification&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Complete Customer end features of the ecommerce app&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compatible with Bagisto v2.0.0&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation Guide&lt;/h2&gt; &#xA;&lt;p&gt;Before beginning with the installation, you will need the following with the mentioned versions&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bagisto Version - v2.0.0&lt;/li&gt; &#xA; &lt;li&gt;Android Studio Version - Flamingo | 2022.2.1&lt;/li&gt; &#xA; &lt;li&gt;Flutter Version - 3.10.1&lt;/li&gt; &#xA; &lt;li&gt;Dart - 3.0.1&lt;/li&gt; &#xA; &lt;li&gt;Xcode - 14.3&lt;/li&gt; &#xA; &lt;li&gt;Swift - 5&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Make sure you have installed the API module and set this up properly on your bagisto.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: It is recommended that you run a simple Hello World program in Flutter first before proceeding further so that you are sure that the environment is properly set up.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation Steps&lt;/h2&gt; &#xA;&lt;h3&gt;Clone the repository&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open your terminal or command prompt&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the directory where you want to save the project&lt;/li&gt; &#xA; &lt;li&gt;Use the git clone command followed by the repository URL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/bagisto/opensource-ecommerce-mobile-app.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Navigate to the project&#39;s directory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd &amp;lt;repository-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following command to install the required packages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flutter pub get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Connect a device or emulator&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Physical Device&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Enable USB debugging on your device&lt;/li&gt; &#xA;   &lt;li&gt;Connect it to your computer using a USB cable.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Emulator&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Start an Android or iOS emulator using your preferred IDE or tools.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run the Project&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the following command to build and run the project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flutter run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Minimum Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android: 21&lt;/li&gt; &#xA; &lt;li&gt;iOS: 12&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configurations Steps&lt;/h2&gt; &#xA;&lt;h3&gt;For Setup&lt;/h3&gt; &#xA;&lt;p&gt;Change the baseUrl as per your store&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Path:&lt;/strong&gt; lib/utils/server_configuration.dart&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;static const String baseUrl = ‘....’;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: Add the value of the complete URL ending with the GraphQL API endpoint. E.g - &lt;a href=&#34;https://example.com/public/graphql&#34;&gt;https://example.com/public/graphql&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;For Theme&lt;/h3&gt; &#xA;&lt;p&gt;Change the Theme for your app&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Path:&lt;/strong&gt; lib/utils/mobikul_theme.dart&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;static const Color primaryColor = Color(***********);  &#xA;static const Color accentColor = Color(***********); &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;For Push Notification Service&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Replace &#34;google-services.json&#34;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Replace &#34;GoogleService-Info.plist&#34;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Helpful Articles&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Android → &lt;a href=&#34;https://mobikul.com/knowledgebase/generating-google-service-file-enable-fcm-firebase-cloud-messaging-android-application/&#34;&gt;https://mobikul.com/knowledgebase/generating-google-service-file-enable-fcm-firebase-cloud-messaging-android-application/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;iOS → &lt;a href=&#34;https://mobikul.com/knowledgebase/generating-new-googleservice-info-plist-file-fcm-based-project-ios-app/&#34;&gt;https://mobikul.com/knowledgebase/generating-new-googleservice-info-plist-file-fcm-based-project-ios-app/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;For Application Title&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Android&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Path:&lt;/strong&gt; android/app/src/main/AndroidManifest.xml&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Change app name:&lt;/strong&gt; android:label=&#34;***********&#34;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;iOS&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Go to the general tab and identity change the display name to your app name&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For Homepage Header Title - Go to ‘assets/language/en.json’ (Note: Here, “en” in en.json refers to the languages that would be supported within the application)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;For Splash Screen&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For adding Lottie as Splash Screen&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Path:&lt;/strong&gt; assets/lottie/splash_screen.json&lt;/li&gt; &#xA;   &lt;li&gt;After updating the Lottie file, update the ‘splashLottie’ in lib/utils/assets_constants.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt; static const String splashLottie = &#34;assets/lottie/splash_screen.json&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For adding an Image as a Splash Screen&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Path:&lt;/strong&gt; assets/images/splash.png&lt;/li&gt; &#xA;   &lt;li&gt;After updating the Image file, update the ‘splashImage’ in lib/utils/assets_constants.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;  static const String splashImage = &#34;assets/images/splash.png&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;For App Icon&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Android:&lt;/strong&gt; open the Android folder right click app &amp;gt; new &amp;gt; Image Asset set Image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;iOS:&lt;/strong&gt; ios/Runner/Assets.xcassets/AppIcon.appiconset&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For the API Documentation, please go through - &lt;a href=&#34;https://github.com/bagisto/headless-ecommerce/&#34;&gt;https://github.com/bagisto/headless-ecommerce/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;For detailed usage instructions, refer to the official documentation&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Follow the contribution guidelines to get started.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Bagisto is open-sourced software licensed under the MIT license.&lt;/p&gt;</summary>
  </entry>
</feed>