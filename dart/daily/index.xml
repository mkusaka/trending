<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-19T01:31:37Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TheLastGimbus/GooglePhotosTakeoutHelper</title>
    <updated>2022-12-19T01:31:37Z</updated>
    <id>tag:github.com,2022-12-19:/TheLastGimbus/GooglePhotosTakeoutHelper</id>
    <link href="https://github.com/TheLastGimbus/GooglePhotosTakeoutHelper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Script that organizes the Google Takeout archive into one big chronological folder&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/gpth-bin&#34;&gt;&lt;img src=&#34;https://img.shields.io/aur/version/gpth-bin&#34; alt=&#34;AUR&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.me/TheLastGimbus&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-blue.svg?logo=paypal&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Google Photos Takeout Helper&lt;/h1&gt; &#xA;&lt;h2&gt;What is this for?&lt;/h2&gt; &#xA;&lt;p&gt;If you ever want to move from Google Photos to other platform/solution, your fastest choice to export all photos is &lt;a href=&#34;https://takeout.google.com/&#34;&gt;Google Takeout&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;But when you download it, you will find yourself with hundreds of little folders with few photos and weird &lt;code&gt;.json&lt;/code&gt; files inside. What if you want to just have one folder with all photos, in chronological order? Good luck copying all of that &lt;span&gt;üòï&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;This script does just that - it organizes and cleans up your Takeout for you &lt;span&gt;üëç&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;It will take all of your photos from those tiny folders, set their and &lt;code&gt;file last modified&lt;/code&gt; correctly, and put it in one big folder (or folders divided by a month)&lt;/p&gt; &#xA;&lt;h2&gt;How to use:&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Get all your photos in &lt;a href=&#34;https://takeout.google.com/&#34;&gt;Google Takeout&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&#34;deselect all&#34; and then select only Google Photos&lt;/li&gt; &#xA;   &lt;li&gt;deselect all &#34;album folders&#34; - folders with name of some album, and select &lt;em&gt;only&lt;/em&gt; &#34;year folders&#34; - folders named like &#34;&lt;code&gt;Photos from 20..&lt;/code&gt;&#34; - don&#39;t worry, all of your photos are in &#34;year folders anyway&#34;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Download the script from &lt;a href=&#34;https://github.com/TheLastGimbus/GooglePhotosTakeoutHelper/releases&#34;&gt;releases tab&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/gpth-bin&#34;&gt;also available on AUR &lt;span&gt;üòè&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Merge all contents from all Google Takeout zips to &lt;em&gt;one folder&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;gpth -i &#34;your/input/folder&#34; -o &#34;your/output/folder&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you want your photos to be divided by a year and month, run it with the &lt;code&gt;--divide-to-dates&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;h3&gt;How to use for dummies (non-programming people):&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://github.com/TheLastGimbus/GooglePhotosTakeoutHelper/releases&#34;&gt;releases-&amp;gt;latest release-&amp;gt;assets&lt;/a&gt; and download &lt;code&gt;gpth-vX.X.X-windoza.exe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Prepare your Takeout: If your Takeout was divided into multiple &lt;code&gt;.zip&lt;/code&gt;s, you will need to extract them, and move their contents into &lt;strong&gt;one folder&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;cmd&lt;/code&gt;, and type: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd C:\Folder\Where\You\Downloaded\takeout-helper&#xA;gpth-vX.X.X-windoza.exe -i &#34;C:\INPUT\TAKEOUT\FOLDER&#34; -o &#34;C:\OUTPUT\FOLDER&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;strong&gt;// PS 2: YOU NEED TO WRAP YOUR PATHS IN - &lt;code&gt;&#34;&lt;/code&gt; - ESPECIALLY IF THEY HAVE SPACES&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contact/errors&lt;/h2&gt; &#xA;&lt;p&gt;If you have issues/questions, you can hit me up either by &lt;a href=&#34;https://www.reddit.com/user/TheLastGimbus/&#34;&gt;Reddit&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/TheLastGimbus&#34;&gt;Twitter&lt;/a&gt; Email: &lt;a href=&#34;mailto:google-photos-takeout-gh@niceyyyboyyy.anonaddy.com&#34;&gt;google-photos-takeout-gh@niceyyyboyyy.anonaddy.com&lt;/a&gt;, or if you think your issue is common: &lt;a href=&#34;https://github.com/TheLastGimbus/GooglePhotosTakeoutHelper/issues&#34;&gt;Issues&lt;/a&gt; tab&lt;/p&gt; &#xA;&lt;h2&gt;If I helped you, you can consider donating me: &lt;a href=&#34;https://www.paypal.me/TheLastGimbus&#34;&gt;https://www.paypal.me/TheLastGimbus&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;I spent a lot of time fixing bugs and making this work stable &lt;span&gt;üíñ&lt;/span&gt; - would be super thankful for any donations&lt;/p&gt; &#xA;&lt;h2&gt;After exporting&lt;/h2&gt; &#xA;&lt;h3&gt;Be aware if you move your photos on your Android phone...&lt;/h3&gt; &#xA;&lt;p&gt;(99% of the times), if you move some files in Android, their creation and modification time is reset to current.&lt;/p&gt; &#xA;&lt;p&gt;&#34;Simple Gallery&#34; app usually keeps original file creation time when moving and coping (but I don&#39;t guarantee it). It&#39;s also pretty cool - check it out: &lt;a href=&#34;https://github.com/SimpleMobileTools/Simple-Gallery&#34;&gt;https://github.com/SimpleMobileTools/Simple-Gallery&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;What to do when you got rid of Google Photos? What are the alternatives?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;I really recommend you using &lt;a href=&#34;https://syncthing.net/&#34;&gt;Syncthing&lt;/a&gt; for syncing your photos and files across devices. It does so through your local Wi-Fi, so you&#39;re not dependent on any service or internet connection. It will also keep original file creation date and metadata, so it resolves Android issue that I mentioned before.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want something more centralized but also self-hosted, &lt;a href=&#34;https://nextcloud.com&#34;&gt;Nextcloud&lt;/a&gt; is a nice choice, but its approach to photos is still not perfect. (And you need to set up your own server)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Guys at &lt;a href=&#34;https://photoprism.org/&#34;&gt;Photoprism&lt;/a&gt; are working on full Google Photos alternative, with search and AI tagging etc, but it&#39;s stil work in progress&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other Takeout projects&lt;/h3&gt; &#xA;&lt;p&gt;I used this tool to export my notes to markdown - you can then edit them with any markdown editor you like :)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vHanda/google-keep-exporter&#34;&gt;https://github.com/vHanda/google-keep-exporter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Where is the Python script??&lt;/h3&gt; &#xA;&lt;p&gt;Yeah, the whole thing got re-written in Dart, and now it&#39;s way more stable and faster. If you still want Python for some reason, check out v2.x - in releases/tags&lt;/p&gt; &#xA;&lt;h3&gt;TODO (Pull Requests welcome):&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; GPS data: from JSON to Exif - &lt;del&gt;Thank you @DalenW &lt;span&gt;üíñ&lt;/span&gt;&lt;/del&gt; still thank you, but it is now missing in the Dart version&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Writing data from &lt;code&gt;.json&lt;/code&gt;s back to &lt;code&gt;EXIF&lt;/code&gt; data&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Some way to handle albums - THANK YOU @bitsondatadev &lt;span&gt;üòò&lt;/span&gt; &lt;span&gt;üéâ&lt;/span&gt; &lt;span&gt;üíÉ&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>sheikhhaziq/vibemusic</title>
    <updated>2022-12-19T01:31:37Z</updated>
    <id>tag:github.com,2022-12-19:/sheikhhaziq/vibemusic</id>
    <link href="https://github.com/sheikhhaziq/vibemusic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Flutter application for streaming music from YouTube Music&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/sheikhhaziq/vibemusic/raw/main/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png&#34; width=&#34;128&#34; height=&#34;128&#34; style=&#34;display: block; margin: 0 auto&#34;&gt; &#xA; &lt;h1&gt;Vibe Music&lt;/h1&gt; &#xA; &lt;p&gt;A Flutter application for streaming music from YouTube Music&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/sheikhhaziq/vibemusic/main/assets/images/1.jpg&#34; width=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/sheikhhaziq/vibemusic/main/assets/images/2.jpg&#34; width=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/sheikhhaziq/vibemusic/main/assets/images/3.jpg&#34; width=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/sheikhhaziq/vibemusic/main/assets/images/4.jpg&#34; width=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/sheikhhaziq/vibemusic/main/assets/images/5.jpg&#34; width=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/sheikhhaziq/vibemusic/main/assets/images/6.jpg&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Play (almost) any song or video from YouTube Music&lt;/li&gt; &#xA; &lt;li&gt;Background playback&lt;/li&gt; &#xA; &lt;li&gt;Search for songs and playlists&lt;/li&gt; &#xA; &lt;li&gt;Reorder songs in playlist or queue&lt;/li&gt; &#xA; &lt;li&gt;Dynamic theme&lt;/li&gt; &#xA; &lt;li&gt;Persistent queue&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sheikhhaziq/vibemusic/releases/latest&#34;&gt;&lt;img src=&#34;https://github.com/machiav3lli/oandbackupx/raw/034b226cea5c1b30eb4f6a6f313e4dadcbb0ece4/badge_github.png&#34; alt=&#34;Get it on GitHub&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://apt.izzysoft.de/fdroid/index/apk/com.webyte.vibe_music&#34;&gt;&lt;img src=&#34;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&#34; alt=&#34;Get it on IzzyOnDroid&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This project and its contents are not affiliated with, funded, authorized, endorsed by, or in any way associated with YouTube, Google LLC or any of its affiliates and subsidiaries. Any trademark, service mark, trade name, or other intellectual property rights used in this project are owned by the respective owners.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>altogic/altogic-dart</title>
    <updated>2022-12-19T01:31:37Z</updated>
    <id>tag:github.com,2022-12-19:/altogic/altogic-dart</id>
    <link href="https://github.com/altogic/altogic-dart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Altogic Dart client library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Altogic Client Library&lt;/h1&gt; &#xA;&lt;p&gt;Dart client for Altogic backend apps.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This package is for pure Dart. If you use it in the Flutter application, you can use the &lt;a href=&#34;https://pub.dev/packages/altogic&#34;&gt;altogic&lt;/a&gt; package. The &lt;a href=&#34;https://pub.dev/packages/altogic&#34;&gt;altogic&lt;/a&gt; package uses the &lt;code&gt;altogic_dart&lt;/code&gt; package and includes some flutter-specific methods and improvements.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://altogic.com&#34;&gt;Altogic&lt;/a&gt; is a &lt;strong&gt;backend application development and execution platform&lt;/strong&gt;, enabling people and businesses to design, deploy and manage scalable applications. It simplifies application development by eliminating repetitive tasks, providing pre-integrated and ready-to-use execution environments, and automating key stages in the application development process.&lt;/p&gt; &#xA;&lt;p&gt;For detailed API documentation go to &lt;a href=&#34;https://pub.dev/documentation/altogic_dart/latest/&#34;&gt;Client API reference&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;In order to use the Altogic client library you need to &lt;u&gt;create an app and a client key in Altogic&lt;/u&gt;. Additionally, if you will be using the Authentication module of this library, you might need to do additional configuration in your app settings.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;dart pub add altogic_dart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And import it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:altogic_dart/altogic_dart.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can use it from a global &lt;code&gt;altogic&lt;/code&gt; variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;AltogicClient altogic = createClient(&#39;http://fqle-avzr.c1-na.altogic.com&#39;, &#39;client-key&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;This guide will show you how to use the key modules of the client library to execute commands in your backend app. For more in-depth coverage, see the &lt;a href=&#34;https://pub.dev/documentation/altogic_dart/latest/&#34;&gt;Client API reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Flutter Guides / Examples&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can see the authentication basics with &lt;a href=&#34;https://www.altogic.com/client/quick-start-authentication/with-flutter&#34;&gt;Quickstart Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can try all methods and see the code blocks in the &lt;a href=&#34;https://altogic-flutter-example.netlify.app&#34;&gt;Example/Test Application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Also you can see the basics with the &lt;a href=&#34;https://www.altogic.com/client/quick-start/quick-start-flutter&#34;&gt;Example TO-DO Application&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Authentication&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Sign up new users with email:&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;If email confirmation is &lt;strong&gt;enabled&lt;/strong&gt; in your app authentication settings then a confirm sign up email will be sent to the user with a link to click and this method will return the user data with a &lt;code&gt;null&lt;/code&gt; session. Until the user clicks this link, the email address will not be verified and a session will not be created. After user clicks on the link in confirmation email, Altogic verifies the verification token sent in the email and if the email is verified successfully redirects the user to the redirect URL specified in app authentication settings with an &lt;code&gt;access_token&lt;/code&gt; in query string parameter. You can use this &lt;code&gt;access_token&lt;/code&gt; token to get authentication grants, namely the user data and a new session object by calling the &lt;code&gt;getAuthGrant&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;authFunctions() async {&#xA;  //Sign up a new user with email and password&#xA;  var errors = await altogic.auth.signUpWithEmail(email, password);&#xA;&#xA;  if (errors != null) {&#xA;    // success&#xA;  }&#xA;&#xA;  // After the users are created and their email verified, the next time the users wants to sign in to their account, you can use the sign in method to authenticate them&#xA;  var userSession = await altogic.auth.signInWithEmail(email, password);&#xA;&#xA;  // You can check errors. If ``errors`` is null, signIn is success. &#xA;  if (userSession.errors != null) {&#xA;    // success&#xA;    var user = userSession.user;&#xA;    var session = userSession.session;&#xA;  } else {&#xA;    // Error&#xA;  }&#xA;&#xA;  //... after email address verified, you can get user and session data using the accessToken&#xA;  var authGrant = await altogic.auth.getAuthGrant(accessToken);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Check &lt;a href=&#34;https://pub.dev/packages/altogic&#34;&gt;altogic package&lt;/a&gt; for learning how to handle redirect urls.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Sign up new users with mobile phone number:&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;If phone number confirmation is &lt;strong&gt;enabled&lt;/strong&gt; in your app authentication settings then a confirmation code SMS will be sent to the phone. Until the user validates this code by calling &lt;code&gt;verifyPhone&lt;/code&gt;, the phone number will not be verified.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;authFunction() async {&#xA;  //Sign up a new user with mobile phonec number and password&#xA;  var errors = await altogic.auth.signUpWithPhone(phone, password);&#xA;&#xA;  if (errors != null) {&#xA;    // success&#xA;  }&#xA;&#xA;  //Verify the phone number using code sent in SMS and and return the auth grants (e.g., session)&#xA;  UserSessionResult userSession = await altogic.auth.verifyPhone(phone, code);&#xA;&#xA;  //The next time, the users wants to sign in to their account, you can use the sign in method to authenticate them&#xA;  UserSessionResult userSession = await altogic.auth.signInWithPhone(phone, password);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Sign up/sign-in users with an oAuth provider:&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://pub.dev/packages/altogic&#34;&gt;altogic&lt;/a&gt; package for designed for Flutter.&lt;/p&gt; &#xA;&lt;h3&gt;Database&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Create a new object:&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;To create a new object in one of your models in the database, you have two options. You can use the query manager shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;createObject() async {&#xA;  //Insert a new top-level model object to the database using the query builder&#xA;  var response = await altogic.db.model(&#39;userOrders&#39;).create({&#xA;    productId: &#39;prd000234&#39;,&#xA;    quantity: 12,&#xA;    customerId: &#39;61fbf6ceeeed063ab062ac05&#39;,&#xA;    createdAt: &#39;2022-02-09T10:55:34.562+00:00&#39;,&#xA;  });&#xA;&#xA;  // Or you can use `createMany` to create multiple object(s).&#xA;&#xA;  if (response != null) {&#xA;    //success&#xA;    print(response.data); // created object&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can use an object manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;createObject() async {&#xA;  //Insert a new top-level model object to the database using the object manager&#xA;  var response = await altogic.db.model(&#39;userOrders&#39;).object().create({&#xA;    productId: &#39;prd000234&#39;,&#xA;    quantity: 12,&#xA;    customerId: &#39;61fbf6ceeeed063ab062ac05&#39;,&#xA;    createdAt: &#39;2022-02-09T10:55:34.562+00:00&#39;,&#xA;  });&#xA;&#xA;  if (response != null) {&#xA;    //success&#xA;    print(response.data); // created object&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Update an object:&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;You can use two ways to update an object in the database. You can use an object manager shown below to update an object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;updateObject() async {&#xA;  //Upates a users address identified by &#39;61f958dc3692b8462a9d31a1&#39; to a new one&#xA;  var result = await altogic.db&#xA;      .model(&#39;users.address&#39;)&#xA;      .object(&#39;61f958dc3692b8462a9d31a1&#39;)&#xA;      .update({&#xA;    &#39;city&#39;: &#39;Chicago&#39;,&#xA;    &#39;street&#39;: &#39;1234 W Chestnut&#39;,&#xA;    &#39;zipcode&#39;: &#39;60610&#39;,&#xA;    &#39;state&#39;: &#39;IL&#39;,&#xA;    &#39;country&#39;: &#39;US&#39;,&#xA;  });&#xA;&#xA;  //Increments the likeCount of a wallpost identified by id &#39;62064c7eff64b91975a599b4&#39; by 1&#xA;  var result = await altogic.db&#xA;      .model(&#39;wallposts&#39;)&#xA;      .object(&#39;62064c7eff64b91975a599b4&#39;)&#xA;      .updateFields(FieldUpdate(field: &#39;likeCount&#39;, updateType: UpdateType.increment, value: 1));&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can use a query manager to perform update operation. Below examples perform exactly the same updates as the above methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;updateObject() async {&#xA;  //Updates the an object using a query builder&#xA;  var result = await altogic.db&#xA;      .model(&#39;users.address&#39;)&#xA;      .filter(&#39;_id == &#34;61f958dc3692b8462a9d31a1&#34;&#39;)&#xA;      .update({&#xA;    &#39;city&#39;: &#39;Chicago&#39;,&#xA;    &#39;street&#39;: &#39;1234 W Chestnut&#39;,&#xA;    &#39;zipcode&#39;: &#39;60610&#39;,&#xA;    &#39;state&#39;: &#39;IL&#39;,&#xA;    &#39;country&#39;: &#39;US&#39;,&#xA;  });&#xA;&#xA;  //Increments the likeCount of a wallpost identified by id &#39;62064c7eff64b91975a599b4&#39; by 1 using the query builder&#xA;  var result = await altogic.db&#xA;      .model(&#39;wallposts&#39;)&#xA;      .filter(&#39;_id == &#34;61f958dc3692b8462a9d31a1&#34;&#39;)&#xA;      .updateFields(FieldUpdate(field: &#39;likeCount&#39;, updateType: UpdateType.increment, value: 1));&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Delete an object:&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;deleteObject() async {&#xA;  //Delete an order identified by id &#39;62064163ae99b3a645705667&#39; from userOrders&#xA;  var result = await altogic.db.model(&#39;userOrders&#39;).object(&#39;62064163ae99b3a645705667&#39;).delete();&#xA;&#xA;  //Alternatively you can use a query builder to delete an object&#xA;  var result = await altogic.db&#xA;      .model(&#39;userOrders&#39;)&#xA;      .filter(&#39;_id == &#34;62064163ae99b3a645705667&#34;&#39;)&#xA;      .delete();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Query data:&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;query() async {&#xA;  // Gets the first 100 orders with basket size greater than $50 and having more than 3 items and sorts them by descending orderDate&#xA;  await altogic.db&#xA;      .model(&#39;userOrders&#39;)&#xA;      .filter(&#39;totalAmount &amp;gt; 50 &amp;amp;&amp;amp; totalQuantity &amp;gt; 3&#39;)&#xA;      .sort(&#39;orderDate&#39;, Direction.desc)&#xA;      .limit(100)&#xA;      .page(1)&#xA;      .get();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RESTful Endpoints (i.e., cloud functions)&lt;/h3&gt; &#xA;&lt;p&gt;In Altogic, you can define your app RESTful endpoints and associted services. You can think of services as your cloud functions and you define your app services in Altogic Designer. When the endpoint is called, the associated service ( i.e., cloud function) is executed. The client library endpoints module provide the methods to make POST, PUT, GET and DELETE requests to your app endpoints.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;get() async {&#xA;  //Make a GET request to /orders/{orderId} endpoint&#xA;  //...&#xA;  var orderId = &#39;620949ee991edfba3ee644e7&#39;;&#xA;  var result = await altogic.endpoint.get(&#39;/orders/$orderId&#39;).asMap();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Endpoint methods (&lt;code&gt;get&lt;/code&gt;,&lt;code&gt;post&lt;/code&gt;,&lt;code&gt;put&lt;/code&gt;,&lt;code&gt;delete&lt;/code&gt;) returns a &lt;code&gt;FutureApiResponse&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;FutureApiResponse&lt;/code&gt; has some methods like &lt;code&gt;asMap()&lt;/code&gt;, which type of return your endpoint the methods will cast to that type. E.g. &lt;code&gt;asMap()&lt;/code&gt; returns result as &lt;code&gt;Future&amp;lt;APIResponse&amp;lt;Map&amp;lt;String,dynamic&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;. So you can read data with &lt;code&gt;var data = result.data&lt;/code&gt;, the &lt;code&gt;data&lt;/code&gt; will be &lt;code&gt;Map&amp;lt;String,dynamic&amp;gt;?&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;post() async {&#xA;  //Make a POST request to /wallposts/{postId}/comments endpoint&#xA;//...&#xA;  var postId = &#39;62094b43f7205e7d78082504&#39;;&#xA;  var result = await altogic.endpoint.post(&#39;/wallposts/$postId/comments&#39;, body: {&#xA;    &#39;userId&#39;: &#39;620949ee991edfba3ee644e7&#39;,&#xA;    &#39;comment&#39;: &#39;Awesome product. Would be better if you could add tagging people in comments.&#39;,&#xA;  }).asMap();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;delete() async {&#xA;  //Make a DELETE request to /wallposts/{postId}/comments/{commentId} endpoint&#xA;  //...&#xA;  var postId = &#39;62094b4dfcc106baba52c8ec&#39;;&#xA;  var commentId = &#39;62094b66fc475bdd5a2bfa48&#39;;&#xA;  var result = await altogic.endpoint.delete(&#39;/wallpost/$postId/comments/$commentId&#39;).asMap();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;put() async {&#xA;  //Make a PUT request to /users/{userId}/address&#xA;  //...&#xA;  var userId = &#39;62094b734848b88ff50c2ab0&#39;;&#xA;  var result = await altogic.endpoint&#xA;      .put(&#39;/users/$userId/address&#39;, body: {&#xA;    city: &#39;Chicago&#39;,&#xA;    street: &#39;121 W Chestnut&#39;,&#xA;    zipcode: &#39;60610&#39;,&#xA;    state: &#39;IL&#39;,&#xA;    country: &#39;US&#39;,&#xA;  }).asMap();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Document storage&lt;/h3&gt; &#xA;&lt;p&gt;This module allows you manage your app&#39;s cloud storage buckets and files. You store your files, documents, images etc. under buckets, which are the basic containers that hold your application data. You typically create a bucket and upload files/objects to this bucket.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Create a bucket:&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;createBucket() async {&#xA;  //Creates a bucket names profile-images with default privacy setting of &#xA;  //public, meaning that when you add a file to a bucket and if the file &#xA;  //did not specify public/private setting, then it will be marked as &#xA;  //publicly accessible through its URL&#xA;  await altogic.storage.createBucket(&#39;profile-images&#39;, isPublic: true);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Upload a file:&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;uploadFile() async {&#xA;  //Uploads a file to the profiles-images bucket&#xA;  var file = File(&#39;path/to/file&#39;);&#xA;  var bytesToUpload = await file.readAsBytesSync();&#xA;  var result = await altogic.storage&#xA;      .bucket(&#39;profile-images&#39;)&#xA;      .upload(&#39;file_name.ext&#39;, bytesToUpload);&#xA;&#xA;  //If you would like to have a progress indicator during file upload you can also provide a callback function&#xA;  var result = await altogic.storage&#xA;      .bucket(&#39;profile-images&#39;)&#xA;      .upload(fileToUpload.name, fileToUpload, FileUploadOptions(&#xA;      onProgress: (uploaded, total, percent) =&amp;gt;&#xA;          print(&#39;progress: ${uploaded}/${total} ${percent}&#39;)&#xA;  ));&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;strong&gt;List files in a bucket:&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;listFiles() async {&#xA;  //Returns the list of files in bucket profile-images sorted by their size in ascending order&#xA;  var result = await altogic.storage.bucket(&#39;profile-images&#39;).listFiles(options: FileListOptions(&#xA;    returnCountInfo: true,&#xA;    sort: FileSort(FileSortField.size, direction: Direction.asc),&#xA;  ));&#xA;&#xA;  //You can also apply filters and paginate over the files. Below call returns the first 100 of files which are marked as public and sorted by their size in ascending order.&#xA;  var result = await altogic.storage.bucket(&#39;profile-images&#39;).listFiles(&#xA;      expression: &#39;isPublic == true&#39;,&#xA;      options: FileListOptions(&#xA;        returnCountInfo: true,&#xA;        limit: 100,&#xA;        page: 1,&#xA;        sort: FileSort(field: FileSortField.size, direction: Direction.asc),&#xA;      ));&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cache&lt;/h3&gt; &#xA;&lt;p&gt;You can use the Altogic client library to cache simple key-value pairs at a high-speed data storage layer (Redis) to speed up data set and get operations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//Store items in cache&#xA;var result = await altogic.cache.set(&#39;lastUserOrder&#39;, {&#xA;    productId: &#39;prd000234&#39;,&#xA;    quantity: 12,&#xA;    customerId: &#39;61fbf6ceeeed063ab062ac05&#39;,&#xA;    createdAt: &#39;2022-02-09T10:55:34.562+00:00&#39;,&#xA;});&#xA;&#xA;//Get the item stored in cache&#xA;const result = await altogic.cache.get(&#39;lastUserOrder&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Message queue&lt;/h3&gt; &#xA;&lt;p&gt;The queue manager allows different parts of your application to communicate and perform activities asynchronously. A message queue provides a buffer that temporarily stores messages and dispatches them to their consuming service. With the client library you can submit messages to a message queue for asychronous processing. After the message is submitted, the routed service defined in your message queue configuration is invoked. This routed service processes the input message and performs necessary tasks defined in its service flow.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;submitMessage() async {&#xA;  //Submit a message to a queuer for asychronous processing&#xA;  var result = await altogic.queue.submitMessage(queueName, messageBody);&#xA;&#xA;  var info = result.info;&#xA;&#xA;  //Get the status of submitted message whether it has been completed processing or not&#xA;  var result = await altogic.queue.getMessageStatus(info.messageId);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scheduled tasks (i.e., cron jobs)&lt;/h3&gt; &#xA;&lt;p&gt;The client library task manager allows you to manually trigger service executions of your scheduled tasks which actually ran periodically at fixed times, dates, or intervals.&lt;/p&gt; &#xA;&lt;p&gt;Typically, a scheduled task runs according to its defined execution schedule. However, with Altogic&#39;s client library by calling the &lt;code&gt;runOnce&lt;/code&gt; method, you can manually run scheduled tasks ahead of their actual execution schedule.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;runOnce() async&#xA;{&#xA;  //Manually run a task&#xA;  var result = await altogic.queue.runOnce(taskName);&#xA;&#xA;  var info = result.info;&#xA;&#xA;//Get the status of the manually triggered task whether it has been completed processing or not&#xA;  var result = await altogic.queue.getTaskStatus(info.taskId);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;p&gt;You can use the following resources to learn more and get help&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üöÄ &lt;a href=&#34;https://www.altogic.com/docs/quick-start&#34;&gt;Quick start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìú &lt;a href=&#34;https://www.altogic.com/docs&#34;&gt;Altogic Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üí¨ &lt;a href=&#34;https://discord.gg/ERK2ssumh8&#34;&gt;Discord community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üì∞ &lt;a href=&#34;https://community.altogic.com&#34;&gt;Discussion forums&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bugs Report&lt;/h2&gt; &#xA;&lt;p&gt;Think you‚Äôve found a bug? Please, send us an email &lt;a href=&#34;mailto:support@altogic.com&#34;&gt;support@altogic.com&lt;/a&gt; or open issue on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/altogic/altogic-dart&#34;&gt;&lt;code&gt;altogic_dart&lt;/code&gt; package repository&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/altogic/altogic-flutter&#34;&gt;&lt;code&gt;altogic&lt;/code&gt; package repository&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support / Feedback&lt;/h2&gt; &#xA;&lt;p&gt;For issues with, questions about, feedback for the client library, or want to see a new feature please, send us an email &lt;a href=&#34;mailto:support@altogic.com&#34;&gt;support@altogic.com&lt;/a&gt; or reach out to our &lt;a href=&#34;https://community.altogic.com&#34;&gt;community forums&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>