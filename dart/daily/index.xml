<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-19T01:34:06Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bizz84/starter_architecture_flutter_firebase</title>
    <updated>2023-01-19T01:34:06Z</updated>
    <id>tag:github.com,2023-01-19:/bizz84/starter_architecture_flutter_firebase</id>
    <link href="https://github.com/bizz84/starter_architecture_flutter_firebase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Time Tracking app with Flutter &amp; Firebase&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Time Tracking app with Flutter &amp;amp; Firebase&lt;/h1&gt; &#xA;&lt;p&gt;A time tracking application built with Flutter &amp;amp; Firebase:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bizz84/starter_architecture_flutter_firebase/master/.github/images/time-tracker-screenshots.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is intended as a &lt;strong&gt;reference app&lt;/strong&gt; based on my &lt;a href=&#34;https://codewithandrea.com/articles/flutter-app-architecture-riverpod-introduction/&#34;&gt;Riverpod Architecture&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this project used to be called &#34;Started Architecture for Flutter &amp;amp; Firebase&#34; (based on this &lt;a href=&#34;https://codewithandrea.com/videos/starter-architecture-flutter-firebase/&#34;&gt;old article&lt;/a&gt;). As of January 2023, it follows my updated &lt;a href=&#34;https://codewithandrea.com/articles/flutter-app-architecture-riverpod-introduction/&#34;&gt;Riverpod Architecture&lt;/a&gt;, using the latest packages.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Flutter web preview&lt;/h2&gt; &#xA;&lt;p&gt;A Flutter web preview of the app is available here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://starter-architecture-flutter.web.app&#34;&gt;Time Tracker | Flutter web demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple onboarding page&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Full authentication flow&lt;/strong&gt; (using email &amp;amp; password)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Jobs&lt;/strong&gt;: users can view, create, edit, and delete their own private jobs (each job has a name and hourly rate)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Entries&lt;/strong&gt;: for each job, user can view, create, edit, and delete the corresponding entries (an entry is a task with a start and end time, with an optional comment)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;A report page&lt;/strong&gt; that shows a daily breakdown of all jobs, hours worked and pay, along with the totals.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All the data is persisted with Firestore and is kept in sync across multiple devices.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add missing tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Stateful Nested Navigation with GoRouter (once &lt;a href=&#34;https://github.com/flutter/packages/pull/2650&#34;&gt;this PR&lt;/a&gt; is merged)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Use controllers / notifiers consistently across the app (some code still needs to be updated)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add localization&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Use the new Firebase UI packages where useful&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Responsive UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a tentative roadmap. There is no ETA for any of the points above. This is a low priority project and I don&#39;t have much time to maintain it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Relevant Articles&lt;/h2&gt; &#xA;&lt;p&gt;The app is based on my Flutter Riverpod architecture, which is explained in detail here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codewithandrea.com/articles/flutter-app-architecture-riverpod-introduction/&#34;&gt;Flutter App Architecture with Riverpod: An Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codewithandrea.com/articles/flutter-project-structure/&#34;&gt;Flutter Project Structure: Feature-first or Layer-first?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codewithandrea.com/articles/flutter-repository-pattern/&#34;&gt;Flutter App Architecture: The Repository Pattern&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More more info on Riverpod, read this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codewithandrea.com/articles/flutter-state-management-riverpod/&#34;&gt;Flutter Riverpod 2.0: The Ultimate Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Packages in use&lt;/h2&gt; &#xA;&lt;p&gt;These are the main packages used in the app:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_riverpod&#34;&gt;Flutter Riverpod&lt;/a&gt; for data caching, dependency injection, and more&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/go_router&#34;&gt;GoRouter&lt;/a&gt; for navigation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/firebase_auth&#34;&gt;Firebase Auth&lt;/a&gt; for authentication&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/cloud_firestore&#34;&gt;Cloud Firestore&lt;/a&gt; as a realtime database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/rxdart&#34;&gt;RxDart&lt;/a&gt; for combining multiple Firestore collections as needed&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/intl&#34;&gt;Intl&lt;/a&gt; for currency, date, time formatting&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/mocktail&#34;&gt;Mocktail&lt;/a&gt; for testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/equatable&#34;&gt;Equatable&lt;/a&gt; to reduce boilerplate code in model classes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/bizz84/starter_architecture_flutter_firebase/master/pubspec.yaml&#34;&gt;pubspec.yaml&lt;/a&gt; file for the complete list.&lt;/p&gt; &#xA;&lt;h2&gt;Running the project with Firebase&lt;/h2&gt; &#xA;&lt;p&gt;To use this project with Firebase, follow these steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a new project with the Firebase console&lt;/li&gt; &#xA; &lt;li&gt;Enable Firebase Authentication, along with the Email/Password Authentication Sign-in provider in the Firebase Console (Authentication &amp;gt; Sign-in method &amp;gt; Email/Password &amp;gt; Edit &amp;gt; Enable &amp;gt; Save)&lt;/li&gt; &#xA; &lt;li&gt;Enable Cloud Firestore&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, follow one of the two approaches below. 👇&lt;/p&gt; &#xA;&lt;h3&gt;1. Using the CLI&lt;/h3&gt; &#xA;&lt;p&gt;Make sure you have the Firebase CLI and &lt;a href=&#34;https://pub.dev/packages/flutterfire_cli&#34;&gt;FlutterFire CLI&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;p&gt;Then run this on the terminal from the root of this project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;firebase login&lt;/code&gt; so you have access to the Firebase project you have created&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;flutterfire configure&lt;/code&gt; and follow all the steps&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more info, follow this guide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codewithandrea.com/articles/flutter-firebase-flutterfire-cli/&#34;&gt;How to add Firebase to a Flutter app with FlutterFire CLI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. Manual way (not recommended)&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t want to use FlutterFire CLI, fo this instead&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Register separate iOS, Android, and web apps in the Firebase project settings.&lt;/li&gt; &#xA; &lt;li&gt;On Android, use &lt;code&gt;com.example.starter_architecture_flutter_firebase&lt;/code&gt; as the package name.&lt;/li&gt; &#xA; &lt;li&gt;then, &lt;a href=&#34;https://firebase.google.com/docs/flutter/setup#configure_an_android_app&#34;&gt;download and copy&lt;/a&gt; &lt;code&gt;google-services.json&lt;/code&gt; into &lt;code&gt;android/app&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;On iOS, use &lt;code&gt;com.example.starterArchitectureFlutterFirebase&lt;/code&gt; as the bundle ID.&lt;/li&gt; &#xA; &lt;li&gt;then, &lt;a href=&#34;https://firebase.google.com/docs/flutter/setup#configure_an_ios_app&#34;&gt;download and copy&lt;/a&gt; &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; into &lt;code&gt;iOS/Runner&lt;/code&gt;, and add it to the Runner target in Xcode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;That&#39;s it. Have fun!&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bizz84/starter_architecture_flutter_firebase/master/LICENSE.md&#34;&gt;License: MIT&lt;/a&gt;&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>renancaraujo/watchsteroids-OSS</title>
    <updated>2023-01-19T01:34:06Z</updated>
    <id>tag:github.com,2023-01-19:/renancaraujo/watchsteroids-OSS</id>
    <link href="https://github.com/renancaraujo/watchsteroids-OSS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The open source version of an Asteroids-ish game made for WearOS using the Flame Engine and Flutter.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/renancaraujo/watchsteroids-OSS/main/stuff/smallpic.jpg&#34; width=&#34;400&#34;&gt; &#xA;&lt;h1&gt;Watchsteroids&lt;/h1&gt; &#xA;&lt;p&gt;The open source version of an Asteroids-ish game made for WearOS using the Flame Engine and Flutter.&lt;/p&gt; &#xA;&lt;p&gt;Project initially generated with the &lt;a href=&#34;https://cli.vgv.dev/&#34;&gt;Very Good CLI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Using Flame Engine on top of &lt;a href=&#34;https://flutter.rip&#34;&gt;Flutter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Score and game state is managed by the &lt;a href=&#34;https://bloclibrary.dev&#34;&gt;Bloc library&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Bear 🐻 with me&lt;/h2&gt; &#xA;&lt;p&gt;This code was written on a ridiculous rush, since I challenged myself to start and finish it within a weekend. There are almost no tests, few docs and the code could be better organized. This is not how good software should be made, but it is okay for this gimmick (I guess).&lt;/p&gt; &#xA;&lt;p&gt;See my tweet about this &lt;a href=&#34;https://twitter.com/reNotANumber/status/1614990869685497857&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See how to run on a watch device here:&lt;/li&gt; &#xA; &lt;li&gt;This also runs on android devices, but it&#39;s not optimized for it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project contains 3 flavors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;development&lt;/li&gt; &#xA; &lt;li&gt;staging&lt;/li&gt; &#xA; &lt;li&gt;production&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run the desired flavor either use the launch configuration in VSCode/Android Studio or use the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Development&#xA;$ flutter run --flavor development --target lib/main_development.dart&#xA;&#xA;# Staging&#xA;$ flutter run --flavor staging --target lib/main_staging.dart&#xA;&#xA;# Production&#xA;$ flutter run --flavor production --target lib/main_production.dart&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>