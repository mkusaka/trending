<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-28T01:30:14Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>newtaDev/pod_player</title>
    <updated>2024-04-28T01:30:14Z</updated>
    <id>tag:github.com,2024-04-28:/newtaDev/pod_player</id>
    <link href="https://github.com/newtaDev/pod_player" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Video player for flutter web &amp; mobile devices, Play video from youtube or vimeo or network in flutter using pod player&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/newtaDev&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/159757765-db86f850-fea8-4dc2-bd86-0a27648b24e5.png&#34; alt=&#34;pod_player&#34;&gt;&lt;/a&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/pod_player/score&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Likes-200+-yellowgreen&#34; alt=&#34;pub likes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/pod_player&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/pod_player?style=flat&#34; alt=&#34;pub version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/pod_player/score&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/score-140-critical&#34; alt=&#34;score&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/pod_player/score&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/popularity-97﹪-critical&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://komarev.com/ghpvc/?username=newtaDev&amp;amp;label=Total%20views&amp;amp;color=0e75b6&amp;amp;style=flat&#34; alt=&#34;newta&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Video player for flutter web &amp;amp; mobile devices, pod player supports playing video from &lt;code&gt;Youtube&lt;/code&gt; and &lt;code&gt;Vimeo&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;pod player is a simple and easy-to-use video player. Its video controls are similar to Youtube player (with customizable controls) and also can play videos from &lt;code&gt;Youtube&lt;/code&gt; and &lt;code&gt;Vimeo&lt;/code&gt; (By providing url/video_id).&lt;/p&gt; &#xA;&lt;p&gt;This plugin built upon flutter&#39;s official &lt;a href=&#34;https://pub.dartlang.org/packages/video_player&#34;&gt;&lt;code&gt;video_player&lt;/code&gt;&lt;/a&gt; plugin&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;PLATFORM&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AVAILABLE&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;IOS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WEB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Play &lt;code&gt;youtube&lt;/code&gt; videos (using video URL or ID)&lt;/li&gt; &#xA; &lt;li&gt;Play &lt;code&gt;vimeo&lt;/code&gt; videos (using video ID [with ou without hash])&lt;/li&gt; &#xA; &lt;li&gt;Play &lt;code&gt;vimeo&lt;/code&gt; private videos (using video ID [with ou without hash], access token)&lt;/li&gt; &#xA; &lt;li&gt;Video overlay similar to youtube&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Double tap&lt;/code&gt; to seek video.&lt;/li&gt; &#xA; &lt;li&gt;On video tap show/hide video overlay.&lt;/li&gt; &#xA; &lt;li&gt;Auto hide overlay&lt;/li&gt; &#xA; &lt;li&gt;Change &lt;code&gt;playback speed&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Custom overlay&lt;/li&gt; &#xA; &lt;li&gt;Custom progress bar&lt;/li&gt; &#xA; &lt;li&gt;Custom labels&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Change video quality&lt;/code&gt; (for vimeo and youtube)&lt;/li&gt; &#xA; &lt;li&gt;Enable/disable full-screen player&lt;/li&gt; &#xA; &lt;li&gt;support for live youtube video&lt;/li&gt; &#xA; &lt;li&gt;[TODO] support for video playlist&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features on web&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Double tap on Video player to enable/disable full-screen&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Mute/unMute&lt;/code&gt; volume&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Video player integration with keyboard&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;SPACE&lt;/code&gt; play/pause video&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;M&lt;/code&gt; mute/unMute video&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;F&lt;/code&gt; enable/disable full-screen&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ESC&lt;/code&gt; enable/disable full-screen&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt; seek video forward&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&amp;lt;-&lt;/code&gt; seek video backward&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Double tap on video (enable/disables full-screen)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Playing videos from youtube&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/85326522/160871693-74b468de-839d-4ae3-9ef0-581066130072.gif&#34; alt=&#34;pod_player&#34;&gt; &lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Video player on web&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;a&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/160885274-41be06af-ae6d-41f3-8cff-21767fde8dad.gif&#34; alt=&#34;pod_player&#34;&gt;&lt;/a&gt; &lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vimeo player and custom video player&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Change quality and playback speed&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Control video from any where&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/160657119-7295ef4e-851b-42a3-a792-856fb6045b11.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/160657075-a17876c1-680b-472d-b1b9-ab06ba315b96.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Controls similar to youtube&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;with overlay&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;without overlay &lt;code&gt;(alwaysShowProgressBar = true)&lt;/code&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/156813671-ba562deb-3607-46a6-800c-d3a731b22cdd.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/156813681-fad9f1f9-d73c-478f-8477-b42342424b4a.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On mobile full-screen&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/156813701-aa722624-fde3-4036-9392-a0107ee863b2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Video controls&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;On Double tap&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Custom progress bar&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/156813691-cd75c638-a4d3-4dda-8a22-eed3e43bd299.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/156815812-e85bd5bc-2401-42d9-a7ba-c5ad2be494fa.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Video player on web&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/156824569-d1ec705d-c278-4503-81fb-84e9dcb58336.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newtaDev/pod_player/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newtaDev/pod_player/master/#android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newtaDev/pod_player/master/#ios&#34;&gt;Ios&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newtaDev/pod_player/master/#web--not-recommended-in-production&#34;&gt;Web&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newtaDev/pod_player/master/#how-to-use&#34;&gt;How to use&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newtaDev/pod_player/master/#configure-pod-player&#34;&gt;Configure pod player&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newtaDev/pod_player/master/#add-thumbnail&#34;&gt;Add Thumbnail&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newtaDev/pod_player/master/#how-to-play-video-from-youtube&#34;&gt;How to play video from youtube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newtaDev/pod_player/master/#how-to-play-video-from-vimeo&#34;&gt;How to play video from vimeo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newtaDev/pod_player/master/#How-to-play-video-from-vimeo-private-videos&#34;&gt;How to play video from vimeo private videos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newtaDev/pod_player/master/#options&#34;&gt;video player Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newtaDev/pod_player/master/#example&#34;&gt;Example&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;In your &lt;code&gt;pubspec.yaml&lt;/code&gt; file within your Flutter Project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  pod_player: &amp;lt;latest_version&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you are using network-based videos, ensure that the following permission is present in your Android Manifest file, located in &lt;code&gt;&amp;lt;project root&amp;gt;/android/app/src/main/AndroidManifest.xml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;uses-permission android:name=&#34;android.permission.INTERNET&#34;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to access videos using http (rather than https) URLs.&lt;/p&gt; &#xA;&lt;p&gt;Located inside application tag&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;application&#xA;  - - -&#xA;  - - - - - -&#xA;  android:usesCleartextTraffic=&#34;true&#34;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ios&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Add permissions to your app&#39;s Info.plist file,&lt;/p&gt; &#xA;&lt;p&gt;located in &lt;code&gt;&amp;lt;project root&amp;gt;/ios/Runner/Info.plist&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;key&amp;gt;NSAppTransportSecurity&amp;lt;/key&amp;gt;&#xA;&amp;lt;dict&amp;gt;&#xA;  &amp;lt;key&amp;gt;NSAllowsArbitraryLoads&amp;lt;/key&amp;gt;&#xA;  &amp;lt;true/&amp;gt;&#xA;&amp;lt;/dict&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Web ( Not recommended in production)&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;if u are using &lt;code&gt;youtube&lt;/code&gt; or &lt;code&gt;vimeo&lt;/code&gt; player on web, then there will be some issue with &lt;code&gt;CORS&lt;/code&gt; only in web, so use this &lt;a href=&#34;https://pub.dev/packages/flutter_cors&#34;&gt;&lt;code&gt;flutter_cors&lt;/code&gt;&lt;/a&gt; package&lt;/p&gt; &#xA;&lt;h4&gt;using &lt;a href=&#34;https://pub.dev/packages/flutter_cors&#34;&gt;&lt;code&gt;flutter_cors&lt;/code&gt;&lt;/a&gt; package to enable or disable CORS&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To Enable CORS (run this command )&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;dart pub global activate flutter_cors&#xA;fluttercors --enable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To Disable CORS (run this command )&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;fluttercors --disable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:pod_player/pod_player.dart&#39;;&#xA;import &#39;package:flutter/material.dart&#39;;&#xA;&#xA;class PlayVideoFromNetwork extends StatefulWidget {&#xA;  const PlayVideoFromNetwork({Key? key}) : super(key: key);&#xA;&#xA;  @override&#xA;  State&amp;lt;PlayVideoFromNetwork&amp;gt; createState() =&amp;gt; _PlayVideoFromNetworkState();&#xA;}&#xA;&#xA;class _PlayVideoFromNetworkState extends State&amp;lt;PlayVideoFromNetwork&amp;gt; {&#xA;  late final PodPlayerController controller;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    controller = PodPlayerController(&#xA;      playVideoFrom: PlayVideoFrom.network(&#xA;        &#39;https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerFun.mp4&#39;,&#xA;      ),&#xA;    )..initialise();&#xA;    super.initState();&#xA;  }&#xA;&#xA;  @override&#xA;  void dispose() {&#xA;    controller.dispose();&#xA;    super.dispose();&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      body: PodVideoPlayer(controller: controller),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configure pod player&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;  controller = PodPlayerController(&#xA;    playVideoFrom: PlayVideoFrom.youtube(&#39;https://youtu.be/A3ltMaM6noM&#39;),&#xA;    podPlayerConfig: const PodPlayerConfig(&#xA;      autoPlay: true,&#xA;      isLooping: false,&#xA;      videoQualityPriority: [720, 360]&#xA;    )&#xA;  )..initialise();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Add Thumbnail&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;PodVideoPlayer(&#xA;  controller: controller,&#xA;  videoThumbnail: const DecorationImage(&#xA;    /// load from asset: AssetImage(&#39;asset_path&#39;)&#xA;    image: NetworkImage(&#39;https://images.unsplash.com/photo-1569317002804-ab77bcf1bce4?ixlib=rb-1.2.1&amp;amp;ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8dW5zcGxhc2h8ZW58MHx8MHx8&amp;amp;w=1000&amp;amp;q=80&#39;,&#xA;    ),&#xA;    fit: BoxFit.cover,&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Add PodPlayerLabels (custom labels)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;@override&#xA;Widget build(BuildContext context) {&#xA;  return Scaffold(&#xA;    body: PodVideoPlayer(&#xA;      controller: controller,&#xA;      podPlayerLabels: const PodPlayerLabels(&#xA;        play: &#34;Play label customized&#34;,&#xA;        pause: &#34;Pause label customized&#34;,&#xA;        ...&#xA;      ),&#xA;    ),&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to play video from youtube&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:pod_player/pod_player.dart&#39;;&#xA;import &#39;package:flutter/material.dart&#39;;&#xA;&#xA;class PlayVideoFromYoutube extends StatefulWidget {&#xA;  const PlayVideoFromYoutube({Key? key}) : super(key: key);&#xA;&#xA;  @override&#xA;  State&amp;lt;PlayVideoFromYoutube&amp;gt; createState() =&amp;gt; _PlayVideoFromYoutubeState();&#xA;}&#xA;&#xA;class _PlayVideoFromYoutubeState extends State&amp;lt;PlayVideoFromYoutube&amp;gt; {&#xA;  late final PodPlayerController controller;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    controller = PodPlayerController(&#xA;      playVideoFrom: PlayVideoFrom.youtube(&#39;https://youtu.be/A3ltMaM6noM&#39;),&#xA;    )..initialise();&#xA;    super.initState();&#xA;  }&#xA;&#xA;  @override&#xA;  void dispose() {&#xA;    controller.dispose();&#xA;    super.dispose();&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      body: PodVideoPlayer(controller: controller),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to play video from vimeo&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:pod_player/pod_player.dart&#39;;&#xA;import &#39;package:flutter/material.dart&#39;;&#xA;&#xA;class PlayVideoFromVimeo extends StatefulWidget {&#xA;  const PlayVideoFromVimeo({Key? key}) : super(key: key);&#xA;&#xA;  @override&#xA;  State&amp;lt;PlayVideoFromVimeo&amp;gt; createState() =&amp;gt; _PlayVideoFromVimeoState();&#xA;}&#xA;&#xA;class _PlayVideoFromVimeoState extends State&amp;lt;PlayVideoFromVimeo&amp;gt; {&#xA;  late final PodPlayerController controller;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    controller = PodPlayerController(&#xA;      playVideoFrom: PlayVideoFrom.vimeo(&#39;518228118&#39;),&#xA;    )..initialise();&#xA;    super.initState();&#xA;  }&#xA;&#xA;  @override&#xA;  void dispose() {&#xA;    controller.dispose();&#xA;    super.dispose();&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      body: PodVideoPlayer(controller: controller),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to play video from vimeo with hash&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:pod_player/pod_player.dart&#39;;&#xA;import &#39;package:flutter/material.dart&#39;;&#xA;&#xA;class PlayVideoFromVimeo extends StatefulWidget {&#xA;  const PlayVideoFromVimeo({Key? key}) : super(key: key);&#xA;&#xA;  @override&#xA;  State&amp;lt;PlayVideoFromVimeo&amp;gt; createState() =&amp;gt; _PlayVideoFromVimeoState();&#xA;}&#xA;&#xA;class _PlayVideoFromVimeoState extends State&amp;lt;PlayVideoFromVimeo&amp;gt; {&#xA;  late final PodPlayerController controller;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    controller = PodPlayerController(&#xA;      playVideoFrom: PlayVideoFrom.vimeo(&#39;518228118&#39;, hash: &#39;7cc595e1f8&#39;),&#xA;    )..initialise();&#xA;    super.initState();&#xA;  }&#xA;&#xA;  @override&#xA;  void dispose() {&#xA;    controller.dispose();&#xA;    super.dispose();&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      body: PodVideoPlayer(controller: controller),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to play video from vimeo private videos&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:pod_player/pod_player.dart&#39;;&#xA;import &#39;package:flutter/material.dart&#39;;&#xA;&#xA;class PlayVideoFromVimeoPrivateVideo extends StatefulWidget {&#xA;  const PlayVideoFromVimeoPrivateVideo({Key? key}) : super(key: key);&#xA;&#xA;  @override&#xA;  State&amp;lt;PlayVideoFromVimeoPrivateVideo&amp;gt; createState() =&amp;gt;&#xA;          _PlayVideoFromVimeoPrivateVideoState();&#xA;}&#xA;&#xA;class _PlayVideoFromVimeoPrivateVideoState&#xA;    extends State&amp;lt;PlayVideoFromVimeoPrivateVideo&amp;gt; {&#xA;  late final PodPlayerController controller;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    String videoId = &#39;your private video id&#39;;&#xA;    String token = &#39;your access token&#39;;&#xA;    final Map&amp;lt;String, String&amp;gt; headers = &amp;lt;String, String&amp;gt;{};&#xA;    headers[&#39;Authorization&#39;] = &#39;Bearer ${token}&#39;;&#xA;&#xA;    controller = PodPlayerController(&#xA;      playVideoFrom: PlayVideoFrom.vimeoPrivateVideos(&#xA;        videoId,&#xA;        httpHeaders: headers&#xA;      ),&#xA;    )..initialise();&#xA;    super.initState();&#xA;  }&#xA;&#xA;  @override&#xA;  void dispose() {&#xA;    controller.dispose();&#xA;    super.dispose();&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      body: PodVideoPlayer(controller: controller),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Options for mobile&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;Normal player option&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;Vimeo player option&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;Change quality of video&lt;/code&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/156813694-65cc70ff-f87f-4668-9ac4-7c0ee14c40cb.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/156821283-f5470bd2-21ad-4fee-90ac-85176ccc788f.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/85326522/156821301-7c6b1a6d-68a6-4945-8cca-d5e417042e30.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Please run the app in the &lt;a href=&#34;https://github.com/newtaDev/fl_video_player/tree/master/example&#34;&gt;&lt;code&gt;example/&lt;/code&gt;&lt;/a&gt; folder to start playing!&lt;/p&gt;</summary>
  </entry>
</feed>