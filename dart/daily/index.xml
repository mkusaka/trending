<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-05T01:29:04Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fujidaiti/smooth_sheets</title>
    <updated>2024-06-05T01:29:04Z</updated>
    <id>tag:github.com,2024-06-05:/fujidaiti/smooth_sheets</id>
    <link href="https://github.com/fujidaiti/smooth_sheets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sheet widgets with smooth motion and great flexibility.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;smooth_sheets&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/fujidaiti/smooth_sheets&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/commits/main/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/fujidaiti/smooth_sheets/main?logo=git&#34; alt=&#34;GitHub last commit (branch)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/smooth_sheets&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/smooth_sheets&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/pub/likes/smooth_sheets&#34; alt=&#34;Pub Likes&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/points/smooth_sheets&#34; alt=&#34;Pub Points&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/popularity/smooth_sheets&#34; alt=&#34;Pub Popularity&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;smooth_sheets&lt;/strong&gt; offers modal and persistent sheet widgets for Flutter apps. The key features are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Smooth motion&lt;/strong&gt;: The sheets respond to user interaction with smooth, graceful motion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Highly flexible&lt;/strong&gt;: Not restricted to a specific design. Both modal and persistent styles are supp/orted, as well as scrollable and non-scrollable widgets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supports nested navigation&lt;/strong&gt;: A sheet is able to have multiple pages and to navigate between the pages with motion animation for transitions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Works with imperative &amp;amp; declarative Navigator API&lt;/strong&gt;: No special navigation mechanism is required. The traditional ways such as &lt;code&gt;Navigator.push&lt;/code&gt; is supported and it works with Navigator 2.0 packages like go_route as well.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;iOS flavor&lt;/strong&gt;: The modal sheets in the style of iOS 15 are supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;CAUTIONðŸš¨&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This library is currently in the experimental stage. The API may undergo changes without prior notice. For documentation of the latest published version, please visit the &lt;a href=&#34;https://pub.dev/packages/smooth_sheets&#34;&gt;package site&lt;/a&gt; on pub.dev.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Migration guide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/docs/migration-guide-0.7.x.md&#34;&gt;0.6.x to 0.7.x&lt;/a&gt; ðŸ†•&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/docs/migration-guide-0.6.x.md&#34;&gt;0.5.x to 0.6.x&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/docs/&#34;&gt;here&lt;/a&gt; for older versions.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Showcases&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;30%&#34;&gt;&lt;img src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/636d5ca8-2883-4447-ad75-47fcb210718c&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;h3&gt;AI Playlist Generator&lt;/h3&gt; &lt;p&gt;An AI assistant that helps create a music playlist based on the user&#39;s preferences. See &lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/showcase/ai_playlist_generator.dart&#34;&gt;the cookbook&lt;/a&gt; for more details.&lt;/p&gt; &lt;p&gt;Key components:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;NavigationSheet&lt;/li&gt; &#xA;     &lt;li&gt;ModalSheetPage&lt;/li&gt; &#xA;     &lt;li&gt;DraggableNavigationSheetPage&lt;/li&gt; &#xA;     &lt;li&gt;ScrollableNavigationSheetPage&lt;/li&gt; &#xA;     &lt;li&gt;SheetDismissible&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;30%&#34;&gt;&lt;img src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/cfbc79d1-4290-4dec-88bd-a355a27726ea&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;h3&gt;Safari app&lt;/h3&gt; &lt;p&gt;A practical example of ios-style modal sheets. See &lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/showcase/safari&#34;&gt;the cookbook&lt;/a&gt; for more details.&lt;/p&gt; &lt;p&gt;Key components:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;CupertinoStackedTransition&lt;/li&gt; &#xA;     &lt;li&gt;CupertinoModalSheetRoute&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;30%&#34;&gt;&lt;img src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/1fb3f047-c993-42be-9a7e-b3efc89be635&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;h3&gt;Airbnb mobile app clone&lt;/h3&gt; &lt;p&gt;A partial clone of the Airbnb mobile app. The user can drag the house list down to reveal the map behind it. See &lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/showcase/airbnb_mobile_app.dart&#34;&gt;the cookbook&lt;/a&gt; for more details.&lt;/p&gt; &lt;p&gt;Key components:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;ScrollableSheet&lt;/li&gt; &#xA;     &lt;li&gt;SheetPhysics&lt;/li&gt; &#xA;     &lt;li&gt;SheetController&lt;/li&gt; &#xA;     &lt;li&gt;ExtentDrivenAnimation&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;30%&#34;&gt;&lt;img src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/b1e0f8d0-7037-48c5-ab4e-80a2c43df43b&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;h3&gt;Todo List&lt;/h3&gt; &lt;p&gt;A simple Todo app that shows how a sheet handles the on-screen keyboard. See &lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/showcase/todo_list&#34;&gt;the cookbook&lt;/a&gt; for more details.&lt;/p&gt; &lt;p&gt;Used components:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;ScrollableSheet&lt;/li&gt; &#xA;     &lt;li&gt;SheetContentScaffold&lt;/li&gt; &#xA;     &lt;li&gt;SheetKeyboardDismissBehavior&lt;/li&gt; &#xA;     &lt;li&gt;SheetDismissible&lt;/li&gt; &#xA;     &lt;li&gt;StickyBottomBarVisibility&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Why use this?&lt;/h2&gt; &#xA;&lt;p&gt;There are few packages on pub.dev that supports nested navigation with motion animation for page transitions. One of the great choices for this usecase is &lt;a href=&#34;https://github.com/woltapp/wolt_modal_sheet&#34;&gt;wolt_modal_sheet&lt;/a&gt;, which this package is inspired by. Although smooth_sheet has similar features with wolt_modal_sheet, it does not intended to be a replacement of that package. Here is some differences between those 2 packages:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;wolt_modal_sheet&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;smooth_sheets&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Design&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Based on Wolt&#39;s &lt;a href=&#34;https://careers.wolt.com/en/blog/tech/an-overview-of-the-multi-page-scrollable-bottom-sheet-ui-design&#34;&gt;design guideline&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Not restricted to a specific design, fully customizable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Navigation mechanism&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/woltapp/wolt_modal_sheet#usage&#34;&gt;Manage the page index in ValueNotifier&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Works with built-in Navigator API (both of imperative and declarative)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Scrollable content&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/woltapp/wolt_modal_sheet#scrollable-content&#34;&gt;Supported&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Persistent sheets&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Not supported&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Screen size adaptation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/woltapp/wolt_modal_sheet#responsive-design&#34;&gt;The sheet appears as a dialog on large screens&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Not supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Several resources are available for learning the functionalities of this package.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tutorials: See &lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/tree/main/cookbook/lib/tutorial&#34;&gt;cookbook/lib/tutorial/&lt;/a&gt; to learn the basic usage of the core components.&lt;/li&gt; &#xA; &lt;li&gt;Showcases: More practical examples are available in &lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/tree/main/cookbook/lib/showcase&#34;&gt;cookbook/lib/showcase/&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Documentation: WORK IN PROGRESS! Please see the source code for a while.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Ingredients&lt;/h2&gt; &#xA;&lt;p&gt;This section provides descriptions for each core component and links to related resources for further learning.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Extent&lt;/h3&gt; &#xA;&lt;p&gt;Extent represents the visible height of the sheet. It is used in a variety of situations, for example, to specify how much area of a sheet is initially visible at first build, or to limit the range of sheet dragging.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;DraggableSheet&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/51c483a0-5d1d-49d1-bff1-0051d1d3d937&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;A sheet that can be dragged. The height will be equal to the content. The behavior of the sheet when over-dragged or under-dragged is determined by &lt;a href=&#34;https://raw.githubusercontent.com/fujidaiti/smooth_sheets/main/#sheetphysics&#34;&gt;SheetPhysics&lt;/a&gt;. Note that this widget does not work with scrollable widgets. Instead, use &lt;a href=&#34;https://raw.githubusercontent.com/fujidaiti/smooth_sheets/main/#scrollablesheet&#34;&gt;ScrollableSheet&lt;/a&gt; for this usecase.&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/draggable_sheet.dart&#34;&gt;draggable_sheet.dart&lt;/a&gt; for basic usage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;ScrollableSheet&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/28cf4760-de78-425b-a64e-c2ac6fb6817c&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;A sheet that is similar to &lt;a href=&#34;https://raw.githubusercontent.com/fujidaiti/smooth_sheets/main/#draggablesheet&#34;&gt;DraggableSheet&lt;/a&gt;, but specifically designed to be integrated with scrollable widgets. It will begin to be dragged when the content is over-scrolled or under-scrolled.&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/scrollable_sheet.dart&#34;&gt;scrollable_sheet.dart&lt;/a&gt; for basic usage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;NavigationSheet&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/3367d3bc-a895-42be-8154-2f6fc83b30b5&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;A sheet that is able to have multiple pages and performs graceful motion animation when page transitions. It supports both of imperative Navigator API such as &lt;code&gt;Navigator.push&lt;/code&gt;, and declarative API (Navigator 2.0).&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/declarative_navigation_sheet.dart&#34;&gt;declarative_navigation_sheet.dart&lt;/a&gt;, tutorial of integration with Navigator 2.0 using &lt;a href=&#34;https://pub.dev/packages/go_router&#34;&gt;go_router&lt;/a&gt; package.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/imperative_navigation_sheet.dart&#34;&gt;imperative_navigation_sheet.dart&lt;/a&gt;, a tutorial of integration with imperative Navigator API.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;ModalSheets&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/f2212362-e193-4dab-8f8b-f24942051775&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;A sheet can be displayed as a modal sheet using ModalSheetRoute for imperative navigation, or ModalSheetPage for declarative navigation. To enable the &lt;em&gt;swipe-to-dismiss&lt;/em&gt; action, which allows the user to dismiss the sheet by a swiping-down gesture, set &lt;code&gt;swipeDismissible&lt;/code&gt; to true.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/242a8d32-a355-4d4a-8248-4572a03c64eb&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Furthermore, &lt;a href=&#34;https://medium.com/surf-dev/bottomsheet-in-ios-15-uisheetpresentationcontroller-and-its-capabilities-5e913661c9f&#34;&gt;the modal sheets in the style of iOS 15&lt;/a&gt; are also supported. For imperative navigation, use CupertinoModalSheetRoute, and for declarative navigation, use CupertinoModalSheetPage, respectively.&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/declarative_modal_sheet.dart&#34;&gt;declarative_modal_sheet.dart&lt;/a&gt;, a tutorial of integration with declarative navigation using &lt;a href=&#34;https://pub.dev/packages/go_router&#34;&gt;go_router&lt;/a&gt; package.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/imperative_modal_sheet.dart&#34;&gt;imperative_modal_sheet.dart&lt;/a&gt;, a tutorial of integration with imperative Navigator API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/cupertino_modal_sheet.dart&#34;&gt;cupertino_modal_sheet.dart&lt;/a&gt;, a tutorial of iOS style modal sheets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/showcase/todo_list&#34;&gt;showcase/todo_list&lt;/a&gt;, which uses SheetDismissible to show a confirmation dialog when the user tries to discard the todo editing sheet without saving the content.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;SheetPhysics&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/e08e3f58-cc98-4858-8b76-6e84a7e9e416&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;A physics determines how the sheet will behave when over-dragged or under-dragged, or when the user stops dragging. There are 3 predefined physics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ClampingSheetPhysics: Prevents the sheet from reaching beyond the draggable bounds&lt;/li&gt; &#xA; &lt;li&gt;StretchingSheetPhysics: Allows the sheet to go beyond the draggable bounds, but then bounce the sheet back to the edge of those bounds&lt;/li&gt; &#xA; &lt;li&gt;SnappingSheetPhysics: Automatically snaps the sheet to a certain extent when the user stops dragging&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These physics can be combined to create more complex behavior (e.g. stretching behavior + snapping behavior).&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/sheet_physics.dart&#34;&gt;sheet_physics.dart&lt;/a&gt; for basic usage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;SheetController&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/40f3fba5-9fec-40e8-a5cf-8f0312b57288&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Like &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/ScrollController-class.html&#34;&gt;ScrollController&lt;/a&gt; for scrollable widget, the SheetController can be used to animate or observe the extent of a sheet.&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/sheet_controller.dart&#34;&gt;sheet_controller.dart&lt;/a&gt; for basic usage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;SheetContentScaffold&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/52a0de82-b85c-4b2f-b10a-eb882b849900&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;A special kind of &lt;a href=&#34;https://api.flutter.dev/flutter/material/Scaffold-class.html&#34;&gt;Scaffold&lt;/a&gt; designed for use in a sheet. It has slots for an app bar and a bottom bar, similar to Scaffold. However, it differs in that its height reduces to fit the content widget.&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/smooth_sheets/latest/smooth_sheets/SheetContentScaffold-class.html&#34;&gt;SheetContentScaffold&lt;/a&gt;, the API documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/smooth_sheets/latest/smooth_sheets/BottomBarVisibility-class.html&#34;&gt;BottomBarVisibility&lt;/a&gt;, which can be used to control the visibility of the bottom bar based on the sheet position.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/sheet_content_scaffold.dart&#34;&gt;tutorial/sheet_content_scaffold.dart&lt;/a&gt;, which shows the basic usage of SheetContentScaffold.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/bottom_bar_visibility.dart&#34;&gt;tutorial/bottom_bar_visibility.dart&lt;/a&gt;, which shows the basic usage of BottomBarVisibility widgets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;SheetDraggable&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/aacc7b27-3d6f-4314-8672-d6f99fafabed&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;SheetDraggable enables its child widget to act as a drag handle for the sheet. Typically, you will want to use this widget when placing non-scrollable widget(s) in a &lt;a href=&#34;https://raw.githubusercontent.com/fujidaiti/smooth_sheets/main/#scrollablesheet&#34;&gt;ScrollableSheet&lt;/a&gt;, since it only works with scrollable widgets, so you can&#39;t drag the sheet by touching a non-scrollable area. Try removing SheetDraggable and you will see that the drag handle doesn&#39;t work as it should. Note that SheetDraggable is not needed when using DraggableSheet since it implicitly wraps the child widget with SheetDraggable.&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/sheet_draggable.dart&#34;&gt;sheet_draggable.dart&lt;/a&gt; for basic usage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;ExtentDrivenAnimation&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/8b9ed0ef-675e-4468-8a3f-cd3f1ed3dfb0&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;It is easy to create sheet extent driven animations by using ExtentDrivenAnimation, a special kind of &lt;a href=&#34;https://api.flutter.dev/flutter/animation/Animation-class.html&#34;&gt;Animation&lt;/a&gt; whose value changes from 0 to 1 as the sheet extent changes from &#39;startExtent&#39; to &#39;endExtent&#39;.&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/extent_driven_animation.dart&#34;&gt;extent_driven_animation&lt;/a&gt; for basic usage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/showcase/airbnb_mobile_app.dart&#34;&gt;airbnb_mobile_app.dart&lt;/a&gt;, which show how ExtentDrivenAnimation can be used to hide the bottom navigation bar and a FAB when the sheet is dragged down, and to show them when the sheet is dragged up again.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;SheetNotification&lt;/h3&gt; &#xA;&lt;p&gt;A sheet dispatches a &lt;a href=&#34;https://pub.dev/documentation/smooth_sheets/latest/smooth_sheets/SheetNotification-class.html&#34;&gt;SheetNotification&lt;/a&gt; when its extent changes. This can be used to observe the extent of a descendant sheet from an ancestor widget.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NotificationListener&amp;lt;SheetNotification&amp;gt;(&#xA;  onNotification: (notification) {&#xA;    debugPrint(&#39;${notification.metrics}&#39;);&#xA;    return false;&#xA;  },&#xA;  child: DraggableSheet(...),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/smooth_sheets/latest/smooth_sheets/SheetDragUpdateNotification-class.html&#34;&gt;SheetDragUpdateNotification&lt;/a&gt;, which is dispatched when the sheet is dragged by the user.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/smooth_sheets/latest/smooth_sheets/SheetUpdateNotification-class.html&#34;&gt;SheetUpdateNotification&lt;/a&gt;, which is dispatched when the sheet extent is updated by other than user interaction such as animation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/smooth_sheets/latest/smooth_sheets/SheetOverflowNotification-class.html&#34;&gt;SheetOverflowNotification&lt;/a&gt;, which is dispatched when the user tries to drag the sheet beyond its draggable bounds but the sheet has not changed its extent because its &lt;a href=&#34;https://raw.githubusercontent.com/fujidaiti/smooth_sheets/main/#sheetphysics&#34;&gt;SheetPhysics&lt;/a&gt; does not allow it to be.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.flutter.dev/flutter/widgets/NotificationListener-class.html&#34;&gt;NotificationListener&lt;/a&gt;, which can be used to listen for the notifications in a subtree.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;SheetKeyboardDismissBehavior&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://github.com/fujidaiti/smooth_sheets/assets/68946713/728d31d1-d2cd-4097-90cb-943d2d0d4d3d&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/documentation/smooth_sheets/latest/smooth_sheets/SheetKeyboardDismissBehavior-class.html&#34;&gt;SheetKeyboardDismissBehavior&lt;/a&gt; determines when the sheet should dismiss the on-screen keyboard. This feature is similar to &lt;a href=&#34;https://pub.dev/documentation/smooth_sheets/latest/smooth_sheets/ScrollViewKeyboardDismissBehavior.html&#34;&gt;ScrollViewKeyboardDismissBehavior&lt;/a&gt; for scrollable widgets.&lt;/p&gt; &#xA;&lt;p&gt;Although it is easy to create custom behaviors by implementing SheetKeyboardDismissBehavior interface, there are 3 types of predefined behaviors for convenience.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/smooth_sheets/latest/smooth_sheets/DragSheetKeyboardDismissBehavior-class.html&#34;&gt;DragSheetKeyboardDismissBehavior&lt;/a&gt;, which always dismisses the on-screen keyboard when the sheet is dragged.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/smooth_sheets/latest/smooth_sheets/DragDownSheetKeyboardDismissBehavior-class.html&#34;&gt;DragDownSheetKeyboardDismissBehavior&lt;/a&gt;, which always dismisses the on-screen keyboard only when the sheet is dragged down.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/smooth_sheets/latest/smooth_sheets/DragUpSheetKeyboardDismissBehavior-class.html&#34;&gt;DragUpSheetKeyboardDismissBehavior&lt;/a&gt;, which always dismisses the on-screen keyboard only when the sheet is dragged up.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/raw/main/cookbook/lib/tutorial/keyboard_dismiss_behavior.dart&#34;&gt;tutorial/keyboard_dismiss_behavior.dart&lt;/a&gt; for basic usage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Questions&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions, feel free to ask them on &lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/discussions&#34;&gt;the discussions page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are &lt;strong&gt;greatly appreciated&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag &#34;enhancement&#34;. Don&#39;t forget to give the project a star! Thanks again!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the Project&lt;/li&gt; &#xA; &lt;li&gt;Create your Feature Branch (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your Changes (&lt;code&gt;git commit -m &#39;Add some AmazingFeature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the Branch (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujidaiti/smooth_sheets/issues?q=is%3Aissue+is%3Aopen+label%3A%22feature+request%22&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/smooth_sheets/latest/&#34;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/smooth_sheets&#34;&gt;pub.dev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/publishers/norelease.dev/packages&#34;&gt;norelease.dev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt;</summary>
  </entry>
</feed>