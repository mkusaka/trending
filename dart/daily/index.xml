<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-22T01:37:32Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>md-siam/package_of_the_day</title>
    <updated>2022-06-22T01:37:32Z</updated>
    <id>tag:github.com,2022-06-22:/md-siam/package_of_the_day</id>
    <link href="https://github.com/md-siam/package_of_the_day" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Introduction to flutter packages: This repo will teach you some of the popular packages that are available in pub.dev, &amp; how to use them for UI design.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/badges/built-with-love.svg?sanitize=true&#34; height=&#34;28px&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/badges/flutter-dart.svg?sanitize=true&#34; height=&#34;28px&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/badges/license-MIT.svg?sanitize=true&#34; height=&#34;28px&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/badges/Flutter-3.svg?sanitize=true&#34; height=&#34;28px&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/badges/dart-null_safety-blue.svg?sanitize=true&#34; height=&#34;28px&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Package of the Day&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img align=&#34;right&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/assets/logo.png&#34; height=&#34;200&#34;&gt; Introduction to flutter packages: This repo will teach you some of the popular packages that are available in &lt;a href=&#34;https://pub.dev&#34;&gt;pub.dev&lt;/a&gt;, &amp;amp; how to use them for fast application development.&lt;br&gt; Playlist URLs: &lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=GEMoJxqpzhs&amp;amp;list=PLlvRDpXh1Se6mtlWw6pE9MXZ2o4k_KULp&#34;&gt;YouTube&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=L_QMsE2v6dw&#34;&gt;YouTube: provider&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=MSv38jO4EJk&#34;&gt;YouTube: image_picker&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=yhABSANrsNc&#34;&gt;YouTube: shimmer&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=5hQNFQ3y6UY&#34;&gt;YouTube: shared_preferences&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=04U6xRK8bjg&#34;&gt;YouTube: geolocator&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=dofN2lqEQ3w&#34;&gt;YouTube: url_launcher&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=LyAwnwvbBKM&#34;&gt;YouTube: webview_flutter&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=uz4xRnE-UIw&#34;&gt;YouTube: video_player&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=bXwK1Lrfihw&amp;amp;t=871s&#34;&gt;YouTube: responsive_framework&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=CQlA2p--oEg&#34;&gt;YouTube: introduction_screen&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=lowMUJI5iP4&#34;&gt;YouTube: confetti&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=_DaLGGzt8Hc&#34;&gt;YouTube: connectivity_plus&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=hiqpPKF_fic&amp;amp;t=287s&#34;&gt;YouTube: flutter_hooks&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=TmSKRUVKNsQ&#34;&gt;YouTube: flutter_slidable&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=v5xGLrhzDGE&#34;&gt;YouTube: json_annotation&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=LlO5jydXws0&#34;&gt;YouTube: file_picker&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=CNUBhb_cM6E&#34;&gt;YouTube: share_plus&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=6wvD-Z-9ZRM&#34;&gt;YouTube: cache_network_image&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Packages List:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/1_avatar_glow/avatarglow.dart&#34;&gt;Avatar Glow&lt;/a&gt; &amp;gt; StatelessWidget&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/2_google_fonts/googlefonts.dart&#34;&gt;Google Fonts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/3_liquid_pull_to_refresh/pull_to_refresh.dart&#34;&gt;Liquid pull to Refresh&lt;/a&gt; &amp;gt; StatelessWidget &amp;gt; LiquidPullToRefresh &amp;gt; ListView&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/4_percent_indicator/percent_indicator.dart&#34;&gt;Percent Indicator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/5_carousel_slider/carousel_slider.dart&#34;&gt;Carousel Slider&lt;/a&gt; &amp;gt; slideTransform: const CubeTransform() &amp;gt; CircularSlideIndicator&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/6_smooth_page_indicator/smooth_page_indicator.dart&#34;&gt;Smooth Page Indicator&lt;/a&gt; &amp;gt; SmoothPageIndicator &amp;gt; (controller: _controller,count: 4) &amp;gt; JumpingDotEffect&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/7_font_awesome_flutter/font_awesome_flutter.dart&#34;&gt;Font Awesome Flutter&lt;/a&gt; &amp;gt; FaIcon &amp;gt; FontAwesomeIcons.arrowUp&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/8_animations/animations.dart&#34;&gt;Animations&lt;/a&gt; &amp;gt; Container transform&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/9_neon/neon.dart&#34;&gt;Neon&lt;/a&gt; &amp;gt; text &amp;gt; color &amp;gt; fontSize &amp;gt; font: NeonFont.Cyberpunk &amp;gt; flickeringText: true&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/10_aurora_gradient/aurora.dart&#34;&gt;Aurora&lt;/a&gt; &amp;gt; backgroundColor: Colors.black &amp;gt; Aurora &amp;gt; size &amp;gt; color list&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/11_card_swiper/card_swiper.dart&#34;&gt;Card Swiper&lt;/a&gt; &amp;gt; itemCount &amp;gt; autoplay: true &amp;gt; autoplayDelay &amp;gt; Card &lt;br&gt; Require a model.dart &amp;gt; BannerImageModel &amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/12_flutter_blurhash/flutter_blurhash.dart&#34;&gt;Flutter Blurhash&lt;/a&gt; &amp;gt; BlurHash &amp;gt; hash (String) &amp;gt; image (from network)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/13_flutter_SVG/flutter_svg.dart&#34;&gt;Flutter SVG&lt;/a&gt; &amp;gt; Container &amp;gt; SvgPicture.asset() or SvgPicture.network()&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/14_flutter_custom_clippers/flutter_custom_clippers.dart&#34;&gt;Flutter Custom Clipper&lt;/a&gt; &amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/15_flutter_tts/flutter_tts.dart&#34;&gt;Flutter TTS&lt;/a&gt; &amp;gt; StatefulWidget&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/16_flutter_highlight/flutter_highlight.dart&#34;&gt;Flutter Highlight&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/17_syncfusion_flutter_charts/syncfusion_flutter_charts.dart&#34;&gt;Syncfusion Charts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/18_rflutter_alert/rflutter_alert.dart&#34;&gt;Rflutter Alert&lt;/a&gt; &amp;gt; ElevatedButton &amp;gt; child &amp;gt; Alert &amp;gt; (context, title, desc).show()&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/19_flutter_settings_ui/flutter_settings_ui.dart&#34;&gt;Settings UI&lt;/a&gt; &amp;gt; SettingsList &amp;gt; sections:[] &amp;gt; SettingsSection &amp;gt; SettingsTile&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/20_flutter_spinkit/flutter_spinkit.dart&#34;&gt;Flutter Spinkit&lt;/a&gt; &amp;gt; SpinKitRotatingCircle(color: Colors.redAccent)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/21_audioplayers/audioplayers.dart&#34;&gt;Audioplayers&lt;/a&gt; &amp;gt; AudioCache audioCache &amp;gt; late AudioPlayer player &amp;gt; void playAudio() &amp;gt; void stopAudio()&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/22_go_router/go_router.dart&#34;&gt;Go Router&lt;/a&gt; &amp;gt; MaterialApp.router &amp;gt; routeInformationParser: _router.routeInformationParser &amp;gt; routerDelegate: _router.routerDelegate&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/23_http/http.dart&#34;&gt;HTTP&lt;/a&gt; &amp;gt; watch this &lt;a href=&#34;https://www.youtube.com/watch?v=ZEnWA8c3e_4&#34;&gt;YouTube&lt;/a&gt; video&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/24_onboarding/onboarding.dart&#34;&gt;Onboarding&lt;/a&gt; &amp;gt; onboardingPagesList &amp;gt; PageModel &amp;gt; widget &amp;gt; Column &amp;gt; Container &amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/25_flutter_neumorphic/flutter_neumorphic.dart&#34;&gt;Flutter Neumorphic&lt;/a&gt; &amp;gt; &lt;a href=&#34;https://github.com/Idean/Flutter-Neumorphic/raw/master/example/lib/samples/widgets_sample.dart&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/26_math_expressions/math_expressions.dart&#34;&gt;Math Expressions&lt;/a&gt; &amp;gt; Input type is string&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/27_clay_containers/clay_containers.dart&#34;&gt;Clay Containers&lt;/a&gt; &amp;gt; ClayContainer &amp;gt; color &amp;gt; height &amp;gt;width&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/28_day_night_switcher/day_night_switcher.dart&#34;&gt;Day Night Switcher&lt;/a&gt; &amp;gt; DayNightSwitcher / DayNightSwitcherIcon &amp;gt; dayBackgroundColor &amp;gt; isDarkModeEnabled &amp;gt; onStateChanged&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/29_provider/my_provider.dart&#34;&gt;Provider&lt;/a&gt; &amp;gt; MultiProvider &amp;gt; ChangeNotifierProvider &amp;gt; create: (_) =&amp;gt; Counter() &amp;gt; child: MyHomePage() &lt;br&gt; class Counter with ChangeNotifier &amp;gt; notifyListeners();&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/30_feather_icons/feather_icons.dart&#34;&gt;Feather Icons&lt;/a&gt; &amp;gt; Icon(FeatherIcons.aperture)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/31_simple_gradient_text/simple_gradient_text.dart&#34;&gt;Simple Gradient Text&lt;/a&gt; &amp;gt; GradientTex() &amp;gt; colors: const []&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/32_image_picker/image_picker.dart&#34;&gt;Image Picker&lt;/a&gt; &amp;gt; watch the video, or read the &lt;a href=&#34;https://pub.dev/packages/image_picker&#34;&gt;documentation&lt;/a&gt; for iOS support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/33_convex_bottom_bar/convex_bottom_bar.dart&#34;&gt;Convex Bottom Bar&lt;/a&gt; &amp;gt; read the code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/34_intro_slider/intro_slider.dart&#34;&gt;Intro Slider&lt;/a&gt; &amp;gt; read the code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/35_icofont_flutter/icofont_flutter.dart&#34;&gt;Icofont Flutter&lt;/a&gt; &amp;gt; Icon() &amp;gt; IcoFontIcons.cab &amp;gt; color: Colors.white &amp;gt; size: 40&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/36_flutter_staggered_grid_view/flutter_staggered_grid_view.dart&#34;&gt;Flutter Staggered Grid View&lt;/a&gt; &amp;gt; GridView.custom &amp;gt; gridDelegate &amp;gt; pattern&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/37_shimmer/shimmer.dart&#34;&gt;Shimmer&lt;/a&gt; &amp;gt; watch this &lt;a href=&#34;https://www.youtube.com/watch?v=yhABSANrsNc&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/38_lottie/lottie.dart&#34;&gt;Lottie&lt;/a&gt; &amp;gt; make an animation controller for controlling the state of the animation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/39_shared_preferences/shared_preferences.dart&#34;&gt;Shared Preferences&lt;/a&gt; &amp;gt; watch this &lt;a href=&#34;https://www.youtube.com/watch?v=5hQNFQ3y6UY&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/40_auto_size_text/auto_size_text.dart&#34;&gt;Auto Size Text&lt;/a&gt; &amp;gt; AutoSizeText() &amp;gt; minFontSize: 18 &amp;gt; maxLines: 4 &amp;gt; overflow: TextOverflow.ellipsis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/41_device_info_plus/device_info_plus.dart&#34;&gt;Device Info Plus&lt;/a&gt; &amp;gt; deviceInfo() async{} &amp;gt; DeviceInfoPlugin deviceInfo = DeviceInfoPlugin(); &amp;gt; IosDeviceInfo iosInfo = await deviceInfo.iosInfo; &amp;gt; setState((){})&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/42_geolocator/geolocator.dart&#34;&gt;Geolocator&lt;/a&gt; &amp;gt; LocationPermission permission &amp;gt; await Geolocator.requestPermission() &amp;gt; Geolocator.getCurrentPosition()&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/43_glass_kit/glass_kit.dart&#34;&gt;Glass Kit&lt;/a&gt; &amp;gt; GlassContainer.clearGlass &amp;gt; height &amp;gt; width &amp;gt; child&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/44_url_launcher/url_launcher.dart&#34;&gt;URL Launcher&lt;/a&gt; &amp;gt; MaterialButton &amp;gt; onPressed: () async &amp;gt; if (await canLaunch(_url)) &amp;gt; else&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/45_webview_flutter/webview_flutter.dart&#34;&gt;Webview Flutter&lt;/a&gt; &amp;gt; WebView &amp;gt; javascriptMode: JavascriptMode.unrestricted &amp;gt; initialUrl: &#39;&lt;a href=&#34;https://amazon.com&#34;&gt;https://amazon.com&lt;/a&gt;&#39; &amp;gt; onWebViewCreated: (controller){}&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/46_responsive_sizer/responsive_sizer.dart&#34;&gt;Responsive Sizer&lt;/a&gt; &amp;gt; ResponsiveSizer( builder: (context, orientation, screenType) { return: Center()}) &amp;gt; height: 20.h &amp;gt; width: 20.w&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/47_video_player/video_player.dart&#34;&gt;Video Player&lt;/a&gt; &amp;gt; watch the &lt;a href=&#34;https://www.youtube.com/watch?v=uz4xRnE-UIw&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/48_responsive_framework/responsive_framework.dart&#34;&gt;Responsive Framework&lt;/a&gt; &amp;gt; builder: (context, widget) =&amp;gt; ResponsiveWrapper.builder() &amp;gt; ResponsiveBreakpoint &amp;gt; ResponsiveRowColumn() &amp;gt; ResponsiveVisibility() &amp;gt; ResponsiveValue()&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/49_timelines/timelines.dart&#34;&gt;Timelines&lt;/a&gt; &amp;gt; Timeline.tileBuilder &amp;gt; TimelineTileBuilder.fromStyle&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/50_just_audio/just_audio.dart&#34;&gt;Just Audio&lt;/a&gt; &amp;gt; check the code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/51_persistent_bottom_nav_bar/bottom_nav_bar.dart&#34;&gt;Persistent Bottom Nav Bar&lt;/a&gt; &amp;gt; check the code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/52_equatable/equatable.dart&#34;&gt;Equatable&lt;/a&gt; &amp;gt; class User extends Equatable &amp;gt; List&amp;lt; Object?&amp;gt; get props =&amp;gt; [name, urlImage];&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/53_web_scraper/web_scraper.dart&#34;&gt;Web Scraper&lt;/a&gt; &amp;gt; read documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/54_introduction_screen/onbording_screen.dart&#34;&gt;Introduction Screen&lt;/a&gt; &amp;gt; next &amp;gt; done &amp;gt; onDone &amp;gt; pages&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/55_animated_text_kit/animated_text_kit.dart&#34;&gt;Animated Text Kit&lt;/a&gt; &amp;gt; read documentation from &lt;a href=&#34;https://pub.dev/packages/animated_text_kit&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/56_horizontal_data_table/horizontal_data_table.dart&#34;&gt;Horizontal Data Table&lt;/a&gt; &amp;gt; read code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/57_confetti/confetti.dart&#34;&gt;Confetti&lt;/a&gt; &amp;gt; bool isPlaying = false &amp;gt; final controller = ConfettiController()&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/58_chewie/chewie_player.dart&#34;&gt;Chewie&lt;/a&gt; &amp;gt; final VideoPlayerController videoPlayerController &amp;gt; final bool looping &amp;gt; late ChewieController _chewieController &amp;gt; Chewie(controller: _chewieController,)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/59_get_it/get_it.dart&#34;&gt;Get It&lt;/a&gt; &amp;gt; GetIt getIt = GetIt.instance &amp;gt; getIt.registerSingleton&amp;lt; AppModel&amp;gt;(AppModelImplementation(), signalsReady: true) &amp;gt; FutureBuilder &amp;gt; future: getIt.allReady()&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/60_overlay_support/overlay_support.dart&#34;&gt;Overlay Support&lt;/a&gt; &amp;gt; showSimpleNotification() &amp;gt; Text(&#34;simple notification&#34;) &amp;gt; background: Colors.green&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/61_connectivity_plus/connectivity_plus.dart&#34;&gt;Connectivity Plus&lt;/a&gt; &amp;gt; late StreamSubscription subscription &amp;gt; subscription = Connectivity().onConnectivityChanged.listen((result) {showConnectivitySnackBar(context, result);}&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/62_flutter_hooks/flutter_hooks.dart&#34;&gt;Flutter Hooks&lt;/a&gt; &amp;gt; class MyFlutterHooks extends HookWidget &amp;gt; final usernameController = useTextEditingController() &amp;gt; final passwordController = useTextEditingController()&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/63_path_provider/path_provider.dart&#34;&gt;Path Provider&lt;/a&gt; &amp;gt; Directory tempDir = await getTemporaryDirectory(); &amp;gt; await getApplicationDocumentsDirectory();&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/64_youtube_player_flutter/youtube_player_flutter.dart&#34;&gt;Youtube Player Flutter&lt;/a&gt; &amp;gt; late YoutubePlayerController _controller ? YoutubePlayerBuilder() &amp;gt; player: YoutubePlayer(controller: _controller) &amp;gt; builder: (context, player) {}&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/65_youtube_player_iframe/youtube_player_iframe.dart&#34;&gt;Youtube Player Iframe&lt;/a&gt; &amp;gt; late YoutubePlayerController _controller &amp;gt; _controller = YoutubePlayerController()&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/66_flutter_slidable/flutter_slidable.dart&#34;&gt;Flutter Slidable&lt;/a&gt; &amp;gt; Read code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/67_json_annotation/json_annotation.dart&#34;&gt;JSON Annotation&lt;/a&gt; &amp;gt; &#39;$ flutter packages pub run build_runner build&#39; &amp;gt; Read code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/68_dio/dio.dart&#34;&gt;Dio&lt;/a&gt; &amp;gt; Read code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/69_gallery_saver/gallery_saver.dart&#34;&gt;Gallery Saver&lt;/a&gt; &amp;gt; watch this &lt;a href=&#34;https://www.youtube.com/watch?v=JILcQLZvjKE&amp;amp;list=LL&amp;amp;index=2&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/70_anim_search_bar/anim_search_bar.dart&#34;&gt;Anim Search Bar&lt;/a&gt; &amp;gt; _searchController.addListener(() {}) &amp;gt; Read the code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/71_file_picker/file_picker.dart&#34;&gt;File Picker&lt;/a&gt; &amp;gt; watch this &lt;a href=&#34;https://www.youtube.com/watch?v=LlO5jydXws0&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/72_share_plus/share_plus.dart&#34;&gt;Share Plus&lt;/a&gt; &amp;gt; watch this &lt;a href=&#34;https://www.youtube.com/watch?v=CNUBhb_cM6E&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/73_infinite_scroll_pagination/infinite_scroll_pagination.dart&#34;&gt;Infinite Scroll Pagination&lt;/a&gt; &amp;gt; read documentation from &lt;a href=&#34;https://pub.dev/packages/infinite_scroll_pagination&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/74_marquee/marquee.dart&#34;&gt;Marquee&lt;/a&gt; &amp;gt; text &amp;gt; scrollAxis &amp;gt; crossAxisAlignment &amp;gt; blankSpace &amp;gt; velocity &amp;gt; pauseAfterRound &amp;gt; startPadding&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/75_cached_network_image/cached_network_image.dart&#34;&gt;Cached Network Image&lt;/a&gt; &amp;gt; watch this &lt;a href=&#34;https://www.youtube.com/watch?v=6wvD-Z-9ZRM&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/76_fluttertoast/fluttertoast.dart&#34;&gt;Flutter Toast&lt;/a&gt; &amp;gt; Fluttertoast.showToast() &amp;gt; msg &amp;gt; fontSize &amp;gt; textColor &amp;gt; gravity&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/77_crypto/crypto.dart&#34;&gt;Crypto&lt;/a&gt; &amp;gt; bytes = utf8.encode(&#34;InputText&#34;) &amp;gt; digest = sha1.convert(bytes)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/78_bottom_navy_bar/bottom_navy_bar.dart&#34;&gt;Bottom Navy Bar&lt;/a&gt; &amp;gt; PageController _pageController &amp;gt; PageView() &amp;gt; controller: _pageController &amp;gt; BottomNavyBar() &amp;gt; selectedIndex: _currentIndex&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/79_slide_countdown/slide_countdown.dart&#34;&gt;Slide Countdown&lt;/a&gt; &amp;gt; SlideCountdownSeparated() &amp;gt; duration: const Duration(seconds: 10)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/80_date_format/date_format.dart&#34;&gt;Date Format&lt;/a&gt; &amp;gt; formatDate(DateTime.now(), [yyyy, &#39;-&#39;, mm, &#39;-&#39;, dd]) &amp;gt; formatDate(DateTime.now(), [HH, &#39;:&#39;, nn, &#39;:&#39;, ss])&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/81_flutter_rating_bar/flutter_rating_bar.dart&#34;&gt;Flutter Rating Bar&lt;/a&gt; &amp;gt; initialRating &amp;gt; minRating &amp;gt; itemBuilder: (context, _) =&amp;gt; const Icon() &amp;gt; updateOnDrag &amp;gt; onRatingUpdate&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/82_pin_code_fields/pin_code_fields.dart&#34;&gt;Pin Code Fields&lt;/a&gt; &amp;gt; PinCodeTextField() &amp;gt; appContext: context &amp;gt; length: 6 &amp;gt; pinTheme &amp;gt; onCompleted&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/83_uuid/uuid.dart&#34;&gt;UUID&lt;/a&gt; &amp;gt; id = uuid.v1(); &amp;gt; id = uuid.v4();&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/84_rxdart/rxdart.dart&#34;&gt;RxDart&lt;/a&gt; &amp;gt; Read the code&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Table of Contents:&lt;/h2&gt; &#xA;&lt;table align=&#34;center&#34; style=&#34;margin: 0px auto;&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;No.&lt;/th&gt; &#xA;   &lt;th&gt;Name of the Package&lt;/th&gt; &#xA;   &lt;th&gt;Package URL&lt;/th&gt; &#xA;   &lt;th&gt;Screenshots&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/1_avatar_glow/avatarglow.dart&#34;&gt;Avatar Glow&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://pub.dev/packages/avatar_glow&#34; target=&#34;_blank&#34;&gt;avatar_glow: ^2.0.2&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/1_avatar_glow.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/2_google_fonts/googlefonts.dart&#34;&gt;Google Fonts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/google_fonts&#34; target=&#34;_blank&#34;&gt;google_fonts: ^3.0.1&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/2_google_fonts.png&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/3_liquid_pull_to_refresh/pull_to_refresh.dart&#34;&gt;Liquid Pull To Refresh&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/liquid_pull_to_refresh&#34; target=&#34;_blank&#34;&gt;liquid_pull_to_refresh: ^3.0.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/3_liquid_pull_to_refresh.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/4_percent_indicator/percent_indicator.dart&#34;&gt;Percent Indicator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/percent_indicator&#34; target=&#34;_blank&#34;&gt;percent_indicator: ^4.2.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/4_percent_indicator.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/5_carousel_slider/carousel_slider.dart&#34;&gt;Carousel Slider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_carousel_slider&#34; target=&#34;_blank&#34;&gt;flutter_carousel_slider: ^1.0.8&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/5_carousel_slider.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/6_smooth_page_indicator/smooth_page_indicator.dart&#34;&gt;Smooth Page Indicator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/smooth_page_indicator&#34; target=&#34;_blank&#34;&gt;smooth_page_indicator: ^1.0.0+2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/6_smooth_page_indicator.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/7_font_awesome_flutter/font_awesome_flutter.dart&#34;&gt;Font Awesome Flutter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/font_awesome_flutter&#34; target=&#34;_blank&#34;&gt;font_awesome_flutter: ^10.1.0&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/7_font_awesome_flutter.png&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/8_animations/animations.dart&#34;&gt;Animations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/animations&#34; target=&#34;_blank&#34;&gt;animations: ^2.0.3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/8_animations.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/9_neon/neon.dart&#34;&gt;Neon&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/neon&#34; target=&#34;_blank&#34;&gt;neon: ^0.1.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/9_neon.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/10_aurora_gradient/aurora.dart&#34;&gt;Aurora&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/aurora&#34; target=&#34;_blank&#34;&gt;aurora: ^1.0.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/10_aurora.png&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/11_card_swiper/card_swiper.dart&#34;&gt;Card Swiper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/card_swiper&#34; target=&#34;_blank&#34;&gt;card_swiper: ^2.0.4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/11_card_swiper.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/12_flutter_blurhash/flutter_blurhash.dart&#34;&gt;Flutter BlurHash&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_blurhash&#34; target=&#34;_blank&#34;&gt;flutter_blurhash: ^0.7.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/12_flutter_blurhash.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/13_flutter_SVG/flutter_svg.dart&#34;&gt;Flutter SVG&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_svg&#34; target=&#34;_blank&#34;&gt;flutter_svg: ^1.1.0&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/13_flutter_svg.png&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/14_flutter_custom_clippers/flutter_custom_clippers.dart&#34;&gt;Flutter Custom Clipper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_custom_clippers&#34; target=&#34;_blank&#34;&gt;flutter_custom_clippers: ^2.0.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/14_flutter_custom_clippers.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/15_flutter_tts/flutter_tts.dart&#34;&gt;Flutter TTS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_tts&#34; target=&#34;_blank&#34;&gt;flutter_tts: ^3.3.3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/15_flutter_tts.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/16_flutter_highlight/flutter_highlight.dart&#34;&gt;Flutter Highlight&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_highlight&#34; target=&#34;_blank&#34;&gt;flutter_highlight: ^0.7.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/16_flutter_highlight.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/17_syncfusion_flutter_charts/syncfusion_flutter_charts.dart&#34;&gt;Syncfusion Charts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_charts&#34; target=&#34;_blank&#34;&gt;syncfusion_flutter_charts: ^20.1.57&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/17_syncfusion_flutter_charts.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/18_rflutter_alert/rflutter_alert.dart&#34;&gt;Rflutter Alert&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/rflutter_alert&#34; target=&#34;_blank&#34;&gt;rflutter_alert: ^2.0.4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/18_rflutter_alert.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/19_flutter_settings_ui/flutter_settings_ui.dart&#34;&gt;Settings UI&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_settings_ui&#34; target=&#34;_blank&#34;&gt;flutter_settings_ui: ^2.0.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/19_flutter_settings_ui.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/20_flutter_spinkit/flutter_spinkit.dart&#34;&gt;Flutter Spinkit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_spinkit&#34; target=&#34;_blank&#34;&gt;flutter_spinkit: ^5.1.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/20_flutter_spinkit.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;21&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/21_audioplayers/audioplayers.dart&#34;&gt;Audio Players&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/audioplayers&#34; target=&#34;_blank&#34;&gt;audioplayers: ^0.20.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/21_audioplayers.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/22_go_router/go_router.dart&#34;&gt;Go Router&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/go_router&#34; target=&#34;_blank&#34;&gt;go_router: ^3.1.1&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/22_go_router.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;23&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/23_http/http.dart&#34;&gt;HTTP&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/http&#34; target=&#34;_blank&#34;&gt;http: ^0.13.4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/23_http.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/24_onboarding/onboarding.dart&#34;&gt;Onboarding&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/onboarding&#34; target=&#34;_blank&#34;&gt;onboarding: ^3.1.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/24_onboarding.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/25_flutter_neumorphic/flutter_neumorphic.dart&#34;&gt;Flutter Neumorphic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_neumorphic&#34; target=&#34;_blank&#34;&gt;flutter_neumorphic: ^3.2.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/25_flutter_neumorphic.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;26&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/26_math_expressions/math_expressions.dart&#34;&gt;Math Expressions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/math_expressions&#34; target=&#34;_blank&#34;&gt;math_expressions: ^2.3.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/26_math_expressions.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;27&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/27_clay_containers/clay_containers.dart&#34;&gt;Clay Containers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/clay_containers&#34; target=&#34;_blank&#34;&gt;clay_containers: ^0.3.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/27_clay_containers.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;28&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/28_day_night_switcher/day_night_switcher.dart&#34;&gt;Day Night Switcher&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;         &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/bug_badge/bug_badge.png&#34; height=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/day_night_switcher&#34; target=&#34;_blank&#34;&gt;day_night_switcher: ^0.2.0+1&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/28_day_night_switcher_.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;29&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/29_provider/my_provider.dart&#34;&gt;Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/provider&#34; target=&#34;_blank&#34;&gt;provider: ^6.0.3&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/29_provider.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/30_feather_icons/feather_icons.dart&#34;&gt;Feather Icons&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/feather_icons&#34; target=&#34;_blank&#34;&gt;feather_icons: ^1.2.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/30_feather_icons.png&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;31&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/31_simple_gradient_text/simple_gradient_text.dart&#34;&gt;Simple Gradient Text&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/simple_gradient_text&#34; target=&#34;_blank&#34;&gt;simple_gradient_text: ^1.2.3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/31_simple_gradient_text.png&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;32&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/32_image_picker/image_picker.dart&#34;&gt;Image Picker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/image_picker&#34; target=&#34;_blank&#34;&gt;image_picker: ^0.8.5+3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/32_image_picker.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;33&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/33_convex_bottom_bar/convex_bottom_bar.dart&#34;&gt;Convex Bottom Bar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/convex_bottom_bar&#34; target=&#34;_blank&#34;&gt;convex_bottom_bar: ^3.0.0&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/33_convex_bottom_bar.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;34&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/34_intro_slider/intro_slider.dart&#34;&gt;Intro Slider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/intro_slider&#34; target=&#34;_blank&#34;&gt;intro_slider: ^3.0.5&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/34_intro_slider.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;35&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/35_icofont_flutter/icofont_flutter.dart&#34;&gt;Icofont Flutter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/icofont_flutter&#34; target=&#34;_blank&#34;&gt;icofont_flutter: ^1.4.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/35_icofont_flutter.png&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;36&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/36_flutter_staggered_grid_view/flutter_staggered_grid_view.dart&#34;&gt;Flutter Staggered Grid View&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_staggered_grid_view&#34; target=&#34;_blank&#34;&gt;flutter_staggered_grid_view: ^0.6.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/36_flutter_staggered_grid_view.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;37&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/37_shimmer/shimmer.dart&#34;&gt;Shimmer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/shimmer&#34; target=&#34;_blank&#34;&gt;shimmer: ^2.0.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/37_shimmer.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;38&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/38_lottie/lottie.dart&#34;&gt;Lottie&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/lottie&#34; target=&#34;_blank&#34;&gt;lottie: ^1.3.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/38_lottie.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;39&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/39_shared_preferences/shared_preferences.dart&#34;&gt;Shared Preferences&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/shared_preferences&#34; target=&#34;_blank&#34;&gt;shared_preferences: ^2.0.15&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/39_shared_preferences.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;40&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/40_auto_size_text/auto_size_text.dart&#34;&gt;Auto Size Text&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/auto_size_text&#34; target=&#34;_blank&#34;&gt;auto_size_text: ^3.0.0&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/40_auto_size_text.png&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;41&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/41_device_info_plus/device_info_plus.dart&#34;&gt;Device Info Plus&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/device_info_plus&#34; target=&#34;_blank&#34;&gt;device_info_plus: ^3.2.3&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/41_device_info_plus.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;42&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/42_geolocator/geolocator.dart&#34;&gt;Geolocator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/geolocator&#34; target=&#34;_blank&#34;&gt;geolocator: ^8.2.1&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/42_geolocator.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;43&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/43_glass_kit/glass_kit.dart&#34;&gt;Glass Kit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/glass_kit#getting-started&#34; target=&#34;_blank&#34;&gt;glass_kit: ^2.0.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/43_glass_kit.png&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;44&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/44_url_launcher/url_launcher.dart&#34;&gt;URL Launcher&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/url_launcher&#34; target=&#34;_blank&#34;&gt;url_launcher: ^6.1.2&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/44_url_launcher.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;45&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/45_webview_flutter/webview_flutter.dart&#34;&gt;Webview Flutter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/webview_flutter&#34; target=&#34;_blank&#34;&gt;webview_flutter: ^3.0.4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/45_webview_flutter.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;46&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/46_responsive_sizer/responsive_sizer.dart&#34;&gt;Responsive Sizer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/responsive_sizer&#34; target=&#34;_blank&#34;&gt;responsive_sizer: ^3.0.8&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/46_responsive_sizer.png&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;47&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/47_video_player/video_player.dart&#34;&gt;Video Player&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/video_player&#34; target=&#34;_blank&#34;&gt;video_player: ^2.4.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/47_video_player.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;48&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/48_responsive_framework/responsive_framework.dart&#34;&gt;Responsive Framework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/responsive_framework&#34; target=&#34;_blank&#34;&gt;responsive_framework: ^0.2.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/48_responsive_framework.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;49&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/49_timelines/timelines.dart&#34;&gt;Timelines&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/timelines&#34; target=&#34;_blank&#34;&gt;timelines: ^0.1.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/49_timelines.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/50_just_audio/just_audio.dart&#34;&gt;Just Audio&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/just_audio&#34; target=&#34;_blank&#34;&gt;just_audio: ^0.9.21&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/50_just_audio.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;51&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/51_persistent_bottom_nav_bar/bottom_nav_bar.dart&#34;&gt;Persistent BNb v2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/persistent_bottom_nav_bar_v2&#34; target=&#34;_blank&#34;&gt;persistent_b_n_b_v2: ^4.2.3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/51_persistent_bottom_nav_bar.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;52&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/52_equatable/equatable.dart&#34;&gt;Equatable&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/equatable&#34; target=&#34;_blank&#34;&gt;equatable: ^2.0.3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/52_equatable.png&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;53&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/53_web_scraper/web_scraper.dart&#34;&gt;Web Scraper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/web_scraper&#34; target=&#34;_blank&#34;&gt;web_scraper: ^0.1.4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/53_web_scraper.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;54&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/54_introduction_screen/onbording_screen.dart&#34;&gt;Introduction Screen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/introduction_screen&#34; target=&#34;_blank&#34;&gt;introduction_screen: ^3.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/54_introduction_screen.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;55&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/55_animated_text_kit/animated_text_kit.dart&#34;&gt;Animated Text Kit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/animated_text_kit&#34; target=&#34;_blank&#34;&gt;animated_text_kit: ^4.2.2&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/55_animated_text_kit.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;56&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/56_horizontal_data_table/horizontal_data_table.dart&#34;&gt;Horizontal Data Table&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/horizontal_data_table&#34; target=&#34;_blank&#34;&gt;horizontal_data_table: ^4.0.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/56_horizontal_data_table.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;57&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/57_confetti/confetti.dart&#34;&gt;Confetti&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/confetti&#34; target=&#34;_blank&#34;&gt;confetti: ^0.7.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/57_confetti.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;58&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/58_chewie/chewie_player.dart&#34;&gt;Chewie&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://pub.dev/packages/chewie&#34; target=&#34;_blank&#34;&gt;chewie: ^1.3.3&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/video_player&#34; target=&#34;_blank&#34;&gt;video_player: ^2.4.2&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/58_chewie.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;59&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/59_get_it/get_it.dart&#34;&gt;Get It&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://pub.dev/packages/get_it&#34; target=&#34;_blank&#34;&gt;get_it: ^7.2.0&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/59_get_it.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;60&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/60_overlay_support/overlay_support.dart&#34;&gt;Overlay Support&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://pub.dev/packages/overlay_support&#34; target=&#34;_blank&#34;&gt;overlay_support: ^2.0.1&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/60_overlay_support.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;61&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/61_connectivity_plus/connectivity_plus.dart&#34;&gt;Connectivity Plus&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/connectivity_plus&#34; target=&#34;_blank&#34;&gt;connectivity_plus: ^2.3.2&lt;/a&gt; [F.F.]&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/overlay_support&#34; target=&#34;_blank&#34;&gt;overlay_support: ^2.0.1&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/61_connectivity_plus.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;62&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/62_flutter_hooks/flutter_hooks.dart&#34;&gt;Flutter Hooks&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_hooks&#34; target=&#34;_blank&#34;&gt;flutter_hooks: ^0.18.4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/62_flutter_hooks.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;63&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/63_path_provider/path_provider.dart&#34;&gt;Path Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/path_provider&#34; target=&#34;_blank&#34;&gt;path_provider: ^2.0.10&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/63_path_provider.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/64_youtube_player_flutter/youtube_player_flutter.dart&#34;&gt;Youtube Player Flutter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/youtube_player_flutter&#34; target=&#34;_blank&#34;&gt;youtube_player_flutter: ^8.1.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/64_youtube_player_flutter.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;65&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/65_youtube_player_iframe/youtube_player_iframe.dart&#34;&gt;Youtube Player Iframe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/youtube_player_iframe&#34; target=&#34;_blank&#34;&gt;youtube_player_iframe: ^2.3.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/65_youtube_player_iframe.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;66&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/66_flutter_slidable/flutter_slidable.dart&#34;&gt;Flutter Slidable&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_slidable&#34; target=&#34;_blank&#34;&gt;flutter_slidable: ^1.3.0&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/66_flutter_slidable.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;67&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/67_json_annotation/json_annotation.dart&#34;&gt;JSON Annotation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/json_annotation&#34; target=&#34;_blank&#34;&gt;json_annotation: ^4.5.0&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/json_serializable&#34; target=&#34;_blank&#34;&gt;json_serializable: ^6.2.0&lt;/a&gt; [F.F.]&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/build_runner&#34; target=&#34;_blank&#34;&gt;build_runner: ^2.1.11&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/67_json_annotation.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;68&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/68_dio/dio.dart&#34;&gt;Dio&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/dio&#34; target=&#34;_blank&#34;&gt;dio: ^4.0.6&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/68_dio.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;69&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/69_gallery_saver/gallery_saver.dart&#34;&gt;Gallery Saver&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/gallery_saver&#34; target=&#34;_blank&#34;&gt;gallery_saver: ^2.3.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/69_gallery_saver.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;70&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/70_anim_search_bar/anim_search_bar.dart&#34;&gt;Anim Search Bar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/anim_search_bar&#34; target=&#34;_blank&#34;&gt;anim_search_bar: ^2.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/70_anim_search_bar.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;71&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/71_file_picker/file_picker.dart&#34;&gt;File Picker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://pub.dev/packages/file_picker&#34; target=&#34;_blank&#34;&gt;file_picker: ^4.6.1&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/open_file&#34; target=&#34;_blank&#34;&gt;open_file: ^3.2.1&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/71_file_picker.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;72&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/72_share_plus/share_plus.dart&#34;&gt;Share Plus&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/share_plus&#34; target=&#34;_blank&#34;&gt;share_plus: ^4.0.6&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/72_share_plus.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;73&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/73_infinite_scroll_pagination/infinite_scroll_pagination.dart&#34;&gt;Infinite Scroll Pagination&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/infinite_scroll_pagination&#34; target=&#34;_blank&#34;&gt;infinite_scroll_pagination: ^3.2.0&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/73_infinite_scroll_pagination.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;74&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/74_marquee/marquee.dart&#34;&gt;Marquee&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/marquee&#34; target=&#34;_blank&#34;&gt;marquee: ^2.2.3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/74_marquee.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;75&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/75_cached_network_image/cached_network_image.dart&#34;&gt;Cached Network Image&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://pub.dev/packages/cached_network_image&#34; target=&#34;_blank&#34;&gt;cached_network_image: ^3.2.1&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_cache_manager&#34; target=&#34;_blank&#34;&gt;flutter_cache_manager: ^3.3.0&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/75_cached_network_image.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;76&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/76_fluttertoast/fluttertoast.dart&#34;&gt;Flutter Toast&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/fluttertoast&#34; target=&#34;_blank&#34;&gt;fluttertoast: ^8.0.9&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/76_fluttertoast.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;77&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/77_crypto/crypto.dart&#34;&gt;Crypto&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/crypto&#34; target=&#34;_blank&#34;&gt;crypto: ^3.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/77_crypto.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;78&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/78_bottom_navy_bar/bottom_navy_bar.dart&#34;&gt;Bottom Navy Bar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/bottom_navy_bar&#34; target=&#34;_blank&#34;&gt;bottom_navy_bar: ^6.0.0&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/78_bottom_navy_bar.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;79&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/79_slide_countdown/slide_countdown.dart&#34;&gt;Slide Countdown&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://pub.dev/packages/slide_countdown&#34; target=&#34;_blank&#34;&gt;slide_countdown: ^0.2.8&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/confetti&#34; target=&#34;_blank&#34;&gt;confetti: ^0.7.0&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/79_slide_countdown.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;80&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/80_date_format/date_format.dart&#34;&gt;Date Format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/date_format&#34; target=&#34;_blank&#34;&gt;date_format: ^2.0.6&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/80_date_format.png&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;81&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/81_flutter_rating_bar/flutter_rating_bar.dart&#34;&gt;Flutter Rating Bar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_rating_bar&#34; target=&#34;_blank&#34;&gt;flutter_rating_bar: ^4.0.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/81_flutter_rating_bar.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;82&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/82_pin_code_fields/pin_code_fields.dart&#34;&gt;Pin Code Fields&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/pin_code_fields&#34; target=&#34;_blank&#34;&gt;pin_code_fields: ^7.4.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/82_pin_code_fields.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;83&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/83_uuid/uuid.dart&#34;&gt;UUID&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/uuid&#34; target=&#34;_blank&#34;&gt;uuid: ^3.0.6&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/83_uuid.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;84&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/lib/84_rxdart/rxdart.dart&#34;&gt;RxDart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;             &lt;img src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/flutter_favorite_badges/flutter_favorite.png&#34; width=&#34;65&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pub.dev/packages/rxdart&#34; target=&#34;_blank&#34;&gt;rxdart: ^0.27.4&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/md-siam/package_of_the_day/master/screenshots/84_rxdart.gif&#34; height=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>antlr/grammars-v4</title>
    <updated>2022-06-22T01:37:32Z</updated>
    <id>tag:github.com,2022-06-22:/antlr/grammars-v4</id>
    <link href="https://github.com/antlr/grammars-v4" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Grammars written for ANTLR v4; expectation that the grammars are free of actions.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/antlr/grammars-v4/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;grammars-v4&lt;/h1&gt; &#xA;&lt;p&gt;Grammars written for &lt;a href=&#34;https://github.com/antlr/antlr4&#34;&gt;ANTLR v4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is a collection of Antlr4 grammars.&lt;/p&gt; &#xA;&lt;p&gt;The root directory name is the all-lowercase name of the language parsed by the grammar. For example, java, cpp, csharp, c, etc...&lt;/p&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://github.com/antlr/grammars-v4/wiki&#34;&gt;grammars-v4 Wiki&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bdlukaa/fluent_ui</title>
    <updated>2022-06-22T01:37:32Z</updated>
    <id>tag:github.com,2022-06-22:/bdlukaa/fluent_ui</id>
    <link href="https://github.com/bdlukaa/fluent_ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implements Microsoft&#39;s Fluent Design System in Flutter.&lt;/p&gt;&lt;hr&gt;&lt;div&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;fluent_ui&lt;/h1&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Discord&#34; href=&#34;https://discord.gg/674gpDQUVq&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/809528329337962516?label=discord&amp;amp;logo=discord&#34;&gt; &lt;/a&gt; &lt;a title=&#34;Pub&#34; href=&#34;https://pub.dartlang.org/packages/fluent_ui&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/v/fluent_ui.svg?style=popout&amp;amp;include_prereleases&#34;&gt; &lt;/a&gt; &lt;a title=&#34;Made with Fluent Design&#34; href=&#34;https://github.com/bdlukaa/fluent_ui&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/fluent-design-blue?style=flat-square&amp;amp;color=7A7574&amp;amp;labelColor=0078D7&#34;&gt; &lt;/a&gt; &lt;a title=&#34;Github License&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/bdlukaa/fluent_ui&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; Design beautiful native windows apps using Flutter &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Unofficial implementation of Fluent UI for &lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt;. It&#39;s written based on the &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/&#34;&gt;official documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;You can check the web version of it &lt;a href=&#34;https://bdlukaa.github.io/fluent_ui/&#34;&gt;here&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/images/example-showcase.png&#34; alt=&#34;Example Showcase&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Content&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#badge&#34;&gt;Badge&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#style&#34;&gt;Style&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#icons&#34;&gt;Icons&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#colors&#34;&gt;Colors&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#accent-color&#34;&gt;Accent color&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#brightness&#34;&gt;Brightness&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#visual-density&#34;&gt;Visual Density&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#typography&#34;&gt;Typograpy&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#font&#34;&gt;Font&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#type-ramp&#34;&gt;Type ramp&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#reveal-focus&#34;&gt;Reveal Focus&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#motion&#34;&gt;Motion&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#page-transitions&#34;&gt;Page Transitions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#navigation&#34;&gt;Navigation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#navigation-view&#34;&gt;Navigation View&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#app-bar&#34;&gt;App Bar&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#navigation-pane&#34;&gt;Navigation Pane&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#navigation-body&#34;&gt;Navigation Body&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#info-badge&#34;&gt;Info Badge&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#tab-view&#34;&gt;Tab View&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#bottom-navigation&#34;&gt;Bottom Navigation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#inputs&#34;&gt;Inputs&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#button&#34;&gt;Button&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#filled-button&#34;&gt;Filled Button&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#icon-button&#34;&gt;Icon Button&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#outlined-button&#34;&gt;Outlined Button&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#outlined-button&#34;&gt;Text Button&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#split-button&#34;&gt;Split Button&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#toggle-button&#34;&gt;Toggle Button&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#checkbox&#34;&gt;Checkbox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#toggle-switch&#34;&gt;Toggle Switch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#radio-buttons&#34;&gt;Radio Buttons&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#dropdown-button&#34;&gt;DropDown Button&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#slider&#34;&gt;Slider&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#choosing-between-vertical-and-horizontal-sliders&#34;&gt;Choosing between vertical and horizontal sliders&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#forms&#34;&gt;Forms&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#textbox&#34;&gt;TextBox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#auto-suggest-box&#34;&gt;Auto Suggest Box&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#combo-box&#34;&gt;Combo Box&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#widgets&#34;&gt;Widgets&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#tooltip&#34;&gt;Tooltip&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#content-dialog&#34;&gt;Content Dialog&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#expander&#34;&gt;Expander&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#flyout&#34;&gt;Flyout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;TODO&lt;/strong&gt; &lt;a href=&#34;&#34;&gt;Teaching tip&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#acrylic&#34;&gt;Acrylic&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#infobar&#34;&gt;InfoBar&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;TODO&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#calendar-view&#34;&gt;Calendar View&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;TODO&lt;/strong&gt; &lt;a href=&#34;&#34;&gt;Calendar Date Picker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#date-picker&#34;&gt;Date Picker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#time-picker&#34;&gt;Time Picker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#progress-bar-and-progress-ring&#34;&gt;Progress Bar and Progress Ring&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#scrollbar&#34;&gt;Scrollbar&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#list-tile&#34;&gt;List Tile&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#info-label&#34;&gt;Info Label&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#treeview&#34;&gt;TreeView&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#scrollable-tree-view&#34;&gt;Scrollable tree view&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#lazily-load-nodes&#34;&gt;Lazily load nodes&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#commandbar&#34;&gt;CommandBar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#mobile-widgets&#34;&gt;Mobile Widgets&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#chip&#34;&gt;Chip&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#pill-button-bar&#34;&gt;Pill Button Bar&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#snackbar&#34;&gt;Snackbar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#layout-widgets&#34;&gt;Layout Widgets&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#dynamicoverflow&#34;&gt;DynamicOverflow&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#equivalents-with-the-material-library&#34;&gt;Equivalents with the material library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#Localization&#34;&gt;Localization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#contribution&#34;&gt;Contribution&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#contributing-new-localizations&#34;&gt;Contributing new localizations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;Since Flutter has stable Windows support, it&#39;s necessary to have support to its UI guidelines to build apps with fidelity, the same way it has support for Material and Cupertino. See &lt;a href=&#34;https://github.com/flutter/flutter/issues/46481&#34;&gt;this&lt;/a&gt; for more info on the offical fluent ui support&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/development/ui/widgets/material&#34;&gt;Material UI for Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/development/ui/widgets/cupertino&#34;&gt;Cupertino UI for Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GroovinChip/macos_ui&#34;&gt;MacOS UI for Flutter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Want to be a sponsor? Become one &lt;a href=&#34;https://patreon.com/bdlukaa&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;These are our really cool sponsors!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/phorcys420&#34;&gt;&lt;img src=&#34;https://github.com/phorcys420.png&#34; width=&#34;50px&#34; alt=&#34;phorcys420&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add the package to your dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  fluent_ui: ^3.10.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  fluent_ui:&#xA;    git: https://github.com/bdlukaa/fluent_ui.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can see the example app &lt;a href=&#34;https://bdlukaa.github.io/fluent_ui//&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, run &lt;code&gt;dart pub get&lt;/code&gt; to download the package.&lt;/p&gt; &#xA;&lt;p&gt;Projects using this library should use the stable channel of Flutter&lt;/p&gt; &#xA;&lt;h3&gt;Badge&lt;/h3&gt; &#xA;&lt;p&gt;Are you using this library on your app? You can use a badge to tell others:&lt;/p&gt; &#xA;&lt;a title=&#34;Made with Fluent Design&#34; href=&#34;https://github.com/bdlukaa/fluent_ui&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/fluent-design-blue?style=flat-square&amp;amp;color=7A7574&amp;amp;labelColor=0078D7&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Add the following code to your &lt;code&gt;README.md&lt;/code&gt; or to your website:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a title=&#34;Made with Fluent Design&#34; href=&#34;https://github.com/bdlukaa/fluent_ui&#34;&amp;gt;&#xA;  &amp;lt;img&#xA;    src=&#34;https://img.shields.io/badge/fluent-design-blue?style=flat-square&amp;amp;color=7A7574&amp;amp;labelColor=0078D7&#34;&#xA;  /&amp;gt;&#xA;&amp;lt;/a&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Style&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/&#34;&gt;Learn more about Fluent Style&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;FluentTheme&lt;/code&gt; widget to, well... theme your widgets. You can style your widgets in two ways:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Using the &lt;code&gt;FluentApp&lt;/code&gt; widget&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FluentApp(&#xA;  title: &#39;MyApp&#39;,&#xA;  theme: ThemeData(&#xA;    ...&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Using the &lt;code&gt;FluentTheme&lt;/code&gt; widget&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FluentTheme(&#xA;  theme: ThemeData(&#xA;    ...&#xA;  ),&#xA;  child: ...,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Icons&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/microsoft/fluentui-system-icons/raw/master/art/readme-banner.png&#34; alt=&#34;Icons Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Inside your app, you use icons to represent an action, such as copying text or navigating to the settings page. This library includes an icon library with it, so you can just call &lt;code&gt;FluentIcons.[icon_name]&lt;/code&gt; in any &lt;code&gt;Icon&lt;/code&gt; widget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Icon(FluentIcons.add),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a complete reference of current icons, please check the &lt;a href=&#34;https://bdlukaa.github.io/fluent_ui/&#34;&gt;online demo&lt;/a&gt; and click on &#34;Icons&#34;.&lt;/p&gt; &#xA;&lt;p&gt;The online demo has a search box and also supports clipboard copy in order to find every icon as fast as possible.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/images/icons/inside-icons.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Colors&lt;/h2&gt; &#xA;&lt;p&gt;This library also includes the Fluent UI colors with it, so you can just call &lt;code&gt;Colors.[color_name]&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TextStyle(color: Colors.black),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Avaiable colors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.transparent&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.white&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.black&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.grey&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.yellow&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.orange&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.red&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.magenta&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.purple&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.blue&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.teal&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Colors.green&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Accent color&lt;/h3&gt; &#xA;&lt;p&gt;Common controls use an accent color to convey state information. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/color#accent-color&#34;&gt;Learn more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default, the accent color is &lt;code&gt;Colors.blue&lt;/code&gt;. However, you can also customize your app&#39;s accent color to reflect your brand:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ThemeData(&#xA;  accentColor: Colors.blue,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use the system&#39;s accent color, you can use the plugin &lt;a href=&#34;https://pub.dev/packages/system_theme&#34;&gt;system_theme&lt;/a&gt; made by me :). It has support for (as of 04/01/2021) Android, Web and Windows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:system_theme/system_theme.dart&#39;;&#xA;&#xA;ThemeData(&#xA;  accentColor: SystemTheme.accentInstance.accent.toAccentColor(),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Brightness&lt;/h2&gt; &#xA;&lt;p&gt;You can change the theme brightness to change the color of your app to&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Brightness.light&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/images/color/light-theme.svg?sanitize=true&#34; alt=&#34;Light theme&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Brightness.dark&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/images/color/dark-theme.svg?sanitize=true&#34; alt=&#34;Dark theme&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;It defaults to the brightness of the device. (&lt;code&gt;MediaQuery.of(context).platformBrightness&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ThemeData(&#xA;  brightness: Brightness.light, // or Brightness.dark&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Visual Density&lt;/h2&gt; &#xA;&lt;p&gt;Density, in the context of a UI, is the vertical and horizontal &#34;compactness&#34; of the components in the UI. It is unitless, since it means different things to different UI components.&lt;/p&gt; &#xA;&lt;p&gt;The default for visual densities is zero for both vertical and horizontal densities. It does not affect text sizes, icon sizes, or padding values.&lt;/p&gt; &#xA;&lt;p&gt;For example, for buttons, it affects the spacing around the child of the button. For lists, it affects the distance between baselines of entries in the list. For chips, it only affects the vertical size, not the horizontal size.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ThemeData(&#xA;  visualDensity: VisualDensity.adaptivePlatformDensity,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following widgets make use of visual density:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chip&lt;/li&gt; &#xA; &lt;li&gt;PillButtonBar&lt;/li&gt; &#xA; &lt;li&gt;Snackbar&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Typography&lt;/h2&gt; &#xA;&lt;p&gt;To set a typography, you can use the &lt;code&gt;ThemeData&lt;/code&gt; class combined with the &lt;code&gt;Typography&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ThemeData(&#xA;  typography: Typography(&#xA;    caption: TextStyle(&#xA;      fontSize: 12,&#xA;      color: Colors.black,&#xA;      fontWeight: FontWeight.normal,&#xA;    ),&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Font&lt;/h3&gt; &#xA;&lt;p&gt;You should use one font throughout your app&#39;s UI, and we recommend sticking with the default font for Windows apps, &lt;strong&gt;Segoe UI Variable&lt;/strong&gt;. It&#39;s designed to maintain optimal legibility across sizes and pixel densities and offers a clean, light, and open aesthetic that complements the content of the system. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/style/typography#font&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/style/images/type/segoe-sample.svg?sanitize=true&#34; alt=&#34;Font Segoe UI Showcase&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Type ramp&lt;/h3&gt; &#xA;&lt;p&gt;The Windows type ramp establishes crucial relationships between the type styles on a page, helping users read content easily. All sizes are in effective pixels. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/style/typography#type-ramp&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/style/images/type/text-block-type-ramp.svg?sanitize=true&#34; alt=&#34;Windows Type Ramp&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reveal Focus&lt;/h2&gt; &#xA;&lt;p&gt;Reveal Focus is a lighting effect for &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/devices/designing-for-tv&#34;&gt;10-foot experiences&lt;/a&gt;, such as Xbox One and television screens. It animates the border of focusable elements, such as buttons, when the user moves gamepad or keyboard focus to them. It&#39;s turned off by default, but it&#39;s simple to enable. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/reveal-focus&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Reveal Focus calls attention to focused elements by adding an animated glow around the element&#39;s border:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/images/traveling-focus-fullscreen-light-rf.gif&#34; alt=&#34;Reveal Focus Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is especially helpful in 10-foot scenarios where the user might not be paying full attention to the entire TV screen.&lt;/p&gt; &#xA;&lt;h3&gt;Enabling it&lt;/h3&gt; &#xA;&lt;p&gt;Reveal Focus is off by default. To enable it, change the &lt;code&gt;focusTheme&lt;/code&gt; in your app &lt;code&gt;ThemeData&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;theme: ThemeData(&#xA;  focusTheme: FocusThemeData(&#xA;    glowFactor: 4.0,&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To enable it in a 10 foot screen, use the method &lt;code&gt;is10footScreen&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;dart:ui&#39; as ui;&#xA;&#xA;theme: ThemeData(&#xA;  focusTheme: FocusThemeData(&#xA;    glowFactor: is10footScreen(ui.window.physicalSize.width) ? 2.0 : 0.0,&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go to the &lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/example&#34;&gt;example&lt;/a&gt; project to a full example&lt;/p&gt; &#xA;&lt;h3&gt;Why isn&#39;t Reveal Focus on by default?&lt;/h3&gt; &#xA;&lt;p&gt;As you can see, it&#39;s fairly easy to turn on Reveal Focus when the app detects it&#39;s running on 10 foot screen. So, why doesn&#39;t the system just turn it on for you? Because Reveal Focus increases the size of the focus visual, which might cause issues with your UI layout. In some cases, you&#39;ll want to customize the Reveal Focus effect to optimize it for your app.&lt;/p&gt; &#xA;&lt;h3&gt;Customizing Reveal Focus&lt;/h3&gt; &#xA;&lt;p&gt;You can customize the focus border, border radius and glow color:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;focusTheme: FocusStyle(&#xA;  borderRadius: BorderRadius.zero,&#xA;  glowColor: theme.accentColor?.withOpacity(0.2),&#xA;  glowFactor: 0.0,&#xA;  border: BorderSide(&#xA;    width: 2.0,&#xA;    color: theme.inactiveColor ?? Colors.transparent,&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To customize it to a single widget, wrap the widget in a &lt;code&gt;FocusTheme&lt;/code&gt; widget, and change the options you want:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FocusTheme(&#xA;  data: FocusThemeData(...),&#xA;  child: Button(&#xA;    text: Text(&#39;Custom Focus Button&#39;),&#xA;    onPressed: () {},&#xA;  )&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Motion&lt;/h1&gt; &#xA;&lt;p&gt;This package widely uses animation in the widgets. The animation duration and curve can be defined on the app theme.&lt;/p&gt; &#xA;&lt;h2&gt;Page transitions&lt;/h2&gt; &#xA;&lt;p&gt;Page transitions navigate users between pages in an app, providing feedback as the relationship between pages. Page transitions help users understand if they are at the top of a navigation hierarchy, moving between sibling pages, or navigating deeper into the page hierarchy.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s recommended to widely use page transitions on &lt;code&gt;NavigationView&lt;/code&gt;, that can be implemented using the widget &lt;code&gt;NavigationBody&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This library gives you the following implementations to navigate between your pages:&lt;/p&gt; &#xA;&lt;h4&gt;Entrance&lt;/h4&gt; &#xA;&lt;p&gt;Entrance is a combination of a slide up animation and a fade in animation for the incoming content. Use entrance when the user is taken to the top of a navigational stack, such as navigating between tabs or left-nav items.&lt;/p&gt; &#xA;&lt;p&gt;The desired feeling is that the user has started over.&lt;/p&gt; &#xA;&lt;p&gt;Avaiable with the widget &lt;code&gt;EntrancePageTransition&lt;/code&gt;, it produces the following effect:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/motion/images/page-refresh.gif&#34; alt=&#34;Entrance Page Transition Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Drill In&lt;/h4&gt; &#xA;&lt;p&gt;Use drill when users navigate deeper into an app, such as displaying more information after selecting an item.&lt;/p&gt; &#xA;&lt;p&gt;The desired feeling is that the user has gone deeper into the app.&lt;/p&gt; &#xA;&lt;p&gt;Avaiable with the widget &lt;code&gt;DrillInPageTransition&lt;/code&gt;, it produces the following effect:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/motion/images/drill.gif&#34; alt=&#34;Drill Page Transition Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Horizontal&lt;/h4&gt; &#xA;&lt;p&gt;It&#39;s avaiable with the widget &lt;code&gt;HorizontalSlidePageTransition&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Navigation&lt;/h1&gt; &#xA;&lt;p&gt;The default Flutter Navigation is available on the &lt;code&gt;FluentApp&lt;/code&gt; widget, that means you can simply call &lt;code&gt;Navigator.push&lt;/code&gt; and &lt;code&gt;Navigator.pop&lt;/code&gt; to navigate between routes. See &lt;a href=&#34;https://flutter.dev/docs/cookbook/navigation/navigation-basics&#34;&gt;navigate to a new screen and back&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Navigation View&lt;/h2&gt; &#xA;&lt;p&gt;The NavigationView control provides top-level navigation for your app. It adapts to a variety of screen sizes and supports both &lt;em&gt;top&lt;/em&gt; and &lt;em&gt;left&lt;/em&gt; navigation styles.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/nav-view-header.png&#34; alt=&#34;Navigation Panel&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;App Bar&lt;/h3&gt; &#xA;&lt;p&gt;The app bar is the top app bar that every desktop nowadays have.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NavigationView(&#xA;  appBar: NavigationAppBar(&#xA;    title: Text(&#39;Nice App Title :)&#39;),&#xA;    actions: Row(children: [&#xA;      /// These actions are usually the minimize, maximize and close window&#xA;    ]),&#xA;    /// If automaticallyImplyLeading is true, a &#39;back button&#39; will be added to&#xA;    /// app bar. This property can be overritten by [leading]&#xA;    automaticallyImplyLeading: true,&#xA;  ),&#xA;  ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Navigation Pane&lt;/h3&gt; &#xA;&lt;p&gt;The pane is the pane that can be displayed at the left or at the top.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NavigationView(&#xA;  ...,&#xA;  pane: NavigationPane(&#xA;    /// The current selected index&#xA;    selected: index,&#xA;    /// Called whenever the current index changes&#xA;    onChanged: (i) =&amp;gt; setState(() =&amp;gt; index = i),&#xA;    displayMode: PaneDisplayMode.auto,&#xA;  ),&#xA;  ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can change the &lt;code&gt;displayMode&lt;/code&gt; to make it fit the screen.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Screenshot&lt;/th&gt; &#xA;   &lt;th&gt;Info&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Top&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/displaymode-top.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The pane is positioned above the content. We recommend top navigation when: &lt;br&gt;- You have 5 or fewer top-level navigation categories that are equally important, and any additional top-level navigation categories that end up in the dropdown overflow menu are considered less important.&lt;br&gt; - You need to show all navigation options on screen. - You want more space for your app content. &lt;br&gt;- Icons cannot clearly describe your app&#39;s navigation categories.&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Open&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/displaymode-left.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The pane is expanded and positioned to the left of the content. We recommend &lt;em&gt;open&lt;/em&gt; navigation when: &lt;br&gt;- You have 5-10 equally important top-level navigation categories.&lt;br&gt;- You want navigation categories to be very prominent, with less space for other app content.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Compact&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/displaymode-leftcompact.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The pane shows only icons until opened and is positioned to the left of the content.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Minimal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/displaymode-leftminimal.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Only the menu button is shown until the pane is opened. When opened, it&#39;s positioned to the left of the content.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Auto&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/displaymode-auto.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;By default, &lt;code&gt;displayMode&lt;/code&gt; is set to &lt;code&gt;auto&lt;/code&gt;. In Auto mode, the NavigationView adapts between &lt;code&gt;minimal&lt;/code&gt; when the window is narrow, to &lt;code&gt;compact&lt;/code&gt;, and then &lt;code&gt;open&lt;/code&gt; as the window gets wider.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can customize the selected indicator. By default &lt;code&gt;StickyNavigationIndicator&lt;/code&gt; is used, but you can also use the old windows indicator:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;pane: NavigationPane(&#xA;  indicator: const EndNavigationIndicator(),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Navigation body&lt;/h3&gt; &#xA;&lt;p&gt;A navigation body is used to implement page transitions into a navigation view. It knows what is the current display mode of the parent &lt;code&gt;NavigationView&lt;/code&gt;, if any, and define the page transitions accordingly.&lt;/p&gt; &#xA;&lt;p&gt;For top mode, the horizontal page transition is used. For the others, drill in page transition is used.&lt;/p&gt; &#xA;&lt;p&gt;You can also supply a builder function to create the pages instead of a list of widgets. For this use the &lt;code&gt;NavigationBody.builder&lt;/code&gt; constructor.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;int _currentIndex = 0;&#xA;&#xA;NavigationView(&#xA;  ...,&#xA;  content: NavigationBody(index: _currentIndex, children: [...]),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;NavigationBody.builder&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NavigationView(&#xA;  ...,&#xA;  content: NavigationBody.builder(&#xA;    index: _currentIndex,&#xA;    itemBuilder: (context, index) {&#xA;      return ...;&#xA;    }&#xA;  )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ScaffoldPage&lt;/code&gt; is usually used with the navigation body as its children:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NavigationBody(&#xA;  index: _currentIndex,&#xA;  children: [&#xA;    const ScaffoldPage(&#xA;      topBar: PageHeader(header: Text(&#39;Your Songs&#39;))&#xA;    )&#xA;  ],&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Info Badge&lt;/h3&gt; &#xA;&lt;p&gt;Badging is a non-intrusive and intuitive way to display notifications or bring focus to an area within an app - whether that be for notifications, indicating new content, or showing an alert. An &lt;code&gt;InfoBadge&lt;/code&gt; is a small piece of UI that can be added into an app and customized to display a number, icon, or a simple dot. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/info-badge&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/infobadge/infobadge-example-1.png&#34; alt=&#34;InfoBadge Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;InfoBadge is built into &lt;code&gt;NavigationView&lt;/code&gt;, but can also be placed as a standalone widget, allowing you to place InfoBadge into any control or piece of UI of your choosing. When you use an &lt;code&gt;InfoBadge&lt;/code&gt; somewhere other than &lt;code&gt;NavigationView&lt;/code&gt;, you are responsible for programmatically determining when to show and dismiss the &lt;code&gt;InfoBadge&lt;/code&gt;, and where to place the &lt;code&gt;InfoBadge&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to add an info badge to a &lt;code&gt;PaneItem&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;NavigationView(&#xA;  ...,&#xA;  pane: NavigationPane(&#xA;    ...&#xA;    children: [&#xA;      PaneItem(&#xA;        icon: Icon(FluentIcons.more),&#xA;        title: const Text(&#39;Others&#39;),&#xA;        infoBadge: const InfoBadge(&#xA;          source: Text(&#39;9&#39;),&#xA;        ),&#xA;      ),&#xA;    ],&#xA;  ),&#xA;  ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which produces the folllowing effects in the display modes:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Open&lt;/th&gt; &#xA;   &lt;th&gt;Compact&lt;/th&gt; &#xA;   &lt;th&gt;Top&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/infobadge/navview-expanded.png&#34; alt=&#34;Open InfoBadge Preview&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/infobadge/navview-compact.png&#34; alt=&#34;Compact InfoBadge Preview&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/infobadge/navview-top.png&#34; alt=&#34;Top InfoBadge Preview&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Tab View&lt;/h2&gt; &#xA;&lt;p&gt;The TabView control is a way to display a set of tabs and their respective content. TabViews are useful for displaying several pages (or documents) of content while giving a user the capability to rearrange, open, or close new tabs. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/tab-view&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a tab view:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;SizedBox(&#xA;  height: 600,&#xA;  child: TabView(&#xA;    currentIndex: currentIndex,&#xA;    onChanged: (index) =&amp;gt; setState(() =&amp;gt; currentIndex = index),&#xA;    onNewPressed: () {&#xA;      setState(() =&amp;gt; tabs++);&#xA;    },&#xA;    tabs: List.generate(tabs, (index) {&#xA;      return Tab(&#xA;        text: Text(&#39;Tab $index&#39;),&#xA;        closeIcon: FluentIcons.chrome_close,&#xA;      );&#xA;    }),&#xA;    bodies: List.generate(&#xA;      tabs,&#xA;      (index) =&amp;gt; Container(&#xA;        color: index.isEven ? Colors.red : Colors.yellow,&#xA;      ),&#xA;    ),&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/tabview/tab-introduction.png&#34; alt=&#34;TabView Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bottom Navigation&lt;/h2&gt; &#xA;&lt;p&gt;The bottom navigation displays icons and optional text at the bottom of the screen for switching between different primary destinations in an app. This is commomly used on small screens. &lt;a href=&#34;https://developer.microsoft.com/pt-br/fluentui#/controls/android/bottomnavigation&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a bottom navigation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;int index = 0;&#xA;&#xA;ScaffoldPage(&#xA;  content: NavigationBody(index: index, children: [&#xA;    Container(),&#xA;    Container(),&#xA;    Container(),&#xA;  ]),&#xA;  bottomBar: BottomNavigation(&#xA;    index: index,&#xA;    onChanged: (i) =&amp;gt; setState(() =&amp;gt; index = i),&#xA;    items: [&#xA;      BottomNavigationItem(&#xA;        icon: Icon(Icons.two_k),&#xA;        selectedIcon: Icon(Icons.two_k_plus),&#xA;        title: Text(&#39;Both&#39;),&#xA;      ),&#xA;      BottomNavigationItem(&#xA;        icon: Icon(Icons.phone_android_outlined),&#xA;        selectedIcon: Icon(Icons.phone_android),&#xA;        title: Text(&#39;Android&#39;),&#xA;      ),&#xA;      BottomNavigationItem(&#xA;        icon: Icon(Icons.phone_iphone_outlined),&#xA;        selectedIcon: Icon(Icons.phone_iphone),&#xA;        title: Text(&#39;iOS&#39;),&#xA;      ),&#xA;    ],&#xA;  )&#xA;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Inputs&lt;/h1&gt; &#xA;&lt;p&gt;Inputs are widgets that reacts to user interection. On most of the inputs you can set &lt;code&gt;onPressed&lt;/code&gt; or &lt;code&gt;onChanged&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt; to disable it.&lt;/p&gt; &#xA;&lt;h2&gt;Button&lt;/h2&gt; &#xA;&lt;p&gt;A button gives the user a way to trigger an immediate action. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/buttons&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic button:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Button(&#xA;  child: Text(&#39;Standard XAML button&#39;),&#xA;  // Set onPressed to null to disable the button&#xA;  onPressed: () {&#xA;    print(&#39;button pressed&#39;);&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/button.png&#34; alt=&#34;Button&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also use some alternative buttons:&lt;/p&gt; &#xA;&lt;h3&gt;Filled Button&lt;/h3&gt; &#xA;&lt;p&gt;This button is identical to the &lt;code&gt;Button&lt;/code&gt;, but with accent color fill in background&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FilledButton(&#xA;  child: Text(&#39;FILLED BUTTON&#39;),&#xA;  onPressed: () {&#xA;    print(&#39;pressed filled button&#39;);&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Icon Button&lt;/h3&gt; &#xA;&lt;p&gt;This button is used to display an &lt;code&gt;Icon&lt;/code&gt; as content. It&#39;s optmized to show icons.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;IconButton(&#xA;  icon: Icon(FluentIcons.add),&#xA;  onPressed: () {&#xA;    print(&#39;pressed icon button&#39;);&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Outlined Button&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;OutlinedButton(&#xA;  child: Text(&#39;OUTLINED BUTTON&#39;),&#xA;  onPressed: () {&#xA;    print(&#39;pressed outlined button&#39;);&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Text Button&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TextButton(&#xA;  child: Text(&#39;TEXT BUTTON&#39;),&#xA;  onPressed: () {&#xA;    print(&#39;pressed text button&#39;);&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Split Button&lt;/h2&gt; &#xA;&lt;p&gt;A Split Button has two parts that can be invoked separately. One part behaves like a standard button and invokes an immediate action. The other part invokes a flyout that contains additional options that the user can choose from. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/buttons#create-a-split-button&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use a &lt;code&gt;SplitButtonBar&lt;/code&gt; to create a Split Button. It takes two &lt;code&gt;Button&lt;/code&gt;s in the &lt;code&gt;buttons&lt;/code&gt; property. You can also customize the button spacing by changing the property &lt;code&gt;interval&lt;/code&gt; in its theme.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a split button:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;const double splitButtonHeight = 25.0;&#xA;&#xA;SplitButtonBar(&#xA;  style: SplitButtonThemeData(&#xA;    interval: 1, // the default value is one&#xA;  ),&#xA;  // There need to be at least 2 items in the buttons, and they must be non-null&#xA;  buttons: [&#xA;    SizedBox(&#xA;      height: splitButtonHeight,&#xA;      child: Button(&#xA;        child: Container(&#xA;          height: 24,&#xA;          width: 24,&#xA;          color: FluentTheme.of(context).accentColor,&#xA;        ),&#xA;        onPressed: () {},&#xA;      ),&#xA;    ),&#xA;    IconButton(&#xA;      icon: const SizedBox(&#xA;        height: splitButtonHeight,&#xA;        child: const Icon(FluentIcons.chevron_down, size: 10.0),&#xA;      ),&#xA;      onPressed: () {},&#xA;    ),&#xA;  ],&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following button:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/split-button-rtb.png&#34; alt=&#34;SplitButtonBar Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Toggle Button&lt;/h2&gt; &#xA;&lt;p&gt;A button that can be on or off.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic toggle button:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;bool _value = false;&#xA;&#xA;ToggleButton(&#xA;  child: Text(&#39;Toggle Button&#39;),&#xA;  checked: _value,&#xA;  onChanged: (value) =&amp;gt; setState(() =&amp;gt; _value = value),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Checkbox&lt;/h2&gt; &#xA;&lt;p&gt;A check box is used to select or deselect action items. It can be used for a single item or for a list of multiple items that a user can choose from. The control has three selection states: unselected, selected, and indeterminate. Use the indeterminate state when a collection of sub-choices have both unselected and selected states. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/checkbox&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a checkbox:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;bool _checked = true;&#xA;&#xA;Checkbox(&#xA;  checked: _checked,&#xA;  onChanged: (value) =&amp;gt; setState(() =&amp;gt; _checked = value),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Handling its states&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;State&lt;/th&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;checked&lt;/td&gt; &#xA;   &lt;td&gt;checked&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;unchecked&lt;/td&gt; &#xA;   &lt;td&gt;checked&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;indeterminate&lt;/td&gt; &#xA;   &lt;td&gt;checked&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;enabled&lt;/td&gt; &#xA;   &lt;td&gt;onChanged&lt;/td&gt; &#xA;   &lt;td&gt;non-null&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;disabled&lt;/td&gt; &#xA;   &lt;td&gt;onChanged&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/templates-checkbox-states-default.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Toggle Switch&lt;/h2&gt; &#xA;&lt;p&gt;The toggle switch represents a physical switch that allows users to turn things on or off, like a light switch. Use toggle switch controls to present users with two mutually exclusive options (such as on/off), where choosing an option provides immediate results. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/toggles&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic toggle switch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;bool _checked = false;&#xA;&#xA;ToggleSwitch(&#xA;  checked: _checked,&#xA;  onChanged: (v) =&amp;gt; setState(() =&amp;gt; _checked = v),&#xA;  content: Text(_checked ? &#39;On&#39; : &#39;Off&#39;);&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/toggleswitches01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Radio Buttons&lt;/h2&gt; &#xA;&lt;p&gt;Radio buttons, also called option buttons, let users select one option from a collection of two or more mutually exclusive, but related, options. Radio buttons are always used in groups, and each option is represented by one radio button in the group.&lt;/p&gt; &#xA;&lt;p&gt;In the default state, no radio button in a RadioButtons group is selected. That is, all radio buttons are cleared. However, once a user has selected a radio button, the user can&#39;t deselect the button to restore the group to its initial cleared state.&lt;/p&gt; &#xA;&lt;p&gt;The singular behavior of a RadioButtons group distinguishes it from check boxes, which support multi-selection and deselection, or clearing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/radio-button&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic set of radio buttons:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;int _currentIndex = -1;&#xA;&#xA;final List&amp;lt;String&amp;gt; radioButtons = &amp;lt;String&amp;gt;[&#xA;  &#39;RadioButton 1&#39;,&#xA;  &#39;RadioButton 2&#39;,&#xA;  &#39;RadioButton 3&#39;,&#xA;];&#xA;&#xA;Column(&#xA;  children: List.generate(radioButtons.length, (index) {&#xA;    return RadioButton(&#xA;      checked: _currentIndex == index,&#xA;      // set onChanged to null to disable the button&#xA;      onChanged: (value) =&amp;gt; setState(() =&amp;gt; _currentIndex = index),&#xA;      content: Text(radioButtons[index]),&#xA;    );&#xA;  }),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/controls/radio-button.png&#34; alt=&#34;Radio Buttons&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;DropDown button&lt;/h2&gt; &#xA;&lt;p&gt;A DropDownButton is a button that shows a chevron as a visual indicator that it has an attached flyout that contains more options. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/buttons#create-a-drop-down-button&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/drop-down-button-align.png&#34; alt=&#34;DropDown Button&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a drop down button:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;DropDownButton(&#xA;  leading: const Icon(FluentIcons.align_left),&#xA;  title: const Text(&#39;Alignment&#39;),&#xA;  items: [&#xA;    MenuFlyoutItem(&#xA;      text: const Text(&#39;Left&#39;),&#xA;      leading: const Icon(FluentIcons.align_left),&#xA;      onPressed: () =&amp;gt; debugPrint(&#39;left&#39;),&#xA;    ),&#xA;    MenuFlyoutItem(&#xA;      text: const Text(&#39;Center&#39;),&#xA;      leading: const Icon(FluentIcons.align_center),&#xA;      onPressed: () =&amp;gt; debugPrint(&#39;center&#39;),&#xA;    ),&#xA;    MenuFlyoutItem(&#xA;      text: const Text(&#39;Right&#39;),&#xA;      leading: const Icon(FluentIcons.align_right),&#xA;      onPressed: () =&amp;gt; debugPrint(&#39;right&#39;),&#xA;    ),&#xA;  ],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Slider&lt;/h2&gt; &#xA;&lt;p&gt;A slider is a control that lets the user select from a range of values by moving a thumb control along a track. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/slider&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A slider is a good choice when you know that users think of the value as a relative quantity, not a numeric value. For example, users think about setting their audio volume to low or medium—not about setting the value to 2 or 5.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t use a slider for binary settings. Use a &lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/#toggle-switches&#34;&gt;toggle switch&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic slider:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;double _sliderValue = 0;&#xA;&#xA;SizedBox(&#xA;  // The default width is 200.&#xA;  // The slider does not have its own widget, so you have to add it yourself.&#xA;  // The slider always try to be as big as possible&#xA;  width: 200,&#xA;  child: Slider(&#xA;    max: 100,&#xA;    value: _sliderValue,&#xA;    onChanged: (v) =&amp;gt; setState(() =&amp;gt; _sliderValue = v),&#xA;    // Label is the text displayed above the slider when the user is interacting with it.&#xA;    label: &#39;${_sliderValue.toInt()}&#39;,&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/controls/slider.png&#34; alt=&#34;Slider Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Choosing between vertical and horizontal sliders&lt;/h3&gt; &#xA;&lt;p&gt;You can set &lt;code&gt;vertical&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to create a vertical slider&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Horizontal&lt;/th&gt; &#xA;   &lt;th&gt;Vertical&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;If the control is used to seek within media, like in a video app.&lt;/td&gt; &#xA;   &lt;td&gt;if the slider represents a real-world value that is normally shown vertically (such as temperature).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Rating Bar&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The property &lt;code&gt;starSpacing&lt;/code&gt; was not implemented yet&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The rating control allows users to view and set ratings that reflect degrees of satisfaction with content and services. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/rating&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;double rating = 0.0;&#xA;&#xA;RatingBar(&#xA;  rating: rating,&#xA;  onChanged: (v) =&amp;gt; setState(() =&amp;gt; rating = v),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can set &lt;code&gt;amount&lt;/code&gt; to change the amount of stars. The &lt;code&gt;rating&lt;/code&gt; must be less than the stars and more than 0. You can also change the &lt;code&gt;icon&lt;/code&gt;, its size and color. You can make the bar read only by setting &lt;code&gt;onChanged&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/rating_rs2_doc_ratings_intro.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Forms&lt;/h1&gt; &#xA;&lt;p&gt;A form is a group of controls that collect and submit data from users. Forms are typically used for settings pages, surveys, creating accounts, and much more.&lt;/p&gt; &#xA;&lt;h2&gt;TextBox&lt;/h2&gt; &#xA;&lt;p&gt;A Text Box lets a user type text into an app. It&#39;s typically used to capture a single line of text, but can be configured to capture multiple lines of text. The text displays on the screen in a simple, uniform, plaintext format. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/text-box&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/text-box.png&#34; alt=&#34;TextBox Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;a href=&#34;https://raw.githubusercontent.com/bdlukaa/fluent_ui/master/example/lib/screens/forms.dart&#34;&gt;Forms screen&lt;/a&gt; in the example app for reference.&lt;/p&gt; &#xA;&lt;p&gt;You can use the widget &lt;code&gt;TextBox&lt;/code&gt; to create text boxes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TextBox(&#xA;  controller: ...,&#xA;  header: &#39;Notes&#39;,&#xA;  placeholder: &#39;Type your notes here&#39;,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/text-box-ex1.png&#34; alt=&#34;TextBox Example Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to validate the text box, use a &lt;code&gt;TextFormBox&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TextFormBox(&#xA;  placeholder: &#39;Your email&#39;,&#xA;  validator: (text) {&#xA;    if (text == null || text.isEmpty) return &#39;Provide an email&#39;;&#xA;  }&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Auto Suggest Box&lt;/h2&gt; &#xA;&lt;p&gt;Use an AutoSuggestBox to provide a list of suggestions for a user to select from as they type. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/auto-suggest-box&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/controls-autosuggest-expanded-01.png&#34; alt=&#34;AutoSuggestBox example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create an AutoSuggestBox&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;AutoSuggestBox(&#xA;  placeholder: &#39;Select a cat breed&#39;,&#xA;  items: [&#xA;    &#39;Chatilly-Tifanny&#39;,&#xA;    &#39;Chartreux&#39;,&#xA;    &#39;Chausie&#39;,&#xA;    &#39;Munchkin&#39;,&#xA;    &#39;York Chocolate&#39;,&#xA;  ],&#xA;  onSelected: (breed) {&#xA;    print(breed);&#xA;  },&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Combo Box&lt;/h2&gt; &#xA;&lt;p&gt;Use a combo box (also known as a drop-down list) to present a list of items that a user can select from. A combo box starts in a compact state and expands to show a list of selectable items. A ListBox is similar to a combo box, but is not collapsible/does not have a compact state. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/combo-box&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic combo box:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;final values = [&#39;Blue&#39;, &#39;Green&#39;, &#39;Yellow&#39;, &#39;Red&#39;];&#xA;String? comboBoxValue;&#xA;&#xA;SizedBox(&#xA;  width: 200,&#xA;  child: Combobox&amp;lt;String&amp;gt;(&#xA;    placeholder: Text(&#39;Selected list item&#39;),&#xA;    isExpanded: true,&#xA;    items: values&#xA;        .map((e) =&amp;gt; ComboboxItem&amp;lt;String&amp;gt;(&#xA;              value: e,&#xA;              child: Text(e),&#xA;            ))&#xA;        .toList(),&#xA;    value: comboBoxValue,&#xA;    onChanged: (value) {&#xA;      // print(value);&#xA;      if (value != null) setState(() =&amp;gt; comboBoxValue = value);&#xA;    },&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/combo-box-no-selection.png&#34; alt=&#34;Combo box Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Widgets&lt;/h1&gt; &#xA;&lt;h2&gt;Tooltip&lt;/h2&gt; &#xA;&lt;p&gt;A tooltip is a short description that is linked to another control or object. Tooltips help users understand unfamiliar objects that aren&#39;t described directly in the UI. They display automatically when the user moves focus to, presses and holds, or hovers the mouse pointer over a control. The tooltip disappears after a few seconds, or when the user moves the finger, pointer or keyboard/gamepad focus. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/tooltips&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To add a tooltip to a widget, wrap it in a &lt;code&gt;Tooltip&lt;/code&gt; widget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Tooltip(&#xA;  message: &#39;Click to perform an action&#39;,&#xA;  child: Button(&#xA;    child: Text(&#39;Button with tooltip&#39;),&#xA;    onPressed: () {&#xA;      print(&#39;Pressed button with tooltip&#39;);&#xA;    }&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s located above or below the &lt;code&gt;child&lt;/code&gt; widget. You can specify the preffered location when both locations are available using the &lt;code&gt;preferBelow&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/controls/tool-tip.png&#34; alt=&#34;Tooltip Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Content Dialog&lt;/h2&gt; &#xA;&lt;p&gt;Dialogs are modal UI overlays that provide contextual app information. They block interactions with the app window until being explicitly dismissed. They often request some kind of action from the user. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/dialogs-and-flyouts/dialogs&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can create a Dialog with the widget &lt;code&gt;ContentDialog&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ContentDialog(&#xA;  title: Text(&#39;No WiFi connection&#39;),&#xA;  content: Text(&#39;Check your connection and try again&#39;),&#xA;  actions: [&#xA;    Button(&#xA;      child: Text(&#39;Ok&#39;),&#xA;      onPressed: () {&#xA;        Navigator.pop(context);&#xA;      }&#xA;    )&#xA;  ],&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/dialogs/dialog_rs2_one_button.png&#34; alt=&#34;No Wifi Connection Dialog&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can display the dialog as an overlay by calling the function &lt;code&gt;showDialog&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;showDialog(&#xA;  context: context,&#xA;  builder: (context) {&#xA;    return ContentDialog(...);&#xA;  },&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/dialogs/dialog_rs2_delete_file.png&#34; alt=&#34;Delete File Dialog&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/dialogs/dialog_rs2_three_button_default.png&#34; alt=&#34;Subscribe to App Service Dialog&#34;&gt;\&lt;/p&gt; &#xA;&lt;h2&gt;Expander&lt;/h2&gt; &#xA;&lt;p&gt;Expander lets you show or hide less important content that&#39;s related to a piece of primary content that&#39;s always visible. Items contained in the &lt;code&gt;header&lt;/code&gt; are always visible. The user can expand and collapse the &lt;code&gt;content&lt;/code&gt; area, where secondary content is displayed, by interacting with the header. When the content area is expanded, it pushes other UI elements out of the way; it does not overlay other UI. The Expander can expand upwards or downwards.&lt;/p&gt; &#xA;&lt;p&gt;Both the &lt;code&gt;header&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; areas can contain any content, from simple text to complex UI layouts. For example, you can use the control to show additional options for an item.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/expander-default.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use an Expander when some primary content should always be visible, but related secondary content may be hidden until needed. This UI is commonly used when display space is limited and when information or options can be grouped together. Hiding the secondary content until it&#39;s needed can also help to focus the user on the most important parts of your app.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create an expander:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Expander(&#xA;  header: const Text(&#39;This thext is in header&#39;),&#xA;  content: const Text(&#39;This is the content&#39;),&#xA;  direction: ExpanderDirection.down, // (optional). Defaults to ExpanderDirection.down&#xA;  initiallyExpanded: false, // (false). Defaults to false&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open and close the expander programatically:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final _expanderKey = GlobalKey&amp;lt;ExpanderState&amp;gt;();&#xA;&#xA;Expander(&#xA;  header: const Text(&#39;This thext is in header&#39;),&#xA;  content: const Text(&#39;This is the content&#39;),&#xA;),&#xA;&#xA;// Call this function to close the expander&#xA;void close() {&#xA;  _expanderKey.currentState?.open = false;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Flyout&lt;/h2&gt; &#xA;&lt;p&gt;A flyout is a light dismiss container that can show arbitrary UI as its content. Flyouts can contain other flyouts or context menus to create a nested experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/flyout-smoke.png&#34; alt=&#34;Flyout Opened Above Button 3&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final flyoutController = FlyoutController();&#xA;&#xA;Flyout(&#xA;  controller: flyoutController,&#xA;  content: const FlyoutContent(&#xA;    constraints: BoxConstraints(maxWidth: 100),&#xA;    child: Text(&#39;The Flyout for Button 3 has LightDismissOverlayMode enabled&#39;),&#xA;  ),&#xA;  child: Button(&#xA;    child: Text(&#39;Button 3&#39;),&#xA;    onPressed: flyoutController.open,&#xA;  ),&#xA;);&#xA;&#xA;@override&#xA;void dispose() {&#xA;  // Dispose the controller to free up resources&#xA;  flyoutController.dispose();&#xA;  super.dispose();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acrylic&lt;/h2&gt; &#xA;&lt;p&gt;Acrylic is a type of Brush that creates a translucent texture. You can apply acrylic to app surfaces to add depth and help establish a visual hierarchy. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/acrylic&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/images/header-acrylic.svg?sanitize=true&#34; alt=&#34;Acrylic&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Do&lt;/th&gt; &#xA;   &lt;th&gt;Don&#39;t&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Do use acrylic as the background material of non-primary app surfaces like navigation panes.&lt;/td&gt; &#xA;   &lt;td&gt;Don&#39;t put desktop acrylic on large background surfaces of your app - this breaks the mental model of acrylic being used primarily for transient surfaces.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Do extend acrylic to at least one edge of your app to provide a seamless experience by subtly blending with the app’s surroundings.&lt;/td&gt; &#xA;   &lt;td&gt;Don’t place in-app and background acrylics directly adjacent to avoid visual tension at the seams.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Don&#39;t place multiple acrylic panes with the same tint and opacity next to each other because this results in an undesirable visible seam.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Don’t place accent-colored text over acrylic surfaces.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;SizedBox(&#xA;  height: ...,&#xA;  width: ...,&#xA;  child: Acrylic(&#xA;          child: Button(&#xA;            child: Text(&#39;Mom it\&#39;s me hehe &amp;lt;3&#39;),&#xA;            onPressed: () {&#xA;              print(&#39;button inside acrylic pressed&#39;);&#xA;            }&#xA;          ),&#xA;        ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/style/images/luminosityversustint.png&#34; alt=&#34;Acrylic preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;InfoBar&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;InfoBar&lt;/code&gt; control is for displaying app-wide status messages to users that are highly visible yet non-intrusive. There are built-in Severity levels to easily indicate the type of message shown as well as the option to include your own call to action or hyperlink button. Since the InfoBar is inline with other UI content the option is there for the control to always be visible or dismissed by the user.&lt;/p&gt; &#xA;&lt;p&gt;You can easility create it using the &lt;code&gt;InfoBar&lt;/code&gt; widget and theme it using &lt;code&gt;InfoBarThemeData&lt;/code&gt;. It has built-in support for both light and dark theme:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;bool _visible = true;&#xA;&#xA;if (_visible)&#xA;  InfoBar(&#xA;    title: Text(&#39;Update available&#39;),&#xA;    content: Text(&#39;Restart the app to apply the latest update.&#39;), // optional&#xA;    severity: InfoBarSeverity.info, // optional. Default to InfoBarSeverity.info&#xA;    onClose: () {&#xA;      // Dismiss the info bar&#xA;      setState(() =&amp;gt; _visible = false);&#xA;    }&#xA;  ),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/infobar-default-title-message.png&#34; alt=&#34;InfoBar Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Date Picker&lt;/h2&gt; &#xA;&lt;p&gt;The date picker gives you a standardized way to let users pick a localized date value using touch, mouse, or keyboard input. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/date-picker&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The entry point displays the chosen date, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection. The date picker overlays other UI; it doesn&#39;t push other UI out of the way.&lt;/p&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://pub.dev/packages/intl&#34;&gt;intl&lt;/a&gt; to format the dates. You can &lt;a href=&#34;https://pub.dev/packages/intl#current-locale&#34;&gt;change the current locale&lt;/a&gt; to change formatting&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic date picker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;DateTime date = DateTime.now();&#xA;&#xA;SizedBox(&#xA;  width: 295,&#xA;  child: DatePicker(&#xA;    header: &#39;Pick a date&#39;,&#xA;    selected: date,&#xA;    onChanged: (v) =&amp;gt; setState(() =&amp;gt; date = v),&#xA;  ),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/controls-datepicker-expand.gif&#34; alt=&#34;DatePicker Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Time Picker&lt;/h2&gt; &#xA;&lt;p&gt;The time picker gives you a standardized way to let users pick a time value using touch, mouse, or keyboard input. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/time-picker&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use a time picker to let a user pick a single time value.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a basic time picker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;DateTime date = DateTime.now();&#xA;&#xA;SizedBox(&#xA;  width: 240,&#xA;  child: TimePicker(&#xA;    header: &#39;Arrival time&#39;,&#xA;    selected: date,&#xA;    onChanged: (v) =&amp;gt; setState(() =&amp;gt; date = v),&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/controls-timepicker-expand.gif&#34; alt=&#34;Time Picker Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Progress Bar and Progress Ring&lt;/h2&gt; &#xA;&lt;p&gt;A progress control provides feedback to the user that a long-running operation is underway. It can mean that the user cannot interact with the app when the progress indicator is visible, and can also indicate how long the wait time might be, depending on the indicator used.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a ProgressBar:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ProgressBar(value: 35)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/progressbar-determinate.png&#34; alt=&#34;Determinate Progress Bar&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can omit the &lt;code&gt;value&lt;/code&gt; property to create an indeterminate progress bar:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/progressbar-indeterminate.gif&#34; alt=&#34;Indeterminate Progress Bar&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Indeterminate Progress Bar is a courtesy of &lt;a href=&#34;https://github.com/raitonoberu&#34;&gt;@raitonubero&lt;/a&gt;. Show him some love&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a progress ring:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ProgressRing(value: 35)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/progress_ring.jpg&#34; alt=&#34;Determinate Progress Ring&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can omit the &lt;code&gt;value&lt;/code&gt; property to create an indeterminate progress ring:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/progressring-indeterminate.gif&#34; alt=&#34;Indeterminate Progress Ring&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Both Indeterminate ProgressBar and Indeterminate ProgressRing is a courtesy of &lt;a href=&#34;https://github.com/raitonoberu&#34;&gt;@raitonubero&lt;/a&gt;. Show him some love ❤&lt;/p&gt; &#xA;&lt;h2&gt;Scrollbar&lt;/h2&gt; &#xA;&lt;p&gt;A scrollbar thumb indicates which portion of a [ScrollView] is actually visible. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/scroll-controls&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Depending on the situation, the scrollbar uses two different visualizations, shown in the following illustration: the panning indicator (left) and the traditional scrollbar (right).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that the arrows aren&#39;t visible. See &lt;a href=&#34;https://github.com/flutter/flutter/issues/80370&#34;&gt;this&lt;/a&gt; and &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/issues/14&#34;&gt;this&lt;/a&gt; issues for more info.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/scrollbar-panning.png&#34; alt=&#34;Scrollbar Panning Indicator&#34;&gt; &lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/scrollbar-traditional.png&#34; alt=&#34;Traditional Scrollbar&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;When the scrollbar is visible it is overlaid as 16px on top of the content inside your ScrollView. In order to ensure good UX design you will want to ensure that no interactive content is obscured by this overlay. Additionally if you would prefer not to have UX overlap, leave 16px of padding on the edge of the viewport to allow for the scrollbar.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to add a scrollbar to a ScrollView:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final _controller = ScrollController();&#xA;&#xA;Scrollbar(&#xA;  controller: _controller,&#xA;  child: ListView.builder(&#xA;    controller: _controller,&#xA;    /// You can add a padding to the view to avoid having the scrollbar over the UI elements&#xA;    padding: EdgeInsets.only(right: 16.0),&#xA;    itemCount: 100,&#xA;    itemBuilder: (context, index) {&#xA;      return ListTile(title: Text(&#39;$index&#39;));&#xA;    }&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/conscious-scroll.gif&#34; alt=&#34;Scrollbar Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can change the &lt;code&gt;isAlwaysVisible&lt;/code&gt; property to either enable or disable the fade effect. It&#39;s disabled by default.&lt;/p&gt; &#xA;&lt;h2&gt;List Tile&lt;/h2&gt; &#xA;&lt;p&gt;You can use a &lt;code&gt;ListTile&lt;/code&gt; in a &lt;code&gt;ListView&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final people = {&#xA;  &#39;Mass in B minor&#39;: &#39;Johann Sebastian Bach&#39;,&#xA;  &#39;Third Symphony&#39;: &#39;Ludwig van Beethoven&#39;,&#xA;  &#39;Serse&#39;: &#39;George Frideric Hendel&#39;,&#xA;};&#xA;&#xA;ListView.builder(&#xA;  itemCount: people.length,&#xA;  itemBuilder: (context, index) {&#xA;    final title = people.keys.elementAt(index);&#xA;    final subtitle = people[title];&#xA;    return ListTile(&#xA;      leading: CircleAvatar(),&#xA;      title: Text(title),&#xA;      subtitle: Text(subtitle!),&#xA;    );&#xA;  }&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/images/listitems/doublelineexample.png&#34; alt=&#34;Double Line Example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to create a tappable tile, use &lt;code&gt;TappableListTile&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;h2&gt;Info Label&lt;/h2&gt; &#xA;&lt;p&gt;You can use an &lt;code&gt;InfoLabel&lt;/code&gt; to tell the user the purpose of something.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to add an info header to a combobox:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;InfoLabel(&#xA;  label: &#39;Colors&#39;,&#xA;  child: ComboBox(...),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code above produces the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/combo-box-no-selection.png&#34; alt=&#34;InfoHeader Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some widgets, such as &lt;code&gt;ComboBox&lt;/code&gt; and &lt;code&gt;TextBox&lt;/code&gt;, already come with a &lt;code&gt;header&lt;/code&gt; property, so you can use them easily with them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ComboBox(&#xA;  header: &#39;Control header&#39;,&#xA;  ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will produce the same as the image above.&lt;/p&gt; &#xA;&lt;h2&gt;TreeView&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;TreeView&lt;/code&gt; control enables a hierarchical list with expanding and collapsing nodes that contain nested items. It can be used to illustrate a folder structure or nested relationships in your UI. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/tree-view&#34;&gt;Learn More&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The tree view uses a combination of indentation and icons to represent the nested relationship between parent nodes and child nodes. Collapsed nodes use a chevron pointing to the right, and expanded nodes use a chevron pointing down.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/treeview-simple.png&#34; alt=&#34;TreeView Simple&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can include an icon in the tree view item data template to represent nodes. For example, if you show a file system hierarchy, you could use folder icons for the parent notes and file icons for the leaf nodes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/treeview-icons.png&#34; alt=&#34;TreeView Icons&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Each &lt;code&gt;TreeViewItem&lt;/code&gt; can optionally take a &lt;code&gt;value&lt;/code&gt; allowing you to store an arbitrary identifier with each item. This can be used in conjunction with &lt;code&gt;onSelectionChanged&lt;/code&gt; to easily identify which items were selected without having to deconstruct the content widget.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a tree view:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TreeView(&#xA;  items: [&#xA;    TreeViewItem(&#xA;      content: const Text(&#39;Work Documents&#39;),&#xA;      children: [&#xA;        TreeViewItem(content: const Text(&#39;XYZ Functional Spec&#39;)),&#xA;        TreeViewItem(content: const Text(&#39;Feature Schedule&#39;)),&#xA;        TreeViewItem(content: const Text(&#39;Overall Project Plan&#39;)),&#xA;        TreeViewItem(content: const Text(&#39;Feature Resources Allocation&#39;)),&#xA;      ],&#xA;    ),&#xA;    TreeViewItem(&#xA;      content: const Text(&#39;Personal Documents&#39;),&#xA;      children: [&#xA;        TreeViewItem(&#xA;          content: const Text(&#39;Home Remodel&#39;),&#xA;          children: [&#xA;            TreeViewItem(content: const Text(&#39;Contractor Contact Info&#39;)),&#xA;            TreeViewItem(content: const Text(&#39;Paint Color Scheme&#39;)),&#xA;            TreeViewItem(content: const Text(&#39;Flooring weedgrain type&#39;)),&#xA;            TreeViewItem(content: const Text(&#39;Kitchen cabinet style&#39;)),&#xA;          ],&#xA;        ),&#xA;      ],&#xA;    ),&#xA;  ],&#xA;  onItemInvoked: (item) =&amp;gt; debugPrint(item), // (optional)&#xA;  // (optional). Can be TreeViewSelectionMode.single or TreeViewSelectionMode.multiple&#xA;  selectionMode: TreeViewSelectionMode.none, &#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scrollable tree view&lt;/h3&gt; &#xA;&lt;p&gt;Vertical scrolling can be enabled for a tree view by setting the &lt;code&gt;shrinkWrap&lt;/code&gt; property to false. If you have many items, consider setting &lt;code&gt;itemExtent&lt;/code&gt;, &lt;code&gt;cacheExtent&lt;/code&gt;, and/or &lt;code&gt;usePrototypeItem&lt;/code&gt; for much better performance.&lt;/p&gt; &#xA;&lt;h3&gt;Lazily load nodes&lt;/h3&gt; &#xA;&lt;p&gt;Load nodes as required by the user&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;late List&amp;lt;TreeViewItem&amp;gt; items;&#xA;&#xA;@override&#xA;void initState() {&#xA;  super.initState();&#xA;  items = [&#xA;    TreeViewItem(&#xA;      content: const Text(&#39;Parent node&#39;),&#xA;      children: [], // REQUIRED. An initial list of children must be provided. It must be mutable&#xA;      onInvoked: (item) async {&#xA;        // If the node is already populated, return&#xA;        if (item.children.isNotEmpty) return;&#xA;        setState(() =&amp;gt; item.loading = true);&#xA;        // Fetch more nodes from an async source, such as an API or device storage&#xA;        final List&amp;lt;TreeViewItem&amp;gt; nodes = await fetchNodes();&#xA;        setState(() {&#xA;          item.loading = false;&#xA;          item.children.addAll(nodes);&#xA;        });&#xA;      }&#xA;    )&#xA;  ];&#xA;}&#xA;&#xA;TreeView(&#xA;  items: items,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CommandBar&lt;/h2&gt; &#xA;&lt;p&gt;A &lt;code&gt;CommandBar&lt;/code&gt; control provides quick access to common tasks. This could be application-level or page-level commands. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/command-bar&#34;&gt;Learn More&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/windows/apps/design/controls/images/controls-appbar-icons.png&#34; alt=&#34;CommandBar Simple&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;CommandBar&lt;/code&gt; is composed of a number of &lt;code&gt;CommandBarItem&lt;/code&gt; objects, which could be &lt;code&gt;CommandBarButton&lt;/code&gt;, a &lt;code&gt;CommandBarSeparator&lt;/code&gt;, or any custom object (e.g., a &#34;split button&#34; object). Sub-class &lt;code&gt;CommandBarItem&lt;/code&gt; to create your own custom items.&lt;/p&gt; &#xA;&lt;p&gt;Each &lt;code&gt;CommandBarItem&lt;/code&gt; widget knows how to render itself in three different modes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CommandBarItemDisplayMode.inPrimary&lt;/code&gt;: Displayed horizontally in primary area&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CommandBarItemDisplayMode.inPrimaryCompact&lt;/code&gt;: More compact horizontal display (e.g., only the icon is displayed for &lt;code&gt;CommandBarButton&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CommandBarItemDisplayMode.inSecondary&lt;/code&gt;: Displayed within flyout menu &lt;code&gt;ListView&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &#34;primary area&#34; of the command bar displays items horizontally. The &#34;secondary area&#34; of the command bar is a flyout menu accessed via an &#34;overflow widget&#34; (by default, a &#34;more&#34; button). You can specify items that should be displayed for each area. The overflow widget will only be displayed if there are items in the secondary area (including any items that dynamically overflowed into the secondary area, if dynamic overflow is enabled).&lt;/p&gt; &#xA;&lt;p&gt;Whether or not the &#34;compact&#34; mode is selected for items displayed in the primary area is determined by an optional width breakpoint. If set, if the width of the widget is less than the breakpoint, it will render each primary &lt;code&gt;CommandBarItem&lt;/code&gt; using the compact mode.&lt;/p&gt; &#xA;&lt;p&gt;Different behaviors can be selected when the width of the &lt;code&gt;CommandBarItem&lt;/code&gt; widgets exceeds the constraints, as determined by the specified &lt;code&gt;CommandBarOverflowBehavior&lt;/code&gt;, including dynamic overflow (putting primary items into the secondary area on overflow), wrapping, clipping, scrolling, and no wrapping (will overflow).&lt;/p&gt; &#xA;&lt;p&gt;The horizontal and vertical alignment can also be customized via the &lt;code&gt;mainAxisAlignment&lt;/code&gt; and &lt;code&gt;crossAxisAlignment&lt;/code&gt; properties. The main axis alignment respects current directionality.&lt;/p&gt; &#xA;&lt;p&gt;A &lt;code&gt;CommandBarCard&lt;/code&gt; can be used to create a raised card around a &lt;code&gt;CommandBar&lt;/code&gt;. While this is not officially part of the Fluent design language, the concept is commonly used in the Office desktop apps for the app-level command bar.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example of a right-aligned command bar that has additional items in the secondary area:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;CommandBar(&#xA;  mainAxisAlignment: MainAxisAlignment.end,&#xA;  overflowBehavior: CommandBarOverflowBehavior.dynamicOverflow,&#xA;  compactBreakpointWidth: 768,&#xA;  primaryItems: [&#xA;    CommandBarButton(&#xA;      icon: const Icon(FluentIcons.add),&#xA;      label: const Text(&#39;Add&#39;),&#xA;      onPressed: () {},&#xA;    ),&#xA;    CommandBarButton(&#xA;      icon: const Icon(FluentIcons.edit),&#xA;      label: const Text(&#39;Edit&#39;),&#xA;      onPressed: () {},&#xA;    ),&#xA;    CommandBarButton(&#xA;      icon: const Icon(FluentIcons.delete),&#xA;      label: const Text(&#39;Edit&#39;),&#xA;      onPressed: () {},&#xA;    ),&#xA;  ],&#xA;  secondaryItems: [&#xA;    CommandBarButton(&#xA;      icon: const Icon(FluentIcons.archive),&#xA;      label: const Text(&#39;Archive&#39;),&#xA;      onPressed: () {},&#xA;    ),&#xA;    CommandBarButton(&#xA;      icon: const Icon(FluentIcons.move),&#xA;      label: const Text(&#39;Move&#39;),&#xA;      onPressed: () {},&#xA;    ),&#xA;  ],&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To put a tooltip on any other kind of &lt;code&gt;CommandBarItem&lt;/code&gt; (or otherwise wrap it in another widget), use &lt;code&gt;CommandBarBuilderItem&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;CommandBarBuilderItem(&#xA;  builder: (context, mode, w) =&amp;gt; Tooltip(&#xA;    message: &#34;Create something new!&#34;,&#xA;    child: w,&#xA;  ),&#xA;  wrappedItem: CommandBarButton(&#xA;    icon: const Icon(FluentIcons.add),&#xA;    label: const Text(&#39;Add&#39;),&#xA;    onPressed: () {},&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More complex examples, including command bars with items that align to each side of a carded bar, are in the example app.&lt;/p&gt; &#xA;&lt;h1&gt;Mobile Widgets&lt;/h1&gt; &#xA;&lt;p&gt;Widgets with focus on mobile. Based on the official documentation and source code for &lt;a href=&#34;https://developer.microsoft.com/pt-br/fluentui#/controls/ios&#34;&gt;iOS&lt;/a&gt; and &lt;a href=&#34;https://developer.microsoft.com/pt-br/fluentui#/controls/android&#34;&gt;Android&lt;/a&gt;. Most of the widgets above can adapt to small screens, and will fit on all your devices.&lt;/p&gt; &#xA;&lt;h2&gt;Bottom Sheet&lt;/h2&gt; &#xA;&lt;p&gt;Bottom Sheet is used to display a modal list of menu items. They slide up over the main app content as a result of a user triggered action. &lt;a href=&#34;https://developer.microsoft.com/pt-br/fluentui#/controls/android/bottomsheet&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to display a bottom sheet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;showBottomSheet(&#xA;  context: context,&#xA;  builder: (context) {&#xA;    return BottomSheet(&#xA;      // header: ...,&#xA;      description: Text(&#39;Description or Details here&#39;),&#xA;      children: [&#xA;        ...,&#xA;        // Usually a `ListTile` or `TappableListTile`&#xA;      ],&#xA;    );&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To close it, just call &lt;code&gt;Navigator.of(context).pop()&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static2.sharepointonline.com/files/fabric/fabric-website/images/controls/android/updated/img_bottomsheet_01_light.png?text=LightMode&#34; alt=&#34;Bottom Sheet Showcase&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Chip&lt;/h2&gt; &#xA;&lt;p&gt;Chips are compact representations of entities (most commonly, people) that can be clicked, deleted, or dragged easily.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a chip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Chip(&#xA;  image: CircleAvatar(size: 12.0),&#xA;  text: Text(&#39;Chip&#39;),&#xA;),&#xA;Chip.selected(&#xA;  image: FlutterLogo(size: 14.0),&#xA;  text: Text(&#39;Chip&#39;),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/45696119/119724339-f9a00700-be44-11eb-940b-1966eefe3798.png&#34; alt=&#34;Light Chips&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/45696119/119724337-f9077080-be44-11eb-9b73-e1dc4ffbeefd.png&#34; alt=&#34;Dark Chips&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Pill Button Bar&lt;/h2&gt; &#xA;&lt;p&gt;A Pill Button Bar is a horizontal scrollable list of pill-shaped text buttons in which only one button can be selected at a given time.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to create a pill button bar:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;int index = 0;&#xA;&#xA;PillButtonBar(&#xA;  selected: index,&#xA;  onChanged: (i) =&amp;gt; setState(() =&amp;gt; index = i),&#xA;  items: [&#xA;    PillButtonBarItem(text: Text(&#39;All&#39;)),&#xA;    PillButtonBarItem(text: Text(&#39;Mail&#39;)),&#xA;    PillButtonBarItem(text: Text(&#39;Peopl&#39;)),&#xA;    PillButtonBarItem(text: Text(&#39;Events&#39;)),&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static2.sharepointonline.com/files/fabric/fabric-website/images/controls/ios/updated/img_pillbar_01_light.png?text=LightMode&#34; alt=&#34;Light PillButtonBar&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static2.sharepointonline.com/files/fabric/fabric-website/images/controls/ios/updated/img_pillbar_01_dark.png?text=DarkMode&#34; alt=&#34;Dark PillButtonBar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Snackbar&lt;/h2&gt; &#xA;&lt;p&gt;Snackbars provide a brief message about an operation at the bottom of the screen. They can contain a custom action or view or use a style geared towards making special announcements to your users.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to display a snackbar at the bottom of the screen:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;showSnackbar(&#xA;  context,&#xA;  Snackbar(&#xA;    content: Text(&#39;A new update is available!&#39;),&#xA;  ),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static2.sharepointonline.com/files/fabric/fabric-website/images/controls/android/updated/img_snackbar_01_standard_dark.png?text=DarkMode&#34; alt=&#34;Snackbar Example&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Layout Widgets&lt;/h1&gt; &#xA;&lt;p&gt;Widgets that help to layout other widgets.&lt;/p&gt; &#xA;&lt;h2&gt;DynamicOverflow&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;DynamicOverflow&lt;/code&gt; widget is similar to the &lt;code&gt;Wrap&lt;/code&gt; widget, but only lays out children widgets in a single run, and if there is not room to display them all, it will hide widgets that don&#39;t fit, and display the &#34;overflow widget&#34; at the end. Optionally, the &#34;overflow widget&#34; can be displayed all the time. Displaying the overflow widget will take precedence over any children widgets.&lt;/p&gt; &#xA;&lt;p&gt;This is used to implement the dynamic overflow mode for &lt;code&gt;CommandBar&lt;/code&gt;, but could be useful on its own. It supports both horizontal and vertical layout modes, and various main axis and cross axis alignments.&lt;/p&gt; &#xA;&lt;h1&gt;Equivalents with the material library&lt;/h1&gt; &#xA;&lt;p&gt;The list of equivalents between this library and &lt;code&gt;flutter/material.dart&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Material&lt;/th&gt; &#xA;   &lt;th&gt;Fluent&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TextButton&lt;/td&gt; &#xA;   &lt;td&gt;Button&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IconButton&lt;/td&gt; &#xA;   &lt;td&gt;IconButton&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Checkbox&lt;/td&gt; &#xA;   &lt;td&gt;Checkbox&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RadioButton&lt;/td&gt; &#xA;   &lt;td&gt;RadioButton&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;RatingBar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;SplitButton&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;ToggleButton&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Switch&lt;/td&gt; &#xA;   &lt;td&gt;ToggleSwitch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TextField&lt;/td&gt; &#xA;   &lt;td&gt;TextBox&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TextFormField&lt;/td&gt; &#xA;   &lt;td&gt;TextFormBox&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DropdownButton&lt;/td&gt; &#xA;   &lt;td&gt;Combobox&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PopupMenuButton&lt;/td&gt; &#xA;   &lt;td&gt;DropDownButton&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;AutoSuggestBox&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AlertDialog&lt;/td&gt; &#xA;   &lt;td&gt;ContentDialog&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MaterialBanner&lt;/td&gt; &#xA;   &lt;td&gt;InfoBar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tooltip&lt;/td&gt; &#xA;   &lt;td&gt;Tooltip&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Flyout&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Drawer&lt;/td&gt; &#xA;   &lt;td&gt;NavigationPane&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BottomNavigation&lt;/td&gt; &#xA;   &lt;td&gt;BottomNavigation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Divider&lt;/td&gt; &#xA;   &lt;td&gt;Divider&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VerticalDivider&lt;/td&gt; &#xA;   &lt;td&gt;Divider&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Material&lt;/td&gt; &#xA;   &lt;td&gt;Acrylic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ListTile&lt;/td&gt; &#xA;   &lt;td&gt;ListTile&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CheckboxListTile&lt;/td&gt; &#xA;   &lt;td&gt;CheckboxListTile&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SwitchListTile&lt;/td&gt; &#xA;   &lt;td&gt;SwitchListTile&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LinearProgressIndicator&lt;/td&gt; &#xA;   &lt;td&gt;ProgressBar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CircularProgressIndicator&lt;/td&gt; &#xA;   &lt;td&gt;ProgressRing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;_DatePickerDialog&lt;/td&gt; &#xA;   &lt;td&gt;DatePicker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;_TimePickerDialog&lt;/td&gt; &#xA;   &lt;td&gt;TimePicker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Scaffold&lt;/td&gt; &#xA;   &lt;td&gt;ScaffoldPage&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AppBar&lt;/td&gt; &#xA;   &lt;td&gt;NavigationAppBar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Drawer&lt;/td&gt; &#xA;   &lt;td&gt;NavigationView&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chip&lt;/td&gt; &#xA;   &lt;td&gt;Chip&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Snackbar&lt;/td&gt; &#xA;   &lt;td&gt;Snackbar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;PillButtonBar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExpansionPanel&lt;/td&gt; &#xA;   &lt;td&gt;Expander&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;p&gt;FluentUI widgets currently supports out-of-the-box an wide number of languages, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Arabic&lt;/li&gt; &#xA; &lt;li&gt;English&lt;/li&gt; &#xA; &lt;li&gt;Dutch&lt;/li&gt; &#xA; &lt;li&gt;French&lt;/li&gt; &#xA; &lt;li&gt;German&lt;/li&gt; &#xA; &lt;li&gt;Hindi&lt;/li&gt; &#xA; &lt;li&gt;Italian&lt;/li&gt; &#xA; &lt;li&gt;Korean&lt;/li&gt; &#xA; &lt;li&gt;Malay&lt;/li&gt; &#xA; &lt;li&gt;Polish&lt;/li&gt; &#xA; &lt;li&gt;Portuguese&lt;/li&gt; &#xA; &lt;li&gt;Russian&lt;/li&gt; &#xA; &lt;li&gt;Simplified Chinese&lt;/li&gt; &#xA; &lt;li&gt;Traditional Chinese&lt;/li&gt; &#xA; &lt;li&gt;Spanish&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/issues/new&#34;&gt;file an issue&lt;/a&gt; if you find a problem or &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/pulls&#34;&gt;make pull requests&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All contributions are welcome :)&lt;/p&gt; &#xA;&lt;h3&gt;Contributing new localizations&lt;/h3&gt; &#xA;&lt;p&gt;In &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/pull/216&#34;&gt;PR#216&lt;/a&gt; we added support for new localizations in FluentUI Widgets.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute adding new localizations please follow this steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/fork&#34;&gt;Fork the repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;lib/l10n/intl_en.arb&lt;/code&gt; file into &lt;code&gt;lib/l10n&lt;/code&gt; folder with a new language code, following &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes&#34;&gt;this list of ISO 859-1 codes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Update the contents in the newly created file. Specially, please update the &lt;code&gt;@locale&lt;/code&gt; value with the corresponding ISO code.&lt;/li&gt; &#xA; &lt;li&gt;Then update the &lt;code&gt;localization.dart:defaultSupportedLocales&lt;/code&gt; list, adding an entry for each new locale&lt;/li&gt; &#xA; &lt;li&gt;If your IDE doesn&#39;t have any of the &lt;code&gt;intl&lt;/code&gt; plugins (&lt;a href=&#34;https://plugins.jetbrains.com/plugin/13666-flutter-intl&#34;&gt;Intl plugin for Android Studio/IntelliJ&lt;/a&gt; / &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=localizely.flutter-intl&#34;&gt;Flutter Intl for VSCode&lt;/a&gt; ) please run your project and code generation will take place.&lt;/li&gt; &#xA; &lt;li&gt;When you&#39;re done, &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/pulls&#34;&gt;make a new pull request&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More about &lt;a href=&#34;https://docs.flutter.dev/development/accessibility-and-localization/internationalization&#34;&gt;Localization in the Flutter Official Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Acknowledgements&lt;/h3&gt; &#xA;&lt;p&gt;Irrespective of order, thanks to all the people below for contributing with the project. It means a lot to me :)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HrX03&#34;&gt;@HrX03&lt;/a&gt; for the &lt;code&gt;Acrylic&lt;/code&gt;, &lt;code&gt;FluentIcons&lt;/code&gt; generator and &lt;code&gt;_FluentTextSelectionControls&lt;/code&gt; implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raitonoberu&#34;&gt;@raitonubero&lt;/a&gt; &lt;code&gt;ProgressBar&lt;/code&gt; and &lt;code&gt;ProgressRing&lt;/code&gt; implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alexmercerind&#34;&gt;@alexmercerind&lt;/a&gt; for the &lt;a href=&#34;https://github.com/alexmercerind/flutter_acrylic&#34;&gt;flutter_acrylic&lt;/a&gt; plugin, used on the example app&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leanflutter&#34;&gt;@leanflutter&lt;/a&gt; for the &lt;a href=&#34;https://github.com/leanflutter/window_manager&#34;&gt;window_manager&lt;/a&gt; plugin, used on the example app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/henry2man&#34;&gt;@henry2man&lt;/a&gt; for the &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/pull/216&#34;&gt;localization support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/klondikedragon&#34;&gt;@klondikedragon&lt;/a&gt; for &lt;a href=&#34;https://github.com/bdlukaa/fluent_ui/pull/232&#34;&gt;&lt;code&gt;CommandBar&lt;/code&gt; implementation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>