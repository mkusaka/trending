<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-27T01:33:12Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>janoodleFTW/timy-messenger</title>
    <updated>2022-11-27T01:33:12Z</updated>
    <id>tag:github.com,2022-11-27:/janoodleFTW/timy-messenger</id>
    <link href="https://github.com/janoodleFTW/timy-messenger" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Timy - open source mobile app for groups to communicate and organize themselves. Built with flutter.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Timy app&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.bitrise.io/app/1777d1ca81df02fb&#34;&gt;&lt;img src=&#34;https://app.bitrise.io/app/1777d1ca81df02fb/status.svg?token=JR4pw9Z3dElWNrDmy3ImLA&amp;amp;branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An amazing open-source group messaging app build with flutter. ✨&lt;/p&gt; &#xA;&lt;h1&gt;Main Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multiple groups (similar to Teams in Slack).&lt;/li&gt; &#xA; &lt;li&gt;Multiple &lt;em&gt;open or private&lt;/em&gt; channels within groups.&lt;/li&gt; &#xA; &lt;li&gt;Sharing of photos and photo collections.&lt;/li&gt; &#xA; &lt;li&gt;React to messages with emoji.&lt;/li&gt; &#xA; &lt;li&gt;Push-notifications for the message and channel updates.&lt;/li&gt; &#xA; &lt;li&gt;Specific channels for events (e.g. containing date, venue).&lt;/li&gt; &#xA; &lt;li&gt;Editing of event channels.&lt;/li&gt; &#xA; &lt;li&gt;Calendar for all upcoming and past events aggregated over all groups and channels.&lt;/li&gt; &#xA; &lt;li&gt;English and German localization.&lt;/li&gt; &#xA; &lt;li&gt;RSVP for events.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/janoodleFTW/timy-messenger/master/timy.png&#34; alt=&#34;screenshots&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Project Structure&lt;/h1&gt; &#xA;&lt;p&gt;This is a Flutter mobile app targeting Android and iOS.&lt;/p&gt; &#xA;&lt;p&gt;The code for the Flutter app is contained in the folder &lt;code&gt;lib&lt;/code&gt; and the different native apps are in &lt;code&gt;android&lt;/code&gt; and &lt;code&gt;ios&lt;/code&gt;. Extra project assets are in &lt;code&gt;assets&lt;/code&gt; and &lt;code&gt;fonts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As well, this repo hosts a series of Firebase config files and cloud functions.&lt;/p&gt; &#xA;&lt;p&gt;The documentation for Firebase part is inside the &lt;code&gt;firebase&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h1&gt;Prerequisites &amp;amp; Getting Started&lt;/h1&gt; &#xA;&lt;h2&gt;Client&lt;/h2&gt; &#xA;&lt;p&gt;To build and run the mobile apps you’ll need to install &lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt; and its dependencies. To verify your installation run in the project’s root directory:&lt;strong&gt;‌&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ flutter doctor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The app is optimised for Android and iOS phones in portrait mode.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; The project only supports Flutter version 1.10.5, you will have to change your configuration to it. We cannot make sure that other Flutter versions will work.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ flutter version 1.10.5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Additionally you’ll need to setup the backend and add the GoogleService-Info of your Firebase app to your clients as described below.&lt;/p&gt; &#xA;&lt;h2&gt;Backend (Firebase)&lt;/h2&gt; &#xA;&lt;p&gt;The backend is build using Firebase’s &lt;code&gt;node.js&lt;/code&gt; SDK. All files are provided in the &lt;code&gt;firebase&lt;/code&gt; folder. To deploy the code create an app and install the firebase CLI (See steps 1 &amp;amp; 2 in &lt;a href=&#34;https://firebase.google.com/docs/functions/get-started&#34;&gt;Getting started&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: The following steps assume you’re using Firebases’ free &lt;code&gt;Spark Plan&lt;/code&gt;. Therefore we’re performing the configuration manually.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;B1. Setup sign-in method &amp;amp; adding users&lt;/h3&gt; &#xA;&lt;p&gt;An initial sign-in method needs to be configured.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Select your project in &lt;a href=&#34;https://console.firebase.google.com&#34;&gt;console.firebase.google.com&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Navigate to &lt;code&gt;Authentication&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;code&gt;Sign-in methods&lt;/code&gt; and activate &lt;code&gt;Email / Password&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Adding a user&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Currently, users need to be added &lt;em&gt;manually&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In firebase navigate to &lt;code&gt;Authentication&lt;/code&gt; and select &lt;code&gt;Users&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Then &lt;code&gt;Add user&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please copy the &lt;code&gt;User-UID&lt;/code&gt; of the created user. We’ll need to add this ID to a group in the next step.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: You’ll need to have at least one user configured to use the app.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;B2. Configure firebase app&lt;/h3&gt; &#xA;&lt;p&gt;Next, you’ll need to configure your firebase app for Flutter as described in &lt;a href=&#34;https://firebase.google.com/docs/flutter/setup&#34;&gt;Add Firebase to an App / Flutter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;iOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enter iOS-Bundle-ID: &lt;code&gt;de.janoodle.circlesApp.debug&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download and rename &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; to &lt;code&gt;GoogleService-Info-Dev.plist&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy file to &lt;code&gt;ios/Runner/Firebase&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;NOTE: If you’re building for release you’ll additionally need to add a GoogleService-Info-Prod.plist pointing to your production Firebase app.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follow the instructions in &lt;code&gt;android/README.md&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;B3. Create and setup database&lt;/h3&gt; &#xA;&lt;p&gt;In the firebase console select &lt;code&gt;Database&lt;/code&gt; under &lt;code&gt;Develop&lt;/code&gt; and create a Cloud Firestore Database. Setup database in &lt;code&gt;test mode&lt;/code&gt; if you don&#39;t want to care about access permissions now.&lt;/p&gt; &#xA;&lt;p&gt;At this point, &lt;strong&gt;you need to run and perform login once&lt;/strong&gt; on the App, it will create a user document inside the &lt;code&gt;users&lt;/code&gt; collection.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;You will see an empty screen. To fix that, continue this setup.&lt;/strong&gt; You may need to restart the app after the setup is done.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Create group collection&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Select the database you’ve just created.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Create collection&lt;/code&gt; and name it &lt;code&gt;groups&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add your first group with the following properties:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;abbreviation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;color&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ffffff&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;members&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;array&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;em&gt;User-UID we’ve retrieved in &lt;strong&gt;Adding a user&lt;/strong&gt;&lt;/em&gt; above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;name&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;test&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;We’ve now setup our first test group. In addition to this step, we’ll need to setup a default &lt;code&gt;Channel&lt;/code&gt; (e.g. something similar to &lt;code&gt;#general&lt;/code&gt; in Slack).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Add the new created Group id to the User document&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Select the User you have now on your database.&lt;/li&gt; &#xA; &lt;li&gt;Add a new field named &lt;code&gt;joinedGroups&lt;/code&gt; and make it type &lt;code&gt;Array&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add an entry in this array, with the value equal to the Group document id from Firestore.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Create channel sub-collection&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In the &lt;code&gt;groups&lt;/code&gt; collection select the newly created group.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Create collection&lt;/code&gt; within the group called &lt;code&gt;channels&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add your first channel with the following properties:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;name&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;general&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;type&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TOPIC&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;visibility&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OPEN&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Your Firestore database should look like this (with different ids)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/janoodleFTW/timy-messenger/master/firestore-1.png&#34; alt=&#34;screenshots&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janoodleFTW/timy-messenger/master/firestore-2.png&#34; alt=&#34;screenshots&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janoodleFTW/timy-messenger/master/firestore-3.png&#34; alt=&#34;screenshots&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janoodleFTW/timy-messenger/master/firestore-4.png&#34; alt=&#34;screenshots&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;B4. Deploy firebase functions&lt;/h3&gt; &#xA;&lt;p&gt;Navigate to the &lt;code&gt;firebase&lt;/code&gt; directory and deploy all functions using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ firebase deploy --only functions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some features of the app can be used without Cloud Functions running, but some others will not work. We recommend you to perform this step to enjoy all features.&lt;/p&gt; &#xA;&lt;h3&gt;B5. Final steps&lt;/h3&gt; &#xA;&lt;p&gt;Login with the user you’ve created above.&lt;/p&gt; &#xA;&lt;p&gt;Next create your first &lt;code&gt;event&lt;/code&gt; to setup the &lt;em&gt;calendar collection&lt;/em&gt; in our backend.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Create an event&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In the app select the hamburger menu&lt;/li&gt; &#xA; &lt;li&gt;Hit the &lt;code&gt;+&lt;/code&gt; sign next to &lt;code&gt;Events&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter any data you like and hit &lt;code&gt;Create&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;At the root level of your database you should now see a collection called &lt;code&gt;calendar&lt;/code&gt; in your firebase console.&lt;/p&gt; &#xA;&lt;p&gt;Now we’re ready to deploy all other parts of our backend using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ firebase deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Deployment&lt;/h1&gt; &#xA;&lt;p&gt;The app is setup to work with a development and production environment. We suggest you create a different Firebase app for each environment.&lt;/p&gt; &#xA;&lt;p&gt;When building for release the app will automatically use the production configuration that you’ve configured in step &lt;code&gt;B3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;External resources&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itsallwidgets.com/timy-messenger&#34;&gt;Timy Messenger in itsallwidgets.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beltran.work/blog/building-a-messaging-app-in-flutter-part-i-project-structure/&#34;&gt;Building a Messaging App in Flutter — Part I: Project Structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beltran.work/blog/building-a-messaging-app-in-flutter-part-ii-main-method/&#34;&gt;Building a Messaging App in Flutter — Part II: Main Method&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beltran.work/blog/building-a-messaging-app-in-flutter-part-iii-redux/&#34;&gt;Building a Messaging App in Flutter — Part III: Redux&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;About&lt;/h1&gt; &#xA;&lt;p&gt;The concept for Timy was created and developed by &lt;a href=&#34;https://github.com/kaalita&#34;&gt;kaalita&lt;/a&gt; and &lt;a href=&#34;https://github.com/philippmoeser&#34;&gt;philippmoeser&lt;/a&gt;. The initial version is a MVP messaging app focusing on organising events among groups.&lt;/p&gt; &#xA;&lt;p&gt;We hope this project can be a reference or building block for your next flutter app. 🚀&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Kuingsmile/PicHoro</title>
    <updated>2022-11-27T01:33:12Z</updated>
    <id>tag:github.com,2022-11-27:/Kuingsmile/PicHoro</id>
    <link href="https://github.com/Kuingsmile/PicHoro" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一款手机端云存储平台/图床管理和文件上传/下载工具，支持直接管理SSH/SFTP，云服务器，兼容S3 API的平台，腾讯COS，阿里OSS，七牛云，又拍云，兰空图床，Imgur，SM.MS和github&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;http://imgx.horosama.com/admin_uploads/2022/10/2022_10_05_633d79e401694.png&#34; alt=&#34;&#34;&gt; &#xA; &lt;h1&gt;PicHoro&lt;/h1&gt; &#xA; &lt;a href=&#34;https://github.com/Kuingsmile/PicHoro/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/Kuingsmile/PicHoro/total.svg?style=flat-square&#34; alt=&#34;&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Kuingsmile/PicHoro/releases/latest&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/Kuingsmile/PicHoro.svg?style=flat-square&#34; alt=&#34;&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Kuingsmile/PicHoro&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/Kuingsmile/PicHoro.svg?style=flat-square&#34; alt=&#34;&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;  一款基于flutter的手机端云存储平台/图床管理和文件上传/下载工具，最新版本&lt;strong&gt;V1.9.5&lt;/strong&gt;，与PicGo配置互通，可直接扫码导入，主要功能包括云存储平台和图床平台,以及云服务器的管理，文件上传和下载管理，以及各种格式的链接分享。&lt;/p&gt; &#xA;&lt;p&gt;  项目介绍和配置手册网址:&lt;/p&gt; &#xA;&lt;p&gt;  &lt;a href=&#34;https://pichoro.horosama.com&#34;&gt;https://pichoro.horosama.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;  目前已支持如下图床：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 兰空图床V2 (上传/相册-&lt;strong&gt;V1.00&lt;/strong&gt;，文件管理-&lt;strong&gt;V1.87&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SM.MS (上传/相册-&lt;strong&gt;V1.41&lt;/strong&gt;，文件管理-&lt;strong&gt;V1.81&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Github (上传/相册-&lt;strong&gt;V1.55&lt;/strong&gt;，文件管理-&lt;strong&gt;V1.89&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Imgur (上传/相册-&lt;strong&gt;V1.60&lt;/strong&gt;，文件管理-&lt;strong&gt;V1.90&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 七牛云存储 (上传/相册-&lt;strong&gt;V1.65&lt;/strong&gt;，文件管理-&lt;strong&gt;V1.86&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 腾讯云COS V5 (上传/相册-&lt;strong&gt;V1.70&lt;/strong&gt;，文件管理-&lt;strong&gt;V1.80&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 阿里云OSS (上传/相册-&lt;strong&gt;V1.75&lt;/strong&gt;，文件管理-&lt;strong&gt;V1.84&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 又拍云存储 (上传/相册-&lt;strong&gt;V1.75&lt;/strong&gt;，文件管理-&lt;strong&gt;V1.85&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; FTP-SSH/SFTP (上传/相册-&lt;strong&gt;V1.90&lt;/strong&gt;，文件管理-&lt;strong&gt;V1.90&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 兼容S3 API接口的平台 (上传/相册-&lt;strong&gt;V1.91&lt;/strong&gt;，文件管理-&lt;strong&gt;V1.91&lt;/strong&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;特色功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持直接管理云存储平台和图床，包括新建/删除/修改存储桶，创建/删除目录和文件，上传和下载文件和照片等&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持SSH/SFTP，可视化管理文件，内置SSH终端可直接管理云服务器&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持扫描二维码将PicGo(v2.3.0-beta.2以上版本)配置文件直接导入PicHoro&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;每种图床支持保存最多26个备用配置，可快速切换备用配置为主配置&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;连续上传模式，相机拍照后自动上传然后返回拍照页面，可连续拍照上传&lt;/li&gt; &#xA; &lt;li&gt;可导入剪贴板中的网络图片链接，同时使用换行符分割多个链接可批量导入&lt;/li&gt; &#xA; &lt;li&gt;上传图片后自动复制链接到剪贴板，多图上传时全部复制&lt;/li&gt; &#xA; &lt;li&gt;支持自定义复制到剪贴板的链接格式，占位符与Picgo一致&lt;/li&gt; &#xA; &lt;li&gt;上传时可对文件重命名，目前有时间戳，随机字符串和自定义重命名三种方式，自定义重命名可使用多种占位符，如uuid，时间戳，md5等&lt;/li&gt; &#xA; &lt;li&gt;相册分图床显示，支持多选管理，复制多张图片链接或删除&lt;/li&gt; &#xA; &lt;li&gt;支持将PicHoro的配置导出至剪贴板，导出格式与PicGo配置文件相同，可直接导入PicGo&lt;/li&gt; &#xA; &lt;li&gt;可查看和导出软件日志，快捷查找问题和报告bug&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;h3&gt;安卓&lt;/h3&gt; &#xA;&lt;p&gt;Github下载地址 &lt;a href=&#34;https://github.com/Kuingsmile/PicHoro/releases&#34;&gt;Github release&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;我的个人网站提供的最新版本下载地址 &lt;a href=&#34;https://www.horosama.com/self_apk/PicHoro_V1.9.5.apk&#34;&gt;https://www.horosama.com/self_apk/PicHoro_V1.9.5.apk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;IOS&lt;/h3&gt; &#xA;&lt;p&gt;由于个人没有Mac和开发者账号，暂时无法提供IOS版本，如果有人愿意帮忙开发IOS版本，可以联系我，我会提供相关的技术支持。&lt;/p&gt; &#xA;&lt;h2&gt;应用截图&lt;/h2&gt; &#xA;&lt;table rules=&#34;none&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96409857/203718727-ceac86b4-8cb5-49c5-8ee3-bcfce51710cb.jpg&#34; width=&#34;200&#34; height=&#34;400&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96409857/203718378-fd4cf22f-b801-4356-9a8b-9d51a0db0e54.jpg&#34; width=&#34;200&#34; height=&#34;400&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96409857/203718175-6616cd6d-0d7d-4eab-9f6f-6686db9468ec.png&#34; width=&#34;200&#34; height=&#34;400&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96409857/203718982-448828ff-3ad1-4d93-9c7f-ece9d69d34c4.jpg&#34; width=&#34;200&#34; height=&#34;400&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96409857/203719066-b6e45be8-eb8f-49da-bea2-78f3d4379591.jpg&#34; width=&#34;200&#34; height=&#34;400&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96409857/203719617-b54a49bb-d9f9-4917-a68a-b4a46f951ee0.png&#34; width=&#34;200&#34; height=&#34;400&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96409857/203719608-34170e4c-2d6f-4e3a-990a-f61c610417e9.png&#34; width=&#34;200&#34; height=&#34;400&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96409857/203720199-38266fae-e0fa-4aad-8315-f272bc8b6add.jpg&#34; width=&#34;200&#34; height=&#34;400&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96409857/203720359-26717390-1789-4750-97dd-27836da322da.jpg&#34; width=&#34;200&#34; height=&#34;400&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96409857/203720473-577368a7-ed29-461b-b8f2-4077dd02ca84.jpg&#34; width=&#34;200&#34; height=&#34;400&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96409857/203720565-4d4008a5-198f-451d-b0cc-b1780291f2b7.png&#34; width=&#34;200&#34; height=&#34;400&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/96409857/203720614-4bfd6e0c-ea16-4ed1-945d-c5c5524c89a6.png&#34; width=&#34;200&#34; height=&#34;400&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;最近更新&lt;/h2&gt; &#xA;&lt;p&gt;  详细更新日志请查看&lt;a href=&#34;https://github.com/Kuingsmile/PicHoro/raw/main/Version_update_log.md&#34; title=&#34;更新日志&#34;&gt;更新日志&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;2022-11-25: &lt;strong&gt;V1.95&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;新增：设置界面现在在有新版本时会显示新版本号，且&lt;code&gt;检查更新&lt;/code&gt;会变为&lt;code&gt;有新版本&lt;/code&gt;来提示用户。&lt;/li&gt; &#xA;   &lt;li&gt;新增：新增绿色、紫色、橙色、粉色、青色和金色主题。&lt;/li&gt; &#xA;   &lt;li&gt;优化：调整了上传/下载界面和主页上传框任务列表的顺序，现在后添加的任务会显示在最上面。&lt;/li&gt; &#xA;   &lt;li&gt;优化：调整了上传界面和主页上传框任务列表的UI，进度条修改到任务名称的右侧，减少单个任务的宽度。&lt;/li&gt; &#xA;   &lt;li&gt;优化：修改了部分图标和字体的颜色，优化其在暗色模式下的显示效果。&lt;/li&gt; &#xA;   &lt;li&gt;优化：修改了部分界面UI。&lt;/li&gt; &#xA;   &lt;li&gt;修复：修复了在上传界面和主页上传框内，点击全部上传时，已上传完成的任务会被重新上传的问题。&lt;/li&gt; &#xA;   &lt;li&gt;修复：修复了又拍云图床后缀为空时，会在复制的链接尾部添加一个空格的问题。&lt;/li&gt; &#xA;   &lt;li&gt;修复：修复了图床设置时，如果参数内包含中文，会导致报错的问题。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;开发交流&lt;/h2&gt; &#xA;&lt;p&gt;开发进度可以查看 &lt;a href=&#34;https://github.com/Kuingsmile/PicHoro/projects&#34;&gt;Projects&lt;/a&gt;，会同步更新开发进度。&lt;/p&gt; &#xA;&lt;p&gt;欢迎加入 &lt;a href=&#34;https://github.com/Kuingsmile/PicHoro/discussions&#34;&gt;Github讨论区&lt;/a&gt; 与我交流。&lt;/p&gt; &#xA;&lt;p&gt;遇到Bug或有好的建议可以在 &lt;a href=&#34;https://github.com/Kuingsmile/PicHoro/issues&#34;&gt;Github Issues&lt;/a&gt; 中提出。&lt;/p&gt; &#xA;&lt;h2&gt;开发说明&lt;/h2&gt; &#xA;&lt;h3&gt;软件修改&lt;/h3&gt; &#xA;&lt;p&gt;如果你想要修改或自行构建 PicHoro，可以依照下面的指示：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;你需要有 Android Studio和 Android SDK 21+ 的环境，并安装了Flutter 3.0+版本。flutter环境配置可以参考 &lt;a href=&#34;https://flutter.dev/docs/get-started/install&#34;&gt;Flutter 官方文档&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/Kuingsmile/PicHoro.git&lt;/code&gt; 并进入项目。&lt;/li&gt; &#xA; &lt;li&gt;Windows 推荐使用VScode编辑和调试代码。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;图床修改&lt;/h3&gt; &#xA;&lt;p&gt;兰空图床的相册ID参数，限于以下两种情况下才会生效： 1. 基于付费企业版兰空图床搭建 2. 开源免费版需要自己或者联系管理员修改源代码文件，修改方式为打开 &lt;strong&gt;/app/Services/ImageService.php&lt;/strong&gt;文件，修改第139行，原文件为&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;            if ($albumId = $user-&amp;gt;configs-&amp;gt;get(UserConfigKey::DefaultAlbum)) {&#xA;                if ($user-&amp;gt;albums()-&amp;gt;where(&#39;id&#39;, $albumId)-&amp;gt;exists()) {&#xA;                    $image-&amp;gt;album_id = $albumId;&#xA;                }&#xA;            }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;修改为&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;           if ($request-&amp;gt;has(&#39;album_id&#39;)) {&#xA;                $image-&amp;gt;album_id = $request-&amp;gt;input(&#39;album_id&#39;);&#xA;            } else {&#xA;            if ($albumId = $user-&amp;gt;configs-&amp;gt;get(UserConfigKey::DefaultAlbum)) {&#xA;                if ($user-&amp;gt;albums()-&amp;gt;where(&#39;id&#39;, $albumId)-&amp;gt;exists()) {&#xA;                    $image-&amp;gt;album_id = $albumId;&#xA;                }&#xA;            }&#xA;        }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;依赖包修改&lt;/h3&gt; &#xA;&lt;p&gt;本APP使用的部分依赖包需要手动修改源代码才可使用，需要修改的依赖包如下：&lt;/p&gt; &#xA;&lt;h4&gt;flutter_speed_dial&lt;/h4&gt; &#xA;&lt;p&gt;文件路径示例: &lt;code&gt;D:\flutter\.pub-cache\hosted\pub.flutter-io.cn\flutter_speed_dial-6.1.0+1\lib\src\speed_dial.dart&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;如下修改&lt;code&gt;dispose&lt;/code&gt;函数：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;@override&#xA;  void dispose() {&#xA;    if (widget.renderOverlay &amp;amp;&amp;amp;&#xA;        (backgroundOverlay != null &amp;amp;&amp;amp; backgroundOverlay!.mounted)) {&#xA;      backgroundOverlay?.remove();&#xA;    }&#xA;    if (overlayEntry != null &amp;amp;&amp;amp; overlayEntry!.mounted) {&#xA;      overlayEntry?.remove();&#xA;      overlayEntry?.dispose();&#xA;    }&#xA;    _controller.dispose();&#xA;    widget.openCloseDial?.removeListener(_onOpenCloseDial);&#xA;    super.dispose();&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;minio_new&lt;/h4&gt; &#xA;&lt;p&gt;文件路径示例: &lt;code&gt;D:\flutter\.pub-cache\hosted\pub.flutter-io.cn\minio_new-1.0.1\lib\src\minio.dart&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;queries[&#39;maxKeys&#39;]&lt;/code&gt;修改为&lt;code&gt;queries[&#39;max-keys&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;添加导入 &lt;code&gt;import &#39;package:xml2json/xml2json.dart&#39;;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;如下修改&lt;code&gt;listBuckets&lt;/code&gt;函数&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;  Future&amp;lt;List&amp;lt;Bucket&amp;gt;&amp;gt; listBuckets() async {&#xA;    final resp = await _client.request(&#xA;      method: &#39;GET&#39;,&#xA;      region: region ?? &#39;us-east-1&#39;,&#xA;    );&#xA;    final myTransformer = Xml2Json();&#xA;    myTransformer.parse(resp.body);&#xA;    Map responseMap = json.decode(myTransformer.toParker());&#xA;    List&amp;lt;Bucket&amp;gt; buckets = [];&#xA;    if (responseMap[&#39;ListAllMyBucketsResult&#39;] == null ||&#xA;        responseMap[&#39;ListAllMyBucketsResult&#39;][&#39;Buckets&#39;] == null ||&#xA;        responseMap[&#39;ListAllMyBucketsResult&#39;][&#39;Buckets&#39;][&#39;Bucket&#39;] == null ||&#xA;        responseMap[&#39;ListAllMyBucketsResult&#39;][&#39;Buckets&#39;][&#39;Bucket&#39;].length ==&#xA;            0) {&#xA;      return buckets;&#xA;    }&#xA;    if (responseMap[&#39;ListAllMyBucketsResult&#39;][&#39;Buckets&#39;][&#39;Bucket&#39;] is! List) {&#xA;      buckets.add(Bucket(&#xA;          DateTime.parse(responseMap[&#39;ListAllMyBucketsResult&#39;][&#39;Buckets&#39;]&#xA;              [&#39;Bucket&#39;][&#39;CreationDate&#39;]),&#xA;          responseMap[&#39;ListAllMyBucketsResult&#39;][&#39;Buckets&#39;][&#39;Bucket&#39;][&#39;Name&#39;]));&#xA;      return buckets;&#xA;    }&#xA;    for (var bucket in responseMap[&#39;ListAllMyBucketsResult&#39;][&#39;Buckets&#39;]&#xA;        [&#39;Bucket&#39;]) {&#xA;      buckets&#xA;          .add(Bucket(DateTime.parse(bucket[&#39;CreationDate&#39;]), bucket[&#39;Name&#39;]));&#xA;    }&#xA;    return buckets;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;软件打包&lt;/h3&gt; &#xA;&lt;p&gt;如果你需要自行构建，可以使用 &lt;code&gt;flutter build apk&lt;/code&gt; 或者 进入 &lt;code&gt;android&lt;/code&gt; 目录，使用 &lt;code&gt;gradlew assembleRelease&lt;/code&gt; 命令构建。 构建成功后，会在 &lt;code&gt;build\app\outputs\apk\release&lt;/code&gt; 目录下生成 &lt;code&gt;app-release.apk&lt;/code&gt; 文件。&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2022 Kuingsmile&lt;/p&gt; &#xA;&lt;h2&gt;Github star&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/Kuingsmile/PicHoro&#34;&gt;&lt;img src=&#34;https://starchart.cc/Kuingsmile/PicHoro.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>