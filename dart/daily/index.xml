<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-22T01:29:08Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>KNKPA/KNKPAnime</title>
    <updated>2024-05-22T01:29:08Z</updated>
    <id>tag:github.com,2024-05-22:/KNKPA/KNKPAnime</id>
    <link href="https://github.com/KNKPA/KNKPAnime" rel="alternate"></link>
    <summary type="html">&lt;p&gt;KNKPAnime：支持多番剧源与弹幕的看番软件。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;knkpanime&lt;/h1&gt; &#xA;&lt;p&gt;一个支持多番剧源和弹幕的看番（甚至看电视剧）软件，甚至可以自定义你想接入的网站适配器！&lt;/p&gt; &#xA;&lt;p&gt;有问题或建议欢迎通过issue反馈。&lt;/p&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/KNKPA/KNKPAnime/releases/latest&#34;&gt;下载链接&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;另：macOS版可以在&lt;a href=&#34;https://github.com/KNKPA/KNKPAnime/releases/tag/latest&#34;&gt;预览版&lt;/a&gt;中下载，但不知为什么，github workflow编译的macOS版在我的mac上打开视频播放页时会崩溃（目前猜测是libmpv问题），而本地编译的则不会。如果mac用户想用但在github的release中下载的软件打不开的话，可以尝试自行编译：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[[ $(uname -m) == &#39;x86_64&#39; ]] &amp;amp;&amp;amp; wget https://storage.flutter-io.cn/flutter_infra_release/releases/stable/macos/flutter_macos_3.19.5-stable.zip -O flutter.zip || wget https://storage.flutter-io.cn/flutter_infra_release/releases/stable/macos/flutter_macos_arm64_3.19.5-stable.zip -O flutter.zip&#xA;unzip flutter.zip&#xA;git clone https://github.com/KNKPA/KNKPAnime.git # 如果访问github有问题可以选择国内镜像&#xA;cd KNKPAnime&#xA;../flutter/bin/flutter build macos --release&#xA;mv build/macos/Build/Products/Release/knkpanime.app ../&#xA;cd ..&#xA;rm -rf KNKPAnime flutter flutter.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;最重要的当然就是搜索啦。作为一个支持多番剧源的软件，你可以先在Bangumi上搜索想看的番剧，再选择可用的源观看：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KNKPA/KNKPAnime/main/.github/images/Bangumi-search.png&#34; alt=&#34;Bangumi search&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KNKPA/KNKPAnime/main/.github/images/source-selection.png&#34; alt=&#34;source selection&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;当然，有的时候也会因为不同译名或番剧名中有特殊符号而导致使用Bangumi搜索很难匹配到番剧源中的数据，这个时候就可以用番剧源搜索来自定义用来搜索的词：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KNKPA/KNKPAnime/main/.github/images/oops-not-found.png&#34; alt=&#34;oops, not found&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KNKPA/KNKPAnime/main/.github/images/hooray-found.png&#34; alt=&#34;hooray! found&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;需要注意的是，在”Bangumi搜索“页面搜索时，会使用Bangumi提供的番剧名以及你所输入的搜索词在各番剧源进行两次搜索；而在追番、新番日历这两个页面点击某一个番剧的时候，只会用Bangumi提供的番剧名进行一次搜索，因此可能会出现无法搜索到的情况。如果这种情况发生的话，请在两个搜索界面搜索或通过历史记录进入（如果你看过这部番的话）。&lt;/p&gt; &#xA;&lt;p&gt;然后就是一些比较常规的功能 - 历史记录、追番、番剧更新日历等，应该不需要过多介绍。&lt;/p&gt; &#xA;&lt;h2&gt;桌面版快捷键&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;快捷键&lt;/th&gt; &#xA;   &lt;th&gt;对应操作&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;J&lt;/td&gt; &#xA;   &lt;td&gt;快进90秒（跳过OP/ED）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;左右箭头&lt;/td&gt; &#xA;   &lt;td&gt;快进/快退10秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;上下箭头&lt;/td&gt; &#xA;   &lt;td&gt;音量增加/减少5%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;esc&lt;/td&gt; &#xA;   &lt;td&gt;退出全屏&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;D&lt;/td&gt; &#xA;   &lt;td&gt;开启/关闭弹幕&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F&lt;/td&gt; &#xA;   &lt;td&gt;开启/退出全屏&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;[&lt;/td&gt; &#xA;   &lt;td&gt;上一集&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;]&lt;/td&gt; &#xA;   &lt;td&gt;下一集&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;自定义适配器&lt;/h2&gt; &#xA;&lt;p&gt;所谓适配器，就是解析在线观看网站的接口从而获取搜索结果、视频资源并提供给播放器播放的代码模块。在船新的1.1.0版本中，本软件已经可以支持两种适配器的定义形式以及解析形式，分别为：&lt;/p&gt; &#xA;&lt;h3&gt;定义形式&lt;/h3&gt; &#xA;&lt;h4&gt;内置适配器&lt;/h4&gt; &#xA;&lt;p&gt;这种适配器使用dart代码编写，直接随主程序编译，运行速度和资源消耗上最有优势。当然，既然是随主程序一起编译，代价就是&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;加入新的适配器必须通过向主程序提交代码的方式，即PR，并需要我的允许。&lt;del&gt;当然我也不会不允许就是了（&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;新的适配器以及修复过期链接等操作必须随新版本发布，并不灵活。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;JavaScript适配器&lt;/h4&gt; &#xA;&lt;p&gt;通过使用&lt;a href=&#34;https://github.com/abner/flutter_js&#34;&gt;flutter_js&lt;/a&gt;，软件内置了一个JavaScript runtime，可以用来即时执行JS代码。利用这个JS runtime，我们可以随时获取互联网上的适配器并添加到软件中。虽然损失了一些性能，但毕竟搜索和解析视频都是相对不频繁的操作（相对于UI等等耗能大户来说），因此不会造成太大影响。&lt;/p&gt; &#xA;&lt;p&gt;关于如何定义自己的适配器，请参见&lt;a href=&#34;https://github.com/KNKPA/KNKPAnime-js-adapters&#34;&gt;KNKPAnime-js-adapters&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;请从您信任的来源添加适配器&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;解析形式&lt;/h3&gt; &#xA;&lt;h4&gt;基于规则&lt;/h4&gt; &#xA;&lt;p&gt;基于手写规则的解析，需要编写者去检查网站代码并找出视频源的URL到底如何得到。&lt;/p&gt; &#xA;&lt;h4&gt;基于WebView&lt;/h4&gt; &#xA;&lt;p&gt;通过在软件中跑一个不可见的浏览器，我们可以用他山之石来攻他山的玉，通过执行原网站的全部操作并获取视频链接。&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;本项目受&lt;a href=&#34;https://github.com/Predidit/oneAnime&#34;&gt;oneAnime&lt;/a&gt;启发，并在Anime1的适配器中借用了其代码。&lt;/p&gt; &#xA;&lt;p&gt;本项目使用了&lt;a href=&#34;http://bangumi.tv/&#34;&gt;Bangumi&lt;/a&gt;、&lt;a href=&#34;https://www.dandanplay.com/&#34;&gt;dandanplay&lt;/a&gt;的开放API。网站运营不易，请各位在能力范围内尽量支持这两个网站的运营。&lt;/p&gt;</summary>
  </entry>
</feed>