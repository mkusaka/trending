<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-13T01:31:32Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>omegaui/app_fleet</title>
    <updated>2024-01-13T01:31:32Z</updated>
    <id>tag:github.com,2024-01-13:/omegaui/app_fleet</id>
    <link href="https://github.com/omegaui/app_fleet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A brilliant workspace manager &amp; launch automation tool specially designed for GNOME.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/omegaui/app_fleet/main/github/banner/github-banner.png&#34; alt=&#34;GitHub Banner&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; App Fleet is a workspace management tool &lt;strong&gt;written entirely for the Linux Desktops&lt;/strong&gt;, designed and finely tested on GNOME . It offers creation of workspace configurations that can later be launched using a startup workspace launcher. &lt;/p&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; Modern Linux Desktop Environments provide their users with the ability to have multiple workspaces on the same desktop; this is highly beneficial for users who often switch between the group of apps or group of browser windows with multiple tabs. &lt;br&gt; &lt;br&gt; But launching these many apps manually on startup is a hideous task, sure we can write a script that can do this, but doing that requires a bit of brainstorm, and also, even on a powerful machine, some apps take some time to specifically show the first window (you cannot have another workspace until there is at least one window in all the current workspaces), and as the requirement increases we have to edit these scripts and maintain them, also, taking a look at the logs if any error occurs, waiting for the app to actually come up before switching the workspace to launch another, ..... phew .. honestly, this is a lot of work to do just to make a single workspace configuration. &lt;/p&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; But What if there exists a graphical tool to do this? A Tool that can let you create your workspace configurations, also, allows you to give your workspaces cool names and icons. A Tool that can detect installed apps on your system so that you don&#39;t have to do a manual entry. A Tool that can even execute specific browser tabs or shell scripts? also, what if, it offers a quick workspace launcher once you log in? &lt;/p&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; Here comes App Fleet, &lt;strong&gt;A brilliant workspace manager &amp;amp; quick launcher specially designed for GNOME.&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; &lt;i&gt;You only need wmctrl installed on your distro, also make sure flutter works, then, you can compile App Fleet for your distro.&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; &lt;strong&gt;App Fleet is written using The Flutter Framework.&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;App Fleet comes with a self-update and uninstall feature.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/omegaui/app_fleet/raw/main/CHANGELOG.md&#34;&gt;&lt;strong&gt;CHANGELOG&lt;/strong&gt;&lt;/a&gt; for a full feature list.&lt;/p&gt; &#xA;&lt;h2&gt;Review&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://news.itsfoss.com/content/images/size/w1304/2024/01/appfleet-workspace-automation-tool.png&#34; alt=&#34;Reviewed by ItsFOSS&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://news.itsfoss.com/app-fleet/&#34;&gt;&lt;p&gt;&lt;strong&gt;Reviewed by ItsFOSS&lt;/strong&gt;&lt;/p&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Install (Advanced Installation Options)&lt;/h2&gt; &#xA;&lt;p&gt;üéóÔ∏è Before installing make sure &lt;code&gt;wmctrl&lt;/code&gt; is installed on your system, or else you will not be able to switch workspace using the App Fleet Launcher.&lt;/p&gt; &#xA;&lt;h3&gt;Install using your shell&lt;/h3&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; Copy and run the following in your terminal: &lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl https://raw.githubusercontent.com/omegaui/app_fleet/main/network-install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install from Precompiled Bundle&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/omegaui/app-fleet&#xA;cd app-fleet/package&#xA;./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install from Source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/omegaui/app-fleet&#xA;cd app-fleet/package&#xA;./install-from-source.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Update&lt;/h2&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; You can seamlessly update app-fleet without touching your workspace configuration. Once, an update arrives, your installation will notify you about the update. then, you can simply, update using these three ways: &lt;/p&gt; &#xA;&lt;h3&gt;Update directly from the shell&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl https://raw.githubusercontent.com/omegaui/app_fleet/main/network-update.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update from Precompiled Bundle&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/omegaui/app-fleet&#xA;cd app-fleet/package&#xA;./update.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update from source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/omegaui/app-fleet&#xA;cd app-fleet/package&#xA;./update-from-source.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Why there is no Snap/Flatpak/AppImage/Deb/RPM Package?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Snap/Flatpak Packaging is Unsupported by program like App Fleet&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;App Fleet being a workspace launch automation tool requires &lt;strong&gt;system wide read access&lt;/strong&gt;, the reason is very justifying:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;App Fleet not only launches &lt;strong&gt;Apps&lt;/strong&gt; but also &lt;strong&gt;any custom script&lt;/strong&gt; the user wants and this script can exist anywhere on the drive or even on the &lt;strong&gt;external&lt;/strong&gt; drive.&lt;/li&gt; &#xA; &lt;li&gt;Snap Packaging isn&#39;t possible as packaging a flutter app with snap requires &lt;strong&gt;gnome&lt;/strong&gt; extension which in turn doesn&#39;t supports &lt;strong&gt;classic&lt;/strong&gt; confinement, and App Fleet cannot leverage the full system in a &lt;strong&gt;strict&lt;/strong&gt; confinement. (I searched a lot about building it under &lt;strong&gt;classic&lt;/strong&gt; confinement to get system wide read access but didn&#39;t find any way to do it. Any help on this is highly appreciated.)&lt;/li&gt; &#xA; &lt;li&gt;Flatpak Packaging also isn&#39;t supported as flatpaks have additional set of hindrance, the &lt;code&gt;/usr&lt;/code&gt; directory is &lt;strong&gt;inaccessible&lt;/strong&gt; by a flatpak app, and this is the core directory around which App Fleet detects apps and system icons. Not only &lt;code&gt;/usr&lt;/code&gt; but directories like &lt;code&gt;/var&lt;/code&gt; where the installed flatpak&#39;s metainfo resides is inaccessible, thus, App Fleet won&#39;t be able to detect other apps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both Snaps and Flatpak are launched in a &lt;strong&gt;SANDBOX&lt;/strong&gt;, and App Fleet needs to be directly invoked on the system to be able to do what it is meant to do.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;As far as &lt;strong&gt;AppImage&lt;/strong&gt; is considered, the sole cause why I planned for packaging was to roll out updates through the native software updater and not by making the user to rerun the update command everytime an update arrives. &lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Current network installers included on home repo provide a much seamless install and update experience to the users. App Fleet already includes a &lt;strong&gt;Self Update&lt;/strong&gt; and &lt;strong&gt;In-App Uninstall Option&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Debian/RPM or Native Packaging&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;App Fleet can be packaged into .deb or .rpm but the reason why this isn&#39;t done is App Fleet&#39;s ability to do a &lt;strong&gt;self update, reinstall and install&lt;/strong&gt;. Elaborating more, when packaged as a deb package, the core of the app needs to placed to &lt;code&gt;/usr/local/lib&lt;/code&gt; while the config always stays at &lt;code&gt;~/.config&lt;/code&gt;, App Fleet&#39;s current installations are placed inside &lt;code&gt;~/.config/app-fleet&lt;/code&gt; only, and the self-updater/installer is coded to update it there only. Thus, packaging it as deb package would break the self-updater/installer.&lt;/li&gt; &#xA;   &lt;li&gt;Moreover, current network installers work out of the box, you just have to copy/paste the curl command.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; Hey, App Fleet is built in the ecosystem of &lt;strong&gt;IntelliJ&lt;/strong&gt;. &lt;/p&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; If you want to contribute to App Fleet, make sure you use IntelliJ-Based project configurations and edits. &lt;/p&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; The project is built using &lt;i&gt;clean architecture&lt;/i&gt;, and there are four launch configurations. &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;project-root&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;.run&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;Launcher Dev.run.xml&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;Launcher Prod.run.xml&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;Manager Dev.run.xml&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;Manager Prod.run.xml&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; The &lt;strong&gt;Prod&lt;/strong&gt; configurations are meant for production ready states, and the &lt;strong&gt;Dev&lt;/strong&gt; configurations are meant for debugging purpose. &lt;br&gt; You can only see app logs in Dev Mode. &lt;/p&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; App Fleet is designed to automatically generate Bug Reports. &lt;br&gt; You can find them at &lt;strong&gt;$HOME/.config/app-fleet/bug-reports`&lt;/strong&gt;. &lt;/p&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; &lt;strong&gt;Flutter 3.13.6 or above is Required for compiling the program.&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Advanced Configuration Options&lt;/h2&gt; &#xA;&lt;h3&gt;App Entry Customization&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/omegaui/app_fleet/main/github/images/app-customization.png&#34; alt=&#34;App Customization&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; Some Apps take a specific period of time to load, &lt;br&gt; App Fleet offers &lt;strong&gt;wait-time&lt;/strong&gt; for that kind of heavy App. &lt;br&gt; By Default, each app is given a time period of 500ms to load, which can be customized as per your needs (usually system performance). &lt;/p&gt; &#xA;&lt;h3&gt;Manual Configuration Editing&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/omegaui/app_fleet/main/github/images/gaming-example.png&#34; alt=&#34;Gaming Example&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; Configurations are saved in a readable format i.e., json. &lt;br&gt; You can directly edit the workspace configs located at $HOME/.config/app-fleet/workspaces &lt;/p&gt; &#xA;&lt;h3&gt;Hiding Workspace Configs in Launcher&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/omegaui/app_fleet/main/github/images/workspace-paths.png&#34; alt=&#34;Workspace Paths&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; You can even hide some workspaces from coming the launcher mode by removing them from app-settings.json &lt;br&gt; this file contains app preferences and is located at $HOME/.config/app-fleet &lt;/p&gt; &#xA;&lt;h3&gt;Quick Task Launcher&lt;/h3&gt; &#xA;&lt;p style=&#34;font-family: Sen&#34;&gt; There also exists a tiny version of this project, its called the &lt;strong&gt;&lt;a href=&#34;https://github.com/omegaui/floating_action_bar&#34;&gt;floating-action-bar&lt;/a&gt;&lt;/strong&gt;, which can be used to quickly launch anything on any Modern Desktop Environment. &lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s next?&lt;/h2&gt; &#xA;&lt;p&gt;You can even try the latest beta by selecting the branch with &lt;code&gt;latest&lt;/code&gt; version number in the branches popup.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/omegaui/app_fleet/main/github/images/branches.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;then, you need to &lt;a href=&#34;https://github.com/omegaui/app_fleet/tree/main#install-from-source&#34;&gt;&lt;strong&gt;install from source&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;See what is &lt;a href=&#34;https://github.com/omegaui/app_fleet/milestone/1&#34;&gt;&lt;strong&gt;planned&lt;/strong&gt;&lt;/a&gt; for the next release.&lt;/h4&gt; &#xA;&lt;h2&gt;Support Me&lt;/h2&gt; &#xA;&lt;p&gt;If you have really liked the project and want to support the development of App Fleet. Then, please consider buying me a coffee.&lt;/p&gt; &#xA;&lt;p&gt;It helps me to work on the project in my free time.&lt;/p&gt; &#xA;&lt;p&gt;Scan this &lt;a href=&#34;https://raw.githubusercontent.com/omegaui/app_fleet/main/github/images/qr-code.png&#34;&gt;&lt;strong&gt;Qr Code&lt;/strong&gt;&lt;/a&gt; or &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Click the button below to Buy Me a Coffee.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/imarham&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 60px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h3 style=&#34;font-family: Sen&#34;&gt; App Designed and Crafted by &lt;strong&gt;&lt;a href=&#34;https://github.com/omegaui&#34;&gt;@omegaui&lt;/a&gt;&lt;/strong&gt; &lt;/h3&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>Suwayomi/Tachidesk-Sorayomi</title>
    <updated>2024-01-13T01:31:32Z</updated>
    <id>tag:github.com,2024-01-13:/Suwayomi/Tachidesk-Sorayomi</id>
    <link href="https://github.com/Suwayomi/Tachidesk-Sorayomi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A free and open source manga reader app to read manga from a Tachidesk-Server instance.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;200px&#34; height=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/Suwayomi/Tachidesk-Sorayomi/main/assets/icons/launcher/sorayomi_icon.png&#34; alt=&#34;Tachidesk Sorayomi logo&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Tachidesk Sorayomi &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Sorayomi/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-Android%20%7C%20iOS%20%7C%20Linux%20%7C%20Windows%20%7C%20MacOS%20%7C%20Web-lightgrey&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/DDZdqZWaHA&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/801021177333940224.svg?label=discord&amp;amp;labelColor=7289da&amp;amp;color=2c2f33&amp;amp;style=flat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Sorayomi&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Suwayomi/Tachidesk-Sorayomi&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Sorayomi/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/Suwayomi/Tachidesk-Sorayomi&#34; alt=&#34;GitHub License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/Suwayomi/Tachidesk-Sorayomi/actions/workflows/publish.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt; &lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Sorayomi/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/Suwayomi/Tachidesk-Sorayomi.svg?maxAge=3600&amp;amp;label=download&#34; alt=&#34;stable release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A free and open source manga reader based on &lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter&lt;/a&gt; to read manga from a &lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Server&#34;&gt;Tachidesk-Server&lt;/a&gt; instance.&lt;br&gt;&lt;br&gt; Tachidesk-Sorayomi need to connect with an already hosted server.&lt;br&gt;&lt;br&gt; Tachidesk-Sorayomi supports Linux, Windows, MacOS, Web, iOS and Android. &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Is this application usable? Should I test it?&lt;/h2&gt; &#xA;&lt;p&gt;Here is a list of current features for interaction with Tachidesk-Sorayomi:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Managing installed Extensions.&lt;/li&gt; &#xA; &lt;li&gt;Interaction with your library.&lt;/li&gt; &#xA; &lt;li&gt;Browsing installed sources.&lt;/li&gt; &#xA; &lt;li&gt;Viewing manga and chapters.&lt;/li&gt; &#xA; &lt;li&gt;Reading, downloading, and managing chapters.&lt;/li&gt; &#xA; &lt;li&gt;Viewing chapter updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Keep in mind that Tachidesk-Sorayomi and Tachidesk-Server are alpha software, so it can have issues. See &lt;a href=&#34;https://raw.githubusercontent.com/Suwayomi/Tachidesk-Sorayomi/main/#support-and-help&#34;&gt;Support and help&lt;/a&gt; if it happens.&lt;/p&gt; &#xA;&lt;h3&gt;Supported Tachidesk versions&lt;/h3&gt; &#xA;&lt;p&gt;These are the versions of &lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Server&#34;&gt;Tachidesk-Server&lt;/a&gt; that Tachidesk-Sorayomi supports.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Sorayomi/releases&#34;&gt;Release build&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Server&#34;&gt;Tachidesk-Server&lt;/a&gt; v0.6.6+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Downloading and Running the app&lt;/h2&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;Download *-android-all.apk file from latest release &lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Sorayomi/releases&#34;&gt;the releases section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the latest .ipa file from &lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Sorayomi/releases&#34;&gt;the releases section&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;use &lt;a href=&#34;https://altstore.io/&#34;&gt;AltStore&lt;/a&gt; to install Sorayomi in ios.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest .msi file from &lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Sorayomi/releases&#34;&gt;the releases section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;if you use WINGET, you can run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;winget install tachidesk-sorayomi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the *-macos-x64.zip from the latest release &lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Sorayomi/releases&#34;&gt;the releases section&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extract the file.&lt;/li&gt; &#xA; &lt;li&gt;Drag and drop the extracted app file to applications folder in finder.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;if you use HomeBrew, you can run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install --cask tachidesk-sorayomi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debian based Linux&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest deb release from &lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Sorayomi/releases&#34;&gt;the releases section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Arch based Linux&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest release from &lt;a href=&#34;https://aur.archlinux.org/packages/tachidesk-sorayomi-bin&#34;&gt;the aur&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you use yay, you can run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yay -S tachidesk-sorayomi-bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;inside a terminal window.&lt;/p&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest web.zip file from &lt;a href=&#34;https://github.com/Suwayomi/Tachidesk-Sorayomi/releases&#34;&gt;the releases section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sorayomi-web deployed in GitHub pages. You can check out &lt;a href=&#34;https://suwayomi.github.io/Tachidesk-Sorayomi/&#34;&gt;Sorayomi here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Post installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configure your server address in &lt;code&gt;Navigation bar &amp;gt; more screen &amp;gt; Server URL&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;p&gt;These instructions will get you a copy of the project up and running on your local machine for development and testing purposes.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;You can install Flutter &amp;amp; Dart from &lt;a href=&#34;https://docs.flutter.dev/get-started/install&#34;&gt;Official website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dart sdk&lt;/li&gt; &#xA; &lt;li&gt;Flutter - Channel Stable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;  $ git clone https://github.com/Suwayomi/Tachidesk-Sorayomi.git&#xA;  $ cd Tachidesk-Sorayomi/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;You can install all dependencies by running this command in terminal:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;  $ flutter pub get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Now enter the following command to start debugging the app:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;  $ flutter run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Localization generator&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;  $ flutter gen-l10n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pull-Request Suggestion &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install GitHooks after cloning the repo using &lt;code&gt;git config --local core.hooksPath .githooks&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support and help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join Tachidesk&#39;s &lt;a href=&#34;https://discord.gg/DDZdqZWaHA&#34;&gt;discord server&lt;/a&gt; to hang out with the community and receive support and help.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Built Using&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter&lt;/a&gt; is an open source framework by Google for building beautiful, natively compiled, multi-platform applications from a single codebase.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/riverpod/&#34;&gt;Flutter Riverpod&lt;/a&gt; - A simple way to access state while robust and testable.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://codewithandrea.com/articles/flutter-app-architecture-riverpod-introduction/&#34;&gt;Riverpod Architecture&lt;/a&gt; - File architecture developed by &lt;a href=&#34;https://github.com/bizz84&#34;&gt;@bizz84&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find other dependencies in &lt;a href=&#34;https://raw.githubusercontent.com/Suwayomi/Tachidesk-Sorayomi/main/pubspec.yaml&#34;&gt;pubspec.yaml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;Tachidesk-server&lt;/code&gt; project is developed by &lt;a href=&#34;https://github.com/AriaMoradi&#34;&gt;@AriaMoradi&lt;/a&gt; and contributors,&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;Tachidesk-Sorayomi&lt;/code&gt; project is developed by &lt;a href=&#34;https://github.com/DattatreyaReddy&#34;&gt;@DattatreyaReddy&lt;/a&gt; and contributors,&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;CI-CD for &lt;code&gt;Tachidesk-Sorayomi&lt;/code&gt; is developed by &lt;a href=&#34;https://github.com/mahor1221&#34;&gt;@mahor1221&lt;/a&gt; and contributors.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translation&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to translate the project on &lt;a href=&#34;https://hosted.weblate.org/projects/suwayomi/tachidesk-sorayomi/&#34;&gt;Weblate&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Translation Progress&lt;/summary&gt; &#xA; &lt;a href=&#34;https://hosted.weblate.org/engage/suwayomi/&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widgets/suwayomi/-/tachidesk-sorayomi/multi-auto.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;A link for &lt;a href=&#34;https://github.com/Suwayomi/Tachidesk&#34;&gt;Tachidesk is provided here&lt;/a&gt; and is licensed under &lt;code&gt;Mozilla Public License v2.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can obtain a copy of &lt;code&gt;Mozilla Public License v2.0&lt;/code&gt; from &lt;a href=&#34;https://mozilla.org/MPL/2.0/&#34;&gt;https://mozilla.org/MPL/2.0/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright (C) Contributors to the Suwayomi project&#xA;&#xA;This Source Code Form is subject to the terms of the Mozilla Public&#xA;License, v. 2.0. If a copy of the MPL was not distributed with this&#xA;file, You can obtain one at http://mozilla.org/MPL/2.0/.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>