<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-24T01:40:46Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TarekAlabd/Flutter-Steps-Tracker</title>
    <updated>2022-06-24T01:40:46Z</updated>
    <id>tag:github.com,2022-06-24:/TarekAlabd/Flutter-Steps-Tracker</id>
    <link href="https://github.com/TarekAlabd/Flutter-Steps-Tracker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;It&#39;s an open source project for the steps tracking (Pedometer) built with Flutter.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Steps Tracker&lt;/h1&gt; &#xA;&lt;p&gt;It&#39;s an open source project for the steps tracking (Pedometer) built with Flutter and integrated with Firebase as the initial backend service.&lt;/p&gt; &#xA;&lt;p&gt;Some of the features should have been in the server-side using cloud functions, but there were some problems with that and it will be available soon with some configuration instructions to work on one server.&lt;/p&gt; &#xA;&lt;p&gt;So you may find some workarounds that will be more accurate and better after adding the server-side functions.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start üöÄ&lt;/h2&gt; &#xA;&lt;h2&gt;Feature Set ‚ú®&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Free &amp;amp; Open Source&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cross Platform App (Android - IOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Usable and user-friendly interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Proper architecture for the code, Clean Architecture&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Authentication Anonymously with Firebase&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Recording the users data in Firestore Database&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Tracking the user footsteps and update them in real-time manner while the app is in the foreground&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; For every 100 steps, a function adds 5 points to the health points of the user&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Showing a visual feedback to the user (now it&#39;s simple, Snackbar) to notice the users that they gain extra points&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Catalog of rewards, so you can pick a reward you like&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Rewards are paid with the health points, just scan the QR code (now it&#39;s dummy) and confirm if you have enough number of points&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; History that lists all the exchanges to health points and the rewards taken&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Leaderboard page where you can see your ranking between all the users&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multilingual, supports both Arabic and English&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multi themes, supports the light and dark theme&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Future Steps ‚ú®&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Refactor some of the colors, methods, cubits, repos and some files in the architecture&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Daily steps (The Pedometer plugin basically calculates the total steps not daily)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Customized Goals&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Build a good UI for the empty states (one empty state)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Integrate with the cloud functions and make the app more accurate&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Update the visual feedback after the user gains extra points&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make the app works on the background&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Enable push notifications&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Sends notifications as the visual feedback for gaining more points (Background)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; CI/CD for reviewing the pull requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Publish the app to Google Play Store&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots &lt;span&gt;üì∑&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/TarekAlabd/Flutter-Steps-Tracker/raw/master/assets/screenshots/1.png&#34; width=&#34;300&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Home&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Exchanges&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Rewards&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Leaderboard&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://github.com/TarekAlabd/Flutter-Steps-Tracker/raw/master/assets/screenshots/2.PNG&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://github.com/TarekAlabd/Flutter-Steps-Tracker/raw/master/assets/screenshots/3.PNG&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://github.com/TarekAlabd/Flutter-Steps-Tracker/raw/master/assets/screenshots/4.PNG&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://github.com/TarekAlabd/Flutter-Steps-Tracker/raw/master/assets/screenshots/5.PNG&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://github.com/TarekAlabd/Flutter-Steps-Tracker/raw/master/assets/screenshots/2-1.PNG&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://github.com/TarekAlabd/Flutter-Steps-Tracker/raw/master/assets/screenshots/3-1.PNG&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://github.com/TarekAlabd/Flutter-Steps-Tracker/raw/master/assets/screenshots/4-1.PNG&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://github.com/TarekAlabd/Flutter-Steps-Tracker/raw/master/assets/screenshots/5-1.PNG&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation üìù&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>Baseflow/flutter-geolocator</title>
    <updated>2022-06-24T01:40:46Z</updated>
    <id>tag:github.com,2022-06-24:/Baseflow/flutter-geolocator</id>
    <link href="https://github.com/Baseflow/flutter-geolocator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Android and iOS Geolocation plugin for Flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter geolocator plugin&lt;/h1&gt; &#xA;&lt;p&gt;The Flutter geolocator plugin is build following the federated plugin architecture. A detailed explanation of the federated plugin concept can be found in the &lt;a href=&#34;https://flutter.dev/docs/development/packages-and-plugins/developing-packages#federated-plugins&#34;&gt;Flutter documentation&lt;/a&gt;. This means the geolocator plugin is separated into the following packages:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator&#34;&gt;&lt;code&gt;geolocator&lt;/code&gt;&lt;/a&gt;: the app facing package. This is the package users depend on to use the plugin in their project. For details on how to use the &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator&#34;&gt;&lt;code&gt;geolocator&lt;/code&gt;&lt;/a&gt; plugin you can refer to its &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator/README.md&#34;&gt;README.md&lt;/a&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator_android&#34;&gt;&lt;code&gt;geolocator_android&lt;/code&gt;&lt;/a&gt;: this package contains the endorsed Android implementation of the geolocator_platform_interface and adds Android support to the &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator&#34;&gt;&lt;code&gt;geolocator&lt;/code&gt;&lt;/a&gt; app facing package. More information can be found in its &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator_android/README.md&#34;&gt;README.md&lt;/a&gt; file;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator_apple&#34;&gt;&lt;code&gt;geolocator_apple&lt;/code&gt;&lt;/a&gt;: this package contains the endorsed iOS and macOS implementations of the geolocator_platform_interface and adds iOS and macOS support to the &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator&#34;&gt;&lt;code&gt;geolocator&lt;/code&gt;&lt;/a&gt; app facing package. More information can be found in its &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator_apple/README.md&#34;&gt;README.md&lt;/a&gt; file;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator_web&#34;&gt;&lt;code&gt;geolocator_web&lt;/code&gt;&lt;/a&gt;: this package contains the endorsed web implementation of the geolocator_platform_interface and adds web support to the &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator&#34;&gt;&lt;code&gt;geolocator&lt;/code&gt;&lt;/a&gt; app facing package. More information can be found in its &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator_web/README.md&#34;&gt;README.md&lt;/a&gt; file;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator_windows&#34;&gt;&lt;code&gt;geolocator_windows&lt;/code&gt;&lt;/a&gt;: this package contains the endorsed Windows implementation of the geolocator_platform_interface and adds Windows support to the &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator&#34;&gt;&lt;code&gt;geolocator&lt;/code&gt;&lt;/a&gt; app facing package. More information can be found in its &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator_windows/README.md&#34;&gt;README.md&lt;/a&gt; file;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator_platform_interface&#34;&gt;&lt;code&gt;geolocator_platform_interface&lt;/code&gt;&lt;/a&gt;: this packages declares the interface which all platform packages must implement to support the app-facing package. Instructions on how to implement a platform packages can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator_platform_interface/README.md&#34;&gt;README.md&lt;/a&gt; of the &lt;a href=&#34;https://raw.githubusercontent.com/Baseflow/flutter-geolocator/main/geolocator_platform_interface&#34;&gt;&lt;code&gt;geolocator_platform_interface&lt;/code&gt;&lt;/a&gt; package.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>fluttercommunity/chewie</title>
    <updated>2022-06-24T01:40:46Z</updated>
    <id>tag:github.com,2022-06-24:/fluttercommunity/chewie</id>
    <link href="https://github.com/fluttercommunity/chewie" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The video player for Flutter with a heart of gold&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chewie&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/chewie&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/chewie.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/brianegan/chewie/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/chewie&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-android%20%7C%20ios%20%7C%20web%20-blue.svg?sanitize=true&#34; alt=&#34;Generic badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The video player for Flutter with a heart of gold.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://pub.dartlang.org/packages/video_player&#34;&gt;&lt;code&gt;video_player&lt;/code&gt;&lt;/a&gt; plugin provides low-level access to video playback. Chewie uses the &lt;code&gt;video_player&lt;/code&gt; under the hood and wraps it in a friendly Material or Cupertino UI!&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MaterialControls&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MaterialDesktopControls&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/brianegan/chewie/raw/master/assets/MaterialControls.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/brianegan/chewie/raw/master/assets/MaterialDesktopControls.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;CupertinoControls&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/brianegan/chewie/raw/master/assets/CupertinoControls.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;In your &lt;code&gt;pubspec.yaml&lt;/code&gt; file within your Flutter Project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  chewie: &amp;lt;latest_version&amp;gt;&#xA;  video_player: &amp;lt;latest_version&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use it&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:chewie/chewie.dart&#39;;&#xA;final videoPlayerController = VideoPlayerController.network(&#xA;    &#39;https://flutter.github.io/assets-for-api-docs/assets/videos/butterfly.mp4&#39;);&#xA;&#xA;await videoPlayerController.initialize();&#xA;&#xA;final chewieController = ChewieController(&#xA;  videoPlayerController: videoPlayerController,&#xA;  autoPlay: true,&#xA;  looping: true,&#xA;);&#xA;&#xA;final playerWidget = Chewie(&#xA;  controller: chewieController,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please make sure to dispose both controller widgets after use. For example by overriding the dispose method of the a &lt;code&gt;StatefulWidget&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;@override&#xA;void dispose() {&#xA;  videoPlayerController.dispose();&#xA;  chewieController.dispose();&#xA;  super.dispose();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/brianegan/chewie/raw/master/assets/Options.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chewie got some options which controls the video you provide. These options appear on default on a &lt;code&gt;showModalBottomSheet&lt;/code&gt; (like you already know from YT maybe). Chewie is passing on default &lt;code&gt;Playback speed&lt;/code&gt; and &lt;code&gt;Subtitles&lt;/code&gt; options as an &lt;code&gt;OptionItem&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To add additional options just add these lines to your &lt;code&gt;ChewieController&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;additionalOptions: (context) {&#xA;  return &amp;lt;OptionItem&amp;gt;[&#xA;    OptionItem(&#xA;      onTap: () =&amp;gt; debugPrint(&#39;My option works!&#39;),&#xA;      iconData: Icons.chat,&#xA;      title: &#39;My localized title&#39;,&#xA;    ),&#xA;    OptionItem(&#xA;      onTap: () =&amp;gt;&#xA;          debugPrint(&#39;Another option working!&#39;),&#xA;      iconData: Icons.chat,&#xA;      title: &#39;Another localized title&#39;,&#xA;    ),&#xA;  ];&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t like to show your options with the default &lt;code&gt;showModalBottomSheet&lt;/code&gt; just override the View with the &lt;code&gt;optionsBuilder&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;optionsBuilder: (context, defaultOptions) async {&#xA;  await showDialog&amp;lt;void&amp;gt;(&#xA;    context: context,&#xA;    builder: (ctx) {&#xA;      return AlertDialog(&#xA;        content: ListView.builder(&#xA;          itemCount: defaultOptions.length,&#xA;          itemBuilder: (_, i) =&amp;gt; ActionChip(&#xA;            label: Text(defaultOptions[i].title),&#xA;            onPressed: () =&amp;gt;&#xA;                defaultOptions[i].onTap!(),&#xA;          ),&#xA;        ),&#xA;      );&#xA;    },&#xA;  );&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your &lt;code&gt;additionalOptions&lt;/code&gt; are already included here (if you provided &lt;code&gt;additionalOptions&lt;/code&gt;)!&lt;/p&gt; &#xA;&lt;p&gt;Last but not least: What is an option without proper translation. To add your strings to them just add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;optionsTranslation: OptionsTranslation(&#xA;  playbackSpeedButtonText: &#39;Wiedergabegeschwindigkeit&#39;,&#xA;  subtitlesButtonText: &#39;Untertitel&#39;,&#xA;  cancelButtonText: &#39;Abbrechen&#39;,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Subtitles&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Since version 1.1.0 chewie supports subtitles. Here you can see how to use them&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can provide an &lt;code&gt;List&amp;lt;Subtitle&amp;gt;&lt;/code&gt; and customize your subtitles with the &lt;code&gt;subtitleBuilder&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;p&gt;Just add subtitles as following code is showing into your &lt;code&gt;ChewieController&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ChewieController(&#xA;  videoPlayerController: _videoPlayerController,&#xA;  autoPlay: true,&#xA;  looping: true,&#xA;  subtitle: Subtitles([&#xA;    Subtitle(&#xA;      index: 0,&#xA;      start: Duration.zero,&#xA;      end: const Duration(seconds: 10),&#xA;      text: &#39;Hello from subtitles&#39;,&#xA;    ),&#xA;    Subtitle(&#xA;      index: 1,&#xA;      start: const Duration(seconds: 10),&#xA;      end: const Duration(seconds: 20),&#xA;      text: &#39;Whats up? :)&#39;,&#xA;    ),&#xA;  ]),&#xA;  subtitleBuilder: (context, subtitle) =&amp;gt; Container(&#xA;    padding: const EdgeInsets.all(10.0),&#xA;    child: Text(&#xA;      subtitle,&#xA;      style: const TextStyle(color: Colors.white),&#xA;    ),&#xA;  ),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;index&lt;/code&gt; attribute is just for purpases if you want to structure your subtitles in your database and provide your indexes here. &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt; are here the key attributes.&lt;/p&gt; &#xA;&lt;p&gt;The Duration defines on which part of your video your subtitles should start and end. For example: Your video is 10 minutes long and you want to add a subtitle between: &lt;code&gt;00:00&lt;/code&gt; and &lt;code&gt;00:10&lt;/code&gt;&#39;th second you&#39;ve to provide:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Subtitle(&#xA;  index: 0,&#xA;  start: Duration.zero,&#xA;  end: const Duration(seconds: 10),&#xA;  text: &#39;Hello from subtitles&#39;,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Please run the app in the &lt;a href=&#34;https://github.com/brianegan/chewie/tree/master/example&#34;&gt;&lt;code&gt;example/&lt;/code&gt;&lt;/a&gt; folder to start playing!&lt;/p&gt; &#xA;&lt;h2&gt;Migrating from Chewie &amp;lt; 0.9.0&lt;/h2&gt; &#xA;&lt;p&gt;Instead of passing the &lt;code&gt;VideoPlayerController&lt;/code&gt; and your options to the &lt;code&gt;Chewie&lt;/code&gt; widget you now pass them to the &lt;code&gt;ChewieController&lt;/code&gt; and pass that latter to the &lt;code&gt;Chewie&lt;/code&gt; widget.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final playerWidget = Chewie(&#xA;  videoPlayerController,&#xA;  autoPlay: true,&#xA;  looping: true,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;becomes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final chewieController = ChewieController(&#xA;  videoPlayerController: videoPlayerController,&#xA;  autoPlay: true,&#xA;  looping: true,&#xA;);&#xA;&#xA;final playerWidget = Chewie(&#xA;  controller: chewieController,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MaterialUI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MaterialDesktopUI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; CupertinoUI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Options with translations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Subtitles&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; CustomControls&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Auto-Rotate on FullScreen depending on Source Aspect-Ratio&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Live-Stream and UI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; AutoPlay&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Placeholder&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Looping&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Start video at&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom Progress-Bar colors&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom Overlay&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Allow Sleep (Wakelock)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Playbackspeed Control&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom Route-Pagebuilder&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom Device-Orientation and SystemOverlay before and after fullscreen&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom ErrorBuilder&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support different resolutions of video&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Re-design State-Manager with Provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Screen-Mirroring / Casting (Google Chromecast)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;iOS warning&lt;/h2&gt; &#xA;&lt;p&gt;The video_player plugin used by chewie will only work in iOS simulators if you are on flutter 1.26.0 or above. You may need to switch to the beta channel &lt;code&gt;flutter channel beta&lt;/code&gt; Please refer to this &lt;a href=&#34;https://github.com/flutter/flutter/issues/14647&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;000000000000000KKKKKKKKKKKKXXXXXXXXXXXXXKKKKKKKKKKKKKKKKKKKKKKKKKKK00&#xA;000000000000000KKKKKKKKKKKKKXXXXXXXXXXKKKKKKKKKKKKKKKKKKKKKKKKKKKKK00&#xA;000000000000000KKKKKKKKKKKKKXXXXXXK0xdoddoclodxOKKKKKKKKKKKKKKKKKKK00&#xA;00000000000000KKKKKKKKKKKKKKKK0xoc:;;,;,,,,&#39;&#39;&#39;;cldxO0KKKKKKKKKKKKK000&#xA;00000000000000KKKKKKKKKKKKKKx:&#39;&#39;,,,&#39;.,&#39;...;,&#39;&#39;&#39;&#39;,;:clk0KKKKKKKKKKK000&#xA;00000000000000KKKKKKKKKKKKd;&#39;&#39;,,,;;;&#39;.,..,c;;,;;;;;:;;d0KKKKKKKKKK000&#xA;00000000000000KKKKKKKKKKx,&#39;,;:ccl;,c;&#39;;,,ol::coolc:;;,,x0KKKKKKKKK000&#xA;00000000000000KKKKKKKKOl;:;:clllll;;o;;;cooclddclllllc::kKKKKKKKKK000&#xA;00000000000000KKKKKK0o;:ccclccccooo:ooc:ddoddloddolc;;;:c0KKKKKKK0000&#xA;00000000000000KKKKKOccodolccclllooddddddxdxddxkkkkxxo;&#39;&#39;;d0KKKKKK0000&#xA;00000000000000KKKKkcoddolllllclloodxxxxdddxdddxxxddool:&#39;.;O0KKKKK0000&#xA;00000000000000000xloollcccc:cclclodkkxxxdddxxxkkxdlllolc,,x0KKKKK0000&#xA;0000000000000000xccllccccc:;,&#39;&#39;,;:dxkxxddddxkkkxdollcc:cc;d0KKKKKK000&#xA;000000000000000kcc:::cllol:&#39;......odxxdoccldxxxdollllc:;;:d0KKKKK0000&#xA;00000000000000klc;;;clcc::;&#39;...&#39;;;;:cll..&#39;,cdddolccccccc;:x0KKKKK0000&#xA;0000000000000kdl;:cclllclllc::;,;.&#39;.&#39;&#39;o;,,&#39;.;ccoooollllc:;x0KKKKK0000&#xA;000000000000kol;:;::coolcc:::,.....,..cd,....&#39;:lolclolllc;x0KKKK00000&#xA;00000000000Odl;:&#39;cllol;&#39;&#39;&#39;,;;;;::&#39;&#39;.&#39;,:doc;,&#39;,::looc:lcol:x0K00000000&#xA;0000000000Oxl:c,:lolc,..&#39;,:clllollodoc;cllolccloolllcclollO0K00000000&#xA;0000000000xllc,:lool:&#39;.,...o.;llxdo:loc;;ccodlolodldllolld00K0K000000&#xA;000000000Ooc::coooc,,.&#39;,;:lx,,...&#39;:;o;l;&#39;&lt;span&gt;‚≠ï&lt;/span&gt;oolccocdoldloO0000KK00000&#xA;00000000kol:clllc;;,.;::;:clllllolxc;.:c&#39;:ocldlccl;clldox000000000000&#xA;000000Odll:cccc;:;,&#39;;cllooodoollcloll;c:.:d:ooo;cl;oloddkO00000000000&#xA;0000OOddOdll;c,;;,,;;:cldodddoxdoodlcc:.,ox&lt;span&gt;‚≠ï&lt;/span&gt;lllocdlodx00O0000000000&#xA;000Oxdl:::ll,:,:;,&#39;;c,:oloddolkxddxolc.&#39;coccocolcccoooc;oxO00KOOOO000&#xA;dc;,&#39;...&#39;;c,,:c:::&#39;c:&#39;;cldoo;:odolxoc:.,o:oldlxol;lddl,.,lkO0KdlcckKO&#xA;&#39;.......,:&#39;&#39;&#39;;cll:cc,,;:l:c,,;:oc;cdc,.;::dldoxd:ldol;,&#39;..,:lo,,,,kOk&#xA;.......&#39;;&#39;.&#39;,:clcll,,;:l:;&#39;..&#39;&#39;c:,;cl&#39;.&#39;;dxoooxlddl;&#39;,&#39;&#39;..,,;&#39;...,ool&#xA;.......,,.&#39;&#39;;;:cld;.;,do:..;:,&#39;:c&#39;,:c&#39;&#39;&#39;;xxdldocol&#39;..&#39;;,.......&#39;,;;,;&#xA;.......&#39;..&#39;&#39;,,coxc&#39;&#39;;:do&#39;.clc:lco&#39;,o;&#39;,;cOxdol:cc:.....&#39;..oxd;&#39;,&#39;.&#39;..&#xA;&#39;.......&#39;&#39;..,:cxl;&#39;;;cx:&#39;&#39;cll:clc&#39;cl&#39;,:l:ko:c..;c:..&#39;;...,KNNl;:;ll:&#39;&#xA;.......&#39;&#39;...;,ooc,,,:od&#39;.&#39;:cccdd,,l&#39;&#39;cl:co;;,..;;&#39;..&#39;,&#39;..;d0O,;;:XXXK&#xA;............&#39;cll;&#39;,,lo&#39;.&#39;.::codl,c..:c;doc.,:.&#39;,....&#39;...&#39;......&#39;l0XKk&#xA;&#39;............c;;,&#39;:lc.&#39;&#39;,.;ccol;:,.:c.:o,;&#39;.;&#39;......,...&#39;,,.&#39;...&#39;.,;;&#xA;.............&#39;,;;,cc..;,&#39;&#39;;:lc&#39;:;..c&#39;.c:;.,......,&#39;..&#39;...&#39;&#39;,:,,;;,...&#xA;..............&#39;,,;:&#39;.&#39;;,&#39;,:c;.;;..&#39;;..,;,.........&#39;&#39;..&#39;...&#39;kko.,,....&#xA;...............;,:&#39;..;&#39;&#39;&#39;;:,..;&#39;&#39;.&#39;&#39;..&#39;&#39;............&#39;...&#39;.lK0c&#39;;;c;&#39;.&#xA;...............,,&#39;...,.&#39;,;&#39;&#39;...&#39;&#39;....,......&#39;............&#39;dOx&#39;,;:dd,&#39;&#xA;..............&#39;,.....&#39;.,;..&#39;..&#39;,..........&#39;..............&#39;;:;&#39;,,ldo.&#39;&#xA;.............&#39;&#39;&#39;.&#39;.....,&#39;..&#39;,&#39;,&#39;..&#39;...&#39;&#39;..&#39;............&#39;.......,dx&#39;.&#39;&#xA;.......................,...&#39;;,&#39;..&#39;.....,.&#39;.............&#39;&#39;.&#39;......&#39;..&#39;&#xA;...........&#39;......&#39;...&#39;,..&#39;&#39;;,&#39;..&#39;.....................&#39;,&#39;;,..&#39;....&#39;.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>