<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-08T01:36:45Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Mazahir26/koduko</title>
    <updated>2022-08-08T01:36:45Z</updated>
    <id>tag:github.com,2022-08-08:/Mazahir26/koduko</id>
    <link href="https://github.com/Mazahir26/koduko" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A habit tracker made using flutter.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kudoku&lt;/h1&gt; &#xA;&lt;p&gt;Yet another Habit tracker made with flutter.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Mazahir26/koduko/master/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Mazahir26/koduko/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Mazahir26/koduko/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Its an open source and free app where you can manage your daily or weekly habits. It uses Material 3 design.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can install the apk found in the release tab.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively you can build the app yourself if u wish to you can follow the guid &lt;a href=&#34;https://raw.githubusercontent.com/Mazahir26/koduko/master/#build&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repo using &lt;code&gt;git clone https://github.com/Mazahir26/koduko.git&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install all the dependencies &lt;code&gt;flutter pub get&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To test it out locally you can check this &lt;a href=&#34;https://docs.flutter.dev/development/tools/vs-code&#34;&gt;guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To Build the apk follow this &lt;a href=&#34;https://docs.flutter.dev/deployment/android&#34;&gt;guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;github_assets/image1.png &#34; alt=&#34;ScreenShort 1&#34; width=&#34;300&#34;&gt;&lt;img src=&#34;github_assets/image2.png &#34; alt=&#34;ScreenShort 2&#34; width=&#34;300&#34;&gt;&lt;img src=&#34;github_assets/image3.png &#34; alt=&#34;ScreenShort 3&#34; width=&#34;300&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Notification Support&lt;/li&gt; &#xA; &lt;li&gt;Material 3 Design&lt;/li&gt; &#xA; &lt;li&gt;No ads&lt;/li&gt; &#xA; &lt;li&gt;insightful stats&lt;/li&gt; &#xA; &lt;li&gt;and much more..&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Found a Bug&lt;/h2&gt; &#xA;&lt;p&gt;The app has only been tested on android.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;if you find any bugs, please raise an issue&lt;/li&gt; &#xA; &lt;li&gt;or, &lt;a href=&#34;http://mazahir26.github.io/&#34;&gt;contact me&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/Mazahir26/koduko/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; file for details&lt;/p&gt; &#xA;&lt;h2&gt;Thank You&lt;/h2&gt; &#xA;&lt;p&gt;Thanks for checking out my project, I would love to hear feedback, you can &lt;a href=&#34;http://mazahir26.github.io/&#34;&gt;contact&lt;/a&gt; me via Mail or Telegram.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/mazahir&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;&amp;quot;Buy Me A Coffee&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>KalleHallden/exer_log</title>
    <updated>2022-08-08T01:36:45Z</updated>
    <id>tag:github.com,2022-08-08:/KalleHallden/exer_log</id>
    <link href="https://github.com/KalleHallden/exer_log" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://github.com/KalleHallden/exer_log/raw/master/assets/img/logo-d.png?raw=true#gh-light-mode-only&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://github.com/KalleHallden/exer_log/raw/master/assets/img/logo-w.png?raw=true#gh-dark-mode-only&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;ExerLog&lt;/h1&gt; &#xA;&lt;p&gt;ExerLog is a simple and easy-to-use exercise journal app developed in conjunction with sports science that focuses on providing you with all the essential data without all the irrelevant information that you don&#39;t need. An app that keeps track of your exercises, body measurements, and offers you access to relevant workout information. The goal is to give you the freedom of a analog exercise journal with the analytical abilities of excel.&lt;/p&gt; &#xA;&lt;p&gt;Create workouts and keep track of your reps, sets, weight, total weight, total reps, total sets, maxes and more. Track important physical measurements including bodyweight, waist size, arm size, and more. Then, visualize all of these measurements in bar charts and graphs that show your advancement over time.&lt;/p&gt; &#xA;&lt;p&gt;Right now the project is in it&#39;s infancy so there are a lot of features left to be added. If you want to follow the full buildout of this project then I (Kalle Hallden) have a YouTube channel where I document the progress every week: &lt;a href=&#34;https://youtube.com/playlist?list=PL5tVJtjoxKzpxnc9ventef-1sgvoR8nqG&#34;&gt;https://youtube.com/playlist?list=PL5tVJtjoxKzpxnc9ventef-1sgvoR8nqG&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Technologies used&lt;/h2&gt; &#xA;&lt;p&gt;This project uses Flutter. The reason I (Kalle) chose Flutter is that I am very comfortable with using the framework and that you only have to write once and can run anywhere.&lt;/p&gt; &#xA;&lt;h2&gt;Current Features&lt;/h2&gt; &#xA;&lt;p&gt;Workout metrics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Name of exercise&lt;/li&gt; &#xA; &lt;li&gt;Reps&lt;/li&gt; &#xA; &lt;li&gt;Sets&lt;/li&gt; &#xA; &lt;li&gt;Weight&lt;/li&gt; &#xA; &lt;li&gt;Rest&lt;/li&gt; &#xA; &lt;li&gt;Total weight/reps/sets per exercise and for the full workout&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Future features&lt;/h2&gt; &#xA;&lt;p&gt;Workout analytics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Charts for strength increases over time&lt;/li&gt; &#xA; &lt;li&gt;Charts for volume (ie total weight and average weight per workout) over time (for easy periodisation)&lt;/li&gt; &#xA; &lt;li&gt;Progressive overload tracking&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Workout Planner:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The ability to set up a workout plan for future workouts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The thinking here is that this can become a way for people to create workouts and share them with each other. Let&#39;s say that a json workout template can be imported in the app so that you can perform that workout. This might be a really good way for trainers to create long term workout plans for their athletes.&lt;/p&gt; &#xA;&lt;p&gt;Body metrics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Body Weight&lt;/li&gt; &#xA; &lt;li&gt;Waist size&lt;/li&gt; &#xA; &lt;li&gt;Arm size&lt;/li&gt; &#xA; &lt;li&gt;Calf size&lt;/li&gt; &#xA; &lt;li&gt;Chest size&lt;/li&gt; &#xA; &lt;li&gt;Wrist size&lt;/li&gt; &#xA; &lt;li&gt;Thigh size&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are always welcome!&lt;/p&gt; &#xA;&lt;p&gt;See &lt;code&gt;contributing.md&lt;/code&gt; for ways to get started.&lt;/p&gt; &#xA;&lt;p&gt;Please adhere to this project&#39;s &lt;code&gt;code of conduct&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/issues/KalleHallden/exer_log&#34; alt=&#34;Issues&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Install the Flutter SDK from the official &lt;a href=&#34;https://docs.flutter.dev/get-started/install&#34;&gt;flutter.dev&lt;/a&gt; website for your operating system.&lt;/p&gt; &#xA;&lt;p&gt;Clone this project&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  git clone https://github.com/KalleHallden/exer_log.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CD into the project&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  cd exer_log/app/exerlog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download dependancies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  flutter pub get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the project&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  flutter run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KalleHallden&#34;&gt;@KalleHallden&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>SimformSolutionsPvtLtd/flutter_showcaseview</title>
    <updated>2022-08-08T01:36:45Z</updated>
    <id>tag:github.com,2022-08-08:/SimformSolutionsPvtLtd/flutter_showcaseview</id>
    <link href="https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter plugin that allows you to showcase your features on iOS and Android. üëåüîùüéâ&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/raw/master/preview/banner.png?raw=true&#34; alt=&#34;Showcaes View - Simform LLC.&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ShowCaseView&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/actions&#34;&gt;&lt;img src=&#34;https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/workflows/Build/badge.svg?branch=master&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/showcaseview&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/showcaseview?label=showcaseview&#34; alt=&#34;showcaseview&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Flutter package allows you to Showcase/Highlight your widgets step by step.&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/simformsolutions/flutter_showcaseview/raw/master/preview/showcaseview.gif&#34; alt=&#34;The example app running in Android&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add dependency to &lt;code&gt;pubspec.yaml&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Get the latest version in the &#39;Installing&#39; tab on &lt;a href=&#34;https://pub.dev/packages/showcaseview&#34;&gt;pub.dev&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;dependencies:&#xA;    showcaseview: &amp;lt;latest-version&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Import the package&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:showcaseview/showcaseview.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Adding a &lt;code&gt;ShowCaseWidget&lt;/code&gt; widget.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ShowCaseWidget(&#xA;  builder: Builder(&#xA;    builder : (context) ()=&amp;gt; Somewidget()&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Adding a &lt;code&gt;Showcase&lt;/code&gt; widget.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GlobalKey _one = GlobalKey();&#xA;GlobalKey _two = GlobalKey();&#xA;GlobalKey _three = GlobalKey();&#xA;&#xA;...&#xA;&#xA;Showcase(&#xA;  key: _one,&#xA;  title: &#39;Menu&#39;,&#xA;  description: &#39;Click here to see menu options&#39;,&#xA;  child: Icon(&#xA;    Icons.menu,&#xA;    color: Colors.black45,&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some more optional parameters&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Showcase(&#xA;  key: _two,&#xA;  title: &#39;Profile&#39;,&#xA;  description: &#39;Click here to go to your Profile&#39;,&#xA;  disableAnimation: true,&#xA;  shapeBorder: CircleBorder(),&#xA;  radius: BorderRadius.all(Radius.circular(40)),&#xA;  showArrow: false,&#xA;  tipBorderRadius: BorderRadius.all(Radius.circular(8)),&#xA;  overlayPadding: EdgeInsets.all(5),&#xA;  slideDuration: Duration(milliseconds: 1500),&#xA;  tooltipColor: Colors.blueGrey,&#xA;  blurValue: 2,&#xA;  child: ...,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Using a &lt;code&gt;Showcase.withWidget&lt;/code&gt; widget.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Showcase.withWidget(&#xA;  key: _three,&#xA;  cHeight: 80,&#xA;  cWidth: 140,&#xA;  shapeBorder: CircleBorder(),&#xA;  container: Column(&#xA;    crossAxisAlignment: CrossAxisAlignment.start,&#xA;    children: &amp;lt;Widget&amp;gt;[&#xA;      ...&#xA;    ],&#xA;  ),&#xA;  child: ...,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Starting the &lt;code&gt;ShowCase&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;someEvent(){&#xA;    ShowCaseWidget.of(context).startShowCase([_one, _two, _three]);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;onFinish method for &lt;code&gt;ShowCase&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ShowCaseWidget(&#xA;  onFinish: () {&#xA;    // Your code goes here&#xA;  },&#xA;  builder: Builder(&#xA;    builder : (context) ()=&amp;gt; Somewidget()&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;Go to next &lt;code&gt;ShowCase&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;someEvent(){&#xA;  ShowCaseWidget.of(context).next();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;Go to previous &lt;code&gt;ShowCase&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;someEvent(){&#xA;  ShowCaseWidget.of(context).previous();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to start the &lt;code&gt;ShowCaseView&lt;/code&gt; as soon as your UI built up then use below code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WidgetsBinding.instance.addPostFrameCallback((_) =&amp;gt;&#xA;  ShowCaseWidget.of(context).startShowCase([_one, _two, _three])&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to disable barrier interaction then set &lt;code&gt;disableBarrierInteraction&lt;/code&gt; parameter to true.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ShowCaseWidget(&#xA;  disableBarrierInteraction: true,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;strong&gt;example&lt;/strong&gt; app in the &lt;a href=&#34;https://raw.githubusercontent.com/SimformSolutionsPvtLtd/flutter_showcaseview/master/example&#34;&gt;example&lt;/a&gt; directory or the &#39;Example&#39; tab on pub.dartlang.org for a more complete example.&lt;/p&gt; &#xA;&lt;h2&gt;Scrolling to active showcase&lt;/h2&gt; &#xA;&lt;p&gt;Scrolling to active showcase feature will not work properly in scroll views that renders widgets on demand(ex, ListView, GridView).&lt;/p&gt; &#xA;&lt;p&gt;In order to scroll to a widget it needs to be attached with widget tree. So, If you are using a scrollview that renders widgets on demand, it is possible that the widget on which showcase is applied is not attached in widget tree. So, flutter won&#39;t be able to scroll to that widget.&lt;/p&gt; &#xA;&lt;p&gt;So, If you want to make a scroll view that contains less number of children widget then prefer to use SingleChildScrollView.&lt;/p&gt; &#xA;&lt;p&gt;If using SingleChildScrollView is not an option, then you can assign a ScrollController to that scrollview and manually scroll to the position where showcase widget gets rendered. You can add that code in onStart method of &lt;code&gt;ShowCaseWidget&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// This controller will be assigned to respected sctollview.&#xA;final _controller = ScrollController();&#xA;&#xA;ShowCaseWidget(&#xA;  onStart: (index, key) {&#xA;    if(index == 0) {&#xA;      WidgetsBinding.instance.addPostFrameCallback((_) {&#xA;       // If showcase widget is at offset 1000 in the listview.&#xA;       // If you don&#39;t know the exact position of the showcase widget,&#xA;       // You can provide nearest possible location.&#xA;       // &#xA;       // In this case providing 990 instead of 1000 will work as well.&#xA;        _controller.jumpTo(1000);&#xA;      });&#xA;    }&#xA;  },&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Enable Auto Scrolling&lt;/h2&gt; &#xA;&lt;p&gt;By default, auto-scrolling behavior is off, you can enable it by setting &lt;code&gt;enableAutoScroll&lt;/code&gt; flag to true in &lt;code&gt;showCaseWidget&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ShowCaseWidget(&#xA;  enableAutoScroll: true,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Main Contributors&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/birjuvachhani&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20423471?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Birju Vachhani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/DevarshRanpara&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/26064415?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Devarsh Ranpara&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/AnkitPanchal10&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/38405884?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ankit Panchal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Kashifalaliwala&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/30998350?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kashifa Laliwala&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/vatsaltanna&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/25323183?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vatsal Tanna&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sanket-simform&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/65167856?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sanket Kachhela&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ParthBaraiya&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/36261739?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Parth Baraiya&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ShwetaChauhan18&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/34509457&#34; width=&#34;80px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shweta Chauhan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/DhavalRKansara&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/44993081?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dhaval Kansara&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;p&gt;We have updated license of flutter_showcaseview from BSD 2-Clause &#34;Simplified&#34; to MIT.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;MIT License&#xA;&#xA;Copyright (c) 2021 Simform Solutions&#xA;&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy&#xA;of this software and associated documentation files (the &#34;Software&#34;), to deal&#xA;in the Software without restriction, including without limitation the rights&#xA;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#xA;copies of the Software, and to permit persons to whom the Software is&#xA;furnished to do so, subject to the following conditions:&#xA;&#xA;The above copyright notice and this permission notice shall be included in all&#xA;copies or substantial portions of the Software.&#xA;&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#xA;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&#xA;SOFTWARE.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>