<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-23T01:37:54Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TheAlgorithms/Dart</title>
    <updated>2022-07-23T01:37:54Z</updated>
    <id>tag:github.com,2022-07-23:/TheAlgorithms/Dart</id>
    <link href="https://github.com/TheAlgorithms/Dart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All Algorithms implemented in Dart&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Algorithms - Dart&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.com/TheAlgorithms/Dart&#34;&gt;&lt;img src=&#34;https://travis-ci.com/TheAlgorithms/Dart.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.me/TheAlgorithms/100&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://gitter.im/TheAlgorithms&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/gitterHQ/gitter.png&#34; alt=&#34;Gitter chat&#34;&gt;&lt;/a&gt; &amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;All algorithms implemented in Dart (for education)&lt;/h3&gt; &#xA;&lt;p&gt;These implementations are for learning purposes. They may be less efficient than the implementations in the Dart standard library.&lt;/p&gt; &#xA;&lt;h2&gt;List of Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://github.com/TheAlgorithms/Dart/raw/master/DIRECTORY.md&#34;&gt;directory&lt;/a&gt; for full list of all algorithms. A few of the algorithms (the most common ones) are explained here.&lt;/p&gt; &#xA;&lt;h2&gt;Search Algorithms&lt;/h2&gt; &#xA;&lt;h3&gt;Linear&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://www.tutorialspoint.com/data_structures_algorithms/images/linear_search.gif&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Linear_search&#34;&gt;Wikipedia&lt;/a&gt;: linear search or sequential search is a method for finding a target value within a list. It sequentially checks each element of the list for the target value until a match is found or until all the elements have been searched. Linear search runs in at the worst linear time and makes at most n comparisons, where n is the length of the list.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(n)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(1)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(n)&lt;/li&gt; &#xA; &lt;li&gt;Worst case space complexity O(1) iterative&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Binary&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/f/f7/Binary_search_into_array.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Binary_search_algorithm&#34;&gt;Wikipedia&lt;/a&gt;: Binary search, also known as half-interval search or logarithmic search, is a search algorithm that finds the position of a target value within a sorted array. It compares the target value to the middle element of the array; if they are unequal, the half in which the target cannot lie is eliminated and the search continues on the remaining half until it is successful.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(log n)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(1)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(log n)&lt;/li&gt; &#xA; &lt;li&gt;Worst case space complexity O(1)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Sort Algorithms&lt;/h2&gt; &#xA;&lt;h3&gt;Bubble&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Bubblesort-edited-color.svg/220px-Bubblesort-edited-color.svg.png&#34; alt=&#34;alt text&#34; title=&#34;Bubble Sort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Bubble_sort&#34;&gt;Wikipedia&lt;/a&gt;: Bubble sort, sometimes referred to as sinking sort, is a simple sorting algorithm that repeatedly steps through the list to be sorted, compares each pair of adjacent items and swaps them if they are in the wrong order. The pass through the list is repeated until no swaps are needed, which indicates that the list is sorted.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(n^2)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(n)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(n^2)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;View the algorithm in &lt;a href=&#34;https://www.toptal.com/developers/sorting-algorithms/bubble-sort&#34;&gt;action&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;Insertion&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/7/7e/Insertionsort-edited.png&#34; alt=&#34;alt text&#34; title=&#34;Insertion Sort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Insertion_sort&#34;&gt;Wikipedia&lt;/a&gt;: Insertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time. It is much less efficient on large lists than more advanced algorithms such as quicksort, heapsort, or merge sort.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(n^2)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(n)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(n^2)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;View the algorithm in &lt;a href=&#34;https://www.toptal.com/developers/sorting-algorithms/insertion-sort&#34;&gt;action&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;Quick&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/6/6a/Sorting_quicksort_anim.gif&#34; alt=&#34;alt text&#34; title=&#34;Quick Sort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Quicksort&#34;&gt;Wikipedia&lt;/a&gt;: Quicksort (sometimes called partition-exchange sort) is an efficient sorting algorithm, serving as a systematic method for placing the elements of an array in order.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(n^2)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(n log n) or O(n) with three-way partition&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(n^2)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;View the algorithm in &lt;a href=&#34;https://www.toptal.com/developers/sorting-algorithms/quick-sort&#34;&gt;action&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;Selection&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/Selection_sort_animation.gif/250px-Selection_sort_animation.gif&#34; alt=&#34;alt text&#34; title=&#34;Selection Sort Sort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Selection_sort&#34;&gt;Wikipedia&lt;/a&gt;: The algorithm divides the input list into two parts: the sublist of items already sorted, which is built up from left to right at the front (left) of the list, and the sublist of items remaining to be sorted that occupy the rest of the list. Initially, the sorted sublist is empty and the unsorted sublist is the entire input list. The algorithm proceeds by finding the smallest (or largest, depending on sorting order) element in the unsorted sublist, exchanging (swapping) it with the leftmost unsorted element (putting it in sorted order), and moving the sublist boundaries one element to the right.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(n^2)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(n^2)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(n^2)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;View the algorithm in &lt;a href=&#34;https://www.toptal.com/developers/sorting-algorithms/selection-sort&#34;&gt;action&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;Merge&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/c/cc/Merge-sort-example-300px.gif&#34; alt=&#34;alt text&#34; title=&#34;Merge Sort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Merge_sort&#34;&gt;Wikipedia&lt;/a&gt;: Merge sort (also commonly spelled mergesort) is a divide and conquer algorithm that was invented by John von Neumann in 1945. The algorithm dirst divides the list into the smallest unit (1 element), then compares each element with the adjacent list to sort and merge the two adjacent lists. Finally all the elements are sorted and merged. It is an efficient, general-purpose, comparison-based sorting algorithm.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(n log n)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(n log n)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(n log n)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;View the algorithm in &lt;a href=&#34;https://www.toptal.com/developers/sorting-algorithms/merge-sort&#34;&gt;action&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;Shell&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/d/d8/Sorting_shellsort_anim.gif&#34; alt=&#34;alt text&#34; title=&#34;Shell Sort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Shellsort&#34;&gt;Wikipedia&lt;/a&gt;: Shellsort is a generalization of insertion sort that allows the exchange of items that are far apart. The idea is to arrange the list of elements so that, starting anywhere, considering every nth element gives a sorted list. Such a list is said to be h-sorted. Equivalently, it can be thought of as h interleaved lists, each individually sorted.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(nlog2 2n)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(n log n)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance depends on gap sequence&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;View the algorithm in &lt;a href=&#34;https://www.toptal.com/developers/sorting-algorithms/shell-sort&#34;&gt;action&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;Time-Complexity Graphs&lt;/h3&gt; &#xA;&lt;p&gt;Comparing the complexity of sorting algorithms (Bubble Sort, Insertion Sort, Selection Sort)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/prateekiiest/Python/raw/master/sorts/sortinggraphs.png&#34;&gt;Complexity Graphs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Community Channel&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re on &lt;a href=&#34;https://gitter.im/TheAlgorithms&#34;&gt;Gitter&lt;/a&gt;! Please join us.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://github.com/TheAlgorithms/Dart/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TheAlgorithms/Dart/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter-webrtc/flutter-webrtc-demo</title>
    <updated>2022-07-23T01:37:54Z</updated>
    <id>tag:github.com,2022-07-23:/flutter-webrtc/flutter-webrtc-demo</id>
    <link href="https://github.com/flutter-webrtc/flutter-webrtc-demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Demo for flutter-webrtc&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flutter-webrtc-demo&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/flutterwebrtc/shared_invite/zt-q83o7y1s-FExGLWEvtkPKM8ku_F8cEQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&amp;amp;logo=slack&amp;amp;colorB=brightgreen&#34; alt=&#34;slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flutter WebRTC plugin Demo&lt;/p&gt; &#xA;&lt;p&gt;Online Demo: &lt;a href=&#34;https://demo.cloudwebrtc.com:8086/&#34;&gt;https://demo.cloudwebrtc.com:8086/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/cloudwebrtc/flutter-webrtc-demo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd flutter-webrtc-demo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter packages get&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter run&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to test &lt;code&gt;P2P Call Sample&lt;/code&gt;, please use the &lt;a href=&#34;https://github.com/cloudwebrtc/flutter-webrtc-server&#34;&gt;webrtc-flutter-server&lt;/a&gt;, and enter your server address into the example app.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;screenshots&lt;/h2&gt; &#xA;&lt;h1&gt;iOS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img width=&#34;180&#34; height=&#34;320&#34; src=&#34;https://raw.githubusercontent.com/cloudwebrtc/flutter-webrtc-demo/master/screenshots/flutter-webrtc-ios-example.png&#34;&gt; &lt;img width=&#34;180&#34; height=&#34;320&#34; src=&#34;https://raw.githubusercontent.com/cloudwebrtc/flutter-webrtc-demo/master/screenshots/ios-01.jpeg&#34;&gt; &lt;img width=&#34;180&#34; height=&#34;320&#34; src=&#34;https://raw.githubusercontent.com/cloudwebrtc/flutter-webrtc-demo/master/screenshots/ios-02.jpeg&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Android&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img width=&#34;180&#34; height=&#34;320&#34; src=&#34;https://raw.githubusercontent.com/cloudwebrtc/flutter-webrtc-demo/master/screenshots/flutter-webrtc-android-example.png&#34;&gt; &lt;img width=&#34;180&#34; height=&#34;320&#34; src=&#34;https://raw.githubusercontent.com/cloudwebrtc/flutter-webrtc-demo/master/screenshots/android-01.png&#34;&gt; &lt;img width=&#34;180&#34; height=&#34;320&#34; src=&#34;https://raw.githubusercontent.com/cloudwebrtc/flutter-webrtc-demo/master/screenshots/android-02.png&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fluttercandies/flutter_wechat_assets_picker</title>
    <updated>2022-07-23T01:37:54Z</updated>
    <id>tag:github.com,2022-07-23:/fluttercandies/flutter_wechat_assets_picker</id>
    <link href="https://github.com/fluttercandies/flutter_wechat_assets_picker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An assets picker in WeChat style, support multi assets picking.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter WeChat Assets Picker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/wechat_assets_picker&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/wechat_assets_picker?logo=dart&amp;amp;label=stable&amp;amp;style=flat-square&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/wechat_assets_picker&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/wechat_assets_picker?color=42a012&amp;amp;include_prereleases&amp;amp;label=dev&amp;amp;logo=dart&amp;amp;style=flat-square&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/actions?query=workflow%3A%22Build+test%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/fluttercandies/flutter_wechat_assets_picker/Build%20test?label=CI&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/fluttercandies/flutter_wechat_assets_picker&#34;&gt;&lt;img src=&#34;https://img.shields.io/codefactor/grade/github/fluttercandies/flutter_wechat_assets_picker?logo=codefactor&amp;amp;logoColor=%23ffffff&amp;amp;style=flat-square&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/fluttercandies/flutter_wechat_assets_picker?style=flat-square&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Solido/awesome-flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&amp;amp;style=flat-square&#34; alt=&#34;Awesome Flutter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/fluttercandies/flutter_wechat_assets_picker?logo=github&amp;amp;style=flat-square&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/fluttercandies/flutter_wechat_assets_picker?logo=github&amp;amp;style=flat-square&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5bcc0gy&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://pub.idqqimg.com/wpa/images/group.png&#34; alt=&#34;FlutterCandies&#34; title=&#34;FlutterCandies&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Language: English | &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/README-ZH.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An &lt;strong&gt;assets&#39; picker&lt;/strong&gt; based on the WeChat&#39;s UI, using &lt;a href=&#34;https://pub.dev/packages/photo_manager&#34;&gt;photo_manager&lt;/a&gt; for asset implementation, &lt;a href=&#34;https://pub.dev/packages/extended_image&#34;&gt;extended_image&lt;/a&gt; for image preview, and &lt;a href=&#34;https://pub.dev/packages/provider&#34;&gt;provider&lt;/a&gt; to help control the state of the picker.&lt;/p&gt; &#xA;&lt;p&gt;To take a photo or a video for assets, please check the detailed usage in the example, and head over to &lt;a href=&#34;https://pub.dev/packages/wechat_camera_picker&#34;&gt;wechat_camera_picker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Current WeChat version that UI based on: &lt;strong&gt;8.x&lt;/strong&gt; UI designs will be updated following the WeChat update in anytime.&lt;/p&gt; &#xA;&lt;h2&gt;Category 🗂&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#migration-guide-&#34;&gt;Migration Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#features-&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#screenshots-&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#preparing-for-use-&#34;&gt;Preparing for use&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#versions-compatibility&#34;&gt;Versions compatibility&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#flutter&#34;&gt;Flutter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#ios&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#macos&#34;&gt;macOS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#usage-&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#simple-usage&#34;&gt;Simple usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#detailed-usage&#34;&gt;Detailed usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#using-custom-delegate&#34;&gt;Using custom delegate&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#display-selected-assets&#34;&gt;Display selected assets&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#register-assets-change-observe-callback&#34;&gt;Register assets change observe callback&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#customize-with-your-own-type-or-ui&#34;&gt;Customize with your own type or UI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#frequently-asked-question-&#34;&gt;Frequently asked question&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#execution-failed-for-task-photo_managercompiledebugkotlin&#34;&gt;Execution failed for task &#39;:photo_manager:compileDebugKotlin&#39;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#how-can-i-get-path-from-the-assetentity-to-integrate-with-file-object-upload-or-edit&#34;&gt;How can I get path from the &lt;code&gt;AssetEntity&lt;/code&gt; to integrate with &lt;code&gt;File&lt;/code&gt; object, upload or edit?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#create-assetentity-from-file-or-uint8list-rawdata&#34;&gt;Create &lt;code&gt;AssetEntity&lt;/code&gt; from &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;Uint8List&lt;/code&gt; (rawData)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#glide-warning-failed-to-find-generatedappglidemodule&#34;&gt;Console warning &#39;Failed to find GeneratedAppGlideModule&#39;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Migration Guide ♻️&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/raw/main/guides/migration_guide.md&#34;&gt;Migration Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features ✨&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;♻️ Fully implementable with delegates override&lt;/li&gt; &#xA; &lt;li&gt;💚 99% similar to WeChat style&lt;/li&gt; &#xA; &lt;li&gt;⚡️ Adjustable performance according to parameters&lt;/li&gt; &#xA; &lt;li&gt;📷 Image asset support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🔬 HEIF Image type support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🎥 Video asset support&lt;/li&gt; &#xA; &lt;li&gt;🎶 Audio asset support&lt;/li&gt; &#xA; &lt;li&gt;1️⃣ Single asset mode&lt;/li&gt; &#xA; &lt;li&gt;💱 i18n support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;⏪ RTL language support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;➕ Special item builder (prepend/append) support&lt;/li&gt; &#xA; &lt;li&gt;🗂 Custom sort path delegate support&lt;/li&gt; &#xA; &lt;li&gt;📝 Custom text delegate support&lt;/li&gt; &#xA; &lt;li&gt;⏳ Custom filter options support ( &lt;code&gt;photo_manager&lt;/code&gt; )&lt;/li&gt; &#xA; &lt;li&gt;🎏 Fully customizable theme&lt;/li&gt; &#xA; &lt;li&gt;💻 macOS support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots 📸&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://pic.alexv525.com/2021-07-05-picker_1.jpg&#34; alt=&#34;1&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://pic.alexv525.com/2021-07-05-picker_2.jpg&#34; alt=&#34;2&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://pic.alexv525.com/2021-07-05-picker_3.jpg&#34; alt=&#34;3&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://pic.alexv525.com/2021-07-05-picker_4.jpg&#34; alt=&#34;4&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://pic.alexv525.com/2021-07-05-picker_5.jpg&#34; alt=&#34;5&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://pic.alexv525.com/2021-07-05-picker_6.jpg&#34; alt=&#34;6&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://pic.alexv525.com/2021-07-06-picker_7.jpg&#34; alt=&#34;7&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://pic.alexv525.com/2021-07-05-picker_8.jpg&#34; alt=&#34;8&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://pic.alexv525.com/2021-07-05-picker_9-1.jpg&#34; alt=&#34;9&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://pic.alexv525.com/2021-07-05-picker_10.png&#34; alt=&#34;10&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://pic.alexv525.com/2021-07-05-picker_11.png&#34; alt=&#34;10&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://pic.alexv525.com/2021-07-05-picker_12.png&#34; alt=&#34;12&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;READ THIS FIRST ‼️&lt;/h2&gt; &#xA;&lt;p&gt;The package works closely with the &lt;a href=&#34;https://pub.dev/packages/photo_manager&#34;&gt;photo_manager&lt;/a&gt; plugin, and most behaviors are controlled by the plugin. When you have questions about related APIs and behaviors, check &lt;a href=&#34;https://pub.dev/documentation/photo_manager/latest/&#34;&gt;photo_manager&#39;s API docs&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Most usages are detailed covered by the example. Please walk through the example carefully before you have any questions.&lt;/p&gt; &#xA;&lt;h2&gt;Preparing for use 🍭&lt;/h2&gt; &#xA;&lt;h3&gt;Versions compatibility&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;2.8.0&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;2.10.0&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;3.0.0&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.3.0+&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.0.0+&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6.3.0+&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you got a &lt;code&gt;resolve conflict&lt;/code&gt; error when running &lt;code&gt;flutter pub get&lt;/code&gt;, please use &lt;code&gt;dependency_overrides&lt;/code&gt; to fix it.&lt;/p&gt; &#xA;&lt;h3&gt;Flutter&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;flutter pub add wechat_assets_picker&lt;/code&gt;, or add &lt;code&gt;wechat_assets_picker&lt;/code&gt; to &lt;code&gt;pubspec.yaml&lt;/code&gt; dependencies manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  wechat_assets_picker: ^latest_version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The latest &lt;strong&gt;stable&lt;/strong&gt; version is: &lt;a href=&#34;https://pub.dev/packages/wechat_assets_picker&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/wechat_assets_picker?logo=dart&amp;amp;label=stable&amp;amp;style=flat-square&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The latest &lt;strong&gt;dev&lt;/strong&gt; version is: &lt;a href=&#34;https://pub.dev/packages/wechat_assets_picker&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/wechat_assets_picker?color=42a012&amp;amp;include_prereleases&amp;amp;label=dev&amp;amp;logo=dart&amp;amp;style=flat-square&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then import the package in your code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:wechat_assets_picker/wechat_assets_picker.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;Required permissions: &lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt; (declared already). Optional permissions: &lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt;, &lt;code&gt;ACCESS_MEDIA_LOCATION&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re targeting Android SDK 29+, you must declare &lt;code&gt;requestLegacyExternalStorage&lt;/code&gt; at the &lt;code&gt;&amp;lt;application&amp;gt;&lt;/code&gt; node of &lt;code&gt;AndroidManifest.xml&lt;/code&gt;. See the example for the detailed usage.&lt;/p&gt; &#xA;&lt;p&gt;If you found some warning logs with &lt;code&gt;Glide&lt;/code&gt; appearing, then the main project needs an implementation of &lt;code&gt;AppGlideModule&lt;/code&gt;. See &lt;a href=&#34;https://sjudd.github.io/glide/doc/generatedapi.html&#34;&gt;Generated API docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Platform version has to be at least &lt;em&gt;9.0&lt;/em&gt;. Modify &lt;code&gt;ios/Podfile&lt;/code&gt; and update accordingly.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;platform :ios, &#39;9.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add the following content to &lt;code&gt;info.plist&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-plist&#34;&gt;&amp;lt;key&amp;gt;NSAppTransportSecurity&amp;lt;/key&amp;gt;&#xA;&amp;lt;dict&amp;gt;&#xA;&#x9;&amp;lt;key&amp;gt;NSAllowsArbitraryLoads&amp;lt;/key&amp;gt;&#xA;&#x9;&amp;lt;true/&amp;gt;&#xA;&amp;lt;/dict&amp;gt;&#xA;&amp;lt;key&amp;gt;NSPhotoLibraryUsageDescription&amp;lt;/key&amp;gt;&#xA;&amp;lt;string&amp;gt;Replace with your permission description.&amp;lt;/string&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Platform version has to be at least &lt;em&gt;10.15&lt;/em&gt;. Modify &lt;code&gt;macos/Podfile&lt;/code&gt; and update accordingly.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;platform :osx, &#39;10.15&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Set the minimum deployment target to &lt;em&gt;10.15&lt;/em&gt;. Use XCode to open &lt;code&gt;macos/Runner.xcworkspace&lt;/code&gt; .&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://tva1.sinaimg.cn/large/007S8ZIlgy1ghw67v4yk4j30qy0b50u0.jpg&#34; alt=&#34;step 1&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://tva1.sinaimg.cn/large/007S8ZIlgy1ghw67vd3f2j30jv04zgm5.jpg&#34; alt=&#34;step 2&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow the iOS instructions and modify &lt;code&gt;info.plist&lt;/code&gt; accordingly.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage 📖&lt;/h2&gt; &#xA;&lt;h3&gt;Simple usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final List&amp;lt;AssetEntity&amp;gt;? result = await AssetPicker.pickAssets(context);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use &lt;code&gt;AssetPickerConfig&lt;/code&gt; for more picking behaviors.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final List&amp;lt;AssetEntity&amp;gt;? result = await AssetPicker.pickAssets(&#xA;  context,&#xA;  pickerConfig: const AssetPickerConfig(),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fields in &lt;code&gt;AssetPickerConfig&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;selectedAssets&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;List&amp;lt;AssetEntity&amp;gt;?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Selected assets. Prevent duplicate selection.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;maxAssets&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maximum asset that the picker can pick.&lt;/td&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pageSize&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;int?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number of assets per page. &lt;strong&gt;Must be a multiple of &lt;code&gt;gridCount&lt;/code&gt;&lt;/strong&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;80&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gridThumbnailSize&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ThumbnailSize&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Thumbnail size for the grid&#39;s item.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ThumbnailSize.square(200)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pathThumbnailSize&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ThumbnailSize&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Thumbnail size for the path selector.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ThumbnailSize.square(80)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;previewThumbnailSize&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ThumbnailSize?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Preview thumbnail size in the viewer.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;requestType&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RequestType&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Request type for picker.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RequestType.common&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;specialPickerType&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;SpecialPickerType?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provides the option to integrate a custom picker type.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;keepScrollOffset&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether the picker should save the scroll offset between pushes and pops.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sortPathDelegate&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;SortPathDelegate&amp;lt;AssetPathEntity&amp;gt;?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path entities sort delegate for the picker, sort paths as you want.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;CommonSortPathDelegate&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sortPathsByModifiedDate&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to allow sort delegates to sort paths with &lt;code&gt;FilterOptionGroup.containsPathModified&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;filterOptions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;FilterOptionGroup?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allow users to customize assets filter options.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gridCount&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Grid count in picker.&lt;/td&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;themeColor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Color?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Main theme color for the picker.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Color(0xff00bc56)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pickerTheme&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ThemeData?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Theme data provider for the picker and the viewer.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;textDelegate&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;AssetPickerTextDelegate?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Text delegate for the picker, for customize the texts.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;AssetPickerTextDelegate()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;specialItemPosition&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;SpecialItemPosition&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allow users set a special item in the picker with several positions.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;SpecialItemPosition.none&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;specialItemBuilder&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;SpecialItemBuilder?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The widget builder for the special item.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;loadingIndicatorBuilder&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IndicatorBuilder?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Indicates the loading status for the builder.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;selectPredicate&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;AssetSelectPredicate&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Predicate whether an asset can be selected or unselected.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;shouldRevertGrid&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bool?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether the assets grid should revert.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;limitedPermissionOverlayPredicate&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;LimitedPermissionOverlayPredicate?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Predicate whether the limited permission overlay should be displayed.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pathNameBuilder&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;PathNameBuilder&amp;lt;AssetPathEntity&amp;gt;?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build customized path name.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Detailed usage&lt;/h3&gt; &#xA;&lt;p&gt;TL;DR, we&#39;ve put multiple common usage with the packages in the &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/example&#34;&gt;example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using custom delegate&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;keepScrollOffset&lt;/code&gt; feature only with the &lt;code&gt;pickAssetsWithDelegate&lt;/code&gt; method. See the &lt;code&gt;Keep scroll offset&lt;/code&gt; pick method in the example for how to implement it.&lt;/p&gt; &#xA;&lt;p&gt;For more details about custom delegates, head over to &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/example/lib/customs&#34;&gt;&lt;code&gt;example/lib/customs&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Regular picking&lt;/h4&gt; &#xA;&lt;p&gt;You can both found &lt;code&gt;List&amp;lt;PickMethod&amp;gt; pickMethods&lt;/code&gt; in &lt;code&gt;example/lib/pages/multi_assets_page.dart&lt;/code&gt; and &lt;code&gt;example/lib/pages/single_assets_page.dart&lt;/code&gt;, which provide methods in multiple picking and single picking mode. Assets will be stored temporary and displayed at the below of the page.&lt;/p&gt; &#xA;&lt;h5&gt;Multiple assets picking&lt;/h5&gt; &#xA;&lt;p&gt;The maximum assets limit is &lt;code&gt;9&lt;/code&gt; in the multiple picking page, and you can modify it as you wish.&lt;/p&gt; &#xA;&lt;p&gt;Some methods can only work with multiple mode, such as &#34;WeChat Moment&#34;.&lt;/p&gt; &#xA;&lt;h5&gt;Single asset picking&lt;/h5&gt; &#xA;&lt;p&gt;Only one and maximum to one asset can be picked at once.&lt;/p&gt; &#xA;&lt;h4&gt;Custom pickers&lt;/h4&gt; &#xA;&lt;p&gt;You can try custom pickers with the &#34;Custom&#34; page. We&#39;ve defined a picker that integrates with &lt;code&gt;Directory&lt;/code&gt; and &lt;code&gt;File&lt;/code&gt; (completely out of the &lt;code&gt;photo_manager&lt;/code&gt; scope), and a picker with multiple tabs switching. You can submit PRs to create your own implementation if you found your implementation might be useful for others. See &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/raw/main/example/lib/customs/CONTRIBUTING.md&#34;&gt;Contribute custom implementations&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Display selected assets&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;AssetImage&lt;/code&gt; and &lt;code&gt;AssetEntityImageProvider&lt;/code&gt; can display the thumb image of &lt;em&gt;images &amp;amp; videos&lt;/em&gt;, and the original data of &lt;em&gt;image&lt;/em&gt;. Use it like a common &lt;code&gt;Image&lt;/code&gt; and &lt;code&gt;ImageProvider&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;/// AssetEntityImage&#xA;AssetEntityImage(asset, isOriginal: false);&#xA;&#xA;/// AssetEntityImageProvider&#xA;Image(image: AssetEntityImageProvider(asset, isOriginal: false));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Register assets change observe callback&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;/// Register callback.&#xA;AssetPicker.registerObserve();&#xA;&#xA;/// Unregister callback.&#xA;AssetPicker.unregisterObserve();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customize with your own type or UI&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;AssetPickerBuilderDelegate&lt;/code&gt;, &lt;code&gt;AssetPickerViewerBuilderDelegate&lt;/code&gt;, &lt;code&gt;AssetPickerProvider&lt;/code&gt; and &lt;code&gt;AssetPickerViewerProvider&lt;/code&gt; are all exposed and overridable. You can extend them and use your own type with generic type &lt;code&gt;&amp;lt;A: Asset, P: Path&amp;gt;&lt;/code&gt;, then implement abstract methods. See the &lt;code&gt;Custom&lt;/code&gt; page in the example which has an implementation based on &lt;code&gt;&amp;lt;File, Directory&amp;gt;&lt;/code&gt; types.&lt;/p&gt; &#xA;&lt;h2&gt;Frequently asked question ❔&lt;/h2&gt; &#xA;&lt;h3&gt;Execution failed for task &#39;:photo_manager:compileDebugKotlin&#39;&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/CaiJingLong/flutter_photo_manager/issues/561&#34;&gt;photo_manager#561&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;How can I get path from the &lt;code&gt;AssetEntity&lt;/code&gt; to integrate with &lt;code&gt;File&lt;/code&gt; object, upload or edit?&lt;/h3&gt; &#xA;&lt;p&gt;You don&#39;t need it (might be).&lt;/p&gt; &#xA;&lt;p&gt;You can always request the &lt;code&gt;File&lt;/code&gt; object with &lt;code&gt;entity.file&lt;/code&gt; or &lt;code&gt;entity.originFile&lt;/code&gt;, and &lt;code&gt;entity.originBytes&lt;/code&gt; for &lt;code&gt;Uint8List&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you still need path after requested the &lt;code&gt;File&lt;/code&gt;, get it through &lt;code&gt;file.path&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final File file = await entity.file; // Thumbnails or edited files.&#xA;final File originFile = await entity.originFile; // Original files.&#xA;final String path = file.path;&#xA;final String originPath = originFile.path;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create &lt;code&gt;AssetEntity&lt;/code&gt; from &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;Uint8List&lt;/code&gt; (rawData)&lt;/h3&gt; &#xA;&lt;p&gt;In order to combine this package with camera shooting or something related, there&#39;s a solution about how to create an &lt;code&gt;AssetEntity&lt;/code&gt; with &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;Uint8List&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final File file = your_file; // Your `File` object&#xA;final String path = file.path;&#xA;final AssetEntity fileEntity = await PhotoManager.editor.saveImageWithPath(&#xA;  path,&#xA;  title: basename(path),&#xA;); // Saved in the device then create an AssetEntity&#xA;&#xA;final Uint8List data = your_data; // Your `Uint8List` object&#xA;final AssetEntity imageEntity = await PhotoManager.editor.saveImage(&#xA;  file.path,&#xA;  title: &#39;title_with_extension.jpg&#39;,&#xA;); // Saved in the device then create an AssetEntity&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notice: If you don&#39;t want to keep the file in your device, use &lt;code&gt;File&lt;/code&gt; for operations as much as possible.&lt;/strong&gt; A deletion operation might call system popups with some OS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final List&amp;lt;String&amp;gt; result = await PhotoManager.editor.deleteWithIds(&#xA;  &amp;lt;String&amp;gt;[entity.id],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ref: &lt;a href=&#34;https://github.com/CaiJingLong/flutter_photo_manager#insert-new-item&#34;&gt;photo_manager#insert-new-item&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Glide warning &#39;Failed to find GeneratedAppGlideModule&#39;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;W/Glide   (21133): Failed to find GeneratedAppGlideModule. You should include an annotationProcessor compile dependency on com.github.bumptech.glide:compiler in you application ana a @GlideModule annotated AppGlideModule implementation or LibraryGlideModules will be silently ignored.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Glide&lt;/code&gt; needs annotation to keep singleton, prevent conflict between instances and versions, so while the photo manager uses &lt;code&gt;Glide&lt;/code&gt; to implement image features, the project which import this should define its own &lt;code&gt;AppGlideModule&lt;/code&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#android&#34;&gt;Android&lt;/a&gt; section for implementation.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Many thanks to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://blog.alexv525.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/15884415?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Li&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=AlexV525&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#design-AlexV525&#34; title=&#34;Design&#34;&gt;🎨&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=AlexV525&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#example-AlexV525&#34; title=&#34;Examples&#34;&gt;💡&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#ideas-AlexV525&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#maintenance-AlexV525&#34; title=&#34;Maintenance&#34;&gt;🚧&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#question-AlexV525&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/pulls?q=is%3Apr+reviewed-by%3AAlexV525&#34; title=&#34;Reviewed Pull Requests&#34;&gt;👀&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.kikt.top&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/14145407?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Caijinglong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#example-CaiJingLong&#34; title=&#34;Examples&#34;&gt;💡&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#ideas-CaiJingLong&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/SchnMar&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/12902321?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marcel Schneider&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3ASchnMar&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=SchnMar&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#ideas-SchnMar&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ganlanshu0211&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/9670379?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ganlanshu0211&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3Aganlanshu0211&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#ideas-ganlanshu0211&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/JasonHezz&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/15358765?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JasonHezz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3AJasonHezz&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=JasonHezz&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/yanivshaked&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/13107481?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yaniv Shaked&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#translation-yanivshaked&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=yanivshaked&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3Ayanivshaked&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#maintenance-yanivshaked&#34; title=&#34;Maintenance&#34;&gt;🚧&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/avi-yadav&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7314430?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;avi-yadav&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=avi-yadav&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Letalus&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/41230136?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Letalus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3ALetalus&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#translation-Letalus&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/greymag&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1502131?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;greymag&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#translation-greymag&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/NaikSoftware&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4218994?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nickolay Savchenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#design-NaikSoftware&#34; title=&#34;Design&#34;&gt;🎨&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/KosukeSaigusa&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/13669049?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kosuke Saigusa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#translation-KosukeSaigusa&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Jon-Millent&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/17584565?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;三闻书店&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=Jon-Millent&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/didiosn&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15895051?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;DidiosFaust&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#translation-didiosn&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ConanXie&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10040846?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;xiejie&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3AConanXie&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/maxzod&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/47630729?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ahmed Masoud &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#translation-maxzod&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/luomo-pro&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/41097395?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;luomo-pro&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#a11y-luomo-pro&#34; title=&#34;Accessibility&#34;&gt;️️️️♿️&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3Aluomo-pro&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/paigupai&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/44311361?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;paigupai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercandies/flutter_wechat_assets_picker/main/#translation-paigupai&#34; title=&#34;Translation&#34;&gt;🌍&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://taqi.me&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/30410316?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Muhammad Taqi Abdul Aziz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=taqiabdulaziz&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcomed!!&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Every aspect of IntelliJ IDEA has been designed to maximize developer productivity. Together, intelligent coding assistance and ergonomic design make development not only productive but also enjoyable.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://www.jetbrains.com/?from=fluttercandies&#34;&gt;JetBrains&lt;/a&gt; for allocating free open-source licenses for IDEs such as &lt;a href=&#34;https://www.jetbrains.com/idea/?from=fluttercandies&#34;&gt;IntelliJ IDEA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=fluttercandies&#34;&gt;&lt;img src=&#34;https://github.com/fluttercandies/flutter_wechat_assets_picker/raw/main/.github/jetbrains-variant.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>