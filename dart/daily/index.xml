<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-16T01:32:01Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sun-jiao/geoxml</title>
    <updated>2023-05-16T01:32:01Z</updated>
    <id>tag:github.com,2023-05-16:/sun-jiao/geoxml</id>
    <link href="https://github.com/sun-jiao/geoxml" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Dart library for loading, manipulating, and saving GPS data in XML format, including GPX and KML.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;geoxml&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/geoxml&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/geoxml.svg?sanitize=true&#34; alt=&#34;Pub Package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/sun-jiao/geoxml?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/sun-jiao/geoxml/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sun-jiao/geoxml/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/sun-jiao/geoxml.svg?branch=master&#34; alt=&#34;GitHub Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sun-jiao/geoxml/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/sun-jiao/geoxml.svg?branch=master&#34; alt=&#34;GitHub Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sun-jiao/geoxml/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/sun-jiao/geoxml.svg?branch=master&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/sun-jiao/geoxml/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;GitHub License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Dart library for loading, manipulating, and saving GPS data in XML format, including GPX and KML.&lt;/p&gt; &#xA;&lt;p&gt;GPX is a light-weight XML data format for the interchange of GPS data - waypoints, routes, and tracks. KML is a XML data format used to display geographic data in an Earth browser such as Google Earth.&lt;/p&gt; &#xA;&lt;p&gt;The GPX document: &lt;a href=&#34;https://www.topografix.com/gpx.asp&#34;&gt;https://www.topografix.com/gpx.asp&lt;/a&gt;. And for KML, see &lt;a href=&#34;https://developers.google.com/kml/&#34;&gt;https://developers.google.com/kml/&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;The project is originally authored by @kb0 with others, thanks for their works.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;In your dart/flutter project add the dependency:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; dependencies:&#xA;   ...&#xA;   geoxml: ^2.5.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reading GPX&lt;/h3&gt; &#xA;&lt;p&gt;To read GPX input use the GpxReader object and function &lt;code&gt;GeoXml.fromGpxString(String input)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:geoxml/geoxml.dart&#39;;&#xA;&#xA;main() async {&#xA;  // create gpx from xml string&#xA;  var xmlGpx = await GeoXml.fromGpxString(&#39;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&amp;gt;&#39;&#xA;      &#39;&amp;lt;gpx version=&#34;1.1&#34; creator=&#34;dart-gpx library&#34;&amp;gt;&#39;&#xA;      &#39;&amp;lt;wpt lat=&#34;-25.7996&#34; lon=&#34;-62.8666&#34;&amp;gt;&amp;lt;ele&amp;gt;10.0&amp;lt;/ele&amp;gt;&amp;lt;name&amp;gt;Monte Quemado&amp;lt;/name&amp;gt;&amp;lt;desc&amp;gt;Argentina&amp;lt;/desc&amp;gt;&amp;lt;/wpt&amp;gt;&#39;&#xA;      &#39;&amp;lt;/gpx&amp;gt;&#39;);&#xA;&#xA;  print(xmlGpx);&#xA;  print(xmlGpx.wpts);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To read GPX from a &lt;code&gt;Stream&amp;lt;String&amp;gt;&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:geoxml/geoxml.dart&#39;;&#xA;&#xA;main() async {&#xA;  // create gpx from xml string stream&#xA;  final stream = File(&#39;test/assets/wpt.gpx&#39;).openRead()&#xA;      .transform(utf8.decoder);&#xA;  final xmlGpx = await GeoXml.fromGpxStream(stream);&#xA;&#xA;  print(xmlGpx);&#xA;  print(xmlGpx.wpts);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Writing GPX&lt;/h3&gt; &#xA;&lt;p&gt;To write object to GPX use the method &lt;code&gt;asGpxString(Gpx gpx, {bool pretty = false})&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:geoxml/geoxml.dart&#39;;&#xA;&#xA;main() {&#xA;  // create gpx object&#xA;  var gpx = Gpx();&#xA;  gpx.creator = &#34;dart-gpx library&#34;;&#xA;  gpx.wpts = [&#xA;    Wpt(lat: 36.62, lon: 101.77, ele: 10.0, name: &#39;Xining&#39;, desc: &#39;China&#39;),&#xA;  ];&#xA;&#xA;  // generate xml string&#xA;  var gpxString = gpx.asGpxString(pretty: true);&#xA;  print(gpxString);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reading KML&lt;/h3&gt; &#xA;&lt;p&gt;To read KML input use the KmlReader object and function &lt;code&gt;GeoXml.fromKmlString(String input)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:geoxml/geoxml.dart&#39;;&#xA;&#xA;main() async {&#xA;  // create gpx from xml string&#xA;  var xmlKml = await GeoXml.fromKmlString(&#39;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&amp;gt; &#39;&#xA;      &#39;&amp;lt;kml xmlns=&#34;http://www.opengis.net/kml/2.2&#34;&amp;gt;&amp;lt;Document&amp;gt;&amp;lt;Placemark&amp;gt;&amp;lt;name&amp;gt;Monte Quemado&amp;lt;/name&amp;gt;&#39;&#xA;      &#39;&amp;lt;description&amp;gt;Argentina&amp;lt;/description&amp;gt; &amp;lt;ExtendedData/&amp;gt;&#39;&#xA;      &#39;&amp;lt;Point&amp;gt;&amp;lt;altitudeMode&amp;gt;absolute&amp;lt;/altitudeMode&amp;gt;&#39;&#xA;      &#39;&amp;lt;coordinates&amp;gt;-62.8666,-25.7996,10.0&amp;lt;/coordinates&amp;gt;&amp;lt;/Point&amp;gt;&amp;lt;/Placemark&amp;gt;&#39;&#xA;      &#39;&amp;lt;/Document&amp;gt;&amp;lt;/kml&amp;gt;&#39;);&#xA;&#xA;  print(xmlKml);&#xA;  print(xmlKml.wpts);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To read KML from a &lt;code&gt;Stream&amp;lt;String&amp;gt;&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:geoxml/geoxml.dart&#39;;&#xA;&#xA;main() async {&#xA;  // create gpx from xml string stream&#xA;  final stream = File(&#39;test/assets/wpt.kml&#39;).openRead()&#xA;      .transform(utf8.decoder);&#xA;  final kml = await GeoXml.fromKmlStream(stream);&#xA;&#xA;  print(xmlGpx);&#xA;  print(xmlGpx.wpts);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Writing KML&lt;/h3&gt; &#xA;&lt;p&gt;To export object to KML use the method &lt;code&gt;asKmlString({bool pretty = false})&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:geoxml/geoxml.dart&#39;;&#xA;&#xA;main() {&#xA;  // create gpx object&#xA;  var geoXml = GeoXml();&#xA;  geoXml.creator = &#34;dart geoxml library&#34;;&#xA;  geoXml.wpts = [&#xA;    Wpt(lat: 36.62, lon: 101.77, ele: 10.0, name: &#39;Xining&#39;, desc: &#39;China&#39;),&#xA;  ];&#xA;&#xA;  // generate xml string&#xA;  var kmlString = geoXml.asKmlString(pretty: true);&#xA;  print(kmlString);&#xA;&#xA;  // generate xml string with altitude mode - clampToGround&#xA;  var kmlString = KmlWriter(altitudeMode: AltitudeMode.clampToGround)&#xA;      .asString(gpx, pretty: true);&#xA;  print(kmlString);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;This is just an initial version of the package. There are still some limitations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No support for GPX 1.0.&lt;/li&gt; &#xA; &lt;li&gt;Doesn&#39;t validate schema declarations.&lt;/li&gt; &#xA; &lt;li&gt;Only some common KML elements are supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features and bugs&lt;/h2&gt; &#xA;&lt;p&gt;Please file feature requests and bugs at the &lt;a href=&#34;https://github.com/sun-jiao/geoxml/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;The Apache 2.0 License, see &lt;a href=&#34;https://github.com/sun-jiao/geoxml/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Xmarmalade/alisthelper</title>
    <updated>2023-05-16T01:32:01Z</updated>
    <id>tag:github.com,2023-05-16:/Xmarmalade/alisthelper</id>
    <link href="https://github.com/Xmarmalade/alisthelper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Alist Helper is a software application developed using Flutter, designed to simplify the use of the desktop version of alist. It can manage alist, allowing you to easily start and stop the alist program.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;alisthelper&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/Xmarmalade/alisthelper/assets/16839488/2067509c-756e-48cd-8f20-5ea961f46ef7&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/Xmarmalade/alisthelper/master/README_zh-Hans.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Xmarmalade/alisthelper/master/CODE_OF_CONDUCT.md&#34;&gt;CODE_OF_CONDUCT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/language-dart-blue.svg?style=for-the-badge&amp;amp;color=00ACC1&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/flutter-00B0FF?style=for-the-badge&amp;amp;logo=flutter&#34; alt=&#34;Downloads&#34;&gt; &lt;a href=&#34;https://github.com/Xmarmalade/alisthelper/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Xmarmalade/alisthelper/total?style=for-the-badge&amp;amp;color=FF2196&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Xmarmalade/alisthelper/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Xmarmalade/alisthelper?include_prereleases&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub release (latest by date including pre-releases)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Xmarmalade/alisthelper/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/Xmarmalade/alisthelper?style=for-the-badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/Xmarmalade/alisthelper?style=for-the-badge&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/Xmarmalade/alisthelper?style=for-the-badge&amp;amp;color=9C27B0&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alist Helper is a software application developed using Flutter, designed to simplify the use of the desktop version of alist. It can manage alist, allowing you to easily start and stop the alist program.&lt;/p&gt; &#xA;&lt;h3&gt;Screenshots&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16839488/235718140-0572c7ae-b3d5-46a8-b092-65a3dff7d92f.png&#34; alt=&#34;image&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16839488/235718717-e7fae230-284e-4ad8-9e8e-5f9a7d6a22dd.png&#34; alt=&#34;image&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16839488/236637250-ec2b437f-0dcb-4c4e-b284-4db44dd06e19.png&#34; alt=&#34;image&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16839488/236637200-5b9f2383-b29e-434d-a8e6-41187e00eb02.png&#34; alt=&#34;image&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Alist Helper includes several useful features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic launching of alist&lt;/li&gt; &#xA; &lt;li&gt;Minimizing to the system tray&lt;/li&gt; &#xA; &lt;li&gt;Automatic startup on boot, with the option for silent startup&lt;/li&gt; &#xA; &lt;li&gt;Quick access to alist version and administrator information&lt;/li&gt; &#xA; &lt;li&gt;Adjustable alist startup parameters. You can customize the startup parameters to meet your specific needs and preferences.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Free. No tracking. No ads.&lt;/p&gt; &#xA;&lt;p&gt;Currently, this app is available on Windows. Adaptation plans for more platforms are in progress.&lt;/p&gt; &#xA;&lt;p&gt;Please note that this program does not include the binary files for alist. You will need to download them manually.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;alist&lt;/th&gt; &#xA;   &lt;th&gt;alisthelper&lt;/th&gt; &#xA;   &lt;th&gt;alist desktop&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Price&lt;/td&gt; &#xA;   &lt;td&gt;🆓 Free&lt;/td&gt; &#xA;   &lt;td&gt;🆓 Free&lt;/td&gt; &#xA;   &lt;td&gt;💰8$/50￥&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Startup at boot&lt;/td&gt; &#xA;   &lt;td&gt;🛠️ Needs manual configuration&lt;/td&gt; &#xA;   &lt;td&gt;✅ Supported&lt;/td&gt; &#xA;   &lt;td&gt;✅ Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Silent startup&lt;/td&gt; &#xA;   &lt;td&gt;❌ Not supported&lt;/td&gt; &#xA;   &lt;td&gt;✅ Supported&lt;/td&gt; &#xA;   &lt;td&gt;✅ Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Accompanied startup&lt;/td&gt; &#xA;   &lt;td&gt;❌ Not supported&lt;/td&gt; &#xA;   &lt;td&gt;✅ Supported&lt;/td&gt; &#xA;   &lt;td&gt;❌ Not supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GUI&lt;/td&gt; &#xA;   &lt;td&gt;❌ Not supported&lt;/td&gt; &#xA;   &lt;td&gt;✅ Supported&lt;/td&gt; &#xA;   &lt;td&gt;✅ Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;System tray&lt;/td&gt; &#xA;   &lt;td&gt;❌ Not supported&lt;/td&gt; &#xA;   &lt;td&gt;✅ Supported&lt;/td&gt; &#xA;   &lt;td&gt;✅ Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Startup parameters&lt;/td&gt; &#xA;   &lt;td&gt;🛠️ Needs manual configuration&lt;/td&gt; &#xA;   &lt;td&gt;✅ Supported&lt;/td&gt; &#xA;   &lt;td&gt;❌ Not supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Http proxy&lt;/td&gt; &#xA;   &lt;td&gt;🛠️ Needs manual configuration&lt;/td&gt; &#xA;   &lt;td&gt;✅ Supported&lt;/td&gt; &#xA;   &lt;td&gt;❌ Not supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>AppFlowy-IO/appflowy-editor</title>
    <updated>2023-05-16T01:32:01Z</updated>
    <id>tag:github.com,2023-05-16:/AppFlowy-IO/appflowy-editor</id>
    <link href="https://github.com/AppFlowy-IO/appflowy-editor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A highly customizable rich-text editor for Flutter. The AppFlowy Editor project for AppFlowy and beyond.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;&lt;b&gt;AppFlowy Editor&lt;/b&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;A highly customizable rich-text editor for Flutter&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/ZCCYN4Anzq&#34;&gt;&lt;b&gt;Discord&lt;/b&gt;&lt;/a&gt; • &lt;a href=&#34;https://twitter.com/appflowy&#34;&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://codecov.io/github/AppFlowy-IO/appflowy-editor&#34;&gt; &lt;img src=&#34;https://codecov.io/github/AppFlowy-IO/appflowy-editor/branch/main/graph/badge.svg?token=BXTGUXTWRU&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/AppFlowy-IO/appflowy-editor/raw/main/documentation/images/appflowy_editor_example.mp4?raw=true&#34; width=&#34;700&#34; style=&#34;padding: 100&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build rich, intuitive editors&lt;/li&gt; &#xA; &lt;li&gt;Design and modify an ever expanding list of customizable features including &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;components (such as form input controls, numbered lists, and rich text widgets)&lt;/li&gt; &#xA;   &lt;li&gt;shortcut events&lt;/li&gt; &#xA;   &lt;li&gt;themes&lt;/li&gt; &#xA;   &lt;li&gt;menu options (&lt;strong&gt;coming soon!&lt;/strong&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy-editor/raw/main/documentation/testing.md&#34;&gt;Test-coverage&lt;/a&gt; and ongoing maintenance by AppFlowy&#39;s core team and community of more than 1,000 builders&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Add the AppFlowy editor &lt;a href=&#34;https://docs.flutter.dev/development/packages-and-plugins/using-packages&#34;&gt;Flutter package&lt;/a&gt; to your environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flutter pub add appflowy_editor&#xA;flutter pub get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Creating Your First Editor&lt;/h2&gt; &#xA;&lt;p&gt;Start by creating a new empty AppFlowyEditor object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final editorState = EditorState.empty(); // an empty state&#xA;final editor = AppFlowyEditor(&#xA;    editorState: editorState,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also create an editor from a JSON object in order to configure your initial state. Or you can &lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy-editor/raw/main/documentation/importing.md&#34;&gt;create an editor from Markdown or Quill Delta&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final json = ...;&#xA;final editorState = EditorState(Document.fromJson(data));&#xA;final editor = AppFlowyEditor(&#xA;    editorState: editorState,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: The parameters &lt;code&gt;localizationsDelegates&lt;/code&gt; need to be assigned in MaterialApp widget&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;    localizationsDelegates: const [&#xA;        AppFlowyEditorLocalizations.delegate,&#xA;    ]，&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get a sense of how the AppFlowy Editor works, run our example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/AppFlowy-IO/appflowy-editor.git&#xA;flutter pub get&#xA;flutter run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customizing Your Editor&lt;/h2&gt; &#xA;&lt;h3&gt;Customizing Components&lt;/h3&gt; &#xA;&lt;p&gt;Please refer to our documentation on customizing AppFlowy for a detailed discussion about &lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy-editor/raw/main/documentation/customizing.md#customize-a-component&#34;&gt;customizing components&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Below are some examples of component customizations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy-editor/raw/main/lib/src/render/rich_text/checkbox_text.dart&#34;&gt;Checkbox Text&lt;/a&gt; demonstrates how to extend new styles based on existing rich text components&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy-editor/raw/main/example/lib/plugin/network_image_node_widget.dart&#34;&gt;Image&lt;/a&gt; demonstrates how to extend a new node and render it&lt;/li&gt; &#xA; &lt;li&gt;See further examples of &lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy-editor/raw/main/lib/src/render/rich_text&#34;&gt;rich-text plugins&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Customizing Shortcut Events&lt;/h3&gt; &#xA;&lt;p&gt;Please refer to our documentation on customizing AppFlowy for a detailed discussion about &lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy-editor/raw/main/documentation/customizing.md#customize-a-shortcut-event&#34;&gt;customizing shortcut events&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Below are some examples of shortcut event customizations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy-editor/raw/main/lib/src/service/internal_key_event_handlers/format_style_handler.dart&#34;&gt;BIUS&lt;/a&gt; demonstrates how to make text bold/italic/underline/strikethrough through shortcut keys&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy-editor/raw/main/lib/src/service/internal_key_event_handlers/copy_paste_handler.dart&#34;&gt;Paste HTML&lt;/a&gt; gives you an idea on how to handle pasted styles through shortcut keys&lt;/li&gt; &#xA; &lt;li&gt;Need more examples? Check out &lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy-editor/raw/main/lib/src/service/internal_key_event_handlers&#34;&gt;Internal key event handlers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Glossary&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the API documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated.&lt;/p&gt; &#xA;&lt;p&gt;Please look at &lt;a href=&#34;https://appflowy.gitbook.io/docs/essential-documentation/contribute-to-appflowy/contributing-to-appflowy&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;All code contributed to the AppFlowy Editor project is dual-licensed, and released under both of the following licenses:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The GNU Affero General Public License Version 3&lt;/li&gt; &#xA; &lt;li&gt;The Mozilla Public License, Version 2.0 (the “MPL”)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy-editor/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>