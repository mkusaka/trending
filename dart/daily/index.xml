<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-05T01:27:08Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rxlabz/flutter_ui_protos</title>
    <updated>2023-04-05T01:27:08Z</updated>
    <id>tag:github.com,2023-04-05:/rxlabz/flutter_ui_protos</id>
    <link href="https://github.com/rxlabz/flutter_ui_protos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter UI challenges&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter UI protos&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rxlabz/flutter_ui_protos/tree/main/temperature_slider&#34;&gt;Thermo UI&lt;/a&gt; ðŸŒ¡&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;browser demo : &lt;a href=&#34;http://rxlabz.github.io/flutter_ui_protos/thermo_ui/#/&#34;&gt;http://rxlabz.github.io/flutter_ui_protos/thermo_ui/#/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a lot of CustomPainter&lt;/li&gt; &#xA; &lt;li&gt;SpringAnimation&lt;/li&gt; &#xA; &lt;li&gt;Colors gradient tween&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Inspired by &lt;a href=&#34;https://twitter.com/realvjy/status/1640342553563217920?s=20&#34;&gt;https://twitter.com/realvjy/status/1640342553563217920?s=20&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/1397248/229339908-595ba885-d96f-4bd0-9134-6a4759fc9779.mp4&#34;&gt;https://user-images.githubusercontent.com/1397248/229339908-595ba885-d96f-4bd0-9134-6a4759fc9779.mp4&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wewehao/flutter_chatgpt</title>
    <updated>2023-04-05T01:27:08Z</updated>
    <id>tag:github.com,2023-04-05:/wewehao/flutter_chatgpt</id>
    <link href="https://github.com/wewehao/flutter_chatgpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter ChatGPT APP. The chatgpt chat app implemented by flutter supports custom modes and contextual continuous dialogue. In addition, it supports admob advertisement configuration, accessing open screen advertisements, interstitial advertisements, Banner advertisements, etc.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;ChatGPT Application with flutter&lt;/h2&gt; &#xA;&lt;p&gt;ChatGPT has released version 4.0, but it is not fully open. Currently, AI Chat uses the &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; model.&lt;/p&gt; &#xA;&lt;p&gt;Chinese document: &lt;a href=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/README-CN.md&#34;&gt;Chinese&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Software Screenshot&lt;/h3&gt; &#xA;&lt;h4&gt;Pure version (no ads)&lt;/h4&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/1.jpeg&#34; width=&#34;33%&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/2.jpeg&#34; width=&#34;33%&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/2_1.jpeg&#34; width=&#34;33%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/3.jpeg&#34; width=&#34;33%&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/3_1.jpeg&#34; width=&#34;33%&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/3_2.jpeg&#34; width=&#34;33%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/4.jpeg&#34; width=&#34;33%&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/5.jpeg&#34; width=&#34;33%&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/6.jpeg&#34; width=&#34;33%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h4&gt;Advertisement Version&lt;/h4&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/ad_1.jpeg&#34; width=&#34;33%&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/ad_2.jpeg&#34; width=&#34;33%&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/ad_3.jpeg&#34; width=&#34;33%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/ad_4.jpeg&#34; width=&#34;33%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h4&gt;IOS simulator running&lt;/h4&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/wewehao/flutter_chatgpt/main/docs/ios_1.png&#34; width=&#34;33%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Software version&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Whether to configure infinite number of versions through &lt;code&gt;isInfiniteNumberVersion&lt;/code&gt; in &lt;code&gt;lib/utils/Config.dart&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;main branch: Unlimited version, including &lt;code&gt;chatgpt&lt;/code&gt;, need to configure openaiKey.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;admob branch: the version with the number of times you watched ads, including &lt;code&gt;firebase&lt;/code&gt;, &lt;code&gt;admob&lt;/code&gt;, &lt;code&gt;chatgpt&lt;/code&gt;, need the corresponding ad configuration and openaiKey.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;At present, Android supports running on a real machine, and IOS has only been run on an emulator. IOS packaging requires a developer account.&lt;/p&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;flutter&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;3.*&lt;/code&gt; version, AI Chat uses version 3.7.7 when compiling.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;ChatGPT Token&lt;/code&gt; (required)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configure the token obtained from the openai background to the &lt;code&gt;chatGptToken&lt;/code&gt; variable of the &lt;code&gt;lib/utils/Chatgpt.dart&lt;/code&gt; file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;admob&lt;/code&gt; (ad version)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The admob ad is docked, the main branch contains admob, you need to apply for the corresponding ad ID in the admob background, and fill it in the &lt;code&gt;lib/utils/AdCommon.dart&lt;/code&gt; file. These include splash ads, interstitial ads, interstitial rewarded ads, and banner ads.&lt;/li&gt; &#xA; &lt;li&gt;Configure admob&#39;s &lt;code&gt;APPLICATION_ID&lt;/code&gt; to &lt;code&gt;android/app/src/main/AndroidManifest.xml&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;meta-data android:name=&#34;com.google.android.gms.ads.APPLICATION_ID&#34; android:value=&#34;****&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Also configure admob&#39;s &lt;code&gt;APPLICATION_ID&lt;/code&gt; to &lt;code&gt;ios/Runner/Info.plist&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;key&amp;gt;GADApplicationIdentifier&amp;lt;/key&amp;gt;&#xA;&amp;lt;string&amp;gt;****&amp;lt;/string&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;firebase&lt;/code&gt; (ads version)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configure Android and IOS in the firebase background &lt;a href=&#34;https://console.firebase.google.com/&#34;&gt;https://console.firebase.google.com/&lt;/a&gt;, Android needs to download &lt;code&gt;google-services.json&lt;/code&gt;, IOS needs Download &lt;code&gt;GoogleService-Info.plist&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;google-services.json&lt;/code&gt;: &lt;code&gt;android/app/google-services.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GoogleService-Info.plist&lt;/code&gt;: &lt;code&gt;ios/Runner/GoogleService-Info.plist&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Android packaging and compilation configuration&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To package and compile, you need to generate the corresponding key first. Here you can go to Google to see the packaging steps.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Replace generated jks file to &lt;code&gt;android/app/build_config/build.jks&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Edit the packaging configuration &lt;code&gt;signingConfigs&lt;/code&gt; in the &lt;code&gt;android/app/build.gradle&lt;/code&gt; file, and replace the corresponding file path and password.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;signingConfigs {&#xA;     release {&#xA;         storeFile file(&#34;./build_config/build.jks&#34;)&#xA;         storePassword &#34;123456&#34;&#xA;         keyAlias &#34;appKey&#34;&#xA;         keyPassword &#34;123456&#34;&#xA;     }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>