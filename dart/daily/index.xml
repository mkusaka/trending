<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-17T01:33:37Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Baseflow/flutter_cached_network_image</title>
    <updated>2023-02-17T01:33:37Z</updated>
    <id>tag:github.com,2023-02-17:/Baseflow/flutter_cached_network_image</id>
    <link href="https://github.com/Baseflow/flutter_cached_network_image" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Download, cache and show images in a flutter app&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cached network image&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/cached_network_image&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/cached_network_image.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Baseflow/flutter_cached_network_image&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Baseflow/flutter_cached_network_image/branch/master/graph/badge.svg?token=I5qW0RvoXN&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Baseflow/flutter_cached_network_image/actions/workflows/app_facing_package.yaml&#34;&gt;&lt;img src=&#34;https://github.com/Baseflow/flutter_cached_network_image/workflows/app_facing_package/badge.svg?branch=develop&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A flutter library to show images from the internet and keep them in the cache directory.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://getstream.io/chat/flutter/tutorial/?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Jan2022_FlutterChat&amp;amp;utm_term=renefloor&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;250px&#34; src=&#34;https://stream-blog.s3.amazonaws.com/blog/wp-content/uploads/fc148f0fc75d02841d017bb36e14e388/Stream-logo-with-background-.png&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;span&gt;&lt;a href=&#34;https://getstream.io/chat/flutter/tutorial/?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Jan2022_FlutterChat&amp;amp;utm_term=renefloor&#34; target=&#34;_blank&#34;&gt;Try the Flutter Chat Tutorial 💬&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;The CachedNetworkImage can be used directly or through the ImageProvider. Both the CachedNetworkImage as CachedNetworkImageProvider have minimal support for web. It currently doesn&#39;t include caching.&lt;/p&gt; &#xA;&lt;p&gt;With a placeholder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;CachedNetworkImage(&#xA;        imageUrl: &#34;http://via.placeholder.com/350x150&#34;,&#xA;        placeholder: (context, url) =&amp;gt; CircularProgressIndicator(),&#xA;        errorWidget: (context, url, error) =&amp;gt; Icon(Icons.error),&#xA;     ),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or with a progress indicator:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;CachedNetworkImage(&#xA;       imageUrl: &#34;http://via.placeholder.com/350x150&#34;,&#xA;       progressIndicatorBuilder: (context, url, downloadProgress) =&amp;gt; &#xA;               CircularProgressIndicator(value: downloadProgress.progress),&#xA;       errorWidget: (context, url, error) =&amp;gt; Icon(Icons.error),&#xA;    ),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Image(image: CachedNetworkImageProvider(url))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you want to have both the placeholder functionality and want to get the imageprovider to use in another widget you can provide an imageBuilder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;CachedNetworkImage(&#xA;  imageUrl: &#34;http://via.placeholder.com/200x150&#34;,&#xA;  imageBuilder: (context, imageProvider) =&amp;gt; Container(&#xA;    decoration: BoxDecoration(&#xA;      image: DecorationImage(&#xA;          image: imageProvider,&#xA;          fit: BoxFit.cover,&#xA;          colorFilter:&#xA;              ColorFilter.mode(Colors.red, BlendMode.colorBurn)),&#xA;    ),&#xA;  ),&#xA;  placeholder: (context, url) =&amp;gt; CircularProgressIndicator(),&#xA;  errorWidget: (context, url, error) =&amp;gt; Icon(Icons.error),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;The cached network images stores and retrieves files using the &lt;a href=&#34;https://pub.dartlang.org/packages/flutter_cache_manager&#34;&gt;flutter_cache_manager&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;My app crashes when the image loading failed. (I know, this is not really a question.)&lt;/h3&gt; &#xA;&lt;p&gt;Does it really crash though? The debugger might pause, as the Dart VM doesn&#39;t recognize it as a caught exception; the console might print errors; even your crash reporting tool might report it (I know, that really sucks). However, does it really crash? Probably everything is just running fine. If you really get an app crashes you are fine to report an issue, but do that with a small example so we can reproduce that crash.&lt;/p&gt; &#xA;&lt;p&gt;See for example &lt;a href=&#34;https://github.com/Baseflow/flutter_cached_network_image/issues/336#issuecomment-760769361&#34;&gt;this&lt;/a&gt; or &lt;a href=&#34;https://github.com/Baseflow/flutter_cached_network_image/issues/536#issuecomment-760857495&#34;&gt;this&lt;/a&gt; answer on previous posted issues.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Nikhil636/Attendance-app</title>
    <updated>2023-02-17T01:33:37Z</updated>
    <id>tag:github.com,2023-02-17:/Nikhil636/Attendance-app</id>
    <link href="https://github.com/Nikhil636/Attendance-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;p align=&#34;center&#34;&gt;𝑨𝒕𝒕𝒆𝒏𝒅𝒂𝒏𝒄𝒆 𝑨𝒑𝒑✨&lt;/p&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;What is this 𝑨𝒕𝒕𝒆𝒏𝒅𝒂𝒏𝒄𝒆 𝑨𝒑𝒑?&lt;/h2&gt; &#xA;&lt;p&gt;This is an attendance app created using &lt;code&gt;flutter&lt;/code&gt; and &lt;code&gt;firebase&lt;/code&gt; where the user&#39;s check-in and check-out time gets stored in firebase database.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt;&#xA;&lt;h1&gt;🧰 Features:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email Authentication.&lt;/li&gt; &#xA; &lt;li&gt;Home screen with a slider action button which is used to mark the attendance which then get stored in firestore database.&lt;/li&gt; &#xA; &lt;li&gt;A profile page to store user information to the database.&lt;/li&gt; &#xA; &lt;li&gt;Calendar screen where user can check their own records of attendance.&lt;/li&gt; &#xA; &lt;li&gt;Searching/Indexing.&lt;/li&gt; &#xA; &lt;li&gt;Timeline.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;/h2&gt;&#xA;&lt;h1&gt;🤔 How it works ?&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;First user have to register in the signup screen.&lt;/li&gt; &#xA; &lt;li&gt;After registration, login with the registered email.&lt;/li&gt; &#xA; &lt;li&gt;Add the required data in the profile page which gets store in firestore database.&lt;/li&gt; &#xA; &lt;li&gt;Use the slider actiob button to check in and to check out.&lt;/li&gt; &#xA; &lt;li&gt;To check the records, use the calendar screen where monthly data can be seen.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;/h2&gt;&#xA;&lt;h1&gt; 📝 Todo&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sign up screen to register new users&lt;/li&gt; &#xA; &lt;li&gt;Marking attendance by scanning a QR code.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stores the location from where the user checked in.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;User can upload a profile photo&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;TeckStack Used&lt;/h1&gt; 🔸Flutter 🔸Firebase Authentication 🔸Firestore Database &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h3&gt;Don&#39;t forget to ⭐ this repo&lt;/h3&gt; &#xA; &lt;h5&gt;Building with the COMMUNITY for the COMMUNITY ❤️&lt;/h5&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>