<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-01T01:35:06Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>resideo/resideo_pedantic</title>
    <updated>2023-12-01T01:35:06Z</updated>
    <id>tag:github.com,2023-12-01:/resideo/resideo_pedantic</id>
    <link href="https://github.com/resideo/resideo_pedantic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A common pedantic configuration for all of Resideo&#39;s Dart/Flutter packages.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Resideo&#39;s common pedantic options&lt;/h1&gt; &#xA;&lt;p&gt;A common pedantic configuration for all of Resideo&#39;s Dart/Flutter packages.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Include this package under your dev dependencies in &lt;code&gt;pubspec.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dev_dependencies:&#xA;  resideo_pedantic:&#xA;    git:&#xA;      url: https://github.com/resideo/resideo_pedantic.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This can replace &lt;code&gt;pedantic&lt;/code&gt; if it is listed in your pubspec already.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Then include the options in your &lt;code&gt;analysis_options.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;include: package:resideo_pedantic/analysis_options.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This can replace &lt;code&gt;pedantic&lt;/code&gt; if it is listed in your options already.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>davidmigloz/langchain_dart</title>
    <updated>2023-12-01T01:35:06Z</updated>
    <id>tag:github.com,2023-12-01:/davidmigloz/langchain_dart</id>
    <link href="https://github.com/davidmigloz/langchain_dart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build powerful LLM-based Dart/Flutter applications.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ü¶úÔ∏èüîó LangChain.dart&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/davidmigloz/langchain_dart/actions/workflows/test.yaml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/davidmigloz/langchain_dart/test.yaml?logo=github&amp;amp;label=tests&#34; alt=&#34;tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/davidmigloz/langchain_dart/actions/workflows/pages/pages-build-deployment&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/davidmigloz/langchain_dart/pages%2Fpages-build-deployment?logo=github&amp;amp;label=docs&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/langchain&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/langchain.svg?sanitize=true&#34; alt=&#34;langchain&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/x4qbhqecVR&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/x4qbhqecVR?style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/davidmigloz/langchain_dart/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-purple.svg?sanitize=true&#34; alt=&#34;MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Build powerful LLM-based Dart/Flutter applications.&lt;/p&gt; &#xA;&lt;h2&gt;What is LangChain.dart?&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Check out the announcement post: &lt;a href=&#34;https://blog.langchaindart.com/introducing-langchain-dart-6b1d34fc41ef&#34;&gt;Introducing LangChain.dart ü¶úÔ∏èüîó&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;LangChain.dart is a Dart port of the popular &lt;a href=&#34;https://github.com/hwchase17/langchain&#34;&gt;LangChain&lt;/a&gt; Python framework created by &lt;a href=&#34;https://www.linkedin.com/in/harrison-chase-961287118&#34;&gt;Harrison Chase&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;LangChain provides a set of ready-to-use components for working with language models and the concept of chains, which allows to &#34;chain&#34; components together to formulate more advanced use cases around LLMs.&lt;/p&gt; &#xA;&lt;p&gt;The components can be grouped into a few core modules:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/davidmigloz/langchain_dart/main/docs/img/langchain.dart.png&#34; alt=&#34;LangChain.dart&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìÉ &lt;strong&gt;Model I/O:&lt;/strong&gt; streamlines the interaction between the model inputs (prompt templates), the Language Model (abstracting different providers), and the model output (output parsers).&lt;/li&gt; &#xA; &lt;li&gt;üìö &lt;strong&gt;Retrieval:&lt;/strong&gt; assists in loading user data (document loaders), modifying it (document transformers and embedding models), storing (vector stores), and retrieving when needed (retrievers).&lt;/li&gt; &#xA; &lt;li&gt;üîó &lt;strong&gt;Chains:&lt;/strong&gt; a way to compose multiple components or other chains into a single pipeline.&lt;/li&gt; &#xA; &lt;li&gt;üß† &lt;strong&gt;Memory:&lt;/strong&gt; equips chains or agents with both short-term and long-term memory capabilities, facilitating recall of prior interactions with the user.&lt;/li&gt; &#xA; &lt;li&gt;ü§ñ &lt;strong&gt;Agents:&lt;/strong&gt; &#34;Bots&#34; that harness LLMs to perform tasks. They serve as the link between LLM and the tools (web search, calculators, database lookup, etc.). They determine what has to be accomplished and the tools that are more suitable for the specific task.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;Large Language Models (LLMs) have revolutionized Natural Language Processing (NLP), serving as essential components in a wide range of applications, such as question-answering, summarization, translation, and text generation.&lt;/p&gt; &#xA;&lt;p&gt;The adoption of LLMs is creating a new tech stack in its wake. However, emerging libraries and tools are predominantly being developed for the Python and JavaScript ecosystems. As a result, the number of applications leveraging LLMs in these ecosystems has grown exponentially.&lt;/p&gt; &#xA;&lt;p&gt;In contrast, the Dart / Flutter ecosystem has not experienced similar growth, which can likely be attributed to the scarcity of Dart and Flutter libraries that streamline the complexities associated with working with LLMs.&lt;/p&gt; &#xA;&lt;p&gt;LangChain.dart aims to fill this gap by abstracting the intricacies of working with LLMs in Dart and Flutter, enabling developers to harness their combined potential effectively.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;p&gt;LangChain.dart has a modular design where the core &lt;a href=&#34;https://pub.dev/packages/langchain&#34;&gt;langchain&lt;/a&gt; package provides the LangChain API and each integration with a model provider, database, etc. is provided by a separate package.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/langchain&#34;&gt;langchain&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/pub/v/langchain.svg?sanitize=true&#34; alt=&#34;langchain&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Core LangChain API (base components abstraction, logic for chaining them (LCEL), etc.)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/langchain_openai&#34;&gt;langchain_openai&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/pub/v/langchain_openai.svg?sanitize=true&#34; alt=&#34;langchain_openai&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenAI integration (GPT-3.5, GPT-4, Embeddings, Functions, Vision, DALL¬∑E 3, etc.)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/langchain_google&#34;&gt;langchain_google&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/pub/v/langchain_google.svg?sanitize=true&#34; alt=&#34;langchain_google&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Google integration (VertexAI, PaLM 2 (bison), Embeddings, Vector Search, etc.)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/langchain_pinecone&#34;&gt;langchain_pinecone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/pub/v/langchain_pinecone.svg?sanitize=true&#34; alt=&#34;langchain_pinecone&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pinecone vector database integration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/langchain_chroma&#34;&gt;langchain_chroma&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/pub/v/langchain_chroma.svg?sanitize=true&#34; alt=&#34;langchain_chroma&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Chroma vector database integration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Functionality provided by each package:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;LLMs&lt;/th&gt; &#xA;   &lt;th&gt;Chat models&lt;/th&gt; &#xA;   &lt;th&gt;Embeddings&lt;/th&gt; &#xA;   &lt;th&gt;Vector stores&lt;/th&gt; &#xA;   &lt;th&gt;Chains&lt;/th&gt; &#xA;   &lt;th&gt;Agents&lt;/th&gt; &#xA;   &lt;th&gt;Tools&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/langchain&#34;&gt;langchain&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚òÖ&lt;/td&gt; &#xA;   &lt;td&gt;‚òÖ&lt;/td&gt; &#xA;   &lt;td&gt;‚òÖ&lt;/td&gt; &#xA;   &lt;td&gt;‚òÖ&lt;/td&gt; &#xA;   &lt;td&gt;‚òÖ&lt;/td&gt; &#xA;   &lt;td&gt;‚òÖ&lt;/td&gt; &#xA;   &lt;td&gt;‚òÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/langchain_openai&#34;&gt;langchain_openai&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/langchain_google&#34;&gt;langchain_google&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/langchain_pinecone&#34;&gt;langchain_pinecone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/langchain_chroma&#34;&gt;langchain_chroma&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úî&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The following packages are maintained (and used internally) by LangChain.dart, although they can also be used independently:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/chromadb&#34;&gt;chromadb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/chromadb&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/chromadb.svg?sanitize=true&#34; alt=&#34;chromadb&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Chroma DB API client&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/ollama_dart&#34;&gt;ollama_dart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/ollama_dart&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/ollama_dart.svg?sanitize=true&#34; alt=&#34;ollama_dart&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ollama API client&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/openai_dart&#34;&gt;openai_dart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/openai_dart&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/openai_dart.svg?sanitize=true&#34; alt=&#34;openai_dart&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenAI API client&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/vertex_ai&#34;&gt;vertex_ai&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/vertex_ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/vertex_ai.svg?sanitize=true&#34; alt=&#34;vertex_ai&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GCP Vertex AI API client&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To start using LangChain.dart, add &lt;code&gt;langchain&lt;/code&gt; as a dependency to your &lt;code&gt;pubspec.yaml&lt;/code&gt; file. Also, include the dependencies for the specific integrations you want to use (e.g.&lt;code&gt;langchain_openai&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  langchain: {version}&#xA;  langchain_openai: {version}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The most basic building block of LangChain.dart is calling an LLM on some prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final llm = OpenAI(apiKey: openaiApiKey);&#xA;final prompt = PromptValue.string(&#39;Hello world!&#39;);&#xA;final result = await openai.invoke(prompt);&#xA;// Hello everyone! I&#39;m new here and excited to be part of this community.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But you can build complex pipelines by chaining together multiple components.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following pipeline does the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Asks the model where the given person is from.&lt;/li&gt; &#xA; &lt;li&gt;Uses the answer to ask the model to return the country where the city is located in the given language.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final promptTemplate1 = ChatPromptTemplate.fromTemplate(&#xA;  &#39;What is the city {person} is from? Only respond with the name of the city.&#39;,&#xA;);&#xA;final promptTemplate2 = ChatPromptTemplate.fromTemplate(&#xA;  &#39;What country is the city {city} in? Respond in {language}.&#39;,&#xA;);&#xA;&#xA;final model = ChatOpenAI(apiKey: openaiApiKey);&#xA;const stringOutputParser = StringOutputParser();&#xA;&#xA;final chain = Runnable.fromMap({&#xA;  &#39;city&#39;: promptTemplate1 | model | stringOutputParser,&#xA;  &#39;language&#39;: Runnable.getItemFromMap(&#39;language&#39;),&#xA;}) |&#xA;promptTemplate2 |&#xA;model |&#xA;stringOutputParser;&#xA;&#xA;final res = await chain.invoke({&#xA;&#39;person&#39;: &#39;Rafael Nadal&#39;,&#xA;&#39;language&#39;: &#39;Spanish&#39;,&#xA;});&#xA;print(res);&#xA;// La ciudad de Manacor se encuentra en Espa√±a.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is just a very simple example of a pipeline using &lt;a href=&#34;https://langchaindart.com/#/expression_language/expression_language&#34;&gt;LangChain Expression Language (LCEL)&lt;/a&gt;. You can construct far more intricate pipelines by connecting various components, such as a Retrieval-Augmented Generation (RAG) pipeline that would accept a user query, retrieve relevant documents from a vector store, format them using templates, prompt the model, and parse the output in a specific manner using an output parser.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.langchain.com/docs&#34;&gt;LangChain conceptual guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://langchaindart.com&#34;&gt;LangChain.dart documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/davidmigloz/langchain_dart/tree/main/examples&#34;&gt;Sample apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.langchaindart.com&#34;&gt;LangChain.dart blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/users/davidmigloz/projects/2/views/1&#34;&gt;Project board&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Having trouble? Get help in the official &lt;a href=&#34;https://discord.gg/x4qbhqecVR&#34;&gt;LangChain.dart Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;üì¢ &lt;strong&gt;Call for Collaborators&lt;/strong&gt; üì¢&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;We are looking for collaborators to join the core group of maintainers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;New contributors welcome! Check out our &lt;a href=&#34;https://github.com/davidmigloz/langchain_dart/raw/main/CONTRIBUTING.md&#34;&gt;Contributors Guide&lt;/a&gt; for help getting started.&lt;/p&gt; &#xA;&lt;p&gt;Join us on &lt;a href=&#34;https://discord.gg/x4qbhqecVR&#34;&gt;Discord&lt;/a&gt; to meet other maintainers. We&#39;ll help you get your first contribution in no time!&lt;/p&gt; &#xA;&lt;h2&gt;Related projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/langchain-ai/langchain&#34;&gt;LangChain&lt;/a&gt;: The original Python LangChain project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/langchain-ai/langchainjs&#34;&gt;LangChain.js&lt;/a&gt;: A JavaScript port of LangChain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tmc/langchaingo&#34;&gt;LangChain.go&lt;/a&gt;: A Go port of LangChain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/andreibondarev/langchainrb&#34;&gt;LangChain.rb&lt;/a&gt;: A Ruby port of LangChain.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/sponsors/davidmigloz&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/davidmigloz/sponsors/main/sponsors.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;LangChain.dart is licensed under the &lt;a href=&#34;https://github.com/davidmigloz/langchain_dart/raw/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>