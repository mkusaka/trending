<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-26T01:31:23Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ReactiveX/rxdart</title>
    <updated>2022-11-26T01:31:23Z</updated>
    <id>tag:github.com,2022-11-26:/ReactiveX/rxdart</id>
    <link href="https://github.com/ReactiveX/rxdart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Reactive Extensions for Dart&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RxDart&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ReactiveX/rxdart/actions&#34;&gt;&lt;img src=&#34;https://github.com/ReactiveX/rxdart/workflows/Dart%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/ReactiveX/rxdart&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ReactiveX/rxdart/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dartlang.org/packages/rxdart&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/rxdart.svg?sanitize=true&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/ReactiveX/rxdart&#34;&gt;&lt;img src=&#34;https://img.shields.io/gitter/room/ReactiveX/rxdart.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ReactiveX/rxdart/actions/workflows/flutter-example.yml&#34;&gt;&lt;img src=&#34;https://github.com/ReactiveX/rxdart/actions/workflows/flutter-example.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Flutter example&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;RxDart extends the capabilities of Dart &lt;a href=&#34;https://api.dart.dev/stable/dart-async/Stream-class.html&#34;&gt;Streams&lt;/a&gt; and &lt;a href=&#34;https://api.dart.dev/stable/dart-async/StreamController-class.html&#34;&gt;StreamControllers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Dart comes with a very decent &lt;a href=&#34;https://api.dart.dev/stable/dart-async/Stream-class.html&#34;&gt;Streams&lt;/a&gt; API out-of-the-box; rather than attempting to provide an alternative to this API, RxDart adds functionality from the reactive extensions specification on top of it.&lt;/p&gt; &#xA;&lt;p&gt;RxDart does not provide its Observable class as a replacement for Dart Streams. Instead, it offers several additional Stream classes, operators (extension methods on the Stream class), and Subjects.&lt;/p&gt; &#xA;&lt;p&gt;If you are familiar with Observables from other languages, please see &lt;a href=&#34;https://raw.githubusercontent.com/ReactiveX/rxdart/master/#rx-observables-vs-dart-streams&#34;&gt;the Rx Observables vs. Dart Streams comparison chart&lt;/a&gt; for notable distinctions between the two.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading from RxDart 0.22.x to 0.23.x&lt;/h2&gt; &#xA;&lt;p&gt;RxDart 0.23.x moves away from the Observable class, utilizing Dart 2.6&#39;s new extension methods instead. This requires several small refactors that can be easily automated -- which is just what we&#39;ve done!&lt;/p&gt; &#xA;&lt;p&gt;Please follow the instructions on the &lt;a href=&#34;https://pub.dev/packages/rxdart_codemod&#34;&gt;rxdart_codemod&lt;/a&gt; package to automatically upgrade your code to support RxDart 0.23.x.&lt;/p&gt; &#xA;&lt;h2&gt;How To Use RxDart&lt;/h2&gt; &#xA;&lt;h3&gt;For Example: Reading the Konami Code&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:rxdart/rxdart.dart&#39;;&#xA;&#xA;void main() {&#xA;  const konamiKeyCodes = &amp;lt;int&amp;gt;[&#xA;    KeyCode.UP,&#xA;    KeyCode.UP,&#xA;    KeyCode.DOWN,&#xA;    KeyCode.DOWN,&#xA;    KeyCode.LEFT,&#xA;    KeyCode.RIGHT,&#xA;    KeyCode.LEFT,&#xA;    KeyCode.RIGHT,&#xA;    KeyCode.B,&#xA;    KeyCode.A,&#xA;  ];&#xA;&#xA;  final result = querySelector(&#39;#result&#39;)!;&#xA;&#xA;  document.onKeyUp&#xA;      .map((event) =&amp;gt; event.keyCode)&#xA;      .bufferCount(10, 1) // An extension method provided by rxdart&#xA;      .where((lastTenKeyCodes) =&amp;gt; const IterableEquality&amp;lt;int&amp;gt;().equals(lastTenKeyCodes, konamiKeyCodes))&#xA;      .listen((_) =&amp;gt; result.innerHtml = &#39;KONAMI!&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API Overview&lt;/h2&gt; &#xA;&lt;p&gt;RxDart adds functionality to Dart Streams in three ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ReactiveX/rxdart/master/#stream-classes&#34;&gt;Stream Classes&lt;/a&gt; - create Streams with specific capabilities, such as combining or merging many Streams.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ReactiveX/rxdart/master/#extension-methods&#34;&gt;Extension Methods&lt;/a&gt; - transform a source Stream into a new Stream with different capabilities, such as throttling or buffering events.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ReactiveX/rxdart/master/#subjects&#34;&gt;Subjects&lt;/a&gt; - StreamControllers with additional powers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Stream Classes&lt;/h3&gt; &#xA;&lt;p&gt;The Stream class provides different ways to create a Stream: &lt;code&gt;Stream.fromIterable&lt;/code&gt; or &lt;code&gt;Stream.periodic&lt;/code&gt;. RxDart provides additional Stream classes for a variety of tasks, such as combining or merging Streams!&lt;/p&gt; &#xA;&lt;p&gt;You can construct the Streams provided by RxDart in two ways. The following examples are equivalent in terms of functionality:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Instantiating the Stream class directly. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;code&gt;final mergedStream = MergeStream([myFirstStream, mySecondStream]);&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Using static factories from the Rx class, which are useful for discovering which types of Streams are provided by RxDart. Under the hood, these factories call the corresponding Stream constructor. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;code&gt;final mergedStream = Rx.merge([myFirstStream, mySecondStream]);&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;List of Classes / Static Factories&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/CombineLatestStream-class.html&#34;&gt;CombineLatestStream&lt;/a&gt; (combine2, combine3... combine9) / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/combineLatest2.html&#34;&gt;Rx.combineLatest2&lt;/a&gt;...&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/combineLatest9.html&#34;&gt;Rx.combineLatest9&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/ConcatStream-class.html&#34;&gt;ConcatStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/concat.html&#34;&gt;Rx.concat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/ConcatEagerStream-class.html&#34;&gt;ConcatEagerStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/concatEager.html&#34;&gt;Rx.concatEager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DeferStream-class.html&#34;&gt;DeferStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/defer.html&#34;&gt;Rx.defer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/ForkJoinStream-class.html&#34;&gt;ForkJoinStream&lt;/a&gt; (join2, join3... join9) / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/forkJoin2.html&#34;&gt;Rx.forkJoin2&lt;/a&gt;...&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/forkJoin9.html&#34;&gt;Rx.forkJoin9&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/FromCallableStream-class.html&#34;&gt;FromCallableStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/fromCallable.html&#34;&gt;Rx.fromCallable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/MergeStream-class.html&#34;&gt;MergeStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/merge.html&#34;&gt;Rx.merge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/NeverStream-class.html&#34;&gt;NeverStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/never.html&#34;&gt;Rx.never&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/RaceStream-class.html&#34;&gt;RaceStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/race.html&#34;&gt;Rx.race&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/RangeStream-class.html&#34;&gt;RangeStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/range.html&#34;&gt;Rx.range&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/RepeatStream-class.html&#34;&gt;RepeatStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/repeat.html&#34;&gt;Rx.repeat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/RetryStream-class.html&#34;&gt;RetryStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/retry.html&#34;&gt;Rx.retry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/RetryWhenStream-class.html&#34;&gt;RetryWhenStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/retryWhen.html&#34;&gt;Rx.retryWhen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/SequenceEqualStream-class.html&#34;&gt;SequenceEqualStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/sequenceEqual.html&#34;&gt;Rx.sequenceEqual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/SwitchLatestStream-class.html&#34;&gt;SwitchLatestStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/switchLatest.html&#34;&gt;Rx.switchLatest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/TimerStream-class.html&#34;&gt;TimerStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/timer.html&#34;&gt;Rx.timer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/UsingStream-class.html&#34;&gt;UsingStream&lt;/a&gt; / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/using.html&#34;&gt;Rx.using&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/ZipStream-class.html&#34;&gt;ZipStream&lt;/a&gt; (zip2, zip3, zip4, ..., zip9) / &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/zip2.html&#34;&gt;Rx.zip&lt;/a&gt;...&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx/zip9.html&#34;&gt;Rx.zip9&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re looking for an &lt;a href=&#34;https://reactivex.io/documentation/operators/interval.html&#34;&gt;Interval&lt;/a&gt; equivalent, check out Dart&#39;s &lt;a href=&#34;https://api.dart.dev/stable/2.7.2/dart-async/Stream/Stream.periodic.html&#34;&gt;Stream.periodic&lt;/a&gt; for similar behavior.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Extension Methods&lt;/h3&gt; &#xA;&lt;p&gt;The extension methods provided by RxDart can be used on any &lt;code&gt;Stream&lt;/code&gt;. They convert a source Stream into a new Stream with additional capabilities, such as buffering or throttling events.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Stream.fromIterable([1, 2, 3])&#xA;  .throttleTime(Duration(seconds: 1))&#xA;  .listen(print); // prints 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;List of Extension Methods&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/BufferExtensions/buffer.html&#34;&gt;buffer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/BufferExtensions/bufferCount.html&#34;&gt;bufferCount&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/BufferExtensions/bufferTest.html&#34;&gt;bufferTest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/BufferExtensions/bufferTime.html&#34;&gt;bufferTime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/ConcatExtensions/concatWith.html&#34;&gt;concatWith&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DebounceExtensions/debounce.html&#34;&gt;debounce&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DebounceExtensions/debounceTime.html&#34;&gt;debounceTime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DefaultIfEmptyExtension/defaultIfEmpty.html&#34;&gt;defaultIfEmpty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DelayExtension/delay.html&#34;&gt;delay&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DelayWhenExtension/delayWhen.html&#34;&gt;delayWhen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DematerializeExtension/dematerialize.html&#34;&gt;dematerialize&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DistinctUniqueExtension/distinctUnique.html&#34;&gt;distinctUnique&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DoExtensions/doOnCancel.html&#34;&gt;doOnCancel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DoExtensions/doOnData.html&#34;&gt;doOnData&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DoExtensions/doOnDone.html&#34;&gt;doOnDone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DoExtensions/doOnEach.html&#34;&gt;doOnEach&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DoExtensions/doOnError.html&#34;&gt;doOnError&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DoExtensions/doOnListen.html&#34;&gt;doOnListen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DoExtensions/doOnPause.html&#34;&gt;doOnPause&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/DoExtensions/doOnResume.html&#34;&gt;doOnResume&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/EndWithExtension/endWith.html&#34;&gt;endWith&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/EndWithManyExtension/endWithMany.html&#34;&gt;endWithMany&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/ExhaustMapExtension/exhaustMap.html&#34;&gt;exhaustMap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/FlatMapExtension/flatMap.html&#34;&gt;flatMap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/FlatMapExtension/flatMapIterable.html&#34;&gt;flatMapIterable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/GroupByExtension/groupBy.html&#34;&gt;groupBy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/IntervalExtension/interval.html&#34;&gt;interval&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/MapNotNullExtension/mapNotNull.html&#34;&gt;mapNotNull&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/MapToExtension/mapTo.html&#34;&gt;mapTo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/MaterializeExtension/materialize.html&#34;&gt;materialize&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/MaxExtension/max.html&#34;&gt;max&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/MergeExtension/mergeWith.html&#34;&gt;mergeWith&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/MinExtension/min.html&#34;&gt;min&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/OnErrorExtensions/onErrorResume.html&#34;&gt;onErrorResume&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/OnErrorExtensions/onErrorResumeNext.html&#34;&gt;onErrorResumeNext&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/OnErrorExtensions/onErrorReturn.html&#34;&gt;onErrorReturn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/OnErrorExtensions/onErrorReturnWith.html&#34;&gt;onErrorReturnWith&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/PairwiseExtension/pairwise.html&#34;&gt;pairwise&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/SampleExtensions/sample.html&#34;&gt;sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/SampleExtensions/sampleTime.html&#34;&gt;sampleTime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/ScanExtension/scan.html&#34;&gt;scan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/SkipLastExtension/skipLast.html&#34;&gt;skipLast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/SkipUntilExtension/skipUntil.html&#34;&gt;skipUntil&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/StartWithExtension/startWith.html&#34;&gt;startWith&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/StartWithManyExtension/startWithMany.html&#34;&gt;startWithMany&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/SwitchIfEmptyExtension/switchIfEmpty.html&#34;&gt;switchIfEmpty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/SwitchMapExtension/switchMap.html&#34;&gt;switchMap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/TakeLastExtension/takeLast.html&#34;&gt;takeLast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/TakeUntilExtension/takeUntil.html&#34;&gt;takeUntil&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/TakeWhileInclusiveExtension/takeWhileInclusive.html&#34;&gt;takeWhileInclusive&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/ThrottleExtensions/throttle.html&#34;&gt;throttle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/ThrottleExtensions/throttleTime.html&#34;&gt;throttleTime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/TimeIntervalExtension/timeInterval.html&#34;&gt;timeInterval&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/TimeStampExtension/timestamp.html&#34;&gt;timestamp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/WhereNotNullExtension/whereNotNull.html&#34;&gt;whereNotNull&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/WhereTypeExtension/whereType.html&#34;&gt;whereType&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/WindowExtensions/window.html&#34;&gt;window&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/WindowExtensions/windowCount.html&#34;&gt;windowCount&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/WindowExtensions/windowTest.html&#34;&gt;windowTest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/WindowExtensions/windowTime.html&#34;&gt;windowTime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/WithLatestFromExtensions.html&#34;&gt;withLatestFrom&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/ZipWithExtension/zipWith.html&#34;&gt;zipWith&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Subjects&lt;/h3&gt; &#xA;&lt;p&gt;Dart provides the &lt;a href=&#34;https://api.dart.dev/stable/dart-async/StreamController-class.html&#34;&gt;StreamController&lt;/a&gt; class to create and manage a Stream. RxDart offers two additional StreamControllers with additional capabilities, known as Subjects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/BehaviorSubject-class.html&#34;&gt;BehaviorSubject&lt;/a&gt; - A broadcast StreamController that caches the latest added value or error. When a new listener subscribes to the Stream, the latest value or error will be emitted to the listener. Furthermore, you can synchronously read the last emitted value.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/ReplaySubject-class.html&#34;&gt;ReplaySubject&lt;/a&gt; - A broadcast StreamController that caches the added values. When a new listener subscribes to the Stream, the cached values will be emitted to the listener.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Rx Observables vs Dart Streams&lt;/h2&gt; &#xA;&lt;p&gt;In many situations, Streams and Observables work the same way. However, if you&#39;re used to standard Rx Observables, some features of the Stream API may surprise you. We&#39;ve included a table below to help folks understand the differences.&lt;/p&gt; &#xA;&lt;p&gt;Additional information about the following situations can be found by reading the &lt;a href=&#34;https://pub.dev/documentation/rxdart/latest/rx/Rx-class.html&#34;&gt;Rx class documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Situation&lt;/th&gt; &#xA;   &lt;th&gt;Rx Observables&lt;/th&gt; &#xA;   &lt;th&gt;Dart Streams&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;An error is raised&lt;/td&gt; &#xA;   &lt;td&gt;Observable Terminates with Error&lt;/td&gt; &#xA;   &lt;td&gt;Error is emitted and Stream continues&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cold Observables&lt;/td&gt; &#xA;   &lt;td&gt;Multiple subscribers can listen to the same cold Observable, and each subscription will receive a unique Stream of data&lt;/td&gt; &#xA;   &lt;td&gt;Single subscriber only&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hot Observables&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes, known as Broadcast Streams&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Is {Publish, Behavior, Replay}Subject hot?&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Single/Maybe/Completable ?&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes, uses &lt;a href=&#34;https://pub.dev/documentation/rxdart_ext/latest/single/Single-class.html&#34;&gt;rxdart_ext Single&lt;/a&gt; (&lt;code&gt;Completable = Single&amp;lt;void&amp;gt;, Maybe&amp;lt;T&amp;gt; = Single&amp;lt;T?&amp;gt;&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Support back pressure&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Can emit null?&lt;/td&gt; &#xA;   &lt;td&gt;Yes, except RxJava&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sync by default&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Can pause/resume a subscription*?&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Web and command-line examples can be found in the &lt;code&gt;example&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;Web Examples&lt;/h3&gt; &#xA;&lt;p&gt;In order to run the web examples, please follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repo and enter the directory&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;dart pub get&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;dart pub run build_runner serve example&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Navigate to &lt;a href=&#34;http://localhost:8080/web/index.html&#34;&gt;http://localhost:8080/web/index.html&lt;/a&gt; in your browser&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Command Line Examples&lt;/h3&gt; &#xA;&lt;p&gt;In order to run the command line example, please follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repo and enter the directory&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;pub get&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;dart example/example.dart 10&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Flutter Example&lt;/h3&gt; &#xA;&lt;h4&gt;Install Flutter&lt;/h4&gt; &#xA;&lt;p&gt;To run the flutter example, you must have Flutter installed. For installation instructions, view the online &lt;a href=&#34;https://flutter.io/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Run the app&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open up an Android Emulator, the iOS Simulator, or connect an appropriate mobile device for debugging.&lt;/li&gt; &#xA; &lt;li&gt;Open up a terminal&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;example/flutter/github_search&lt;/code&gt; directory&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;flutter doctor&lt;/code&gt; to ensure you have all Flutter dependencies working.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;flutter packages get&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;flutter run&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Notable References&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.dart.dev/stable/dart-async/Stream-class.html&#34;&gt;Documentation on the Dart Stream class&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.dartlang.org/tutorials/language/streams&#34;&gt;Tutorial on working with Streams in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactivex.io/&#34;&gt;ReactiveX (Rx)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://github.com/ReactiveX/rxdart/raw/master/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt; to get all release notes.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>avuenja/tabnews-app</title>
    <updated>2022-11-26T01:31:23Z</updated>
    <id>tag:github.com,2022-11-26:/avuenja/tabnews-app</id>
    <link href="https://github.com/avuenja/tabnews-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TabNews App feito em Flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TabNews App&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/avuenja/tabnews-app/actions/workflows/android.yml&#34;&gt;&lt;img src=&#34;https://github.com/avuenja/tabnews-app/actions/workflows/android.yml/badge.svg?sanitize=true&#34; alt=&#34;Android APK&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Aplicativo TabNews feito com muito ♥️ e Flutter, pela comunidade para o site &lt;a href=&#34;https://www.tabnews.com.br&#34;&gt;TabNews&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Instalar e rodar o projeto&lt;/h2&gt; &#xA;&lt;h3&gt;Dependências globais&lt;/h3&gt; &#xA;&lt;p&gt;Você precisa ter o Flutter instalado e configurado na sua máquina:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.flutter.dev/get-started/install&#34;&gt;Flutter&lt;/a&gt; 3.0 (ou qualquer versão &lt;strong&gt;3&lt;/strong&gt; superior)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Dependências locais&lt;/h3&gt; &#xA;&lt;p&gt;Então após baixar/clonar o repositório, não se esqueça de instalar as dependências locais do projeto:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter pub get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rodar o projeto&lt;/h3&gt; &#xA;&lt;p&gt;Para rodar o projeto localmente, basta rodar o comando abaixo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Isto irá rodar o projeto no seu emulador/simulador ou dispositivo real conectado.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Lembrando que as vezes é necessário abrir o emulador/simulador antes de rodar o comando de run.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dark mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Leitura de conteúdos&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Pull To Refresh&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Infite Scroll&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Visualização de Comentários das publicações&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Login do usuário&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Meus conteúdos&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Gerencimaneto de conta&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Criação de conta pelo App&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Resposta dos conteúdos&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Postagens de conteúdos&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Visualização do perfil de outros usuários&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Favoritos (local database)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Opção ler mais taerde (local database)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Showcase:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5226773/203870853-5f5a3706-b0aa-459a-b46d-1d9ef9bdb2c3.gif&#34; alt=&#34;Alpha&#34;&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/5226773/203336162-7af83c42-9ec0-4b6c-8be6-e7be32426527.PNG&#34; width=&#34;300px&#34; alt=&#34;Home - Dark&#34;&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/5226773/203336292-724ab6e6-d3fe-400a-a1ee-12ef5db0a54c.PNG&#34; width=&#34;300px&#34; alt=&#34;Leitura - Dark&#34;&gt; &#xA;&lt;h2&gt;Contribuidores&lt;/h2&gt;</summary>
  </entry>
</feed>