<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-25T01:30:27Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>GDSC-IAU/Selection-Project</title>
    <updated>2024-01-25T01:30:27Z</updated>
    <id>tag:github.com,2024-01-25:/GDSC-IAU/Selection-Project</id>
    <link href="https://github.com/GDSC-IAU/Selection-Project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/banner.jpg&#34; alt=&#34;Alt text&#34;&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/#learning-objectives&#34;&gt;Learning Objectives&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/#resources&#34;&gt;Resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/#setup-and-tutorial&#34;&gt;Setup and Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/#project-overview&#34;&gt;Project Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/#submission-guidelines&#34;&gt;Submission Guidelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;In this project, you will be building a note taking app. The app will allow users to create, edit and delete notes. The app will also allow users to search for notes by title and content.&lt;/p&gt; &#xA;&lt;h2&gt;Learning Objectives&lt;/h2&gt; &#xA;&lt;p&gt;By the end of this project, you should be able to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Learn and understand git and Github&lt;/li&gt; &#xA; &lt;li&gt;Install Dart on your local machine&lt;/li&gt; &#xA; &lt;li&gt;Learn and understand the basics of Dart &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Declare and initialize variables&lt;/li&gt; &#xA;   &lt;li&gt;Handle errors using try-catch blocks&lt;/li&gt; &#xA;   &lt;li&gt;Define classes and use constructors&lt;/li&gt; &#xA;   &lt;li&gt;Understand Dart&#39;s null safety feature&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Learn to use proper code structuring and formatting&lt;/li&gt; &#xA; &lt;li&gt;Build a simple note taking app&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;h3&gt;Online Resources&lt;/h3&gt; &#xA;&lt;h4&gt;Github&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=tRZGeaHPoaw&#34;&gt;Git and Github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/git/default.asp&#34;&gt;Git Tutorial (w3schools.com)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/introduction-to-git-and-github/&#34;&gt;How to Use Git and GitHub ‚Äì Introduction for Beginners (freecodecamp.org)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learngitbranching.js.org/&#34;&gt;Learn Git Branching&lt;/a&gt; (Interactive tutorial)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging&#34;&gt;Git - Basic Branching and Merging (git-scm.com)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LdSwWxVzUpo&#34;&gt;Pull Requests in VS Code - YouTube&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Dart&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dart.dev/guides&#34;&gt;Dart Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dartpad.dev/&#34;&gt;DartPad&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NrO0CJCbYLA&#34;&gt;What is Dart?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Fqcsow_7go4&#34;&gt;Dart Basics | Long Video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/dart-tutorial/&#34;&gt;Dart Basics | Articles&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Custom Resources&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qCp9QpVeJPE&#34;&gt;Github Introduction (Arabic)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=g2eYPeY-ah0&amp;amp;&#34;&gt;Task Explanation Video (Arabic)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ARkfF1wIAlw&#34;&gt;Task Explanation Video (English)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup and Tutorial&lt;/h2&gt; &#xA;&lt;h3&gt;1. Setup&lt;/h3&gt; &#xA;&lt;h4&gt;1.1. Install Git (Windows Users Only)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Download Git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;1.2. Install Dart&lt;/h4&gt; &#xA;&lt;h5&gt;1.2.1. Windows (Using Chocolaty)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Open powershell as an administrator.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image16.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following command to install Chocolaty:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://community.chocolatey.org/install.ps1&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following command to install Flutter:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;choco install flutter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run Flutter Doctor to check if Flutter is installed properly:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter doctor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image5.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have any red checks, follow the flutter doctor instructions to fix them. Or follow the below checklist.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Windows: The following is a checklist of everything you need to have done before continuing with the project üëçüèΩü´°&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Flutter installed&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Android Studio installed &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Go to the &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;android studio&lt;/a&gt; website and download the latest version.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Android SDK installed (Steps shown below) &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image13.png&#34; alt=&#34;Alt text&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image14.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Visual Studio Desktop development with C++ installed &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can Install it by following these steps: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Install Visual Studio from the following link: &lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Select Visual Studio Community Edition&lt;/li&gt; &#xA;     &lt;li&gt;When running the installer, make select the Desktop development with C++ Component&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;1.2.2. MacOS (Using Homebrew)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the terminal. &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image15.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the following command to install Homebrew:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/bin/bash -c &#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following command to install Flutter:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install flutter --cask&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image4.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run Flutter Doctor to check if Flutter is installed properly:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter doctor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image5.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have any red checks, follow the flutter doctor instructions to fix them. Or follow the below checklist.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;MacOS: The following is a checklist of everything you need to have done before continuing with the project üëçüèΩü´°&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Flutter installed&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Android Studio installed&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Go to the &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;android studio&lt;/a&gt; website and download the latest version.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Xcode installed&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Go to the &lt;a href=&#34;https://apps.apple.com/us/app/xcode/id497799835?mt=12&#34;&gt;app store&lt;/a&gt; and download Xcode.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Android SDK installed &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image13.png&#34; alt=&#34;Alt text&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image14.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Xcode command line tools installed&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Run the following command in the terminal&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo sh -c &#39;xcode-select -s /Applications/Xcode.app/Contents/Developer &amp;amp;&amp;amp; xcodebuild -runFirstLaunch&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;xcode license accepted&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Run the following command in the terminal&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo xcodebuild -license&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;1.3. Install VS Code&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;Download VS Code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;1.4 Fork the repository&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork the repository by clicking the fork button on the top right corner of the repository page.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click the fork Button&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image.png&#34; alt=&#34;Image of forking the repository&#34;&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Name the repo and click &#34;Create fork&#34; &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image25.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;You should now have a copy of the repository on your own account. &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image26.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tutorial&lt;/h3&gt; &#xA;&lt;h4&gt;2.1. Git&lt;/h4&gt; &#xA;&lt;h5&gt;2.1.1. Clone the repository&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the terminal and navigate to the directory (also known as folder) where you want to clone the repository. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Make sure the path you choose has NO ARABIC LETTERS. This will cause errors. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;On Mac: &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image17.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA;     &lt;li&gt;On Windows: &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image20.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Go to the repository page on &lt;strong&gt;your own account&lt;/strong&gt; and click on the green code button.&lt;/li&gt; &#xA; &lt;li&gt;Copy the link under the clone section. &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image1.png&#34; alt=&#34;Image of github&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the following command inside of the opened terminal to clone the repository:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone &amp;lt;The Link from your Repository&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/YOUR_NAME/Selection-Project.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image3.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;2.1.2. Add changes&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the repository directory in VS Code.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The path must be INSIDE the cloned repository.&lt;/li&gt; &#xA;   &lt;li&gt;Click on File -&amp;gt; Open folder &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image21.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Select the repository folder. &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image22.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The repository should be opened in VS Code. &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image18.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA;   &lt;li&gt;To make sure, run the following command in the terminal INSIDE Vscode:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git status&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The output should be similar to the following: &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image19.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;You are now ready to code! Make the required changes which are given in section &lt;a href=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/#project-overview&#34;&gt;Project Overview&lt;/a&gt; and then follow the steps below to push your changes to Github. Make sure to regularly commit your changes. If you want to continue the tutorial, skip to section &lt;a href=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/#22-dart&#34;&gt;2.2. Dart&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following command to add the changes:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;2.1.3. Commit changes&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following command to commit the changes:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git commit -m &#34;&amp;lt;commit-message&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;2.1.4. Push changes&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following command to push the changes:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image6.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;2.1.5. Create a pull request&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to the repository page and click on the pull request button. &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image7.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on the new pull request button. &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image8.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select the branch you want to merge into the main branch. &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image9.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on the create pull request button. &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image10.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add a title and description for the pull request. Title should be in the following format: &lt;code&gt;&amp;lt;your-name&amp;gt; - &amp;lt;project-name&amp;gt;&lt;/code&gt;. &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image11.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on the create pull request button. &lt;img src=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/readme/image12.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.2. Dart&lt;/h4&gt; &#xA;&lt;h5&gt;2.2.1. Variables&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Variables are used to store data.&lt;/li&gt; &#xA; &lt;li&gt;Variables can be initialized using the &lt;code&gt;=&lt;/code&gt; operator.&lt;/li&gt; &#xA; &lt;li&gt;Variables can be declared and initialized in the same line.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;String name = &#34;Ahmed&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Variables can be declared without initializing them.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;String name;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Variables can be initialized later.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;name = &#34;Ahmed&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;2.2.2. Data Types&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dart is a strongly typed language.&lt;/li&gt; &#xA; &lt;li&gt;Dart has the following data types: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Numbers &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;int&lt;/li&gt; &#xA;     &lt;li&gt;double&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Strings&lt;/li&gt; &#xA;   &lt;li&gt;Booleans&lt;/li&gt; &#xA;   &lt;li&gt;Lists&lt;/li&gt; &#xA;   &lt;li&gt;Maps&lt;/li&gt; &#xA;   &lt;li&gt;Runes&lt;/li&gt; &#xA;   &lt;li&gt;Symbols&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dart also has the &lt;code&gt;dynamic&lt;/code&gt; data type which can be used to store any type of data.&lt;/li&gt; &#xA; &lt;li&gt;Dart also has the &lt;code&gt;var&lt;/code&gt; keyword which can be used to declare variables without specifying the data type.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;2.2.3. Error Handling&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Errors can be handled using try-catch blocks.&lt;/li&gt; &#xA; &lt;li&gt;The try block contains the code that might throw an error.&lt;/li&gt; &#xA; &lt;li&gt;The catch block contains the code that will be executed if an error is thrown.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;try {&#xA;  // Code that might throw an error&#xA;} catch (e) {&#xA;  // Code that will be executed if an error is thrown&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;try {&#xA;  int result = 12 ~/ 0;&#xA;  print(result);&#xA;} catch (e) {&#xA;  print(&#34;Error: Cannot divide by zero&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;2.2.4. Classes&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Classes are used to define objects.&lt;/li&gt; &#xA; &lt;li&gt;Classes can have properties and methods.&lt;/li&gt; &#xA; &lt;li&gt;Properties are variables that belong to the class.&lt;/li&gt; &#xA; &lt;li&gt;Methods are functions that belong to the class.&lt;/li&gt; &#xA; &lt;li&gt;Classes can have constructors.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Person {&#xA;  String name;&#xA;  int age;&#xA;&#xA;  Person({this.name, this.age});&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;this&lt;/code&gt; keyword is used to refer to the current instance of the class.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;this&lt;/code&gt; keyword can be used to initialize properties in the constructor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Person person = Person(name: &#34;Ahmed&#34;, age: 20);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;2.2.5. Null Safety&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Null safety is a feature that was introduced in Dart 2.12.&lt;/li&gt; &#xA; &lt;li&gt;Null safety is used to prevent null reference errors.&lt;/li&gt; &#xA; &lt;li&gt;Null safety is enabled by default in Dart 2.12.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;String name = &#34;Ahmed&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The above code will throw an error if the variable &lt;code&gt;name&lt;/code&gt; is null.&lt;/li&gt; &#xA; &lt;li&gt;To allow a variable to be null, add a &lt;code&gt;?&lt;/code&gt; after the data type.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;String? name = &#34;Ahmed&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The above code will not throw an error if the variable &lt;code&gt;name&lt;/code&gt; is null.&lt;/li&gt; &#xA; &lt;li&gt;To check if a variable is null, use the &lt;code&gt;==&lt;/code&gt; operator.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;if (name == null) {&#xA;  print(&#34;Name is null&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;2.2.6. Finding an Element in a List&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To find an element in a list, use the &lt;code&gt;firstWhere()&lt;/code&gt; method.&lt;/li&gt; &#xA; &lt;li&gt;The list can be a list of a predefined data type or a list of a custom class.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;firstWhere()&lt;/code&gt; method takes a function as an argument.&lt;/li&gt; &#xA; &lt;li&gt;The function should return true if the element is found and false if the element is not found.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;List&amp;lt;int&amp;gt; numbers = [1, 2, 3, 4, 5];&#xA;result = numbers.firstWhere((element) =&amp;gt; element == 3);&#xA;print(result);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The above code will print &lt;code&gt;3&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If the element is not found, the &lt;code&gt;firstWhere()&lt;/code&gt; method will throw an error.&lt;/li&gt; &#xA; &lt;li&gt;To avoid the error, use the &lt;code&gt;orElse()&lt;/code&gt; method.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;List&amp;lt;int&amp;gt; numbers = [1, 2, 3, 4, 5];&#xA;result = numbers.firstWhere((element) =&amp;gt; element == 6, orElse: () =&amp;gt; 0);&#xA;print(result);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The above code will print &lt;code&gt;0&lt;/code&gt; instead of throwing an error.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;orElse()&lt;/code&gt; method takes a function as an argument.&lt;/li&gt; &#xA; &lt;li&gt;The function should return a value if the element is not found.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;2.2.6. Code Structuring and Formatting&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code should be structured and formatted properly.&lt;/li&gt; &#xA; &lt;li&gt;Code should be divided into functions and classes.&lt;/li&gt; &#xA; &lt;li&gt;Functions and classes should be named properly.&lt;/li&gt; &#xA; &lt;li&gt;Functions and classes should be defined before they are used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;An example code structure is provided within the repository itself.&lt;/p&gt; &#xA;&lt;h2&gt;Project Overview&lt;/h2&gt; &#xA;&lt;p&gt;Your project is to build a note taking app. The app should allow users to create, edit and delete notes. The app should also allow users to search for notes by title and content.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The CLI (Command line interface) should display a menu with the following options: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Create a note&lt;/li&gt; &#xA;   &lt;li&gt;Edit a note&lt;/li&gt; &#xA;   &lt;li&gt;Delete a note&lt;/li&gt; &#xA;   &lt;li&gt;Search for a note&lt;/li&gt; &#xA;   &lt;li&gt;Exit&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;All CRUD (Create, Read, Update, Delete) operations should be performed within the CLI.&lt;/li&gt; &#xA; &lt;li&gt;The app should handle errors using try-catch blocks.&lt;/li&gt; &#xA; &lt;li&gt;The app should use classes and constructors.&lt;/li&gt; &#xA; &lt;li&gt;The app should use Dart&#39;s null safety feature.&lt;/li&gt; &#xA; &lt;li&gt;The app should follow proper code structuring and formatting.&lt;/li&gt; &#xA; &lt;li&gt;The app should be well documented.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Submission Guidelines&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The app should be pushed to Github and a pull request should be created. You can check how to push your code to Github in section &lt;a href=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/#212-add-changes&#34;&gt;2.1.2 Add Changes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The pull request title should be in the following format: &lt;code&gt;&amp;lt;your-name&amp;gt; - &amp;lt;project-name&amp;gt;&lt;/code&gt;. You can check how to make a pull request in section &lt;a href=&#34;https://raw.githubusercontent.com/GDSC-IAU/Selection-Project/master/#215-create-a-pull-request&#34;&gt;2.1.5. Create a pull request&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The pull request description should contain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A description of the changes made.&lt;/li&gt; &#xA;   &lt;li&gt;A screenshot of the app running in the terminal.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>