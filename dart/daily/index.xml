<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-28T01:32:58Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>flutter/news_toolkit</title>
    <updated>2023-01-28T01:32:58Z</updated>
    <id>tag:github.com,2023-01-28:/flutter/news_toolkit</id>
    <link href="https://github.com/flutter/news_toolkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A news template application built in Flutter, by Google and Very Good Ventures. Learn more at: https://flutter.github.io/news_toolkit&lt;/p&gt;&lt;hr&gt;&lt;img alt=&#34;Flutter News Toolkit Logo&#34; height=&#34;75&#34; src=&#34;https://raw.githubusercontent.com/flutter/news_toolkit/main/docs/static/img/header_light.svg#gh-light-mode-only&#34;&gt; &#xA;&lt;img alt=&#34;Flutter News Toolkit Logo&#34; height=&#34;75&#34; src=&#34;https://raw.githubusercontent.com/flutter/news_toolkit/main/docs/static/img/header_dark.svg#gh-dark-mode-only&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Flutter and the &lt;a href=&#34;https://newsinitiative.withgoogle.com/&#34;&gt;Google News Initiative&lt;/a&gt; have co-sponsored the development of a news application template. The goal of this project is to help news publishers build mobile applications easily in order to make reliable information accessible to all.&lt;/p&gt; &#xA;&lt;p&gt;This template aims to &lt;strong&gt;significantly reduce the development time for typical news applications&lt;/strong&gt; by giving developers a head start on core components and features.&lt;/p&gt; &#xA;&lt;p&gt;The Flutter News Toolkit:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contains common news app UI workflows and core features built with Flutter and Firebase&lt;/li&gt; &#xA; &lt;li&gt;Implements best practices for news apps based on &lt;a href=&#34;https://newsinitiative.withgoogle.com/info/assets/static/docs/nci/nci-playbook-en.pdf&#34;&gt;Google News Initiative research&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Allows publishers to monetize immediately with ads and subscription services&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Common services such as authentication, notifications, analytics, and ads have been implemented using &lt;a href=&#34;https://firebase.flutter.dev/docs/overview/&#34;&gt;Firebase&lt;/a&gt; and &lt;a href=&#34;https://pub.dev/packages/google_mobile_ads&#34;&gt;Google Mobile Ads&lt;/a&gt;. Developers are free to substitute these services and can find publicly available packages on &lt;a href=&#34;https://pub.dev&#34;&gt;pub.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re just getting started with Flutter, we recommend first developing familiarity with the framework by reviewing the &lt;a href=&#34;https://docs.flutter.dev/get-started/install&#34;&gt;onboarding guides&lt;/a&gt;, &lt;a href=&#34;https://docs.flutter.dev/reference/tutorials&#34;&gt;tutorials&lt;/a&gt;, and &lt;a href=&#34;https://docs.flutter.dev/codelabs&#34;&gt;codelabs&lt;/a&gt; before using this template.&lt;/p&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started, see the official documentation at &lt;a href=&#34;https://flutter.github.io/news_toolkit&#34;&gt;https://flutter.github.io/news_toolkit&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter/holobooth</title>
    <updated>2023-01-28T01:32:58Z</updated>
    <id>tag:github.com,2023-01-28:/flutter/holobooth</id>
    <link href="https://github.com/flutter/holobooth" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Jump into a new reality to bring Dash and Sparky to life!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Holobooth&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://holobooth.flutter.dev&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flutter/holobooth/main/art/header.png&#34; alt=&#34;Holobooth Header&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flutter/photobooth/actions/workflows/main.yaml&#34;&gt;&lt;img src=&#34;https://github.com/flutter/holobooth/actions/workflows/main.yaml/badge.svg?sanitize=true&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/flutter/holobooth/main/coverage_badge.svg?sanitize=true&#34; alt=&#34;coverage&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/very_good_analysis&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-very_good_analysis-B22C89.svg?sanitize=true&#34; alt=&#34;style: very good analysis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Holobooth built with &lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt;, &lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt;, and &lt;a href=&#34;https://www.tensorflow.org/js&#34;&gt;TensorFlow&lt;/a&gt; for &lt;a href=&#34;https://flutter.dev/events/flutter-forward&#34;&gt;Flutter Forward&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://holobooth.flutter.dev&#34;&gt;Try it now&lt;/a&gt; and &lt;a href=&#34;https://medium.com/flutter/how-its-made-holobooth-6473f3d018dd&#34;&gt;learn about how it&#39;s made&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Built by &lt;a href=&#34;https://verygood.ventures/&#34;&gt;Very Good Ventures&lt;/a&gt; in partnership with Google&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Created using &lt;a href=&#34;https://github.com/VeryGoodOpenSource/very_good_cli&#34;&gt;Very Good CLI&lt;/a&gt; ü§ñ&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting Started üöÄ&lt;/h2&gt; &#xA;&lt;p&gt;To run the desired project either use the launch configuration in VSCode/Android Studio or use the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ flutter run -d chrome -t lib/main_dev.dart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;*Holobooth works on Web.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Running Tests üß™&lt;/h2&gt; &#xA;&lt;p&gt;To run all unit and widget tests use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ flutter test --coverage --test-randomize-ordering-seed random&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To view the generated coverage report you can use &lt;a href=&#34;https://github.com/linux-test-project/lcov&#34;&gt;lcov&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Generate Coverage Report&#xA;$ genhtml coverage/lcov.info -o coverage/&#xA;# Open Coverage Report&#xA;$ open coverage/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Working with Translations üåê&lt;/h2&gt; &#xA;&lt;p&gt;This project relies on &lt;a href=&#34;https://api.flutter.dev/flutter/flutter_localizations/flutter_localizations-library.html&#34;&gt;flutter_localizations&lt;/a&gt; and follows the &lt;a href=&#34;https://flutter.dev/docs/development/accessibility-and-localization/internationalization&#34;&gt;official internationalization guide for Flutter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Adding Strings&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To add a new localizable string, open the &lt;code&gt;app_en.arb&lt;/code&gt; file at &lt;code&gt;lib/l10n/arb/app_en.arb&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-arb&#34;&gt;{&#xA;    &#34;@@locale&#34;: &#34;en&#34;,&#xA;    &#34;counterAppBarTitle&#34;: &#34;Counter&#34;,&#xA;    &#34;@counterAppBarTitle&#34;: {&#xA;        &#34;description&#34;: &#34;Text shown in the AppBar of the Counter Page&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Then add a new key/value and description&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-arb&#34;&gt;{&#xA;    &#34;@@locale&#34;: &#34;en&#34;,&#xA;    &#34;counterAppBarTitle&#34;: &#34;Counter&#34;,&#xA;    &#34;@counterAppBarTitle&#34;: {&#xA;        &#34;description&#34;: &#34;Text shown in the AppBar of the Counter Page&#34;&#xA;    },&#xA;    &#34;helloWorld&#34;: &#34;Hello World&#34;,&#xA;    &#34;@helloWorld&#34;: {&#xA;        &#34;description&#34;: &#34;Hello World Text&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Use the new string&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:holobooth/l10n/l10n.dart&#39;;&#xA;&#xA;@override&#xA;Widget build(BuildContext context) {&#xA;  final l10n = context.l10n;&#xA;  return Text(l10n.helloWorld);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Adding Translations&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;For each supported locale, add a new ARB file in &lt;code&gt;lib/l10n/arb&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;‚îú‚îÄ‚îÄ l10n&#xA;‚îÇ   ‚îú‚îÄ‚îÄ arb&#xA;‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ app_en.arb&#xA;‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ app_es.arb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add the translated strings to each &lt;code&gt;.arb&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;app_en.arb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-arb&#34;&gt;{&#xA;    &#34;@@locale&#34;: &#34;en&#34;,&#xA;    &#34;counterAppBarTitle&#34;: &#34;Counter&#34;,&#xA;    &#34;@counterAppBarTitle&#34;: {&#xA;        &#34;description&#34;: &#34;Text shown in the AppBar of the Counter Page&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;app_es.arb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-arb&#34;&gt;{&#xA;    &#34;@@locale&#34;: &#34;es&#34;,&#xA;    &#34;counterAppBarTitle&#34;: &#34;Contador&#34;,&#xA;    &#34;@counterAppBarTitle&#34;: {&#xA;        &#34;description&#34;: &#34;Texto mostrado en la AppBar de la p√°gina del contador&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Working with Mason üß±&lt;/h2&gt; &#xA;&lt;p&gt;This project relies on &lt;a href=&#34;https://github.com/felangel/mason&#34;&gt;mason&lt;/a&gt; to create and consume reusable templates called bricks. For additional documentation see &lt;a href=&#34;https://docs.brickhub.dev&#34;&gt;BrickHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install mason from &lt;a href=&#34;https://pub.dev&#34;&gt;pub&lt;/a&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dart pub global activate mason_cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Check the current project bricks:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mason list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Add your own bricks:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mason add bloc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Generate code from a brick:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mason make bloc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Mason support for Visual Studio Code can be found &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=FelixAngelov.mason&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Debug web app on iPhone&lt;/h2&gt; &#xA;&lt;p&gt;To debug the web app on the iPhone, we need to run it as https, because without that, the iPhone won&#39;t let us use the camera. We also need to configure Safari to use the phone&#39;s developer tools.&lt;/p&gt; &#xA;&lt;h3&gt;Configure https server&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install http-server from &lt;a href=&#34;https://www.npmjs.com&#34;&gt;npm&lt;/a&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install -g http-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Execute these commands&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd ~/&#xA;mkdir .localhost-ssl&#xA;sudo openssl genrsa -out ~/.localhost-ssl/localhost.key 2048&#xA;sudo openssl req -new -x509 -key ~/.localhost-ssl/localhost.key -out ~/.localhost-ssl/localhost.crt -days 3650 -subj /CN=localhost&#xA;sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain ~/.localhost-ssl/localhost.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Build web project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flutter build web --web-renderer canvaskit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Go to the generated directory&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd {project_dir}/build/web&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Run server&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;http-server --ssl --cert ~/.localhost-ssl/localhost.crt --key ~/.localhost-ssl/localhost.key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configure Safari to listen for logs&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;On Mac&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Open Safari &amp;gt; Preferences &amp;gt; Advanced &amp;gt; enable &#34;Show Develop menu in menu bar&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;On iPhone&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Open Settings &amp;gt; Safari &amp;gt; Advanced &amp;gt; enable &#34;Web Inspector&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect your device to your Mac using a USB cable.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open Safari on iOS and enter the server address, for example &lt;a href=&#34;https://192.168.1.1:8080&#34;&gt;https://192.168.1.1:8080&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On Mac&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Safari &amp;gt; Develop &amp;gt; Find &#34;YourPhoneName&#34; &amp;gt; Select the URL entered earlier, for example 192.168.1.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Assets generation&lt;/h2&gt; &#xA;&lt;p&gt;We rely on fluttergen to generate the assets. Everytime a new asset folder is added, we should:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add the folder to the pubspec.yaml&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;flutter:&#xA;  assets:&#xA;    - assets/backgrounds/&#xA;    - assets/icons/&#xA;    - assets/audio/&#xA;    - assets/characters/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run &lt;code&gt;fluttergen&lt;/code&gt; on the console&lt;/li&gt; &#xA; &lt;li&gt;Use the asset&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Assets.nameOfTheFolder.nameOfTheAsset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: Step one can be skipped if the folder is already added to the pubspec.yaml.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Test Assets LICENSE&lt;/h3&gt; &#xA;&lt;p&gt;In order to properly test the face recognition feature, this project uses free photos downloaded from Unsplash released under their &lt;a href=&#34;https://unsplash.com/license&#34;&gt;Unsplash Licence&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Those assets can be found at &lt;code&gt;packages/tensorflow_models/tensorflow_models_web/test/test_assets/&lt;/code&gt;, and the links from each individual image on the LICENSE file under that same folder.&lt;/p&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>flutter/website</title>
    <updated>2023-01-28T01:32:58Z</updated>
    <id>tag:github.com,2023-01-28:/flutter/website</id>
    <link href="https://github.com/flutter/website" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter documentation web site&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://docs.flutter.dev&#34;&gt;&lt;img src=&#34;https://github.com/dart-lang/site-shared/raw/main/src/_assets/image/flutter/icon/64.png?raw=1&#34; alt=&#34;Flutter logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://docs.flutter.dev/&#34;&gt;Flutter&lt;/a&gt; website&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flutter/website/actions?query=workflow%3Abuild+branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://api.securityscorecards.dev/projects/github.com/flutter/website&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/flutter/website/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/website/main/#issues-bugs-and-requests&#34;&gt;Issues, bugs, and requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/website/main/#before-you-submit-a-pr&#34;&gt;Before you submit a PR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/website/main/#before-you-build-this-site&#34;&gt;Before you build this site&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/website/main/#1-get-the-prerequisites&#34;&gt;1. Get the prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/website/main/#2-clone-this-repo-and-its-submodules&#34;&gt;2. Clone this repo &lt;em&gt;and&lt;/em&gt; its submodules&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/website/main/#setting-up-your-local-environment-and-serving-changes&#34;&gt;Setting up your local environment and serving changes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/website/main/#creating-andor-editing-dartpad-example-code&#34;&gt;Creating and/or editing DartPad example code&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/website/main/#dartpad-example-code-in-github-gists&#34;&gt;DartPad example code in GitHub gists&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/website/main/#dartpad-example-code-in-this-repo&#34;&gt;DartPad example code in this repo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/website/main/#deploying-to-a-staging-site&#34;&gt;Deploying to a staging site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/website/main/#writing-for-flutterdev&#34;&gt;Writing for flutter.dev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issues, bugs, and requests&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions and feedback on our website. Please file a request in our &lt;a href=&#34;https://github.com/flutter/website/issues/new/choose&#34;&gt;issue tracker&lt;/a&gt; or create a &lt;a href=&#34;https://github.com/flutter/website/pulls&#34;&gt;pull request&lt;/a&gt;. For simple changes (such as tweaking some text), it&#39;s easiest to make changes using the GitHub UI.&lt;/p&gt; &#xA;&lt;p&gt;If you have an issue with the API docs on &lt;a href=&#34;https://api.flutter.dev&#34;&gt;api.flutter.dev&lt;/a&gt;, please file those issues on the &lt;a href=&#34;https://github.com/flutter/flutter/issues&#34;&gt;flutter/flutter&lt;/a&gt; repo, not on this (flutter/website) repo. The API docs are embedded in Flutter&#39;s source code, so the engineering team handles those.&lt;/p&gt; &#xA;&lt;h2&gt;Before you submit a PR&lt;/h2&gt; &#xA;&lt;p&gt;We love it when the community gets involved in improving our docs! But here are a few notes to keep in mind before you submit a PR:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When triaging issues, we sometimes label an issue with the tag &lt;strong&gt;PRs welcome&lt;/strong&gt;. But we welcome PRs on other issues as well‚Äî it doesn&#39;t have to be tagged with that label.&lt;/li&gt; &#xA; &lt;li&gt;Please don&#39;t run our docs through Grammarly (or similar) and submit those changes as a PR.&lt;/li&gt; &#xA; &lt;li&gt;We follow the &lt;a href=&#34;https://developers.google.com/style&#34;&gt;Google Developer Documentation Style Guidelines&lt;/a&gt; ‚Äî for example, don&#39;t use &#34;i.e.&#34; or &#34;e.g.&#34;, avoid writing in first person, and avoid writing in future tense. You can start with the &lt;a href=&#34;https://developers.google.com/style/highlights&#34;&gt;style guide highlights&lt;/a&gt; or the &lt;a href=&#34;https://developers.google.com/style/word-list&#34;&gt;word list&lt;/a&gt;, or use the search bar that&#39;s at the top of every style guide page.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We truly thank you for your willingness and helpfulness in keeping the website docs up to date!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Before you build this site&lt;/h2&gt; &#xA;&lt;p&gt;For changes beyond simple text and CSS tweaks, we recommend building the site.&lt;/p&gt; &#xA;&lt;h3&gt;1. Get the prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Install the following tools, if you don&#39;t have them already:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;bash&lt;/strong&gt;, the Bourne shell&lt;br&gt; These instructions assume you&#39;re using &lt;code&gt;bash&lt;/code&gt;, and setup might not work if you use another shell.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GNU Make&lt;/strong&gt;&lt;br&gt; On Windows the easiest way to install Make is &lt;code&gt;choco install make&lt;/code&gt;. Other options include using a &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-win10&#34;&gt;subsystem&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;. We use Docker for local dev, tests, and building the site. Install it from &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;https://docs.docker.com/get-docker/&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Firebase CLI&lt;/strong&gt;, for hosting the site locally. One way to get this is to run &lt;code&gt;npm install -g firebase-tools&lt;/code&gt;. For full setup details, read the &lt;a href=&#34;https://firebase.google.com/docs/cli&#34;&gt;Firebase CLI documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. Clone this repo &lt;em&gt;and&lt;/em&gt; its submodules&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This repo has git &lt;em&gt;submodules&lt;/em&gt;, which affects how you clone it. The GitHub documentation has general help on &lt;a href=&#34;https://docs.github.com/en/get-started/quickstart/fork-a-repo&#34;&gt;forking&lt;/a&gt; and &lt;a href=&#34;https://help.github.com/articles/cloning-a-repository&#34;&gt;cloning&lt;/a&gt; repos.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you are working in the Windows desktop environment, make sure you have Git &lt;code&gt;autocrlf&lt;/code&gt; set to &lt;code&gt;input&lt;/code&gt; &lt;strong&gt;before&lt;/strong&gt; initializing the submodules. This ensures that line endings are handled correctly &lt;em&gt;before&lt;/em&gt; any Bash scripts are executed within the submodules. See &lt;a href=&#34;https://github.com/flutter/website/issues/6201&#34;&gt;issue 6201&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re outside of the Flutter organization, we recommend you &lt;strong&gt;create a fork&lt;/strong&gt; of the repo under your own account, and then submit a PR from that fork.&lt;/p&gt; &#xA;&lt;p&gt;Once you have a fork (or you&#39;re a Flutter org member), &lt;em&gt;choose one&lt;/em&gt; of the following submodule-cloning techniques:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repo and its submodule at the same using the &lt;code&gt;--recurse-submodules&lt;/code&gt; option:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone --recurse-submodules https://github.com/&amp;lt;username-or-flutter&amp;gt;/website.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;OR&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you&#39;ve already cloned the repo without its submodule, then run this command from the repo root:&lt;br&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; At any time during development you can use the &lt;code&gt;git submodule&lt;/code&gt; command to refresh submodules:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git pull; git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up your local environment and serving changes&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Optional:&lt;/em&gt; After cloning the repo and its submodules, create a branch for your changes:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git checkout -b &amp;lt;BRANCH_NAME&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the Docker Desktop application isn&#39;t already running, start it. Look at its status icon: if it has an exclamation point (&lt;code&gt;!&lt;/code&gt;), then update Docker Desktop.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the initial setup command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make setup&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Serve the site locally (via &lt;code&gt;docker-compose&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make up&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The site is generated, and then the development server runs in the Docker container, with the generated &lt;code&gt;_site&lt;/code&gt; directory visible locally.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;View your changes in the browser by navigating to &lt;code&gt;http://localhost:4002&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Unless you&#39;re editing files under &lt;code&gt;site-shared&lt;/code&gt;, you can safely ignore &lt;code&gt;ERROR: directory is already being watched&lt;/code&gt; messages. For details, see &lt;a href=&#34;https://github.com/flutter/website/issues/1363&#34;&gt;#1363&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make your changes. The files are updated, and your browser view should update to reflect the changes. You can either edit files locally or use an editor like &lt;code&gt;vim&lt;/code&gt; directly in a shell in the container. To start a container shell, run &lt;code&gt;docker-compose exec site bash&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; If you aren&#39;t seeing the changes you expect, restart the server and rebuild the site from scratch:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make down &amp;amp;&amp;amp; make clean &amp;amp;&amp;amp; make up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;p&gt;In some rare cases you might want to force all running containers down:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker rm -f $(docker ps -aq)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Commit your changes to the branch and submit your PR.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you&#39;ve finished developing, shut down the Docker container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make down&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; To find additional commands, read the &lt;a href=&#34;https://github.com/flutter/website/raw/main/Makefile&#34;&gt;&lt;code&gt;Makefile&lt;/code&gt;&lt;/a&gt;. For example, if you need to debug the Docker infrastructure, you can run &lt;code&gt;make debug&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Creating and/or editing DartPad example code&lt;/h2&gt; &#xA;&lt;p&gt;Most of the code used to create &lt;a href=&#34;https://dartpad.dev&#34;&gt;DartPad&lt;/a&gt; examples is hosted on GitHub. However, this repo also contains some &lt;code&gt;*.dart&lt;/code&gt; files responsible for DartPad example code.&lt;/p&gt; &#xA;&lt;h3&gt;DartPad example code in GitHub gists&lt;/h3&gt; &#xA;&lt;p&gt;A typical DartPad example takes the form of an &lt;code&gt;iframe&lt;/code&gt;, for example, within a codelab&#39;s Markdown file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;iframe&#xA;  src=&#34;{{ site.custom.dartpad.embed-flutter-prefix }}?id=d7b09149ffee2f0535bb0c04d96987f5&#34; &#xA;  style=&#34;border:1px solid lightgrey;margin-top:10px;margin-bottom:25px&#34;&#xA;  frameborder=&#34;no&#34; height=&#34;500&#34; width=&#34;100%&#34;&amp;gt;&#xA;&amp;lt;/iframe&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This &lt;code&gt;iframe&lt;/code&gt; depends on the following GitHub gist URL:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://gist.github.com/d7b09149ffee2f0535bb0c04d96987f5&#34;&gt;https://gist.github.com/d7b09149ffee2f0535bb0c04d96987f5&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For detailed instructions on how to use this approach to DartPad examples, see the &lt;a href=&#34;https://github.com/dart-lang/dart-pad/wiki/Embedding-Guide&#34;&gt;DartPad embedding guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;DartPad example code in this repo&lt;/h3&gt; &#xA;&lt;p&gt;Some DartPad example code remains in this repo:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;src/_packages/dartpad_picker/web/dartpad_picker_main.dart&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This code must be manually compiled, which also regenerates the associated JavaScript file in &lt;code&gt;src/assets/js&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd src/_packages/dartpad_picker&#xA;$ ./compile.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploying to a staging site&lt;/h2&gt; &#xA;&lt;p&gt;You can deploy your local edits to a personal staging site as follows.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If you don&#39;t already have a Firebase project, navigate to the &lt;a href=&#34;https://console.firebase.google.com&#34;&gt;Firebase Console&lt;/a&gt; and create your own Firebase project (for example, &lt;code&gt;my-foo&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In a separate &lt;code&gt;bash&lt;/code&gt; shell, change to the repo directory and initialize Firebase:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npx firebase init&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you created a new project, add it using the &lt;a href=&#34;https://firebase.googleblog.com/2016/07/deploy-to-multiple-environments-with.html&#34;&gt;&lt;code&gt;firebase use&lt;/code&gt; command&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npx firebase use --add&#xA;? Which project do you want to add? &amp;lt;select the project you created&amp;gt;&#xA;? What alias do you want to use for this project? (e.g. staging) my-foo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Tell Firebase that you want to deploy to your project:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npx firebase use my-foo&#xA;Now using alias staging (my-foo)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the site via Docker with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;_site&lt;/code&gt; directory refreshes locally.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deploy to the staging site:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Your personal version of the Flutter website ow deployed to Firebase. Copy the serving URL from the command output.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Refreshing code excerpts&lt;/h2&gt; &#xA;&lt;p&gt;A build that fails with the error &lt;code&gt;=&amp;gt; ERROR: some code excerpts were not refreshed!&lt;/code&gt; means that one or more code excerpts in the markdown file aren&#39;t identical to the code in the corresponding &lt;code&gt;.dart&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;To resolve this error, from the root of the &lt;code&gt;website&lt;/code&gt; directory, run &lt;code&gt;./tool/refresh-code-excerpts.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information see &lt;a href=&#34;https://github.com/dart-lang/site-shared/raw/main/doc/code-excerpts.md&#34;&gt;Code excerpts&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;h2&gt;Writing for flutter.dev&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/dart-lang/site-shared&#34;&gt;site-shared&lt;/a&gt; repo contains infrastructure shared by most of our Dart and Flutter websites. Some of this README is in the &lt;a href=&#34;https://github.com/dart-lang/site-shared/tree/main/doc&#34;&gt;doc&lt;/a&gt; directory in the site-shared repo.&lt;/p&gt; &#xA;&lt;p&gt;For more information on using and writing for this repo, refer to the following docs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dart-lang/site-shared/raw/main/doc/writing-for-dart-and-flutter-websites.md&#34;&gt;Writing for Dart and Flutter websites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dart-lang/site-shared/raw/main/doc/infrastructure.md&#34;&gt;Infrastructure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dart-lang/site-shared/raw/main/doc/markdown.md&#34;&gt;Markdown&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dart-lang/site-shared/raw/main/doc/examples.md&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dart-lang/site-shared/raw/main/doc/code-excerpts.md&#34;&gt;Code excerpts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dart-lang/site-shared/raw/main/doc/images.md&#34;&gt;Images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dart-lang/site-shared/raw/main/doc/mobile-friendly-pages.md&#34;&gt;Mobile friendly pages: tips &amp;amp; tricks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>