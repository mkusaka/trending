<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-21T01:31:58Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dart-lang/build</title>
    <updated>2022-10-21T01:31:58Z</updated>
    <id>tag:github.com,2022-10-21:/dart-lang/build</id>
    <link href="https://github.com/dart-lang/build" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A build system for Dart written in Dart&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dart-lang/build/actions?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/dart-lang/build/workflows/Dart%20CI/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;These packages provide libraries for generating, compiling and serving Dart code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dart-lang/build/raw/master/docs/getting_started.md&#34;&gt;Getting started with build_runner&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dart-lang/build/raw/master/docs/faq.md&#34;&gt;General FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dart-lang/build/raw/master/docs/windows_faq.md&#34;&gt;Windows FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dart-lang/build/raw/master/docs/builder_author_faq.md&#34;&gt;FAQ for Builder authors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dart-lang/build/raw/master/docs/&#34;&gt;Additional Docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/dart-lang/build/raw/master/build/README.md&#34;&gt;build&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Defines the interfaces for creating a &lt;code&gt;Builder&lt;/code&gt; which is a way of doing codegen that is compatible across build systems (pub, bazel, standalone runner).&lt;/p&gt; &#xA;&lt;p&gt;For packages doing code generation this should generally be the only package against which there is a public dependency. Packages may have a dev_dependency on one or more of the other packages.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/dart-lang/build/raw/master/build_config/README.md&#34;&gt;build_config&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Support for parsing &lt;code&gt;build.yaml&lt;/code&gt; files. Used by &lt;code&gt;build_runner&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/dart-lang/build/raw/master/build_modules/README.md&#34;&gt;build_modules&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Support for discovering the sub-modules within packages and creating summaries of those modules. Used by &lt;code&gt;build_web_compilers&lt;/code&gt; but should not be used directly by most users.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/dart-lang/build/raw/master/build_resolvers/README.md&#34;&gt;build_resolvers&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;An implementation of the &lt;code&gt;Resolver&lt;/code&gt; interface to use the analyzer during build steps.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/dart-lang/build/raw/master/build_runner/README.md&#34;&gt;build_runner&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Provides utilities to enact builds and a way to automatically run builds based on configuration.&lt;/p&gt; &#xA;&lt;p&gt;This package should generally be a dev_dependency as it is used to run standalone builds. The only exception would be wrapping the &lt;code&gt;build&lt;/code&gt; and &lt;code&gt;watch&lt;/code&gt; methods with some other package.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/dart-lang/build/raw/master/build_test/README.md&#34;&gt;build_test&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Stub implementations for classes in &lt;code&gt;Build&lt;/code&gt; and some utilities for running instances of builds and checking their outputs.&lt;/p&gt; &#xA;&lt;p&gt;This package generally only be a dev_dependency as it introduces a dependency on package:test. The exception to that would be if you were creating another testing-only package that wraps this one.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/dart-lang/build/raw/master/build_web_compilers/README.md&#34;&gt;build_web_compilers&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Provides the &lt;code&gt;dart2js&lt;/code&gt; and &lt;code&gt;dartdevc&lt;/code&gt; support for your package. To use this package you should add it as a dev_dependency.&lt;/p&gt; &#xA;&lt;p&gt;If you are using the automated build scripts, your project will automatically start being compiled with dartdevc, and you can start developing with chrome without any configuration.&lt;/p&gt; &#xA;&lt;!--&#xA;TODO: scratch_space&#xA;--&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/dart-lang/build/tree/master/example&#34;&gt;example&lt;/a&gt; directory has an example of a build with custom builders which generate outputs into both the source tree and a hidden generated directory. Try a build with &lt;code&gt;dart run build_runner build -o web:deploy&lt;/code&gt; to see what the output looks like.&lt;/p&gt; &#xA;&lt;p&gt;Most projects should not need custom builders.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fluttercommunity/flutter_launcher_icons</title>
    <updated>2022-10-21T01:31:58Z</updated>
    <id>tag:github.com,2022-10-21:/fluttercommunity/flutter_launcher_icons</id>
    <link href="https://github.com/fluttercommunity/flutter_launcher_icons" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter Launcher Icons - A package which simplifies the task of updating your Flutter app&#39;s launcher icon. Fully flexible, allowing you to choose what platform you wish to update the launcher icon for and if you want, the option to keep your old launcher icon in case you want to revert back sometime in the future. Maintainer: @MarkOSullivan94&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Launcher Icons&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluttercommunity/community&#34;&gt;&lt;img src=&#34;https://fluttercommunity.dev/_github/header/flutter_launcher_icons&#34; alt=&#34;Flutter Community: flutter_launcher_icons&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/MarkOSullivan94/flutter_launcher_icons&#34;&gt;&lt;img src=&#34;https://travis-ci.org/fluttercommunity/flutter_launcher_icons.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dartlang.org/packages/flutter_launcher_icons&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_launcher_icons.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A command-line tool which simplifies the task of updating your Flutter app&#39;s launcher icon. Fully flexible, allowing you to choose what platform you wish to update the launcher icon for and if you want, the option to keep your old launcher icon in case you want to revert back sometime in the future.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìñ&lt;/span&gt; Guide&lt;/h2&gt; &#xA;&lt;h3&gt;1. Setup the config file&lt;/h3&gt; &#xA;&lt;p&gt;Add your Flutter Launcher Icons configuration to your &lt;code&gt;pubspec.yaml&lt;/code&gt; or create a new config file called &lt;code&gt;flutter_launcher_icons.yaml&lt;/code&gt;. An example is shown below. More complex examples &lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/tree/master/example&#34;&gt;can be found in the example projects&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dev_dependencies:&#xA;  flutter_launcher_icons: &#34;^0.11.0&#34;&#xA;&#xA;flutter_icons:&#xA;  android: &#34;launcher_icon&#34;&#xA;  ios: true&#xA;  image_path: &#34;assets/icon/icon.png&#34;&#xA;  min_sdk_android: 21 # android min sdk min:16, default 21&#xA;  web:&#xA;    generate: true&#xA;    image_path: &#34;path/to/image.png&#34;&#xA;    background_color: &#34;#hexcode&#34;&#xA;    theme_color: &#34;#hexcode&#34;&#xA;  windows:&#xA;    generate: true&#xA;    image_path: &#34;path/to/image.png&#34;&#xA;    icon_size: 48 # min:48, max:256, default: 48&#xA;  macos:&#xA;    generate: true&#xA;    image_path: &#34;path/to/image.png&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you name your configuration file something other than &lt;code&gt;flutter_launcher_icons.yaml&lt;/code&gt; or &lt;code&gt;pubspec.yaml&lt;/code&gt; you will need to specify the name of the file when running the package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flutter pub get&#xA;flutter pub run flutter_launcher_icons -f &amp;lt;your config file name here&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: If you are not using the existing &lt;code&gt;pubspec.yaml&lt;/code&gt; ensure that your config file is located in the same directory as it.&lt;/p&gt; &#xA;&lt;h3&gt;2. Run the package&lt;/h3&gt; &#xA;&lt;p&gt;After setting up the configuration, all that is left to do is run the package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flutter pub get&#xA;flutter pub run flutter_launcher_icons&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you encounter any issues &lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/issues&#34;&gt;please report them here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In the above configuration, the package is setup to replace the existing launcher icons in both the Android and iOS project with the icon located in the image path specified above and given the name &#34;launcher_icon&#34; in the Android project and &#34;Example-Icon&#34; in the iOS project.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üîç&lt;/span&gt; Attributes&lt;/h2&gt; &#xA;&lt;p&gt;Shown below is the full list of attributes which you can specify within your Flutter Launcher Icons configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Global&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;image_path&lt;/code&gt;: The location of the icon image file which you want to use as the app launcher icon.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;android&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Override the default existing Flutter launcher icon for the platform specified&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Ignore making launcher icons for this platform&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;icon/path/here.png&lt;/code&gt;: This will generate a new launcher icons for the platform with the name you specify, without removing the old default existing Flutter launcher icon.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;image_path&lt;/code&gt;: The location of the icon image file which you want to use as the app launcher icon&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;image_path_android&lt;/code&gt;: The location of the icon image file specific for Android platform (optional - if not defined then the image_path is used)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;min_sdk_android&lt;/code&gt;: Specify android min sdk value &lt;strong&gt;The next two attributes are only used when generating Android launcher icon&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;adaptive_icon_background&lt;/code&gt;: The color (E.g. &lt;code&gt;&#34;#ffffff&#34;&lt;/code&gt;) or image asset (E.g. &lt;code&gt;&#34;assets/images/christmas-background.png&#34;&lt;/code&gt;) which will be used to fill out the background of the adaptive icon.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;adaptive_icon_foreground&lt;/code&gt;: The image asset which will be used for the icon foreground of the adaptive icon &lt;em&gt;Note: Adaptive Icons will only be generated when both adaptive_icon_background and adaptive_icon_foreground are specified. (the image_path is not automatically taken as foreground)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;IOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ios&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Override the default existing Flutter launcher icon for the platform specified&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Ignore making launcher icons for this platform&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;icon/path/here.png&lt;/code&gt;: This will generate a new launcher icons for the platform with the name you specify, without removing the old default existing Flutter launcher icon.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;image_path_ios&lt;/code&gt;: The location of the icon image file specific for iOS platform (optional - if not defined then the image_path is used)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;remove_alpha_ios&lt;/code&gt;: Removes alpha channel for IOS icons&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;web&lt;/code&gt;: Add web related configs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;generate&lt;/code&gt;: Specifies weather to generate icons for this platform or not&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;image_path&lt;/code&gt;: Path to web icon.png&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;background_color&lt;/code&gt;: Updates &lt;em&gt;background_color&lt;/em&gt; in &lt;code&gt;web/manifest.json&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;theme_color&lt;/code&gt;: Updates &lt;em&gt;theme_color&lt;/em&gt; in &lt;code&gt;web/manifest.json&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;windows&lt;/code&gt;: Add Windows related configs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;generate&lt;/code&gt;: Specifies weather to generate icons for Windows platform or not&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;image_path&lt;/code&gt;: Path to web icon.png&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;icon_size&lt;/code&gt;: Windows app icon size. Icon size should be within this constrains &lt;em&gt;48&amp;lt;=icon_size&amp;lt;=256, defaults to 48&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;macos&lt;/code&gt;: Add MacOS related configs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;generate&lt;/code&gt;: Specifies weather to generate icons for MacOS platform or not&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;image_path&lt;/code&gt;: Path to macos icon.png file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: iOS icons should &lt;a href=&#34;https://stackoverflow.com/questions/26014461/black-border-on-my-ios-icon&#34;&gt;fill the entire image&lt;/a&gt; and not contain transparent borders.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Flavor support&lt;/h2&gt; &#xA;&lt;p&gt;Create a Flutter Launcher Icons configuration file for your flavor. The config file is called &lt;code&gt;flutter_launcher_icons-&amp;lt;flavor&amp;gt;.yaml&lt;/code&gt; by replacing &lt;code&gt;&amp;lt;flavor&amp;gt;&lt;/code&gt; by the name of your desired flavor.&lt;/p&gt; &#xA;&lt;p&gt;The configuration file format is the same.&lt;/p&gt; &#xA;&lt;p&gt;An example project with flavor support enabled &lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/tree/master/example/flavors&#34;&gt;has been added to the examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ùì&lt;/span&gt; Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;Listed a couple common issues with solutions for them&lt;/p&gt; &#xA;&lt;h3&gt;Generated icon color is different from the original icon&lt;/h3&gt; &#xA;&lt;p&gt;Caused by an update to the image dependency which is used by Flutter Launcher Icons.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Use #AARRGGBB for colors instead of ##AABBGGRR, to be compatible with Flutter image class.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/issues/98&#34;&gt;Related issue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Image foreground is too big / too small&lt;/h3&gt; &#xA;&lt;p&gt;For best results try and use a foreground image which has padding much like &lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/raw/master/example/default_example/assets/images/icon-foreground-432x432.png&#34;&gt;the one in the example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/issues/96&#34;&gt;Related issue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Dependency incompatible&lt;/h3&gt; &#xA;&lt;p&gt;You may receive a message similar to the following&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;Because flutter_launcher_icons &amp;gt;=0.9.0 depends on args 2.0.0 and flutter_native_splash 1.2.0 depends on args ^2.1.1, flutter_launcher_icons &amp;gt;=0.9.0 is incompatible with flutter_native_splash 1.2.0.&#xA;And because no versions of flutter_native_splash match &amp;gt;1.2.0 &amp;lt;2.0.0, flutter_launcher_icons &amp;gt;=0.9.0 is incompatible with flutter_native_splash ^1.2.0.&#xA;So, because enstack depends on both flutter_native_splash ^1.2.0 and flutter_launcher_icons ^0.9.0, version solving failed.&#xA;pub get failed (1; So, because enstack depends on both flutter_native_splash ^1.2.0 and flutter_launcher_icons ^0.9.0, version solving failed.)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a quick fix, you can temporarily override all references to a dependency: &lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/issues/262#issuecomment-879872076&#34;&gt;See here for an example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üëÄ&lt;/span&gt; Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RjNAxwcP3Tc&#34;&gt;&lt;img src=&#34;https://i.imgur.com/R28hqdz.png&#34; alt=&#34;Video Example&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: This is showing a very old version (v0.0.5)&lt;/p&gt; &#xA;&lt;h3&gt;Special thanks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks to Brendan Duncan for the underlying &lt;a href=&#34;https://pub.dev/packages/image&#34;&gt;image package&lt;/a&gt; to transform the icons.&lt;/li&gt; &#xA; &lt;li&gt;Big thank you to all the contributors to the project. Every PR / reported issue is greatly appreciated!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>