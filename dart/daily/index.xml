<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-01T01:38:24Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>flutter/flutter</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/flutter/flutter</id>
    <link href="https://github.com/flutter/flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter makes it easy and fast to build beautiful apps for mobile and beyond&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://flutter.dev&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/archived-master/src/_assets/image/flutter-lockup-bg.jpg?raw=true&#34; alt=&#34;Flutter logo&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/flutter/flutter/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/flutter/flutter.svg?sanitize=true&#34; alt=&#34;Build Status - Cirrus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flutter/flutter/wiki/Chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/608014603317936148&#34; alt=&#34;Discord badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=flutterdev&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/flutterdev.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter handle&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/5631&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5631/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flutter is Google&#39;s SDK for crafting beautiful, fast user experiences for mobile, web, and desktop from a single codebase. Flutter works with existing code, is used by developers and organizations around the world, and is free and open source.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/get-started/&#34;&gt;Install Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs&#34;&gt;Flutter documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/flutter/wiki&#34;&gt;Development wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/flutter/raw/master/CONTRIBUTING.md&#34;&gt;Contributing to Flutter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For announcements about new releases, follow the &lt;a href=&#34;https://groups.google.com/forum/#!forum/flutter-announce&#34;&gt;flutter-announce@googlegroups.com&lt;/a&gt; mailing list. Our documentation also tracks &lt;a href=&#34;https://flutter.dev/docs/release/breaking-changes&#34;&gt;breaking changes&lt;/a&gt; across releases.&lt;/p&gt; &#xA;&lt;h2&gt;Terms of service&lt;/h2&gt; &#xA;&lt;p&gt;The Flutter tool may occasionally download resources from Google servers. By downloading or using the Flutter SDK you agree to the Google Terms of Service: &lt;a href=&#34;https://policies.google.com/terms&#34;&gt;https://policies.google.com/terms&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example, when installed from GitHub (as opposed to from a prepackaged archive), the Flutter tool will download the Dart SDK from Google servers immediately when first run, as it is used to execute the &lt;code&gt;flutter&lt;/code&gt; tool itself. This will also occur when Flutter is upgraded (e.g. by running the &lt;code&gt;flutter upgrade&lt;/code&gt; command).&lt;/p&gt; &#xA;&lt;h2&gt;About Flutter&lt;/h2&gt; &#xA;&lt;p&gt;We think Flutter will help you create beautiful, fast apps, with a productive, extensible and open development model, whether you&#39;re targeting iOS or Android, web, Windows, macOS, Linux or embedding it as the UI toolkit for a platform of your choice.&lt;/p&gt; &#xA;&lt;h3&gt;Beautiful user experiences&lt;/h3&gt; &#xA;&lt;p&gt;We want to enable designers to deliver their full creative vision without being forced to water it down due to limitations of the underlying framework. Flutter&#39;s &lt;a href=&#34;https://flutter.dev/docs/resources/inside-flutter&#34;&gt;layered architecture&lt;/a&gt; gives you control over every pixel on the screen and its powerful compositing capabilities let you overlay and animate graphics, video, text, and controls without limitation. Flutter includes a full &lt;a href=&#34;https://flutter.dev/widgets/&#34;&gt;set of widgets&lt;/a&gt; that deliver pixel-perfect experiences whether you&#39;re building for iOS (&lt;a href=&#34;https://docs.flutter.dev/development/ui/widgets/cupertino&#34;&gt;Cupertino&lt;/a&gt;) or Android (&lt;a href=&#34;https://docs.flutter.dev/development/ui/widgets/material&#34;&gt;Material&lt;/a&gt;), along with support for customizing or creating entirely new visual components.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/main/src/assets/images/docs/homepage/reflectly-hero-600px.png?raw=true&#34; alt=&#34;Reflectly hero image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fast results&lt;/h3&gt; &#xA;&lt;p&gt;Flutter is fast. It&#39;s powered by the same hardware-accelerated 2D graphics library that underpins Chrome and Android: &lt;a href=&#34;https://skia.org/&#34;&gt;Skia&lt;/a&gt;. We architected Flutter to support glitch-free, jank-free graphics at the native speed of your device. Flutter code is powered by the world-class &lt;a href=&#34;https://dart.dev/&#34;&gt;Dart platform&lt;/a&gt;, which enables compilation to 32-bit and 64-bit ARM machine code for iOS and Android, as well as JavaScript for the web and Intel x64 for desktop devices.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/main/src/assets/images/docs/homepage/dart-diagram-small.png?raw=true&#34; alt=&#34;Dart diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Productive development&lt;/h3&gt; &#xA;&lt;p&gt;Flutter offers stateful hot reload, allowing you to make changes to your code and see the results instantly without restarting your app or losing its state.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.flutter.dev/development/tools/hot-reload&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/main/src/assets/images/docs/tools/android-studio/hot-reload.gif?raw=true&#34; alt=&#34;Hot reload animation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Extensible and open model&lt;/h3&gt; &#xA;&lt;p&gt;Flutter works with any development tool (or none at all), and also includes editor plug-ins for both &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter&#34;&gt;Visual Studio Code&lt;/a&gt; and &lt;a href=&#34;https://plugins.jetbrains.com/plugin/9212-flutter&#34;&gt;IntelliJ / Android Studio&lt;/a&gt;. Flutter provides &lt;a href=&#34;https://pub.dev/flutter&#34;&gt;tens of thousands of packages&lt;/a&gt; to speed your development, regardless of your target platform. And accessing other native code is easy, with support for both &lt;a href=&#34;https://flutter.dev/docs/development/platform-integration/c-interop&#34;&gt;FFI&lt;/a&gt; and &lt;a href=&#34;https://flutter.dev/docs/development/platform-integration/platform-channels&#34;&gt;platform-specific APIs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Flutter is a fully open-source project, and we welcome contributions. Information on how to get started can be found in our &lt;a href=&#34;https://raw.githubusercontent.com/flutter/flutter/master/CONTRIBUTING.md&#34;&gt;contributor guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>iampawan/FlutterExampleApps</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/iampawan/FlutterExampleApps</id>
    <link href="https://github.com/iampawan/FlutterExampleApps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[Example APPS] Basic Flutter apps, for flutter devs.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/fe.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Show some &lt;span&gt;❤️&lt;/span&gt; and star the repo to support the project&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterExampleApps&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/iampawan/FlutterExampleApps.svg?style=social&amp;amp;label=Star&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iampawan/FlutterExampleApps/fork&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/iampawan/FlutterExampleApps.svg?style=social&amp;amp;label=Fork&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iampawan/FlutterExampleApps&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/iampawan/FlutterExampleApps.svg?style=social&amp;amp;label=Watch&#34; alt=&#34;GitHub watchers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iampawan/FlutterExampleApps&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/followers/iampawan.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;GitHub followers&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://twitter.com/imthepk&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/imthepk.svg?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository containing links of all the example apps demonstrating features/functionality/integrations in &lt;a href=&#34;https://flutter.io/&#34;&gt;Flutter&lt;/a&gt; application development.&lt;/p&gt; &#xA;&lt;h2&gt;YouTube Channel&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/c/MTechViral&#34;&gt;MTechViral&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Facebook Group&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.facebook.com/groups/425920117856409/&#34;&gt;Let&#39;s Flutter With Dart&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Some Screenshots&lt;/h3&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://i.imgur.com/50tJKqU.png&#34;&gt; &lt;img src=&#34;https://i.imgur.com/vNPjDMs.png&#34;&gt; &lt;img src=&#34;https://i.imgur.com/xbV5OAQ.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/whatsapp.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://thumbs.gfycat.com/UnselfishAlertIceblueredtopzebra-size_restricted.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://thumbs.gfycat.com/BadPrestigiousChrysalis-size_restricted.gif&#34; height=&#34;300em&#34;&gt; &lt;img src=&#34;https://thumbs.gfycat.com/GoldenCaringBurro-size_restricted.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/flute1.png&#34; height=&#34;300em&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/flute3.png&#34; height=&#34;300em&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/pmdb.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/tic.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://thumbs.gfycat.com/MajesticWeeKangaroo-size_restricted.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://thumbs.gfycat.com/DismalEmbellishedChicken-size_restricted.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/imSanjaySoni/BMI-Calculator-with-flutter/master/one.png&#34; height=&#34;300em&#34; margin-left=&#34;5px&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Flutter Example Apps (Source Code + YouTube Link)&lt;/h2&gt; &#xA;&lt;h2&gt;Clones/Apps&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWhatsAppClone&#34;&gt;Flutter WhatsApp Clone App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=2Tyrofn6zPg&amp;amp;t=25s&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Instagram-UI-Clone&#34;&gt;Flutter Instagram Clone App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/Z9fsyhKHWDg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/PokemonApp&#34;&gt;Flutter Build a Beautiful Pokemon App - English&lt;/a&gt;&lt;a href=&#34;https://youtu.be/yeXJqZCiwTQ&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/PokemonApp&#34;&gt;Flutter Build a Beautiful Pokemon App - Hindi&lt;/a&gt;&lt;a href=&#34;https://youtu.be/0K3Zq3XqdAo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/GOT2019&#34;&gt;Flutter Responsive Game of Thrones Flutter App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/c0-dC74Sw9Y&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterQuizApp&#34;&gt;Flutter: Quiz App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/02sRV-eGGo0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterStackOverflowApp&#34;&gt;Flutter StackOverflow App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/-MBWdZ1u8tQ&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterGenderPredictor&#34;&gt;Flutter Gender Prediction App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/o1FSQOeDcYE&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Cocktail-App&#34;&gt;Flutter Cocktail App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/1b06d2Ld8C4&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/akMH3UOvYu8&#34;&gt;Flutter Gif Search Engine App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/akMH3UOvYu8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/_65Ixfu9nSo&#34;&gt;Flutter QuotesX App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/_65Ixfu9nSo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Flutter For Web / Desktop / Responsive&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterForWebDemoApp&#34;&gt;Flutter For Web: Getting Started | Migrating PokemonApp to Web&lt;/a&gt;&lt;a href=&#34;https://youtu.be/smwtgvpK9FU&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/MyPortfolio&#34;&gt;Flutter Web: Making a Responsive Portfolio App | Part 1&lt;/a&gt;&lt;a href=&#34;https://youtu.be/QAHqlsAky_4&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://mtechviral.com/myportfolio/#/&#34;&gt;Flutter Web: Deploying Portfolio App To Github.IO | Peanut Tutorial | Part 2&lt;/a&gt;&lt;a href=&#34;https://youtu.be/ajSliNbczi0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://mtechviral.com/Flutter-UI-Kit/&#34;&gt;Flutter Web: Deploying Flutter UIKit to Github Pages | Peanut Tutorial&lt;/a&gt;&lt;a href=&#34;https://youtu.be/TJDSQBm51cI&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://mtechviral.com/Flutter-UI-Kit/&#34;&gt;Flutter Web : Flutter 1.10 Adding Web Support For New &amp;amp; Existing Projects&lt;/a&gt;&lt;a href=&#34;https://youtu.be/8WJL2dYrLF4&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Cocktail-App/tree/dev&#34;&gt;Flutter Web Desktop Cocktail App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/l4myDi8hiQs&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/GOT_FLUTTER_PWA&#34;&gt;Flutter PWA Tutorial - 1/2&lt;/a&gt;&lt;a href=&#34;https://youtu.be/i6GS3lCkAY8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/GOT_FLUTTER_PWA&#34;&gt;Flutter Official PWA Support - 2/2&lt;/a&gt;&lt;a href=&#34;https://youtu.be/abKzgvl-Ceg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/PortfolioX&#34;&gt;Flutter Responsive Portfolio App | Flutter Mobile, Web, &amp;amp; Desktop | SpeedX Code&lt;/a&gt;&lt;a href=&#34;https://youtu.be/0GjsJEF9MaA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Flutter Designs&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/ZcS66NNbTGw&#34;&gt;Adobe XD Flutter Early Access Tutorial | Getting Started&lt;/a&gt;&lt;a href=&#34;https://youtu.be/ZcS66NNbTGw&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FUI01-NikeWebFlutter&#34;&gt;Beautiful Nike Web Design Concept With Flutter&lt;/a&gt;&lt;a href=&#34;https://youtu.be/GTL97K_xLOs&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Beginners &amp;amp; Intermediate&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/GDG-DevFest-App&#34;&gt;Flutter Devfest App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gw272X66qvU&amp;amp;list=PLR2qQy0Zxs_Vju3tKnYgzbAhywHHPuDjQ&amp;amp;index=2&amp;amp;t=0s&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWithFirebase/tree/mlkit&#34;&gt;Flutter Firebase MLKIT App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/vT6gNFE0GBw&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterTicTacToe&#34;&gt;Flutter Tic Tac Toe Game&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=u1KD6Kz0PIQ&amp;amp;t=25s&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Music-Player&#34;&gt;Flutter Music Player App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=eWicXD5vkyg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flute-Music-Player&#34;&gt;Flute Music Plugin&lt;/a&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flute_music_player&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/dart.png&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWithFirebase&#34;&gt;Flutter Firebase Setup&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=8M-Fa239Hy4&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWithFirebase&#34;&gt;Flutter Firebase CRUD&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HzKdJekhXoc&amp;amp;t=25s&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterBottomSheet&#34;&gt;Flutter Bottom Sheet App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KpR5fQx_V2c&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/flutter_websocket&#34;&gt;Flutter WebSockets App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=S0KeKqQxDAQ&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Sqflite-MVP&#34;&gt;Flutter Sqflite MVP App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Yzfxqd9-6QY&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/CryptoApp&#34;&gt;Flutter Crypto App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=cPlaYS4eqe4&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Redux-Tutorial-Flutter&#34;&gt;Flutter Redux App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=X8B-UzqEaWc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/frenzychatapp&#34;&gt;Flutter Frenzy Chat App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Yd-bgqe3DxA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/fluttercalculator&#34;&gt;Flutter Calculator&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Ss1HkZ3LnRY&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/flutterlogin&#34;&gt;Flutter Login Page App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/iYH2jzUM1Nc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterLoginPageBloc&#34;&gt;Flutter Login Page Bloc Pattern App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/96ykD0sacRA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=iYH2jzUM1Nc&#34;&gt;Flutter Beautiful Material Navigation Drawer&lt;/a&gt;&lt;a href=&#34;https://youtu.be/JWuXj0BY_s4&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5_zQ6rjv00s&#34;&gt;Flutter Material Design Widgets - | Tabs | BottomNavigationBar | Stepper | Snackbar etc App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5_zQ6rjv00s&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kVow5q53WG8&#34;&gt;Flutter Git Quick Start Guide&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kVow5q53WG8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=bTwTKwK3hGc&#34;&gt;Flutter Local JSON App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=bTwTKwK3hGc8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aIJU68Phi1w&#34;&gt;Flutter Fetching App Using HTTP&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aIJU68Phi1w&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AzOONgeCVKg&#34;&gt;Flutter Swipe to delete ListView App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AzOONgeCVKg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fqqY3NBVVHA&#34;&gt;Flutter Line Clipping App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fqqY3NBVVHA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LnUhNTUl3Mc&#34;&gt;Flutter Bezier Curve App&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LnUhNTUl3Mc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huextrat/CryptoShadow&#34;&gt;Flutter CryptoShadow&lt;/a&gt; &lt;a href=&#34;https://github.com/huextrat/&#34;&gt;Hugo EXTRAT&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterLifeCycleAndOrientation&#34;&gt;Flutter LifeCycle And Orientation&lt;/a&gt;&lt;a href=&#34;https://youtu.be/f9m_Wc4K5v0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutKart&#34;&gt;Flutter Splash Screen - FlutKart&lt;/a&gt;&lt;a href=&#34;https://youtu.be/FNBuo-7zg2Q&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;&#34;&gt;Flutter Real Splash Screens for both OS&lt;/a&gt;&lt;a href=&#34;https://youtu.be/BjV4RMkVY6w&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Walkthrough&#34;&gt;Flutter Walkthrough Package &amp;amp; App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/iOqtl8-iDE0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_walkthrough&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/dart.png&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterForms&#34;&gt;Flutter Validating Form - Login Form&lt;/a&gt;&lt;a href=&#34;https://youtu.be/RlBfFswZ94U&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterAnimatedAgeCalculatorApp&#34;&gt;Flutter Age Calculator App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/6y9Ce76amjY&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterCollapsingToolbar&#34;&gt;Flutter Collapsing Toolbar Layout&lt;/a&gt;&lt;a href=&#34;https://youtu.be/e5bklM7YfIo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/flutter_pull_to_refresh&#34;&gt;Flutter PullToRefresh ListView&lt;/a&gt;&lt;a href=&#34;https://youtu.be/5n8xP4ukzlM&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/flutter_connectivity&#34;&gt;Flutter Internet Connectivity&lt;/a&gt;&lt;a href=&#34;https://youtu.be/QxE-hEa16gA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWhatsAppClone&#34;&gt;Flutter Access Camera App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/ZkpHzbOm-s0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWithFirebase&#34;&gt;Firebase Build Beautiful Wallpaper App P1&lt;/a&gt;&lt;a href=&#34;https://youtu.be/SrGP1BdkYpk&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWithFirebase&#34;&gt;Flutter: Integrate Ads | Create Admob Account P2&lt;/a&gt;&lt;a href=&#34;https://youtu.be/qDa8nlLkMF8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWithFirebase&#34;&gt;Flutter: Integrate Analytics | Firebase Analytics | Handling Library Issues P3&lt;/a&gt;&lt;a href=&#34;https://youtu.be/SXuB9oa3t9A&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWithFirebase&#34;&gt;Flutter: Prepare App For Release | App Signing | Create JKS P4&lt;/a&gt;&lt;a href=&#34;https://youtu.be/nGvPNG-f1-o&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWithFirebase&#34;&gt;Flutter: Publish App to PlayStore | Fully Explained Demo P5&lt;/a&gt;&lt;a href=&#34;https://youtu.be/qpruGmff5Fw&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterExpandableAndStickyHeaderList&#34;&gt;Flutter: Expandable &amp;amp; Sticky Header List&lt;/a&gt;&lt;a href=&#34;https://youtu.be/vDgdzfcFBy0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterBackdrop&#34;&gt;Flutter: Backdrop Widget Tutorial | Material Design 2.0&lt;/a&gt;&lt;a href=&#34;https://youtu.be/LcEyi1_1bAw&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterQRScanner-App&#34;&gt;Flutter: QR Code Scanner App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/siuJhQ9BqsU&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterGoogleMaps&#34;&gt;Flutter: Integrate Google Maps Tutorial&lt;/a&gt;&lt;a href=&#34;https://youtu.be/2PVHzuuN9Ww&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/sCb44rmNMfM&#34;&gt;VSCode Tips &amp;amp; Tricks | Flutter | 20 Useful Shortcuts&lt;/a&gt;&lt;a href=&#34;https://youtu.be/sCb44rmNMfM&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/fYBCzgBRkb4&#34;&gt;Flutter: Handle Back Button Pressed | WillPopScope Widget&lt;/a&gt;&lt;a href=&#34;https://youtu.be/fYBCzgBRkb4&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=xyVXbNMJoIk&#34;&gt;Flutter: Programatically Check Whether Debug OR Release Mode&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=xyVXbNMJoIk&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-UI-Kit&#34;&gt;Flutter: Make New Gmail Like FloatingActionButton&lt;/a&gt;&lt;a href=&#34;https://youtu.be/fiOAAiZ41Zs&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Routes&#34;&gt;Routes in Flutter | Push | PushNamed | GenerateRoute | Unknown Route&lt;/a&gt;&lt;a href=&#34;https://youtu.be/vyXWqOmkxe8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/data_connection_checker&#34;&gt;Flutter: Data Connection Checker | Wifi connected but no internet&lt;/a&gt;&lt;a href=&#34;https://youtu.be/u_Xyqo6lhFE&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/dRbmjsqERVw&#34;&gt;Flutter: Android App Bundle Step By Step Guide&lt;/a&gt;&lt;a href=&#34;https://youtu.be/dRbmjsqERVw&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter_Click_Pick_Crop_Compress&#34;&gt;Flutter: Click | Pick | Crop | Compress an Image | AndroidX&lt;/a&gt;&lt;a href=&#34;https://youtu.be/hV9gY01m61Y&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterUtilsCollection&#34;&gt;Flutter: Overriding Dependencies | Solving Version Conflicts&lt;/a&gt;&lt;a href=&#34;https://youtu.be/Nn6kle_DThM&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/GDG-DevFest-App&#34;&gt;Flutter: Styling Google Maps For Multiple Themes | Android &amp;amp; iOS | Official Plugin&lt;/a&gt;&lt;a href=&#34;https://youtu.be/LWAAOyQknvY&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWhatsAppClone&#34;&gt;Flutter: WhatsApp Clone Status View | Story View Feature Tutorial&lt;/a&gt;&lt;a href=&#34;https://youtu.be/qDqRbai9VmU&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWhatsAppClone&#34;&gt;Making Ubuntu like terminal in Flutter&lt;/a&gt;&lt;a href=&#34;https://youtu.be/kKsVdFPcoNY&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/renjingkai/WestlifeUsingFlutter&#34;&gt;Westlife Using Flutter&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Advanced&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/fluttersignatureview&#34;&gt;Flutter Advanced: Signature App (CustomPainter)&lt;/a&gt;&lt;a href=&#34;https://youtu.be/zu-do2luSAo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Dynamic-Theming&#34;&gt;Flutter Advanced: Dynamic Theming | Change Theme At Runtime&lt;/a&gt;&lt;a href=&#34;https://youtu.be/XdUMp9k5JCI&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/StateExperiments&#34;&gt;Flutter Advanced: Inherited Widget &amp;amp; Scoped Model Explained | Part - 1&lt;/a&gt;&lt;a href=&#34;https://youtu.be/j-27MZwRbFw&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/StateExperiments&#34;&gt;Flutter Advanced: BloC Pattern Explained | Part - 2&lt;/a&gt;&lt;a href=&#34;https://youtu.be/_6yXf7kcA8A&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterShoppingCart&#34;&gt;Flutter Advanced Redux: Shopping Cart App From Scratch | Redux Time Travel&lt;/a&gt;&lt;a href=&#34;https://youtu.be/yBH6wIzVhSg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterToastPlugin&#34;&gt;Flutter Advanced: Build Your First Plugin For Android &amp;amp; iOS | Flutter Toasts&lt;/a&gt;&lt;a href=&#34;https://youtu.be/TZRpCGQsBCw&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_toast_pk&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/dart.png&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterDownloadFilesWithProgress&#34;&gt;Flutter Advanced: Download Large Files (Pdf, Json, Image etc) With Progress %&lt;/a&gt;&lt;a href=&#34;https://youtu.be/Gru7swUQqsg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/JJ4MvlXooCU&#34;&gt;Flutter Advanced: Async Programming | Future | Async Await&lt;/a&gt;&lt;a href=&#34;https://youtu.be/JJ4MvlXooCU&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/iua7TjbeRHA&#34;&gt;Flutter Advanced: Semantic Versioning&lt;/a&gt;&lt;a href=&#34;https://youtu.be/iua7TjbeRHA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/FPcl1tu0gDs&#34;&gt;Flutter Advanced : Build Beautiful Material Search App or Integrate it with Any App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/FPcl1tu0gDs&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/AddFlutter2ExistingAndroidApp&#34;&gt;Flutter Advanced : Add Flutter To Existing Or New Android App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/Gw211RZGVw8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/LSljItPM_UE&#34;&gt;Flutter Advanced: The BloC Pattern on Whiteboard&lt;/a&gt;&lt;a href=&#34;https://youtu.be/LSljItPM_UE&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterLoginPageBloc&#34;&gt;Flutter Advanced Login Page Bloc Pattern App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/96ykD0sacRA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterAuthFaceID-FingerPrint&#34;&gt;Flutter Advanced Face ID &amp;amp; Touch ID/Fingerprint Local Auth App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/w0-UB7rx8TA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-UI-Kit&#34;&gt;Flutter Advanced Securing your Flutter Apps | Prevent Screenshot App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/iVNTTX5GrUc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterAR&#34;&gt;Flutter Advanced: ARCore Tutorial | Sceneform | Exploring New Possibilities&lt;/a&gt;&lt;a href=&#34;https://youtu.be/Gf-Qu29RLUo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterAR&#34;&gt;Flutter Advanced: ARKit Tutorial | iOS&lt;/a&gt;&lt;a href=&#34;https://youtu.be/aHgzAfwxMQk&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterPDFViewer&#34;&gt;Flutter Advanced: PDF Viewer Tutorial Android &amp;amp; IOS | From URL &amp;amp; Asset&lt;/a&gt;&lt;a href=&#34;https://youtu.be/5S9qjreGFNc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterAutoJSONModel&#34;&gt;Flutter Advanced: Auto Create Models from JSON | Serializable&lt;/a&gt;&lt;a href=&#34;https://youtu.be/hAbXdcHpx_U&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterBackgroundFetch&#34;&gt;Flutter Advanced: Background Fetch | Run code in the background Android &amp;amp; iOS&lt;/a&gt;&lt;a href=&#34;https://youtu.be/NhlPK10_k9E&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterUtilsCollection&#34;&gt;Flutter Advanced: Lazy Loading ListViews | Load More Data On Scroll&lt;/a&gt;&lt;a href=&#34;https://youtu.be/JaVjHDdoVOg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterUtilsCollection&#34;&gt;Flutter Advanced: Find Widget&#39;s Size &amp;amp; Position Using Render Object&lt;/a&gt;&lt;a href=&#34;https://youtu.be/_uMLR7D4npE&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/TFLite-Flutter&#34;&gt;Flutter Advanced: TensorFlow Lite | Object Detection | YoloV2 | SSD Tutorial&lt;/a&gt;&lt;a href=&#34;https://youtu.be/0pYh7Js4GM8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterUtilsCollection&#34;&gt;Flutter Zoom In Zoom Out And Rotate&lt;/a&gt;&lt;a href=&#34;https://youtu.be/bYrZnVGyYc8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Flutter Animation Series&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/AnimationSeries&#34;&gt;Flutter: Animation Series || Episode 1 || Basic Animation &lt;/a&gt;&lt;a href=&#34;https://youtu.be/UJVO-H0wfVU&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/AnimationSeries&#34;&gt;Flutter Animation: Ep 2 || Animation Series || Easing &lt;/a&gt;&lt;a href=&#34;https://youtu.be/kNVkC99p3Ho&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/AnimationSeries&#34;&gt;Flutter Animation: Ep 3 || Animation Series || Brick Animations&lt;/a&gt;&lt;a href=&#34;https://youtu.be/5ANXJjVX3t8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlipperWidge&#34;&gt;Flutter: Animation Series Ep 4 | Flipper Widget&lt;/a&gt;&lt;a href=&#34;https://youtu.be/R7sOcdIeMKQ&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterFlare-Basic&#34;&gt;Flutter Flare 1.0 : Getting Started With 2D Animations&lt;/a&gt;&lt;a href=&#34;https://youtu.be/eeXdA6gow3s&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterChristmasTree&#34;&gt;Flutter - Making a Christmas Tree 🎄| Tween Animation&lt;/a&gt;&lt;a href=&#34;https://youtu.be/QsY2LKcivqk&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Flutter Library Series&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Best-Packages&#34;&gt;Awesome HTTP Inspector Tool | Flutter Library of the Week | EP-01 &lt;/a&gt;&lt;a href=&#34;https://youtu.be/YsvFnNiKn_M&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Best-Packages&#34;&gt;Awesome Animated Loaders | Flutter Library of the Week | EP-02 &lt;/a&gt;&lt;a href=&#34;https://youtu.be/k4fFfT8vli0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Best-Packages&#34;&gt;Awesome Onboarding Experience | Flutter Library of the Week | EP-03&lt;/a&gt;&lt;a href=&#34;https://youtu.be/R2HNppJDp2Q&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Best-Packages&#34;&gt;Awesome Overlays | Flutter Library of the Week | EP-04&lt;/a&gt;&lt;a href=&#34;https://youtu.be/A3co3Tskjtg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Best-Packages&#34;&gt;Awesome Extensions | Flutter Library of the Week | EP-05&lt;/a&gt;&lt;a href=&#34;https://youtu.be/k1EYzQAhV-g&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Flutter-Best-Packages&#34;&gt;Storing Keys in .env file | BuildConfig | Flutter Library of the Week | EP-06&lt;/a&gt;&lt;a href=&#34;https://youtu.be/OtkrNQxJzBQ&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/VelocityX&#34;&gt;Flutter Powerful VelocityX | VelocityX | Ch01-Ch05&lt;/a&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=IOhJCN4T1V4&amp;amp;list=PLR2qQy0Zxs_UHLXSYbK50jEapx0ORmLYv&amp;amp;index=2&amp;amp;t=0s&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/Learning-RxDart&#34;&gt;Flutter RxDart Explained - The Flutter Way&lt;/a&gt;&lt;a href=&#34;https://youtu.be/8fOoF7icyn0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Flutter Weekly Widgets Series&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWidgets&#34;&gt;Flutter: SizedBox | Flutter Weekly Widgets | Ep 1 &lt;/a&gt;&lt;a href=&#34;https://youtu.be/aVZ5rsA4Yx8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWidgets&#34;&gt;Flutter: Animated Builder | Improve Performance | Ep 2 &lt;/a&gt;&lt;a href=&#34;https://youtu.be/ssz7pJQTokM&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWidgets&#34;&gt;Flutter: Draggable &amp;amp; Drag Target | Ep 3 &lt;/a&gt;&lt;a href=&#34;https://youtu.be/U6WjVYZ3kKc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWidgets&#34;&gt;Flutter: World of Cupertino (iOS) | Ep 4 &lt;/a&gt;&lt;a href=&#34;https://youtu.be/f4kXyOkfe6I&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWidgets&#34;&gt;Flutter: Data Table | Ep 5 | Flutter Weekly Widgets &lt;/a&gt;&lt;a href=&#34;https://youtu.be/n2Dav9ONJsY&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWidgets&#34;&gt;Flutter: WebView | Browser App | Ep 6 | Website to App&lt;/a&gt;&lt;a href=&#34;https://youtu.be/DEgtGLwdOHM&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWidgets&#34;&gt;Flutter Advanced: Overlay Widget | Ep 7 | Flutter Weekly Widgets &lt;/a&gt;&lt;a href=&#34;https://youtu.be/KuXKwjv2gTY&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWidgets&#34;&gt;Flutter Advanced: Placeholder, Spacer, Visibility Widgets | Ep 8 &lt;/a&gt;&lt;a href=&#34;https://youtu.be/DrJLGJ5e-uw&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWidgets&#34;&gt;Flutter Weekly Widgets S02E01 | Reordable ListView&lt;/a&gt;&lt;a href=&#34;https://youtu.be/VsdR9S0J0ag&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWidgets&#34;&gt;Flutter Weekly Widgets S02E02 | 3D ListView&lt;/a&gt;&lt;a href=&#34;https://youtu.be/oE4Cl_p5LQ0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterWidgets&#34;&gt;Flutter Weekly Widgets S02E03 | Universal Error Widget&lt;/a&gt;&lt;a href=&#34;https://youtu.be/6mOX9LxH_rU&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Plugins on pub.dartlang.org&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/velocity_x&#34;&gt;Flutter VelocityX&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flute_music_player&#34;&gt;Flutter Flute Music Plugin - First Open Source Flutter based material design music player with audio plugin to play local music files.(Online Radio will be added soon).&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_walkthrough&#34;&gt;Flutter Walkthrough - A new Flutter package for both android and iOS which helps developers in creating animated walkthrough of their app.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_toast_pk&#34;&gt;Flutter Toast PK - A new Flutter plugin for showing toast in android and ios.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/random_pk&#34;&gt;Random PK - A new Flutter package that gives a container with random color.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/pk_skeleton&#34;&gt;PK Skeleton - A Facebook &amp;amp; Twitter Like Card Loading Shimmer Skeleton Library..&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/medium_clap_flutter&#34;&gt;MediumClapFlutter - A Custom Floating Action Button (FAB) library like clapping effect on Medium.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/audioplayers&#34;&gt;audioplayers - A Flutter plugin to play multiple simultaneously audio files, works for Android and iOS.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flame&#34;&gt;flame - A minimalist Flutter game engine.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Dart Series&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/0CTj3x6jgeY&#34;&gt;Learn Dart Basics in 30 Mins&lt;/a&gt;&lt;a href=&#34;https://youtu.be/0CTj3x6jgeY&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/@imthepk/thread-of-execution-functions-call-stack-dart-under-the-hood-ch1-c2e756504c&#34;&gt;Thread of Execution, Functions &amp;amp; Call Stack- Dart Under The Hood CH1&lt;/a&gt;&lt;a href=&#34;https://youtu.be/c5ZPuBONdAc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Dart Backend Series (Source Code + YouTube Link)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/DartFirstApi&#34;&gt;Dart: How to Setup Aqueduct | Intro | Aqueduct&lt;/a&gt;&lt;a href=&#34;https://youtu.be/rf6uAcAglzc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/DartQuizApi&#34;&gt;Dart: How to write your first REST API | Intro &amp;amp; 1/7 | Aqueduct&lt;/a&gt;&lt;a href=&#34;https://youtu.be/rf6uAcAglzc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/DartQuizApi&#34;&gt;Dart: How to make controllers ? | 1/7 | Aqueduct&lt;/a&gt;&lt;a href=&#34;https://youtu.be/XCOYxjoJDb8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/DartQuizApi&#34;&gt;Dart: Indexing And Routing ? | 2/7 | Aqueduct&lt;/a&gt;&lt;a href=&#34;https://youtu.be/zG1kUp1bcQY&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/DartQuizApi&#34;&gt;Dart: How to write tests ? | 3/7 | Aqueduct&lt;/a&gt;&lt;a href=&#34;https://youtu.be/Q2I4wDET4Os&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/DartQuizApi&#34;&gt;Dart: How to setup PostgreSQL ? | 4/7 | Aqueduct&lt;/a&gt;&lt;a href=&#34;https://youtu.be/WrqUOZw1E7w&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/DartQuizApi&#34;&gt;Dart: How to write tests with test db ? | 5/7 | Aqueduct&lt;/a&gt;&lt;a href=&#34;https://youtu.be/JsPFOh3SPm0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/DartQuizApi&#34;&gt;Dart: What is ORM ? | 5/7 | Aqueduct&lt;/a&gt;&lt;a href=&#34;https://youtu.be/JsPFOh3SPm0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/DartQuizApi&#34;&gt;Dart: How to make DataModels ? | 5/7 | Aqueduct&lt;/a&gt;&lt;a href=&#34;https://youtu.be/JsPFOh3SPm0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/DartQuizApi&#34;&gt;Dart: What are Relationships and Joins | 6/7 | Aqueduct&lt;/a&gt;&lt;a href=&#34;https://youtu.be/TWhCHoGds0c&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/DartQuizApi&#34;&gt;Dart: How to deploy to real database ? | 7/7 | Aqueduct&lt;/a&gt;&lt;a href=&#34;https://youtu.be/6H3XwY_G8JA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/UzuecP3utk8&#34;&gt;Server Side Dart - Exploring Angel | First API&lt;/a&gt;&lt;a href=&#34;https://youtu.be/UzuecP3utk8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterAngel&#34;&gt;Flutter App + Backend (Angel) = FullStack&lt;/a&gt;&lt;a href=&#34;https://youtu.be/ggmjumYogEo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/_65Ixfu9nSo&#34;&gt;Deno (Backend) + Flutter (Frontend) Full Tutorial | QuotesX API &amp;amp; APP&lt;/a&gt;&lt;a href=&#34;https://youtu.be/_65Ixfu9nSo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Workshops &amp;amp; Interviews&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iampawan/FlutterChennai&#34;&gt;Flutter From Scratch - Workshop | Photos Info App | Instagram Clone &amp;amp; More&lt;/a&gt;&lt;a href=&#34;https://youtu.be/bv_Xv_yN2A8&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/v1GmQZTBRaM&#34;&gt;Taking Flight with VelocityX - Pawan Kumar (Flutter Week)&lt;/a&gt;&lt;a href=&#34;https://youtu.be/v1GmQZTBRaM&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pawan.live&#34;&gt;Interview With A Googler | Chris Sells | Episode 01 | Flutter Q&amp;amp;A&lt;/a&gt;&lt;a href=&#34;https://youtu.be/DBvX4i9muk4&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/youtube.png&#34; alt=&#34;watch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Pull Requests&lt;/h1&gt; &#xA;&lt;p&gt;I welcome and encourage all pull requests. It usually will take me within 24-48 hours to respond to any issue or request. Here are some basic rules to follow to ensure timely addition of your request:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Match the document style as closely as possible.&lt;/li&gt; &#xA; &lt;li&gt;Please keep PR titles easy to read and descriptive of changes, this will make them easier to merge :)&lt;/li&gt; &#xA; &lt;li&gt;Pull requests &lt;em&gt;must&lt;/em&gt; be made against &lt;code&gt;master&lt;/code&gt; branch for this particular repository.&lt;/li&gt; &#xA; &lt;li&gt;Check for existing &lt;a href=&#34;https://github.com/iampawan/FlutterExampleApps/issues&#34;&gt;issues&lt;/a&gt; first, before filing an issue.&lt;/li&gt; &#xA; &lt;li&gt;Make sure you follow the set standard as all other projects in this repo do&lt;/li&gt; &#xA; &lt;li&gt;Have fun!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Created &amp;amp; Maintained By&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/iampawan&#34;&gt;Pawan Kumar&lt;/a&gt; (&lt;a href=&#34;https://www.twitter.com/imthepk&#34;&gt;@imthepk&lt;/a&gt;) (&lt;a href=&#34;https://www.youtube.com/c/MTechViral&#34;&gt;YouTube&lt;/a&gt;) (&lt;a href=&#34;https://www.instagram.com/codepur_ka_superhero&#34;&gt;Instagram&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you found this project helpful or you learned something from the source code and want to thank me, consider buying me a cup of &lt;span&gt;☕&lt;/span&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.paypal.me/imthepk/&#34;&gt;PayPal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2018 Pawan Kumar&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;For help getting started with Flutter, view our online &lt;a href=&#34;http://flutter.io/&#34;&gt;documentation&lt;/a&gt;. &lt;img src=&#34;https://raw.githubusercontent.com/iampawan/FlutterExampleApps/master/image/fa.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For help on editing plugin code, view the &lt;a href=&#34;https://flutter.io/platform-plugins/#edit-code&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>juicycleff/flutter-unity-view-widget</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/juicycleff/flutter-unity-view-widget</id>
    <link href="https://github.com/juicycleff/flutter-unity-view-widget" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Embeddable unity game engine view for Flutter. Advance demo here https://github.com/juicycleff/flutter-unity-arkit-demo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flutter_unity_widget&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-4-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_unity_widget/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_unity_widget.svg?style=flat-square&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/juicycleff/flutter-unity-view-widget.svg?style=flat-square&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/watchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/juicycleff/flutter-unity-view-widget.svg?style=social&#34; alt=&#34;Watch on GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/juicycleff/flutter-unity-view-widget.svg?style=social&#34; alt=&#34;Star on GitHub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/flutter-unity/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/flutter-unity/community.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flutter unity 3D widget for embedding unity in flutter. Now you can make awesome gamified features of your app in Unity and get it rendered in a Flutter app both in fullscreen and embeddable mode. Works great on &lt;code&gt;Android, iPad OS, iOS, Web, with Windows&lt;/code&gt; nearing completion. There are now two unity app examples in the unity folder, one with the default scene and another based on Unity AR foundation samples. &lt;br&gt; Note: Supports only Unity 2019.4.3 or later. UnityFramework does not support emulator. Note: Please use OpenGLES3 as Graphics API only for now (Android only). &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notice&lt;/h2&gt; &#xA;&lt;p&gt;Need me to respond, tag me &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/www.github.com/juicycleff&#34;&gt;Rex Isaac Raphael&lt;/a&gt;. Always use the matching FUW unitypackage for the unity version your are using.&lt;/p&gt; &#xA;&lt;p&gt;This plugin expects you to atleast know how to use Unity Engine. If you have issues with how unity widget is presented, you can please modify your unity project build settings as you seem fit.&lt;/p&gt; &#xA;&lt;p&gt;Moving forward, versioning of the package will change to match unity releases after proper test. Mind you this does not mean the package is not compatible with other versions, it just mean it&#39;s been tested to work with a unity version.&lt;/p&gt; &#xA;&lt;p&gt;Windows coming soon.&lt;/p&gt; &#xA;&lt;p&gt;^2022.1.0+5 supports Flutter 3.0.0 and can only work with &lt;code&gt;PlatformViewSurface&lt;/code&gt; for now. The implications of this is you have to pass &lt;code&gt;useAndroidViewSurface: true&lt;/code&gt; to UnityWidget. You can track this &lt;a href=&#34;https://github.com/flutter/flutter/issues/103630&#34;&gt;issue&lt;/a&gt;. Currently working on supporting AndroidView.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;First depend on the library by adding this to your packages &lt;code&gt;pubspec.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flutter 3.0.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  flutter_unity_widget: ^2022.1.1+2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pre Flutter 3.0.0 (This version will gradually be deprecated)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  flutter_unity_widget: ^2022.1.0+6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now inside your Dart code you can import it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter_unity_widget/flutter_unity_widget.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;30 fps gifs, showcasing communication between Flutter and Unity:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/juicycleff/flutter-unity-view-widget/raw/master/files/preview_android.gif?raw=true&#34; alt=&#34;gif&#34;&gt; &lt;img src=&#34;https://github.com/juicycleff/flutter-unity-view-widget/raw/master/files/preview_ios.gif?raw=true&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;For this, there is also a video tutorial, which you can find a &lt;a href=&#34;https://www.youtube.com/watch?v=exNPmv_7--Q&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In the tutorial below, there are steps specific to each platform, denoted by a &lt;span&gt;ℹ&lt;/span&gt; icon followed by the platform name (Android or iOS). You can click on its icon to expand it.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;An existing Flutter project (if there is none, you can &lt;a href=&#34;https://flutter.dev/docs/get-started/test-drive#create-app&#34;&gt;create a new one&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;An existing Unity project (if there is none, you can &lt;a href=&#34;https://learn.unity.com/tutorial/create-your-first-unity-project&#34;&gt;create a new one&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/unitypackages/fuw-2022.1.1.unitypackage&#34;&gt;&lt;code&gt;FlutterUnityPackage.unitypackage&lt;/code&gt;&lt;/a&gt; file (you can access the Unity packages in the &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/tree/master/scripts&#34;&gt;&lt;em&gt;scripts&lt;/em&gt;&lt;/a&gt; folder too) Remeber to always check the match unitypackage for your project.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;NDK&lt;/h4&gt; &#xA;&lt;p&gt;If your project requires Android NDK, you have to setup following:&lt;/p&gt; &#xA;&lt;p&gt;Your android project needs to know the path of the NDK Unity uses. You can find the path to the NDK under &lt;code&gt;Preferences -&amp;gt; External Tools&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/ndkPath.png&#34; alt=&#34;NDK Path&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copy the path by right click and paste the path here in your &lt;code&gt;android/local.properties&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-properties&#34;&gt;    ndk.dir=/Applications/Unity/Hub/Editor/2020.3.19f1/PlaybackEngines/AndroidPlayer/NDK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! You don&#39;t need to tell your Android App in your &lt;code&gt;app/build.gradle&lt;/code&gt; the NDK version or other NDK settings. It&#39;s all connected to Unity now.&lt;/p&gt; &#xA;&lt;h3&gt;Steps&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a folder named &lt;em&gt;unity&lt;/em&gt; and move the Unity project into there.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The expected path is &lt;em&gt;unity/&lt;strong&gt;project-name&lt;/strong&gt;/...&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Copy the &lt;em&gt;FlutterUnityPackage.unitypackage&lt;/em&gt; file into the Unity project folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The expected path is &lt;em&gt;unity/&lt;strong&gt;project-name&lt;/strong&gt;/FlutterUnityPackage.unitypackage&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Using Unity, open the Unity project, go to &lt;strong&gt;File &amp;gt; Build Settings &amp;gt; Player Settings&lt;/strong&gt; and change the following under the &lt;strong&gt;Configuration&lt;/strong&gt; section:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;strong&gt;Scripting Backend&lt;/strong&gt;, change to IL2CPP&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;strong&gt;Target Architectures&lt;/strong&gt;, select ARMv7 and ARM64&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;ℹ&lt;/span&gt; &lt;b&gt;iOS&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Select the appropriate SDK on &lt;strong&gt;Target SDK&lt;/strong&gt; depending on where you want to test or run your app (simulator or physical device).&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/Screenshot%202019-03-27%2007.31.55.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Be sure you have at least one scene added to your build.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;strong&gt;Assets &amp;gt; Import Package &amp;gt; Custom Package&lt;/strong&gt; and select the &lt;em&gt;FlutterUnityPackage.unitypackage&lt;/em&gt; file. Click on &lt;strong&gt;Import&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After importing, click on &lt;strong&gt;Flutter&lt;/strong&gt; and select the &lt;strong&gt;Export Android&lt;/strong&gt; option (will export to &lt;em&gt;android/unityLibrary&lt;/em&gt;) or the &lt;strong&gt;Export iOS&lt;/strong&gt; option (will export to &lt;em&gt;ios/UnityLibrary&lt;/em&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Do not use &lt;strong&gt;Flutter &amp;gt; Export &lt;em&gt;Platform&lt;/em&gt; plugin&lt;/strong&gt; as it was specially added to work with &lt;a href=&#34;https://github.com/juicycleff/flutter_unity_cli&#34;&gt;&lt;code&gt;flutter_unity_cli&lt;/code&gt;&lt;/a&gt; for larger projects.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;img src=&#34;https://github.com/juicycleff/flutter-unity-view-widget/raw/master/files/Screenshot%202019-03-27%2008.13.08.png?raw=true&#34; width=&#34;400&#34;&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;ℹ&lt;/span&gt; &lt;b&gt;Android&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;The export script automatically sets things up for you, so you don&#39;t have to do anything for Android. But if you want to manually set it up, continue.&lt;/p&gt; &#xA; &lt;p&gt;6.1. Open the &lt;em&gt;android/settings.gradle&lt;/em&gt; file and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;+    include &#34;:unityLibrary&#34;&#xA;+    project(&#34;:unityLibrary&#34;).projectDir = file(&#34;./unityLibrary&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;6.2. Open the &lt;em&gt;android/app/build.gradle&lt;/em&gt; file and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;     dependencies {&#xA;+        implementation project(&#39;:unityLibrary&#39;)&#xA;     }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;6.3. If you need to build a release package, open the &lt;em&gt;android/app/build.gradle&lt;/em&gt; file and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;     buildTypes {&#xA;         release {&#xA;             signingConfig signingConfigs.debug&#xA;         }&#xA;+        debug {&#xA;+            signingConfig signingConfigs.debug&#xA;+        }&#xA;+        profile {&#xA;+            signingConfig signingConfigs.debug&#xA;+        }&#xA;+        innerTest {&#xA;+            matchingFallbacks = [&#39;debug&#39;, &#39;release&#39;]&#xA;+        }&#xA;+   }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;The code above use the &lt;code&gt;debug&lt;/code&gt; signConfig for all buildTypes, which can be changed as you well if you need specify signConfig.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;6.4. If you use &lt;code&gt;minifyEnabled true&lt;/code&gt; in your &lt;em&gt;android/app/build.gradle&lt;/em&gt; file, open the &lt;em&gt;android/unityLibrary/proguard-unity.txt&lt;/em&gt; and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;+    -keep class com.xraph.plugin.** {*;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;6.5. If you want Unity in it&#39;s own activity as an alternative, open the &lt;em&gt;android/app/src/main/AndroidManifest.xml&lt;/em&gt; and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;+    &amp;lt;activity&#xA;+        android:name=&#34;com.xraph.plugin.flutter_unity_widget.OverrideUnityActivity&#34;&#xA;+        android:theme=&#34;@style/UnityThemeSelector&#34;&#xA;+        android:screenOrientation=&#34;fullSensor&#34;&#xA;+        android:launchMode=&#34;singleTask&#34;&#xA;+        android:configChanges=&#34;mcc|mnc|locale|touchscreen|keyboard|keyboardHidden|navigation|orientation|screenLayout|uiMode|screenSize|smallestScreenSize|fontScale|layoutDirection|density&#34;&#xA;+        android:hardwareAccelerated=&#34;false&#34;&#xA;+        android:process=&#34;:Unity&#34;&amp;gt;&#xA;+    &amp;lt;meta-data android:name=&#34;com.xraph.plugin.flutter_unity_widget.OverrideUnityActivity&#34; android:value=&#34;true&#34; /&amp;gt;&#xA;+    &amp;lt;/activity&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;ℹ&lt;/span&gt; &lt;b&gt;iOS&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;6.1. Open the &lt;em&gt;ios/Runner.xcworkspace&lt;/em&gt; (workspace, not the project) file in Xcode, right-click on the Navigator (not on an item), go to &lt;strong&gt;Add Files to &#34;Runner&#34;&lt;/strong&gt; and add the &lt;em&gt;ios/UnityLibrary/Unity-Iphone.xcodeproj&lt;/em&gt; file.&lt;/p&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/workspace.png&#34; width=&#34;400&#34;&gt; &#xA; &lt;p&gt;6.2. (Optional) Select the &lt;em&gt;Unity-iPhone/Data&lt;/em&gt; folder and change the Target Membership for Data folder to UnityFramework.&lt;/p&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/change_target_membership_data_folder.png&#34; width=&#34;400&#34;&gt; &#xA; &lt;p&gt;6.3.1. If you&#39;re using Swift, open the &lt;em&gt;ios/Runner/AppDelegate.swift&lt;/em&gt; file and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;     import UIKit&#xA;     import Flutter&#xA;+    import flutter_unity_widget&#xA;&#xA;     @UIApplicationMain&#xA;     @objc class AppDelegate: FlutterAppDelegate {&#xA;         override func application(&#xA;             _ application: UIApplication,&#xA;             didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?&#xA;         ) -&amp;gt; Bool {&#xA;+            InitUnityIntegrationWithOptions(argc: CommandLine.argc, argv: CommandLine.unsafeArgv, launchOptions)&#xA;&#xA;             GeneratedPluginRegistrant.register(with: self)&#xA;             return super.application(application, didFinishLaunchingWithOptions: launchOptions)&#xA;         }&#xA;     }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;6.3.2. If you&#39;re using Objective-C, open the &lt;em&gt;ios/Runner/main.m&lt;/em&gt; file and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;+    #import &#34;flutter_unity_widget.swift.h&#34;&#xA;&#xA;     int main(int argc, char * argv[]) {&#xA;          @autoreleasepool {&#xA;+             InitUnityIntegration(argc, argv);&#xA;              return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));&#xA;          }&#xA;     }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;6.4. Open the &lt;em&gt;ios/Runner/Info.plist&lt;/em&gt; and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;     &amp;lt;dict&amp;gt;&#xA;+        &amp;lt;key&amp;gt;io.flutter.embedded_views_preview&amp;lt;/key&amp;gt;&#xA;+        &amp;lt;string&amp;gt;YES&amp;lt;/string&amp;gt;&#xA;     &amp;lt;/dict&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;6.5. Add the &lt;em&gt;UnityFramework.framework&lt;/em&gt; file as a library to the Runner project.&lt;/p&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/libraries.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Setup AR Foundation&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/juicycleff/flutter-unity-view-widget/raw/master/files/ar-demo.gif?raw=true&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Check out the Unity AR Foundation samples in the &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-arkit-demo&#34;&gt;demo repository&lt;/a&gt;. This repository is not guaranteed to be up-to-date with the latest &lt;code&gt;flutter-unity-view-widget&lt;/code&gt; master. Make sure to follow the steps listed below for setting up AR Foundation on iOS and Android in your project.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;ℹ&lt;/span&gt; &lt;b&gt;Android&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ol start=&#34;7&#34;&gt; &#xA;  &lt;li&gt; &lt;p&gt;Open the &lt;em&gt;lib/&lt;strong&gt;architecture&lt;/strong&gt;/&lt;/em&gt; folder and check if there are both &lt;em&gt;libUnityARCore.so&lt;/em&gt; and &lt;em&gt;libarpresto_api.so&lt;/em&gt; files. There seems to be a bug where a Unity export does not include all lib files. If they are missing, use Unity to build a standalone .apk of your AR project, unzip the resulting apk, and copy over the missing .lib files to the &lt;code&gt;unityLibrary&lt;/code&gt; module.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Repeat steps 6.1 and 6.2 for Android, replacing &lt;code&gt;unityLibrary&lt;/code&gt; with &lt;code&gt;arcore_client&lt;/code&gt;, &lt;code&gt;unityandroidpermissions&lt;/code&gt; and &lt;code&gt;UnityARCore&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;When using &lt;code&gt;UnityWidget&lt;/code&gt; in Flutter, set &lt;code&gt;fullscreen: false&lt;/code&gt; to disable fullscreen.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;ℹ&lt;/span&gt; &lt;b&gt;iOS&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ol start=&#34;7&#34;&gt; &#xA;  &lt;li&gt;Open the &lt;em&gt;ios/Runner/Info.plist&lt;/em&gt; and change the following:&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;     &amp;lt;dict&amp;gt;&#xA;+        &amp;lt;key&amp;gt;Privacy - Camera Usage Description&amp;lt;/key&amp;gt;&#xA;+        &amp;lt;string&amp;gt;$(PRODUCT_NAME) uses Cameras&amp;lt;/string&amp;gt;&#xA;     &amp;lt;/dict&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Setup Vuforia&lt;/h4&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/PiotrxKolasinski&#34;&gt;@PiotrxKolasinski&lt;/a&gt; for writing down the exact steps:&lt;/p&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Open the &lt;em&gt;android/unityLibrary/build.gradle&lt;/em&gt; file and change the following:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-    implementation(name: &#39;VuforiaWrapper&#39;, ext: &#39;aar&#39;)&#xA;+    implementation project(&#39;:VuforiaWrapper&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;Using Android Studio, go to &lt;strong&gt;File &amp;gt; Open&lt;/strong&gt; and select the &lt;em&gt;android/&lt;/em&gt; folder. A new project will open.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Don&#39;t worry if the error message &#34;Project with path &#39;:VuforiaWrapper&#39; could not be found in project &#39;:unityLibrary&#39;&#34; appears. The next step will fix it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;In this new project window, go to &lt;strong&gt;File &amp;gt; New &amp;gt; New Module &amp;gt; Import .JAR/.AAR package&lt;/strong&gt; and select the &lt;em&gt;android/unityLibrary/libs/VuforiaWrapper.aar&lt;/em&gt; file. A new folder named &lt;em&gt;VuforiaWrapper&lt;/em&gt; will be created inside &lt;em&gt;android/&lt;/em&gt;. You can now close this new project window.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Communicating&lt;/h2&gt; &#xA;&lt;h3&gt;Flutter-Unity&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;On a &lt;code&gt;UnityWidget&lt;/code&gt; widget, get the &lt;code&gt;UnityWidgetController&lt;/code&gt; received by the &lt;code&gt;onUnityCreated&lt;/code&gt; callback.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the method &lt;code&gt;postMessage&lt;/code&gt; to send a string, using the GameObject name and the name of a behaviour method that should be called.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Unity-Flutter&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Select the GameObject that should execute the communication and go to &lt;strong&gt;Inspector &amp;gt; Add Component &amp;gt; Unity Message Manager&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img src=&#34;https://i.stack.imgur.com/1gSOy.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new &lt;code&gt;MonoBehaviour&lt;/code&gt; subclass and add to the same GameObject as a script.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On this new behaviour, call &lt;code&gt;GetComponent&amp;lt;UnityMessageManager&amp;gt;()&lt;/code&gt; to get a &lt;code&gt;UnityMessageManager&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the method &lt;code&gt;SendMessageToFlutter&lt;/code&gt; to send a string. Receive this message using the &lt;code&gt;onUnityMessage&lt;/code&gt; callback of a &lt;code&gt;UnityWidget&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Location:&lt;/strong&gt; Unity&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Error:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;InvalidOperationException: The build target does not support build appending.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the &lt;em&gt;unity/&lt;strong&gt;project-name&lt;/strong&gt;/Assets/FlutterUnityIntegration/Editor/Build.cs&lt;/em&gt; file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;1.1. On line 48, change the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-    var options = BuildOptions.AcceptExternalModificationsToPlayer;&#xA;+    var options = BuildOptions.AllowDebugging;&#xA;+    EditorUserBuildSettings.exportAsGoogleAndroidProject = true;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;1.2. On line 115, change the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-    var options = BuildOptions.AcceptExternalModificationsToPlayer;&#xA;+    var options = BuildOptions.AllowDebugging;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Location:&lt;/strong&gt; Android Studio&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Error:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;minSdkVersion XX cannot be smaller than version 19 declared in library &#xA;    \ [:flutter_unity_widget] .../AndroidManifest.xml as the library might be using &#xA;    \ APIs not available in XX&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the &lt;em&gt;android/app/build.gradle&lt;/em&gt; file and change the following:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-    minSdkVersion XX&#xA;+    minSdkVersion 19&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Location&lt;/strong&gt;: Android Studio&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Error:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;e: .../FlutterUnityWidgetBuilder.kt: (15, 42): Expecting a parameter declaration&#xA;e: .../FlutterUnityWidgetBuilder.kt: (23, 25): Expecting an argument&#xA;e: .../FlutterUnityWidgetController.kt: (22, 44): Expecting a parameter declaration&#xA;e: .../FlutterUnityWidgetFactory.kt: (13, 58): Expecting a parameter declaration&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the &lt;em&gt;android/build.gradle&lt;/em&gt; file and change the following:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-    ext.kotlin_version = &#39;1.3.50&#39;&#xA;+    ext.kotlin_version = &#39;1.4.31&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Location:&lt;/strong&gt; Android Studio&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Error:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Unable to find a matching variant of project :unityLibrary:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the &lt;em&gt;android/app/build.gradle&lt;/em&gt; file and change the following:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;     lintOptions {&#xA;         disable &#39;InvalidPackage&#39;&#xA;+        checkReleaseBuilds false&#xA;     }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Simple Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter/material.dart&#39;;&#xA;import &#39;package:flutter/services.dart&#39;;&#xA;import &#39;package:flutter_unity_widget/flutter_unity_widget.dart&#39;;&#xA;&#xA;void main() {&#xA;  runApp(MaterialApp(&#xA;    home: UnityDemoScreen()&#xA;  ));&#xA;}&#xA;&#xA;class UnityDemoScreen extends StatefulWidget {&#xA;&#xA;  UnityDemoScreen({Key key}) : super(key: key);&#xA;&#xA;  @override&#xA;  _UnityDemoScreenState createState() =&amp;gt; _UnityDemoScreenState();&#xA;}&#xA;&#xA;class _UnityDemoScreenState extends State&amp;lt;UnityDemoScreen&amp;gt;{&#xA;  static final GlobalKey&amp;lt;ScaffoldState&amp;gt; _scaffoldKey =&#xA;      GlobalKey&amp;lt;ScaffoldState&amp;gt;();&#xA;  UnityWidgetController _unityWidgetController;&#xA;&#xA;  Widget build(BuildContext context) {&#xA;&#xA;    return Scaffold(&#xA;      key: _scaffoldKey,&#xA;      body: SafeArea(&#xA;        bottom: false,&#xA;        child: WillPopScope(&#xA;          onWillPop: () {&#xA;            // Pop the category page if Android back button is pressed.&#xA;          },&#xA;          child: Container(&#xA;            color: colorYellow,&#xA;            child: UnityWidget(&#xA;              onUnityCreated: onUnityCreated,&#xA;            ),&#xA;          ),&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;&#xA;  // Callback that connects the created controller to the unity controller&#xA;  void onUnityCreated(controller) {&#xA;    this._unityWidgetController = controller;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Communicating with and from Unity&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter/material.dart&#39;;&#xA;import &#39;package:flutter_unity_widget/flutter_unity_widget.dart&#39;;&#xA;&#xA;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatefulWidget {&#xA;  @override&#xA;  _MyAppState createState() =&amp;gt; _MyAppState();&#xA;}&#xA;&#xA;class _MyAppState extends State&amp;lt;MyApp&amp;gt; {&#xA;  static final GlobalKey&amp;lt;ScaffoldState&amp;gt; _scaffoldKey =&#xA;      GlobalKey&amp;lt;ScaffoldState&amp;gt;();&#xA;  UnityWidgetController _unityWidgetController;&#xA;  double _sliderValue = 0.0;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    super.initState();&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      home: Scaffold(&#xA;        key: _scaffoldKey,&#xA;        appBar: AppBar(&#xA;          title: const Text(&#39;Unity Flutter Demo&#39;),&#xA;        ),&#xA;        body: Card(&#xA;          margin: const EdgeInsets.all(8),&#xA;          clipBehavior: Clip.antiAlias,&#xA;          shape: RoundedRectangleBorder(&#xA;            borderRadius: BorderRadius.circular(20.0),&#xA;          ),&#xA;          child: Stack(&#xA;            children: &amp;lt;Widget&amp;gt;[&#xA;              UnityWidget(&#xA;                  onUnityCreated: onUnityCreated,&#xA;                  onUnityMessage: onUnityMessage,&#xA;                  onUnitySceneLoaded: onUnitySceneLoaded,&#xA;                  fullscreen: false,&#xA;              ),&#xA;              Positioned(&#xA;                bottom: 20,&#xA;                left: 20,&#xA;                right: 20,&#xA;                child: Card(&#xA;                  elevation: 10,&#xA;                  child: Column(&#xA;                    children: &amp;lt;Widget&amp;gt;[&#xA;                      Padding(&#xA;                        padding: const EdgeInsets.only(top: 20),&#xA;                        child: Text(&#34;Rotation speed:&#34;),&#xA;                      ),&#xA;                      Slider(&#xA;                        onChanged: (value) {&#xA;                          setState(() {&#xA;                            _sliderValue = value;&#xA;                          });&#xA;                          setRotationSpeed(value.toString());&#xA;                        },&#xA;                        value: _sliderValue,&#xA;                        min: 0,&#xA;                        max: 20,&#xA;                      ),&#xA;                    ],&#xA;                  ),&#xA;                ),&#xA;              ),&#xA;            ],&#xA;          ),&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;&#xA;  // Communcation from Flutter to Unity&#xA;  void setRotationSpeed(String speed) {&#xA;    _unityWidgetController.postMessage(&#xA;      &#39;Cube&#39;,&#xA;      &#39;SetRotationSpeed&#39;,&#xA;      speed,&#xA;    );&#xA;  }&#xA;&#xA;  // Communication from Unity to Flutter&#xA;  void onUnityMessage(message) {&#xA;    print(&#39;Received message from unity: ${message.toString()}&#39;);&#xA;  }&#xA;&#xA;  // Callback that connects the created controller to the unity controller&#xA;  void onUnityCreated(controller) {&#xA;    this._unityWidgetController = controller;&#xA;  }&#xA;&#xA;  // Communication from Unity when new scene is loaded to Flutter&#xA;  void onUnitySceneLoaded(SceneLoaded sceneInfo) {&#xA;    print(&#39;Received scene loaded from unity: ${sceneInfo.name}&#39;);&#xA;    print(&#39;Received scene loaded from unity buildIndex: ${sceneInfo.buildIndex}&#39;);&#xA;  }&#xA;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Props&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;fullscreen&lt;/code&gt; (Enable or disable fullscreen mode on Android)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pause()&lt;/code&gt; (Use this to pause unity player)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;resume()&lt;/code&gt; (Use this to resume unity player)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unload()&lt;/code&gt; (Use this to unload unity player) *Requires Unity 2019.4.3 or later&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;quit()&lt;/code&gt; (Use this to quit unity player)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;postMessage(String gameObject, methodName, message)&lt;/code&gt; (Allows you invoke commands in Unity from flutter)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onUnityMessage(data)&lt;/code&gt; (Unity to flutter binding and listener)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onUnityUnloaded()&lt;/code&gt; (Unity to flutter listener when unity is unloaded)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onUnitySceneLoaded(String name, int buildIndex, bool isLoaded, bool isValid,)&lt;/code&gt; (Unity to flutter binding and listener when new scene is loaded)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remember to disabled fullscreen in unity player settings to disable unity fullscreen.&lt;/li&gt; &#xA; &lt;li&gt;Unity freezes and crashes on Android, please use OpenGL3 as Graphics API.&lt;/li&gt; &#xA; &lt;li&gt;Project fails to build due to some native dependencies in your unity project, please integrate the native libraries for those dependencies on Android or iOS&lt;/li&gt; &#xA; &lt;li&gt;App crashes on screen exit and re-entry do this &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Build Setting - iOS - Other Settings - Configuration - Enable Custom Background Behaviors or iOS&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android builds takes forever to complete Unity 2022.1.*, remove these lines from unityLibrary/build.gradle file &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;commandLineArgs.add(&#34;--enable-debugger&#34;) commandLineArgs.add(&#34;--profiler-report&#34;) commandLineArgs.add(&#34;--profiler-output-file=&#34; + workingDir + &#34;/build/il2cpp_&#34;+ abi + &#34;_&#34; + configuration + &#34;/il2cpp_conv.traceevents&#34;)&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Sponsors&lt;/h4&gt; &#xA;&lt;p&gt;Support this project with your organization. Your donations will be used to help children first and then those in need. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/ultimate-backend/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.xraph.com&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/11243590?v=4&#34; width=&#34;100px;&#34; alt=&#34;Rex Raphael&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rex Raphael&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=juicycleff&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=juicycleff&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#question-juicycleff&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt; &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/issues?q=author%3Ajuicycleff&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#review-juicycleff&#34; title=&#34;Reviewed Pull Requests&#34;&gt;👀&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#tutorial-juicycleff&#34; title=&#34;Tutorials&#34;&gt;✅&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://stockxit.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/1475368?v=4&#34; width=&#34;100px;&#34; alt=&#34;Thomas Stockx&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thomas Stockx&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=thomas-stockx&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=thomas-stockx&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#question-thomas-stockx&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#tutorial-thomas-stockx&#34; title=&#34;Tutorials&#34;&gt;✅&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://krispypen.github.io/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/156955?v=4&#34; width=&#34;100px;&#34; alt=&#34;Kris Pypen&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kris Pypen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=krispypen&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=krispypen&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#question-krispypen&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#tutorial-krispypen&#34; title=&#34;Tutorials&#34;&gt;✅&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/lorant-csonka-planorama&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/48209860?v=4&#34; width=&#34;100px;&#34; alt=&#34;Lorant Csonka&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lorant Csonka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=lorant-csonka-planorama&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#video-lorant-csonka-planorama&#34; title=&#34;Videos&#34;&gt;📹&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-enable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ersanKolay/sensor_image_demo</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/ersanKolay/sensor_image_demo</id>
    <link href="https://github.com/ersanKolay/sensor_image_demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Gyroscope-based Parallax Effect&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sensor_image_demo&lt;/h1&gt; &#xA;&lt;p&gt;A new Flutter project.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This project is a starting point for a Flutter application.&lt;/p&gt; &#xA;&lt;p&gt;A few resources to get you started if this is your first Flutter project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/codelab&#34;&gt;Lab: Write your first Flutter app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/cookbook&#34;&gt;Cookbook: Useful Flutter samples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For help getting started with Flutter, view our &lt;a href=&#34;https://flutter.dev/docs&#34;&gt;online documentation&lt;/a&gt;, which offers tutorials, samples, guidance on mobile development, and a full API reference.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bharat-biradar/Google-Ml-Kit-plugin</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/bharat-biradar/Google-Ml-Kit-plugin</id>
    <link href="https://github.com/bharat-biradar/Google-Ml-Kit-plugin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A flutter plugin that implements google&#39;s standalone ml kit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google&#39;s ML Kit for Flutter&lt;/h1&gt; &#xA;&lt;p&gt;Google&#39;s ML Kit for Flutter is a set of &lt;a href=&#34;https://flutter.io/platform-plugins/&#34;&gt;Flutter plugins&lt;/a&gt; that enable &lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt; apps to use &lt;a href=&#34;https://developers.google.com/ml-kit&#34;&gt;Google&#39;s standalone ML Kit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Vision APIs&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Source Code&lt;/th&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/vision/barcode-scanning&#34;&gt;Barcode Scanning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_barcode_scanning&#34;&gt;google_mlkit_barcode_scanning&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_barcode_scanning&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_barcode_scanning&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_barcode_scanning&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/vision/face-detection&#34;&gt;Face Detection&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_face_detection&#34;&gt;google_mlkit_face_detection&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_face_detection&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_face_detection&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_face_detection&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/vision/image-labeling&#34;&gt;Image Labeling&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_image_labeling&#34;&gt;google_mlkit_image_labeling&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_image_labeling&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_image_labeling&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_image_labeling&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/vision/object-detection&#34;&gt;Object Detection and Tracking&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_object_detection&#34;&gt;google_mlkit_object_detection&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_object_detection&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_object_detection&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_object_detection&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/vision/text-recognition&#34;&gt;Text Recognition&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_text_recognition&#34;&gt;google_mlkit_text_recognition&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_text_recognition&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_text_recognition&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_text_recognition&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/vision/text-recognition/v2&#34;&gt;Text Recognition V2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_text_recognition&#34;&gt;google_mlkit_text_recognition&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_text_recognition&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_text_recognition&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_text_recognition&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/vision/digital-ink-recognition&#34;&gt;Digital Ink Recognition&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_digital_ink_recognition&#34;&gt;google_mlkit_digital_ink_recognition&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_digital_ink_recognition&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_digital_ink_recognition&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_digital_ink_recognition&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/vision/pose-detection&#34;&gt;Pose Detection&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_pose_detection&#34;&gt;google_mlkit_pose_detection&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_pose_detection&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_pose_detection&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_pose_detection&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/vision/selfie-segmentation&#34;&gt;Selfie Segmentation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_selfie_segmentation&#34;&gt;google_mlkit_selfie_segmentation&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_selfie_segmentation&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_selfie_segmentation&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_selfie_segmentation&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Natural Language APIs&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Source Code&lt;/th&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/language/identification&#34;&gt;Language Identification&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_language_id&#34;&gt;google_mlkit_language_id&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_language_id&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_language_id&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_language_id&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/language/translation&#34;&gt;On-Device Translation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_translation&#34;&gt;google_mlkit_translation&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_translation&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_translation&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_translation&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/language/smart-reply&#34;&gt;Smart Reply&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_smart_reply&#34;&gt;google_mlkit_smart_reply&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_smart_reply&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_smart_reply&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_smart_reply&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/language/entity-extraction&#34;&gt;Entity Extraction&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_mlkit_entity_extraction&#34;&gt;google_mlkit_entity_extraction&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/google_mlkit_entity_extraction&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_mlkit_entity_extraction&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_entity_extraction&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Minimum iOS Deployment Target: 10.0&lt;/li&gt; &#xA; &lt;li&gt;Xcode 13 or newer&lt;/li&gt; &#xA; &lt;li&gt;Swift 5&lt;/li&gt; &#xA; &lt;li&gt;ML Kit only supports 64-bit architectures (x86_64 and arm64). Check this &lt;a href=&#34;https://developer.apple.com/support/required-device-capabilities/&#34;&gt;list&lt;/a&gt; to see if your device has the required device capabilities.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Since ML Kit does not support 32-bit architectures (i386 and armv7), you need to exclude amrv7 architectures in Xcode in order to run &lt;code&gt;flutter build ios&lt;/code&gt; or &lt;code&gt;flutter build ipa&lt;/code&gt;. More info &lt;a href=&#34;https://developers.google.com/ml-kit/migration/ios&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Go to Project &amp;gt; Runner &amp;gt; Building Settings &amp;gt; Excluded Architectures &amp;gt; Any SDK &amp;gt; armv7&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/raw/master/resources/build_settings_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then your Podfile should look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# add this line:&#xA;$iOSVersion = &#39;10.0&#39;&#xA;&#xA;post_install do |installer|&#xA;  # add these lines:&#xA;  installer.pods_project.build_configurations.each do |config|&#xA;    config.build_settings[&#34;EXCLUDED_ARCHS[sdk=*]&#34;] = &#34;armv7&#34;&#xA;    config.build_settings[&#39;IPHONEOS_DEPLOYMENT_TARGET&#39;] = $iOSVersion&#xA;  end&#xA;  &#xA;  installer.pods_project.targets.each do |target|&#xA;    flutter_additional_ios_build_settings(target)&#xA;    &#xA;    # add these lines:&#xA;    target.build_configurations.each do |config|&#xA;      if Gem::Version.new($iOSVersion) &amp;gt; Gem::Version.new(config.build_settings[&#39;IPHONEOS_DEPLOYMENT_TARGET&#39;])&#xA;        config.build_settings[&#39;IPHONEOS_DEPLOYMENT_TARGET&#39;] = $iOSVersion&#xA;      end&#xA;    end&#xA;    &#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice that the minimum &lt;code&gt;IPHONEOS_DEPLOYMENT_TARGET&lt;/code&gt; is 10.0, you can set it to something newer but not older.&lt;/p&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;minSdkVersion: 21&lt;/li&gt; &#xA; &lt;li&gt;targetSdkVersion: 29&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Migrating from ML Kit for Firebase&lt;/h2&gt; &#xA;&lt;p&gt;When Migrating from ML Kit for Firebase read &lt;a href=&#34;https://developers.google.com/ml-kit/migration&#34;&gt;this guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For Android details read &lt;a href=&#34;https://developers.google.com/ml-kit/migration/android&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For iOS details read &lt;a href=&#34;https://developers.google.com/ml-kit/migration/ios&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Firebase dependency: Custom Models&lt;/h2&gt; &#xA;&lt;p&gt;Google&#39;s standalone ML Kit library does have any direct dependency with Firebase. As designed by Google, you do not need to include Firebase in your project in order to use ML Kit. However, some ML Kit APIs have the possibility to be used with &lt;a href=&#34;https://developers.google.com/ml-kit/custom-models&#34;&gt;Custom Models&lt;/a&gt;, that means that the default models can be replaced with custom TensorFlow Lite models.&lt;/p&gt; &#xA;&lt;p&gt;The plugins that allow Custom Models are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_image_labeling&#34;&gt;google_mlkit_image_labeling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_mlkit_object_detection&#34;&gt;google_mlkit_object_detection&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When creating these plugins we tried to remove the Firebase dependency as much as possible. However, when wrapping them for Flutter, we realized that Firebase is needed in order to download the model, pass it to the detector and expose its functionality to be used in Flutter.&lt;/p&gt; &#xA;&lt;p&gt;A Flutter plugin includes all of its dependencies in your project even thought you are only consuming some APIs of the plugin. For that reason those plugins always require you to configure Firebase even though you are not using Custom Models in your project.&lt;/p&gt; &#xA;&lt;p&gt;We could remove the Custom Models and do not expose that functionality in Flutter, but that will deprive some developers the opportunity to use them. If you find a way to manage those dependencies feel free to contribute with your &lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To setup Firebase for your project check this links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/android/setup&#34;&gt;Add Firebase to your Android project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/ios/setup&#34;&gt;Add Firebase to your iOS project&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also please note that in latest &lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/raw/master/packages/google_ml_kit/CHANGELOG.md&#34;&gt;versions&lt;/a&gt;, &lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_ml_kit&#34;&gt;google_ml_kit&lt;/a&gt; has become an umbrella plugin including all the plugin listed in &lt;a href=&#34;https://raw.githubusercontent.com/bharat-biradar/Google-Ml-Kit-plugin/master/#features&#34;&gt;Features&lt;/a&gt;. For that reason you will need to configure Firebase in your project if using &lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_ml_kit&#34;&gt;google_ml_kit&lt;/a&gt;. We recommend you start using the plugins listed in &lt;a href=&#34;https://raw.githubusercontent.com/bharat-biradar/Google-Ml-Kit-plugin/master/#features&#34;&gt;Features&lt;/a&gt; rather than using &lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_ml_kit&#34;&gt;google_ml_kit&lt;/a&gt;, otherwise you will be including unnecessary dependencies in your project.&lt;/p&gt; &#xA;&lt;h2&gt;Example app&lt;/h2&gt; &#xA;&lt;p&gt;Find the example app &lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/tree/master/packages/google_ml_kit/example&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome. In case of any problems look at &lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/issues&#34;&gt;existing issues&lt;/a&gt;, if you cannot find anything related to your problem then open an issue. Create an issue before opening a &lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/pulls&#34;&gt;pull request&lt;/a&gt; for non trivial fixes. In case of trivial fixes open a &lt;a href=&#34;https://github.com/bharat-biradar/Google-Ml-Kit-plugin/pulls&#34;&gt;pull request&lt;/a&gt; directly.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter/gallery</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/flutter/gallery</id>
    <link href="https://github.com/flutter/gallery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter Gallery is a resource to help developers evaluate and use Flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Gallery&lt;/h1&gt; &#xA;&lt;p&gt;Flutter Gallery is a resource to help developers evaluate and use Flutter. It is a collection of Material Design &amp;amp; Cupertino widgets, behaviors, and vignettes implemented with Flutter. We often get asked how one can see Flutter in action, and this gallery demonstrates what Flutter provides and how it behaves in the wild.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6655696/73928238-0d7fcc80-48d3-11ea-8a7e-ea7dc5d6e713.png&#34; alt=&#34;Flutter Gallery&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Showcase for &lt;code&gt;material&lt;/code&gt;, &lt;code&gt;cupertino&lt;/code&gt;, and other widgets&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/gallery/main/lib/layout/adaptive.dart&#34;&gt;Adpative layout&lt;/a&gt; for mobile and desktop&lt;/li&gt; &#xA; &lt;li&gt;State restoration support&lt;/li&gt; &#xA; &lt;li&gt;Settings to text scaling, text direction, locale, theme, and more...&lt;/li&gt; &#xA; &lt;li&gt;Demo for &lt;code&gt;animations&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Foldable support and demo for &lt;code&gt;dual_screen&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Deferred loading&lt;/li&gt; &#xA; &lt;li&gt;CI/CD&lt;/li&gt; &#xA; &lt;li&gt;...and much more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;Flutter Gallery has been built to support multiple platforms. These include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android (&lt;a href=&#34;https://play.google.com/store/apps/details?id=io.flutter.demo.gallery&#34;&gt;Google Play Store&lt;/a&gt;, &lt;a href=&#34;https://github.com/flutter/gallery/releases/latest&#34;&gt;.apk&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;iOS (locally)&lt;/li&gt; &#xA; &lt;li&gt;web (&lt;a href=&#34;https://gallery.flutter.dev/&#34;&gt;gallery.flutter.dev&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;macOS (&lt;a href=&#34;https://github.com/flutter/gallery/releases/latest&#34;&gt;.zip&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Linux (&lt;a href=&#34;https://github.com/flutter/gallery/releases/latest&#34;&gt;.tar.gz&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Windows (&lt;a href=&#34;https://github.com/flutter/gallery/releases/latest&#34;&gt;.zip&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;One can run the gallery locally for any of these platforms. For desktop platforms, please see the &lt;a href=&#34;https://docs.flutter.dev/desktop&#34;&gt;Flutter docs&lt;/a&gt; for the latest requirements.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd gallery/&#xA;flutter pub get&#xA;flutter run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Troubleshooting&lt;/summary&gt; &#xA; &lt;h3&gt;Flutter &lt;code&gt;master&lt;/code&gt; channel&lt;/h3&gt; &#xA; &lt;p&gt;The Flutter Gallery targets Flutter&#39;s &lt;code&gt;master&lt;/code&gt; channel. As such, it can take advantage of new SDK features that haven&#39;t landed in the stable channel.&lt;/p&gt; &#xA; &lt;p&gt;If you&#39;d like to run the Flutter Gallery, you may have to switch to the &lt;code&gt;master&lt;/code&gt; channel first:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter channel master&#xA;flutter upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;When you&#39;re done, use this command to return to the safety of the &lt;code&gt;stable&lt;/code&gt; channel:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter channel stable&#xA;flutter upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Generating localizations&lt;/summary&gt; &#xA; &lt;p&gt;If this is the first time building the Flutter Gallery, the localized code will not be present in the project directory. However, after running the application for the first time, a synthetic package will be generated containing the app&#39;s localizations through importing &lt;code&gt;package:flutter_gen/gen_l10n/&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter pub get&#xA;flutter pub run grinder l10n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See separate &lt;a href=&#34;https://raw.githubusercontent.com/flutter/gallery/main/lib/l10n/README.md&#34;&gt;README&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Generating highlighted code segments&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter pub get&#xA;flutter pub run grinder update-code-segments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See separate &lt;a href=&#34;https://raw.githubusercontent.com/flutter/gallery/main/tool/codeviewer_cli/README.md&#34;&gt;README&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Including a new splash animation&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Convert your animation to a &lt;code&gt;.gif&lt;/code&gt; file. Ideally, use a background color of &lt;code&gt;0xFF030303&lt;/code&gt; to ensure the animation blends into the background of the app.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Add your new &lt;code&gt;.gif&lt;/code&gt; file to the assets directory under &lt;code&gt;assets/splash_effects&lt;/code&gt;. Ensure the name follows the format &lt;code&gt;splash_effect_$num.gif&lt;/code&gt;. The number should be the next number after the current largest number in the repository.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Update the map &lt;code&gt;_effectDurations&lt;/code&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/flutter/gallery/main/lib/pages/splash.dart&#34;&gt;splash.dart&lt;/a&gt; to include the number of the new &lt;code&gt;.gif&lt;/code&gt; as well as its estimated duration. The duration is used to determine how long to display the splash animation at launch.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Releasing&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;for flutter-hackers members&lt;/summary&gt; &#xA; &lt;p&gt;The process is largely automated and easy to set in motion.&lt;/p&gt; &#xA; &lt;p&gt;First things first, bump the &lt;code&gt;pubspec.yaml&lt;/code&gt; version number. This can be in a PR making a change or a separate PR. Use &lt;a href=&#34;https://semver.org/&#34;&gt;semantic versioning&lt;/a&gt; to determine which part to increment. The version number after the &lt;code&gt;+&lt;/code&gt; should also be incremented. For example &lt;code&gt;1.2.3+010203&lt;/code&gt; with a patch should become &lt;code&gt;1.2.4+010204&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Then, use the following workflows. It is strongly recommended to use the staging/beta environments when available, before deploying to production.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/gallery/actions/workflows/release_deploy_play_store.yml&#34;&gt;Deploy to Play Store&lt;/a&gt;: Uses Fastlane to create a &lt;a href=&#34;https://play.google.com/console/u/0/developers/7661132837216938445/app/4974617875198505129/tracks/open-testing&#34;&gt;beta&lt;/a&gt; (freely available on the &lt;a href=&#34;https://play.google.com/apps/testing/io.flutter.demo.gallery&#34;&gt;Play Store&lt;/a&gt;), promote an existing beta to production, or publish straight to &lt;a href=&#34;https://play.google.com/console/u/0/developers/7661132837216938445/app/4974617875198505129/tracks/production&#34;&gt;production&lt;/a&gt; (&lt;a href=&#34;https://play.google.com/store/apps/details?id=io.flutter.demo.gallery&#34;&gt;Play Store&lt;/a&gt;). &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Once an .aab is released with a particular version number, it can&#39;t be replaced. The version number must be incremented again.&lt;/p&gt; &#xA;   &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/gallery/actions/workflows/release_deploy_web.yml&#34;&gt;Deploy to web&lt;/a&gt;: Deploys a web build to the Firebase-hosted &lt;a href=&#34;https://gallery-flutter-staging.web.app&#34;&gt;staging&lt;/a&gt; or &lt;a href=&#34;https://gallery.flutter.dev&#34;&gt;production&lt;/a&gt; site.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/gallery/actions/workflows/release_draft_github_release.yml&#34;&gt;Draft GitHub release&lt;/a&gt;: Drafts a GitHub release, including automatically generated release notes and packaged builds for Android, macOS, Linux, and Windows. &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The release draft is private until published. Upon being published, the specified version tag will be created.&lt;/p&gt; &#xA;   &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;For posterity, information about doing these things locally is available at &lt;a href=&#34;http://go/flutter-gallery-manual-deployment&#34;&gt;go/flutter-gallery-manual-deployment&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;The gallery has its own set of unit, golden, and integration tests.&lt;/p&gt; &#xA;&lt;p&gt;In addition, Flutter itself uses the gallery in tests. To enable breaking changes, the gallery version is pinned in two places:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter analyze&lt;/code&gt;: &lt;a href=&#34;https://github.com/flutter/tests/raw/master/registry/flutter_gallery.test&#34;&gt;https://github.com/flutter/tests/blob/master/registry/flutter_gallery.test&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DeviceLab tests: &lt;a href=&#34;https://github.com/flutter/flutter/raw/master/dev/devicelab/lib/versions/gallery.dart&#34;&gt;https://github.com/flutter/flutter/blob/master/dev/devicelab/lib/versions/gallery.dart&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>juliansteenbakker/mobile_scanner</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/juliansteenbakker/mobile_scanner</id>
    <link href="https://github.com/juliansteenbakker/mobile_scanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A universal scanner for Flutter based on MLKit. Uses CameraX on Android and AVFoundation on iOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mobile_scanner&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/mobile_scanner&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/mobile_scanner.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/lint&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-lint-4BC0F5.svg?sanitize=true&#34; alt=&#34;style: lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/juliansteenbakker/mobile_scanner/actions/workflows/flutter.yml&#34;&gt;&lt;img src=&#34;https://github.com/juliansteenbakker/mobile_scanner/actions/workflows/flutter.yml/badge.svg?sanitize=true&#34; alt=&#34;mobile_scanner&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/juliansteenbakker&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/juliansteenbakker?label=sponsor%20me&#34; alt=&#34;GitHub Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A universal barcode and QR code scanner for Flutter based on MLKit. Uses CameraX on Android, AVFoundation on iOS and Apple Vision &amp;amp; AVFoundation on macOS.&lt;/p&gt; &#xA;&lt;h2&gt;Platform Support&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MacOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Web&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;SDK 21 and newer. Reason: CameraX requires at least SDK 21. Also, make sure you upgrade kotlin to the latest version in your project.&lt;/p&gt; &#xA;&lt;p&gt;This packages uses the &lt;strong&gt;bundled version&lt;/strong&gt; of MLKit Barcode-scanning for Android. This version is more accurate and immediately available to devices. However, this version will increas the size of the app with approximately 3 to 10 MB. The alternative for this is to use the &lt;strong&gt;unbundled version&lt;/strong&gt; of MLKit Barcode-scanning for Android. This version is older than the bundled version however this only increases the size by around 600KB.&lt;/p&gt; &#xA;&lt;p&gt;To use this version you must alter the mobile_scanner gradle file to replace &lt;code&gt;com.google.mlkit:barcode-scanning:17.0.2&lt;/code&gt; with &lt;code&gt;com.google.android.gms:play-services-mlkit-barcode-scanning:18.0.0&lt;/code&gt;. Keep in mind that if you alter the gradle files directly in your project it can be overriden when you update your pubspec.yaml. I am still searching for a way to properly replace the module in gradle but have yet to find one.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/vision/barcode-scanning/android&#34;&gt;You can read more about the difference between the two versions here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;p&gt;iOS 11 and newer. Reason: MLKit for iOS requires at least iOS 10 and a &lt;a href=&#34;https://developers.google.com/ml-kit/migration/ios&#34;&gt;64bit device&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Add the following keys to your Info.plist file, located in &#xA;  &lt;project root&gt;&#xA;   /ios/Runner/Info.plist:&#xA;  &lt;/project&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;NSCameraUsageDescription - describe why your app needs access to the camera. This is called Privacy - Camera Usage Description in the visual editor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you want to use the local gallery feature from &lt;a href=&#34;https://pub.dev/packages/image_picker&#34;&gt;image_picker&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;NSPhotoLibraryUsageDescription - describe why your app needs permission for the photo library. This is called Privacy - Photo Library Usage Description in the visual editor.&lt;/p&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;macOS 10.13 or newer. Reason: Apple Vision library.&lt;/p&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;p&gt;Add this to &lt;code&gt;web/index.html&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/jsqr@1.4.0/dist/jsQR.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Web only supports QR codes for now. Do you have experience with Flutter Web development? &lt;a href=&#34;https://github.com/juliansteenbakker/mobile_scanner/issues/54&#34;&gt;Help me with migrating from jsQR to qr-scanner for full barcode support!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features Supported&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Features&lt;/th&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;   &lt;th&gt;macOS&lt;/th&gt; &#xA;   &lt;th&gt;Web&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;analyzeImage (Gallery)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Import &lt;code&gt;package:mobile_scanner/mobile_scanner.dart&lt;/code&gt;, and use the widget with or without the controller.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t provide a controller, you can&#39;t control functions like the torch(flash) or switching camera.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t set allowDuplicates to false, you can get multiple scans in a very short time, causing things like pop() to fire lots of times.&lt;/p&gt; &#xA;&lt;p&gt;Example without controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:mobile_scanner/mobile_scanner.dart&#39;;&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(title: const Text(&#39;Mobile Scanner&#39;)),&#xA;      body: MobileScanner(&#xA;          allowDuplicates: false,&#xA;          onDetect: (barcode, args) {&#xA;            if (barcode.rawValue == null) {&#xA;              debugPrint(&#39;Failed to scan Barcode&#39;);&#xA;            } else {&#xA;              final String code = barcode.rawValue!;&#xA;              debugPrint(&#39;Barcode found! $code&#39;);&#xA;            }&#xA;          }),&#xA;    );&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example with controller and initial values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:mobile_scanner/mobile_scanner.dart&#39;;&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(title: const Text(&#39;Mobile Scanner&#39;)),&#xA;      body: MobileScanner(&#xA;          allowDuplicates: false,&#xA;          controller: MobileScannerController(&#xA;            facing: CameraFacing.front, torchEnabled: true),&#xA;          onDetect: (barcode, args) {&#xA;            if (barcode.rawValue == null) {&#xA;              debugPrint(&#39;Failed to scan Barcode&#39;);&#xA;            } else {&#xA;              final String code = barcode.rawValue!;&#xA;              debugPrint(&#39;Barcode found! $code&#39;);&#xA;            }&#xA;          }),&#xA;    );&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example with controller and torch &amp;amp; camera controls:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:mobile_scanner/mobile_scanner.dart&#39;;&#xA;&#xA;  MobileScannerController cameraController = MobileScannerController();&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;        appBar: AppBar(&#xA;          title: const Text(&#39;Mobile Scanner&#39;),&#xA;          actions: [&#xA;            IconButton(&#xA;              color: Colors.white,&#xA;              icon: ValueListenableBuilder(&#xA;                valueListenable: cameraController.torchState,&#xA;                builder: (context, state, child) {&#xA;                  switch (state as TorchState) {&#xA;                    case TorchState.off:&#xA;                      return const Icon(Icons.flash_off, color: Colors.grey);&#xA;                    case TorchState.on:&#xA;                      return const Icon(Icons.flash_on, color: Colors.yellow);&#xA;                  }&#xA;                },&#xA;              ),&#xA;              iconSize: 32.0,&#xA;              onPressed: () =&amp;gt; cameraController.toggleTorch(),&#xA;            ),&#xA;            IconButton(&#xA;              color: Colors.white,&#xA;              icon: ValueListenableBuilder(&#xA;                valueListenable: cameraController.cameraFacingState,&#xA;                builder: (context, state, child) {&#xA;                  switch (state as CameraFacing) {&#xA;                    case CameraFacing.front:&#xA;                      return const Icon(Icons.camera_front);&#xA;                    case CameraFacing.back:&#xA;                      return const Icon(Icons.camera_rear);&#xA;                  }&#xA;                },&#xA;              ),&#xA;              iconSize: 32.0,&#xA;              onPressed: () =&amp;gt; cameraController.switchCamera(),&#xA;            ),&#xA;          ],&#xA;        ),&#xA;        body: MobileScanner(&#xA;            allowDuplicates: false,&#xA;            controller: cameraController,&#xA;            onDetect: (barcode, args) {&#xA;              if (barcode.rawValue == null) {&#xA;                debugPrint(&#39;Failed to scan Barcode&#39;);&#xA;              } else {&#xA;                final String code = barcode.rawValue!;&#xA;                debugPrint(&#39;Barcode found! $code&#39;);&#xA;              }&#xA;            }));&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>tommyxchow/frosty</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/tommyxchow/frosty</id>
    <link href="https://github.com/tommyxchow/frosty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Twitch client for iOS and Android with BTTV, FFZ, and 7TV support. Built with Flutter.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a align=&#34;center&#34; href=&#34;https://frostyapp.io&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/54859075/160067655-f96b7e62-67f7-43d6-96ea-19ac85418bf6.svg?sanitize=true&#34; width=&#34;180px&#34; alt=&#34;Frosty Logo&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Frosty&lt;/h1&gt;  &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A &lt;a href=&#34;https://www.twitch.tv/&#34;&gt;Twitch&lt;/a&gt; client for iOS and Android with &lt;a href=&#34;https://betterttv.com/&#34;&gt;BTTV&lt;/a&gt;, &lt;a href=&#34;https://www.frankerfacez.com/&#34;&gt;FFZ&lt;/a&gt;, and &lt;a href=&#34;https://7tv.app/&#34;&gt;7TV&lt;/a&gt; support. Built with &lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/tommyxchow/frosty/actions/workflows/main.yml&#34;&gt; &lt;img alt=&#34;CI&#34; src=&#34;https://github.com/tommyxchow/frosty/actions/workflows/main.yml/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/tommyxchow/frosty/issues&#34;&gt; &lt;img alt=&#34;Issues&#34; src=&#34;https://img.shields.io/github/issues/tommyxchow/frosty&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/tommyxchow/frosty/commits&#34;&gt; &lt;img alt=&#34;Last Commit&#34; src=&#34;https://img.shields.io/github/last-commit/tommyxchow/frosty&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/tommyxchow/frosty/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/github/license/tommyxchow/frosty&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/tommyxchow/frosty/releases/latest&#34;&gt; &lt;img alt=&#34;Release&#34; src=&#34;https://img.shields.io/github/v/release/tommyxchow/frosty&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://apps.apple.com/us/app/frosty-for-twitch/id1603987585&#34; target=&#34;_blank&#34;&gt; &lt;img title=&#34;Get it on iOS (Apple App Store)&#34; alt=&#34;Apple App Store Badge&#34; src=&#34;https://user-images.githubusercontent.com/54859075/160051843-1d8b2186-97e9-4edd-a957-bb4797b71b4a.svg?sanitize=true&#34; width=&#34;200px&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.tommychow.frosty&#34; target=&#34;_blank&#34;&gt; &lt;img title=&#34;Get it on Android (Google Play Store)&#34; alt=&#34;Google Play Store Badge&#34; src=&#34;https://user-images.githubusercontent.com/54859075/160051854-21a57556-6b5a-41e9-8127-334daf1fac47.svg?sanitize=true&#34; width=&#34;225px&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.buymeacoffee.com/tommychow&#34; target=&#34;_blank&#34;&gt; &lt;img title=&#34;Support the App!&#34; alt=&#34;Buy Me A Coffee&#34; src=&#34;https://user-images.githubusercontent.com/54859075/160051848-2e581476-a6c6-4de6-9af7-773d96632de1.svg?sanitize=true&#34; width=&#34;200px&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img title=&#34;Followed Streams&#34; alt=&#34;Followed Streams&#34; src=&#34;https://user-images.githubusercontent.com/54859075/170803307-57c16834-1a4b-4c9d-b7e3-9dd8f1a13c33.png&#34; width=&#34;32%&#34;&gt; &lt;img title=&#34;Categories Section&#34; alt=&#34;Categories Section&#34; src=&#34;https://user-images.githubusercontent.com/54859075/170803313-a7b122f4-36ac-480d-a138-dd8383c21bbe.png&#34; width=&#34;32%&#34;&gt; &lt;img title=&#34;Search Section&#34; alt=&#34;Search Section&#34; src=&#34;https://user-images.githubusercontent.com/54859075/170803326-5338aec5-f201-4b0a-aa60-9dc44d76ea67.png&#34; width=&#34;32%&#34;&gt; &lt;img title=&#34;Channel (Video/Chat) View&#34; alt=&#34;Channel (Video/Chat) View&#34; src=&#34;https://user-images.githubusercontent.com/54859075/170807736-f3fc4447-2d98-4a19-89d8-8d1b3f17c446.png&#34; width=&#34;32%&#34;&gt; &lt;img title=&#34;Emote Menu&#34; alt=&#34;Emote Menu&#34; src=&#34;https://user-images.githubusercontent.com/54859075/170807753-f3ae4eb4-a6ce-4261-901d-2e9ac5f147f7.png&#34; width=&#34;32%&#34;&gt; &lt;img title=&#34;Settings Section&#34; alt=&#34;Settings Section&#34; src=&#34;https://user-images.githubusercontent.com/54859075/170807760-7ffdd3a5-ce3a-43c3-85ae-24ae0b0874a4.png&#34; width=&#34;32%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Browse followed streams, top streams, and top categories&lt;/li&gt; &#xA; &lt;li&gt;Search for channels and categories&lt;/li&gt; &#xA; &lt;li&gt;Watch live streams with chat&lt;/li&gt; &#xA; &lt;li&gt;Support for BTTV, FFZ, and 7TV emotes/badges&lt;/li&gt; &#xA; &lt;li&gt;Emote menu and autocomplete&lt;/li&gt; &#xA; &lt;li&gt;Local chat user message history&lt;/li&gt; &#xA; &lt;li&gt;Chatters list with filter&lt;/li&gt; &#xA; &lt;li&gt;Theater and full-screen mode&lt;/li&gt; &#xA; &lt;li&gt;Picture-in-picture mode (iOS only)&lt;/li&gt; &#xA; &lt;li&gt;Sleep timer&lt;/li&gt; &#xA; &lt;li&gt;Block and report users&lt;/li&gt; &#xA; &lt;li&gt;Light, dark, and black (OLED) themes&lt;/li&gt; &#xA; &lt;li&gt;Customizable settings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;A major problem with the official Twitch app for many users is that emotes from services such as &lt;a href=&#34;https://chrome.google.com/webstore/detail/betterttv/ajopnjidmegmdimjlfnijceegpefgped&#34;&gt;BetterTTV (BTTV)&lt;/a&gt;, &lt;a href=&#34;https://chrome.google.com/webstore/detail/frankerfacez/fadndhdgpmmaapbmfcknlfgcflmmmieb&#34;&gt;FrankerFaceZ (FFZ)&lt;/a&gt;, and &lt;a href=&#34;https://chrome.google.com/webstore/detail/7tv/ammjkodgmmoknidbanneddgankgfejfh&#34;&gt;7TV&lt;/a&gt; are not officially supported. Twitch is unaffiliated with these services, hence why they haven&#39;t been integrated officially.&lt;/p&gt; &#xA;&lt;p&gt;As a result, the millions of users of these services have an unideal viewing experience on the official Twitch app. In the stream chat, only text is positioned where emotes should be (imagine only being able to see :emoji_code: rather than the emojis themselves).&lt;/p&gt; &#xA;&lt;p&gt;Frosty aims to bring these emotes and other general quality of life features to &lt;strong&gt;both iOS and Android&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to the &lt;a href=&#34;https://dev.twitch.tv/login&#34;&gt;Twitch dev console&lt;/a&gt; and register a new application to retrieve a &lt;strong&gt;client ID&lt;/strong&gt; and &lt;strong&gt;client secret&lt;/strong&gt; and add a &lt;strong&gt;OAuth redirect URL&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repo to a directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to &lt;code&gt;lib/constants/constants.dart&lt;/code&gt; and replace the &lt;code&gt;clientId&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; constants with your &lt;strong&gt;client ID&lt;/strong&gt; and &lt;strong&gt;client secret&lt;/strong&gt; (or better yet, if using VSCode use &lt;code&gt;--dart-define&lt;/code&gt; to &lt;a href=&#34;https://dartcode.org/docs/using-dart-define-in-flutter/&#34;&gt;define them as environment variables&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to &lt;code&gt;android/app/src/main/AndroidManifest.xml&lt;/code&gt; and under the &lt;code&gt;flutter_web_auth&lt;/code&gt; intent filter replace the value of &lt;code&gt;android:scheme&lt;/code&gt; to the scheme in your &lt;strong&gt;OAuth redirect URL&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;flutter pub get&lt;/code&gt; to fetch all the dependencies.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose an emulator or device and run the app!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Can I change the quality of the stream?&lt;/h3&gt; &#xA;&lt;p&gt;On Android, you can change the stream quality by turning off the custom stream overlay in the settings and tapping the gear icon on the bottom right.&lt;/p&gt; &#xA;&lt;p&gt;On iOS, sadly quality options aren&#39;t available through the native player and rely on an &#34;auto&#34; setting. There is no official API for getting the live stream URLs so specific quality options are not possible at this time.&lt;/p&gt; &#xA;&lt;h3&gt;Why is there no picture-in-picture (PiP) on Android?&lt;/h3&gt; &#xA;&lt;p&gt;I&#39;ve looked into implementing it for Android a while back but web browsers on Android don&#39;t support the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Picture-in-Picture_API&#34;&gt;web Picture-in-Picture API&lt;/a&gt;. The reason I&#39;m using the web PiP API is due to limitations in the Twitch API (the stream is just the Twitch channel website in fullscreen rather than an actual video player). I &lt;em&gt;might&lt;/em&gt; be able to figure something out by working with the native Android code but I&#39;ll have to learn that first.&lt;/p&gt; &#xA;&lt;h3&gt;Why do certain animations and scrolling appear to be janky?&lt;/h3&gt; &#xA;&lt;p&gt;Due to the Flutter framework, there may be some stutter and jank on the first installation and launch. After using and moving around the app for a bit the jank will be mitigated through shader warmup/caching and should be minimal on subsequent launches. Watching a stream with a relatively fast chat for a couple of minutes usually resolves it.&lt;/p&gt; &#xA;&lt;h3&gt;Why isn&#39;t the video stream playing on Android?&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re on an older version of Android (below 7.1.1), the video stream will not play properly due to the reliance on Twitch&#39;s web player. Older Android versions use an older version of the native web browser (WebView), resulting in many compatibility issues with newer websites.&lt;/p&gt; &#xA;&lt;h3&gt;Why am I getting ads even though I&#39;m subscribed to the channel or have Turbo?&lt;/h3&gt; &#xA;&lt;p&gt;Even if you&#39;ve logged in to the app, you&#39;ll still have to log in to the WebView so that you can be identified when the stream plays. You can do so by going to the settings and then under the &#34;Account&#34; section tap the &#34;Log in to WebView&#34; button.&lt;/p&gt; &#xA;&lt;h3&gt;Why is there a delay between the stream and chat?&lt;/h3&gt; &#xA;&lt;p&gt;On Android, the delay should be minimal. Try refreshing the player if you have a delay.&lt;/p&gt; &#xA;&lt;p&gt;On iOS, there seems to be delays up to 15 seconds due to the native player so unfortunately it&#39;s out of my control. The best you can do for now is refreshing or pausing/playing the stream until the delay is minimized.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: Starting with version 1.4.0, there is a new message delay option that lets you set the delay (in seconds) before each message is rendered.&lt;/p&gt; &#xA;&lt;h3&gt;Why are some GIFs either slow or very fast?&lt;/h3&gt; &#xA;&lt;p&gt;This seems to be caused by the Flutter framework itself (see &lt;a href=&#34;https://github.com/flutter/flutter/issues/24804&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://github.com/flutter/flutter/issues/29130&#34;&gt;here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Why is ProMotion (120hz) not working?&lt;/h3&gt; &#xA;&lt;p&gt;This is caused by the Flutter framework and is being worked on (see &lt;a href=&#34;https://github.com/flutter/flutter/issues/90675&#34;&gt;here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: With Flutter 3 and version 1.3.0 of the app, ProMotion &lt;em&gt;should&lt;/em&gt; be working.&lt;/p&gt; &#xA;&lt;h3&gt;Why is feature &#34;X&#34; from Twitch not in the app as well?&lt;/h3&gt; &#xA;&lt;p&gt;I&#39;m limited to what is available in the &lt;a href=&#34;https://dev.twitch.tv/docs/api/reference&#34;&gt;Twitch API&lt;/a&gt;, so certain features from the Twitch web or mobile app (e.g., voting on predictions and category viewer count) are sadly not available at the moment.&lt;/p&gt; &#xA;&lt;p&gt;Other features related to ad-blocking or utilizing private APIs will likely not be implemented officially because they would violate Twitch&#39;s terms of service. My highest priority currently is staying on the app stores and focusing on making features for those builds.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ll try to add as many features as possible but occasionally I may take a break or be limited in time due to studies and personal reasons.&lt;/p&gt; &#xA;&lt;h3&gt;Where can I report a bug or request a new feature?&lt;/h3&gt; &#xA;&lt;p&gt;You can open a new issue &lt;a href=&#34;https://github.com/tommyxchow/frosty/issues&#34;&gt;here&lt;/a&gt; with the appropriate labels (e.g., &#34;bug&#34; or &#34;feature request&#34;) and I&#39;ll take a look at it.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Frosty is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/tommyxchow/frosty/main/LICENSE&#34;&gt;AGPL-3.0-or-later&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flame-engine/flame</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/flame-engine/flame</id>
    <link href="https://github.com/flame-engine/flame" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter based game engine&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt; &lt;img alt=&#34;flame&#34; width=&#34;200px&#34; src=&#34;https://user-images.githubusercontent.com/6718144/101553774-3bc7b000-39ad-11eb-8a6a-de2daa31bd64.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A Flutter-based game engine. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Pub&#34; href=&#34;https://pub.dev/packages/flame&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flame.svg?style=popout&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/flame-engine/flame/workflows/cicd/badge.svg?branch=main&amp;amp;event=push&#34; alt=&#34;Test&#34;&gt; &lt;a title=&#34;Discord&#34; href=&#34;https://discord.gg/pxrBmy4&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/509714518008528896.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Melos&#34; href=&#34;https://github.com/invertase/melos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20with-melos-f700ff.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-ZH.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-PL.md&#34;&gt;Polski&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-RU.md&#34;&gt;Русский&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-ES.md&#34;&gt;Español&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-JA.md&#34;&gt;日本語&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The full documentation for Flame can be found on &lt;a href=&#34;https://docs.flame-engine.org/&#34;&gt;docs.flame-engine.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To change the version of the documentation, use the version selector noted with &lt;code&gt;version:&lt;/code&gt; in the top of the page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The documentation that resides in the main branch is newer than the released documentation on the docs website.&lt;/p&gt; &#xA;&lt;p&gt;Other useful links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flame-engine.org/&#34;&gt;The official Flame site&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://examples.flame-engine.org/&#34;&gt;Examples&lt;/a&gt; of most features which can be tried out from your browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tutorials.flame-engine.org/&#34;&gt;Tutorials&lt;/a&gt; - A simple tutorial to get started.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/flame/latest/&#34;&gt;API Reference&lt;/a&gt; - The generated dartdoc API reference.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;There is a Flame community on &lt;a href=&#34;https://discord.gg/5unKpdQD78&#34;&gt;Blue Fire&#39;s Discord server&lt;/a&gt; where you can ask any of your Flame related questions.&lt;/p&gt; &#xA;&lt;p&gt;If you are more comfortable with StackOverflow, you can also create a question there. Add the &lt;a href=&#34;https://stackoverflow.com/questions/tagged/flame&#34;&gt;Flame tag&lt;/a&gt;, so that anyone following the tag can help out.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The goal of the Flame Engine is to provide a complete set of out-of-the-way solutions for common problems that games developed with Flutter might share.&lt;/p&gt; &#xA;&lt;p&gt;Some of the key features provided are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A game loop.&lt;/li&gt; &#xA; &lt;li&gt;A component/object system (FCS).&lt;/li&gt; &#xA; &lt;li&gt;Effects and particles.&lt;/li&gt; &#xA; &lt;li&gt;Collision detection.&lt;/li&gt; &#xA; &lt;li&gt;Gesture and input handling.&lt;/li&gt; &#xA; &lt;li&gt;Images, animations, sprites, and sprite sheets.&lt;/li&gt; &#xA; &lt;li&gt;General utilities to make development easier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On top of those features, you can augment Flame with bridge packages. Through these libraries, you will be able to access bindings to other packages, including custom Flame components and helpers, in order to make integrations seamless.&lt;/p&gt; &#xA;&lt;p&gt;Flame officially provides bridge libraries to the following packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_audio&#34;&gt;flame_audio&lt;/a&gt; for &lt;a href=&#34;https://github.com/bluefireteam/audioplayers&#34;&gt;AudioPlayers&lt;/a&gt;: Play multiple audio files simultaneously.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_bloc&#34;&gt;flame_bloc&lt;/a&gt; for &lt;a href=&#34;https://github.com/felangel/bloc&#34;&gt;Bloc&lt;/a&gt;: A predictable state management library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_fire_atlas&#34;&gt;flame_fire_atlas&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/fire-atlas&#34;&gt;FireAtlas&lt;/a&gt;: Create texture atlases for games.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_forge2d&#34;&gt;flame_forge2d&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/forge2d&#34;&gt;Forge2D&lt;/a&gt;: A Box2D physics engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_lint&#34;&gt;flame_lint&lt;/a&gt; - Our set of linting (&lt;code&gt;analysis_options.yaml&lt;/code&gt;) rules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_oxygen&#34;&gt;flame_oxygen&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/oxygen&#34;&gt;Oxygen&lt;/a&gt;: A lightweight Entity Component System (ECS) framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_rive&#34;&gt;flame_rive&lt;/a&gt; for &lt;a href=&#34;https://rive.app/&#34;&gt;Rive&lt;/a&gt;: Create interactive animations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_svg&#34;&gt;flame_svg&lt;/a&gt; for &lt;a href=&#34;https://github.com/dnfield/flutter_svg&#34;&gt;flutter_svg&lt;/a&gt;: Draw SVG files in Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_tiled&#34;&gt;flame_tiled&lt;/a&gt; for &lt;a href=&#34;https://www.mapeditor.org/&#34;&gt;Tiled&lt;/a&gt;: 2D tile map level editor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;The Flame Engine&#39;s top sponsors:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://verygood.ventures/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/media/unicorn_two_toned.png&#34; alt=&#34;Very Good Ventures&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cypherstack.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/media/logo_cypherstack.png&#34; alt=&#34;Cypher Stack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to sponsor Flame? Check our Patreon on the section below, or contact us on Discord.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to show us your support is by giving the project a star.&lt;/p&gt; &#xA;&lt;p&gt;You can also support us by becoming a patron on Patreon:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/bluefireoss&#34;&gt;&lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button.png&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or by making a single donation by buying us a coffee:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/bluefire&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/835641/60540201-fcd7fa00-9ce4-11e9-87ec-1e98568e9f58.png&#34; alt=&#34;Buy Me A Coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also show on your repository that your game is made with Flame by using one of the following badges:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?sanitize=true&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?style=flat-square&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?style=for-the-badge&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg)](https://flame-engine.org)&#xA;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg?style=flat-square)](https://flame-engine.org)&#xA;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg?style=for-the-badge)](https://flame-engine.org)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Have you found a bug or have a suggestion of how to enhance Flame? Open an issue and we will take a look at it as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;Do you want to contribute with a PR? PRs are always welcome, just make sure to create it from the correct branch (main) and follow the &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/.github/pull_request_template.md&#34;&gt;checklist&lt;/a&gt; which will appear when you open the PR.&lt;/p&gt; &#xA;&lt;p&gt;For bigger changes, or if in doubt, make sure to talk about your contribution to the team. Either via an issue, GitHub discussion, or reach out to the team either using the &lt;a href=&#34;https://discord.gg/pxrBmy4&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;A simple tutorial to get started can be found on &lt;a href=&#34;https://tutorials.flame-engine.org&#34;&gt;tutorials.flame-engine.org&lt;/a&gt; and examples of most features in Flame can be found on &lt;a href=&#34;https://examples.flame-engine.org&#34;&gt;examples.flame-engine.org&lt;/a&gt;. To access the code for each example, press the &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt; button in the top right corner.&lt;/p&gt; &#xA;&lt;h3&gt;Highlighted community tutorials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;@Devowl&#39;s Flutter &amp;amp; Flame series:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-flame-step-1-create-your-game-b3b6ee387d77&#34;&gt;Step 1: Create your game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-flame-step-2-game-basics-48b4493424f3&#34;&gt;Step 2: Game basics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-3-sprites-and-inputs-7ca9cc7c8b91&#34;&gt;Step 3: Sprites and inputs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-4-collisions-viewport-ff2da048e3a6&#34;&gt;Step 4: Collisions &amp;amp; Viewport&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-5-level-generation-camera-62a060a286e3&#34;&gt;Step 5: Level generation &amp;amp; camera&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Other tutorials:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;@Vguzzi&#39;s article &lt;a href=&#34;https://www.raywenderlich.com/27407121-building-games-in-flutter-with-flame-getting-started&#34;&gt;Building Games in Flutter with Flame&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;@DevKage&#39;s YouTube series with the &lt;a href=&#34;https://www.youtube.com/playlist?list=PLiZZKL9HLmWOmQgYxWHuOHOWsUUlhCCOY&#34;&gt;Dino run tutorial&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We offer a curated list of Games, Libraries and Articles over at &lt;a href=&#34;https://github.com/flame-engine/awesome-flame&#34;&gt;awesome-flame&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that some of the articles might be slightly outdated, but can still be useful.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/orgs/bluefireteam/people&#34;&gt;Blue Fire team&lt;/a&gt;, who are continuously working on maintaining and improving Flame and its ecosystem.&lt;/li&gt; &#xA; &lt;li&gt;All the friendly contributors and people who are helping in the community.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>TheAlphamerc/flutter_ecommerce_app</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/TheAlphamerc/flutter_ecommerce_app</id>
    <link href="https://github.com/TheAlphamerc/flutter_ecommerce_app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;E-Commerce App built in flutter&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;flutter_ecommerce_app&lt;/h2&gt; &#xA;&lt;p&gt;E-Commerce app is a design implementaion of &lt;a href=&#34;https://dribbble.com/shots/10446127-E-commerce-App-Exploration/attachments/2283107?mode=media&#34;&gt;E-commerce App&lt;/a&gt; designed by &lt;a href=&#34;https://dribbble.com/Saif_Uddin_Imran&#34;&gt;Imran&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hits.seeyoufarm.com&#34;&gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2FTheAlphamerc%2Fflutter_ecommerce_app&amp;amp;count_bg=%2379C83D&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=hits&amp;amp;edge_flat=false&#34; alt=&#34;Hits&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/workflows/Dart%20CI/badge.svg?sanitize=true&#34; alt=&#34;Dart CI&#34;&gt; &lt;a href=&#34;https://github.com/Thealphamerc/flutter_ecommerce_app&#34;&gt;&lt;img src=&#34;https://badges.frapsoft.com/os/v2/open-source.svg?v=103&#34; alt=&#34;Open Source Love&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/twitter/url?style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fthealphamerc&#34; alt=&#34;Twitter URL&#34;&gt; &lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_ecommerce_app&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_ecommerce_app?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/forks/TheAlphamerc/flutter_ecommerce_app?style=social&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download App &lt;img src=&#34;https://img.shields.io/github/downloads/Thealphamerc/flutter_ecommerce_app/total?color=green&#34; alt=&#34;GitHub All Releases&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/releases/download/v1.0.0/app-release.apk&#34;&gt;&lt;img src=&#34;https://playerzon.com/asset/download.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://cdn.dribbble.com/users/2432994/screenshots/10446127/media/fa0a9ce348e0bfa18b00ba2240543064.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Android Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;HomePage&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Product Detail Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Cart Page&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/raw/master/screenshots/screenshot_1.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/raw/master/screenshots/screenshot_2.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/raw/master/screenshots/screenshot_3.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;iOS Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;HomePage&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Product Detail Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Cart Page&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/raw/master/screenshots/screenshot_ios_1.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/raw/master/screenshots/screenshot_ios_2.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_ecommerce_app/raw/master/screenshots/screenshot_ios_3.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;lib&#xA;│───main.dart    &#xA;└───src&#xA;    │───config&#xA;    |    └──route.dart&#xA;    │───model&#xA;    │    │──category.dart&#xA;    |    │──data.dart&#xA;    |    └──product.dart&#xA;    │───pages&#xA;    |    │──homePage.dart&#xA;    |    │──mainPage.dart&#xA;    |    │──product_detail.dart&#xA;    |    └──shoping_cart_page.dart&#xA;    │───theme&#xA;    |    │──light_color.dart&#xA;    |    └──theme.dart&#xA;    └───widgets&#xA;         │──BottomNavigationBar&#xA;         |   |──bootom_navigation_bar.dart&#xA;         |   |──bottom_curved_Painter.dart&#xA;         |   └──centered_elasticIn_curve.dart&#xA;         |──bottom_navigation_bar.dart&#xA;         |  customRoute.dart&#xA;         |  prduct_icon.dart&#xA;         │──product_card.dart&#xA;         └──title_text.dart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pull Requests&lt;/h2&gt; &#xA;&lt;p&gt;I welcome and encourage all pull requests. It usually will take me within 24-48 hours to respond to any issue or request.&lt;/p&gt; &#xA;&lt;h2&gt;Flutter projects&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Project Name&lt;/th&gt; &#xA;   &lt;th&gt;Stars&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone&#34;&gt;Twitter clone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_twitter_clone&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_twitter_clone?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_healthcare_app&#34;&gt;Healthcare App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_healthcare_app&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_healthcare_app?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_smart_course&#34;&gt;Smart course&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_smart_course&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_smart_course?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_pokedex&#34;&gt;Pokedex&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_pokedex&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_pokedex?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_login_signup&#34;&gt;Authentication&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_login_signup&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_login_signup?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_wallet_app&#34;&gt;Wallet App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_wallet_app&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_wallet_app?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_news_app&#34;&gt;News App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_news_app&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_news_app?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_SoftUI_watchApp&#34;&gt;Watch App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_SoftUI_watchApp&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_SoftUI_watchApp?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_smart_home_app&#34;&gt;Smart Home App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_smart_home_app&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_smart_home_app?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_yatch_booking&#34;&gt;Yatch Booking App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_yatch_booking&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_yatch_booking?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Flutter plugins&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Plugin Name&lt;/th&gt; &#xA;   &lt;th&gt;Stars&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/empty_widget&#34;&gt;Empty widget&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%empty_widget&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/empty_widget?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_plugin_add_thumbnail&#34;&gt;Add Thumbnail&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_plugin_add_thumbnail&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_plugin_add_thumbnail?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/flutter_plugin_filter_list&#34;&gt;Filter List&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_plugin_filter_list&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_plugin_filter_list?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Created &amp;amp; Maintained By&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TheAlphamerc&#34;&gt;Sonu Sharma&lt;/a&gt; (&lt;a href=&#34;https://www.twitter.com/TheAlphamerc&#34;&gt;Twitter&lt;/a&gt;) (&lt;a href=&#34;https://www.youtube.com/user/sonusharma045sonu/&#34;&gt;Youtube&lt;/a&gt;) (&lt;a href=&#34;https://www.instagram.com/_sonu_sharma__&#34;&gt;Insta&lt;/a&gt;) (&lt;a href=&#34;https://dev.to/thealphamerc&#34;&gt;Dev.to&lt;/a&gt;) &lt;img src=&#34;https://img.shields.io/twitter/follow/thealphamerc?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you found this project helpful or you learned something from the source code and want to thank me, consider buying me a cup of &lt;span&gt;☕&lt;/span&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.paypal.me/TheAlphamerc/&#34;&gt;PayPal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can also nominate me for Github Star developer program &lt;a href=&#34;https://stars.github.com/nominate&#34;&gt;https://stars.github.com/nominate&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Visitors Count&lt;/h2&gt; &#xA;&lt;img align=&#34;left&#34; src=&#34;https://profile-counter.glitch.me/flutter_ecommerce_app/count.svg?sanitize=true&#34; alt=&#34;Loading&#34;&gt;</summary>
  </entry>
  <entry>
    <title>google/charts</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/google/charts</id>
    <link href="https://github.com/google/charts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Charts is a general charting library, currently enabled for the &lt;a href=&#34;https://flutter.io&#34;&gt;Flutter mobile UI framework&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://google.github.io/charts/flutter/gallery.html&#34;&gt;online gallery&lt;/a&gt; for supported chart types and examples of how to custom components of the chart.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This is not an official Google product.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/google/charts&#34;&gt;&lt;img src=&#34;https://travis-ci.org/google/charts.svg?branch=master&#34; alt=&#34;Travis CI Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;charts_common&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/charts_common&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/charts_common.svg?sanitize=true&#34; alt=&#34;charts_common pub package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A common library for charting packages.&lt;/p&gt; &#xA;&lt;h2&gt;charts_flutter&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/charts_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/charts_flutter.svg?sanitize=true&#34; alt=&#34;charts_flutter pub package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A charting package for &lt;a href=&#34;https://flutter.io&#34;&gt;Flutter&lt;/a&gt;, supporting both Android and iOS.&lt;/p&gt; &#xA;&lt;p&gt;All charts packages are licensed under the Apache 2 license, see the &lt;a href=&#34;https://raw.githubusercontent.com/google/charts/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/google/charts/master/AUTHORS&#34;&gt;AUTHORS&lt;/a&gt; files for details.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;This project is developed internally at Google and published for external consumption, external contributions unfortunately cannot be taken at this time.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jonataslaw/getx</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/jonataslaw/getx</id>
    <link href="https://github.com/jonataslaw/getx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open screens/snackbars/dialogs/bottomSheets without context, manage states and inject dependencies easily with Get.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonataslaw/getx-community/master/get.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/get&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/get.svg?label=get&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/sentry/score&#34;&gt;&lt;img src=&#34;https://badges.bar/get/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/get/score&#34;&gt;&lt;img src=&#34;https://badges.bar/get/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/get/score&#34;&gt;&lt;img src=&#34;https://badges.bar/get/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/jonataslaw/get/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;building&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/effective_dart&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-effective_dart-40c4ff.svg?sanitize=true&#34; alt=&#34;style: effective dart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/9Hpt99N&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/722900883784073290.svg?logo=discord&#34; alt=&#34;Discord Shield&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://communityinviter.com/apps/getxworkspace/getx&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-orange.svg?sanitize=true&#34; alt=&#34;Get on Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/joinchat/PhdbJRmsZNpAqSLJL6bH7g&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Telegram-blue.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Solido/awesome-flutter&#34;&gt; &lt;img alt=&#34;Awesome Flutter&#34; src=&#34;https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.buymeacoffee.com/jonataslaw&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://i.imgur.com/aV6DDA7.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important; box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonataslaw/getx-community/master/getx.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;strong&gt;Languages:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-English-blueviolet?style=for-the-badge&#34; alt=&#34;English&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README-vi.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Vietnamese-blueviolet?style=for-the-badge&#34; alt=&#34;Vietnamese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.id-ID.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Indonesian-blueviolet?style=for-the-badge&#34; alt=&#34;Indonesian&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ur-PK.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Urdu-blueviolet?style=for-the-badge&#34; alt=&#34;Urdu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.zh-cn.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Chinese-blueviolet?style=for-the-badge&#34; alt=&#34;Chinese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.pt-br.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Portuguese-blueviolet?style=for-the-badge&#34; alt=&#34;Portuguese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README-es.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Spanish-blueviolet?style=for-the-badge&#34; alt=&#34;Spanish&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ru.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Russian-blueviolet?style=for-the-badge&#34; alt=&#34;Russian&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.pl.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Polish-blueviolet?style=for-the-badge&#34; alt=&#34;Polish&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ko-kr.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Korean-blueviolet?style=for-the-badge&#34; alt=&#34;Korean&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README-fr.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-French-blueviolet?style=for-the-badge&#34; alt=&#34;French&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ja-JP.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Japanese-blueviolet?style=for-the-badge&#34; alt=&#34;Japanese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.tr-TR.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Turkish-blueviolet?style=for-the-badge&#34; alt=&#34;Turkish&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#about-get&#34;&gt;About Get&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#installing&#34;&gt;Installing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#counter-app-with-getx&#34;&gt;Counter App with GetX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#the-three-pillars&#34;&gt;The Three pillars&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#state-management&#34;&gt;State management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#reactive-state-manager&#34;&gt;Reactive State Manager&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#more-details-about-state-management&#34;&gt;More details about state management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#route-management&#34;&gt;Route management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#more-details-about-route-management&#34;&gt;More details about route management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#dependency-management&#34;&gt;Dependency management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#more-details-about-dependency-management&#34;&gt;More details about dependency management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#utils&#34;&gt;Utils&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#internationalization&#34;&gt;Internationalization&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#translations&#34;&gt;Translations&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#using-translations&#34;&gt;Using translations&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#locales&#34;&gt;Locales&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#change-locale&#34;&gt;Change locale&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#system-locale&#34;&gt;System locale&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#change-theme&#34;&gt;Change Theme&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getconnect&#34;&gt;GetConnect&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#default-configuration&#34;&gt;Default configuration&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#custom-configuration&#34;&gt;Custom configuration&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getpage-middleware&#34;&gt;GetPage Middleware&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#priority&#34;&gt;Priority&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#redirect&#34;&gt;Redirect&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagecalled&#34;&gt;onPageCalled&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onbindingsstart&#34;&gt;OnBindingsStart&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagebuildstart&#34;&gt;OnPageBuildStart&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagebuilt&#34;&gt;OnPageBuilt&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagedispose&#34;&gt;OnPageDispose&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#other-advanced-apis&#34;&gt;Other Advanced APIs&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#optional-global-settings-and-manual-configurations&#34;&gt;Optional Global Settings and Manual configurations&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#local-state-widgets&#34;&gt;Local State Widgets&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#valuebuilder&#34;&gt;ValueBuilder&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#obxvalue&#34;&gt;ObxValue&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#useful-tips&#34;&gt;Useful tips&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getview&#34;&gt;GetView&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getresponsiveview&#34;&gt;GetResponsiveView&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#how-to-use-it&#34;&gt;How to use it&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getwidget&#34;&gt;GetWidget&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getxservice&#34;&gt;GetxService&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#breaking-changes-from-20&#34;&gt;Breaking changes from 2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#why-getx&#34;&gt;Why Getx?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#community&#34;&gt;Community&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#community-channels&#34;&gt;Community channels&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#how-to-contribute&#34;&gt;How to contribute&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#articles-and-videos&#34;&gt;Articles and videos&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;About Get&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX is an extra-light and powerful solution for Flutter. It combines high-performance state management, intelligent dependency injection, and route management quickly and practically.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX has 3 basic principles. This means that these are the priority for all resources in the library: &lt;strong&gt;PRODUCTIVITY, PERFORMANCE AND ORGANIZATION.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;PERFORMANCE:&lt;/strong&gt; GetX is focused on performance and minimum consumption of resources. GetX does not use Streams or ChangeNotifier.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;PRODUCTIVITY:&lt;/strong&gt; GetX uses an easy and pleasant syntax. No matter what you want to do, there is always an easier way with GetX. It will save hours of development and will provide the maximum performance your application can deliver.&lt;/p&gt; &lt;p&gt;Generally, the developer should be concerned with removing controllers from memory. With GetX this is not necessary because resources are removed from memory when they are not used by default. If you want to keep it in memory, you must explicitly declare &#34;permanent: true&#34; in your dependency. That way, in addition to saving time, you are less at risk of having unnecessary dependencies on memory. Dependency loading is also lazy by default.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;ORGANIZATION:&lt;/strong&gt; GetX allows the total decoupling of the View, presentation logic, business logic, dependency injection, and navigation. You do not need context to navigate between routes, so you are not dependent on the widget tree (visualization) for this. You don&#39;t need context to access your controllers/blocs through an inheritedWidget, so you completely decouple your presentation logic and business logic from your visualization layer. You do not need to inject your Controllers/Models/Blocs classes into your widget tree through &lt;code&gt;MultiProvider&lt;/code&gt;s. For this, GetX uses its own dependency injection feature, decoupling the DI from its view completely.&lt;/p&gt; &lt;p&gt;With GetX you know where to find each feature of your application, having clean code by default. In addition to making maintenance easy, this makes the sharing of modules something that until then in Flutter was unthinkable, something totally possible. BLoC was a starting point for organizing code in Flutter, it separates business logic from visualization. GetX is a natural evolution of this, not only separating the business logic but the presentation logic. Bonus injection of dependencies and routes are also decoupled, and the data layer is out of it all. You know where everything is, and all of this in an easier way than building a hello world. GetX is the easiest, practical, and scalable way to build high-performance applications with the Flutter SDK. It has a large ecosystem around it that works perfectly together, it&#39;s easy for beginners, and it&#39;s accurate for experts. It is secure, stable, up-to-date, and offers a huge range of APIs built-in that are not present in the default Flutter SDK.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX is not bloated. It has a multitude of features that allow you to start programming without worrying about anything, but each of these features are in separate containers and are only started after use. If you only use State Management, only State Management will be compiled. If you only use routes, nothing from the state management will be compiled.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX has a huge ecosystem, a large community, a large number of collaborators, and will be maintained as long as the Flutter exists. GetX too is capable of running with the same code on Android, iOS, Web, Mac, Linux, Windows, and on your server. &lt;strong&gt;It is possible to fully reuse your code made on the frontend on your backend with &lt;a href=&#34;https://github.com/jonataslaw/get_server&#34;&gt;Get Server&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;In addition, the entire development process can be completely automated, both on the server and on the front end with &lt;a href=&#34;https://github.com/jonataslaw/get_cli&#34;&gt;Get CLI&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;In addition, to further increase your productivity, we have the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=get-snippets.get-snippets&#34;&gt;extension to VSCode&lt;/a&gt; and the &lt;a href=&#34;https://plugins.jetbrains.com/plugin/14975-getx-snippets&#34;&gt;extension to Android Studio/Intellij&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installing&lt;/h1&gt; &#xA;&lt;p&gt;Add Get to your pubspec.yaml file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  get:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Import get in files that it will be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:get/get.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Counter App with GetX&lt;/h1&gt; &#xA;&lt;p&gt;The &#34;counter&#34; project created by default on new project on Flutter has over 100 lines (with comments). To show the power of Get, I will demonstrate how to make a &#34;counter&#34; changing the state with each click, switching between pages and sharing the state between screens, all in an organized way, separating the business logic from the view, in ONLY 26 LINES CODE INCLUDING COMMENTS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1: Add &#34;Get&#34; before your MaterialApp, turning it into GetMaterialApp&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void main() =&amp;gt; runApp(GetMaterialApp(home: Home()));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Note: this does not modify the MaterialApp of the Flutter, GetMaterialApp is not a modified MaterialApp, it is just a pre-configured Widget, which has the default MaterialApp as a child. You can configure this manually, but it is definitely not necessary. GetMaterialApp will create routes, inject them, inject translations, inject everything you need for route navigation. If you use Get only for state management or dependency management, it is not necessary to use GetMaterialApp. GetMaterialApp is necessary for routes, snackbars, internationalization, bottomSheets, dialogs, and high-level apis related to routes and absence of context.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Note²: This step is only necessary if you gonna use route management (&lt;code&gt;Get.to()&lt;/code&gt;, &lt;code&gt;Get.back()&lt;/code&gt; and so on). If you not gonna use it then it is not necessary to do step 1&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Step 2: Create your business logic class and place all variables, methods and controllers inside it. You can make any variable observable using a simple &#34;.obs&#34;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Controller extends GetxController{&#xA;  var count = 0.obs;&#xA;  increment() =&amp;gt; count++;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 3: Create your View, use StatelessWidget and save some RAM, with Get you may no longer need to use StatefulWidget.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Home extends StatelessWidget {&#xA;&#xA;  @override&#xA;  Widget build(context) {&#xA;&#xA;    // Instantiate your class using Get.put() to make it available for all &#34;child&#34; routes there.&#xA;    final Controller c = Get.put(Controller());&#xA;&#xA;    return Scaffold(&#xA;      // Use Obx(()=&amp;gt; to update Text() whenever count is changed.&#xA;      appBar: AppBar(title: Obx(() =&amp;gt; Text(&#34;Clicks: ${c.count}&#34;))),&#xA;&#xA;      // Replace the 8 lines Navigator.push by a simple Get.to(). You don&#39;t need context&#xA;      body: Center(child: ElevatedButton(&#xA;              child: Text(&#34;Go to Other&#34;), onPressed: () =&amp;gt; Get.to(Other()))),&#xA;      floatingActionButton:&#xA;          FloatingActionButton(child: Icon(Icons.add), onPressed: c.increment));&#xA;  }&#xA;}&#xA;&#xA;class Other extends StatelessWidget {&#xA;  // You can ask Get to find a Controller that is being used by another page and redirect you to it.&#xA;  final Controller c = Get.find();&#xA;&#xA;  @override&#xA;  Widget build(context){&#xA;     // Access the updated count variable&#xA;     return Scaffold(body: Center(child: Text(&#34;${c.count}&#34;)));&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Result:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonataslaw/getx-community/master/counter-app-gif.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a simple project but it already makes clear how powerful Get is. As your project grows, this difference will become more significant.&lt;/p&gt; &#xA;&lt;p&gt;Get was designed to work with teams, but it makes the job of an individual developer simple.&lt;/p&gt; &#xA;&lt;p&gt;Improve your deadlines, deliver everything on time without losing performance. Get is not for everyone, but if you identified with that phrase, Get is for you!&lt;/p&gt; &#xA;&lt;h1&gt;The Three pillars&lt;/h1&gt; &#xA;&lt;h2&gt;State management&lt;/h2&gt; &#xA;&lt;p&gt;Get has two different state managers: the simple state manager (we&#39;ll call it GetBuilder) and the reactive state manager (GetX/Obx)&lt;/p&gt; &#xA;&lt;h3&gt;Reactive State Manager&lt;/h3&gt; &#xA;&lt;p&gt;Reactive programming can alienate many people because it is said to be complicated. GetX turns reactive programming into something quite simple:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You won&#39;t need to create StreamControllers.&lt;/li&gt; &#xA; &lt;li&gt;You won&#39;t need to create a StreamBuilder for each variable&lt;/li&gt; &#xA; &lt;li&gt;You will not need to create a class for each state.&lt;/li&gt; &#xA; &lt;li&gt;You will not need to create a get for an initial value.&lt;/li&gt; &#xA; &lt;li&gt;You will not need to use code generators&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Reactive programming with Get is as easy as using setState.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s imagine that you have a name variable and want that every time you change it, all widgets that use it are automatically changed.&lt;/p&gt; &#xA;&lt;p&gt;This is your count variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var name = &#39;Jonatas Borges&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make it observable, you just need to add &#34;.obs&#34; to the end of it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var name = &#39;Jonatas Borges&#39;.obs;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in the UI, when you want to show that value and update the screen whenever the values changes, simply do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Obx(() =&amp;gt; Text(&#34;${controller.name}&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s all. It&#39;s &lt;em&gt;that&lt;/em&gt; simple.&lt;/p&gt; &#xA;&lt;h3&gt;More details about state management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;See an more in-depth explanation of state management &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/state_management.md&#34;&gt;here&lt;/a&gt;. There you will see more examples and also the difference between the simple state manager and the reactive state manager&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will get a good idea of GetX power.&lt;/p&gt; &#xA;&lt;h2&gt;Route management&lt;/h2&gt; &#xA;&lt;p&gt;If you are going to use routes/snackbars/dialogs/bottomsheets without context, GetX is excellent for you too, just see it:&lt;/p&gt; &#xA;&lt;p&gt;Add &#34;Get&#34; before your MaterialApp, turning it into GetMaterialApp&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp( // Before: MaterialApp(&#xA;  home: MyHome(),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to a new screen:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;Get.to(NextScreen());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to new screen with name. See more details on named routes &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/route_management.md#navigation-with-named-routes&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;Get.toNamed(&#39;/details&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To close snackbars, dialogs, bottomsheets, or anything you would normally close with Navigator.pop(context);&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.back();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To go to the next screen and no option to go back to the previous screen (for use in SplashScreens, login screens, etc.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.off(NextScreen());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To go to the next screen and cancel all previous routes (useful in shopping carts, polls, and tests)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.offAll(NextScreen());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Noticed that you didn&#39;t have to use context to do any of these things? That&#39;s one of the biggest advantages of using Get route management. With this, you can execute all these methods from within your controller class, without worries.&lt;/p&gt; &#xA;&lt;h3&gt;More details about route management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Get works with named routes and also offers lower-level control over your routes! There is in-depth documentation &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/route_management.md&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependency management&lt;/h2&gt; &#xA;&lt;p&gt;Get has a simple and powerful dependency manager that allows you to retrieve the same class as your Bloc or Controller with just 1 lines of code, no Provider context, no inheritedWidget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Controller controller = Get.put(Controller()); // Rather Controller controller = Controller();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Note: If you are using Get&#39;s State Manager, pay more attention to the bindings API, which will make it easier to connect your view to your controller.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instead of instantiating your class within the class you are using, you are instantiating it within the Get instance, which will make it available throughout your App. So you can use your controller (or class Bloc) normally&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Get dependency management is decoupled from other parts of the package, so if for example, your app is already using a state manager (any one, it doesn&#39;t matter), you don&#39;t need to rewrite it all, you can use this dependency injection with no problems at all&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;controller.fetchApi();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Imagine that you have navigated through numerous routes, and you need data that was left behind in your controller, you would need a state manager combined with the Provider or Get_it, correct? Not with Get. You just need to ask Get to &#34;find&#34; for your controller, you don&#39;t need any additional dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Controller controller = Get.find();&#xA;//Yes, it looks like Magic, Get will find your controller, and will deliver it to you. You can have 1 million controllers instantiated, Get will always give you the right controller.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then you will be able to recover your controller data that was obtained back there:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Text(controller.textFromApi);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;More details about dependency management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;See a more in-depth explanation of dependency management &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/dependency_management.md&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Utils&lt;/h1&gt; &#xA;&lt;h2&gt;Internationalization&lt;/h2&gt; &#xA;&lt;h3&gt;Translations&lt;/h3&gt; &#xA;&lt;p&gt;Translations are kept as a simple key-value dictionary map. To add custom translations, create a class and extend &lt;code&gt;Translations&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:get/get.dart&#39;;&#xA;&#xA;class Messages extends Translations {&#xA;  @override&#xA;  Map&amp;lt;String, Map&amp;lt;String, String&amp;gt;&amp;gt; get keys =&amp;gt; {&#xA;        &#39;en_US&#39;: {&#xA;          &#39;hello&#39;: &#39;Hello World&#39;,&#xA;        },&#xA;        &#39;de_DE&#39;: {&#xA;          &#39;hello&#39;: &#39;Hallo Welt&#39;,&#xA;        }&#xA;      };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using translations&lt;/h4&gt; &#xA;&lt;p&gt;Just append &lt;code&gt;.tr&lt;/code&gt; to the specified key and it will be translated, using the current value of &lt;code&gt;Get.locale&lt;/code&gt; and &lt;code&gt;Get.fallbackLocale&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Text(&#39;title&#39;.tr);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using translation with singular and plural&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var products = [];&#xA;Text(&#39;singularKey&#39;.trPlural(&#39;pluralKey&#39;, products.length, Args));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using translation with parameters&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:get/get.dart&#39;;&#xA;&#xA;&#xA;Map&amp;lt;String, Map&amp;lt;String, String&amp;gt;&amp;gt; get keys =&amp;gt; {&#xA;    &#39;en_US&#39;: {&#xA;        &#39;logged_in&#39;: &#39;logged in as @name with email @email&#39;,&#xA;    },&#xA;    &#39;es_ES&#39;: {&#xA;       &#39;logged_in&#39;: &#39;iniciado sesión como @name con e-mail @email&#39;,&#xA;    }&#xA;};&#xA;&#xA;Text(&#39;logged_in&#39;.trParams({&#xA;  &#39;name&#39;: &#39;Jhon&#39;,&#xA;  &#39;email&#39;: &#39;jhon@example.com&#39;&#xA;  }));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Locales&lt;/h3&gt; &#xA;&lt;p&gt;Pass parameters to &lt;code&gt;GetMaterialApp&lt;/code&gt; to define the locale and translations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;return GetMaterialApp(&#xA;    translations: Messages(), // your translations&#xA;    locale: Locale(&#39;en&#39;, &#39;US&#39;), // translations will be displayed in that locale&#xA;    fallbackLocale: Locale(&#39;en&#39;, &#39;UK&#39;), // specify the fallback locale in case an invalid locale is selected.&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Change locale&lt;/h4&gt; &#xA;&lt;p&gt;Call &lt;code&gt;Get.updateLocale(locale)&lt;/code&gt; to update the locale. Translations then automatically use the new locale.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var locale = Locale(&#39;en&#39;, &#39;US&#39;);&#xA;Get.updateLocale(locale);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;System locale&lt;/h4&gt; &#xA;&lt;p&gt;To read the system locale, you could use &lt;code&gt;Get.deviceLocale&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;return GetMaterialApp(&#xA;    locale: Get.deviceLocale,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Change Theme&lt;/h2&gt; &#xA;&lt;p&gt;Please do not use any higher level widget than &lt;code&gt;GetMaterialApp&lt;/code&gt; in order to update it. This can trigger duplicate keys. A lot of people are used to the prehistoric approach of creating a &#34;ThemeProvider&#34; widget just to change the theme of your app, and this is definitely NOT necessary with &lt;strong&gt;GetX™&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can create your custom theme and simply add it within &lt;code&gt;Get.changeTheme&lt;/code&gt; without any boilerplate for that:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.changeTheme(ThemeData.light());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to create something like a button that changes the Theme in &lt;code&gt;onTap&lt;/code&gt;, you can combine two &lt;strong&gt;GetX™&lt;/strong&gt; APIs for that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The api that checks if the dark &lt;code&gt;Theme&lt;/code&gt; is being used.&lt;/li&gt; &#xA; &lt;li&gt;And the &lt;code&gt;Theme&lt;/code&gt; Change API, you can just put this within an &lt;code&gt;onPressed&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.changeTheme(Get.isDarkMode? ThemeData.light(): ThemeData.dark());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When &lt;code&gt;.darkmode&lt;/code&gt; is activated, it will switch to the &lt;em&gt;light theme&lt;/em&gt;, and when the &lt;em&gt;light theme&lt;/em&gt; becomes active, it will change to &lt;em&gt;dark theme&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;GetConnect&lt;/h2&gt; &#xA;&lt;p&gt;GetConnect is an easy way to communicate from your back to your front with http or websockets&lt;/p&gt; &#xA;&lt;h3&gt;Default configuration&lt;/h3&gt; &#xA;&lt;p&gt;You can simply extend GetConnect and use the GET/POST/PUT/DELETE/SOCKET methods to communicate with your Rest API or websockets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class UserProvider extends GetConnect {&#xA;  // Get request&#xA;  Future&amp;lt;Response&amp;gt; getUser(int id) =&amp;gt; get(&#39;http://youapi/users/$id&#39;);&#xA;  // Post request&#xA;  Future&amp;lt;Response&amp;gt; postUser(Map data) =&amp;gt; post(&#39;http://youapi/users&#39;, body: data);&#xA;  // Post request with File&#xA;  Future&amp;lt;Response&amp;lt;CasesModel&amp;gt;&amp;gt; postCases(List&amp;lt;int&amp;gt; image) {&#xA;    final form = FormData({&#xA;      &#39;file&#39;: MultipartFile(image, filename: &#39;avatar.png&#39;),&#xA;      &#39;otherFile&#39;: MultipartFile(image, filename: &#39;cover.png&#39;),&#xA;    });&#xA;    return post(&#39;http://youapi/users/upload&#39;, form);&#xA;  }&#xA;&#xA;  GetSocket userMessages() {&#xA;    return socket(&#39;https://yourapi/users/socket&#39;);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom configuration&lt;/h3&gt; &#xA;&lt;p&gt;GetConnect is highly customizable You can define base Url, as answer modifiers, as Requests modifiers, define an authenticator, and even the number of attempts in which it will try to authenticate itself, in addition to giving the possibility to define a standard decoder that will transform all your requests into your Models without any additional configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class HomeProvider extends GetConnect {&#xA;  @override&#xA;  void onInit() {&#xA;    // All request will pass to jsonEncode so CasesModel.fromJson()&#xA;    httpClient.defaultDecoder = CasesModel.fromJson;&#xA;    httpClient.baseUrl = &#39;https://api.covid19api.com&#39;;&#xA;    // baseUrl = &#39;https://api.covid19api.com&#39;; // It define baseUrl to&#xA;    // Http and websockets if used with no [httpClient] instance&#xA;&#xA;    // It&#39;s will attach &#39;apikey&#39; property on header from all requests&#xA;    httpClient.addRequestModifier((request) {&#xA;      request.headers[&#39;apikey&#39;] = &#39;12345678&#39;;&#xA;      return request;&#xA;    });&#xA;&#xA;    // Even if the server sends data from the country &#34;Brazil&#34;,&#xA;    // it will never be displayed to users, because you remove&#xA;    // that data from the response, even before the response is delivered&#xA;    httpClient.addResponseModifier&amp;lt;CasesModel&amp;gt;((request, response) {&#xA;      CasesModel model = response.body;&#xA;      if (model.countries.contains(&#39;Brazil&#39;)) {&#xA;        model.countries.remove(&#39;Brazilll&#39;);&#xA;      }&#xA;    });&#xA;&#xA;    httpClient.addAuthenticator((request) async {&#xA;      final response = await get(&#34;http://yourapi/token&#34;);&#xA;      final token = response.body[&#39;token&#39;];&#xA;      // Set the header&#xA;      request.headers[&#39;Authorization&#39;] = &#34;$token&#34;;&#xA;      return request;&#xA;    });&#xA;&#xA;    //Autenticator will be called 3 times if HttpStatus is&#xA;    //HttpStatus.unauthorized&#xA;    httpClient.maxAuthRetries = 3;&#xA;  }&#xA;  }&#xA;&#xA;  @override&#xA;  Future&amp;lt;Response&amp;lt;CasesModel&amp;gt;&amp;gt; getCases(String path) =&amp;gt; get(path);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GetPage Middleware&lt;/h2&gt; &#xA;&lt;p&gt;The GetPage has now new property that takes a list of GetMiddleWare and run them in the specific order.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: When GetPage has a Middlewares, all the children of this page will have the same middlewares automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Priority&lt;/h3&gt; &#xA;&lt;p&gt;The Order of the Middlewares to run can be set by the priority in the GetMiddleware.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final middlewares = [&#xA;  GetMiddleware(priority: 2),&#xA;  GetMiddleware(priority: 5),&#xA;  GetMiddleware(priority: 4),&#xA;  GetMiddleware(priority: -8),&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;those middlewares will be run in this order &lt;strong&gt;-8 =&amp;gt; 2 =&amp;gt; 4 =&amp;gt; 5&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Redirect&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called when the page of the called route is being searched for. It takes RouteSettings as a result to redirect to. Or give it null and there will be no redirecting.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;RouteSettings redirect(String route) {&#xA;  final authService = Get.find&amp;lt;AuthService&amp;gt;();&#xA;  return authService.authed.value ? null : RouteSettings(name: &#39;/login&#39;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;onPageCalled&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called when this Page is called before anything created you can use it to change something about the page or give it new page&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetPage onPageCalled(GetPage page) {&#xA;  final authService = Get.find&amp;lt;AuthService&amp;gt;();&#xA;  return page.copyWith(title: &#39;Welcome ${authService.UserName}&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OnBindingsStart&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right before the Bindings are initialize. Here you can change Bindings for this page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;List&amp;lt;Bindings&amp;gt; onBindingsStart(List&amp;lt;Bindings&amp;gt; bindings) {&#xA;  final authService = Get.find&amp;lt;AuthService&amp;gt;();&#xA;  if (authService.isAdmin) {&#xA;    bindings.add(AdminBinding());&#xA;  }&#xA;  return bindings;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OnPageBuildStart&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right after the Bindings are initialize. Here you can do something after that you created the bindings and before creating the page widget.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetPageBuilder onPageBuildStart(GetPageBuilder page) {&#xA;  print(&#39;bindings are ready&#39;);&#xA;  return page;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OnPageBuilt&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right after the GetPage.page function is called and will give you the result of the function. and take the widget that will be showed.&lt;/p&gt; &#xA;&lt;h3&gt;OnPageDispose&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right after disposing all the related objects (Controllers, views, ...) of the page.&lt;/p&gt; &#xA;&lt;h2&gt;Other Advanced APIs&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// give the current args from currentScreen&#xA;Get.arguments&#xA;&#xA;// give name of previous route&#xA;Get.previousRoute&#xA;&#xA;// give the raw route to access for example, rawRoute.isFirst()&#xA;Get.rawRoute&#xA;&#xA;// give access to Routing API from GetObserver&#xA;Get.routing&#xA;&#xA;// check if snackbar is open&#xA;Get.isSnackbarOpen&#xA;&#xA;// check if dialog is open&#xA;Get.isDialogOpen&#xA;&#xA;// check if bottomsheet is open&#xA;Get.isBottomSheetOpen&#xA;&#xA;// remove one route.&#xA;Get.removeRoute()&#xA;&#xA;// back repeatedly until the predicate returns true.&#xA;Get.until()&#xA;&#xA;// go to next route and remove all the previous routes until the predicate returns true.&#xA;Get.offUntil()&#xA;&#xA;// go to next named route and remove all the previous routes until the predicate returns true.&#xA;Get.offNamedUntil()&#xA;&#xA;//Check in what platform the app is running&#xA;GetPlatform.isAndroid&#xA;GetPlatform.isIOS&#xA;GetPlatform.isMacOS&#xA;GetPlatform.isWindows&#xA;GetPlatform.isLinux&#xA;GetPlatform.isFuchsia&#xA;&#xA;//Check the device type&#xA;GetPlatform.isMobile&#xA;GetPlatform.isDesktop&#xA;//All platforms are supported independently in web!&#xA;//You can tell if you are running inside a browser&#xA;//on Windows, iOS, OSX, Android, etc.&#xA;GetPlatform.isWeb&#xA;&#xA;&#xA;// Equivalent to : MediaQuery.of(context).size.height,&#xA;// but immutable.&#xA;Get.height&#xA;Get.width&#xA;&#xA;// Gives the current context of the Navigator.&#xA;Get.context&#xA;&#xA;// Gives the context of the snackbar/dialog/bottomsheet in the foreground, anywhere in your code.&#xA;Get.contextOverlay&#xA;&#xA;// Note: the following methods are extensions on context. Since you&#xA;// have access to context in any place of your UI, you can use it anywhere in the UI code&#xA;&#xA;// If you need a changeable height/width (like Desktop or browser windows that can be scaled) you will need to use context.&#xA;context.width&#xA;context.height&#xA;&#xA;// Gives you the power to define half the screen, a third of it and so on.&#xA;// Useful for responsive applications.&#xA;// param dividedBy (double) optional - default: 1&#xA;// param reducedBy (double) optional - default: 0&#xA;context.heightTransformer()&#xA;context.widthTransformer()&#xA;&#xA;/// Similar to MediaQuery.of(context).size&#xA;context.mediaQuerySize()&#xA;&#xA;/// Similar to MediaQuery.of(context).padding&#xA;context.mediaQueryPadding()&#xA;&#xA;/// Similar to MediaQuery.of(context).viewPadding&#xA;context.mediaQueryViewPadding()&#xA;&#xA;/// Similar to MediaQuery.of(context).viewInsets;&#xA;context.mediaQueryViewInsets()&#xA;&#xA;/// Similar to MediaQuery.of(context).orientation;&#xA;context.orientation()&#xA;&#xA;/// Check if device is on landscape mode&#xA;context.isLandscape()&#xA;&#xA;/// Check if device is on portrait mode&#xA;context.isPortrait()&#xA;&#xA;/// Similar to MediaQuery.of(context).devicePixelRatio;&#xA;context.devicePixelRatio()&#xA;&#xA;/// Similar to MediaQuery.of(context).textScaleFactor;&#xA;context.textScaleFactor()&#xA;&#xA;/// Get the shortestSide from screen&#xA;context.mediaQueryShortestSide()&#xA;&#xA;/// True if width be larger than 800&#xA;context.showNavbar()&#xA;&#xA;/// True if the shortestSide is smaller than 600p&#xA;context.isPhone()&#xA;&#xA;/// True if the shortestSide is largest than 600p&#xA;context.isSmallTablet()&#xA;&#xA;/// True if the shortestSide is largest than 720p&#xA;context.isLargeTablet()&#xA;&#xA;/// True if the current device is Tablet&#xA;context.isTablet()&#xA;&#xA;/// Returns a value&amp;lt;T&amp;gt; according to the screen size&#xA;/// can give value for:&#xA;/// watch: if the shortestSide is smaller than 300&#xA;/// mobile: if the shortestSide is smaller than 600&#xA;/// tablet: if the shortestSide is smaller than 1200&#xA;/// desktop: if width is largest than 1200&#xA;context.responsiveValue&amp;lt;T&amp;gt;()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Optional Global Settings and Manual configurations&lt;/h3&gt; &#xA;&lt;p&gt;GetMaterialApp configures everything for you, but if you want to configure Get manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;  navigatorKey: Get.key,&#xA;  navigatorObservers: [GetObserver()],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will also be able to use your own Middleware within &lt;code&gt;GetObserver&lt;/code&gt;, this will not influence anything.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;  navigatorKey: Get.key,&#xA;  navigatorObservers: [&#xA;    GetObserver(MiddleWare.observer) // Here&#xA;  ],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can create &lt;em&gt;Global Settings&lt;/em&gt; for &lt;code&gt;Get&lt;/code&gt;. Just add &lt;code&gt;Get.config&lt;/code&gt; to your code before pushing any route. Or do it directly in your &lt;code&gt;GetMaterialApp&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  enableLog: true,&#xA;  defaultTransition: Transition.fade,&#xA;  opaqueRoute: Get.isOpaqueRouteDefault,&#xA;  popGesture: Get.isPopGestureEnable,&#xA;  transitionDuration: Get.defaultDurationTransition,&#xA;  defaultGlobalState: Get.defaultGlobalState,&#xA;);&#xA;&#xA;Get.config(&#xA;  enableLog = true,&#xA;  defaultPopGesture = true,&#xA;  defaultTransition = Transitions.cupertino&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can optionally redirect all the logging messages from &lt;code&gt;Get&lt;/code&gt;. If you want to use your own, favourite logging package, and want to capture the logs there:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  enableLog: true,&#xA;  logWriterCallback: localLogWriter,&#xA;);&#xA;&#xA;void localLogWriter(String text, {bool isError = false}) {&#xA;  // pass the message to your favourite logging package here&#xA;  // please note that even if enableLog: false log messages will be pushed in this callback&#xA;  // you get check the flag if you want through GetConfig.isLogEnable&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Local State Widgets&lt;/h3&gt; &#xA;&lt;p&gt;These Widgets allows you to manage a single value, and keep the state ephemeral and locally. We have flavours for Reactive and Simple. For instance, you might use them to toggle obscureText in a &lt;code&gt;TextField&lt;/code&gt;, maybe create a custom Expandable Panel, or maybe modify the current index in &lt;code&gt;BottomNavigationBar&lt;/code&gt; while changing the content of the body in a &lt;code&gt;Scaffold&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;ValueBuilder&lt;/h4&gt; &#xA;&lt;p&gt;A simplification of &lt;code&gt;StatefulWidget&lt;/code&gt; that works with a &lt;code&gt;.setState&lt;/code&gt; callback that takes the updated value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ValueBuilder&amp;lt;bool&amp;gt;(&#xA;  initialValue: false,&#xA;  builder: (value, updateFn) =&amp;gt; Switch(&#xA;    value: value,&#xA;    onChanged: updateFn, // same signature! you could use ( newValue ) =&amp;gt; updateFn( newValue )&#xA;  ),&#xA;  // if you need to call something outside the builder method.&#xA;  onUpdate: (value) =&amp;gt; print(&#34;Value updated: $value&#34;),&#xA;  onDispose: () =&amp;gt; print(&#34;Widget unmounted&#34;),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;ObxValue&lt;/h4&gt; &#xA;&lt;p&gt;Similar to &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#valuebuilder&#34;&gt;&lt;code&gt;ValueBuilder&lt;/code&gt;&lt;/a&gt;, but this is the Reactive version, you pass a Rx instance (remember the magical .obs?) and updates automatically... isn&#39;t it awesome?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ObxValue((data) =&amp;gt; Switch(&#xA;        value: data.value,&#xA;        onChanged: data, // Rx has a _callable_ function! You could use (flag) =&amp;gt; data.value = flag,&#xA;    ),&#xA;    false.obs,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Useful tips&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;.obs&lt;/code&gt;ervables (also known as &lt;em&gt;Rx&lt;/em&gt; Types) have a wide variety of internal methods and operators.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Is very common to &lt;em&gt;believe&lt;/em&gt; that a property with &lt;code&gt;.obs&lt;/code&gt; &lt;strong&gt;IS&lt;/strong&gt; the actual value... but make no mistake! We avoid the Type declaration of the variable, because Dart&#39;s compiler is smart enough, and the code looks cleaner, but:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var message = &#39;Hello world&#39;.obs;&#xA;print( &#39;Message &#34;$message&#34; has Type ${message.runtimeType}&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Even if &lt;code&gt;message&lt;/code&gt; &lt;em&gt;prints&lt;/em&gt; the actual String value, the Type is &lt;strong&gt;RxString&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;p&gt;So, you can&#39;t do &lt;code&gt;message.substring( 0, 4 )&lt;/code&gt;. You have to access the real &lt;code&gt;value&lt;/code&gt; inside the &lt;em&gt;observable&lt;/em&gt;: The most &#34;used way&#34; is &lt;code&gt;.value&lt;/code&gt;, but, did you know that you can also use...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final name = &#39;GetX&#39;.obs;&#xA;// only &#34;updates&#34; the stream, if the value is different from the current one.&#xA;name.value = &#39;Hey&#39;;&#xA;&#xA;// All Rx properties are &#34;callable&#34; and returns the new value.&#xA;// but this approach does not accepts `null`, the UI will not rebuild.&#xA;name(&#39;Hello&#39;);&#xA;&#xA;// is like a getter, prints &#39;Hello&#39;.&#xA;name() ;&#xA;&#xA;/// numbers:&#xA;&#xA;final count = 0.obs;&#xA;&#xA;// You can use all non mutable operations from num primitives!&#xA;count + 1;&#xA;&#xA;// Watch out! this is only valid if `count` is not final, but var&#xA;count += 1;&#xA;&#xA;// You can also compare against values:&#xA;count &amp;gt; 2;&#xA;&#xA;/// booleans:&#xA;&#xA;final flag = false.obs;&#xA;&#xA;// switches the value between true/false&#xA;flag.toggle();&#xA;&#xA;&#xA;/// all types:&#xA;&#xA;// Sets the `value` to null.&#xA;flag.nil();&#xA;&#xA;// All toString(), toJson() operations are passed down to the `value`&#xA;print( count ); // calls `toString()` inside  for RxInt&#xA;&#xA;final abc = [0,1,2].obs;&#xA;// Converts the value to a json Array, prints RxList&#xA;// Json is supported by all Rx types!&#xA;print(&#39;json: ${jsonEncode(abc)}, type: ${abc.runtimeType}&#39;);&#xA;&#xA;// RxMap, RxList and RxSet are special Rx types, that extends their native types.&#xA;// but you can work with a List as a regular list, although is reactive!&#xA;abc.add(12); // pushes 12 to the list, and UPDATES the stream.&#xA;abc[3]; // like Lists, reads the index 3.&#xA;&#xA;&#xA;// equality works with the Rx and the value, but hashCode is always taken from the value&#xA;final number = 12.obs;&#xA;print( number == 12 ); // prints &amp;gt; true&#xA;&#xA;/// Custom Rx Models:&#xA;&#xA;// toJson(), toString() are deferred to the child, so you can implement override on them, and print() the observable directly.&#xA;&#xA;class User {&#xA;    String name, last;&#xA;    int age;&#xA;    User({this.name, this.last, this.age});&#xA;&#xA;    @override&#xA;    String toString() =&amp;gt; &#39;$name $last, $age years old&#39;;&#xA;}&#xA;&#xA;final user = User(name: &#39;John&#39;, last: &#39;Doe&#39;, age: 33).obs;&#xA;&#xA;// `user` is &#34;reactive&#34;, but the properties inside ARE NOT!&#xA;// So, if we change some variable inside of it...&#xA;user.value.name = &#39;Roi&#39;;&#xA;// The widget will not rebuild!,&#xA;// `Rx` don&#39;t have any clue when you change something inside user.&#xA;// So, for custom classes, we need to manually &#34;notify&#34; the change.&#xA;user.refresh();&#xA;&#xA;// or we can use the `update()` method!&#xA;user.update((value){&#xA;  value.name=&#39;Roi&#39;;&#xA;});&#xA;&#xA;print( user );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;StateMixin&lt;/h2&gt; &#xA;&lt;p&gt;Another way to handle your &lt;code&gt;UI&lt;/code&gt; state is use the &lt;code&gt;StateMixin&amp;lt;T&amp;gt;&lt;/code&gt; . To implement it, use the &lt;code&gt;with&lt;/code&gt; to add the &lt;code&gt;StateMixin&amp;lt;T&amp;gt;&lt;/code&gt; to your controller which allows a T model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Controller extends GetController with StateMixin&amp;lt;User&amp;gt;{}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;change()&lt;/code&gt; method change the State whenever we want. Just pass the data and the status in this way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;change(data, status: RxStatus.success());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;RxStatus allow these status:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;RxStatus.loading();&#xA;RxStatus.success();&#xA;RxStatus.empty();&#xA;RxStatus.error(&#39;message&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To represent it in the UI, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class OtherClass extends GetView&amp;lt;Controller&amp;gt; {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;&#xA;      body: controller.obx(&#xA;        (state)=&amp;gt;Text(state.name),&#xA;        &#xA;        // here you can put your custom loading indicator, but&#xA;        // by default would be Center(child:CircularProgressIndicator())&#xA;        onLoading: CustomLoadingIndicator(),&#xA;        onEmpty: Text(&#39;No data found&#39;),&#xA;&#xA;        // here also you can set your own error widget, but by&#xA;        // default will be an Center(child:Text(error))&#xA;        onError: (error)=&amp;gt;Text(error),&#xA;      ),&#xA;    );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;GetView&lt;/h4&gt; &#xA;&lt;p&gt;I love this Widget, is so simple, yet, so useful!&lt;/p&gt; &#xA;&lt;p&gt;Is a &lt;code&gt;const Stateless&lt;/code&gt; Widget that has a getter &lt;code&gt;controller&lt;/code&gt; for a registered &lt;code&gt;Controller&lt;/code&gt;, that&#39;s all.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; class AwesomeController extends GetController {&#xA;   final String title = &#39;My Awesome View&#39;;&#xA; }&#xA;&#xA;  // ALWAYS remember to pass the `Type` you used to register your controller!&#xA; class AwesomeView extends GetView&amp;lt;AwesomeController&amp;gt; {&#xA;   @override&#xA;   Widget build(BuildContext context) {&#xA;     return Container(&#xA;       padding: EdgeInsets.all(20),&#xA;       child: Text(controller.title), // just call `controller.something`&#xA;     );&#xA;   }&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;GetResponsiveView&lt;/h4&gt; &#xA;&lt;p&gt;Extend this widget to build responsive view. this widget contains the &lt;code&gt;screen&lt;/code&gt; property that have all information about the screen size and type.&lt;/p&gt; &#xA;&lt;h5&gt;How to use it&lt;/h5&gt; &#xA;&lt;p&gt;You have two options to build it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;with &lt;code&gt;builder&lt;/code&gt; method you return the widget to build.&lt;/li&gt; &#xA; &lt;li&gt;with methods &lt;code&gt;desktop&lt;/code&gt;, &lt;code&gt;tablet&lt;/code&gt;,&lt;code&gt;phone&lt;/code&gt;, &lt;code&gt;watch&lt;/code&gt;. the specific method will be built when the screen type matches the method when the screen is [ScreenType.Tablet] the &lt;code&gt;tablet&lt;/code&gt; method will be exuded and so on. &lt;strong&gt;Note:&lt;/strong&gt; If you use this method please set the property &lt;code&gt;alwaysUseBuilder&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With &lt;code&gt;settings&lt;/code&gt; property you can set the width limit for the screen types.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SchabanBo/get_page_example/raw/master/docs/Example.gif?raw=true&#34; alt=&#34;example&#34;&gt; Code to this screen &lt;a href=&#34;https://github.com/SchabanBo/get_page_example/raw/master/lib/pages/responsive_example/responsive_view.dart&#34;&gt;code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;GetWidget&lt;/h4&gt; &#xA;&lt;p&gt;Most people have no idea about this Widget, or totally confuse the usage of it. The use case is very rare, but very specific: It &lt;code&gt;caches&lt;/code&gt; a Controller. Because of the &lt;em&gt;cache&lt;/em&gt;, can&#39;t be a &lt;code&gt;const Stateless&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;So, when do you need to &#34;cache&#34; a Controller?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you use, another &#34;not so common&#34; feature of &lt;strong&gt;GetX&lt;/strong&gt;: &lt;code&gt;Get.create()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Get.create(()=&amp;gt;Controller())&lt;/code&gt; will generate a new &lt;code&gt;Controller&lt;/code&gt; each time you call &lt;code&gt;Get.find&amp;lt;Controller&amp;gt;()&lt;/code&gt;,&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s where &lt;code&gt;GetWidget&lt;/code&gt; shines... as you can use it, for example, to keep a list of Todo items. So, if the widget gets &#34;rebuilt&#34;, it will keep the same controller instance.&lt;/p&gt; &#xA;&lt;h4&gt;GetxService&lt;/h4&gt; &#xA;&lt;p&gt;This class is like a &lt;code&gt;GetxController&lt;/code&gt;, it shares the same lifecycle ( &lt;code&gt;onInit()&lt;/code&gt;, &lt;code&gt;onReady()&lt;/code&gt;, &lt;code&gt;onClose()&lt;/code&gt;). But has no &#34;logic&#34; inside of it. It just notifies &lt;strong&gt;GetX&lt;/strong&gt; Dependency Injection system, that this subclass &lt;strong&gt;can not&lt;/strong&gt; be removed from memory.&lt;/p&gt; &#xA;&lt;p&gt;So is super useful to keep your &#34;Services&#34; always reachable and active with &lt;code&gt;Get.find()&lt;/code&gt;. Like: &lt;code&gt;ApiService&lt;/code&gt;, &lt;code&gt;StorageService&lt;/code&gt;, &lt;code&gt;CacheService&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;void&amp;gt; main() async {&#xA;  await initServices(); /// AWAIT SERVICES INITIALIZATION.&#xA;  runApp(SomeApp());&#xA;}&#xA;&#xA;/// Is a smart move to make your Services intiialize before you run the Flutter app.&#xA;/// as you can control the execution flow (maybe you need to load some Theme configuration,&#xA;/// apiKey, language defined by the User... so load SettingService before running ApiService.&#xA;/// so GetMaterialApp() doesnt have to rebuild, and takes the values directly.&#xA;void initServices() async {&#xA;  print(&#39;starting services ...&#39;);&#xA;  /// Here is where you put get_storage, hive, shared_pref initialization.&#xA;  /// or moor connection, or whatever that&#39;s async.&#xA;  await Get.putAsync(() =&amp;gt; DbService().init());&#xA;  await Get.putAsync(SettingsService()).init();&#xA;  print(&#39;All services started...&#39;);&#xA;}&#xA;&#xA;class DbService extends GetxService {&#xA;  Future&amp;lt;DbService&amp;gt; init() async {&#xA;    print(&#39;$runtimeType delays 2 sec&#39;);&#xA;    await 2.delay();&#xA;    print(&#39;$runtimeType ready!&#39;);&#xA;    return this;&#xA;  }&#xA;}&#xA;&#xA;class SettingsService extends GetxService {&#xA;  void init() async {&#xA;    print(&#39;$runtimeType delays 1 sec&#39;);&#xA;    await 1.delay();&#xA;    print(&#39;$runtimeType ready!&#39;);&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The only way to actually delete a &lt;code&gt;GetxService&lt;/code&gt;, is with &lt;code&gt;Get.reset()&lt;/code&gt; which is like a &#34;Hot Reboot&#34; of your app. So remember, if you need absolute persistence of a class instance during the lifetime of your app, use &lt;code&gt;GetxService&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;You can test your controllers like any other class, including their lifecycles:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Controller extends GetxController {&#xA;  @override&#xA;  void onInit() {&#xA;    super.onInit();&#xA;    //Change value to name2&#xA;    name.value = &#39;name2&#39;;&#xA;  }&#xA;&#xA;  @override&#xA;  void onClose() {&#xA;    name.value = &#39;&#39;;&#xA;    super.onClose();&#xA;  }&#xA;&#xA;  final name = &#39;name1&#39;.obs;&#xA;&#xA;  void changeName() =&amp;gt; name.value = &#39;name3&#39;;&#xA;}&#xA;&#xA;void main() {&#xA;  test(&#39;&#39;&#39;&#xA;Test the state of the reactive variable &#34;name&#34; across all of its lifecycles&#39;&#39;&#39;,&#xA;      () {&#xA;    /// You can test the controller without the lifecycle,&#xA;    /// but it&#39;s not recommended unless you&#39;re not using&#xA;    ///  GetX dependency injection&#xA;    final controller = Controller();&#xA;    expect(controller.name.value, &#39;name1&#39;);&#xA;&#xA;    /// If you are using it, you can test everything,&#xA;    /// including the state of the application after each lifecycle.&#xA;    Get.put(controller); // onInit was called&#xA;    expect(controller.name.value, &#39;name2&#39;);&#xA;&#xA;    /// Test your functions&#xA;    controller.changeName();&#xA;    expect(controller.name.value, &#39;name3&#39;);&#xA;&#xA;    /// onClose was called&#xA;    Get.delete&amp;lt;Controller&amp;gt;();&#xA;&#xA;    expect(controller.name.value, &#39;&#39;);&#xA;  });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Tips&lt;/h4&gt; &#xA;&lt;h5&gt;Mockito or mocktail&lt;/h5&gt; &#xA;&lt;p&gt;If you need to mock your GetxController/GetxService, you should extend GetxController, and mixin it with Mock, that way&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class NotificationServiceMock extends GetxService with Mock implements NotificationService {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Using Get.reset()&lt;/h5&gt; &#xA;&lt;p&gt;If you are testing widgets, or test groups, use Get.reset at the end of your test or in tearDown to reset all settings from your previous test.&lt;/p&gt; &#xA;&lt;h5&gt;Get.testMode&lt;/h5&gt; &#xA;&lt;p&gt;if you are using your navigation in your controllers, use &lt;code&gt;Get.testMode = true&lt;/code&gt; at the beginning of your main.&lt;/p&gt; &#xA;&lt;h1&gt;Breaking changes from 2.0&lt;/h1&gt; &#xA;&lt;p&gt;1- Rx types:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Before&lt;/th&gt; &#xA;   &lt;th&gt;After&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxString&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IntX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxInt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MapX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxMap&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ListX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxList&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NumX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxNum&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DoubleX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxDouble&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;RxController and GetBuilder now have merged, you no longer need to memorize which controller you want to use, just use GetxController, it will work for simple state management and for reactive as well.&lt;/p&gt; &#xA;&lt;p&gt;2- NamedRoutes Before:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  namedRoutes: {&#xA;    &#39;/&#39;: GetRoute(page: Home()),&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  getPages: [&#xA;    GetPage(name: &#39;/&#39;, page: () =&amp;gt; Home()),&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Why this change? Often, it may be necessary to decide which page will be displayed from a parameter, or a login token, the previous approach was inflexible, as it did not allow this. Inserting the page into a function has significantly reduced the RAM consumption, since the routes will not be allocated in memory since the app was started, and it also allowed to do this type of approach:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;GetStorage box = GetStorage();&#xA;&#xA;GetMaterialApp(&#xA;  getPages: [&#xA;    GetPage(name: &#39;/&#39;, page:(){&#xA;      return box.hasData(&#39;token&#39;) ? Home() : Login();&#xA;    })&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Why Getx?&lt;/h1&gt; &#xA;&lt;p&gt;1- Many times after a Flutter update, many of your packages will break. Sometimes compilation errors happen, errors often appear that there are still no answers about, and the developer needs to know where the error came from, track the error, only then try to open an issue in the corresponding repository, and see its problem solved. Get centralizes the main resources for development (State, dependency and route management), allowing you to add a single package to your pubspec, and start working. After a Flutter update, the only thing you need to do is update the Get dependency, and get to work. Get also resolves compatibility issues. How many times a version of a package is not compatible with the version of another, because one uses a dependency in one version, and the other in another version? This is also not a concern using Get, as everything is in the same package and is fully compatible.&lt;/p&gt; &#xA;&lt;p&gt;2- Flutter is easy, Flutter is incredible, but Flutter still has some boilerplate that may be unwanted for most developers, such as &lt;code&gt;Navigator.of(context).push (context, builder [...]&lt;/code&gt;. Get simplifies development. Instead of writing 8 lines of code to just call a route, you can just do it: &lt;code&gt;Get.to(Home())&lt;/code&gt; and you&#39;re done, you&#39;ll go to the next page. Dynamic web urls are a really painful thing to do with Flutter currently, and that with GetX is stupidly simple. Managing states in Flutter, and managing dependencies is also something that generates a lot of discussion, as there are hundreds of patterns in the pub. But there is nothing as easy as adding a &#34;.obs&#34; at the end of your variable, and place your widget inside an Obx, and that&#39;s it, all updates to that variable will be automatically updated on the screen.&lt;/p&gt; &#xA;&lt;p&gt;3- Ease without worrying about performance. Flutter&#39;s performance is already amazing, but imagine that you use a state manager, and a locator to distribute your blocs/stores/controllers/ etc. classes. You will have to manually call the exclusion of that dependency when you don&#39;t need it. But have you ever thought of simply using your controller, and when it was no longer being used by anyone, it would simply be deleted from memory? That&#39;s what GetX does. With SmartManagement, everything that is not being used is deleted from memory, and you shouldn&#39;t have to worry about anything but programming. You will be assured that you are consuming the minimum necessary resources, without even having created a logic for this.&lt;/p&gt; &#xA;&lt;p&gt;4- Actual decoupling. You may have heard the concept &#34;separate the view from the business logic&#34;. This is not a peculiarity of BLoC, MVC, MVVM, and any other standard on the market has this concept. However, this concept can often be mitigated in Flutter due to the use of context. If you need context to find an InheritedWidget, you need it in the view, or pass the context by parameter. I particularly find this solution very ugly, and to work in teams we will always have a dependence on View&#39;s business logic. Getx is unorthodox with the standard approach, and while it does not completely ban the use of StatefulWidgets, InitState, etc., it always has a similar approach that can be cleaner. Controllers have life cycles, and when you need to make an APIREST request for example, you don&#39;t depend on anything in the view. You can use onInit to initiate the http call, and when the data arrives, the variables will be populated. As GetX is fully reactive (really, and works under streams), once the items are filled, all widgets that use that variable will be automatically updated in the view. This allows people with UI expertise to work only with widgets, and not have to send anything to business logic other than user events (like clicking a button), while people working with business logic will be free to create and test the business logic separately.&lt;/p&gt; &#xA;&lt;p&gt;This library will always be updated and implementing new features. Feel free to offer PRs and contribute to them.&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;h2&gt;Community channels&lt;/h2&gt; &#xA;&lt;p&gt;GetX has a highly active and helpful community. If you have questions, or would like any assistance regarding the use of this framework, please join our community channels, your question will be answered more quickly, and it will be the most suitable place. This repository is exclusive for opening issues, and requesting resources, but feel free to be part of GetX Community.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Slack&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Telegram&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://communityinviter.com/apps/getxworkspace/getx&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-orange.svg?sanitize=true&#34; alt=&#34;Get on Slack&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://discord.com/invite/9Hpt99N&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/722900883784073290.svg?logo=discord&#34; alt=&#34;Discord Shield&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://t.me/joinchat/PhdbJRmsZNpAqSLJL6bH7g&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Telegram-blue.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Want to contribute to the project? We will be proud to highlight you as one of our collaborators. Here are some points where you can contribute and make Get (and Flutter) even better.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Helping to translate the readme into other languages.&lt;/li&gt; &#xA; &lt;li&gt;Adding documentation to the readme (a lot of Get&#39;s functions haven&#39;t been documented yet).&lt;/li&gt; &#xA; &lt;li&gt;Write articles or make videos teaching how to use Get (they will be inserted in the Readme and in the future in our Wiki).&lt;/li&gt; &#xA; &lt;li&gt;Offering PRs for code/tests.&lt;/li&gt; &#xA; &lt;li&gt;Including new functions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Any contribution is welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Articles and videos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLV1fXIAyjeuZ6M8m56zajMUwu4uE3-SL0&#34;&gt;Flutter Getx EcoSystem package for arabic people&lt;/a&gt; - Tutorial by &lt;a href=&#34;https://github.com/UsamaElgendy&#34;&gt;Pesa Coder&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/swlh/flutter-dynamic-themes-in-3-lines-c3b375f292e3&#34;&gt;Dynamic Themes in 3 lines using GetX™&lt;/a&gt; - Tutorial by &lt;a href=&#34;https://github.com/RodBr&#34;&gt;Rod Brown&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RaqPIoJSTtI&#34;&gt;Complete GetX™ Navigation&lt;/a&gt; - Route management video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CNpXbeI_slw&#34;&gt;Complete GetX State Management&lt;/a&gt; - State management video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/ttQtlX_Q0eU&#34;&gt;GetX™ Other Features&lt;/a&gt; - Utils, storage, bindings and other features video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=BiV0DcXgk58&#34;&gt;Firestore User with GetX | Todo App&lt;/a&gt; - Video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-H-T_BSgfOE&#34;&gt;Firebase Auth with GetX | Todo App&lt;/a&gt; - Video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/the-flutter-getx-ecosystem-state-management-881c7235511d&#34;&gt;The Flutter GetX™ Ecosystem ~ State Management&lt;/a&gt; - State management by &lt;a href=&#34;https://github.com/imaachman&#34;&gt;Aachman Garg&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/the-flutter-getx-ecosystem-dependency-injection-8e763d0ec6b9&#34;&gt;The Flutter GetX™ Ecosystem ~ Dependency Injection&lt;/a&gt; - Dependency Injection by &lt;a href=&#34;https://github.com/imaachman&#34;&gt;Aachman Garg&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=IYQgtu9TM74&#34;&gt;GetX, the all-in-one Flutter package&lt;/a&gt; - A brief tutorial covering State Management and Navigation by Thad Carnevalli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=EcnqFasHf18&#34;&gt;Build a To-do List App from scratch using Flutter and GetX&lt;/a&gt; - UI + State Management + Storage video by Thad Carnevalli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jeffmcmorris/getx-flutter-firebase-auth-example-b383c1dd1de2&#34;&gt;GetX Flutter Firebase Auth Example&lt;/a&gt; - Article by Jeff McMorris.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.appwithflutter.com/flutter-state-management-with-getx/&#34;&gt;Flutter State Management with GetX – Complete App&lt;/a&gt; - by App With Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.appwithflutter.com/flutter-routing-using-get-package/&#34;&gt;Flutter Routing with Animation using Get Package&lt;/a&gt; - by App With Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dartpad.dev/2b3d0d6f9d4e312c5fdbefc414c1727e?&#34;&gt;A minimal example on dartpad&lt;/a&gt; - by &lt;a href=&#34;https://github.com/roipeker&#34;&gt;Roi Peker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>alibaba/flutter_boost</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/alibaba/flutter_boost</id>
    <link href="https://github.com/alibaba/flutter_boost" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FlutterBoost is a Flutter plugin which enables hybrid integration of Flutter for your existing native apps with minimum efforts&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/flutter_boost/master/flutter_boost.png&#34;&gt; &lt;b&gt;&lt;/b&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/flutter_boost/master/README_CN.md&#34;&gt;中文文档&lt;/a&gt; &lt;a href=&#34;https://zhuanlan.zhihu.com/p/362662962&#34;&gt;中文介绍&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Release Note&lt;/h1&gt; &#xA;&lt;p&gt;v3.0-release.2&lt;/p&gt; &#xA;&lt;p&gt;PS：Here for null-safety &lt;a href=&#34;https://github.com/alibaba/flutter_boost/tree/null-safety&#34;&gt;https://github.com/alibaba/flutter_boost/tree/null-safety&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Flutter SDK upgrades do not require Boost upgrades&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;Simplify the architecture&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;3&#34;&gt; &#xA;   &lt;li&gt;Simplify the interface&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;4&#34;&gt; &#xA;   &lt;li&gt;Unified design of double-end interface&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;5&#34;&gt; &#xA;   &lt;li&gt;Solved the Top Issue&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;6&#34;&gt; &#xA;   &lt;li&gt;Android does not need to distinguish between AndroidX and Support&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;FlutterBoost&lt;/h1&gt; &#xA;&lt;p&gt;A next-generation Flutter-Native hybrid solution. FlutterBoost is a Flutter plugin which enables hybrid integration of Flutter for your existing native apps with minimum efforts.The philosophy of FlutterBoost is to use Flutter as easy as using a WebView. Managing Native pages and Flutter pages at the same time is non-trivial in an existing App. FlutterBoost takes care of page resolution for you. The only thing you need to care about is the name of the page(usually could be an URL).&amp;nbsp; &lt;a name=&#34;bf647454&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Prerequisites&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Before proceeding, you need to integrate Flutter into your existing project.&lt;/li&gt; &#xA; &lt;li&gt;The Flutter SDK version supported by Boost 3.0 is &amp;gt;= 1.22&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;h2&gt;Add a dependency in you Flutter project.&lt;/h2&gt; &#xA;&lt;p&gt;Open you pubspec.yaml and add the following line to&amp;nbsp;dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;flutter_boost:&#xA;    git:&#xA;        url: &#39;https://github.com/alibaba/flutter_boost.git&#39;&#xA;        ref: &#39;v3.0-release.2&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Boost Integration&lt;/h1&gt; &#xA;&lt;h1&gt;使用文档&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/flutter_boost/raw/master/docs/install.md&#34;&gt;集成详细步骤&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/flutter_boost/raw/master/docs/routeAPI.md&#34;&gt;基本的路由API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/flutter_boost/raw/master/docs/lifecycle.md&#34;&gt;页面生命周期监测相关API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/flutter_boost/raw/master/docs/event.md&#34;&gt;自定义发送跨端事件API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;建设文档&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/flutter_boost/raw/master/docs/issue.md&#34;&gt;如何向我们提issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/flutter_boost/raw/master/docs/pr.md&#34;&gt;如何向我们提PR&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;p&gt;please read this document: &lt;a href=&#34;Frequently Asked Question.md&#34;&gt;FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/flutter_boost/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; file for details&lt;/p&gt; &#xA;&lt;h2&gt;关于我们&lt;/h2&gt; &#xA;&lt;p&gt;阿里巴巴-闲鱼技术是国内最早也是最大规模线上运行Flutter的团队。&lt;/p&gt; &#xA;&lt;p&gt;我们在公众号中为你精选了Flutter独家干货，全面而深入。&lt;/p&gt; &#xA;&lt;p&gt;内容包括：Flutter的接入、规模化应用、引擎探秘、工程体系、创新技术等教程和开源信息。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;架构／服务端／客户端／前端／算法／质量工程师 在公众号中投递简历，名额不限哦&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;欢迎来闲鱼做一个好奇、幸福、有影响力的程序员，简历投递：&lt;a href=&#34;mailto:tino.wjf@alibaba-inc.com&#34;&gt;tino.wjf@alibaba-inc.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;订阅地址&lt;/p&gt; &#xA;&lt;img src=&#34;https://img.alicdn.com/tfs/TB17Ki5XubviK0jSZFNXXaApXXa-656-656.png&#34; width=&#34;328px&#34; height=&#34;328px&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/xianyutech&#34; title=&#34;For English&#34;&gt;For English&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>imaNNeoFighT/fl_chart</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/imaNNeoFighT/fl_chart</id>
    <link href="https://github.com/imaNNeoFighT/fl_chart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FL Chart is a highly customizable Flutter chart library that supports Line Chart, Bar Chart, Pie Chart, Scatter Chart, and Radar Chart.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;💥 FL Chart is a highly customizable Flutter chart library that supports Line Chart, Bar Chart, Pie Chart, Scatter Chart, and Radar Chart. 💥&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/fl_chart&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/fl_chart.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/imaNNeoFighT/fl_chart&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/imaNNeoFighT/fl_chart/branch/master/graph/badge.svg?token=XBhsIZBbZG&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Solido/awesome-flutter#charts&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/awesome-flutter-blue.svg?longCache=true&#34; alt=&#34;Awesome Flutter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/fl_chart&#34;&gt;&lt;img alt=&#34;GitHub Repo stars&#34; src=&#34;https://img.shields.io/github/stars/imaNNeoFighT/fl_chart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/graphs/contributors&#34;&gt;&lt;img alt=&#34;GitHub contributors&#34; src=&#34;https://img.shields.io/github/contributors/imaNNeoFighT/fl_chart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed-raw/imaNNeoFighT/fl_chart&#34; alt=&#34;GitHub closed issues&#34;&gt;&lt;/a&gt; &lt;span class=&#34;badge-buymeacoffee&#34;&gt; &lt;a href=&#34;https://www.buymeacoffee.com/fl_chart&#34; title=&#34;Donate to this project using Buy Me A Coffee&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/buy%20me%20a%20coffee-donate-yellow.svg?sanitize=true&#34; alt=&#34;Buy Me A Coffee donate button&#34;&gt;&lt;/a&gt; &lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/landing_logo.jpg&#34; alt=&#34;FL Chart Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Chart Types&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;LineChart&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;BarChart&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;PieChart&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/line_chart.md#sample-1-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/line_chart/line_chart_sample_1.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/line_chart.md#sample-2-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/line_chart/line_chart_sample_2.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/bar_chart.md#sample-1-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/bar_chart/bar_chart_sample_1.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/bar_chart.md#sample-2-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/bar_chart/bar_chart_sample_2.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/pie_chart.md#sample-1-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/pie_chart/pie_chart_sample_1.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/pie_chart.md#sample-2-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/pie_chart/pie_chart_sample_2.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/line_chart.md&#34;&gt;Read More&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/bar_chart.md&#34;&gt;Read More&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/pie_chart.md&#34;&gt;Read More&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;ScatterChart&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;RadarChart&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Coming Soon&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/scatter_chart.md#sample-1-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/scatter_chart/scatter_chart_sample_1.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/scatter_chart.md#sample-2-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/scatter_chart/scatter_chart_sample_2.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/radar_chart/radar_chart_sample_1.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/blank.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/blank.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/blank.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/scatter_chart.md&#34;&gt;Read More&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/radar_chart.md&#34;&gt;Read More&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Banner designed by &lt;a href=&#34;https://www.linkedin.com/in/soheilsaffar&#34;&gt;Soheil Saffar&lt;/a&gt;, and samples inspired from &lt;a href=&#34;https://dribbble.com/shots/5560237-Live-Graphs-XD&#34;&gt;David Kovalev&lt;/a&gt;, &lt;a href=&#34;https://dribbble.com/shots/1956890-Data-Stats&#34;&gt;Ricardo Salazar&lt;/a&gt;, &lt;a href=&#34;https://dribbble.com/shots/5425378-Mobile-Application-Dashboard-for-Stock-Platform&#34;&gt;Dmitro Petrenko&lt;/a&gt;, &lt;a href=&#34;https://dribbble.com/shots/6379476-Calories-Management-App&#34;&gt;Ghani Pradita&lt;/a&gt;, &lt;a href=&#34;https://www.uplabs.com/posts/chart-pie-chart-bar-chart&#34;&gt;MONUiXD&lt;/a&gt;. Thank you all!&lt;/p&gt; &#xA;&lt;h1&gt;Let&#39;s get started&lt;/h1&gt; &#xA;&lt;p&gt;First of all you need to add the &lt;code&gt;fl_chart&lt;/code&gt; in your project. In order to do that, follow &lt;a href=&#34;https://pub.dev/packages/fl_chart/install&#34;&gt;this guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then you need to read the docs. Start from &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/index.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We suggest you to check samples source code.&lt;/p&gt; &#xA;&lt;h5&gt;- You can read about the animation handling &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/handle_animations.md&#34;&gt;here&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Sample1&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Sample2&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Sample3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/line_chart.md#sample-1-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/line_chart/line_chart_sample_1_anim.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/line_chart.md#sample-2-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/line_chart/line_chart_sample_2_anim.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/documentations/bar_chart.md#sample-1-source-code&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/bar_chart/bar_chart_sample_1_anim.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Donation&lt;/h3&gt; &#xA;&lt;p&gt;Your donation &lt;strong&gt;motivates&lt;/strong&gt; me to work more on the &lt;strong&gt;fl_chart&lt;/strong&gt; and resolve more issues. You can &lt;a href=&#34;https://www.buymeacoffee.com/fl_chart&#34;&gt;buy me a coffee!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/fl_chart&#34;&gt;&lt;img src=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/repo_files/images/buy_me_a_coffee.jpeg&#34; width=&#34;360&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or if you are a fan of crypto, you can donate me Bitcoins here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;1L7ghKdcmgydmUJAnmYmMaiVjT1LoP4a45&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;h5&gt;&lt;span&gt;🍺&lt;/span&gt; Pull requests are welcome!&lt;/h5&gt; &#xA;&lt;p&gt;Don&#39;t forget that &lt;code&gt;open-source&lt;/code&gt; makes no sense without contributors. No matter how big your changes are, it helps us a lot even it is a line of change.&lt;/p&gt; &#xA;&lt;p&gt;There might be a lot of grammar issues in the docs. It&#39;s a big help to us to fix them if you are fluent in English.&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;, which contains a guide for those who want to contribute to the FL Chart.&lt;/p&gt; &#xA;&lt;p&gt;Reporting bugs and issues are contribution too, yes it is.&lt;/p&gt; &#xA;&lt;h4&gt;Below are the people who has contributed to the FL Chart. We hope we have your picture here soon.&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/imaNNeoFighT/fl_chart/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/fl_chart/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rrousselGit/riverpod</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/rrousselGit/riverpod</id>
    <link href="https://github.com/rrousselGit/riverpod" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple way to access state while robust and testable.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/rrousselGit/river_pod/actions&#34;&gt;&lt;img src=&#34;https://github.com/rrousselGit/river_pod/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/rrousselgit/river_pod&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/rrousselgit/river_pod/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rrousselgit/river_pod&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/rrousselgit/river_pod.svg?style=flat&amp;amp;logo=github&amp;amp;colorB=deeppink&amp;amp;label=stars&#34; alt=&#34;Star on Github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-purple.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/Bbumvej&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/765557403865186374.svg?logo=discord&amp;amp;color=blue&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.netlify.com&#34;&gt; &lt;img src=&#34;https://www.netlify.com/img/global/badges/netlify-color-accent.svg?sanitize=true&#34; alt=&#34;Deploys by Netlify&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/rrousselGit/river_pod/raw/master/resources/icon/Facebook%20Cover%20A.png?raw=true&#34; width=&#34;100%&#34; alt=&#34;Riverpod&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;A state-management library that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;catches programming errors at compile time rather than at runtime&lt;/li&gt; &#xA; &lt;li&gt;removes nesting for listening/combining objects&lt;/li&gt; &#xA; &lt;li&gt;ensures that the code is testable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;riverpod&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/riverpod&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/riverpod.svg?label=riverpod&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;flutter_riverpod&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_riverpod&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/riverpod.svg?label=flutter_riverpod&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hooks_riverpod&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/hooks_riverpod&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/riverpod.svg?label=hooks_riverpod&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Welcome to &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;This project can be considered as a rewrite of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; to make improvements that would be otherwise impossible.&lt;/p&gt; &#xA;&lt;p&gt;For learning how to use &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;, see its documentation: &lt;a href=&#34;https://riverpod.dev&#34;&gt;https://riverpod.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Long story short:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare your providers as global variables:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final counterProvider = StateNotifierProvider((ref) {&#xA;  return Counter();&#xA;});&#xA;&#xA;class Counter extends StateNotifier&amp;lt;int&amp;gt; {&#xA;  Counter(): super(0);&#xA;&#xA;  void increment() =&amp;gt; state++;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use them inside your widgets in a compile time safe way. No runtime exceptions!&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Example extends ConsumerWidget {&#xA;  @override&#xA;  Widget build(BuildContext context, WidgetRef ref) {&#xA;    final count = ref.watch(counterProvider);&#xA;    return Text(count.toString());&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#FAQ&#34;&gt;FAQ&lt;/a&gt; if you have questions about what this means for &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Migration&lt;/h2&gt; &#xA;&lt;p&gt;With the release of version 1.0.0, the syntax for interacting with providers changed.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://riverpod.dev/docs/migration/0.14.0_to_1.0.0/&#34;&gt;the migration guide&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;h2&gt;Index&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#migration&#34;&gt;Migration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#index&#34;&gt;Index&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#faq&#34;&gt;FAQ&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#why-another-project-when-provider-already-exists&#34;&gt;Why another project when provider already exists?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#is-it-safe-to-use-in-production&#34;&gt;Is it safe to use in production?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#will-this-get-merged-with-provider-at-some-point&#34;&gt;Will this get merged with provider at some point?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#will-provider-be-deprecatedstop-being-supported&#34;&gt;Will provider be deprecated/stop being supported?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;If &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; is a simplification of &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s, then &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; is a reimplementation of &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s from scratch.&lt;/p&gt; &#xA;&lt;p&gt;It is very similar to &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; in principle, but also has major differences as an attempt to fix the common problems that &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; face.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; has multiple goals. First, it inherits the goals of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Being able to safely create, observe and dispose states without having to worry about losing the state on widget rebuild.&lt;/li&gt; &#xA; &lt;li&gt;Making our objects visible in Flutter&#39;s devtool by default.&lt;/li&gt; &#xA; &lt;li&gt;Testable and composable&lt;/li&gt; &#xA; &lt;li&gt;Improve the readability of &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s when we have multiple of them (which would naturally lead to a deeply nested widget tree).&lt;/li&gt; &#xA; &lt;li&gt;Make apps more scalable with a unidirectional data flow.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;From there, &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; goes a few steps beyond:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reading objects is now &lt;strong&gt;compile-safe&lt;/strong&gt;. No more runtime exception.&lt;/li&gt; &#xA; &lt;li&gt;It makes the &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; pattern more flexible, which allows supporting commonly requested features like: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Being able to have multiple providers of the same type.&lt;/li&gt; &#xA;   &lt;li&gt;Disposing the state of a provider when it is no longer used.&lt;/li&gt; &#xA;   &lt;li&gt;Have computed states&lt;/li&gt; &#xA;   &lt;li&gt;Making a provider private.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Simplifies complex object graphs. It is easier to depend on asynchronous state.&lt;/li&gt; &#xA; &lt;li&gt;Makes the pattern independent from Flutter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These are achieved by no longer using &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s. Instead, &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; implements its own mechanism that works in a similar fashion.&lt;/p&gt; &#xA;&lt;p&gt;For learning how to use &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;, see its documentation: &lt;a href=&#34;https://riverpod.dev&#34;&gt;https://riverpod.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcomed!&lt;/p&gt; &#xA;&lt;p&gt;Here is a curated list of how you can help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Report bugs and scenarios that are difficult to implement&lt;/li&gt; &#xA; &lt;li&gt;Report parts of the documentation that are unclear&lt;/li&gt; &#xA; &lt;li&gt;Fix typos/grammar mistakes&lt;/li&gt; &#xA; &lt;li&gt;Update the documentation / add examples&lt;/li&gt; &#xA; &lt;li&gt;Implement new features by making a pull-request&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Why another project when provider already exists?&lt;/h3&gt; &#xA;&lt;p&gt;While &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; is largely used and well accepted by the community, it is not perfect either.&lt;/p&gt; &#xA;&lt;p&gt;People regularly file issues or ask questions about some problems they face, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Why do I have a &lt;code&gt;ProviderNotFoundException&lt;/code&gt;?&lt;/li&gt; &#xA; &lt;li&gt;How can I automatically dispose my state when not used anymore?&lt;/li&gt; &#xA; &lt;li&gt;How to make a provider that depends on other (potentially complex) providers?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These are legitimate problems, and I believe that something can be improved to fix those.&lt;/p&gt; &#xA;&lt;p&gt;The issue is, these problems are deeply rooted in how &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; works, and fixing those problems is likely impossible without drastic changes to the mechanism of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In a way, if &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; is a candle then &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; is a lightbulb. They have very similar usages, but we cannot create a lightbulb by improving our candle.&lt;/p&gt; &#xA;&lt;h3&gt;Is it safe to use in production?&lt;/h3&gt; &#xA;&lt;p&gt;Yes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; is stable and actively maintained.&lt;/p&gt; &#xA;&lt;h3&gt;Will this get merged with provider at some point?&lt;/h3&gt; &#xA;&lt;p&gt;No. At least not until it is proven that the community likes &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; and that it doesn&#39;t cause more problems than it solves.&lt;/p&gt; &#xA;&lt;p&gt;While &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; and this project have a lot in common, they do have some major differences. Differences big enough that it would be a large breaking change for users of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; to migrate &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Considering that, separating both projects initially sounds like a better compromise.&lt;/p&gt; &#xA;&lt;h3&gt;Will provider be deprecated/stop being supported?&lt;/h3&gt; &#xA;&lt;p&gt;Not in the short term, no.&lt;/p&gt; &#xA;&lt;p&gt;However, a migration tool is planned to help assist migration from provider to &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/freezed/master/sponsorkit/sponsors.svg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rrousselGit/freezed/master/sponsorkit/sponsors.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RivaanRanawat/instagram-flutter-clone</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/RivaanRanawat/instagram-flutter-clone</id>
    <link href="https://github.com/RivaanRanawat/instagram-flutter-clone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Responsive Instagram Clone developed with Flutter &amp; Firebase&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Instagram Clone&lt;/h1&gt; &#xA;&lt;p&gt;A completely Responsive Instagram App- Works on Android, iOS &amp;amp; Web!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Responsive Instagram UI&lt;/li&gt; &#xA; &lt;li&gt;Email &amp;amp; Password Authentication&lt;/li&gt; &#xA; &lt;li&gt;Share Posts with Caption&lt;/li&gt; &#xA; &lt;li&gt;Display Posts with Caption&lt;/li&gt; &#xA; &lt;li&gt;Like &amp;amp; Comment on Posts&lt;/li&gt; &#xA; &lt;li&gt;Search Users&lt;/li&gt; &#xA; &lt;li&gt;Follow Users&lt;/li&gt; &#xA; &lt;li&gt;Display User Posts, Followers &amp;amp; Following&lt;/li&gt; &#xA; &lt;li&gt;EVERYTHING REAL TIME&lt;/li&gt; &#xA; &lt;li&gt;Sign Out&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;YouTube&lt;/h2&gt; &#xA;&lt;p&gt;I have created a tutorial based on this, do check it out on my channel &lt;a href=&#34;https://youtu.be/BBccK1zTgxw&#34;&gt;Rivaan Ranawat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;600&#34; src=&#34;https://github.com/RivaanRanawat/instagram-flutter-clone/raw/master/screenshot.png&#34; alt=&#34;Youtube Tutorial Image&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;After cloning this repository, migrate to &lt;code&gt;instagram-flutter-clone&lt;/code&gt; folder. Then, follow the following steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create Firebase Project&lt;/li&gt; &#xA; &lt;li&gt;Enable Authentication&lt;/li&gt; &#xA; &lt;li&gt;Make Firestore Rules&lt;/li&gt; &#xA; &lt;li&gt;Create Android, iOS &amp;amp; Web Apps&lt;/li&gt; &#xA; &lt;li&gt;Take Web FirebaseOptions and put it in main function in main.dart file replacing my keys (My keys wont work as I deleted my project) Then run the following commands to run your app:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  flutter pub get&#xA;  open -a simulator (to get iOS Simulator)&#xA;  flutter run&#xA;  flutter run -d chrome --web-renderer html (to see the best output)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tech Used&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt;: Firebase Auth, Firebase Storage, Firebase Firestore&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Client&lt;/strong&gt;: Flutter, Provider&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;If you have any feedback, please reach out to me at &lt;a href=&#34;mailto:namanrivaan@gmail.com&#34;&gt;namanrivaan@gmail.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kaina404/FlutterDouBan</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/kaina404/FlutterDouBan</id>
    <link href="https://github.com/kaina404/FlutterDouBan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥🔥🔥Flutter豆瓣客户端,Awesome Flutter Project,全网最100%还原豆瓣客户端。首页、书影音、小组、市集及个人中心，一个不拉。（ https://img.xuvip.top/douyademo.mp4）&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-new/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kaina404/FlutterDouBan/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/kaina404/FlutterDouBan.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kaina404/FlutterDouBan/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/kaina404/FlutterDouBan.svg?sanitize=true&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kaina404/FlutterDouBan/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/kaina404/FlutterDouBan.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;SDK Version&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;kaina404 ~ % flutter --version&#xA;Flutter 2.5.3 • channel stable • https://github.com/flutter/flutter.git&#xA;Framework • revision 18116933e7 (4 months ago) • 2021-10-15 10:46:35 -0700&#xA;Engine • revision d3ea636dc5&#xA;Tools • Dart 2.14.4&#xA;kaina404 ~ % flutter doctor&#xA;Doctor summary (to see all details, run flutter doctor -v):&#xA;[✓] Flutter (Channel stable, 2.5.3, on macOS 11.4 20F71 darwin-arm, locale zh-Hans-CN)&#xA;[✓] Android toolchain - develop for Android devices (Android SDK version 31.0.0)&#xA;[✓] Xcode - develop for iOS and macOS&#xA;[✓] Chrome - develop for the web&#xA;[✓] Android Studio (version 2020.3)&#xA;[✓] VS Code (version 1.62.3)&#xA;[✓] Connected device (3 available)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果产生其他依赖无法编译的问题，可以尝试将&lt;code&gt;pubspec.yaml&lt;/code&gt;中的&lt;code&gt;dependencies&lt;/code&gt;中的所有依赖的&#34;^&#34;去掉，重新编译尝试。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://www.jianshu.com/u/1c09737416aa&#34;&gt;博客地址flutterall.xyz&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;真正的豆瓣客户端，90%还原豆瓣。首页、书影音、小组、市集及个人中心，一个不拉。项目持续更新中...&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://img.xuvip.top/douyademo.mp4&#34;&gt;演示预览(右键，新标签页面打开)&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;如果您觉得还可以的话，给个Star白~&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;使用Flutter开发一个豆瓣App&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;此项目，90%还原某瓣APP，所有UI均按照某瓣来实现。&lt;/li&gt; &#xA; &lt;li&gt;项目中的数据均来自豆瓣api真实有效数据&lt;/li&gt; &#xA; &lt;li&gt;项目中用到了几乎所有的Flutter widget&lt;/li&gt; &#xA; &lt;li&gt;还有两个比较大的自定义魔改源码实现特效&lt;/li&gt; &#xA; &lt;li&gt;大年初一也在维护的项目&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;APP中所有数据均为真实数据。但是默认，对于&#34;书影音单个电影tab&#34;的数据，使用模拟数据。因为，频繁的打开关闭APP，会频繁调用 这个接口。接口是有调用限制的，次数过于频繁，会被锁IP。如果想看真实数据，则可以进入 &#34;我的&#34;，然后打开&#34;书影音数据来自网络&#34;开关后，重启APP即可。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;下载地址&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://upload-images.jianshu.io/upload_images/3884536-d9adbda0e5f61c84.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34;&gt;打开新页面扫码下载&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://img.xuvip.top/douya_release.apk&#34;&gt;Release版本下载地址&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.xuvip.top/douya.png&#34; alt=&#34;扫一扫下载体验&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Demo(刷不出gif图的，耐心等待一会，或者多刷几次。)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-release/0E95A04AE84EFE31104AC8E0A5808CB9.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-release/041919372752_04CCDD7BC1BDB6015935EE50DDF75C29F.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-release/041919374444_0B3C7C7E29941F75D0A7C944D4E352CB7.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-release/041919375761_05292CAB58428C7C77C544027FC899CC0.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-release/041919380838_07B17727ACF231C6D91914D71114A96CF.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-release/041919381924_01CE541B98F565C72B75567A319271CA1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-12-55.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-13-11.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-17-38.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-17-48.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-18-03.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-18-12.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-18-23.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-30-58.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-31-13.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-32-29.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-32-41.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-33-02.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;dev-open&lt;/h1&gt; &#xA;&lt;h3&gt;大家可以向这个分支根据豆瓣UI做设计稿，提交代码&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;这个分支供广大Flutter开发者来学习Flutter&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;此分支囊括了Flutter 90%的组件的基本与组合使用&lt;/strong&gt;，是初学者真正实践的不错选择&lt;/li&gt; &#xA; &lt;li&gt;在此豆芽APP的首页实现与影片详情的UI特效，基于魔改Flutter源码。有兴趣可以看看&lt;/li&gt; &#xA; &lt;li&gt;大家想实战自己的Flutter能力，可以将某瓣APP作为设计稿，完成需求，并提交&lt;/li&gt; &#xA; &lt;li&gt;每位开发者提交的代码，我都会在文档中进行备注&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;注意！！！建议使用模拟数据(mock_request.dart)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;每个接口均有一定的调用限制&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;大家pull下的代码，进行测试调试时，对于特定接口，返回的特定数据。尽量不要每次求请求一次。可以请求到一次真实数据后，转成json保存 到本地。然后，自己调试开发的时候，使用这个模拟数据即可。&lt;/em&gt; [可参考mock_request.dart]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;未来版本计划(欢迎Flutter爱好者前来认领)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;欢迎Flutter爱好者共同完成&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;涉及到UI，可参考豆瓣。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;萌新TASK&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;完成任意一个未实现的按钮&lt;/li&gt; &#xA; &lt;li&gt;完成任意一个未实现的页面&lt;/li&gt; &#xA; &lt;li&gt;优化原有Widget&lt;/li&gt; &#xA; &lt;li&gt;爱好者想实现但是未能实现的需求&lt;/li&gt; &#xA; &lt;li&gt;More ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;进阶TASK&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;优化代码&lt;/li&gt; &#xA; &lt;li&gt;适当缓存数据&lt;/li&gt; &#xA; &lt;li&gt;解决卡顿(可参考：&lt;a href=&#34;https://flutter-io.cn/docs/testing/ui-performance&#34;&gt;https://flutter-io.cn/docs/testing/ui-performance&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;优化路由（可参考咸鱼方案：&lt;a href=&#34;https://www.yuque.com/xytech/flutter/vf1dpf%EF%BC%89&#34;&gt;https://www.yuque.com/xytech/flutter/vf1dpf）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;老手TASK&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ReactiveX/rxdart&#34;&gt;接入rxdart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/xytech/flutter/ycc9ni&#34;&gt;使用Fish Redux 重构&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;对魔改源码或者喜欢翻源码的童鞋可以看看下面两个&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;魔改Flutter AppBar源码实现豆瓣头部特效&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/%E4%BB%BF%E8%B1%86%E7%93%A3%E5%A4%B4%E9%83%A8.gif&#34; alt=&#34;魔改Flutter AppBar源码实现豆瓣头部特效&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;魔改源码实现电影详情抽屉特效(GIF图如果加载不出来，多刷几次)&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/part1.gif&#34; alt=&#34;抽屉特效1&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/part2.gif&#34; alt=&#34;抽屉特效2&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/part3.gif&#34; alt=&#34;抽屉特效3&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;页面介绍&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;首页 pages/home&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;homo_app_bar.dart 首页导航头&lt;/li&gt; &#xA;   &lt;li&gt;home_page.dart 首页&lt;/li&gt; &#xA;   &lt;li&gt;my_home_tab_bar.dart 首页tab&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;书影音 pages/movie&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;book_audio_video_page.dart 书影音页面&lt;/li&gt; &#xA;   &lt;li&gt;detail_page.dart 影片、电视详情页面&lt;/li&gt; &#xA;   &lt;li&gt;person_detail_page.dart 演员页面介绍&lt;/li&gt; &#xA;   &lt;li&gt;... 页面都有注释&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;小组 pages/group&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;市集 shop_page.dart&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;市集的数据使用两个webview&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;我的 page/person&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;更新记录&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;dev-0.1&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;魔改源码实现电影详情抽屉特效&lt;/li&gt; &#xA;   &lt;li&gt;魔改Flutter AppBar源码实现豆瓣头部特效&lt;/li&gt; &#xA;   &lt;li&gt;优化页面逻辑&lt;/li&gt; &#xA;   &lt;li&gt;优化加载速度&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;master&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;基本网络请求框架、UI框架&lt;/li&gt; &#xA;   &lt;li&gt;已经填入了&#34;最为复杂的电影TAB页面&#34;、影视详情页面、小组页面（UI与豆瓣一致，数据使用的是热映榜） &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;页面上下滑动&lt;/li&gt; &#xA;     &lt;li&gt;页面上下+左右滑动&lt;/li&gt; &#xA;     &lt;li&gt;数据加载&lt;/li&gt; &#xA;     &lt;li&gt;TAB页面滑动&lt;/li&gt; &#xA;     &lt;li&gt;....&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;作为基本版本，一些逻辑不够完善，有一些bug。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;默认条约&lt;/h1&gt; &#xA;&lt;p&gt;此项目仅供大家交流沟通使用，不得用于任何商业以及利益活动。由此引起的责任，跟我无关。谢谢！&lt;/p&gt; &#xA;&lt;h1&gt;&lt;strong&gt;如果您觉得还可以的话，给个Star白~&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;Thanks&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-new/48.jpg&#34; width=&#34;426px&#34;&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This project is a starting point for a Flutter application.&lt;/p&gt; &#xA;&lt;p&gt;A few resources to get you started if this is your first Flutter project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.io/docs/get-started/codelab&#34;&gt;Lab: Write your first Flutter app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.io/docs/cookbook&#34;&gt;Cookbook: Useful Flutter samples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For help getting started with Flutter, view our &lt;a href=&#34;https://flutter.io/docs&#34;&gt;online documentation&lt;/a&gt;, which offers tutorials, samples, guidance on mobile development, and a full API reference.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>firebase/flutterfire</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/firebase/flutterfire</id>
    <link href="https://github.com/firebase/flutterfire" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥 A collection of Firebase plugins for Flutter apps.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://firebase.google.com/docs/flutter&#34;&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/firebase/flutterfire/master/.github/images/flutterfire_300x.png&#34;&gt;&lt;br&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;FlutterFire&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://twitter.com/flutterfiredev&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/flutterfiredev.svg?colorA=1da1f2&amp;amp;colorB=&amp;amp;label=Follow%20on%20Twitter&amp;amp;style=flat-square&#34; alt=&#34;Follow on Twitter&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/invertase/melos&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/maintained%20with-melos-f700ff.svg?style=flat-square&#34; alt=&#34;Maintained with Melos&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/flutterfire/master/CHANGELOG.md&#34;&gt;[Changelog]&lt;/a&gt; • &lt;a href=&#34;https://pub.dev/publishers/firebase.google.com/packages&#34;&gt;[Packages]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;FlutterFire is a set of &lt;a href=&#34;https://flutter.io/platform-plugins/&#34;&gt;Flutter plugins&lt;/a&gt; that enable Flutter apps to use &lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt; services. You can follow an example that shows how to use these plugins in the &lt;a href=&#34;https://firebase.google.com/codelabs/firebase-get-to-know-flutter&#34;&gt;Firebase for Flutter&lt;/a&gt; codelab.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt; is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. Flutter is used by developers and organizations around the world, and is free and open source.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/flutter/setup&#34;&gt;Add Firebase to your Flutter app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/flutter/setup#available-plugins&#34;&gt;Available plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/flutterfire/master/packages/flutterfire_ui/README.md&#34;&gt;FlutterFire UI&lt;/a&gt; (beta)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/flutterfire/master/packages/cloud_firestore_odm/README.md&#34;&gt;Firestore ODM&lt;/a&gt; (alpha)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please file FlutterFire specific issues, bugs, or feature requests in our &lt;a href=&#34;https://github.com/FirebaseExtended/flutterfire/issues/new/choose&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Plugin issues that are not specific to FlutterFire can be filed in the &lt;a href=&#34;https://github.com/flutter/flutter/issues/new&#34;&gt;Flutter issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note about contributing to Docs&lt;/strong&gt;: We&#39;re in the process of updating documentation for the Firebase SDK for Flutter. Please hold your PRs for docs until May 5th, 2022.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to contribute a change to any of the existing plugins in this repo, please review our &lt;a href=&#34;https://github.com/FirebaseExtended/flutterfire/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; and open a &lt;a href=&#34;https://github.com/FirebaseExtended/flutterfire/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Status-Experimental-blue&#34; alt=&#34;Status: Experimental&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is maintained by Googlers but is not a supported Firebase product. Issues here are answered by maintainers and other community members on GitHub on a best-effort basis.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dart-lang/sdk</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/dart-lang/sdk</id>
    <link href="https://github.com/dart-lang/sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Dart SDK, including the VM, dart2js, core libraries, and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dart&lt;/h1&gt; &#xA;&lt;h2&gt;A client-optimized language for fast apps on any platform&lt;/h2&gt; &#xA;&lt;p&gt;Dart is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Optimized for UI&lt;/strong&gt;: Develop with a programming language specialized around the needs of user interface creation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Productive&lt;/strong&gt;: Make changes iteratively: use hot reload to see the result instantly in your running app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fast on all platforms&lt;/strong&gt;: Compile to ARM &amp;amp; x64 machine code for mobile, desktop, and backend. Or compile to JavaScript for the web.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Dart&#39;s flexible compiler technology lets you run Dart code in different ways, depending on your target platform and goals:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dart Native&lt;/strong&gt;: For programs targeting devices (mobile, desktop, server, and more), Dart Native includes both a Dart VM with JIT (just-in-time) compilation and an AOT (ahead-of-time) compiler for producing machine code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dart Web&lt;/strong&gt;: For programs targeting the web, Dart Web includes both a development time compiler (dartdevc) and a production time compiler (dart2js).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dart-lang/sdk/main/docs/assets/Dart-platforms.svg?sanitize=true&#34; alt=&#34;Dart platforms illustration&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License &amp;amp; patents&lt;/h2&gt; &#xA;&lt;p&gt;Dart is free and open source.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/dart-lang/sdk/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; and &lt;a href=&#34;https://github.com/dart-lang/sdk/raw/main/PATENT_GRANT&#34;&gt;PATENT_GRANT&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using Dart&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://dart.dev&#34;&gt;dart.dev&lt;/a&gt; to learn more about the &lt;a href=&#34;https://dart.dev/guides/language/language-tour&#34;&gt;language&lt;/a&gt;, &lt;a href=&#34;https://dart.dev/tools&#34;&gt;tools&lt;/a&gt;, and to find &lt;a href=&#34;https://dart.dev/codelabs&#34;&gt;codelabs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Browse &lt;a href=&#34;https://pub.dev&#34;&gt;pub.dev&lt;/a&gt; for more packages and libraries contributed by the community and the Dart team.&lt;/p&gt; &#xA;&lt;p&gt;Our API reference documentation is published at &lt;a href=&#34;https://api.dart.dev&#34;&gt;api.dart.dev&lt;/a&gt;, based on the stable release. (We also publish docs from our &lt;a href=&#34;https://api.dart.dev/beta&#34;&gt;beta&lt;/a&gt; and &lt;a href=&#34;https://api.dart.dev/dev&#34;&gt;dev&lt;/a&gt; channels, as well as from the &lt;a href=&#34;https://api.dart.dev/be&#34;&gt;primary development branch&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Building Dart&lt;/h2&gt; &#xA;&lt;p&gt;If you want to build Dart yourself, here is a guide to &lt;a href=&#34;https://github.com/dart-lang/sdk/wiki/Building&#34;&gt;getting the source, preparing your machine to build the SDK, and building&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are more documents on our &lt;a href=&#34;https://github.com/dart-lang/sdk/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Dart&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to contribute to Dart is to &lt;a href=&#34;http://dartbug.com&#34;&gt;file issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also contribute patches, as described in &lt;a href=&#34;https://github.com/dart-lang/sdk/raw/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>juliuscanute/qr_code_scanner</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/juliuscanute/qr_code_scanner</id>
    <link href="https://github.com/juliuscanute/qr_code_scanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;QR Code Scanner for Flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project in Maintenance Mode Only&lt;/h1&gt; &#xA;&lt;p&gt;Since the underlying frameworks of this package, &lt;a href=&#34;https://github.com/zxing/zxing&#34;&gt;zxing for android&lt;/a&gt; and &lt;a href=&#34;https://github.com/mikebuss/MTBBarcodeScanner&#34;&gt;MTBBarcodescanner for iOS&lt;/a&gt; are both not longer maintaned, this plugin is no longer up to date and in maintenance mode only. Only bug fixes and minor enhancements will be considered.&lt;/p&gt; &#xA;&lt;p&gt;I am developing a new plugin &lt;a href=&#34;https://pub.dev/packages/mobile_scanner&#34;&gt;mobile_scanner&lt;/a&gt; that uses the latest version of MLKit for detecting barcodes and QR codes. On Android it also uses the latest version of CameraX, and on iOS the native AVFoundation for best camera performance.&lt;/p&gt; &#xA;&lt;h1&gt;QR Code Scanner&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/qr_code_scanner&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/qr_code_scanner?include_prereleases&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/aZujk84f6V&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/829004904600961054&#34; alt=&#34;Join the chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/juliuscanute/qr_code_scanner/actions&#34;&gt;&lt;img src=&#34;https://github.com/juliuscanute/qr_code_scanner/workflows/dart/badge.svg?sanitize=true&#34; alt=&#34;GH Actions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A QR code scanner that works on both iOS and Android by natively embedding the platform view within Flutter. The integration with Flutter is seamless, much better than jumping into a native Activity or a ViewController to perform the scan.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34;&gt; Android &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/juliuscanute/qr_code_scanner/master/.resources/android-app-screen-one.jpg&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/juliuscanute/qr_code_scanner/master/.resources/android-app-screen-two.jpg&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34;&gt; iOS &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/juliuscanute/qr_code_scanner/master/.resources/ios-app-screen-one.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/juliuscanute/qr_code_scanner/master/.resources/ios-app-screen-two.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Get Scanned QR Code&lt;/h2&gt; &#xA;&lt;p&gt;When a QR code is recognized, the text identified will be set in &#39;result&#39; of type &lt;code&gt;Barcode&lt;/code&gt;, which contains the output text as property &#39;code&#39; of type &lt;code&gt;String&lt;/code&gt; and scanned code type as property &#39;format&#39; which is an enum &lt;code&gt;BarcodeFormat&lt;/code&gt;, defined in the library.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class _QRViewExampleState extends State&amp;lt;QRViewExample&amp;gt; {&#xA;  final GlobalKey qrKey = GlobalKey(debugLabel: &#39;QR&#39;);&#xA;  Barcode? result;&#xA;  QRViewController? controller;&#xA;&#xA;  // In order to get hot reload to work we need to pause the camera if the platform&#xA;  // is android, or resume the camera if the platform is iOS.&#xA;  @override&#xA;  void reassemble() {&#xA;    super.reassemble();&#xA;    if (Platform.isAndroid) {&#xA;      controller!.pauseCamera();&#xA;    } else if (Platform.isIOS) {&#xA;      controller!.resumeCamera();&#xA;    }&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      body: Column(&#xA;        children: &amp;lt;Widget&amp;gt;[&#xA;          Expanded(&#xA;            flex: 5,&#xA;            child: QRView(&#xA;              key: qrKey,&#xA;              onQRViewCreated: _onQRViewCreated,&#xA;            ),&#xA;          ),&#xA;          Expanded(&#xA;            flex: 1,&#xA;            child: Center(&#xA;              child: (result != null)&#xA;                  ? Text(&#xA;                      &#39;Barcode Type: ${describeEnum(result!.format)}   Data: ${result!.code}&#39;)&#xA;                  : Text(&#39;Scan a code&#39;),&#xA;            ),&#xA;          )&#xA;        ],&#xA;      ),&#xA;    );&#xA;  }&#xA;&#xA;  void _onQRViewCreated(QRViewController controller) {&#xA;    this.controller = controller;&#xA;    controller.scannedDataStream.listen((scanData) {&#xA;      setState(() {&#xA;        result = scanData;&#xA;      });&#xA;    });&#xA;  }&#xA;&#xA;  @override&#xA;  void dispose() {&#xA;    controller?.dispose();&#xA;    super.dispose();&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Android Integration&lt;/h2&gt; &#xA;&lt;p&gt;In order to use this plugin, please update the Gradle, Kotlin and Kotlin Gradle Plugin:&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;android/build.gradle&lt;/code&gt; change &lt;code&gt;ext.kotlin_version = &#39;1.3.50&#39;&lt;/code&gt; to &lt;code&gt;ext.kotlin_version = &#39;1.5.10&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;android/build.gradle&lt;/code&gt; change &lt;code&gt;classpath &#39;com.android.tools.build:gradle:3.5.0&#39;&lt;/code&gt; to &lt;code&gt;classpath &#39;com.android.tools.build:gradle:4.2.0&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;android/gradle/wrapper/gradle-wrapper.properties&lt;/code&gt; change &lt;code&gt;distributionUrl=https\://services.gradle.org/distributions/gradle-5.6.2-all.zip&lt;/code&gt; to &lt;code&gt;distributionUrl=https\://services.gradle.org/distributions/gradle-6.9-all.zip&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;android/app/build.gradle&lt;/code&gt; change &lt;code&gt;defaultConfig{&lt;/code&gt; &lt;code&gt;...&lt;/code&gt; &lt;code&gt;minSdkVersion 16&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; to &lt;code&gt;defaultConfig{&lt;/code&gt; &lt;code&gt;...&lt;/code&gt; &lt;code&gt;minSdkVersion 20&lt;/code&gt; &lt;code&gt;}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;em&gt;Warning&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Flutter Beta or Dev channel (1.25 or 1.26) you can get the following error:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;java.lang.AbstractMethodError: abstract method &#34;void io.flutter.plugin.platform.PlatformView.onFlutterViewAttached(android.view.View)&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a bug in Flutter which is being tracked here: &lt;a href=&#34;https://github.com/flutter/flutter/issues/72185&#34;&gt;https://github.com/flutter/flutter/issues/72185&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;There is a workaround by adding &lt;code&gt;android.enableDexingArtifactTransform=false&lt;/code&gt; to your &lt;code&gt;gradle.properties&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;iOS Integration&lt;/h2&gt; &#xA;&lt;p&gt;In order to use this plugin, add the following to your Info.plist file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;key&amp;gt;io.flutter.embedded_views_preview&amp;lt;/key&amp;gt;&#xA;&amp;lt;true/&amp;gt;&#xA;&amp;lt;key&amp;gt;NSCameraUsageDescription&amp;lt;/key&amp;gt;&#xA;&amp;lt;string&amp;gt;This app needs camera access to scan QR codes&amp;lt;/string&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Web Integration&lt;/h2&gt; &#xA;&lt;p&gt;Add this to &lt;code&gt;web/index.html&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/jsqr@1.3.1/dist/jsQR.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note: on web, only QR codes are supported. Other barcodes and 2D codes cannot be scanned.&lt;/p&gt; &#xA;&lt;p&gt;Web support is in very early stage. Features such as flash, pause or resume are not implemented. Moreover, the camera preview does not respect the surrounding constraints. This is not at last due to Flutter&#39;s early state of platform views on web.&lt;/p&gt; &#xA;&lt;h2&gt;Flip Camera (Back/Front)&lt;/h2&gt; &#xA;&lt;p&gt;The default camera is the back camera.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;await controller.flipCamera();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Flash (Off/On)&lt;/h2&gt; &#xA;&lt;p&gt;By default, flash is OFF.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;await controller.toggleFlash();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resume/Pause&lt;/h2&gt; &#xA;&lt;p&gt;Pause camera stream and scanner.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;await controller.pauseCamera();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Resume camera stream and scanner.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;await controller.resumeCamera();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;SDK&lt;/h1&gt; &#xA;&lt;p&gt;Requires at least SDK 20. Requires at least iOS 8.&lt;/p&gt; &#xA;&lt;h1&gt;TODOs&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS Native embedding is written to match what is supported in the framework as of the date of publication of this package. It needs to be improved as the framework support improves.&lt;/li&gt; &#xA; &lt;li&gt;In future, options will be provided for default states.&lt;/li&gt; &#xA; &lt;li&gt;Finally, I welcome PR&#39;s to make it better :), thanks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android: &lt;a href=&#34;https://github.com/zxing/zxing&#34;&gt;https://github.com/zxing/zxing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;iOS: &lt;a href=&#34;https://github.com/mikebuss/MTBBarcodeScanner&#34;&gt;https://github.com/mikebuss/MTBBarcodeScanner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Special Thanks To: LeonDevLifeLog for his contributions towards improving this package.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>flutter/plugins</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/flutter/plugins</id>
    <link href="https://github.com/flutter/plugins" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Plugins for Flutter maintained by the Flutter team&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter plugins&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/flutter/plugins/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/flutter/plugins.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flutter/plugins/actions/workflows/release.yml&#34;&gt;&lt;img src=&#34;https://github.com/flutter/plugins/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Release Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo is a companion repo to the main &lt;a href=&#34;https://github.com/flutter/flutter&#34;&gt;flutter repo&lt;/a&gt;. It contains the source code for Flutter first-party plugins (i.e., plugins developed by the core Flutter team). Check the &lt;code&gt;packages&lt;/code&gt; directory for all plugins.&lt;/p&gt; &#xA;&lt;p&gt;Flutter plugins enable access to platform-specific APIs. For more information about plugins, and how to use them, see &lt;a href=&#34;https://flutter.dev/platform-plugins/&#34;&gt;https://flutter.dev/platform-plugins/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These plugins are also available on &lt;a href=&#34;https://pub.dev/flutter/packages&#34;&gt;pub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please file any issues, bugs, or feature requests in the &lt;a href=&#34;https://github.com/flutter/flutter/issues/new&#34;&gt;main flutter repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Issues pertaining to this repository are &lt;a href=&#34;https://github.com/flutter/flutter/issues?q=is%3Aopen+is%3Aissue+label%3Aplugin&#34;&gt;labeled &#34;plugin&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute a new plugin to the Flutter ecosystem, please see the documentation for &lt;a href=&#34;https://flutter.dev/developing-packages/&#34;&gt;developing packages&lt;/a&gt; and &lt;a href=&#34;https://flutter.dev/platform-channels/&#34;&gt;platform channels&lt;/a&gt;. You can store your plugin source code in any GitHub repository (the present repo is only intended for plugins developed by the core Flutter team). Once your plugin is ready, you can &lt;a href=&#34;https://flutter.dev/developing-packages/#publish&#34;&gt;publish&lt;/a&gt; it to the &lt;a href=&#34;https://pub.dev/&#34;&gt;pub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to contribute a change to any of the existing plugins in this repo, please review our &lt;a href=&#34;https://github.com/flutter/plugins/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;, and send a &lt;a href=&#34;https://github.com/flutter/plugins/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;These are the available plugins in this repository.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Pub&lt;/th&gt; &#xA;   &lt;th&gt;Points&lt;/th&gt; &#xA;   &lt;th&gt;Popularity&lt;/th&gt; &#xA;   &lt;th&gt;Likes&lt;/th&gt; &#xA;   &lt;th&gt;Issues&lt;/th&gt; &#xA;   &lt;th&gt;Pull requests&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/camera/&#34;&gt;camera&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/camera&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/camera.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/camera/score&#34;&gt;&lt;img src=&#34;https://badges.bar/camera/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/camera/score&#34;&gt;&lt;img src=&#34;https://badges.bar/camera/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/camera/score&#34;&gt;&lt;img src=&#34;https://badges.bar/camera/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20camera&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20camera?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20camera&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20camera?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/espresso/&#34;&gt;espresso&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/espresso&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/espresso.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/espresso/score&#34;&gt;&lt;img src=&#34;https://badges.bar/espresso/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/espresso/score&#34;&gt;&lt;img src=&#34;https://badges.bar/espresso/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/espresso/score&#34;&gt;&lt;img src=&#34;https://badges.bar/espresso/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20espresso&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20espresso?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20espresso&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20espresso?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/file_selector/&#34;&gt;file_selector&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/file_selector&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/file_selector.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/file_selector/score&#34;&gt;&lt;img src=&#34;https://badges.bar/file_selector/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/file_selector/score&#34;&gt;&lt;img src=&#34;https://badges.bar/file_selector/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/file_selector/score&#34;&gt;&lt;img src=&#34;https://badges.bar/file_selector/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20file_selector&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20file_selector?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20file_selector&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20file_selector?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/flutter_plugin_android_lifecycle/&#34;&gt;flutter_plugin_android_lifecycle&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_plugin_android_lifecycle&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_plugin_android_lifecycle.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_plugin_android_lifecycle/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_plugin_android_lifecycle/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_plugin_android_lifecycle/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_plugin_android_lifecycle/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_plugin_android_lifecycle/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_plugin_android_lifecycle/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20flutter_plugin_android_lifecycle&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20flutter_plugin_android_lifecycle?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20flutter_plugin_android_lifecycle&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20flutter_plugin_android_lifecycle?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/google_maps_flutter&#34;&gt;google_maps_flutter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_maps_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_maps_flutter.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_maps_flutter/score&#34;&gt;&lt;img src=&#34;https://badges.bar/google_maps_flutter/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_maps_flutter/score&#34;&gt;&lt;img src=&#34;https://badges.bar/google_maps_flutter/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_maps_flutter/score&#34;&gt;&lt;img src=&#34;https://badges.bar/google_maps_flutter/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20maps&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20maps?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20google_maps_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20google_maps_flutter?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/google_sign_in/&#34;&gt;google_sign_in&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_sign_in&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/google_sign_in.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_sign_in/score&#34;&gt;&lt;img src=&#34;https://badges.bar/google_sign_in/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_sign_in/score&#34;&gt;&lt;img src=&#34;https://badges.bar/google_sign_in/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/google_sign_in/score&#34;&gt;&lt;img src=&#34;https://badges.bar/google_sign_in/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20google_sign_in&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20google_sign_in?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20google_sign_in&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20google_sign_in?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/image_picker/&#34;&gt;image_picker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/image_picker&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/image_picker.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/image_picker/score&#34;&gt;&lt;img src=&#34;https://badges.bar/image_picker/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/image_picker/score&#34;&gt;&lt;img src=&#34;https://badges.bar/image_picker/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/image_picker/score&#34;&gt;&lt;img src=&#34;https://badges.bar/image_picker/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20image_picker&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20image_picker?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20image_picker&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20image_picker?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/in_app_purchase/&#34;&gt;in_app_purchase&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/in_app_purchase&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/in_app_purchase.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/in_app_purchase/score&#34;&gt;&lt;img src=&#34;https://badges.bar/in_app_purchase/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/in_app_purchase/score&#34;&gt;&lt;img src=&#34;https://badges.bar/in_app_purchase/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/in_app_purchase/score&#34;&gt;&lt;img src=&#34;https://badges.bar/in_app_purchase/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20in_app_purchase&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20in_app_purchase?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20in_app_purchase&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20in_app_purchase?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/ios_platform_images/&#34;&gt;ios_platform_images&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/ios_platform_images&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/ios_platform_images.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/ios_platform_images/score&#34;&gt;&lt;img src=&#34;https://badges.bar/ios_platform_images/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/ios_platform_images/score&#34;&gt;&lt;img src=&#34;https://badges.bar/ios_platform_images/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/ios_platform_images/score&#34;&gt;&lt;img src=&#34;https://badges.bar/ios_platform_images/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20ios_platform_images&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20ios_platform_images?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20ios_platform_images&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20ios_platform_images?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/local_auth/&#34;&gt;local_auth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/local_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/local_auth.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/local_auth/score&#34;&gt;&lt;img src=&#34;https://badges.bar/local_auth/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/local_auth/score&#34;&gt;&lt;img src=&#34;https://badges.bar/local_auth/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/local_auth/score&#34;&gt;&lt;img src=&#34;https://badges.bar/local_auth/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20local_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20local_auth?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20local_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20local_auth?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/path_provider/&#34;&gt;path_provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/path_provider&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/path_provider.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/path_provider/score&#34;&gt;&lt;img src=&#34;https://badges.bar/path_provider/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/path_provider/score&#34;&gt;&lt;img src=&#34;https://badges.bar/path_provider/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/path_provider/score&#34;&gt;&lt;img src=&#34;https://badges.bar/path_provider/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20path_provider&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20path_provider?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20path_provider&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20path_provider?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/plugin_platform_interface/&#34;&gt;plugin_platform_interface&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/plugin_platform_interface&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/plugin_platform_interface.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/plugin_platform_interface/score&#34;&gt;&lt;img src=&#34;https://badges.bar/plugin_platform_interface/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/plugin_platform_interface/score&#34;&gt;&lt;img src=&#34;https://badges.bar/plugin_platform_interface/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/plugin_platform_interface/score&#34;&gt;&lt;img src=&#34;https://badges.bar/plugin_platform_interface/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20plugin_platform_interface&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20plugin_platform_interface?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20plugin_platform_interface&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20plugin_platform_interface?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/quick_actions/&#34;&gt;quick_actions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/quick_actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/quick_actions.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/quick_actions/score&#34;&gt;&lt;img src=&#34;https://badges.bar/quick_actions/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/quick_actions/score&#34;&gt;&lt;img src=&#34;https://badges.bar/quick_actions/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/quick_actions/score&#34;&gt;&lt;img src=&#34;https://badges.bar/quick_actions/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20quick_actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20quick_actions?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20quick_actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20quick_actions?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/shared_preferences/&#34;&gt;shared_preferences&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/shared_preferences&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/shared_preferences.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/shared_preferences/score&#34;&gt;&lt;img src=&#34;https://badges.bar/shared_preferences/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/shared_preferences/score&#34;&gt;&lt;img src=&#34;https://badges.bar/shared_preferences/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/shared_preferences/score&#34;&gt;&lt;img src=&#34;https://badges.bar/shared_preferences/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20shared_preferences&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20shared_preferences?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20shared_preferences&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20shared_preferences?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/url_launcher/&#34;&gt;url_launcher&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/url_launcher&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/url_launcher.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/url_launcher/score&#34;&gt;&lt;img src=&#34;https://badges.bar/url_launcher/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/url_launcher/score&#34;&gt;&lt;img src=&#34;https://badges.bar/url_launcher/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/url_launcher/score&#34;&gt;&lt;img src=&#34;https://badges.bar/url_launcher/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20url_launcher&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20url_launcher?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20url_launcher&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20url_launcher?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/video_player/&#34;&gt;video_player&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/video_player&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/video_player.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/video_player/score&#34;&gt;&lt;img src=&#34;https://badges.bar/video_player/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/video_player/score&#34;&gt;&lt;img src=&#34;https://badges.bar/video_player/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/video_player/score&#34;&gt;&lt;img src=&#34;https://badges.bar/video_player/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20video_player&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20video_player?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20video_player&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20video_player?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/plugins/main/packages/webview_flutter/&#34;&gt;webview_flutter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/webview_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/webview_flutter.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/webview_flutter/score&#34;&gt;&lt;img src=&#34;https://badges.bar/webview_flutter/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/webview_flutter/score&#34;&gt;&lt;img src=&#34;https://badges.bar/webview_flutter/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/webview_flutter/score&#34;&gt;&lt;img src=&#34;https://badges.bar/webview_flutter/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20webview&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20webview?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/plugins/labels/p%3A%20webview_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/plugins/p:%20webview_flutter?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>LianjiaTech/bruno</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/LianjiaTech/bruno</id>
    <link href="https://github.com/LianjiaTech/bruno" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An enterprise-class package of Flutter components for mobile applications. ( Bruno 是基于一整套设计体系的 Flutter 组件库。)&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://bruno.ke.com&#34;&gt; &lt;img width=&#34;200&#34; src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1638883523735.jpg&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Bruno&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;一套企业级移动端 Flutter 组件库&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/LianjiaTech/bruno/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;简体中文 | &lt;a href=&#34;https://raw.githubusercontent.com/LianjiaTech/bruno/2.10.x/README.en-US.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1638883534391.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;组件上新 &lt;span&gt;🎉&lt;/span&gt; &lt;span&gt;🎉&lt;/span&gt; &lt;span&gt;🎉&lt;/span&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;BrnSwitchButton&lt;/code&gt; &lt;code&gt;BrnSwitchFormItem&lt;/code&gt; &lt;code&gt;BrnGeneralFormItem&lt;/code&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1651141461442.png&#34; width=&#34;300&#34; height=&#34;359&#34;&gt; &#xA;&lt;h2&gt;✨ 特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;提炼自企业级移动端产品的交互和视觉风格&lt;/li&gt; &#xA; &lt;li&gt;开箱即用的高质量 Flutter 组件&lt;/li&gt; &#xA; &lt;li&gt;提供满足业务差异的主题定制能力&lt;/li&gt; &#xA; &lt;li&gt;设计工具赋能开发全链路&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Demo 下载&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img width=&#34;180&#34; height=&#34;180&#34; src=&#34;https://img.ljcdn.com/beike/zjz/bruno/1639125005085.png&#34;&gt; &lt;img width=&#34;180&#34; height=&#34;180&#34; src=&#34;https://img.ljcdn.com/beike/zjz/bruno/1639125005077.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;适配 Flutter 版本&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Bruno 版本&lt;/th&gt; &#xA;   &lt;th&gt;Flutter SDK 版本&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.0.0&lt;/td&gt; &#xA;   &lt;td&gt;1.22.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.0.0&lt;/td&gt; &#xA;   &lt;td&gt;2.2.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.1.1 (支持空安全)&lt;/td&gt; &#xA;   &lt;td&gt;2.2.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.2.0&lt;/td&gt; &#xA;   &lt;td&gt;2.10.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;接入&lt;/h2&gt; &#xA;&lt;p&gt;Flutter 工程中 pubspec.yaml 文件里加入以下依赖：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;dependencies:&#xA;  bruno: version&#xA;     &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;示例&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:bruno/bruno.dart&#39;;&#xA;...&#xA;BrnBubbleText(&#xA;  maxLines: 3,&#xA;  text: &#39;I am first bubble text&#39;,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;🌈 主题定制&lt;/h3&gt; &#xA;&lt;p&gt;参考 &lt;a href=&#34;https://bruno.ke.com/page/guide/theme&#34;&gt;主题定制&lt;/a&gt; 文档&lt;/p&gt; &#xA;&lt;h2&gt;参与贡献&lt;/h2&gt; &#xA;&lt;p&gt;贡献之前请先阅读 &lt;a href=&#34;https://bruno.ke.com/page/guide/contribution&#34;&gt;贡献指南&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;感谢所有为 Bruno 做出贡献的开发者!&lt;/p&gt; &#xA;&lt;div style=&#34;display:flex;flex-wrap: wrap;&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/violinday&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664602.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/zhoujuanjuan&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664928.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/hexintao&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664290.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/ShzMinato&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664590.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Nayuta403&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664273.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/liroya2003&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637736846398.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/lifuqing&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664429.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/visitorvisit&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664282.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/DNACore&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664426.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/SlamDunk007&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664914.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/zadouyoune&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664629.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/quanGitHub1&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664641.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/bill19&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664536.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/MichaelWon&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664633.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/laoshubuluo&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664320.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/eason-lz&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664460.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/coolsining&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664465.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/765227120&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637740374486.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/xzj524&#34;&gt; &lt;img src=&#34;https://img.ljcdn.com/beike/zjz/bruno/img/1637739664906.png&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🔗 链接&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://bruno.ke.com&#34;&gt;首页&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://bruno.ke.com/page/widgets&#34;&gt;所有组件&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzIyODcxODY0OA==&amp;amp;mid=2247486048&amp;amp;idx=1&amp;amp;sn=0cc95bd85a54ce0f39f6247d15618ae8&amp;amp;chksm=e84ceb37df3b62216b34c7be041229630eca3d7c4fd3823ebf0520a9f2c99ed2cdf3e677904b&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=11012tvWvcYunVGfiPa8EfCT&amp;amp;sharer_sharetime=1635751229200&amp;amp;sharer_shareid=dbde8f595d5b99a8f5cfb27122964615&amp;amp;version=3.1.16.90294&#34;&gt;设计理念&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://bruno.ke.com/page/guide/start&#34;&gt;快速开始&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://bruno.ke.com/page/guide/theme&#34;&gt;主题定制&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://bruno.ke.com/page/guide/faq&#34;&gt;常见问题&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://bruno.ke.com/page/guide/sketch&#34;&gt;sketch 设计指引&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://bruno.ke.com/download/sketch&#34;&gt;设计物料下载&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;p&gt;Bruno 作为整套标准组件，参考和引用部分开源库如下：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/peng8350/flutter_gifimage&#34;&gt;flutter_gifimage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/Skylled/7ac0f2f99881f7df2a0a850e60ef2df0&#34;&gt;expansion_tile_card.dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bluefireteam/photo_view&#34;&gt;photo_view&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tal-tech/flutter_intro&#34;&gt;flutter_intro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yako-dev/flutter_badges&#34;&gt;flutter_badges&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutterchina/lpinyin&#34;&gt;lpinyin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutterchina/azlistview&#34;&gt;azlistview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dnfield/flutter_path_drawing&#34;&gt;flutter_path_drawing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;感谢以上开源库的作者&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>syncfusion/flutter-widgets</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/syncfusion/flutter-widgets</id>
    <link href="https://github.com/syncfusion/flutter-widgets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Syncfusion Flutter widgets libraries include high quality UI widgets and file-format packages to help you create rich, high-quality applications for iOS, Android, and web from a single code base.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/flutter-widgets-banner-1.png&#34;&gt; &#xA;&lt;h1&gt;Syncfusion Flutter Widgets&lt;/h1&gt; &#xA;&lt;p&gt;Syncfusion Flutter widgets libraries include high-quality UI widgets and file-format packages to help you create rich, high-quality applications for iOS, Android, and web from a single code base.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This is a commercial package. To use our packages, you need to have either the Syncfusion Commercial License or Syncfusion Community license. For more details, please check the &lt;a href=&#34;https://github.com/syncfusion/flutter-examples/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Our packages are now compatible with Flutter for Web. However, this will be in Beta until Flutter for Web becomes stable.&lt;/p&gt; &#xA;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/flutter-widgets-collage.png&#34;&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#repository-structure&#34;&gt;Repository structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#packages&#34;&gt;Packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#how-to-use&#34;&gt;How to use&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#referring-packages-source-in-your-application&#34;&gt;Referring packages source in your application&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#running-the-available-example&#34;&gt;Running the available example&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#get-the-demo-application&#34;&gt;Get the demo application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#useful-links&#34;&gt;Useful links&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#support-and-feedback&#34;&gt;Support and feedback&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#about-syncfusion&#34;&gt;About Syncfusion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Repository structure&lt;/h2&gt; &#xA;&lt;p&gt;This repository holds the source code of all the Syncfusion Flutter widgets and libraries. Source code of the widget, a working example, read me, changelog, etc., files are available in the &lt;code&gt;packages&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Also, you can view the samples code from &lt;a href=&#34;https://github.com/syncfusion/flutter-examples&#34;&gt;this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package/Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Available widgets/libraries&lt;/th&gt; &#xA;   &lt;th&gt;Pub&lt;/th&gt; &#xA;   &lt;th&gt;Points&lt;/th&gt; &#xA;   &lt;th&gt;Popularity&lt;/th&gt; &#xA;   &lt;th&gt;Likes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_charts/&#34;&gt;syncfusion_flutter_charts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfCartesianChart&lt;/li&gt;&#xA;     &lt;li&gt;SfCircularChart&lt;/li&gt;&#xA;     &lt;li&gt;SfPyramidChart&lt;/li&gt;&#xA;     &lt;li&gt;SfFunnelChart&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_charts&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_charts.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_charts/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_charts/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_charts/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_charts/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_charts/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_charts/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_calendar/&#34;&gt;syncfusion_flutter_calendar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfCalendar&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_calendar&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_calendar.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_calendar/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_calendar/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_calendar/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_calendar/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_calendar/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_calendar/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_datagrid/&#34;&gt;syncfusion_flutter_datagrid&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfDataGrid&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datagrid&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_datagrid.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datagrid/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_datagrid/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datagrid/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_datagrid/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datagrid/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_datagrid/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_pdfviewer/&#34;&gt;syncfusion_flutter_pdfviewer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfPdfViewer&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdfviewer&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_pdfviewer.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdfviewer/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_pdfviewer/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdfviewer/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_pdfviewer/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdfviewer/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_pdfviewer/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_pdf/&#34;&gt;syncfusion_flutter_pdf&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;PDF library&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdf&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_pdf.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdf/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_pdf/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdf/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_pdf/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdf/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_pdf/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_xlsio/&#34;&gt;syncfusion_flutter_xlsio&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;XlsIO library&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_xlsio&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_xlsio.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_xlsio/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_xlsio/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_xlsio/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_xlsio/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_xlsio/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_xlsio/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_datepicker/&#34;&gt;syncfusion_flutter_datepicker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfDateRangePicker&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datepicker&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_datepicker.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datepicker/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_datepicker/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datepicker/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_datepicker/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datepicker/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_datepicker/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_maps/&#34;&gt;syncfusion_flutter_maps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfMaps&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_maps&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_maps.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_maps/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_maps/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_maps/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_maps/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_maps/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_maps/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_gauges/&#34;&gt;syncfusion_flutter_gauges&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfRadialGauge&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_gauges&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_gauges.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_gauges/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_gauges/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_gauges/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_gauges/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_gauges/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_gauges/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_sliders/&#34;&gt;syncfusion_flutter_sliders&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfSlider&lt;/li&gt;&#xA;     &lt;li&gt;SfRangeSlider&lt;/li&gt;&#xA;     &lt;li&gt;SfRangeSelector&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_sliders&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_sliders.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_sliders/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_sliders/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_sliders/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_sliders/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_sliders/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_sliders/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_signaturepad/&#34;&gt;syncfusion_flutter_signaturepad&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfSignaturePad&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_signaturepad&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_signaturepad.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_signaturepad/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_signaturepad/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_signaturepad/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_signaturepad/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_signaturepad/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_signaturepad/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_barcodes/&#34;&gt;syncfusion_flutter_barcodes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfBarcodeGenerator&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_barcodes&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_barcodes.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_barcodes/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_barcodes/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_barcodes/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_barcodes/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_barcodes/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_barcodes/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_officechart/&#34;&gt;syncfusion_officechart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Office chart library&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officechart&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_officechart.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officechart/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_officechart/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officechart/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_officechart/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officechart/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_officechart/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_officecore/&#34;&gt;syncfusion_officecore&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This package is a dependecy package for &lt;code&gt;Office chart&lt;/code&gt; library.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officecore&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_officecore.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officecore/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_officecore/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officecore/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_officecore/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officecore/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_officecore/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_core/&#34;&gt;syncfusion_flutter_core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This package is a dependecy package for all the Syncfusion Flutter widgets and libraries.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_core&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_core.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_core/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_core/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_core/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_core/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_core/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_core/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_localizations/&#34;&gt;syncfusion_localizations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This package contains localized text for 77 cultures for all the applicable Syncfusion Flutter Widgets.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_localizations&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_localizations.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_localizations/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_localizations/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_localizations/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_localizations/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_localizations/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_localizations/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;h3&gt;Referring packages source in your application&lt;/h3&gt; &#xA;&lt;p&gt;All the packages available in the &lt;code&gt;packages&lt;/code&gt; folder can be referred in your application by following the below steps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Clone the &lt;a href=&#34;&#34;&gt;flutter-widgets&lt;/a&gt; repository into your machine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Refer the required package in your application&#39;s &lt;code&gt;pubspec.yaml&lt;/code&gt; file by mentioning its local path. For example, here we have referred the charts package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;syncfusion_flutter_charts:&#xA;    path: D:/flutter-widgets/packages/syncfusion_flutter_charts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the following command to get the required packages.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;$ flutter pub get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run your application either using &lt;code&gt;F5&lt;/code&gt; or &lt;code&gt;Run &amp;gt; Start Debugging&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Running the available example&lt;/h3&gt; &#xA;&lt;p&gt;All the packages available in the &lt;code&gt;packages&lt;/code&gt; folder has an example and it can be run by following the below steps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Clone the &lt;a href=&#34;&#34;&gt;flutter-widgets&lt;/a&gt; repository into your machine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open the example folder available in packages in an IDE. The below path is for reference.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;..\flutter-widgets\packages\syncfusion_flutter_charts\example&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the following command to get the required packages.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;$ flutter pub get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In the example, packages are referred from the local folder which is available in this repository. If you wish, you can also refer the packages from &lt;a href=&#34;https://pub.dev&#34;&gt;pub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run your application either using &lt;code&gt;F5&lt;/code&gt; or &lt;code&gt;Run &amp;gt; Start Debugging&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get the demo application&lt;/h2&gt; &#xA;&lt;p&gt;Explore the full capabilities of our Flutter widgets on your device by installing our sample browser applications from the below app stores, and view samples code in GitHub.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.syncfusion.flutter.examples&#34;&gt;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/FTControl/google-play.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://apps.apple.com/us/app/syncfusion-flutter-ui-widgets/id1475231341&#34;&gt;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/FTControl/apple-button.png&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/syncfusion/flutter-examples&#34;&gt;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/FTControl/GitHub.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flutter.syncfusion.com&#34;&gt;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/FTControl/web_sample_browser.png&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;p&gt;Take a look at the following to learn more about Syncfusion Flutter widgets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.syncfusion.com/flutter-widgets&#34;&gt;Syncfusion Flutter product page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.syncfusion.com/flutter/introduction/overview&#34;&gt;User guide documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.syncfusion.com/flutter/introduction/api-reference&#34;&gt;API reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.syncfusion.com/kb/flutter&#34;&gt;Knowledge base&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.syncfusion.com/tutorial-videos/flutter&#34;&gt;Video tutorials&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support and feedback&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For any other queries, reach our &lt;a href=&#34;https://www.syncfusion.com/support/directtrac/incidents/newincident&#34;&gt;Syncfusion support team&lt;/a&gt; or post the queries through the &lt;a href=&#34;https://www.syncfusion.com/forums&#34;&gt;Community forums&lt;/a&gt; and submit a feature request or a bug through our &lt;a href=&#34;https://www.syncfusion.com/feedback/flutter&#34;&gt;Feedback portal&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To renew the subscription, click &lt;a href=&#34;https://www.syncfusion.com/sales/products&#34;&gt;renew&lt;/a&gt; or contact our sales team at &lt;a href=&#34;mailto:salessupport@syncfusion.com&#34;&gt;salessupport@syncfusion.com&lt;/a&gt; | Toll Free: 1-888-9 DOTNET.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About Syncfusion&lt;/h2&gt; &#xA;&lt;p&gt;Founded in 2001 and headquartered in Research Triangle Park, N.C., Syncfusion has more than 20,000 customers and more than 1 million users, including large financial institutions, Fortune 500 companies, and global IT consultancies.&lt;/p&gt; &#xA;&lt;p&gt;Today we provide 1,000+ controls and frameworks for web (&lt;a href=&#34;https://www.syncfusion.com/aspnet-core-ui-controls&#34;&gt;ASP.NET Core&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/aspnet-mvc-ui-controls&#34;&gt;ASP.NET MVC&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/jquery/aspnet-web-forms-ui-controls&#34;&gt;ASP.NET WebForms&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/javascript-ui-controls&#34;&gt;JavaScript&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/angular-ui-components&#34;&gt;Angular&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/react-ui-components&#34;&gt;React&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/vue-ui-components&#34;&gt;Vue&lt;/a&gt;, and &lt;a href=&#34;https://www.syncfusion.com/blazor-components&#34;&gt;Blazor&lt;/a&gt;, mobile (&lt;a href=&#34;https://www.syncfusion.com/xamarin-ui-controls&#34;&gt;Xamarin&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/flutter-widgets&#34;&gt;Flutter&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/uwp-ui-controls&#34;&gt;UWP&lt;/a&gt;, and &lt;a href=&#34;https://www.syncfusion.com/javascript-ui-controls&#34;&gt;JavaScript&lt;/a&gt;), and desktop development (&lt;a href=&#34;https://www.syncfusion.com/winforms-ui-controls&#34;&gt;WinForms&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/wpf-ui-controls&#34;&gt;WPF&lt;/a&gt;, and &lt;a href=&#34;https://www.syncfusion.com/uwp-ui-controls&#34;&gt;UWP&lt;/a&gt;). We provide ready-to deploy enterprise software for dashboards, reports, data integration, and big data processing. Many customers have saved millions in licensing fees by deploying our software.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jhomlala/betterplayer</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/jhomlala/betterplayer</id>
    <link href="https://github.com/jhomlala/betterplayer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Better video player for Flutter, with multiple configuration options. Solving typical use cases!&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Better Player&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/better_player&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/better_player.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jhomlala/betterplayer&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/jhomlala/betterplayer.svg?style=flat&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jhomlala/betterplayer&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-flutter-blue.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Advanced video player based on video_player and Chewie. It&#39;s solves many typical use cases and it&#39;s easy to run.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/1.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/2.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/3.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/4.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/5.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/6.png&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/7.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/8.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/9.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/10.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/11.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/12.png&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/13.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/14.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/15.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/jhomlala/betterplayer/master/media/16.png&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This plugin is based on &lt;a href=&#34;https://github.com/brianegan/chewie&#34;&gt;Chewie&lt;/a&gt;. Chewie is awesome plugin and works well in many cases. Better Player is a continuation of ideas introduced in Chewie. Better player fix common bugs, adds more configuration options and solves typical use cases.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;br&gt; ✔️ Fixed common bugs&lt;br&gt; ✔️ Added advanced configuration options&lt;br&gt; ✔️ Refactored player controls&lt;br&gt; ✔️ Playlist support&lt;br&gt; ✔️ Video in ListView support&lt;br&gt; ✔️ Subtitles support: (formats: SRT, WEBVTT with HTML tags support; subtitles from HLS; multiple subtitles for video)&lt;br&gt; ✔️ HTTP Headers support&lt;br&gt; ✔️ BoxFit of video support&lt;br&gt; ✔️ Playback speed support&lt;br&gt; ✔️ HLS support (track, subtitles (also segmented), audio track selection)&lt;br&gt; ✔️ DASH support (track, subtitles, audio track selection)&lt;br&gt; ✔️ Alternative resolution support&lt;br&gt; ✔️ Cache support&lt;br&gt; ✔️ Notifications support&lt;br&gt; ✔️ Picture in Picture support&lt;br&gt; ✔️ DRM support (token, Widevine, FairPlay EZDRM).&lt;br&gt; ✔️ ... and much more!&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jhomlala.github.io/betterplayer/&#34;&gt;Official documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jhomlala/betterplayer/tree/master/example&#34;&gt;Example application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/better_player/latest/better_player/better_player-library.html&#34;&gt;API reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Important information&lt;/h2&gt; &#xA;&lt;p&gt;This plugin development is in progress. You may encounter breaking changes each version. This plugin is developed part-time for free. If you need some feature which is supported by other players available in pub dev, then feel free to create PR. All valuable contributions are welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter-stripe/flutter_stripe</title>
    <updated>2022-06-01T01:38:24Z</updated>
    <id>tag:github.com,2022-06-01:/flutter-stripe/flutter_stripe</id>
    <link href="https://github.com/flutter-stripe/flutter_stripe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter SDK for Stripe.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/19904063/116995247-20519e80-acda-11eb-8e1b-7d0efbd193ad.png&#34; height=&#34;36&#34;&gt; &#xA;&lt;h1&gt;Flutter Stripe&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_stripe&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_stripe.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/flutter-stripe/flutter_stripe/all_plugins?logo=github&#34; alt=&#34;build&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Stripe Flutter SDK allows you to build delightful payment experiences in your native Android and iOS apps using Flutter. We provide powerful and customizable UI screens and elements that can be used out-of-the-box to collect your users&#39; payment details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/19904063/121511757-48bf6d80-c9e9-11eb-9674-0fec35e26ef5.png&#34; alt=&#34;stripe-flutter_cover&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Simplified Security&lt;/strong&gt;: We make it simple for you to collect sensitive data such as credit card numbers and remain &lt;a href=&#34;https://stripe.com/docs/security#pci-dss-guidelines&#34;&gt;PCI compliant&lt;/a&gt;. This means the sensitive data is sent directly to Stripe instead of passing through your server. For more information, see our &lt;a href=&#34;https://stripe.com/docs/security&#34;&gt;Integration Security Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Apple Pay&lt;/strong&gt;: We provide a &lt;a href=&#34;https://stripe.com/docs/apple-pay&#34;&gt;seamless integration with Apple Pay&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Google Pay&lt;/strong&gt;: The plugin can easily act as payment provider for the &lt;a href=&#34;https://raw.githubusercontent.com/flutter-stripe/flutter_stripe/main/#Pay-Plugin-support&#34;&gt;Pay plugin&lt;/a&gt; that enables you to seamlessly integrate Google Pay or Apple Pay. All you need to do is add your stripe publishable key to the payment profile.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Payment methods&lt;/strong&gt;: Accepting more &lt;a href=&#34;https://stripe.com/docs/payments/payment-methods/overview&#34;&gt;payment methods&lt;/a&gt; helps your business expand its global reach and improve checkout conversion.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;SCA-Ready&lt;/strong&gt;: The SDK automatically performs native &lt;a href=&#34;https://stripe.com/docs/payments/3d-secure&#34;&gt;3D Secure authentication&lt;/a&gt; if needed to comply with &lt;a href=&#34;https://stripe.com/docs/strong-customer-authentication&#34;&gt;Strong Customer Authentication&lt;/a&gt; regulation in Europe.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Native UI&lt;/strong&gt;: We provide native screens and elements to securely collect payment details on Android and iOS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pre-built payments UI&lt;/strong&gt;: Learn how to integrate Payment Sheet, the new pre-built payments UI for mobile apps. This pre-built UI lets you accept cards, Apple Pay, and Google Pay out of the box, and includes support for saving &amp;amp; reusing cards.&lt;/p&gt; &#xA;&lt;h4&gt;Recommended usage&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re selling digital products or services within your app, (e.g. subscriptions, in-game currencies, game levels, access to premium content, or unlocking a full version), you must use the app store&#39;s in-app purchase APIs. See &lt;a href=&#34;https://developer.apple.com/app-store/review/guidelines/#payments&#34;&gt;Apple&#39;s&lt;/a&gt; and &lt;a href=&#34;https://support.google.com/googleplay/android-developer/answer/9858738?hl=en&amp;amp;ref_topic=9857752&#34;&gt;Google&#39;s&lt;/a&gt; guidelines for more information. For all other scenarios you can use this SDK to process payments via Stripe.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dart pub add flutter_stripe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;p&gt;This plugin requires several changes to be able to work on Android devices. Please make sure you follow all these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use Android 5.0 (API level 21) and above&lt;/li&gt; &#xA; &lt;li&gt;Use Kotlin version 1.5.0 and above: &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/raw/79b201a2e9b827196d6a97bb41e1d0e526632a5a/example/android/build.gradle#L2&#34;&gt;example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using a descendant of &lt;code&gt;Theme.AppCompat&lt;/code&gt; for your activity: &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/raw/main/example/android/app/src/main/res/values/styles.xml#L15&#34;&gt;example&lt;/a&gt;, &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/raw/main/example/android/app/src/main/res/values-night/styles.xml#L16&#34;&gt;example night theme&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using an up-to-date Android gradle build tools version: &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/raw/main/example/android/build.gradle#L9&#34;&gt;example&lt;/a&gt; and an up-to-date gradle version accordingly: &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/raw/main/example/android/gradle/wrapper/gradle-wrapper.properties#L6&#34;&gt;example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;code&gt;FlutterFragmentActivity&lt;/code&gt; instead of &lt;code&gt;FlutterActivity&lt;/code&gt; in &lt;code&gt;MainActivity.kt&lt;/code&gt;: &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/raw/79b201a2e9b827196d6a97bb41e1d0e526632a5a/example/android/app/src/main/kotlin/com/flutter/stripe/example/MainActivity.kt#L6&#34;&gt;example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rebuild the app, as the above changes don&#39;t update with hot reload&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;These changes are needed because the Android Stripe SDK requires the use of the AppCompat theme for their UI components and the Support Fragment Manager for the Payment Sheets&lt;/p&gt; &#xA;&lt;p&gt;If you are having troubles to make this package to work on Android, join &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/discussions/538&#34;&gt;this discussion&lt;/a&gt; to get some support&lt;/p&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;p&gt;Compatible with apps targeting iOS 12 or above.&lt;/p&gt; &#xA;&lt;p&gt;To upgrade your iOS deployment target to 12.0, you can either do so in Xcode under your Build Settings, or by modifying IPHONEOS_DEPLOYMENT_TARGET in your project.pbxproj directly.&lt;/p&gt; &#xA;&lt;p&gt;You will also need to update in your Podfile:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;platform :ios, &#39;12.0&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Web (Experimental)&lt;/h4&gt; &#xA;&lt;p&gt;Now you can use Stripe with Flutter web! Notice right now it is highly experimental and only a subset of features is implemented.&lt;/p&gt; &#xA;&lt;p&gt;Check the steps needed &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/tree/main/packages/stripe_web&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The library provides three UI componets for accepting card payments: the &lt;code&gt;CardField&lt;/code&gt;, &lt;code&gt;CardForm&lt;/code&gt;, and the &lt;code&gt;Paymentsheet&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We recommend using the &lt;code&gt;PaymentSheet&lt;/code&gt; for the most easy and smooth Stripe integration. It provides out of the box support for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Localized labels and error messages to the users&lt;/li&gt; &#xA; &lt;li&gt;Build-in animations&lt;/li&gt; &#xA; &lt;li&gt;Build-in Google Pay and Apple Pay buttons&lt;/li&gt; &#xA; &lt;li&gt;Handling 3D-secure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Notice that &lt;code&gt;PaymentSheet&lt;/code&gt; is only available for Android and iOS.&lt;/p&gt; &#xA;&lt;p&gt;On the other side the &lt;code&gt;CardField&lt;/code&gt; allows you to create a more customizable payment flow inside your app.&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// main.dart&#xA;import &#39;package:flutter_stripe/flutter_stripe.dart&#39;;&#xA;&#xA;void main() async {&#xA;  WidgetsFlutterBinding.ensureInitialized();&#xA;&#xA;  // set the publishable key for Stripe - this is mandatory&#xA;  Stripe.publishableKey = stripePublishableKey;&#xA;  runApp(PaymentScreen());&#xA;}&#xA;&#xA;// payment_screen.dart&#xA;class PaymentScreen extends StatelessWidget {&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(),&#xA;      body: Column(&#xA;        children: [&#xA;          CardField(&#xA;            onCardChanged: (card) {&#xA;              print(card);&#xA;            },&#xA;          ),&#xA;          TextButton(&#xA;            onPressed: () async {&#xA;              // create payment method&#xA;              final paymentMethod =&#xA;                  await Stripe.instance.createPaymentMethod(PaymentMethodParams.card());&#xA;            },&#xA;            child: Text(&#39;pay&#39;),&#xA;          )&#xA;        ],&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Stripe initialization&lt;/h2&gt; &#xA;&lt;p&gt;To initialize Stripe in your Flutter app, use the &lt;code&gt;Stripe&lt;/code&gt; base class.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Stripe&lt;/code&gt; offers &lt;code&gt;publishableKey&lt;/code&gt;, &lt;code&gt;stripeAccountId&lt;/code&gt;, &lt;code&gt;threeDSecureParams&lt;/code&gt; and &lt;code&gt;merchantIdentifier&lt;/code&gt;. Only &lt;code&gt;publishableKey&lt;/code&gt; is required.&lt;/p&gt; &#xA;&lt;h2&gt;Dart API&lt;/h2&gt; &#xA;&lt;p&gt;The library offers several methods to handle stripe related actions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;PaymentMethod&amp;gt; createPaymentMethod(...);&#xA;Future&amp;lt;PaymentIntent&amp;gt; handleNextAction(...);&#xA;Future&amp;lt;PaymentIntent&amp;gt; confirmPayment(...);&#xA;Future&amp;lt;void&amp;gt; configure3dSecure(...);&#xA;Future&amp;lt;bool&amp;gt; isApplePaySupported();&#xA;Future&amp;lt;void&amp;gt; presentApplePay(...);&#xA;Future&amp;lt;void&amp;gt; confirmApplePayPayment(...);&#xA;Future&amp;lt;SetupIntent&amp;gt; confirmSetupIntent(...);&#xA;Future&amp;lt;PaymentIntent&amp;gt; retrievePaymentIntent(...);&#xA;Future&amp;lt;String&amp;gt; createTokenForCVCUpdate(...);&#xA;&#xA;Future&amp;lt;void&amp;gt; initPaymentSheet(...);&#xA;Future&amp;lt;void&amp;gt; presentPaymentSheet(...);&#xA;Future&amp;lt;void&amp;gt; confirmPaymentSheetPayment()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The example app offers examples on how to use these methods.&lt;/p&gt; &#xA;&lt;h2&gt;Pay Plugin support&lt;/h2&gt; &#xA;&lt;p&gt;IMPORTANT the Pay plugin for Flutter 3.0 is not integrated in the example app at the moment until issue &lt;a href=&#34;https://github.com/google-pay/flutter-plugin/issues/126&#34;&gt;github&lt;/a&gt; is resolved.&lt;/p&gt; &#xA;&lt;p&gt;flutter_stripe fully supports the &lt;a href=&#34;https://pub.dev/packages/pay&#34;&gt;Pay plugin&lt;/a&gt; from the Google Pay team. By including a few lines you can integrate Stripe as a payment processor for Google / Apple Pay:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;void&amp;gt; onGooglePayResult(paymentResult) async {&#xA;    final response = await fetchPaymentIntentClientSecret();&#xA;    final clientSecret = response[&#39;clientSecret&#39;];&#xA;    final token = paymentResult[&#39;paymentMethodData&#39;][&#39;tokenizationData&#39;][&#39;token&#39;];&#xA;    final tokenJson = Map.castFrom(json.decode(token));&#xA;&#xA;    final params = PaymentMethodParams.cardFromToken(&#xA;      token: tokenJson[&#39;id&#39;],&#xA;    );&#xA;    // Confirm Google pay payment method&#xA;    await Stripe.instance.confirmPayment(&#xA;      clientSecret,&#xA;      params,&#xA;    );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run the example app&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Navigate to the example folder &lt;code&gt;cd example&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install the dependencies &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;flutter pub get&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Set up env vars for the flutter app and a local backend. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://stripe.com/docs/keys&#34;&gt;Get your test Stripe API keys&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cp lib/.env.example.dart lib/.env.dart&lt;/code&gt; and set your Stripe publishable key.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cp server/.env.example server/.env&lt;/code&gt; and set the variable values in your newly created &lt;code&gt;.env&lt;/code&gt; file.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the server dependencies: &lt;code&gt;npm install&lt;/code&gt; or &lt;code&gt;yarn --cwd &#34;server&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start the example &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Terminal 1: &lt;code&gt;npm start&lt;/code&gt; or &lt;code&gt;yarn --cwd &#34;server&#34; start&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Terminal 2: &lt;code&gt;flutter run&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Additional steps for webhook forwarding&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stripe.com/docs/stripe-cli&#34;&gt;Install the &lt;code&gt;stripe-cli&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;stripe listen --forward-to localhost:4242/webhook&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You can help us make this project better, feel free to open an new issue or a pull request.&lt;/p&gt; &#xA;&lt;h5&gt;Setup&lt;/h5&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://github.com/invertase/melos&#34;&gt;melos&lt;/a&gt; to manage all the packages inside this repo.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install melos: &lt;code&gt;dart pub global activate melos&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Setup melos in your local folder: &lt;code&gt;melos bootstrap&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Useful commands&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Format &lt;code&gt;melos run format&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Analyze &lt;code&gt;melos run analyze&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Test &lt;code&gt;melos run unittest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pub get &lt;code&gt;melos run get&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Publishing&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;melos version&lt;/code&gt; and &lt;code&gt;melos publish&lt;/code&gt; to keep all the repositories in sync&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>