<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-17T01:32:17Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>monster555/flutter_elastic_list_view</title>
    <updated>2024-01-17T01:32:17Z</updated>
    <id>tag:github.com,2024-01-17:/monster555/flutter_elastic_list_view</id>
    <link href="https://github.com/monster555/flutter_elastic_list_view" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ElasticListView&lt;/h1&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ElasticListView&lt;/code&gt; is a drop-in replacement for Flutter&#39;s &lt;code&gt;ListView.builder&lt;/code&gt;, providing an elastic overscroll effect.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/monster555/flutter_elastic_list_view/assets/32662133/d0590ae7-8170-4036-9ced-da7b9c0bda8e&#34;&gt;https://github.com/monster555/flutter_elastic_list_view/assets/32662133/d0590ae7-8170-4036-9ced-da7b9c0bda8e&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Elastic Overscroll Effect&lt;/strong&gt;: &lt;code&gt;ElasticListView&lt;/code&gt; enhances the user experience by providing an elastic overscroll effect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Drag to Scroll&lt;/strong&gt;: Adds the drag to scroll behavior by default, providing a smooth scrolling experience. This can be disabled by setting the &lt;code&gt;enableDragScrolling&lt;/code&gt; property to false.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Optimized Performance&lt;/strong&gt;: Leverages the performance optimizations of the standard &lt;code&gt;ListView.builder&lt;/code&gt;, ensuring excellent performance.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extended Functionality with Full Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ElasticListView&lt;/code&gt; maintains the exact same properties as the standard &lt;code&gt;ListView.builder&lt;/code&gt;, ensuring full compatibility and making it a seamless replacement. In addition, it introduces new properties to control the elastic effect, offering enhanced functionality and customization options beyond the standard &lt;code&gt;ListView.builder&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;New Properties&lt;/h2&gt; &#xA;&lt;p&gt;Here are the new properties introduced by &lt;code&gt;ElasticListView&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;curve&lt;/code&gt;: The curve to apply when animating the elastic effect. Defaults to &lt;code&gt;Curves.easeOut&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;animationDuration&lt;/code&gt;: The duration of the overscroll bounce animation. Defaults to &lt;code&gt;Duration(milliseconds: 200)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;enableDragScrolling&lt;/code&gt;: Whether to enable drag scrolling. Defaults to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;elasticityFactor&lt;/code&gt;: The factor by which the scroll view overscrolls. Defaults to &lt;code&gt;4&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each of these properties allows you to customize the behavior of the elastic effect in &lt;code&gt;ElasticListView&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use &lt;code&gt;ElasticListView&lt;/code&gt;, simply replace your existing &lt;code&gt;ListView.builder&lt;/code&gt; with &lt;code&gt;ElasticListView&lt;/code&gt;. All the properties are the same, ensuring full compatibility.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ElasticListView(&#xA;  itemCount: 10,&#xA;  itemBuilder: (context, index) {&#xA;    return ListTile(&#xA;      title: Text(&#39;Item $index&#39;),&#xA;    );&#xA;  },&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! If you encounter any issues or have suggestions for improvements, please feel free to create a pull request.&lt;/p&gt;</summary>
  </entry>
</feed>