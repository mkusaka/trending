<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-10T01:30:46Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>serenader2014/flutter_carousel_slider</title>
    <updated>2022-12-10T01:30:46Z</updated>
    <id>tag:github.com,2022-12-10:/serenader2014/flutter_carousel_slider</id>
    <link href="https://github.com/serenader2014/flutter_carousel_slider" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A flutter carousel widget, support infinite scroll, and custom child widget.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;carousel_slider&lt;/h1&gt; &#xA;&lt;p&gt;A carousel slider widget.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Infinite scroll&lt;/li&gt; &#xA; &lt;li&gt;Custom child widgets&lt;/li&gt; &#xA; &lt;li&gt;Auto play&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported platforms&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flutter Android&lt;/li&gt; &#xA; &lt;li&gt;Flutter iOS&lt;/li&gt; &#xA; &lt;li&gt;Flutter web&lt;/li&gt; &#xA; &lt;li&gt;Flutter desktop&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Live preview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://serenader2014.github.io/flutter_carousel_slider/#/&#34;&gt;https://serenader2014.github.io/flutter_carousel_slider/#/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: this page is built with flutter-web. For a better user experience, please use a mobile device to open this link.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;carousel_slider: ^4.2.0&lt;/code&gt; to your &lt;code&gt;pubspec.yaml&lt;/code&gt; dependencies. And import it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:carousel_slider/carousel_slider.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;Simply create a &lt;code&gt;CarouselSlider&lt;/code&gt; widget, and pass the required params:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;CarouselSlider(&#xA;  options: CarouselOptions(height: 400.0),&#xA;  items: [1,2,3,4,5].map((i) {&#xA;    return Builder(&#xA;      builder: (BuildContext context) {&#xA;        return Container(&#xA;          width: MediaQuery.of(context).size.width,&#xA;          margin: EdgeInsets.symmetric(horizontal: 5.0),&#xA;          decoration: BoxDecoration(&#xA;            color: Colors.amber&#xA;          ),&#xA;          child: Text(&#39;text $i&#39;, style: TextStyle(fontSize: 16.0),)&#xA;        );&#xA;      },&#xA;    );&#xA;  }).toList(),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Params&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;CarouselSlider(&#xA;   items: items,&#xA;   options: CarouselOptions(&#xA;      height: 400,&#xA;      aspectRatio: 16/9,&#xA;      viewportFraction: 0.8,&#xA;      initialPage: 0,&#xA;      enableInfiniteScroll: true,&#xA;      reverse: false,&#xA;      autoPlay: true,&#xA;      autoPlayInterval: Duration(seconds: 3),&#xA;      autoPlayAnimationDuration: Duration(milliseconds: 800),&#xA;      autoPlayCurve: Curves.fastOutSlowIn,&#xA;      enlargeCenterPage: true,&#xA;      enlargeFactor: 0.3,&#xA;      onPageChanged: callbackFunction,&#xA;      scrollDirection: Axis.horizontal,&#xA;   )&#xA; )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Since &lt;code&gt;v2.0.0&lt;/code&gt;, you&#39;ll need to pass the options to &lt;code&gt;CarouselOptions&lt;/code&gt;. For each option&#39;s usage you can refer to &lt;a href=&#34;https://raw.githubusercontent.com/serenader2014/flutter_carousel_slider/master/lib/carousel_options.dart&#34;&gt;carousel_options.dart&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you pass the &lt;code&gt;height&lt;/code&gt; parameter, the &lt;code&gt;aspectRatio&lt;/code&gt; parameter will be ignored.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build item widgets on demand&lt;/h2&gt; &#xA;&lt;p&gt;This method will save memory by building items once it becomes necessary. This way they won&#39;t be built if they&#39;re not currently meant to be visible on screen. It can be used to build different child item widgets related to content or by item index.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;CarouselSlider.builder(&#xA;  itemCount: 15,&#xA;  itemBuilder: (BuildContext context, int itemIndex, int pageViewIndex) =&amp;gt;&#xA;    Container(&#xA;      child: Text(itemIndex.toString()),&#xA;    ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Carousel controller&lt;/h2&gt; &#xA;&lt;p&gt;In order to manually control the pageview&#39;s position, you can create your own &lt;code&gt;CarouselController&lt;/code&gt;, and pass it to &lt;code&gt;CarouselSlider&lt;/code&gt;. Then you can use the &lt;code&gt;CarouselController&lt;/code&gt; instance to manipulate the position.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class CarouselDemo extends StatelessWidget {&#xA;  CarouselController buttonCarouselController = CarouselController();&#xA;&#xA; @override&#xA;  Widget build(BuildContext context) =&amp;gt; Column(&#xA;    children: &amp;lt;Widget&amp;gt;[&#xA;      CarouselSlider(&#xA;        items: child,&#xA;        carouselController: buttonCarouselController,&#xA;        options: CarouselOptions(&#xA;          autoPlay: false,&#xA;          enlargeCenterPage: true,&#xA;          viewportFraction: 0.9,&#xA;          aspectRatio: 2.0,&#xA;          initialPage: 2,&#xA;        ),&#xA;      ),&#xA;      RaisedButton(&#xA;        onPressed: () =&amp;gt; buttonCarouselController.nextPage(&#xA;            duration: Duration(milliseconds: 300), curve: Curves.linear),&#xA;        child: Text(&#39;â†’&#39;),&#xA;      )&#xA;    ]&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;CarouselController&lt;/code&gt; methods&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;.nextPage({Duration duration, Curve curve})&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Animate to the next page&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;.previousPage({Duration duration, Curve curve})&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Animate to the previous page&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;.jumpToPage(int page)&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Jump to the given page.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;.animateToPage(int page, {Duration duration, Curve curve})&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Animate to the given page.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;Basic text carousel demo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/serenader2014/flutter_carousel_slider/master/screenshot/basic.gif&#34; alt=&#34;simple&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Basic image carousel demo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/serenader2014/flutter_carousel_slider/master/screenshot/image.gif&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A more complicated image carousel slider demo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/serenader2014/flutter_carousel_slider/master/screenshot/complicated-image.gif&#34; alt=&#34;complicated image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fullscreen image carousel slider demo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/serenader2014/flutter_carousel_slider/master/screenshot/fullscreen.gif&#34; alt=&#34;fullscreen&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Image carousel slider with custom indicator demo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/serenader2014/flutter_carousel_slider/master/screenshot/indicator.gif&#34; alt=&#34;indicator&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Custom &lt;code&gt;CarouselController&lt;/code&gt; and manually control the pageview position demo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/serenader2014/flutter_carousel_slider/master/screenshot/manually.gif&#34; alt=&#34;manual&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Vertical carousel slider demo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/serenader2014/flutter_carousel_slider/master/screenshot/vertical.gif&#34; alt=&#34;vertical&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simple on-demand image carousel slider, with image auto prefetch demo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/serenader2014/flutter_carousel_slider/master/screenshot/preload.gif&#34; alt=&#34;prefetch&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;No infinite scroll demo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/serenader2014/flutter_carousel_slider/master/screenshot/noloop.gif&#34; alt=&#34;noloop&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;All screenshots above can be found at the example project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ntminhdn/Flutter-Bloc-CleanArchitecture</title>
    <updated>2022-12-10T01:30:46Z</updated>
    <id>tag:github.com,2022-12-10:/ntminhdn/Flutter-Bloc-CleanArchitecture</id>
    <link href="https://github.com/ntminhdn/Flutter-Bloc-CleanArchitecture" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tutorials for this project&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;English: &lt;a href=&#34;https://medium.com/@NALSengineering/list/building-a-perfect-boilerplate-flutter-project-from-scratch-3c2b29d9dfa8&#34;&gt;https://medium.com/@NALSengineering/list/building-a-perfect-boilerplate-flutter-project-from-scratch-3c2b29d9dfa8&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Vietnamese: &lt;a href=&#34;https://medium.com/@NALSengineering/list/flutter-xay-dung-base-project-hoan-hao-tu-a-en-a-c240f845f660&#34;&gt;https://medium.com/@NALSengineering/list/flutter-xay-dung-base-project-hoan-hao-tu-a-en-a-c240f845f660&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Flutter Bloc - Clean Architecture&lt;/h1&gt; &#xA;&lt;p&gt;Flutter project using clean architecture and bloc pattern.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/images/project_architecture.png?raw=true&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Architecture: Clean Architecture&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;State management: &lt;a href=&#34;https://pub.dev/packages/flutter_bloc&#34;&gt;flutter_bloc&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigation: &lt;a href=&#34;https://pub.dev/packages/auto_route&#34;&gt;auto_route&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DI: &lt;a href=&#34;https://pub.dev/packages/get_it&#34;&gt;get_it&lt;/a&gt;, &lt;a href=&#34;https://pub.dev/packages/injectable&#34;&gt;injectable&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;REST API: &lt;a href=&#34;https://pub.dev/packages/dio&#34;&gt;dio&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GraphQL: &lt;a href=&#34;https://pub.dev/packages/artemis&#34;&gt;artemis&lt;/a&gt;, &lt;a href=&#34;https://pub.dev/packages/graphql_flutter&#34;&gt;graphql_flutter&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Database: &lt;a href=&#34;https://pub.dev/packages/objectbox&#34;&gt;objectbox&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Shared Preferences: &lt;a href=&#34;https://pub.dev/packages/encrypted_shared_preferences&#34;&gt;encrypted_shared_preferences&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Data class: &lt;a href=&#34;https://pub.dev/packages/freezed&#34;&gt;freezed&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Lint: &lt;a href=&#34;https://pub.dev/packages/dart_code_metrics&#34;&gt;dart_code_metrics&lt;/a&gt;, &lt;a href=&#34;https://pub.dev/packages/flutter_lints&#34;&gt;flutter_lints&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;CI/CD: Github Actions, Bitbucket Pipelines&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Unit Test: &lt;a href=&#34;https://pub.dev/packages/mocktail&#34;&gt;mocktail&lt;/a&gt;, &lt;a href=&#34;https://pub.dev/packages/bloc_test&#34;&gt;bloc_test&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Paging: &lt;a href=&#34;https://pub.dev/packages/infinite_scroll_pagination&#34;&gt;infinite_scroll_pagination&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Utils: &lt;a href=&#34;https://pub.dev/packages/rxdart&#34;&gt;rxdart&lt;/a&gt;, &lt;a href=&#34;https://pub.dev/packages/dartx&#34;&gt;dartx&lt;/a&gt;, &lt;a href=&#34;https://pub.dev/packages/async&#34;&gt;async&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Assets generator: &lt;a href=&#34;https://pub.dev/packages/flutter_gen_runner&#34;&gt;flutter_gen_runner&lt;/a&gt;, &lt;a href=&#34;https://pub.dev/packages/flutter_launcher_icons&#34;&gt;flutter_launcher_icons&lt;/a&gt;, &lt;a href=&#34;https://pub.dev/packages/flutter_native_splash&#34;&gt;flutter_native_splash&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Shimmer loading effect&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/22645452/204953475-65522ee8-caaf-4fa4-9305-507c390914f3.mp4&#34;&gt;https://user-images.githubusercontent.com/22645452/204953475-65522ee8-caaf-4fa4-9305-507c390914f3.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;17&#34;&gt; &#xA; &lt;li&gt;Load more&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/22645452/204954223-1e5e8731-2baa-45d3-bf04-d26e09600975.mp4&#34;&gt;https://user-images.githubusercontent.com/22645452/204954223-1e5e8731-2baa-45d3-bf04-d26e09600975.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;18&#34;&gt; &#xA; &lt;li&gt;Retry when error&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/22645452/204954446-db337cad-d509-47d4-984c-d54f0386afb4.mp4&#34;&gt;https://user-images.githubusercontent.com/22645452/204954446-db337cad-d509-47d4-984c-d54f0386afb4.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;19&#34;&gt; &#xA; &lt;li&gt;Nested navigation&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/22645452/204954558-ceddfea2-bce0-472d-b02a-6066212a8758.mp4&#34;&gt;https://user-images.githubusercontent.com/22645452/204954558-ceddfea2-bce0-472d-b02a-6066212a8758.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;20&#34;&gt; &#xA; &lt;li&gt;Dark mode&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/22645452/204954605-fe57620c-69af-4628-bdc6-8483c8f3f4a9.mp4&#34;&gt;https://user-images.githubusercontent.com/22645452/204954605-fe57620c-69af-4628-bdc6-8483c8f3f4a9.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;21&#34;&gt; &#xA; &lt;li&gt;Change App Language&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/22645452/204954653-a704d380-0f6a-419d-a740-3bff74252ce2.mp4&#34;&gt;https://user-images.githubusercontent.com/22645452/204954653-a704d380-0f6a-419d-a740-3bff74252ce2.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dart: 2.18.5&lt;/li&gt; &#xA; &lt;li&gt;Flutter SDK: 3.3.9&lt;/li&gt; &#xA; &lt;li&gt;Melos: 2.8.0&lt;/li&gt; &#xA; &lt;li&gt;CocoaPods: 1.11.2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;WARN: If you already installed &lt;code&gt;melos&lt;/code&gt; and &lt;code&gt;lefthook&lt;/code&gt;, you could omit this step.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install melos:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;dart pub global activate melos 2.8.0&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install lefthook (optional):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;gem install lefthook&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Export paths:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add to &lt;code&gt;.zshrc&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt; file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;export PATH=&#34;$PATH:&amp;lt;path to flutter&amp;gt;/flutter/bin&#34;&#xA;export PATH=&#34;$PATH:&amp;lt;path to flutter&amp;gt;/flutter/bin/cache/dart-sdk/bin&#34;&#xA;export PATH=&#34;$PATH:~/.pub-cache/bin&#34;&#xA;export PATH=&#34;$PATH:~/.gem/gems/lefthook-0.7.7/bin&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;- Save file `.zshrc`&#xA;- Run `source ~/.zshrc`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Config and run app&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;cd to root folder of project&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make gen_env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make sync&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;lefthook install&lt;/code&gt; (optional)&lt;/li&gt; &#xA; &lt;li&gt;Run &amp;amp; Enjoy!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Upgrade Flutter&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update Flutter version in: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/#requirements&#34;&gt;README.md&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/bitbucket-pipelines.yml&#34;&gt;bitbucket-pipelines.yml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/.github/workflows/ci.yaml&#34;&gt;ci.yaml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/.github/workflows/cd_develop.yaml&#34;&gt;cd_develop.yaml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/.github/workflows/cd_qa.yaml&#34;&gt;cd_qa.yaml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/.github/workflows/cd_staging.yaml&#34;&gt;cd_staging.yaml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/.github/workflows/cd_production.yaml&#34;&gt;cd_production.yaml&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Upgrade Melos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update Melos version in: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/#requirements&#34;&gt;README.md&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/bitbucket-pipelines.yml&#34;&gt;bitbucket-pipelines.yml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/.github/workflows/ci.yaml&#34;&gt;ci.yaml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/.github/workflows/cd_develop.yaml&#34;&gt;cd_develop.yaml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/.github/workflows/cd_qa.yaml&#34;&gt;cd_qa.yaml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/.github/workflows/cd_staging.yaml&#34;&gt;cd_staging.yaml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ntminhdn/Flutter-Bloc-CleanArchitecture/master/.github/workflows/cd_production.yaml&#34;&gt;cd_production.yaml&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
</feed>