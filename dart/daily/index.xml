<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-29T01:38:41Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>RivaanRanawat/instagram-flutter-clone</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/RivaanRanawat/instagram-flutter-clone</id>
    <link href="https://github.com/RivaanRanawat/instagram-flutter-clone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Responsive Instagram Clone developed with Flutter &amp; Firebase&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Instagram Clone&lt;/h1&gt; &#xA;&lt;p&gt;A completely Responsive Instagram App- Works on Android, iOS &amp;amp; Web!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Responsive Instagram UI&lt;/li&gt; &#xA; &lt;li&gt;Email &amp;amp; Password Authentication&lt;/li&gt; &#xA; &lt;li&gt;Share Posts with Caption&lt;/li&gt; &#xA; &lt;li&gt;Display Posts with Caption&lt;/li&gt; &#xA; &lt;li&gt;Like &amp;amp; Comment on Posts&lt;/li&gt; &#xA; &lt;li&gt;Search Users&lt;/li&gt; &#xA; &lt;li&gt;Follow Users&lt;/li&gt; &#xA; &lt;li&gt;Display User Posts, Followers &amp;amp; Following&lt;/li&gt; &#xA; &lt;li&gt;EVERYTHING REAL TIME&lt;/li&gt; &#xA; &lt;li&gt;Sign Out&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;YouTube&lt;/h2&gt; &#xA;&lt;p&gt;I have created a tutorial based on this, do check it out on my channel &lt;a href=&#34;https://youtu.be/BBccK1zTgxw&#34;&gt;Rivaan Ranawat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;600&#34; src=&#34;https://github.com/RivaanRanawat/instagram-flutter-clone/raw/master/screenshot.png&#34; alt=&#34;Youtube Tutorial Image&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;After cloning this repository, migrate to &lt;code&gt;instagram-flutter-clone&lt;/code&gt; folder. Then, follow the following steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create Firebase Project&lt;/li&gt; &#xA; &lt;li&gt;Enable Authentication&lt;/li&gt; &#xA; &lt;li&gt;Make Firestore Rules&lt;/li&gt; &#xA; &lt;li&gt;Create Android, iOS &amp;amp; Web Apps&lt;/li&gt; &#xA; &lt;li&gt;Take Web FirebaseOptions and put it in main function in main.dart file replacing my keys (My keys wont work as I deleted my project) Then run the following commands to run your app:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  flutter pub get&#xA;  open -a simulator (to get iOS Simulator)&#xA;  flutter run&#xA;  flutter run -d chrome --web-renderer html (to see the best output)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tech Used&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt;: Firebase Auth, Firebase Storage, Firebase Firestore&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Client&lt;/strong&gt;: Flutter, Provider&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;If you have any feedback, please reach out to me at &lt;a href=&#34;mailto:namanrivaan@gmail.com&#34;&gt;namanrivaan@gmail.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard</id>
    <link href="https://github.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Responsive Admin Panel or Dashboard using Flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Responsive Admin Panel or Dashboard - Flutter UI&lt;/h1&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/master/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-3-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://abuanwar072.github.io/Flutter-Responsive-Admin-Panel-or-Dashboard/#/&#34;&gt;Live Preview&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Packages we are using:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;flutter_svg: &lt;a href=&#34;https://pub.dev/packages/flutter_svg&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;google_fonts: &lt;a href=&#34;https://pub.dev/packages/google_fonts&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;provider: &lt;a href=&#34;https://pub.dev/packages/provider&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fonts&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Poppins &lt;a href=&#34;https://fonts.google.com/specimen/Poppins&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://youtu.be/_uOgXpEHNbc&#34;&gt;Watch it on YouTube&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;On Flutter V2.* web officially supported on a stable branch. Today I share an Admin panel or you can call it dashboard UI build with flutter. Now you can build your app dashboard using flutter. This dashboard contains almost everything that you need like a chart, table, nice small card for showing info. It works perfectly on the Web, macOS app, Tablet also on both Android and iOS phones. It&#39;s time to code once run everywhere. Yeah, Flutter web is not SEO friendly but we don&#39;t need SEO for the admin panel.&lt;/p&gt; &#xA;&lt;h3&gt;Responsive Admin Panel or Dashboard Final UI&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/master/gif.gif&#34; alt=&#34;Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/master/ui.png&#34; alt=&#34;App UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/simon1tan&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1250858?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Simon Tan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/issues?q=author%3Asimon1tan&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/gillescoolen&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/31668393?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gilles&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/issues?q=author%3Agillescoolen&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RounakTadvi&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/38634459?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rounak Tadvi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/master/#maintenance-RounakTadvi&#34; title=&#34;Maintenance&#34;&gt;üöß&lt;/a&gt; &lt;a href=&#34;https://github.com/abuanwar072/Flutter-Responsive-Admin-Panel-or-Dashboard/commits?author=RounakTadvi&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Sangwan5688/BlackHole</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/Sangwan5688/BlackHole</id>
    <link href="https://github.com/Sangwan5688/BlackHole" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Music Player App made with Flutter&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/87353286/144381080-faf8e557-7909-43a1-a8e2-208936e5a8f8.png&#34; alt=&#34;Repo Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;BlackHole&lt;/h1&gt; &#xA;&lt;p&gt;An Open-Source Music Player App for all your needs!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flutter.dev/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Made%20with-Flutter-1f425f.svg?sanitize=true&#34; alt=&#34;made-with-flutter&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/Sangwan5688/BlackHole&#34; alt=&#34;Release&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/Sangwan5688/BlackHole/total&#34; alt=&#34;Downloads&#34;&gt; &lt;a href=&#34;https://github.com/Sangwan5688/BlackHole/actions/workflows/flutter.yml&#34;&gt;&lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/actions/workflows/flutter.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/blackhole/&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/blackhole/-/translations/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation-Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Don&#39;t forget to &lt;span&gt;‚≠ê&lt;/span&gt; the repo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com//Sangwan5688/BlackHole&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Sangwan5688/BlackHole.svg?style=social&amp;amp;label=Star&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/forks/Sangwan5688/BlackHole.svg?style=social&amp;amp;label=Forks&#34; alt=&#34;GitHub forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/followers/Sangwan5688.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;GitHub followers&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://android.izzysoft.de/repo/apk/com.shadow.blackhole&#34;&gt;&lt;img src=&#34;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&#34; alt=&#34;Get it on IzzyDroid&#34; height=&#34;100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/packages/com.shadow.blackhole/&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://github.com/Sangwan5688/BlackHole/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-181717?logo=github&amp;amp;logoColor=white&#34; alt=&#34;Download from GitHub&#34; height=&#34;60&#34;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://t.me/blackhole_official&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-2CA5E0?logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;Join Telegram Channel&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sangwan5688/BlackHole/main/README.ES.md&#34;&gt;Spanish &lt;span&gt;üá™üá∏&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sangwan5688/BlackHole/main/README.RU.md&#34;&gt;Russian &lt;span&gt;üá∑üá∫&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sangwan5688/BlackHole/main/README.FR.md&#34;&gt;French &lt;span&gt;üá´üá∑&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sangwan5688/BlackHole/main/README.PT.md&#34;&gt;Portuguese &lt;span&gt;üáßüá∑&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hosted.weblate.org/projects/blackhole/translations/&#34;&gt;Translate App on Weblate&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Best Streaming Quality (320kbps aac)&lt;/li&gt; &#xA; &lt;li&gt;Song, Album, Artist and Playlist Search&lt;/li&gt; &#xA; &lt;li&gt;Language Specific Promoted Playlists&lt;/li&gt; &#xA; &lt;li&gt;Trending Songs&lt;/li&gt; &#xA; &lt;li&gt;Artist and Genre Radios&lt;/li&gt; &#xA; &lt;li&gt;Support 15+ music languages&lt;/li&gt; &#xA; &lt;li&gt;Local and Global Top Spotify songs&lt;/li&gt; &#xA; &lt;li&gt;Add Songs to Favorite&lt;/li&gt; &#xA; &lt;li&gt;Playlists support&lt;/li&gt; &#xA; &lt;li&gt;Import Playlists from Spotify &amp;amp; YouTube&lt;/li&gt; &#xA; &lt;li&gt;Import/Export Playlists as JSON File&lt;/li&gt; &#xA; &lt;li&gt;Share Playlists&lt;/li&gt; &#xA; &lt;li&gt;Sleep timer&lt;/li&gt; &#xA; &lt;li&gt;Lyrics Support&lt;/li&gt; &#xA; &lt;li&gt;Queue Management&lt;/li&gt; &#xA; &lt;li&gt;Listening history record&lt;/li&gt; &#xA; &lt;li&gt;Dark mode / accent color&lt;/li&gt; &#xA; &lt;li&gt;Custom Gradients and other Theme options&lt;/li&gt; &#xA; &lt;li&gt;Supports Portrait as well as Landscape mode&lt;/li&gt; &#xA; &lt;li&gt;Download for offline play (320kbps with ID3 tags)&lt;/li&gt; &#xA; &lt;li&gt;Play Online as well as Offline Songs&lt;/li&gt; &#xA; &lt;li&gt;Tag Editing Support&lt;/li&gt; &#xA; &lt;li&gt;Trending Search Results&lt;/li&gt; &#xA; &lt;li&gt;YouTube Search Support&lt;/li&gt; &#xA; &lt;li&gt;Promoted Youtube Playlists&lt;/li&gt; &#xA; &lt;li&gt;Play videos as audio&lt;/li&gt; &#xA; &lt;li&gt;Auto Song Recommendations&lt;/li&gt; &#xA; &lt;li&gt;Inbuilt Equalizer&lt;/li&gt; &#xA; &lt;li&gt;Backup &amp;amp; Restore&lt;/li&gt; &#xA; &lt;li&gt;Auto Update Check&lt;/li&gt; &#xA; &lt;li&gt;Cache support&lt;/li&gt; &#xA; &lt;li&gt;No Subscription&lt;/li&gt; &#xA; &lt;li&gt;No Ads&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and much more... Check it yourself :)&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/fastlane/metadata/android/en-US/images/phoneScreenshots/1.png?raw=true&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/fastlane/metadata/android/en-US/images/phoneScreenshots/2.png?raw=true&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/fastlane/metadata/android/en-US/images/phoneScreenshots/3.png?raw=true&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/fastlane/metadata/android/en-US/images/phoneScreenshots/4.png?raw=true&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/fastlane/metadata/android/en-US/images/phoneScreenshots/5.png?raw=true&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/fastlane/metadata/android/en-US/images/phoneScreenshots/6.png?raw=true&#34; width=&#34;32%&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright ¬© 2021 Ankit Sangwan&#xA;&#xA;BlackHole is a free software licensed under GPL v3.0&#xA;It is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;&#xA;without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Being Open Source doesn&#39;t mean you can just make a copy of the app and upload it on playstore or sell&#xA;a closed source copy of the same.&#xA;Read the following carefully:&#xA;1. Any copy of a software under GPL must be under same license. So you can&#39;t upload the app on a closed source&#xA;  app repository like PlayStore/AppStore without distributing the source code.&#xA;2. You can&#39;t sell any copied/modified version of the app under any &#34;non-free&#34; license.&#xA;   You must provide the copy with the original software or with instructions on how to obtain original software,&#xA;   should clearly state all changes, should clearly disclose full source code, should include same license&#xA;   and all copyrights should be retained.&#xA;&#xA;In simple words, You can ONLY use the source code of this app for `Open Source` Project under `GPL v3.0` or later&#xA;with all your source code CLEARLY DISCLOSED on any code hosting platform like GitHub, with clear INSTRUCTIONS on&#xA;how to obtain the original software, should clearly STATE ALL CHANGES made and should RETAIN all copyrights.&#xA;Use of this software under any &#34;non-free&#34; license is NOT permitted.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/LICENSE&#34;&gt;GNU General Public License&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Building from Source&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If you don&#39;t have Flutter SDK installed, please visit official &lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter&lt;/a&gt; site.&lt;/li&gt; &#xA; &lt;li&gt;Fetch latest source code from master branch.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/Sangwan5688/BlackHole.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run the app with Android Studio or VS Code. Or the command line:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;flutter pub get&#xA;flutter run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome. Please read our &lt;a href=&#34;https://github.com/Sangwan5688/BlackHole/raw/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; before contributing.&lt;/p&gt; &#xA;&lt;h2&gt;Facing any Issue?&lt;/h2&gt; &#xA;&lt;p&gt;Have a look at some &lt;a href=&#34;https://github.com/Sangwan5688/BlackHole/wiki/Common-Issues&#34;&gt;common Issues&lt;/a&gt; that you might face. If your problem is not there, feel free to open an Issue :)&lt;/p&gt; &#xA;&lt;h2&gt;Want to test Beta Versions? Need help??&lt;/h2&gt; &#xA;&lt;p&gt;You can join our &lt;a href=&#34;https://t.me/blackhole_official&#34;&gt;Telegram Channel&lt;/a&gt; or &lt;a href=&#34;https://t.me/joinchat/fHDC1AWnOhw0ZmI9&#34;&gt;Telegram Group&lt;/a&gt;, if you have any query, or need help with something as well as to get beta updates of the project.&lt;/p&gt; &#xA;&lt;h2&gt;Liked my work?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/ankitsangwan&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s New&lt;/h2&gt; &#xA;&lt;p&gt;To read full changelog visit the &lt;a href=&#34;https://github.com/Sangwan5688/BlackHole/wiki/Changelog&#34;&gt;wiki page&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pichillilorenzo/flutter_inappwebview</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/pichillilorenzo/flutter_inappwebview</id>
    <link href="https://github.com/pichillilorenzo/flutter_inappwebview" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter plugin that allows you to add an inline webview, to use a headless webview, and to open an in-app browser window.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter InAppWebView Plugin &lt;a href=&#34;https://twitter.com/intent/tweet?text=Flutter%20InAppBrowser%20plugin!&amp;amp;url=https://github.com/pichillilorenzo/flutter_inappwebview&amp;amp;hashtags=flutter,flutterio,dart,dartlang,webview&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Share on Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.facebook.com/sharer/sharer.php?u=https%3A//github.com/pichillilorenzo/flutter_inappwebview&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share-facebook-blue.svg?longCache=true&amp;amp;style=flat&amp;amp;colorB=%234267b2&#34; alt=&#34;Share on Facebook&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_inappwebview&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_inappwebview.svg?sanitize=true&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_inappwebview/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_inappwebview/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_inappwebview/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_inappwebview/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_inappwebview/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_inappwebview/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/flutter-inappwebview&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&amp;amp;style=flat-square&#34; alt=&#34;Awesome Flutter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/pichillilorenzo/flutter_inappwebview/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://inappwebview.dev/donate/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/support-donate-yellow.svg?sanitize=true&#34; alt=&#34;Donate to this project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pichillilorenzo/flutter_inappwebview/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/pichillilorenzo/flutter_inappwebview&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pichillilorenzo/flutter_inappwebview&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/pichillilorenzo/flutter_inappwebview?style=social&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pichillilorenzo/flutter_inappwebview&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/pichillilorenzo/flutter_inappwebview?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5956938/110180687-8751f480-7e0a-11eb-89cc-d62f85c148cb.png&#34; alt=&#34;InAppWebView-logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Flutter plugin that allows you to add an inline webview, to use an headless webview, and to open an in-app browser window.&lt;/p&gt; &#xA;&lt;h2&gt;Articles/Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/&#34;&gt;Official documentation: inappwebview.dev/docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read the online &lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_inappwebview/latest/&#34;&gt;API Reference&lt;/a&gt; to get the &lt;strong&gt;full API documentation&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/blog/&#34;&gt;Official blog: inappwebview.dev/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Find open source projects on the &lt;a href=&#34;https://inappwebview.dev/showcase/&#34;&gt;Official Showcase page: inappwebview.dev/showcase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check the &lt;a href=&#34;https://github.com/pichillilorenzo/flutter_inappwebview/raw/master/example/integration_test/webview_flutter_test.dart&#34;&gt;example/integration_test/webview_flutter_test.dart&lt;/a&gt; file for other code examples&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pichillilorenzo/flutter_browser_app&#34;&gt;Flutter Browser App&lt;/a&gt;: A Full-Featured Mobile Browser App (such as the Google Chrome mobile browser) created using Flutter and the features offered by the flutter_inappwebview plugin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Showcase - Who use it&lt;/h2&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://inappwebview.dev/showcase/&#34;&gt;Showcase&lt;/a&gt; page to see an open list of Apps built with &lt;strong&gt;Flutter&lt;/strong&gt; and &lt;strong&gt;Flutter InAppWebView&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Are you using the &lt;strong&gt;Flutter InAppWebView&lt;/strong&gt; plugin and would you like to add your App there?&lt;/h4&gt; &#xA;&lt;p&gt;Send a submission request to the &lt;a href=&#34;https://inappwebview.dev/submit-app/&#34;&gt;Submit App&lt;/a&gt; page!&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dart sdk: &#34;&amp;gt;=2.14.0 &amp;lt;3.0.0&#34;&lt;/li&gt; &#xA; &lt;li&gt;Flutter: &#34;&amp;gt;=2.5.0&#34;&lt;/li&gt; &#xA; &lt;li&gt;Android: &lt;code&gt;minSdkVersion 17&lt;/code&gt; and add support for &lt;code&gt;androidx&lt;/code&gt; (see &lt;a href=&#34;https://flutter.dev/docs/development/androidx-migration&#34;&gt;AndroidX Migration&lt;/a&gt; to migrate an existing app)&lt;/li&gt; &#xA; &lt;li&gt;iOS: &lt;code&gt;--ios-language swift&lt;/code&gt;, Xcode version &lt;code&gt;&amp;gt;= 12&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;flutter_inappwebview&lt;/code&gt; as a &lt;a href=&#34;https://flutter.io/using-packages/&#34;&gt;dependency in your pubspec.yaml file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Main Classes Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/in-app-webview/basic-usage/&#34;&gt;InAppWebView&lt;/a&gt;: Flutter Widget for adding an inline native WebView integrated into the flutter widget tree.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/context-menu/basic-usage/&#34;&gt;ContextMenu&lt;/a&gt;: This class represents the WebView context menu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/headless-in-app-webview/basic-usage/&#34;&gt;HeadlessInAppWebView&lt;/a&gt;: Class that represents a WebView in headless mode. It can be used to run a WebView in background without attaching an InAppWebView to the widget tree.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/in-app-browser/basic-usage/&#34;&gt;InAppBrowser&lt;/a&gt;: In-App Browser using native WebView.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/chrome-safari-browser/basic-usage/&#34;&gt;ChromeSafariBrowser&lt;/a&gt;: In-App Browser using Chrome Custom Tabs on Android / SFSafariViewController on iOS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/in-app-localhost-server/basic-usage/&#34;&gt;InAppLocalhostServer&lt;/a&gt;: This class allows you to create a simple server on &lt;a href=&#34;http://localhost:%5Bport%5D/&#34;&gt;http://localhost:[port]/&lt;/a&gt;. The default port value is 8080.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/cookie-manager/basic-usage/&#34;&gt;CookieManager&lt;/a&gt;: This class implements a singleton object (shared instance) which manages the cookies used by WebView instances.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/http-auth-credential-database/basic-usage/&#34;&gt;HttpAuthCredentialDatabase&lt;/a&gt;: This class implements a singleton object (shared instance) that manages the shared HTTP auth credentials cache.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inappwebview.dev/docs/web-storage-manager/basic-usage/&#34;&gt;WebStorageManager&lt;/a&gt;: This class implements a singleton object (shared instance) which manages the web storage used by WebView instances.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Did you find this plugin useful? Please consider to &lt;a href=&#34;https://inappwebview.dev/donate/&#34;&gt;make a donation&lt;/a&gt; to help improve it!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MaikuB/flutter_local_notifications</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/MaikuB/flutter_local_notifications</id>
    <link href="https://github.com/MaikuB/flutter_local_notifications" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter plugin for displaying local notifications on Android, iOS, macOS and Linux&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Local Notifications plugin&lt;/h1&gt; &#xA;&lt;p&gt;This repository consists hosts the following packages&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaikuB/flutter_local_notifications/tree/master/flutter_local_notifications&#34;&gt;&lt;code&gt;flutter_local_notifications&lt;/code&gt;&lt;/a&gt;: code for the cross-platform facing plugin used to display local notifications within Flutter applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaikuB/flutter_local_notifications/tree/master/flutter_local_notifications_platform_interface&#34;&gt;&lt;code&gt;flutter_local_notifications_platform_interface&lt;/code&gt;&lt;/a&gt;: the code for the common platform interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaikuB/flutter_local_notifications/tree/master/flutter_local_notifications_linux&#34;&gt;&lt;code&gt;flutter_local_notifications_linux&lt;/code&gt;&lt;/a&gt;: the Linux implementation of &lt;a href=&#34;https://pub.dev/packages/flutter_local_notifications&#34;&gt;&lt;code&gt;flutter_local_notifications&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These can be found in the corresponding directories within the same name. Most developers are likely here as they are looking to use the &lt;code&gt;flutter_local_notifications&lt;/code&gt; plugin. There is a readme file within each directory with more information.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you run into bugs, please raise them on the GitHub repository. Please do not email them to me as GitHub is the appropriate place for them and allows for members of the community to answer questions, particularly if I miss the email. It would also be much appreciated if they could be limited to actual bugs or feature requests. If you&#39;re looking at how you could use the plugin to do a particular kind of notification, check the example app provides detailed code samples for each supported feature. Also try to check the README first in case you have missed something e.g. platform-specific setup.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;The guidelines around submitting pull requests can be found &lt;a href=&#34;https://github.com/MaikuB/flutter_local_notifications/raw/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>samarthagarwal/FlutterScreens</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/samarthagarwal/FlutterScreens</id>
    <link href="https://github.com/samarthagarwal/FlutterScreens" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of Screens and attractive UIs built with Flutter ready to be used in your applications. No external libraries are used. Just download, add to your project and use.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Screens&lt;/h1&gt; &#xA;&lt;p&gt;A collection of Login Screens, Buttons, Loaders and Widgets with attractive UIs, built with Flutter, ready to be used in your applications.&lt;/p&gt; &#xA;&lt;h6&gt;Last Update: Added SlideListView Widget&lt;/h6&gt; &#xA;&lt;h2&gt;Screenshots And Usage&lt;/h2&gt; &#xA;&lt;h2&gt;SlideListView&lt;/h2&gt; &#xA;&lt;p&gt;A widget that can be used to present two different views that can be toggled using a Floating Action Button. The views toggle with a nice cube-rotation animation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/slide_list_view.gif&#34; alt=&#34;Screenshots on iOS&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Rating&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/rating.gif&#34; alt=&#34;Screenshots on iOS&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Loaders&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/loaders.gif&#34; alt=&#34;Screenshots on iOS&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;ColorLoaders&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/color_loader.gif&#34; alt=&#34;Screenshot&#34;&gt; Color Loader 1&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/color_loader_2.gif&#34; alt=&#34;Screenshot&#34;&gt; Color Loader 2&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/color_loader_3.gif&#34; alt=&#34;Screenshot&#34;&gt; Color Loader 3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/color_loader_4.gif&#34; alt=&#34;Screenshot&#34;&gt; Color Loader 4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/color_loader_5.gif&#34; alt=&#34;Screenshot&#34;&gt; Color Loader 5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;FlipLoaders&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Example #1&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FlipLoader(&#xA;  loaderBackground: Colors.red,&#xA;  iconColor: Colors.white,&#xA;  icon: Icons.email,&#xA;  animationType: &#34;full_flip&#34;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Example #2&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FlipLoader(&#xA;  loaderBackground: Colors.blueAccent,&#xA;  iconColor: Colors.orangeAccent,&#xA;  icon: Icons.subway,&#xA;  animationType: &#34;half_flip&#34;,&#xA;  rotateIcon: true,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Example #3&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FlipLoader(&#xA;  loaderBackground: Colors.green,&#xA;  iconColor: Colors.white,&#xA;  icon: Icons.wifi,&#xA;  animationType: &#34;half_flip&#34;,&#xA;  shape: &#34;circle&#34;,&#xA;  rotateIcon: false,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h6&gt;I am working on more loaders. These loaders will also be updated. Thanks to &lt;a href=&#34;https://github.com/jakeleveroni&#34;&gt;jakeleveroni&lt;/a&gt; for parameterizing the FlipLoader.&lt;/h6&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Buttons&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/buttons1.png&#34; alt=&#34;Screenshots on iOS&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Simple Round Button&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;SimpleRoundButton(&#xA;    backgroundColor: Colors.redAccent,&#xA;    buttonText: Text(&#34;LOGIN&#34;, &#xA;        style: TextStyle(&#xA;            color: Colors.white&#xA;        ),&#xA;    ),&#xA;    textColor: Colors.white,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Simple Round Icon Button&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;SimpleRoundIconButton(&#xA;    backgroundColor: Colors.orangeAccent,&#xA;    buttonText: Text(&#34;SEND EMAIL&#34;, &#xA;        style: TextStyle(&#xA;            color: Colors.white&#xA;        ),&#xA;    ),        &#xA;    textColor: Colors.white,&#xA;    icon: Icon(Icons.email),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Simple Round Icon Only Button&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;SimpleRoundOnlyIconButton(&#xA;  backgroundColor: Colors.blueAccent,&#xA;  icon: Icon(Icons.phone),&#xA;  iconAlignment: Alignment.center,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Login Screens&lt;/h2&gt; &#xA;&lt;h3&gt;Login Screen 1&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/login_screen_1.png&#34; alt=&#34;Screenshots on Android and iOS&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Usage&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Container(&#xA;&#x9;child: LoginScreen1(&#xA;&#x9;primaryColor: Color(0xFF4aa0d5),&#xA;&#x9;backgroundColor: Colors.white,&#xA;&#x9;backgroundImage: new AssetImage(&#34;assets/images/full-bloom.png&#34;),&#xA;    ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Login Screen 2&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/login_screen_2.png&#34; alt=&#34;Screenshots on Android and iOS&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Usage&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Container(&#xA;&#x9;child: LoginScreen2(&#xA;       backgroundColor1: Color(0xFF444152),&#xA;       backgroundColor2: Color(0xFF6f6c7d),&#xA;       highlightColor: Color(0xfff65aa3),&#xA;       foregroundColor: Colors.white,&#xA;       logo: new AssetImage(&#34;assets/images/full-bloom.png&#34;),&#xA;       ),&#xA;   )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Login Screen 3&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/login_screen_3.gif&#34; alt=&#34;Screenshots on Android and iOS&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Usage&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Container(&#xA;&#x9;child: LoginScreen3(),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Login Screen 4&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/login_screen_4.jpeg&#34; alt=&#34;Screenshot on Android&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Usage&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Container(&#xA;&#x9;child: LoginScreen4(&#xA;       primaryColor: Color(0xff18203d),&#xA;       secondaryColor: Color(0xff232c51),&#xA;       logoGreen: Color(0xff25bcbb),&#xA;       ),&#xA;   )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Login Screen 5&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/login_screen_5.jpeg&#34; alt=&#34;Screenshot on Android&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Usage&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Container(&#xA;&#x9;child: LoginScreen5(&#xA;       avatarImage: &#34;path/to/image.png&#34;,&#xA;       onLoginClick: () {&#xA;         // when login button is pressed&#xA;       },&#xA;       googleSignIn: () {&#xA;         // when google signin button is pressed&#xA;       },&#xA;       navigatePage: () {&#xA;         // change to signup screen&#xA;       }&#xA;       ),&#xA;   )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Login Screen 6&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/samarthagarwal/FlutterScreens/master/screenshots/login_screen_6.jpeg&#34; alt=&#34;Screenshot on Android&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Usage&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;Container(&#xA;&#x9;child: LoginScreen6(&#xA;       onLoginClick: () {&#xA;         // when login button is pressed&#xA;       },&#xA;       navigatePage: () {&#xA;         // change to signup screen&#xA;       }&#xA;       ),&#xA;   )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribution and Donation&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to contribute. If you like the project and want to donate, &lt;a href=&#34;https://www.paypal.me/samarthagarwal&#34;&gt;click here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kaina404/FlutterDouBan</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/kaina404/FlutterDouBan</id>
    <link href="https://github.com/kaina404/FlutterDouBan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üî•üî•üî•FlutterË±ÜÁì£ÂÆ¢Êà∑Á´Ø,Awesome Flutter Project,ÂÖ®ÁΩëÊúÄ100%ËøòÂéüË±ÜÁì£ÂÆ¢Êà∑Á´Ø„ÄÇÈ¶ñÈ°µ„ÄÅ‰π¶ÂΩ±Èü≥„ÄÅÂ∞èÁªÑ„ÄÅÂ∏ÇÈõÜÂèä‰∏™‰∫∫‰∏≠ÂøÉÔºå‰∏Ä‰∏™‰∏çÊãâ„ÄÇÔºà https://img.xuvip.top/douyademo.mp4Ôºâ&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-new/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kaina404/FlutterDouBan/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/kaina404/FlutterDouBan.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kaina404/FlutterDouBan/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/kaina404/FlutterDouBan.svg?sanitize=true&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kaina404/FlutterDouBan/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/kaina404/FlutterDouBan.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;SDK Version&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;kaina404 ~ % flutter --version&#xA;Flutter 2.5.3 ‚Ä¢ channel stable ‚Ä¢ https://github.com/flutter/flutter.git&#xA;Framework ‚Ä¢ revision 18116933e7 (4 months ago) ‚Ä¢ 2021-10-15 10:46:35 -0700&#xA;Engine ‚Ä¢ revision d3ea636dc5&#xA;Tools ‚Ä¢ Dart 2.14.4&#xA;kaina404 ~ % flutter doctor&#xA;Doctor summary (to see all details, run flutter doctor -v):&#xA;[‚úì] Flutter (Channel stable, 2.5.3, on macOS 11.4 20F71 darwin-arm, locale zh-Hans-CN)&#xA;[‚úì] Android toolchain - develop for Android devices (Android SDK version 31.0.0)&#xA;[‚úì] Xcode - develop for iOS and macOS&#xA;[‚úì] Chrome - develop for the web&#xA;[‚úì] Android Studio (version 2020.3)&#xA;[‚úì] VS Code (version 1.62.3)&#xA;[‚úì] Connected device (3 available)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Â¶ÇÊûú‰∫ßÁîüÂÖ∂‰ªñ‰æùËµñÊó†Ê≥ïÁºñËØëÁöÑÈóÆÈ¢òÔºåÂèØ‰ª•Â∞ùËØïÂ∞Ü&lt;code&gt;pubspec.yaml&lt;/code&gt;‰∏≠ÁöÑ&lt;code&gt;dependencies&lt;/code&gt;‰∏≠ÁöÑÊâÄÊúâ‰æùËµñÁöÑ&#34;^&#34;ÂéªÊéâÔºåÈáçÊñ∞ÁºñËØëÂ∞ùËØï„ÄÇ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://www.jianshu.com/u/1c09737416aa&#34;&gt;ÂçöÂÆ¢Âú∞ÂùÄflutterall.xyz&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;ÁúüÊ≠£ÁöÑË±ÜÁì£ÂÆ¢Êà∑Á´ØÔºå90%ËøòÂéüË±ÜÁì£„ÄÇÈ¶ñÈ°µ„ÄÅ‰π¶ÂΩ±Èü≥„ÄÅÂ∞èÁªÑ„ÄÅÂ∏ÇÈõÜÂèä‰∏™‰∫∫‰∏≠ÂøÉÔºå‰∏Ä‰∏™‰∏çÊãâ„ÄÇÈ°πÁõÆÊåÅÁª≠Êõ¥Êñ∞‰∏≠...&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://img.xuvip.top/douyademo.mp4&#34;&gt;ÊºîÁ§∫È¢ÑËßà(Âè≥ÈîÆÔºåÊñ∞Ê†áÁ≠æÈ°µÈù¢ÊâìÂºÄ)&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Â¶ÇÊûúÊÇ®ËßâÂæóËøòÂèØ‰ª•ÁöÑËØùÔºåÁªô‰∏™StarÁôΩ~&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;‰ΩøÁî®FlutterÂºÄÂèë‰∏Ä‰∏™Ë±ÜÁì£App&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ê≠§È°πÁõÆÔºå90%ËøòÂéüÊüêÁì£APPÔºåÊâÄÊúâUIÂùáÊåâÁÖßÊüêÁì£Êù•ÂÆûÁé∞„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;È°πÁõÆ‰∏≠ÁöÑÊï∞ÊçÆÂùáÊù•Ëá™Ë±ÜÁì£apiÁúüÂÆûÊúâÊïàÊï∞ÊçÆ&lt;/li&gt; &#xA; &lt;li&gt;È°πÁõÆ‰∏≠Áî®Âà∞‰∫ÜÂá†‰πéÊâÄÊúâÁöÑFlutter widget&lt;/li&gt; &#xA; &lt;li&gt;ËøòÊúâ‰∏§‰∏™ÊØîËæÉÂ§ßÁöÑËá™ÂÆö‰πâÈ≠îÊîπÊ∫êÁ†ÅÂÆûÁé∞ÁâπÊïà&lt;/li&gt; &#xA; &lt;li&gt;Â§ßÂπ¥Âàù‰∏Ä‰πüÂú®Áª¥Êä§ÁöÑÈ°πÁõÆ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;APP‰∏≠ÊâÄÊúâÊï∞ÊçÆÂùá‰∏∫ÁúüÂÆûÊï∞ÊçÆ„ÄÇ‰ΩÜÊòØÈªòËÆ§ÔºåÂØπ‰∫é&#34;‰π¶ÂΩ±Èü≥Âçï‰∏™ÁîµÂΩ±tab&#34;ÁöÑÊï∞ÊçÆÔºå‰ΩøÁî®Ê®°ÊãüÊï∞ÊçÆ„ÄÇÂõ†‰∏∫ÔºåÈ¢ëÁπÅÁöÑÊâìÂºÄÂÖ≥Èó≠APPÔºå‰ºöÈ¢ëÁπÅË∞ÉÁî® Ëøô‰∏™Êé•Âè£„ÄÇÊé•Âè£ÊòØÊúâË∞ÉÁî®ÈôêÂà∂ÁöÑÔºåÊ¨°Êï∞Ëøá‰∫éÈ¢ëÁπÅÔºå‰ºöË¢´ÈîÅIP„ÄÇÂ¶ÇÊûúÊÉ≥ÁúãÁúüÂÆûÊï∞ÊçÆÔºåÂàôÂèØ‰ª•ËøõÂÖ• &#34;ÊàëÁöÑ&#34;ÔºåÁÑ∂ÂêéÊâìÂºÄ&#34;‰π¶ÂΩ±Èü≥Êï∞ÊçÆÊù•Ëá™ÁΩëÁªú&#34;ÂºÄÂÖ≥ÂêéÔºåÈáçÂêØAPPÂç≥ÂèØ„ÄÇ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;‰∏ãËΩΩÂú∞ÂùÄ&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://upload-images.jianshu.io/upload_images/3884536-d9adbda0e5f61c84.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34;&gt;ÊâìÂºÄÊñ∞È°µÈù¢Êâ´Á†Å‰∏ãËΩΩ&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://img.xuvip.top/douya_release.apk&#34;&gt;ReleaseÁâàÊú¨‰∏ãËΩΩÂú∞ÂùÄ&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.xuvip.top/douya.png&#34; alt=&#34;Êâ´‰∏ÄÊâ´‰∏ãËΩΩ‰ΩìÈ™å&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Demo(Âà∑‰∏çÂá∫gifÂõæÁöÑÔºåËÄêÂøÉÁ≠âÂæÖ‰∏Ä‰ºöÔºåÊàñËÄÖÂ§öÂà∑Âá†Ê¨°„ÄÇ)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-release/0E95A04AE84EFE31104AC8E0A5808CB9.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-release/041919372752_04CCDD7BC1BDB6015935EE50DDF75C29F.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-release/041919374444_0B3C7C7E29941F75D0A7C944D4E352CB7.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-release/041919375761_05292CAB58428C7C77C544027FC899CC0.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-release/041919380838_07B17727ACF231C6D91914D71114A96CF.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-release/041919381924_01CE541B98F565C72B75567A319271CA1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-12-55.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-13-11.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-17-38.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-17-48.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-18-03.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-18-12.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-18-23.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-30-58.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-31-13.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-32-29.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-32-41.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/demogif/Mar-10-2019%2014-33-02.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;dev-open&lt;/h1&gt; &#xA;&lt;h3&gt;Â§ßÂÆ∂ÂèØ‰ª•ÂêëËøô‰∏™ÂàÜÊîØÊ†πÊçÆË±ÜÁì£UIÂÅöËÆæËÆ°Á®øÔºåÊèê‰∫§‰ª£Á†Å&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ëøô‰∏™ÂàÜÊîØ‰æõÂπøÂ§ßFlutterÂºÄÂèëËÄÖÊù•Â≠¶‰π†Flutter&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ê≠§ÂàÜÊîØÂõäÊã¨‰∫ÜFlutter 90%ÁöÑÁªÑ‰ª∂ÁöÑÂü∫Êú¨‰∏éÁªÑÂêà‰ΩøÁî®&lt;/strong&gt;ÔºåÊòØÂàùÂ≠¶ËÄÖÁúüÊ≠£ÂÆûË∑µÁöÑ‰∏çÈîôÈÄâÊã©&lt;/li&gt; &#xA; &lt;li&gt;Âú®Ê≠§Ë±ÜËäΩAPPÁöÑÈ¶ñÈ°µÂÆûÁé∞‰∏éÂΩ±ÁâáËØ¶ÊÉÖÁöÑUIÁâπÊïàÔºåÂü∫‰∫éÈ≠îÊîπFlutterÊ∫êÁ†Å„ÄÇÊúâÂÖ¥Ë∂£ÂèØ‰ª•ÁúãÁúã&lt;/li&gt; &#xA; &lt;li&gt;Â§ßÂÆ∂ÊÉ≥ÂÆûÊàòËá™Â∑±ÁöÑFlutterËÉΩÂäõÔºåÂèØ‰ª•Â∞ÜÊüêÁì£APP‰Ωú‰∏∫ËÆæËÆ°Á®øÔºåÂÆåÊàêÈúÄÊ±ÇÔºåÂπ∂Êèê‰∫§&lt;/li&gt; &#xA; &lt;li&gt;ÊØè‰ΩçÂºÄÂèëËÄÖÊèê‰∫§ÁöÑ‰ª£Á†ÅÔºåÊàëÈÉΩ‰ºöÂú®ÊñáÊ°£‰∏≠ËøõË°åÂ§áÊ≥®&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Ê≥®ÊÑèÔºÅÔºÅÔºÅÂª∫ËÆÆ‰ΩøÁî®Ê®°ÊãüÊï∞ÊçÆ(mock_request.dart)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊØè‰∏™Êé•Âè£ÂùáÊúâ‰∏ÄÂÆöÁöÑË∞ÉÁî®ÈôêÂà∂&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Â§ßÂÆ∂pull‰∏ãÁöÑ‰ª£Á†ÅÔºåËøõË°åÊµãËØïË∞ÉËØïÊó∂ÔºåÂØπ‰∫éÁâπÂÆöÊé•Âè£ÔºåËøîÂõûÁöÑÁâπÂÆöÊï∞ÊçÆ„ÄÇÂ∞ΩÈáè‰∏çË¶ÅÊØèÊ¨°Ê±ÇËØ∑Ê±Ç‰∏ÄÊ¨°„ÄÇÂèØ‰ª•ËØ∑Ê±ÇÂà∞‰∏ÄÊ¨°ÁúüÂÆûÊï∞ÊçÆÂêéÔºåËΩ¨Êàêjson‰øùÂ≠ò Âà∞Êú¨Âú∞„ÄÇÁÑ∂ÂêéÔºåËá™Â∑±Ë∞ÉËØïÂºÄÂèëÁöÑÊó∂ÂÄôÔºå‰ΩøÁî®Ëøô‰∏™Ê®°ÊãüÊï∞ÊçÆÂç≥ÂèØ„ÄÇ&lt;/em&gt; [ÂèØÂèÇËÄÉmock_request.dart]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Êú™Êù•ÁâàÊú¨ËÆ°Âàí(Ê¨¢ËøéFlutterÁà±Â•ΩËÄÖÂâçÊù•ËÆ§È¢Ü)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ê¨¢ËøéFlutterÁà±Â•ΩËÄÖÂÖ±ÂêåÂÆåÊàê&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Ê∂âÂèäÂà∞UIÔºåÂèØÂèÇËÄÉË±ÜÁì£„ÄÇ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;ËêåÊñ∞TASK&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÂÆåÊàê‰ªªÊÑè‰∏Ä‰∏™Êú™ÂÆûÁé∞ÁöÑÊåâÈíÆ&lt;/li&gt; &#xA; &lt;li&gt;ÂÆåÊàê‰ªªÊÑè‰∏Ä‰∏™Êú™ÂÆûÁé∞ÁöÑÈ°µÈù¢&lt;/li&gt; &#xA; &lt;li&gt;‰ºòÂåñÂéüÊúâWidget&lt;/li&gt; &#xA; &lt;li&gt;Áà±Â•ΩËÄÖÊÉ≥ÂÆûÁé∞‰ΩÜÊòØÊú™ËÉΩÂÆûÁé∞ÁöÑÈúÄÊ±Ç&lt;/li&gt; &#xA; &lt;li&gt;More ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ËøõÈò∂TASK&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‰ºòÂåñ‰ª£Á†Å&lt;/li&gt; &#xA; &lt;li&gt;ÈÄÇÂΩìÁºìÂ≠òÊï∞ÊçÆ&lt;/li&gt; &#xA; &lt;li&gt;Ëß£ÂÜ≥Âç°È°ø(ÂèØÂèÇËÄÉÔºö&lt;a href=&#34;https://flutter-io.cn/docs/testing/ui-performance&#34;&gt;https://flutter-io.cn/docs/testing/ui-performance&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;‰ºòÂåñË∑ØÁî±ÔºàÂèØÂèÇËÄÉÂí∏È±ºÊñπÊ°àÔºö&lt;a href=&#34;https://www.yuque.com/xytech/flutter/vf1dpf%EF%BC%89&#34;&gt;https://www.yuque.com/xytech/flutter/vf1dpfÔºâ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ËÄÅÊâãTASK&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ReactiveX/rxdart&#34;&gt;Êé•ÂÖ•rxdart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/xytech/flutter/ycc9ni&#34;&gt;‰ΩøÁî®Fish Redux ÈáçÊûÑ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;ÂØπÈ≠îÊîπÊ∫êÁ†ÅÊàñËÄÖÂñúÊ¨¢ÁøªÊ∫êÁ†ÅÁöÑÁ´•ÈûãÂèØ‰ª•ÁúãÁúã‰∏ãÈù¢‰∏§‰∏™&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;È≠îÊîπFlutter AppBarÊ∫êÁ†ÅÂÆûÁé∞Ë±ÜÁì£Â§¥ÈÉ®ÁâπÊïà&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/%E4%BB%BF%E8%B1%86%E7%93%A3%E5%A4%B4%E9%83%A8.gif&#34; alt=&#34;È≠îÊîπFlutter AppBarÊ∫êÁ†ÅÂÆûÁé∞Ë±ÜÁì£Â§¥ÈÉ®ÁâπÊïà&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;È≠îÊîπÊ∫êÁ†ÅÂÆûÁé∞ÁîµÂΩ±ËØ¶ÊÉÖÊäΩÂ±âÁâπÊïà(GIFÂõæÂ¶ÇÊûúÂä†ËΩΩ‰∏çÂá∫Êù•ÔºåÂ§öÂà∑Âá†Ê¨°)&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/part1.gif&#34; alt=&#34;ÊäΩÂ±âÁâπÊïà1&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/part2.gif&#34; alt=&#34;ÊäΩÂ±âÁâπÊïà2&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/kaina404/DouBanProject/raw/dev-0.1/part3.gif&#34; alt=&#34;ÊäΩÂ±âÁâπÊïà3&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;È°µÈù¢‰ªãÁªç&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;È¶ñÈ°µ pages/home&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;homo_app_bar.dart È¶ñÈ°µÂØºËà™Â§¥&lt;/li&gt; &#xA;   &lt;li&gt;home_page.dart È¶ñÈ°µ&lt;/li&gt; &#xA;   &lt;li&gt;my_home_tab_bar.dart È¶ñÈ°µtab&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;‰π¶ÂΩ±Èü≥ pages/movie&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;book_audio_video_page.dart ‰π¶ÂΩ±Èü≥È°µÈù¢&lt;/li&gt; &#xA;   &lt;li&gt;detail_page.dart ÂΩ±Áâá„ÄÅÁîµËßÜËØ¶ÊÉÖÈ°µÈù¢&lt;/li&gt; &#xA;   &lt;li&gt;person_detail_page.dart ÊºîÂëòÈ°µÈù¢‰ªãÁªç&lt;/li&gt; &#xA;   &lt;li&gt;... È°µÈù¢ÈÉΩÊúâÊ≥®Èáä&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Â∞èÁªÑ pages/group&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Â∏ÇÈõÜ shop_page.dart&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Â∏ÇÈõÜÁöÑÊï∞ÊçÆ‰ΩøÁî®‰∏§‰∏™webview&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ÊàëÁöÑ page/person&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Êõ¥Êñ∞ËÆ∞ÂΩï&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;dev-0.1&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;È≠îÊîπÊ∫êÁ†ÅÂÆûÁé∞ÁîµÂΩ±ËØ¶ÊÉÖÊäΩÂ±âÁâπÊïà&lt;/li&gt; &#xA;   &lt;li&gt;È≠îÊîπFlutter AppBarÊ∫êÁ†ÅÂÆûÁé∞Ë±ÜÁì£Â§¥ÈÉ®ÁâπÊïà&lt;/li&gt; &#xA;   &lt;li&gt;‰ºòÂåñÈ°µÈù¢ÈÄªËæë&lt;/li&gt; &#xA;   &lt;li&gt;‰ºòÂåñÂä†ËΩΩÈÄüÂ∫¶&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;master&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Âü∫Êú¨ÁΩëÁªúËØ∑Ê±ÇÊ°ÜÊû∂„ÄÅUIÊ°ÜÊû∂&lt;/li&gt; &#xA;   &lt;li&gt;Â∑≤ÁªèÂ°´ÂÖ•‰∫Ü&#34;ÊúÄ‰∏∫Â§çÊùÇÁöÑÁîµÂΩ±TABÈ°µÈù¢&#34;„ÄÅÂΩ±ËßÜËØ¶ÊÉÖÈ°µÈù¢„ÄÅÂ∞èÁªÑÈ°µÈù¢ÔºàUI‰∏éË±ÜÁì£‰∏ÄËá¥ÔºåÊï∞ÊçÆ‰ΩøÁî®ÁöÑÊòØÁÉ≠Êò†Ê¶úÔºâ &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;È°µÈù¢‰∏ä‰∏ãÊªëÂä®&lt;/li&gt; &#xA;     &lt;li&gt;È°µÈù¢‰∏ä‰∏ã+Â∑¶Âè≥ÊªëÂä®&lt;/li&gt; &#xA;     &lt;li&gt;Êï∞ÊçÆÂä†ËΩΩ&lt;/li&gt; &#xA;     &lt;li&gt;TABÈ°µÈù¢ÊªëÂä®&lt;/li&gt; &#xA;     &lt;li&gt;....&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;‰Ωú‰∏∫Âü∫Êú¨ÁâàÊú¨Ôºå‰∏Ä‰∫õÈÄªËæë‰∏çÂ§üÂÆåÂñÑÔºåÊúâ‰∏Ä‰∫õbug„ÄÇ&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;ÈªòËÆ§Êù°Á∫¶&lt;/h1&gt; &#xA;&lt;p&gt;Ê≠§È°πÁõÆ‰ªÖ‰æõÂ§ßÂÆ∂‰∫§ÊµÅÊ≤üÈÄö‰ΩøÁî®Ôºå‰∏çÂæóÁî®‰∫é‰ªª‰ΩïÂïÜ‰∏ö‰ª•ÂèäÂà©ÁõäÊ¥ªÂä®„ÄÇÁî±Ê≠§ÂºïËµ∑ÁöÑË¥£‰ªªÔºåË∑üÊàëÊó†ÂÖ≥„ÄÇË∞¢Ë∞¢ÔºÅ&lt;/p&gt; &#xA;&lt;h1&gt;&lt;strong&gt;Â¶ÇÊûúÊÇ®ËßâÂæóËøòÂèØ‰ª•ÁöÑËØùÔºåÁªô‰∏™StarÁôΩ~&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;Thanks&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/kaina404/FlutterDouBan/raw/master-new/48.jpg&#34; width=&#34;426px&#34;&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This project is a starting point for a Flutter application.&lt;/p&gt; &#xA;&lt;p&gt;A few resources to get you started if this is your first Flutter project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.io/docs/get-started/codelab&#34;&gt;Lab: Write your first Flutter app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.io/docs/cookbook&#34;&gt;Cookbook: Useful Flutter samples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For help getting started with Flutter, view our &lt;a href=&#34;https://flutter.io/docs&#34;&gt;online documentation&lt;/a&gt;, which offers tutorials, samples, guidance on mobile development, and a full API reference.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mitesh77/Best-Flutter-UI-Templates</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/mitesh77/Best-Flutter-UI-Templates</id>
    <link href="https://github.com/mitesh77/Best-Flutter-UI-Templates" rel="alternate"></link>
    <summary type="html">&lt;p&gt;completely free for everyone. Its build-in Flutter Dart.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Best-Flutter-UI-Templates&lt;/h1&gt; &#xA;&lt;p&gt;completely free for everyone. Its build-in Flutter Dart.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/mitesh&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/best_flutter_ui_templates/assets/introduction_animation/introduction_animation.png&#34; alt=&#34;Image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/best_flutter_ui_templates/assets/hotel/hotel_booking.png&#34; alt=&#34;Image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/best_flutter_ui_templates/assets/fitness_app/fitness_app.png&#34; alt=&#34;Image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/images/custom_drawer.png&#34; alt=&#34;Image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/best_flutter_ui_templates/assets/design_course/design_course.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Some Screenshots&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/images/introduction_animation.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/images/hotel_booking.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/images/custom_drawer.gif&#34; height=&#34;300em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/images/fitness_app.gif&#34; height=&#34;300em&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mitesh77/Best-Flutter-UI-Templates/master/images/design_course.gif&#34; height=&#34;300em&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rrousselGit/flutter_hooks</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/rrousselGit/flutter_hooks</id>
    <link href="https://github.com/rrousselGit/flutter_hooks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React hooks for Flutter. Hooks are a new kind of object that manages a Widget life-cycles. They are used to increase code sharing between widgets and as a complete replacement for StatefulWidget.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/rrousselGit/flutter_hooks/raw/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://github.com/rrousselGit/flutter_hooks/raw/master/packages/flutter_hooks/resources/translations/pt_br/README.md&#34;&gt;Portugu√™s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rrousselGit/flutter_hooks/actions?query=workflow%3ABuild&#34;&gt;&lt;img src=&#34;https://github.com/rrousselGit/flutter_hooks/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/rrousselGit/flutter_hooks&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/rrousselGit/flutter_hooks/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dartlang.org/packages/flutter_hooks&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_hooks.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Solido/awesome-flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&amp;amp;style=flat-square&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/Bbumvej&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/765557403865186374.svg?logo=discord&amp;amp;color=blue&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rrousselGit/flutter_hooks/master/packages/flutter_hooks/flutter-hook.svg?sanitize=true&#34; width=&#34;200&#34;&gt; &#xA;&lt;h1&gt;Flutter Hooks&lt;/h1&gt; &#xA;&lt;p&gt;A Flutter implementation of React hooks: &lt;a href=&#34;https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889&#34;&gt;https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hooks are a new kind of object that manage the life-cycle of a &lt;code&gt;Widget&lt;/code&gt;. They exist for one reason: increase the code-sharing &lt;em&gt;between&lt;/em&gt; widgets by removing duplicates.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;StatefulWidget&lt;/code&gt; suffers from a big problem: it is very difficult to reuse the logic of say &lt;code&gt;initState&lt;/code&gt; or &lt;code&gt;dispose&lt;/code&gt;. An obvious example is &lt;code&gt;AnimationController&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Example extends StatefulWidget {&#xA;  final Duration duration;&#xA;&#xA;  const Example({Key? key, required this.duration})&#xA;      : super(key: key);&#xA;&#xA;  @override&#xA;  _ExampleState createState() =&amp;gt; _ExampleState();&#xA;}&#xA;&#xA;class _ExampleState extends State&amp;lt;Example&amp;gt; with SingleTickerProviderStateMixin {&#xA;  AnimationController? _controller;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    super.initState();&#xA;    _controller = AnimationController(vsync: this, duration: widget.duration);&#xA;  }&#xA;&#xA;  @override&#xA;  void didUpdateWidget(Example oldWidget) {&#xA;    super.didUpdateWidget(oldWidget);&#xA;    if (widget.duration != oldWidget.duration) {&#xA;      _controller!.duration = widget.duration;&#xA;    }&#xA;  }&#xA;&#xA;  @override&#xA;  void dispose() {&#xA;    _controller!.dispose();&#xA;    super.dispose();&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Container();&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All widgets that desire to use an &lt;code&gt;AnimationController&lt;/code&gt; will have to reimplement almost all of this logic from scratch, which is of course undesired.&lt;/p&gt; &#xA;&lt;p&gt;Dart mixins can partially solve this issue, but they suffer from other problems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A given mixin can only be used once per class.&lt;/li&gt; &#xA; &lt;li&gt;Mixins and the class share the same object.&lt;br&gt; This means that if two mixins define a variable under the same name, the result may vary between compilation fails to unknown behavior.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;This library proposes a third solution:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Example extends HookWidget {&#xA;  const Example({Key? key, required this.duration})&#xA;      : super(key: key);&#xA;&#xA;  final Duration duration;&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    final controller = useAnimationController(duration: duration);&#xA;    return Container();&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This code is functionally equivalent to the previous example. It still disposes the &lt;code&gt;AnimationController&lt;/code&gt; and still updates its &lt;code&gt;duration&lt;/code&gt; when &lt;code&gt;Example.duration&lt;/code&gt; changes. But you&#39;re probably thinking:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Where did all the logic go?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;That logic has been moved into &lt;code&gt;useAnimationController&lt;/code&gt;, a function included directly in this library (see &lt;a href=&#34;https://github.com/rrousselGit/flutter_hooks#existing-hooks&#34;&gt;Existing hooks&lt;/a&gt;) - It is what we call a &lt;em&gt;Hook&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Hooks are a new kind of object with some specificities:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;They can only be used in the &lt;code&gt;build&lt;/code&gt; method of a widget that mix-in &lt;code&gt;Hooks&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The same hook can be reused arbitrarily many times. The following code defines two independent &lt;code&gt;AnimationController&lt;/code&gt;, and they are correctly preserved when the widget rebuild.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(BuildContext context) {&#xA;  final controller = useAnimationController();&#xA;  final controller2 = useAnimationController();&#xA;  return Container();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hooks are entirely independent of each other and from the widget.&lt;br&gt; This means that they can easily be extracted into a package and published on &lt;a href=&#34;https://pub.dartlang.org/&#34;&gt;pub&lt;/a&gt; for others to use.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Principle&lt;/h2&gt; &#xA;&lt;p&gt;Similar to &lt;code&gt;State&lt;/code&gt;, hooks are stored in the &lt;code&gt;Element&lt;/code&gt; of a &lt;code&gt;Widget&lt;/code&gt;. However, instead of having one &lt;code&gt;State&lt;/code&gt;, the &lt;code&gt;Element&lt;/code&gt; stores a &lt;code&gt;List&amp;lt;Hook&amp;gt;&lt;/code&gt;. Then in order to use a &lt;code&gt;Hook&lt;/code&gt;, one must call &lt;code&gt;Hook.use&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The hook returned by &lt;code&gt;use&lt;/code&gt; is based on the number of times it has been called. The first call returns the first hook; the second call returns the second hook, the third call returns the third hook and so on.&lt;/p&gt; &#xA;&lt;p&gt;If this idea is still unclear, a naive implementation of hooks could look as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class HookElement extends Element {&#xA;  List&amp;lt;HookState&amp;gt; _hooks;&#xA;  int _hookIndex;&#xA;&#xA;  T use&amp;lt;T&amp;gt;(Hook&amp;lt;T&amp;gt; hook) =&amp;gt; _hooks[_hookIndex++].build(this);&#xA;&#xA;  @override&#xA;  performRebuild() {&#xA;    _hookIndex = 0;&#xA;    super.performRebuild();&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more explanation of how hooks are implemented, here&#39;s a great article about how is was done in React: &lt;a href=&#34;https://medium.com/@ryardley/react-hooks-not-magic-just-arrays-cd4f1857236e&#34;&gt;https://medium.com/@ryardley/react-hooks-not-magic-just-arrays-cd4f1857236e&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Rules&lt;/h2&gt; &#xA;&lt;p&gt;Due to hooks being obtained from their index, some rules must be respected:&lt;/p&gt; &#xA;&lt;h3&gt;DO always prefix your hooks with &lt;code&gt;use&lt;/code&gt;:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(BuildContext context) {&#xA;  // starts with `use`, good name&#xA;  useMyHook();&#xA;  // doesn&#39;t start with `use`, could confuse people into thinking that this isn&#39;t a hook&#xA;  myHook();&#xA;  // ....&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DO call hooks unconditionally&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(BuildContext context) {&#xA;  useMyHook();&#xA;  // ....&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DON&#39;T wrap &lt;code&gt;use&lt;/code&gt; into a condition&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(BuildContext context) {&#xA;  if (condition) {&#xA;    useMyHook();&#xA;  }&#xA;  // ....&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;About hot-reload&lt;/h3&gt; &#xA;&lt;p&gt;Since hooks are obtained from their index, one may think that hot-reloads while refactoring will break the application.&lt;/p&gt; &#xA;&lt;p&gt;But worry not, a &lt;code&gt;HookWidget&lt;/code&gt; overrides the default hot-reload behavior to work with hooks. Still, there are some situations in which the state of a Hook may be reset.&lt;/p&gt; &#xA;&lt;p&gt;Consider the following list of hooks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;useA();&#xA;useB(0);&#xA;useC();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then consider that we edited the parameter of &lt;code&gt;HookB&lt;/code&gt; after performing a hot-reload:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;useA();&#xA;useB(42);&#xA;useC();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here everything works fine and all hooks maintain their state.&lt;/p&gt; &#xA;&lt;p&gt;Now consider that we removed &lt;code&gt;HookB&lt;/code&gt;. We now have:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;useA();&#xA;useC();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this situation, &lt;code&gt;HookA&lt;/code&gt; maintains its state but &lt;code&gt;HookC&lt;/code&gt; gets hard reset. This happens because, when a hot-reload is performed after refactoring, all hooks &lt;em&gt;after&lt;/em&gt; the first line impacted are disposed of. So, since &lt;code&gt;HookC&lt;/code&gt; was placed &lt;em&gt;after&lt;/em&gt; &lt;code&gt;HookB&lt;/code&gt;, it will be disposed.&lt;/p&gt; &#xA;&lt;h2&gt;How to create a hook&lt;/h2&gt; &#xA;&lt;p&gt;There are two ways to create a hook:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;A function&lt;/p&gt; &lt;p&gt;Functions are by far the most common way to write hooks. Thanks to hooks being composable by nature, a function will be able to combine other hooks to create a more complex custom hook. By convention, these functions will be prefixed by &lt;code&gt;use&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The following code defines a custom hook that creates a variable and logs its value to the console whenever the value changes:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ValueNotifier&amp;lt;T&amp;gt; useLoggedState&amp;lt;T&amp;gt;([T initialData]) {&#xA;  final result = useState&amp;lt;T&amp;gt;(initialData);&#xA;  useValueChanged(result.value, (_, __) {&#xA;    print(result.value);&#xA;  });&#xA;  return result;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A class&lt;/p&gt; &lt;p&gt;When a hook becomes too complex, it is possible to convert it into a class that extends &lt;code&gt;Hook&lt;/code&gt; - which can then be used using &lt;code&gt;Hook.use&lt;/code&gt;.&lt;br&gt; As a class, the hook will look very similar to a &lt;code&gt;State&lt;/code&gt; class and have access to widget life-cycle and methods such as &lt;code&gt;initHook&lt;/code&gt;, &lt;code&gt;dispose&lt;/code&gt; and &lt;code&gt;setState&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;It is usually good practice to hide the class under a function as such:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Result useMyHook() {&#xA;  return use(const _TimeAlive());&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The following code defines a hook that prints the total time a &lt;code&gt;State&lt;/code&gt; has been alive on its dispose.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class _TimeAlive extends Hook&amp;lt;void&amp;gt; {&#xA;  const _TimeAlive();&#xA;&#xA;  @override&#xA;  _TimeAliveState createState() =&amp;gt; _TimeAliveState();&#xA;}&#xA;&#xA;class _TimeAliveState extends HookState&amp;lt;void, _TimeAlive&amp;gt; {&#xA;  DateTime start;&#xA;&#xA;  @override&#xA;  void initHook() {&#xA;    super.initHook();&#xA;    start = DateTime.now();&#xA;  }&#xA;&#xA;  @override&#xA;  void build(BuildContext context) {}&#xA;&#xA;  @override&#xA;  void dispose() {&#xA;    print(DateTime.now().difference(start));&#xA;    super.dispose();&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Existing hooks&lt;/h2&gt; &#xA;&lt;p&gt;Flutter_Hooks already comes with a list of reusable hooks which are divided into different kinds:&lt;/p&gt; &#xA;&lt;h3&gt;Primitives&lt;/h3&gt; &#xA;&lt;p&gt;A set of low-level hooks that interact with the different life-cycles of a widget&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useEffect.html&#34;&gt;useEffect&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Useful for side-effects and optionally canceling them.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useState.html&#34;&gt;useState&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates a variable and subscribes to it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useMemoized.html&#34;&gt;useMemoized&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Caches the instance of a complex object.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useRef.html&#34;&gt;useRef&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates an object that contains a single mutable property.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useCallback.html&#34;&gt;useCallback&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Caches a function instance.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useContext.html&#34;&gt;useContext&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Obtains the &lt;code&gt;BuildContext&lt;/code&gt; of the building &lt;code&gt;HookWidget&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useValueChanged.html&#34;&gt;useValueChanged&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Watches a value and triggers a callback whenever its value changed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Object-binding&lt;/h3&gt; &#xA;&lt;p&gt;This category of hooks the manipulation of existing Flutter/Dart objects with hooks. They will take care of creating/updating/disposing an object.&lt;/p&gt; &#xA;&lt;h4&gt;dart:async related hooks:&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useStream.html&#34;&gt;useStream&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Subscribes to a &lt;code&gt;Stream&lt;/code&gt; and returns its current state as an &lt;code&gt;AsyncSnapshot&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useStreamController.html&#34;&gt;useStreamController&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates a &lt;code&gt;StreamController&lt;/code&gt; which will automatically be disposed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useFuture.html&#34;&gt;useFuture&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Subscribes to a &lt;code&gt;Future&lt;/code&gt; and returns its current state as an &lt;code&gt;AsyncSnapshot&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Animation related hooks:&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useSingleTickerProvider.html&#34;&gt;useSingleTickerProvider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates a single usage &lt;code&gt;TickerProvider&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useAnimationController.html&#34;&gt;useAnimationController&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates an &lt;code&gt;AnimationController&lt;/code&gt; which will be automatically disposed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useAnimation.html&#34;&gt;useAnimation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Subscribes to an &lt;code&gt;Animation&lt;/code&gt; and returns its value.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Listenable related hooks:&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useListenable.html&#34;&gt;useListenable&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Subscribes to a &lt;code&gt;Listenable&lt;/code&gt; and marks the widget as needing build whenever the listener is called.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useValueNotifier.html&#34;&gt;useValueNotifier&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates a &lt;code&gt;ValueNotifier&lt;/code&gt; which will be automatically disposed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useValueListenable.html&#34;&gt;useValueListenable&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Subscribes to a &lt;code&gt;ValueListenable&lt;/code&gt; and return its value.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Misc hooks:&lt;/h4&gt; &#xA;&lt;p&gt;A series of hooks with no particular theme.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useReducer.html&#34;&gt;useReducer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An alternative to &lt;code&gt;useState&lt;/code&gt; for more complex states.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/usePrevious.html&#34;&gt;usePrevious&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Returns the previous argument called to [usePrevious].&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/documentation/flutter_hooks/latest/flutter_hooks/useTextEditingController-constant.html&#34;&gt;useTextEditingController&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates a &lt;code&gt;TextEditingController&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useFocusNode.html&#34;&gt;useFocusNode&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates a &lt;code&gt;FocusNode&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useTabController.html&#34;&gt;useTabController&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates and disposes a &lt;code&gt;TabController&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useScrollController.html&#34;&gt;useScrollController&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates and disposes a &lt;code&gt;ScrollController&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/usePageController.html&#34;&gt;usePageController&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates and disposes a &lt;code&gt;PageController&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useAppLifecycleState.html&#34;&gt;useAppLifecycleState&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Returns the current &lt;code&gt;AppLifecycleState&lt;/code&gt; and rebuilds the widget on change.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useOnAppLifecycleStateChange.html&#34;&gt;useOnAppLifecycleStateChange&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Listens to &lt;code&gt;AppLifecycleState&lt;/code&gt; changes and triggers a callback on change.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useTransformationController.html&#34;&gt;useTransformationController&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates and disposes a &lt;code&gt;TransformationController&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_hooks/latest/flutter_hooks/useIsMounted.html&#34;&gt;useIsMounted&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An equivalent to &lt;code&gt;State.mounted&lt;/code&gt; for hooks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcomed!&lt;/p&gt; &#xA;&lt;p&gt;If you feel that a hook is missing, feel free to open a pull-request.&lt;/p&gt; &#xA;&lt;p&gt;For a custom-hook to be merged, you will need to do the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Describe the use-case.&lt;/p&gt; &lt;p&gt;Open an issue explaining why we need this hook, how to use it, ... This is important as a hook will not get merged if the hook doesn&#39;t appeal to a large number of people.&lt;/p&gt; &lt;p&gt;If your hook is rejected, don&#39;t worry! A rejection doesn&#39;t mean that it won&#39;t be merged later in the future if more people show interest in it. In the mean-time, feel free to publish your hook as a package on &lt;a href=&#34;https://pub.dev&#34;&gt;https://pub.dev&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Write tests for your hook&lt;/p&gt; &lt;p&gt;A hook will not be merged unless fully tested to avoid inadvertently breaking it in the future.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add it to the README and write documentation for it.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/freezed/master/sponsorkit/sponsors.svg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rrousselGit/freezed/master/sponsorkit/sponsors.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>superlistapp/super_editor</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/superlistapp/super_editor</id>
    <link href="https://github.com/superlistapp/super_editor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Rich Text Editor for Flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;super_editor&lt;/h1&gt; &#xA;&lt;p&gt;The missing Rich Text Editor for Flutter. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/superlistapp/super_editor/main/super_editor/README.md&#34;&gt;SuperEditor README&lt;/a&gt; about how to use the packages, or run the &lt;a href=&#34;https://raw.githubusercontent.com/superlistapp/super_editor/main/super_editor/example/README.md&#34;&gt;sample editor&lt;/a&gt;. There&#39;s also a version for Web accessible at &lt;a href=&#34;https://superlist.com/SuperEditor/&#34;&gt;https://superlist.com/SuperEditor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to &lt;a href=&#34;https://join.slack.com/t/superlist-community/shared_invite/zt-10cpx277q-uZ~pmjlTWg9QQzH64OK9_w&#34;&gt;join us on Slack&lt;/a&gt; and say hello üëã.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter/flutter</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/flutter/flutter</id>
    <link href="https://github.com/flutter/flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter makes it easy and fast to build beautiful apps for mobile and beyond&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://flutter.dev&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/archived-master/src/_assets/image/flutter-lockup-bg.jpg?raw=true&#34; alt=&#34;Flutter logo&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/flutter/flutter/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/flutter/flutter.svg?sanitize=true&#34; alt=&#34;Build Status - Cirrus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flutter/flutter/wiki/Chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/608014603317936148&#34; alt=&#34;Discord badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=flutterdev&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/flutterdev.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter handle&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/5631&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5631/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flutter is Google&#39;s SDK for crafting beautiful, fast user experiences for mobile, web, and desktop from a single codebase. Flutter works with existing code, is used by developers and organizations around the world, and is free and open source.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/get-started/&#34;&gt;Install Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs&#34;&gt;Flutter documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/flutter/wiki&#34;&gt;Development wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/flutter/raw/master/CONTRIBUTING.md&#34;&gt;Contributing to Flutter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For announcements about new releases, follow the &lt;a href=&#34;https://groups.google.com/forum/#!forum/flutter-announce&#34;&gt;flutter-announce@googlegroups.com&lt;/a&gt; mailing list. Our documentation also tracks &lt;a href=&#34;https://flutter.dev/docs/release/breaking-changes&#34;&gt;breaking changes&lt;/a&gt; across releases.&lt;/p&gt; &#xA;&lt;h2&gt;Terms of service&lt;/h2&gt; &#xA;&lt;p&gt;The Flutter tool may occasionally download resources from Google servers. By downloading or using the Flutter SDK you agree to the Google Terms of Service: &lt;a href=&#34;https://policies.google.com/terms&#34;&gt;https://policies.google.com/terms&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example, when installed from GitHub (as opposed to from a prepackaged archive), the Flutter tool will download the Dart SDK from Google servers immediately when first run, as it is used to execute the &lt;code&gt;flutter&lt;/code&gt; tool itself. This will also occur when Flutter is upgraded (e.g. by running the &lt;code&gt;flutter upgrade&lt;/code&gt; command).&lt;/p&gt; &#xA;&lt;h2&gt;About Flutter&lt;/h2&gt; &#xA;&lt;p&gt;We think Flutter will help you create beautiful, fast apps, with a productive, extensible and open development model, whether you&#39;re targeting iOS or Android, web, Windows, macOS, Linux or embedding it as the UI toolkit for a platform of your choice.&lt;/p&gt; &#xA;&lt;h3&gt;Beautiful user experiences&lt;/h3&gt; &#xA;&lt;p&gt;We want to enable designers to deliver their full creative vision without being forced to water it down due to limitations of the underlying framework. Flutter&#39;s &lt;a href=&#34;https://flutter.dev/docs/resources/inside-flutter&#34;&gt;layered architecture&lt;/a&gt; gives you control over every pixel on the screen and its powerful compositing capabilities let you overlay and animate graphics, video, text, and controls without limitation. Flutter includes a full &lt;a href=&#34;https://flutter.dev/widgets/&#34;&gt;set of widgets&lt;/a&gt; that deliver pixel-perfect experiences whether you&#39;re building for iOS (&lt;a href=&#34;https://docs.flutter.dev/development/ui/widgets/cupertino&#34;&gt;Cupertino&lt;/a&gt;) or Android (&lt;a href=&#34;https://docs.flutter.dev/development/ui/widgets/material&#34;&gt;Material&lt;/a&gt;), along with support for customizing or creating entirely new visual components.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/main/src/assets/images/docs/homepage/reflectly-hero-600px.png?raw=true&#34; alt=&#34;Reflectly hero image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fast results&lt;/h3&gt; &#xA;&lt;p&gt;Flutter is fast. It&#39;s powered by the same hardware-accelerated 2D graphics library that underpins Chrome and Android: &lt;a href=&#34;https://skia.org/&#34;&gt;Skia&lt;/a&gt;. We architected Flutter to support glitch-free, jank-free graphics at the native speed of your device. Flutter code is powered by the world-class &lt;a href=&#34;https://dart.dev/&#34;&gt;Dart platform&lt;/a&gt;, which enables compilation to 32-bit and 64-bit ARM machine code for iOS and Android, as well as JavaScript for the web and Intel x64 for desktop devices.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/main/src/assets/images/docs/homepage/dart-diagram-small.png?raw=true&#34; alt=&#34;Dart diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Productive development&lt;/h3&gt; &#xA;&lt;p&gt;Flutter offers stateful hot reload, allowing you to make changes to your code and see the results instantly without restarting your app or losing its state.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.flutter.dev/development/tools/hot-reload&#34;&gt;&lt;img src=&#34;https://github.com/flutter/website/raw/main/src/assets/images/docs/tools/android-studio/hot-reload.gif?raw=true&#34; alt=&#34;Hot reload animation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Extensible and open model&lt;/h3&gt; &#xA;&lt;p&gt;Flutter works with any development tool (or none at all), and also includes editor plug-ins for both &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter&#34;&gt;Visual Studio Code&lt;/a&gt; and &lt;a href=&#34;https://plugins.jetbrains.com/plugin/9212-flutter&#34;&gt;IntelliJ / Android Studio&lt;/a&gt;. Flutter provides &lt;a href=&#34;https://pub.dev/flutter&#34;&gt;tens of thousands of packages&lt;/a&gt; to speed your development, regardless of your target platform. And accessing other native code is easy, with support for both &lt;a href=&#34;https://flutter.dev/docs/development/platform-integration/c-interop&#34;&gt;FFI&lt;/a&gt; and &lt;a href=&#34;https://flutter.dev/docs/development/platform-integration/platform-channels&#34;&gt;platform-specific APIs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Flutter is a fully open-source project, and we welcome contributions. Information on how to get started can be found in our &lt;a href=&#34;https://raw.githubusercontent.com/flutter/flutter/master/CONTRIBUTING.md&#34;&gt;contributor guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jonataslaw/getx</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/jonataslaw/getx</id>
    <link href="https://github.com/jonataslaw/getx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open screens/snackbars/dialogs/bottomSheets without context, manage states and inject dependencies easily with Get.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonataslaw/getx-community/master/get.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/get&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/get.svg?label=get&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/sentry/score&#34;&gt;&lt;img src=&#34;https://badges.bar/get/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/get/score&#34;&gt;&lt;img src=&#34;https://badges.bar/get/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/get/score&#34;&gt;&lt;img src=&#34;https://badges.bar/get/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/jonataslaw/get/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;building&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/effective_dart&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-effective_dart-40c4ff.svg?sanitize=true&#34; alt=&#34;style: effective dart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/9Hpt99N&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/722900883784073290.svg?logo=discord&#34; alt=&#34;Discord Shield&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://communityinviter.com/apps/getxworkspace/getx&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-orange.svg?sanitize=true&#34; alt=&#34;Get on Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/joinchat/PhdbJRmsZNpAqSLJL6bH7g&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Telegram-blue.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Solido/awesome-flutter&#34;&gt; &lt;img alt=&#34;Awesome Flutter&#34; src=&#34;https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.buymeacoffee.com/jonataslaw&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://i.imgur.com/aV6DDA7.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important; box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonataslaw/getx-community/master/getx.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;strong&gt;Languages:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-English-blueviolet?style=for-the-badge&#34; alt=&#34;English&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README-vi.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Vietnamese-blueviolet?style=for-the-badge&#34; alt=&#34;Vietnamese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.id-ID.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Indonesian-blueviolet?style=for-the-badge&#34; alt=&#34;Indonesian&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ur-PK.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Urdu-blueviolet?style=for-the-badge&#34; alt=&#34;Urdu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.zh-cn.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Chinese-blueviolet?style=for-the-badge&#34; alt=&#34;Chinese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.pt-br.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Portuguese-blueviolet?style=for-the-badge&#34; alt=&#34;Portuguese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README-es.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Spanish-blueviolet?style=for-the-badge&#34; alt=&#34;Spanish&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ru.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Russian-blueviolet?style=for-the-badge&#34; alt=&#34;Russian&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.pl.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Polish-blueviolet?style=for-the-badge&#34; alt=&#34;Polish&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ko-kr.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Korean-blueviolet?style=for-the-badge&#34; alt=&#34;Korean&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README-fr.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-French-blueviolet?style=for-the-badge&#34; alt=&#34;French&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.ja-JP.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Japanese-blueviolet?style=for-the-badge&#34; alt=&#34;Japanese&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/README.tr-TR.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Turkish-blueviolet?style=for-the-badge&#34; alt=&#34;Turkish&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#about-get&#34;&gt;About Get&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#installing&#34;&gt;Installing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#counter-app-with-getx&#34;&gt;Counter App with GetX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#the-three-pillars&#34;&gt;The Three pillars&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#state-management&#34;&gt;State management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#reactive-state-manager&#34;&gt;Reactive State Manager&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#more-details-about-state-management&#34;&gt;More details about state management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#route-management&#34;&gt;Route management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#more-details-about-route-management&#34;&gt;More details about route management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#dependency-management&#34;&gt;Dependency management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#more-details-about-dependency-management&#34;&gt;More details about dependency management&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#utils&#34;&gt;Utils&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#internationalization&#34;&gt;Internationalization&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#translations&#34;&gt;Translations&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#using-translations&#34;&gt;Using translations&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#locales&#34;&gt;Locales&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#change-locale&#34;&gt;Change locale&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#system-locale&#34;&gt;System locale&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#change-theme&#34;&gt;Change Theme&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getconnect&#34;&gt;GetConnect&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#default-configuration&#34;&gt;Default configuration&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#custom-configuration&#34;&gt;Custom configuration&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getpage-middleware&#34;&gt;GetPage Middleware&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#priority&#34;&gt;Priority&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#redirect&#34;&gt;Redirect&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagecalled&#34;&gt;onPageCalled&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onbindingsstart&#34;&gt;OnBindingsStart&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagebuildstart&#34;&gt;OnPageBuildStart&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagebuilt&#34;&gt;OnPageBuilt&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#onpagedispose&#34;&gt;OnPageDispose&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#other-advanced-apis&#34;&gt;Other Advanced APIs&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#optional-global-settings-and-manual-configurations&#34;&gt;Optional Global Settings and Manual configurations&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#local-state-widgets&#34;&gt;Local State Widgets&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#valuebuilder&#34;&gt;ValueBuilder&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#obxvalue&#34;&gt;ObxValue&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#useful-tips&#34;&gt;Useful tips&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getview&#34;&gt;GetView&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getresponsiveview&#34;&gt;GetResponsiveView&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#how-to-use-it&#34;&gt;How to use it&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getwidget&#34;&gt;GetWidget&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#getxservice&#34;&gt;GetxService&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#breaking-changes-from-20&#34;&gt;Breaking changes from 2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#why-getx&#34;&gt;Why Getx?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#community&#34;&gt;Community&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#community-channels&#34;&gt;Community channels&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#how-to-contribute&#34;&gt;How to contribute&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#articles-and-videos&#34;&gt;Articles and videos&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;About Get&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX is an extra-light and powerful solution for Flutter. It combines high-performance state management, intelligent dependency injection, and route management quickly and practically.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX has 3 basic principles. This means that these are the priority for all resources in the library: &lt;strong&gt;PRODUCTIVITY, PERFORMANCE AND ORGANIZATION.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;PERFORMANCE:&lt;/strong&gt; GetX is focused on performance and minimum consumption of resources. GetX does not use Streams or ChangeNotifier.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;PRODUCTIVITY:&lt;/strong&gt; GetX uses an easy and pleasant syntax. No matter what you want to do, there is always an easier way with GetX. It will save hours of development and will provide the maximum performance your application can deliver.&lt;/p&gt; &lt;p&gt;Generally, the developer should be concerned with removing controllers from memory. With GetX this is not necessary because resources are removed from memory when they are not used by default. If you want to keep it in memory, you must explicitly declare &#34;permanent: true&#34; in your dependency. That way, in addition to saving time, you are less at risk of having unnecessary dependencies on memory. Dependency loading is also lazy by default.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;ORGANIZATION:&lt;/strong&gt; GetX allows the total decoupling of the View, presentation logic, business logic, dependency injection, and navigation. You do not need context to navigate between routes, so you are not dependent on the widget tree (visualization) for this. You don&#39;t need context to access your controllers/blocs through an inheritedWidget, so you completely decouple your presentation logic and business logic from your visualization layer. You do not need to inject your Controllers/Models/Blocs classes into your widget tree through &lt;code&gt;MultiProvider&lt;/code&gt;s. For this, GetX uses its own dependency injection feature, decoupling the DI from its view completely.&lt;/p&gt; &lt;p&gt;With GetX you know where to find each feature of your application, having clean code by default. In addition to making maintenance easy, this makes the sharing of modules something that until then in Flutter was unthinkable, something totally possible. BLoC was a starting point for organizing code in Flutter, it separates business logic from visualization. GetX is a natural evolution of this, not only separating the business logic but the presentation logic. Bonus injection of dependencies and routes are also decoupled, and the data layer is out of it all. You know where everything is, and all of this in an easier way than building a hello world. GetX is the easiest, practical, and scalable way to build high-performance applications with the Flutter SDK. It has a large ecosystem around it that works perfectly together, it&#39;s easy for beginners, and it&#39;s accurate for experts. It is secure, stable, up-to-date, and offers a huge range of APIs built-in that are not present in the default Flutter SDK.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX is not bloated. It has a multitude of features that allow you to start programming without worrying about anything, but each of these features are in separate containers and are only started after use. If you only use State Management, only State Management will be compiled. If you only use routes, nothing from the state management will be compiled.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GetX has a huge ecosystem, a large community, a large number of collaborators, and will be maintained as long as the Flutter exists. GetX too is capable of running with the same code on Android, iOS, Web, Mac, Linux, Windows, and on your server. &lt;strong&gt;It is possible to fully reuse your code made on the frontend on your backend with &lt;a href=&#34;https://github.com/jonataslaw/get_server&#34;&gt;Get Server&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;In addition, the entire development process can be completely automated, both on the server and on the front end with &lt;a href=&#34;https://github.com/jonataslaw/get_cli&#34;&gt;Get CLI&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;In addition, to further increase your productivity, we have the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=get-snippets.get-snippets&#34;&gt;extension to VSCode&lt;/a&gt; and the &lt;a href=&#34;https://plugins.jetbrains.com/plugin/14975-getx-snippets&#34;&gt;extension to Android Studio/Intellij&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installing&lt;/h1&gt; &#xA;&lt;p&gt;Add Get to your pubspec.yaml file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  get:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Import get in files that it will be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:get/get.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Counter App with GetX&lt;/h1&gt; &#xA;&lt;p&gt;The &#34;counter&#34; project created by default on new project on Flutter has over 100 lines (with comments). To show the power of Get, I will demonstrate how to make a &#34;counter&#34; changing the state with each click, switching between pages and sharing the state between screens, all in an organized way, separating the business logic from the view, in ONLY 26 LINES CODE INCLUDING COMMENTS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1: Add &#34;Get&#34; before your MaterialApp, turning it into GetMaterialApp&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void main() =&amp;gt; runApp(GetMaterialApp(home: Home()));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Note: this does not modify the MaterialApp of the Flutter, GetMaterialApp is not a modified MaterialApp, it is just a pre-configured Widget, which has the default MaterialApp as a child. You can configure this manually, but it is definitely not necessary. GetMaterialApp will create routes, inject them, inject translations, inject everything you need for route navigation. If you use Get only for state management or dependency management, it is not necessary to use GetMaterialApp. GetMaterialApp is necessary for routes, snackbars, internationalization, bottomSheets, dialogs, and high-level apis related to routes and absence of context.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Note¬≤: This step is only necessary if you gonna use route management (&lt;code&gt;Get.to()&lt;/code&gt;, &lt;code&gt;Get.back()&lt;/code&gt; and so on). If you not gonna use it then it is not necessary to do step 1&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Step 2: Create your business logic class and place all variables, methods and controllers inside it. You can make any variable observable using a simple &#34;.obs&#34;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Controller extends GetxController{&#xA;  var count = 0.obs;&#xA;  increment() =&amp;gt; count++;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 3: Create your View, use StatelessWidget and save some RAM, with Get you may no longer need to use StatefulWidget.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Home extends StatelessWidget {&#xA;&#xA;  @override&#xA;  Widget build(context) {&#xA;&#xA;    // Instantiate your class using Get.put() to make it available for all &#34;child&#34; routes there.&#xA;    final Controller c = Get.put(Controller());&#xA;&#xA;    return Scaffold(&#xA;      // Use Obx(()=&amp;gt; to update Text() whenever count is changed.&#xA;      appBar: AppBar(title: Obx(() =&amp;gt; Text(&#34;Clicks: ${c.count}&#34;))),&#xA;&#xA;      // Replace the 8 lines Navigator.push by a simple Get.to(). You don&#39;t need context&#xA;      body: Center(child: ElevatedButton(&#xA;              child: Text(&#34;Go to Other&#34;), onPressed: () =&amp;gt; Get.to(Other()))),&#xA;      floatingActionButton:&#xA;          FloatingActionButton(child: Icon(Icons.add), onPressed: c.increment));&#xA;  }&#xA;}&#xA;&#xA;class Other extends StatelessWidget {&#xA;  // You can ask Get to find a Controller that is being used by another page and redirect you to it.&#xA;  final Controller c = Get.find();&#xA;&#xA;  @override&#xA;  Widget build(context){&#xA;     // Access the updated count variable&#xA;     return Scaffold(body: Center(child: Text(&#34;${c.count}&#34;)));&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Result:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jonataslaw/getx-community/master/counter-app-gif.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a simple project but it already makes clear how powerful Get is. As your project grows, this difference will become more significant.&lt;/p&gt; &#xA;&lt;p&gt;Get was designed to work with teams, but it makes the job of an individual developer simple.&lt;/p&gt; &#xA;&lt;p&gt;Improve your deadlines, deliver everything on time without losing performance. Get is not for everyone, but if you identified with that phrase, Get is for you!&lt;/p&gt; &#xA;&lt;h1&gt;The Three pillars&lt;/h1&gt; &#xA;&lt;h2&gt;State management&lt;/h2&gt; &#xA;&lt;p&gt;Get has two different state managers: the simple state manager (we&#39;ll call it GetBuilder) and the reactive state manager (GetX/Obx)&lt;/p&gt; &#xA;&lt;h3&gt;Reactive State Manager&lt;/h3&gt; &#xA;&lt;p&gt;Reactive programming can alienate many people because it is said to be complicated. GetX turns reactive programming into something quite simple:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You won&#39;t need to create StreamControllers.&lt;/li&gt; &#xA; &lt;li&gt;You won&#39;t need to create a StreamBuilder for each variable&lt;/li&gt; &#xA; &lt;li&gt;You will not need to create a class for each state.&lt;/li&gt; &#xA; &lt;li&gt;You will not need to create a get for an initial value.&lt;/li&gt; &#xA; &lt;li&gt;You will not need to use code generators&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Reactive programming with Get is as easy as using setState.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s imagine that you have a name variable and want that every time you change it, all widgets that use it are automatically changed.&lt;/p&gt; &#xA;&lt;p&gt;This is your count variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var name = &#39;Jonatas Borges&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make it observable, you just need to add &#34;.obs&#34; to the end of it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var name = &#39;Jonatas Borges&#39;.obs;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in the UI, when you want to show that value and update the screen whenever the values changes, simply do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Obx(() =&amp;gt; Text(&#34;${controller.name}&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s all. It&#39;s &lt;em&gt;that&lt;/em&gt; simple.&lt;/p&gt; &#xA;&lt;h3&gt;More details about state management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;See an more in-depth explanation of state management &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/state_management.md&#34;&gt;here&lt;/a&gt;. There you will see more examples and also the difference between the simple state manager and the reactive state manager&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will get a good idea of GetX power.&lt;/p&gt; &#xA;&lt;h2&gt;Route management&lt;/h2&gt; &#xA;&lt;p&gt;If you are going to use routes/snackbars/dialogs/bottomsheets without context, GetX is excellent for you too, just see it:&lt;/p&gt; &#xA;&lt;p&gt;Add &#34;Get&#34; before your MaterialApp, turning it into GetMaterialApp&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp( // Before: MaterialApp(&#xA;  home: MyHome(),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to a new screen:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;Get.to(NextScreen());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to new screen with name. See more details on named routes &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/route_management.md#navigation-with-named-routes&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;Get.toNamed(&#39;/details&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To close snackbars, dialogs, bottomsheets, or anything you would normally close with Navigator.pop(context);&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.back();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To go to the next screen and no option to go back to the previous screen (for use in SplashScreens, login screens, etc.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.off(NextScreen());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To go to the next screen and cancel all previous routes (useful in shopping carts, polls, and tests)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.offAll(NextScreen());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Noticed that you didn&#39;t have to use context to do any of these things? That&#39;s one of the biggest advantages of using Get route management. With this, you can execute all these methods from within your controller class, without worries.&lt;/p&gt; &#xA;&lt;h3&gt;More details about route management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Get works with named routes and also offers lower-level control over your routes! There is in-depth documentation &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/route_management.md&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependency management&lt;/h2&gt; &#xA;&lt;p&gt;Get has a simple and powerful dependency manager that allows you to retrieve the same class as your Bloc or Controller with just 1 lines of code, no Provider context, no inheritedWidget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Controller controller = Get.put(Controller()); // Rather Controller controller = Controller();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Note: If you are using Get&#39;s State Manager, pay more attention to the bindings API, which will make it easier to connect your view to your controller.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instead of instantiating your class within the class you are using, you are instantiating it within the Get instance, which will make it available throughout your App. So you can use your controller (or class Bloc) normally&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Get dependency management is decoupled from other parts of the package, so if for example, your app is already using a state manager (any one, it doesn&#39;t matter), you don&#39;t need to rewrite it all, you can use this dependency injection with no problems at all&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;controller.fetchApi();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Imagine that you have navigated through numerous routes, and you need data that was left behind in your controller, you would need a state manager combined with the Provider or Get_it, correct? Not with Get. You just need to ask Get to &#34;find&#34; for your controller, you don&#39;t need any additional dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Controller controller = Get.find();&#xA;//Yes, it looks like Magic, Get will find your controller, and will deliver it to you. You can have 1 million controllers instantiated, Get will always give you the right controller.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then you will be able to recover your controller data that was obtained back there:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Text(controller.textFromApi);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;More details about dependency management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;See a more in-depth explanation of dependency management &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/documentation/en_US/dependency_management.md&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Utils&lt;/h1&gt; &#xA;&lt;h2&gt;Internationalization&lt;/h2&gt; &#xA;&lt;h3&gt;Translations&lt;/h3&gt; &#xA;&lt;p&gt;Translations are kept as a simple key-value dictionary map. To add custom translations, create a class and extend &lt;code&gt;Translations&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:get/get.dart&#39;;&#xA;&#xA;class Messages extends Translations {&#xA;  @override&#xA;  Map&amp;lt;String, Map&amp;lt;String, String&amp;gt;&amp;gt; get keys =&amp;gt; {&#xA;        &#39;en_US&#39;: {&#xA;          &#39;hello&#39;: &#39;Hello World&#39;,&#xA;        },&#xA;        &#39;de_DE&#39;: {&#xA;          &#39;hello&#39;: &#39;Hallo Welt&#39;,&#xA;        }&#xA;      };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using translations&lt;/h4&gt; &#xA;&lt;p&gt;Just append &lt;code&gt;.tr&lt;/code&gt; to the specified key and it will be translated, using the current value of &lt;code&gt;Get.locale&lt;/code&gt; and &lt;code&gt;Get.fallbackLocale&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Text(&#39;title&#39;.tr);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using translation with singular and plural&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var products = [];&#xA;Text(&#39;singularKey&#39;.trPlural(&#39;pluralKey&#39;, products.length, Args));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using translation with parameters&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:get/get.dart&#39;;&#xA;&#xA;&#xA;Map&amp;lt;String, Map&amp;lt;String, String&amp;gt;&amp;gt; get keys =&amp;gt; {&#xA;    &#39;en_US&#39;: {&#xA;        &#39;logged_in&#39;: &#39;logged in as @name with email @email&#39;,&#xA;    },&#xA;    &#39;es_ES&#39;: {&#xA;       &#39;logged_in&#39;: &#39;iniciado sesi√≥n como @name con e-mail @email&#39;,&#xA;    }&#xA;};&#xA;&#xA;Text(&#39;logged_in&#39;.trParams({&#xA;  &#39;name&#39;: &#39;Jhon&#39;,&#xA;  &#39;email&#39;: &#39;jhon@example.com&#39;&#xA;  }));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Locales&lt;/h3&gt; &#xA;&lt;p&gt;Pass parameters to &lt;code&gt;GetMaterialApp&lt;/code&gt; to define the locale and translations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;return GetMaterialApp(&#xA;    translations: Messages(), // your translations&#xA;    locale: Locale(&#39;en&#39;, &#39;US&#39;), // translations will be displayed in that locale&#xA;    fallbackLocale: Locale(&#39;en&#39;, &#39;UK&#39;), // specify the fallback locale in case an invalid locale is selected.&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Change locale&lt;/h4&gt; &#xA;&lt;p&gt;Call &lt;code&gt;Get.updateLocale(locale)&lt;/code&gt; to update the locale. Translations then automatically use the new locale.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var locale = Locale(&#39;en&#39;, &#39;US&#39;);&#xA;Get.updateLocale(locale);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;System locale&lt;/h4&gt; &#xA;&lt;p&gt;To read the system locale, you could use &lt;code&gt;Get.deviceLocale&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;return GetMaterialApp(&#xA;    locale: Get.deviceLocale,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Change Theme&lt;/h2&gt; &#xA;&lt;p&gt;Please do not use any higher level widget than &lt;code&gt;GetMaterialApp&lt;/code&gt; in order to update it. This can trigger duplicate keys. A lot of people are used to the prehistoric approach of creating a &#34;ThemeProvider&#34; widget just to change the theme of your app, and this is definitely NOT necessary with &lt;strong&gt;GetX‚Ñ¢&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can create your custom theme and simply add it within &lt;code&gt;Get.changeTheme&lt;/code&gt; without any boilerplate for that:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.changeTheme(ThemeData.light());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to create something like a button that changes the Theme in &lt;code&gt;onTap&lt;/code&gt;, you can combine two &lt;strong&gt;GetX‚Ñ¢&lt;/strong&gt; APIs for that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The api that checks if the dark &lt;code&gt;Theme&lt;/code&gt; is being used.&lt;/li&gt; &#xA; &lt;li&gt;And the &lt;code&gt;Theme&lt;/code&gt; Change API, you can just put this within an &lt;code&gt;onPressed&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Get.changeTheme(Get.isDarkMode? ThemeData.light(): ThemeData.dark());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When &lt;code&gt;.darkmode&lt;/code&gt; is activated, it will switch to the &lt;em&gt;light theme&lt;/em&gt;, and when the &lt;em&gt;light theme&lt;/em&gt; becomes active, it will change to &lt;em&gt;dark theme&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;GetConnect&lt;/h2&gt; &#xA;&lt;p&gt;GetConnect is an easy way to communicate from your back to your front with http or websockets&lt;/p&gt; &#xA;&lt;h3&gt;Default configuration&lt;/h3&gt; &#xA;&lt;p&gt;You can simply extend GetConnect and use the GET/POST/PUT/DELETE/SOCKET methods to communicate with your Rest API or websockets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class UserProvider extends GetConnect {&#xA;  // Get request&#xA;  Future&amp;lt;Response&amp;gt; getUser(int id) =&amp;gt; get(&#39;http://youapi/users/$id&#39;);&#xA;  // Post request&#xA;  Future&amp;lt;Response&amp;gt; postUser(Map data) =&amp;gt; post(&#39;http://youapi/users&#39;, body: data);&#xA;  // Post request with File&#xA;  Future&amp;lt;Response&amp;lt;CasesModel&amp;gt;&amp;gt; postCases(List&amp;lt;int&amp;gt; image) {&#xA;    final form = FormData({&#xA;      &#39;file&#39;: MultipartFile(image, filename: &#39;avatar.png&#39;),&#xA;      &#39;otherFile&#39;: MultipartFile(image, filename: &#39;cover.png&#39;),&#xA;    });&#xA;    return post(&#39;http://youapi/users/upload&#39;, form);&#xA;  }&#xA;&#xA;  GetSocket userMessages() {&#xA;    return socket(&#39;https://yourapi/users/socket&#39;);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom configuration&lt;/h3&gt; &#xA;&lt;p&gt;GetConnect is highly customizable You can define base Url, as answer modifiers, as Requests modifiers, define an authenticator, and even the number of attempts in which it will try to authenticate itself, in addition to giving the possibility to define a standard decoder that will transform all your requests into your Models without any additional configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class HomeProvider extends GetConnect {&#xA;  @override&#xA;  void onInit() {&#xA;    // All request will pass to jsonEncode so CasesModel.fromJson()&#xA;    httpClient.defaultDecoder = CasesModel.fromJson;&#xA;    httpClient.baseUrl = &#39;https://api.covid19api.com&#39;;&#xA;    // baseUrl = &#39;https://api.covid19api.com&#39;; // It define baseUrl to&#xA;    // Http and websockets if used with no [httpClient] instance&#xA;&#xA;    // It&#39;s will attach &#39;apikey&#39; property on header from all requests&#xA;    httpClient.addRequestModifier((request) {&#xA;      request.headers[&#39;apikey&#39;] = &#39;12345678&#39;;&#xA;      return request;&#xA;    });&#xA;&#xA;    // Even if the server sends data from the country &#34;Brazil&#34;,&#xA;    // it will never be displayed to users, because you remove&#xA;    // that data from the response, even before the response is delivered&#xA;    httpClient.addResponseModifier&amp;lt;CasesModel&amp;gt;((request, response) {&#xA;      CasesModel model = response.body;&#xA;      if (model.countries.contains(&#39;Brazil&#39;)) {&#xA;        model.countries.remove(&#39;Brazilll&#39;);&#xA;      }&#xA;    });&#xA;&#xA;    httpClient.addAuthenticator((request) async {&#xA;      final response = await get(&#34;http://yourapi/token&#34;);&#xA;      final token = response.body[&#39;token&#39;];&#xA;      // Set the header&#xA;      request.headers[&#39;Authorization&#39;] = &#34;$token&#34;;&#xA;      return request;&#xA;    });&#xA;&#xA;    //Autenticator will be called 3 times if HttpStatus is&#xA;    //HttpStatus.unauthorized&#xA;    httpClient.maxAuthRetries = 3;&#xA;  }&#xA;  }&#xA;&#xA;  @override&#xA;  Future&amp;lt;Response&amp;lt;CasesModel&amp;gt;&amp;gt; getCases(String path) =&amp;gt; get(path);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GetPage Middleware&lt;/h2&gt; &#xA;&lt;p&gt;The GetPage has now new property that takes a list of GetMiddleWare and run them in the specific order.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: When GetPage has a Middlewares, all the children of this page will have the same middlewares automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Priority&lt;/h3&gt; &#xA;&lt;p&gt;The Order of the Middlewares to run can be set by the priority in the GetMiddleware.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final middlewares = [&#xA;  GetMiddleware(priority: 2),&#xA;  GetMiddleware(priority: 5),&#xA;  GetMiddleware(priority: 4),&#xA;  GetMiddleware(priority: -8),&#xA;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;those middlewares will be run in this order &lt;strong&gt;-8 =&amp;gt; 2 =&amp;gt; 4 =&amp;gt; 5&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Redirect&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called when the page of the called route is being searched for. It takes RouteSettings as a result to redirect to. Or give it null and there will be no redirecting.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;RouteSettings redirect(String route) {&#xA;  final authService = Get.find&amp;lt;AuthService&amp;gt;();&#xA;  return authService.authed.value ? null : RouteSettings(name: &#39;/login&#39;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;onPageCalled&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called when this Page is called before anything created you can use it to change something about the page or give it new page&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetPage onPageCalled(GetPage page) {&#xA;  final authService = Get.find&amp;lt;AuthService&amp;gt;();&#xA;  return page.copyWith(title: &#39;Welcome ${authService.UserName}&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OnBindingsStart&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right before the Bindings are initialize. Here you can change Bindings for this page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;List&amp;lt;Bindings&amp;gt; onBindingsStart(List&amp;lt;Bindings&amp;gt; bindings) {&#xA;  final authService = Get.find&amp;lt;AuthService&amp;gt;();&#xA;  if (authService.isAdmin) {&#xA;    bindings.add(AdminBinding());&#xA;  }&#xA;  return bindings;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OnPageBuildStart&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right after the Bindings are initialize. Here you can do something after that you created the bindings and before creating the page widget.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetPageBuilder onPageBuildStart(GetPageBuilder page) {&#xA;  print(&#39;bindings are ready&#39;);&#xA;  return page;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OnPageBuilt&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right after the GetPage.page function is called and will give you the result of the function. and take the widget that will be showed.&lt;/p&gt; &#xA;&lt;h3&gt;OnPageDispose&lt;/h3&gt; &#xA;&lt;p&gt;This function will be called right after disposing all the related objects (Controllers, views, ...) of the page.&lt;/p&gt; &#xA;&lt;h2&gt;Other Advanced APIs&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// give the current args from currentScreen&#xA;Get.arguments&#xA;&#xA;// give name of previous route&#xA;Get.previousRoute&#xA;&#xA;// give the raw route to access for example, rawRoute.isFirst()&#xA;Get.rawRoute&#xA;&#xA;// give access to Routing API from GetObserver&#xA;Get.routing&#xA;&#xA;// check if snackbar is open&#xA;Get.isSnackbarOpen&#xA;&#xA;// check if dialog is open&#xA;Get.isDialogOpen&#xA;&#xA;// check if bottomsheet is open&#xA;Get.isBottomSheetOpen&#xA;&#xA;// remove one route.&#xA;Get.removeRoute()&#xA;&#xA;// back repeatedly until the predicate returns true.&#xA;Get.until()&#xA;&#xA;// go to next route and remove all the previous routes until the predicate returns true.&#xA;Get.offUntil()&#xA;&#xA;// go to next named route and remove all the previous routes until the predicate returns true.&#xA;Get.offNamedUntil()&#xA;&#xA;//Check in what platform the app is running&#xA;GetPlatform.isAndroid&#xA;GetPlatform.isIOS&#xA;GetPlatform.isMacOS&#xA;GetPlatform.isWindows&#xA;GetPlatform.isLinux&#xA;GetPlatform.isFuchsia&#xA;&#xA;//Check the device type&#xA;GetPlatform.isMobile&#xA;GetPlatform.isDesktop&#xA;//All platforms are supported independently in web!&#xA;//You can tell if you are running inside a browser&#xA;//on Windows, iOS, OSX, Android, etc.&#xA;GetPlatform.isWeb&#xA;&#xA;&#xA;// Equivalent to : MediaQuery.of(context).size.height,&#xA;// but immutable.&#xA;Get.height&#xA;Get.width&#xA;&#xA;// Gives the current context of the Navigator.&#xA;Get.context&#xA;&#xA;// Gives the context of the snackbar/dialog/bottomsheet in the foreground, anywhere in your code.&#xA;Get.contextOverlay&#xA;&#xA;// Note: the following methods are extensions on context. Since you&#xA;// have access to context in any place of your UI, you can use it anywhere in the UI code&#xA;&#xA;// If you need a changeable height/width (like Desktop or browser windows that can be scaled) you will need to use context.&#xA;context.width&#xA;context.height&#xA;&#xA;// Gives you the power to define half the screen, a third of it and so on.&#xA;// Useful for responsive applications.&#xA;// param dividedBy (double) optional - default: 1&#xA;// param reducedBy (double) optional - default: 0&#xA;context.heightTransformer()&#xA;context.widthTransformer()&#xA;&#xA;/// Similar to MediaQuery.of(context).size&#xA;context.mediaQuerySize()&#xA;&#xA;/// Similar to MediaQuery.of(context).padding&#xA;context.mediaQueryPadding()&#xA;&#xA;/// Similar to MediaQuery.of(context).viewPadding&#xA;context.mediaQueryViewPadding()&#xA;&#xA;/// Similar to MediaQuery.of(context).viewInsets;&#xA;context.mediaQueryViewInsets()&#xA;&#xA;/// Similar to MediaQuery.of(context).orientation;&#xA;context.orientation()&#xA;&#xA;/// Check if device is on landscape mode&#xA;context.isLandscape()&#xA;&#xA;/// Check if device is on portrait mode&#xA;context.isPortrait()&#xA;&#xA;/// Similar to MediaQuery.of(context).devicePixelRatio;&#xA;context.devicePixelRatio()&#xA;&#xA;/// Similar to MediaQuery.of(context).textScaleFactor;&#xA;context.textScaleFactor()&#xA;&#xA;/// Get the shortestSide from screen&#xA;context.mediaQueryShortestSide()&#xA;&#xA;/// True if width be larger than 800&#xA;context.showNavbar()&#xA;&#xA;/// True if the shortestSide is smaller than 600p&#xA;context.isPhone()&#xA;&#xA;/// True if the shortestSide is largest than 600p&#xA;context.isSmallTablet()&#xA;&#xA;/// True if the shortestSide is largest than 720p&#xA;context.isLargeTablet()&#xA;&#xA;/// True if the current device is Tablet&#xA;context.isTablet()&#xA;&#xA;/// Returns a value&amp;lt;T&amp;gt; according to the screen size&#xA;/// can give value for:&#xA;/// watch: if the shortestSide is smaller than 300&#xA;/// mobile: if the shortestSide is smaller than 600&#xA;/// tablet: if the shortestSide is smaller than 1200&#xA;/// desktop: if width is largest than 1200&#xA;context.responsiveValue&amp;lt;T&amp;gt;()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Optional Global Settings and Manual configurations&lt;/h3&gt; &#xA;&lt;p&gt;GetMaterialApp configures everything for you, but if you want to configure Get manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;  navigatorKey: Get.key,&#xA;  navigatorObservers: [GetObserver()],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will also be able to use your own Middleware within &lt;code&gt;GetObserver&lt;/code&gt;, this will not influence anything.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;  navigatorKey: Get.key,&#xA;  navigatorObservers: [&#xA;    GetObserver(MiddleWare.observer) // Here&#xA;  ],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can create &lt;em&gt;Global Settings&lt;/em&gt; for &lt;code&gt;Get&lt;/code&gt;. Just add &lt;code&gt;Get.config&lt;/code&gt; to your code before pushing any route. Or do it directly in your &lt;code&gt;GetMaterialApp&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  enableLog: true,&#xA;  defaultTransition: Transition.fade,&#xA;  opaqueRoute: Get.isOpaqueRouteDefault,&#xA;  popGesture: Get.isPopGestureEnable,&#xA;  transitionDuration: Get.defaultDurationTransition,&#xA;  defaultGlobalState: Get.defaultGlobalState,&#xA;);&#xA;&#xA;Get.config(&#xA;  enableLog = true,&#xA;  defaultPopGesture = true,&#xA;  defaultTransition = Transitions.cupertino&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can optionally redirect all the logging messages from &lt;code&gt;Get&lt;/code&gt;. If you want to use your own, favourite logging package, and want to capture the logs there:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  enableLog: true,&#xA;  logWriterCallback: localLogWriter,&#xA;);&#xA;&#xA;void localLogWriter(String text, {bool isError = false}) {&#xA;  // pass the message to your favourite logging package here&#xA;  // please note that even if enableLog: false log messages will be pushed in this callback&#xA;  // you get check the flag if you want through GetConfig.isLogEnable&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Local State Widgets&lt;/h3&gt; &#xA;&lt;p&gt;These Widgets allows you to manage a single value, and keep the state ephemeral and locally. We have flavours for Reactive and Simple. For instance, you might use them to toggle obscureText in a &lt;code&gt;TextField&lt;/code&gt;, maybe create a custom Expandable Panel, or maybe modify the current index in &lt;code&gt;BottomNavigationBar&lt;/code&gt; while changing the content of the body in a &lt;code&gt;Scaffold&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;ValueBuilder&lt;/h4&gt; &#xA;&lt;p&gt;A simplification of &lt;code&gt;StatefulWidget&lt;/code&gt; that works with a &lt;code&gt;.setState&lt;/code&gt; callback that takes the updated value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ValueBuilder&amp;lt;bool&amp;gt;(&#xA;  initialValue: false,&#xA;  builder: (value, updateFn) =&amp;gt; Switch(&#xA;    value: value,&#xA;    onChanged: updateFn, // same signature! you could use ( newValue ) =&amp;gt; updateFn( newValue )&#xA;  ),&#xA;  // if you need to call something outside the builder method.&#xA;  onUpdate: (value) =&amp;gt; print(&#34;Value updated: $value&#34;),&#xA;  onDispose: () =&amp;gt; print(&#34;Widget unmounted&#34;),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;ObxValue&lt;/h4&gt; &#xA;&lt;p&gt;Similar to &lt;a href=&#34;https://raw.githubusercontent.com/jonataslaw/getx/master/#valuebuilder&#34;&gt;&lt;code&gt;ValueBuilder&lt;/code&gt;&lt;/a&gt;, but this is the Reactive version, you pass a Rx instance (remember the magical .obs?) and updates automatically... isn&#39;t it awesome?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ObxValue((data) =&amp;gt; Switch(&#xA;        value: data.value,&#xA;        onChanged: data, // Rx has a _callable_ function! You could use (flag) =&amp;gt; data.value = flag,&#xA;    ),&#xA;    false.obs,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Useful tips&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;.obs&lt;/code&gt;ervables (also known as &lt;em&gt;Rx&lt;/em&gt; Types) have a wide variety of internal methods and operators.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Is very common to &lt;em&gt;believe&lt;/em&gt; that a property with &lt;code&gt;.obs&lt;/code&gt; &lt;strong&gt;IS&lt;/strong&gt; the actual value... but make no mistake! We avoid the Type declaration of the variable, because Dart&#39;s compiler is smart enough, and the code looks cleaner, but:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var message = &#39;Hello world&#39;.obs;&#xA;print( &#39;Message &#34;$message&#34; has Type ${message.runtimeType}&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Even if &lt;code&gt;message&lt;/code&gt; &lt;em&gt;prints&lt;/em&gt; the actual String value, the Type is &lt;strong&gt;RxString&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;p&gt;So, you can&#39;t do &lt;code&gt;message.substring( 0, 4 )&lt;/code&gt;. You have to access the real &lt;code&gt;value&lt;/code&gt; inside the &lt;em&gt;observable&lt;/em&gt;: The most &#34;used way&#34; is &lt;code&gt;.value&lt;/code&gt;, but, did you know that you can also use...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final name = &#39;GetX&#39;.obs;&#xA;// only &#34;updates&#34; the stream, if the value is different from the current one.&#xA;name.value = &#39;Hey&#39;;&#xA;&#xA;// All Rx properties are &#34;callable&#34; and returns the new value.&#xA;// but this approach does not accepts `null`, the UI will not rebuild.&#xA;name(&#39;Hello&#39;);&#xA;&#xA;// is like a getter, prints &#39;Hello&#39;.&#xA;name() ;&#xA;&#xA;/// numbers:&#xA;&#xA;final count = 0.obs;&#xA;&#xA;// You can use all non mutable operations from num primitives!&#xA;count + 1;&#xA;&#xA;// Watch out! this is only valid if `count` is not final, but var&#xA;count += 1;&#xA;&#xA;// You can also compare against values:&#xA;count &amp;gt; 2;&#xA;&#xA;/// booleans:&#xA;&#xA;final flag = false.obs;&#xA;&#xA;// switches the value between true/false&#xA;flag.toggle();&#xA;&#xA;&#xA;/// all types:&#xA;&#xA;// Sets the `value` to null.&#xA;flag.nil();&#xA;&#xA;// All toString(), toJson() operations are passed down to the `value`&#xA;print( count ); // calls `toString()` inside  for RxInt&#xA;&#xA;final abc = [0,1,2].obs;&#xA;// Converts the value to a json Array, prints RxList&#xA;// Json is supported by all Rx types!&#xA;print(&#39;json: ${jsonEncode(abc)}, type: ${abc.runtimeType}&#39;);&#xA;&#xA;// RxMap, RxList and RxSet are special Rx types, that extends their native types.&#xA;// but you can work with a List as a regular list, although is reactive!&#xA;abc.add(12); // pushes 12 to the list, and UPDATES the stream.&#xA;abc[3]; // like Lists, reads the index 3.&#xA;&#xA;&#xA;// equality works with the Rx and the value, but hashCode is always taken from the value&#xA;final number = 12.obs;&#xA;print( number == 12 ); // prints &amp;gt; true&#xA;&#xA;/// Custom Rx Models:&#xA;&#xA;// toJson(), toString() are deferred to the child, so you can implement override on them, and print() the observable directly.&#xA;&#xA;class User {&#xA;    String name, last;&#xA;    int age;&#xA;    User({this.name, this.last, this.age});&#xA;&#xA;    @override&#xA;    String toString() =&amp;gt; &#39;$name $last, $age years old&#39;;&#xA;}&#xA;&#xA;final user = User(name: &#39;John&#39;, last: &#39;Doe&#39;, age: 33).obs;&#xA;&#xA;// `user` is &#34;reactive&#34;, but the properties inside ARE NOT!&#xA;// So, if we change some variable inside of it...&#xA;user.value.name = &#39;Roi&#39;;&#xA;// The widget will not rebuild!,&#xA;// `Rx` don&#39;t have any clue when you change something inside user.&#xA;// So, for custom classes, we need to manually &#34;notify&#34; the change.&#xA;user.refresh();&#xA;&#xA;// or we can use the `update()` method!&#xA;user.update((value){&#xA;  value.name=&#39;Roi&#39;;&#xA;});&#xA;&#xA;print( user );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;StateMixin&lt;/h2&gt; &#xA;&lt;p&gt;Another way to handle your &lt;code&gt;UI&lt;/code&gt; state is use the &lt;code&gt;StateMixin&amp;lt;T&amp;gt;&lt;/code&gt; . To implement it, use the &lt;code&gt;with&lt;/code&gt; to add the &lt;code&gt;StateMixin&amp;lt;T&amp;gt;&lt;/code&gt; to your controller which allows a T model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Controller extends GetController with StateMixin&amp;lt;User&amp;gt;{}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;change()&lt;/code&gt; method change the State whenever we want. Just pass the data and the status in this way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;change(data, status: RxStatus.success());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;RxStatus allow these status:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;RxStatus.loading();&#xA;RxStatus.success();&#xA;RxStatus.empty();&#xA;RxStatus.error(&#39;message&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To represent it in the UI, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class OtherClass extends GetView&amp;lt;Controller&amp;gt; {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;&#xA;      body: controller.obx(&#xA;        (state)=&amp;gt;Text(state.name),&#xA;        &#xA;        // here you can put your custom loading indicator, but&#xA;        // by default would be Center(child:CircularProgressIndicator())&#xA;        onLoading: CustomLoadingIndicator(),&#xA;        onEmpty: Text(&#39;No data found&#39;),&#xA;&#xA;        // here also you can set your own error widget, but by&#xA;        // default will be an Center(child:Text(error))&#xA;        onError: (error)=&amp;gt;Text(error),&#xA;      ),&#xA;    );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;GetView&lt;/h4&gt; &#xA;&lt;p&gt;I love this Widget, is so simple, yet, so useful!&lt;/p&gt; &#xA;&lt;p&gt;Is a &lt;code&gt;const Stateless&lt;/code&gt; Widget that has a getter &lt;code&gt;controller&lt;/code&gt; for a registered &lt;code&gt;Controller&lt;/code&gt;, that&#39;s all.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; class AwesomeController extends GetController {&#xA;   final String title = &#39;My Awesome View&#39;;&#xA; }&#xA;&#xA;  // ALWAYS remember to pass the `Type` you used to register your controller!&#xA; class AwesomeView extends GetView&amp;lt;AwesomeController&amp;gt; {&#xA;   @override&#xA;   Widget build(BuildContext context) {&#xA;     return Container(&#xA;       padding: EdgeInsets.all(20),&#xA;       child: Text(controller.title), // just call `controller.something`&#xA;     );&#xA;   }&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;GetResponsiveView&lt;/h4&gt; &#xA;&lt;p&gt;Extend this widget to build responsive view. this widget contains the &lt;code&gt;screen&lt;/code&gt; property that have all information about the screen size and type.&lt;/p&gt; &#xA;&lt;h5&gt;How to use it&lt;/h5&gt; &#xA;&lt;p&gt;You have two options to build it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;with &lt;code&gt;builder&lt;/code&gt; method you return the widget to build.&lt;/li&gt; &#xA; &lt;li&gt;with methods &lt;code&gt;desktop&lt;/code&gt;, &lt;code&gt;tablet&lt;/code&gt;,&lt;code&gt;phone&lt;/code&gt;, &lt;code&gt;watch&lt;/code&gt;. the specific method will be built when the screen type matches the method when the screen is [ScreenType.Tablet] the &lt;code&gt;tablet&lt;/code&gt; method will be exuded and so on. &lt;strong&gt;Note:&lt;/strong&gt; If you use this method please set the property &lt;code&gt;alwaysUseBuilder&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With &lt;code&gt;settings&lt;/code&gt; property you can set the width limit for the screen types.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SchabanBo/get_page_example/raw/master/docs/Example.gif?raw=true&#34; alt=&#34;example&#34;&gt; Code to this screen &lt;a href=&#34;https://github.com/SchabanBo/get_page_example/raw/master/lib/pages/responsive_example/responsive_view.dart&#34;&gt;code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;GetWidget&lt;/h4&gt; &#xA;&lt;p&gt;Most people have no idea about this Widget, or totally confuse the usage of it. The use case is very rare, but very specific: It &lt;code&gt;caches&lt;/code&gt; a Controller. Because of the &lt;em&gt;cache&lt;/em&gt;, can&#39;t be a &lt;code&gt;const Stateless&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;So, when do you need to &#34;cache&#34; a Controller?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you use, another &#34;not so common&#34; feature of &lt;strong&gt;GetX&lt;/strong&gt;: &lt;code&gt;Get.create()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Get.create(()=&amp;gt;Controller())&lt;/code&gt; will generate a new &lt;code&gt;Controller&lt;/code&gt; each time you call &lt;code&gt;Get.find&amp;lt;Controller&amp;gt;()&lt;/code&gt;,&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s where &lt;code&gt;GetWidget&lt;/code&gt; shines... as you can use it, for example, to keep a list of Todo items. So, if the widget gets &#34;rebuilt&#34;, it will keep the same controller instance.&lt;/p&gt; &#xA;&lt;h4&gt;GetxService&lt;/h4&gt; &#xA;&lt;p&gt;This class is like a &lt;code&gt;GetxController&lt;/code&gt;, it shares the same lifecycle ( &lt;code&gt;onInit()&lt;/code&gt;, &lt;code&gt;onReady()&lt;/code&gt;, &lt;code&gt;onClose()&lt;/code&gt;). But has no &#34;logic&#34; inside of it. It just notifies &lt;strong&gt;GetX&lt;/strong&gt; Dependency Injection system, that this subclass &lt;strong&gt;can not&lt;/strong&gt; be removed from memory.&lt;/p&gt; &#xA;&lt;p&gt;So is super useful to keep your &#34;Services&#34; always reachable and active with &lt;code&gt;Get.find()&lt;/code&gt;. Like: &lt;code&gt;ApiService&lt;/code&gt;, &lt;code&gt;StorageService&lt;/code&gt;, &lt;code&gt;CacheService&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;void&amp;gt; main() async {&#xA;  await initServices(); /// AWAIT SERVICES INITIALIZATION.&#xA;  runApp(SomeApp());&#xA;}&#xA;&#xA;/// Is a smart move to make your Services intiialize before you run the Flutter app.&#xA;/// as you can control the execution flow (maybe you need to load some Theme configuration,&#xA;/// apiKey, language defined by the User... so load SettingService before running ApiService.&#xA;/// so GetMaterialApp() doesnt have to rebuild, and takes the values directly.&#xA;void initServices() async {&#xA;  print(&#39;starting services ...&#39;);&#xA;  /// Here is where you put get_storage, hive, shared_pref initialization.&#xA;  /// or moor connection, or whatever that&#39;s async.&#xA;  await Get.putAsync(() =&amp;gt; DbService().init());&#xA;  await Get.putAsync(SettingsService()).init();&#xA;  print(&#39;All services started...&#39;);&#xA;}&#xA;&#xA;class DbService extends GetxService {&#xA;  Future&amp;lt;DbService&amp;gt; init() async {&#xA;    print(&#39;$runtimeType delays 2 sec&#39;);&#xA;    await 2.delay();&#xA;    print(&#39;$runtimeType ready!&#39;);&#xA;    return this;&#xA;  }&#xA;}&#xA;&#xA;class SettingsService extends GetxService {&#xA;  void init() async {&#xA;    print(&#39;$runtimeType delays 1 sec&#39;);&#xA;    await 1.delay();&#xA;    print(&#39;$runtimeType ready!&#39;);&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The only way to actually delete a &lt;code&gt;GetxService&lt;/code&gt;, is with &lt;code&gt;Get.reset()&lt;/code&gt; which is like a &#34;Hot Reboot&#34; of your app. So remember, if you need absolute persistence of a class instance during the lifetime of your app, use &lt;code&gt;GetxService&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;You can test your controllers like any other class, including their lifecycles:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Controller extends GetxController {&#xA;  @override&#xA;  void onInit() {&#xA;    super.onInit();&#xA;    //Change value to name2&#xA;    name.value = &#39;name2&#39;;&#xA;  }&#xA;&#xA;  @override&#xA;  void onClose() {&#xA;    name.value = &#39;&#39;;&#xA;    super.onClose();&#xA;  }&#xA;&#xA;  final name = &#39;name1&#39;.obs;&#xA;&#xA;  void changeName() =&amp;gt; name.value = &#39;name3&#39;;&#xA;}&#xA;&#xA;void main() {&#xA;  test(&#39;&#39;&#39;&#xA;Test the state of the reactive variable &#34;name&#34; across all of its lifecycles&#39;&#39;&#39;,&#xA;      () {&#xA;    /// You can test the controller without the lifecycle,&#xA;    /// but it&#39;s not recommended unless you&#39;re not using&#xA;    ///  GetX dependency injection&#xA;    final controller = Controller();&#xA;    expect(controller.name.value, &#39;name1&#39;);&#xA;&#xA;    /// If you are using it, you can test everything,&#xA;    /// including the state of the application after each lifecycle.&#xA;    Get.put(controller); // onInit was called&#xA;    expect(controller.name.value, &#39;name2&#39;);&#xA;&#xA;    /// Test your functions&#xA;    controller.changeName();&#xA;    expect(controller.name.value, &#39;name3&#39;);&#xA;&#xA;    /// onClose was called&#xA;    Get.delete&amp;lt;Controller&amp;gt;();&#xA;&#xA;    expect(controller.name.value, &#39;&#39;);&#xA;  });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Tips&lt;/h4&gt; &#xA;&lt;h5&gt;Mockito or mocktail&lt;/h5&gt; &#xA;&lt;p&gt;If you need to mock your GetxController/GetxService, you should extend GetxController, and mixin it with Mock, that way&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class NotificationServiceMock extends GetxService with Mock implements NotificationService {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Using Get.reset()&lt;/h5&gt; &#xA;&lt;p&gt;If you are testing widgets, or test groups, use Get.reset at the end of your test or in tearDown to reset all settings from your previous test.&lt;/p&gt; &#xA;&lt;h5&gt;Get.testMode&lt;/h5&gt; &#xA;&lt;p&gt;if you are using your navigation in your controllers, use &lt;code&gt;Get.testMode = true&lt;/code&gt; at the beginning of your main.&lt;/p&gt; &#xA;&lt;h1&gt;Breaking changes from 2.0&lt;/h1&gt; &#xA;&lt;p&gt;1- Rx types:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Before&lt;/th&gt; &#xA;   &lt;th&gt;After&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxString&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IntX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxInt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MapX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxMap&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ListX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxList&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NumX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxNum&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DoubleX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RxDouble&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;RxController and GetBuilder now have merged, you no longer need to memorize which controller you want to use, just use GetxController, it will work for simple state management and for reactive as well.&lt;/p&gt; &#xA;&lt;p&gt;2- NamedRoutes Before:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  namedRoutes: {&#xA;    &#39;/&#39;: GetRoute(page: Home()),&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;GetMaterialApp(&#xA;  getPages: [&#xA;    GetPage(name: &#39;/&#39;, page: () =&amp;gt; Home()),&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Why this change? Often, it may be necessary to decide which page will be displayed from a parameter, or a login token, the previous approach was inflexible, as it did not allow this. Inserting the page into a function has significantly reduced the RAM consumption, since the routes will not be allocated in memory since the app was started, and it also allowed to do this type of approach:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;GetStorage box = GetStorage();&#xA;&#xA;GetMaterialApp(&#xA;  getPages: [&#xA;    GetPage(name: &#39;/&#39;, page:(){&#xA;      return box.hasData(&#39;token&#39;) ? Home() : Login();&#xA;    })&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Why Getx?&lt;/h1&gt; &#xA;&lt;p&gt;1- Many times after a Flutter update, many of your packages will break. Sometimes compilation errors happen, errors often appear that there are still no answers about, and the developer needs to know where the error came from, track the error, only then try to open an issue in the corresponding repository, and see its problem solved. Get centralizes the main resources for development (State, dependency and route management), allowing you to add a single package to your pubspec, and start working. After a Flutter update, the only thing you need to do is update the Get dependency, and get to work. Get also resolves compatibility issues. How many times a version of a package is not compatible with the version of another, because one uses a dependency in one version, and the other in another version? This is also not a concern using Get, as everything is in the same package and is fully compatible.&lt;/p&gt; &#xA;&lt;p&gt;2- Flutter is easy, Flutter is incredible, but Flutter still has some boilerplate that may be unwanted for most developers, such as &lt;code&gt;Navigator.of(context).push (context, builder [...]&lt;/code&gt;. Get simplifies development. Instead of writing 8 lines of code to just call a route, you can just do it: &lt;code&gt;Get.to(Home())&lt;/code&gt; and you&#39;re done, you&#39;ll go to the next page. Dynamic web urls are a really painful thing to do with Flutter currently, and that with GetX is stupidly simple. Managing states in Flutter, and managing dependencies is also something that generates a lot of discussion, as there are hundreds of patterns in the pub. But there is nothing as easy as adding a &#34;.obs&#34; at the end of your variable, and place your widget inside an Obx, and that&#39;s it, all updates to that variable will be automatically updated on the screen.&lt;/p&gt; &#xA;&lt;p&gt;3- Ease without worrying about performance. Flutter&#39;s performance is already amazing, but imagine that you use a state manager, and a locator to distribute your blocs/stores/controllers/ etc. classes. You will have to manually call the exclusion of that dependency when you don&#39;t need it. But have you ever thought of simply using your controller, and when it was no longer being used by anyone, it would simply be deleted from memory? That&#39;s what GetX does. With SmartManagement, everything that is not being used is deleted from memory, and you shouldn&#39;t have to worry about anything but programming. You will be assured that you are consuming the minimum necessary resources, without even having created a logic for this.&lt;/p&gt; &#xA;&lt;p&gt;4- Actual decoupling. You may have heard the concept &#34;separate the view from the business logic&#34;. This is not a peculiarity of BLoC, MVC, MVVM, and any other standard on the market has this concept. However, this concept can often be mitigated in Flutter due to the use of context. If you need context to find an InheritedWidget, you need it in the view, or pass the context by parameter. I particularly find this solution very ugly, and to work in teams we will always have a dependence on View&#39;s business logic. Getx is unorthodox with the standard approach, and while it does not completely ban the use of StatefulWidgets, InitState, etc., it always has a similar approach that can be cleaner. Controllers have life cycles, and when you need to make an APIREST request for example, you don&#39;t depend on anything in the view. You can use onInit to initiate the http call, and when the data arrives, the variables will be populated. As GetX is fully reactive (really, and works under streams), once the items are filled, all widgets that use that variable will be automatically updated in the view. This allows people with UI expertise to work only with widgets, and not have to send anything to business logic other than user events (like clicking a button), while people working with business logic will be free to create and test the business logic separately.&lt;/p&gt; &#xA;&lt;p&gt;This library will always be updated and implementing new features. Feel free to offer PRs and contribute to them.&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;h2&gt;Community channels&lt;/h2&gt; &#xA;&lt;p&gt;GetX has a highly active and helpful community. If you have questions, or would like any assistance regarding the use of this framework, please join our community channels, your question will be answered more quickly, and it will be the most suitable place. This repository is exclusive for opening issues, and requesting resources, but feel free to be part of GetX Community.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Slack&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Telegram&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://communityinviter.com/apps/getxworkspace/getx&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-orange.svg?sanitize=true&#34; alt=&#34;Get on Slack&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://discord.com/invite/9Hpt99N&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/722900883784073290.svg?logo=discord&#34; alt=&#34;Discord Shield&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://t.me/joinchat/PhdbJRmsZNpAqSLJL6bH7g&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Telegram-blue.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Want to contribute to the project? We will be proud to highlight you as one of our collaborators. Here are some points where you can contribute and make Get (and Flutter) even better.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Helping to translate the readme into other languages.&lt;/li&gt; &#xA; &lt;li&gt;Adding documentation to the readme (a lot of Get&#39;s functions haven&#39;t been documented yet).&lt;/li&gt; &#xA; &lt;li&gt;Write articles or make videos teaching how to use Get (they will be inserted in the Readme and in the future in our Wiki).&lt;/li&gt; &#xA; &lt;li&gt;Offering PRs for code/tests.&lt;/li&gt; &#xA; &lt;li&gt;Including new functions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Any contribution is welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Articles and videos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLV1fXIAyjeuZ6M8m56zajMUwu4uE3-SL0&#34;&gt;Flutter Getx EcoSystem package for arabic people&lt;/a&gt; - Tutorial by &lt;a href=&#34;https://github.com/UsamaElgendy&#34;&gt;Pesa Coder&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/swlh/flutter-dynamic-themes-in-3-lines-c3b375f292e3&#34;&gt;Dynamic Themes in 3 lines using GetX‚Ñ¢&lt;/a&gt; - Tutorial by &lt;a href=&#34;https://github.com/RodBr&#34;&gt;Rod Brown&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RaqPIoJSTtI&#34;&gt;Complete GetX‚Ñ¢ Navigation&lt;/a&gt; - Route management video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CNpXbeI_slw&#34;&gt;Complete GetX State Management&lt;/a&gt; - State management video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/ttQtlX_Q0eU&#34;&gt;GetX‚Ñ¢ Other Features&lt;/a&gt; - Utils, storage, bindings and other features video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=BiV0DcXgk58&#34;&gt;Firestore User with GetX | Todo App&lt;/a&gt; - Video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-H-T_BSgfOE&#34;&gt;Firebase Auth with GetX | Todo App&lt;/a&gt; - Video by Amateur Coder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/the-flutter-getx-ecosystem-state-management-881c7235511d&#34;&gt;The Flutter GetX‚Ñ¢ Ecosystem ~ State Management&lt;/a&gt; - State management by &lt;a href=&#34;https://github.com/imaachman&#34;&gt;Aachman Garg&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/the-flutter-getx-ecosystem-dependency-injection-8e763d0ec6b9&#34;&gt;The Flutter GetX‚Ñ¢ Ecosystem ~ Dependency Injection&lt;/a&gt; - Dependency Injection by &lt;a href=&#34;https://github.com/imaachman&#34;&gt;Aachman Garg&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=IYQgtu9TM74&#34;&gt;GetX, the all-in-one Flutter package&lt;/a&gt; - A brief tutorial covering State Management and Navigation by Thad Carnevalli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=EcnqFasHf18&#34;&gt;Build a To-do List App from scratch using Flutter and GetX&lt;/a&gt; - UI + State Management + Storage video by Thad Carnevalli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jeffmcmorris/getx-flutter-firebase-auth-example-b383c1dd1de2&#34;&gt;GetX Flutter Firebase Auth Example&lt;/a&gt; - Article by Jeff McMorris.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.appwithflutter.com/flutter-state-management-with-getx/&#34;&gt;Flutter State Management with GetX ‚Äì Complete App&lt;/a&gt; - by App With Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.appwithflutter.com/flutter-routing-using-get-package/&#34;&gt;Flutter Routing with Animation using Get Package&lt;/a&gt; - by App With Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dartpad.dev/2b3d0d6f9d4e312c5fdbefc414c1727e?&#34;&gt;A minimal example on dartpad&lt;/a&gt; - by &lt;a href=&#34;https://github.com/roipeker&#34;&gt;Roi Peker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>flutterchina/dio</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/flutterchina/dio</id>
    <link href="https://github.com/flutterchina/dio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A powerful Http client for Dart, which supports Interceptors, FormData, Request Cancellation, File Downloading, Timeout etc.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Language: &lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/README-ZH.md&#34;&gt;‰∏≠ÊñáÁÆÄ‰Ωì&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;dio&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/dio&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/dio.svg?style=flat-square&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flutterchina/dio&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-flutter%7Cflutter%20web%7Cdart%20vm-ff69b4.svg?style=flat-square&#34; alt=&#34;support&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A powerful Http client for Dart, which supports Interceptors, Global configuration, FormData, Request Cancellation, File downloading, Timeout etc.&lt;/p&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;h3&gt;Add dependency&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  dio: ^4.0.6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Already know Dio 3 and just want to learn about what&#39;s new in Dio 4? Check out the &lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/migration_to_4.x.md&#34;&gt;Migration Guide&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Super simple to use&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:dio/dio.dart&#39;;&#xA;void getHttp() async {&#xA;  try {&#xA;    var response = await Dio().get(&#39;http://www.google.com&#39;);&#xA;    print(response);&#xA;  } catch (e) {&#xA;    print(e);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;awesome-dio&lt;/h2&gt; &#xA;&lt;p&gt;üéâ A curated list of awesome things related to dio.&lt;/p&gt; &#xA;&lt;h3&gt;Plugins (support 4.x)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Plugins&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutterchina/dio/tree/master/plugins/cookie_manager&#34;&gt;dio_cookie_manager&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/dio_cookie_manager&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/dio_cookie_manager.svg?style=flat-square&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A cookie manager for Dio&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutterchina/dio/tree/master/plugins/http2_adapter&#34;&gt;dio_http2_adapter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/dio_http2_adapter&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/dio_http2_adapter.svg?style=flat-square&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A Dio HttpClientAdapter which support Http/2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rodion-m/dio_smart_retry&#34;&gt;dio_smart_retry&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/dio_smart_retry&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/dio_smart_retry.svg?style=flat-square&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flexible retry library for Dio&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/diefferson/http_certificate_pinning&#34;&gt;http_certificate_pinning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/http_certificate_pinning&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/http_certificate_pinning.svg?style=flat-square&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Https Certificate pinning for Flutter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/OwnWeb/curl_logger_dio_interceptor&#34;&gt;curl_logger_dio_interceptor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/curl_logger_dio_interceptor&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/curl_logger_dio_interceptor.svg?style=flat-square&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A Flutter curl-command generator for Dio.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/llfbandit/dio_cache_interceptor&#34;&gt;dio_cache_interceptor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/dio_cache_interceptor&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/dio_cache_interceptor.svg?style=flat-square&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dio HTTP cache interceptor with multiple stores respecting HTTP directives (or not)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hurshi/dio-http-cache&#34;&gt;dio_http_cache&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/dio_http_cache&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/dio_http_cache.svg?style=flat-square&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A simple cache library for Dio like Rxcache in Android&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Milad-Akarie/pretty_dio_logger&#34;&gt;pretty_dio_logger&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/pretty_dio_logger&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/pretty_dio_logger.svg?style=flat-square&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pretty Dio logger is a Dio interceptor that logs network calls in a pretty, easy to read format.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Related Projects&lt;/h3&gt; &#xA;&lt;p&gt;Welcome to submit Dio&#39;s third-party plugins and related libraries &lt;a href=&#34;https://github.com/flutterchina/dio/issues/347&#34;&gt;here&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#dio-apis&#34;&gt;Dio APIs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#request-options&#34;&gt;Request Options&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#response-schema&#34;&gt;Response Schema&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#interceptors&#34;&gt;Interceptors&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#cookie-manager&#34;&gt;Cookie Manager&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#handling-errors&#34;&gt;Handling Errors&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#using-applicationx-www-form-urlencoded-format&#34;&gt;Using application/x-www-form-urlencoded format&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#sending-formdata&#34;&gt;Sending FormData&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#transformer&#34;&gt;Transformer&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#using-proxy&#34;&gt;Using proxy&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#https-certificate-verification&#34;&gt;Https certificate verification&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#httpclientadapter&#34;&gt;HttpClientAdapter&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#cancellation&#34;&gt;Cancellation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#extends-dio-class&#34;&gt;Extends Dio class&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#http2-support&#34;&gt;Http2 support&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/dio/develop/#features-and-bugs&#34;&gt;Features and bugs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Performing a &lt;code&gt;GET&lt;/code&gt; request:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Response response;&#xA;var dio = Dio();&#xA;response = await dio.get(&#39;/test?id=12&amp;amp;name=wendu&#39;);&#xA;print(response.data.toString());&#xA;// Optionally the request above could also be done as&#xA;response = await dio.get(&#39;/test&#39;, queryParameters: {&#39;id&#39;: 12, &#39;name&#39;: &#39;wendu&#39;});&#xA;print(response.data.toString());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Performing a &lt;code&gt;POST&lt;/code&gt; request:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;response = await dio.post(&#39;/test&#39;, data: {&#39;id&#39;: 12, &#39;name&#39;: &#39;wendu&#39;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Performing multiple concurrent requests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;response = await Future.wait([dio.post(&#39;/info&#39;), dio.get(&#39;/token&#39;)]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Downloading a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;response = await dio.download(&#39;https://www.google.com/&#39;, &#39;./xx.html&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get response stream:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Response&amp;lt;ResponseBody&amp;gt; rs;&#xA;rs = await Dio().get&amp;lt;ResponseBody&amp;gt;(url,&#xA;  options: Options(responseType: ResponseType.stream),  // set responseType to `stream`&#xA;);&#xA;print(rs.data.stream); //response stream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get response with bytes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Response&amp;lt;List&amp;lt;int&amp;gt;&amp;gt; rs &#xA;rs = await Dio().get&amp;lt;List&amp;lt;int&amp;gt;&amp;gt;(url,&#xA; options: Options(responseType: ResponseType.bytes), // set responseType to `bytes`&#xA;);&#xA;print(rs.data); // List&amp;lt;int&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sending FormData:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var formData = FormData.fromMap({&#xA;  &#39;name&#39;: &#39;wendux&#39;,&#xA;  &#39;age&#39;: 25,&#xA;});&#xA;var response = await dio.post(&#39;/info&#39;, data: formData);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Uploading multiple files to server by FormData:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var formData = FormData.fromMap({&#xA;  &#39;name&#39;: &#39;wendux&#39;,&#xA;  &#39;age&#39;: 25,&#xA;  &#39;file&#39;: await MultipartFile.fromFile(&#39;./text.txt&#39;, filename: &#39;upload.txt&#39;),&#xA;  &#39;files&#39;: [&#xA;    await MultipartFile.fromFile(&#39;./text1.txt&#39;, filename: &#39;text1.txt&#39;),&#xA;    await MultipartFile.fromFile(&#39;./text2.txt&#39;, filename: &#39;text2.txt&#39;),&#xA;  ]&#xA;});&#xA;var response = await dio.post(&#39;/info&#39;, data: formData);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Listening the uploading progress:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;response = await dio.post(&#xA;  &#39;http://www.dtworkroom.com/doris/1/2.0.0/test&#39;,&#xA;  data: {&#39;aa&#39;: &#39;bb&#39; * 22},&#xA;  onSendProgress: (int sent, int total) {&#xA;    print(&#39;$sent $total&#39;);&#xA;  },&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Post binary data by Stream:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Binary data&#xA;List&amp;lt;int&amp;gt; postData = &amp;lt;int&amp;gt;[...];&#xA;await dio.post(&#xA;  url,&#xA;  data: Stream.fromIterable(postData.map((e) =&amp;gt; [e])), //create a Stream&amp;lt;List&amp;lt;int&amp;gt;&amp;gt;&#xA;  options: Options(&#xA;    headers: {&#xA;      Headers.contentLengthHeader: postData.length, // set content-length&#xA;    },&#xA;  ),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;‚Ä¶you can find all examples code &lt;a href=&#34;https://github.com/flutterchina/dio/tree/master/example&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Dio APIs&lt;/h2&gt; &#xA;&lt;h3&gt;Creating an instance and set default configs.&lt;/h3&gt; &#xA;&lt;p&gt;You can create instance of Dio with an optional &lt;code&gt;BaseOptions&lt;/code&gt; object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var dio = Dio(); // with default Options&#xA;&#xA;// Set default configs&#xA;dio.options.baseUrl = &#39;https://www.xx.com/api&#39;;&#xA;dio.options.connectTimeout = 5000; //5s&#xA;dio.options.receiveTimeout = 3000;&#xA;&#xA;// or new Dio with a BaseOptions instance.&#xA;var options = BaseOptions(&#xA;  baseUrl: &#39;https://www.xx.com/api&#39;,&#xA;  connectTimeout: 5000,&#xA;  receiveTimeout: 3000,&#xA;);&#xA;Dio dio = Dio(options);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The core API in Dio instance is:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Future&#xA;  &lt;response&gt;&#xA;    request(String path, {data,Map queryParameters, Options options,CancelToken cancelToken, ProgressCallback onSendProgress, ProgressCallback onReceiveProgress)&#xA;  &lt;/response&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;response = await dio.request(&#xA;  &#39;/test&#39;,&#xA;  data: {&#39;id&#39;:12,&#39;name&#39;:&#39;xx&#39;},&#xA;  options: Options(method:&#39;GET&#39;),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Request method aliases&lt;/h3&gt; &#xA;&lt;p&gt;For convenience aliases have been provided for all supported request methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;Response&amp;gt; get(...)&#xA;&#xA;Future&amp;lt;Response&amp;gt; post(...)&#xA;&#xA;Future&amp;lt;Response&amp;gt; put(...)&#xA;&#xA;Future&amp;lt;Response&amp;gt; delete(...)&#xA;&#xA;Future&amp;lt;Response&amp;gt; head(...)&#xA;&#xA;Future&amp;lt;Response&amp;gt; put(...)&#xA;&#xA;Future&amp;lt;Response&amp;gt; path(...)&#xA;&#xA;Future&amp;lt;Response&amp;gt; download(...)&#xA;&#xA;Future&amp;lt;Response&amp;gt; fetch(RequestOptions)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Request Options&lt;/h2&gt; &#xA;&lt;p&gt;The Options class describes the http request information and configuration. Each Dio instance has a base config for all requests maked by itself, and we can override the base config with [Options] when make a single request. The [BaseOptions] declaration as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;{&#xA;  /// Http method.&#xA;  String method;&#xA;&#xA;  /// Request base url, it can contain sub path, like: &#39;https://www.google.com/api/&#39;.&#xA;  String baseUrl;&#xA;&#xA;  /// Http request headers.&#xA;  Map&amp;lt;String, dynamic&amp;gt; headers;&#xA;&#xA;   /// Timeout in milliseconds for opening  url.&#xA;  int connectTimeout;&#xA;&#xA;   ///  Whenever more than [receiveTimeout] (in milliseconds) passes between two events from response stream,&#xA;  ///  [Dio] will throw the [DioError] with [DioErrorType.RECEIVE_TIMEOUT].&#xA;  ///  Note: This is not the receiving time limitation.&#xA;  int receiveTimeout;&#xA;&#xA;  /// Request data, can be any type.&#xA;  T data;&#xA;&#xA;  /// If the `path` starts with &#39;http(s)&#39;, the `baseURL` will be ignored, otherwise,&#xA;  /// it will be combined and then resolved with the baseUrl.&#xA;  String path=&#39;&#39;;&#xA;&#xA;  /// The request Content-Type. The default value is &#39;application/json; charset=utf-8&#39;.&#xA;  /// If you want to encode request body with &#39;application/x-www-form-urlencoded&#39;,&#xA;  /// you can set [Headers.formUrlEncodedContentType], and [Dio]&#xA;  /// will automatically encode the request body.&#xA;  String contentType;&#xA;&#xA;  /// [responseType] indicates the type of data that the server will respond with&#xA;  /// options which defined in [ResponseType] are `JSON`, `STREAM`, `PLAIN`.&#xA;  ///&#xA;  /// The default value is `JSON`, dio will parse response string to json object automatically&#xA;  /// when the content-type of response is &#39;application/json&#39;.&#xA;  ///&#xA;  /// If you want to receive response data with binary bytes, for example,&#xA;  /// downloading a image, use `STREAM`.&#xA;  ///&#xA;  /// If you want to receive the response data with String, use `PLAIN`.&#xA;  ResponseType responseType;&#xA;&#xA;  /// `validateStatus` defines whether the request is successful for a given&#xA;  /// HTTP response status code. If `validateStatus` returns `true` ,&#xA;  /// the request will be perceived as successful; otherwise, considered as failed.&#xA;  ValidateStatus validateStatus;&#xA;&#xA;  /// Custom field that you can retrieve it later in [Interceptor]„ÄÅ[Transformer] and the   [Response] object.&#xA;  Map&amp;lt;String, dynamic&amp;gt; extra;&#xA;  &#xA;  /// Common query parameters&#xA;  Map&amp;lt;String, dynamic /*String|Iterable&amp;lt;String&amp;gt;*/ &amp;gt; queryParameters;  &#xA;  &#xA;   /// [collectionFormat] indicates the format of collection data in request&#xA;  /// options which defined in [CollectionFormat] are `csv`, `ssv`, `tsv`, `pipes`, `multi`,`multiCompatible`.&#xA;  /// The default value is `multiCompatible`&#xA;  late CollectionFormat collectionFormat;&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is a complete example &lt;a href=&#34;https://github.com/flutterchina/dio/raw/master/example/options.dart&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Response Schema&lt;/h2&gt; &#xA;&lt;p&gt;The response for a request contains the following information.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;{&#xA;  /// Response body. may have been transformed, please refer to [ResponseType].&#xA;  T? data;&#xA;  /// Response headers.&#xA;  Headers headers;&#xA;  /// The corresponding request info.&#xA;  Options request;&#xA;  /// Http status code.&#xA;  int? statusCode;&#xA;  String? statusMessage;&#xA;  /// Whether redirect &#xA;  bool? isRedirect;  &#xA;  /// redirect info    &#xA;  List&amp;lt;RedirectInfo&amp;gt; redirects ;&#xA;  /// Returns the final real request uri (maybe redirect). &#xA;  Uri realUri;    &#xA;  /// Custom field that you can retrieve it later in `then`.&#xA;  Map&amp;lt;String, dynamic&amp;gt; extra;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When request is succeed, you will receive the response as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Response response = await dio.get(&#39;https://www.google.com&#39;);&#xA;print(response.data);&#xA;print(response.headers);&#xA;print(response.requestOptions);&#xA;print(response.statusCode);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Interceptors&lt;/h2&gt; &#xA;&lt;p&gt;For each dio instance, We can add one or more interceptors, by which we can intercept requests „ÄÅ responses and errors before they are handled by &lt;code&gt;then&lt;/code&gt; or &lt;code&gt;catchError&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;dio.interceptors.add(InterceptorsWrapper(&#xA;    onRequest:(options, handler){&#xA;     // Do something before request is sent&#xA;     return handler.next(options); //continue&#xA;     // If you want to resolve the request with some custom dataÔºå&#xA;     // you can resolve a `Response` object eg: `handler.resolve(response)`.&#xA;     // If you want to reject the request with a error message,&#xA;     // you can reject a `DioError` object eg: `handler.reject(dioError)`&#xA;    },&#xA;    onResponse:(response,handler) {&#xA;     // Do something with response data&#xA;     return handler.next(response); // continue&#xA;     // If you want to reject the request with a error message,&#xA;     // you can reject a `DioError` object eg: `handler.reject(dioError)` &#xA;    },&#xA;    onError: (DioError e, handler) {&#xA;     // Do something with response error&#xA;     return  handler.next(e);//continue&#xA;     // If you want to resolve the request with some custom dataÔºå&#xA;     // you can resolve a `Response` object eg: `handler.resolve(response)`.  &#xA;    }&#xA;));&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Simple interceptor example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:dio/dio.dart&#39;;&#xA;class CustomInterceptors extends Interceptor {&#xA;  @override&#xA;  void onRequest(RequestOptions options, RequestInterceptorHandler handler) {&#xA;    print(&#39;REQUEST[${options.method}] =&amp;gt; PATH: ${options.path}&#39;);&#xA;    return super.onRequest(options, handler);&#xA;  }&#xA;  @override&#xA;  void onResponse(Response response, ResponseInterceptorHandler handler) {&#xA;    print(&#39;RESPONSE[${response.statusCode}] =&amp;gt; PATH: ${response.requestOptions.path}&#39;);&#xA;    super.onResponse(response, handler);&#xA;  }&#xA;  @override&#xA;  Future onError(DioError err, ErrorInterceptorHandler handler) {&#xA;    print(&#39;ERROR[${err.response?.statusCode}] =&amp;gt; PATH: ${err.requestOptions.path}&#39;);&#xA;    return super.onError(err, handler);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Resolve and reject the request&lt;/h3&gt; &#xA;&lt;p&gt;In all interceptors, you can interfere with their execution flow. If you want to resolve the request/response with some custom dataÔºåyou can call &lt;code&gt;handler.resolve(Response)&lt;/code&gt;. If you want to reject the request/response with a error message, you can call &lt;code&gt;handler.reject(dioError)&lt;/code&gt; .&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;dio.interceptors.add(InterceptorsWrapper(&#xA;  onRequest:(options, handler) {&#xA;   return handler.resolve(Response(requestOptions:options,data:&#39;fake data&#39;));&#xA;  },&#xA;));&#xA;Response response = await dio.get(&#39;/test&#39;);&#xA;print(response.data);//&#39;fake data&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;QueuedInterceptor&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Interceptor&lt;/code&gt; can be executed concurrently, that is, all of the requests enter the interceptor at once, rather than executing sequentially. However, in some cases we expect that requests enter the interceptor sequentially like #590 „ÄÇ Therefore, we need to provide a mechanism for sequential accessÔºàone by oneÔºâ to interceptors and &lt;code&gt;QueuedInterceptor&lt;/code&gt; can solve this problem.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;Because of security reasons, we need all the requests to set up a csrfToken in the header, if csrfToken does not exist, we need to request a csrfToken first, and then perform the network request, because the request csrfToken progress is asynchronous, so we need to execute this async request in request interceptor. The code is as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;  var dio = Dio();&#xA;  //  dio instance to request token&#xA;  var tokenDio = Dio();&#xA;  String? csrfToken;&#xA;  dio.options.baseUrl = &#39;http://www.dtworkroom.com/doris/1/2.0.0/&#39;;&#xA;  tokenDio.options = dio.options;&#xA;  dio.interceptors.add(QueuedInterceptorsWrapper(&#xA;    onRequest: (options, handler) {&#xA;      print(&#39;send requestÔºöpath:${options.path}ÔºåbaseURL:${options.baseUrl}&#39;);&#xA;      if (csrfToken == null) {&#xA;        print(&#39;no tokenÔºårequest token firstly...&#39;);&#xA;        tokenDio.get(&#39;/token&#39;).then((d) {&#xA;          options.headers[&#39;csrfToken&#39;] = csrfToken = d.data[&#39;data&#39;][&#39;token&#39;];&#xA;          print(&#39;request token succeed, value: &#39; + d.data[&#39;data&#39;][&#39;token&#39;]);&#xA;          print(&#xA;              &#39;continue to perform requestÔºöpath:${options.path}ÔºåbaseURL:${options.path}&#39;);&#xA;          handler.next(options);&#xA;        }).catchError((error, stackTrace) {&#xA;          handler.reject(error, true);&#xA;        });&#xA;      } else {&#xA;        options.headers[&#39;csrfToken&#39;] = csrfToken;&#xA;        return handler.next(options);&#xA;      }&#xA;    },&#xA;   ); &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can clean the waiting queue by calling &lt;code&gt;clear()&lt;/code&gt;;&lt;/p&gt; &#xA;&lt;p&gt;For complete codes click &lt;a href=&#34;https://github.com/flutterchina/dio/raw/develop/example/queued_interceptor_crsftoken.dart&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Log&lt;/h3&gt; &#xA;&lt;p&gt;You can set &lt;code&gt;LogInterceptor&lt;/code&gt; to print request/response log automaticlly, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;dio.interceptors.add(LogInterceptor(responseBody: false)); //ÂºÄÂêØËØ∑Ê±ÇÊó•Âøó&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom Interceptor&lt;/h3&gt; &#xA;&lt;p&gt;You can custom interceptor by extending the &lt;code&gt;Interceptor/QueuedInterceptor&lt;/code&gt; class. There is an example that implementing a simple cache policy: &lt;a href=&#34;https://github.com/flutterchina/dio/raw/master/example/custom_cache_interceptor.dart&#34;&gt;custom cache interceptor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Cookie Manager&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flutterchina/dio/tree/master/plugins/cookie_manager&#34;&gt;dio_cookie_manager&lt;/a&gt; package is a cookie manager for Dio.&lt;/p&gt; &#xA;&lt;h2&gt;Handling Errors&lt;/h2&gt; &#xA;&lt;p&gt;When a error occurs, Dio will wrap the &lt;code&gt;Error/Exception&lt;/code&gt; to a &lt;code&gt;DioError&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;try {&#xA;  //404&#xA;  await dio.get(&#39;https://wendux.github.io/xsddddd&#39;);&#xA;} on DioError catch (e) {&#xA;  // The request was made and the server responded with a status code&#xA;  // that falls out of the range of 2xx and is also not 304.&#xA;  if (e.response != null) {&#xA;    print(e.response.data)&#xA;    print(e.response.headers)&#xA;    print(e.response.requestOptions)&#xA;  } else {&#xA;    // Something happened in setting up or sending the request that triggered an Error&#xA;    print(e.requestOptions)&#xA;    print(e.message)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DioError scheme&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; {&#xA;  /// Response info, it may be `null` if the request can&#39;t reach to&#xA;  /// the http server, for example, occurring a dns error, network is not available.&#xA;  Response? response;&#xA;  /// Request info.&#xA;  RequestOptions? request;&#xA;  /// Error descriptions.&#xA;  String message;&#xA;&#xA;  DioErrorType type;&#xA;  /// The original error/exception object; It&#39;s usually not null when `type`&#xA;  /// is DioErrorType.DEFAULT&#xA;  dynamic? error;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DioErrorType&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;enum DioErrorType {&#xA;  /// It occurs when url is opened timeout.&#xA;  connectTimeout,&#xA;&#xA;  /// It occurs when url is sent timeout.&#xA;  sendTimeout,&#xA;&#xA;  ///It occurs when receiving timeout.&#xA;  receiveTimeout,&#xA;&#xA;  /// When the server response, but with a incorrect status, such as 404, 503...&#xA;  response,&#xA;&#xA;  /// When the request is cancelled, dio will throw a error with this type.&#xA;  cancel,&#xA;&#xA;  /// Default error type, Some other Error. In this case, you can&#xA;  /// use the DioError.error if it is not null.&#xA;  other,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using application/x-www-form-urlencoded format&lt;/h2&gt; &#xA;&lt;p&gt;By default, Dio serializes request data(except String type) to &lt;code&gt;JSON&lt;/code&gt;. To send data in the &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format instead, you can :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;//Instance level&#xA;dio.options.contentType= Headers.formUrlEncodedContentType;&#xA;//or works once&#xA;dio.post(&#xA;  &#39;/info&#39;,&#xA;  data: {&#39;id&#39;: 5},&#xA;  options: Options(contentType: Headers.formUrlEncodedContentType),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sending FormData&lt;/h2&gt; &#xA;&lt;p&gt;You can also send FormData with Dio, which will send data in the &lt;code&gt;multipart/form-data&lt;/code&gt;, and it supports uploading files.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var formData = FormData.fromMap({&#xA;  &#39;name&#39;: &#39;wendux&#39;,&#xA;  &#39;age&#39;: 25,&#xA;  &#39;file&#39;: await MultipartFile.fromFile(&#39;./text.txt&#39;,filename: &#39;upload.txt&#39;)&#xA;});&#xA;response = await dio.post(&#39;/info&#39;, data: formData);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is a complete example &lt;a href=&#34;https://github.com/flutterchina/dio/raw/master/example/formdata.dart&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Multiple files upload&lt;/h3&gt; &#xA;&lt;p&gt;There are two ways to add multiple files to &lt;code&gt; FormData&lt;/code&gt;Ôºå the only difference is that upload keys are different for array types„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FormData.fromMap({&#xA;  &#39;files&#39;: [&#xA;    MultipartFile.fromFileSync(&#39;./example/upload.txt&#39;, filename: &#39;upload.txt&#39;),&#xA;    MultipartFile.fromFileSync(&#39;./example/upload.txt&#39;, filename: &#39;upload.txt&#39;),&#xA;  ]&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The upload key eventually becomes &#39;files[]&#39;ÔºåThis is because many back-end services add a middle bracket to key when they get an array of files. &lt;strong&gt;If you don&#39;t want ‚Äú[]‚Äù&lt;/strong&gt;Ôºåyou should create FormData as followsÔºàDon&#39;t use &lt;code&gt;FormData.fromMap&lt;/code&gt;Ôºâ:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var formData = FormData();&#xA;formData.files.addAll([&#xA;  MapEntry(&#39;files&#39;,&#xA;    MultipartFile.fromFileSync(&#39;./example/upload.txt&#39;,filename: &#39;upload.txt&#39;),&#xA;  ),&#xA;  MapEntry(&#39;files&#39;,&#xA;    MultipartFile.fromFileSync(&#39;./example/upload.txt&#39;,filename: &#39;upload.txt&#39;),&#xA;  ),&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Transformer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Transformer&lt;/code&gt; allows changes to the request/response data before it is sent/received to/from the server. This is only applicable for request methods &#39;PUT&#39;, &#39;POST&#39;, and &#39;PATCH&#39;. Dio has already implemented a &lt;code&gt;DefaultTransformer&lt;/code&gt;, and as the default &lt;code&gt;Transformer&lt;/code&gt;. If you want to customize the transformation of request/response data, you can provide a &lt;code&gt;Transformer&lt;/code&gt; by your self, and replace the &lt;code&gt;DefaultTransformer&lt;/code&gt; by setting the &lt;code&gt;dio.transformer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;In flutter&lt;/h3&gt; &#xA;&lt;p&gt;If you use dio in flutter development, you&#39;d better to decode json in background with [compute] function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;// Must be top-level function&#xA;_parseAndDecode(String response) {&#xA;  return jsonDecode(response);&#xA;}&#xA;&#xA;parseJson(String text) {&#xA;  return compute(_parseAndDecode, text);&#xA;}&#xA;&#xA;void main() {&#xA;  ...&#xA;  //Custom jsonDecodeCallback&#xA;  (dio.transformer as DefaultTransformer).jsonDecodeCallback = parseJson;&#xA;  runApp(MyApp());&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other Example&lt;/h3&gt; &#xA;&lt;p&gt;There is an example for &lt;a href=&#34;https://github.com/flutterchina/dio/raw/master/example/transfomer.dart&#34;&gt;customizing Transformer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;HttpClientAdapter&lt;/h2&gt; &#xA;&lt;p&gt;HttpClientAdapter is a bridge between Dio and HttpClient.&lt;/p&gt; &#xA;&lt;p&gt;Dio implements standard and friendly API for developer.&lt;/p&gt; &#xA;&lt;p&gt;HttpClient: It is the real object that makes Http requests.&lt;/p&gt; &#xA;&lt;p&gt;We can use any HttpClient not just &lt;code&gt;dart:io:HttpClient&lt;/code&gt; to make the Http request. And all we need is providing a &lt;code&gt;HttpClientAdapter&lt;/code&gt;. The default HttpClientAdapter for Dio is &lt;code&gt;DefaultHttpClientAdapter&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;dio.httpClientAdapter = new DefaultHttpClientAdapter();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flutterchina/dio/raw/master/example/adapter.dart&#34;&gt;Here&lt;/a&gt; is a simple example to custom adapter.&lt;/p&gt; &#xA;&lt;h3&gt;Using proxy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;DefaultHttpClientAdapter&lt;/code&gt; provide a callback to set proxy to &lt;code&gt;dart:io:HttpClient&lt;/code&gt;, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:dio/dio.dart&#39;;&#xA;import &#39;package:dio/adapter.dart&#39;;&#xA;...&#xA;(dio.httpClientAdapter as DefaultHttpClientAdapter).onHttpClientCreate = (client) {&#xA;  // config the http client&#xA;  client.findProxy = (uri) {&#xA;    //proxy all request to localhost:8888&#xA;    return &#39;PROXY localhost:8888&#39;;&#xA;  };&#xA;  // you can also create a new HttpClient to dio&#xA;  // return HttpClient();&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is a complete example &lt;a href=&#34;https://github.com/flutterchina/dio/raw/master/example/proxy.dart&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Https certificate verification&lt;/h3&gt; &#xA;&lt;p&gt;There are two ways to verify the https certificate. Suppose the certificate format is PEM, the code like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;String PEM=&#39;XXXXX&#39;; // certificate content&#xA;(dio.httpClientAdapter as DefaultHttpClientAdapter).onHttpClientCreate  = (client) {&#xA;  client.badCertificateCallback=(X509Certificate cert, String host, int port){&#xA;    if(cert.pem==PEM){ // Verify the certificate&#xA;      return true;&#xA;    }&#xA;    return false;&#xA;  };&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another way is creating a &lt;code&gt;SecurityContext&lt;/code&gt; when create the &lt;code&gt;HttpClient&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;(dio.httpClientAdapter as DefaultHttpClientAdapter).onHttpClientCreate  = (client) {&#xA;  SecurityContext sc = SecurityContext();&#xA;  //file is the path of certificate&#xA;  sc.setTrustedCertificates(file);&#xA;  HttpClient httpClient = HttpClient(context: sc);&#xA;  return httpClient;&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this way, the format of certificate must be PEM or PKCS12.&lt;/p&gt; &#xA;&lt;h2&gt;Http2 support&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flutterchina/dio/tree/master/plugins/http2_adapter&#34;&gt;dio_http2_adapter&lt;/a&gt; package is a Dio HttpClientAdapter which support Http/2.0 .&lt;/p&gt; &#xA;&lt;h2&gt;Cancellation&lt;/h2&gt; &#xA;&lt;p&gt;You can cancel a request using a &lt;em&gt;cancel token&lt;/em&gt;. One token can be shared with multiple requests. When a token&#39;s &lt;code&gt;cancel&lt;/code&gt; method invoked, all requests with this token will be cancelled.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;CancelToken token = CancelToken();&#xA;dio.get(url, cancelToken: token)&#xA;   .catchError((DioError err){&#xA;    if (CancelToken.isCancel(err)) {&#xA;      print(&#39;Request canceled! &#39;+ err.message)&#xA;    }else{&#xA;      // handle error.&#xA;    }&#xA;   });&#xA;// cancel the requests with &#34;cancelled&#34; message.&#xA;token.cancel(&#39;cancelled&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is a complete example &lt;a href=&#34;https://github.com/flutterchina/dio/raw/master/example/cancel_request.dart&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Extends Dio class&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Dio&lt;/code&gt; is a abstract class with factory constructorÔºåso we don&#39;t extend &lt;code&gt;Dio&lt;/code&gt; class directy. For this purpose, we can extend &lt;code&gt;DioForNative&lt;/code&gt; or &lt;code&gt;DioForBrowser&lt;/code&gt; instead, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:dio/dio.dart&#39;;&#xA;import &#39;package:dio/native_imp.dart&#39;; //If in browser, import &#39;package:dio/browser_imp.dart&#39;&#xA;&#xA;class Http extends DioForNative {&#xA;  Http([BaseOptions options]):super(options){&#xA;    // do something&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can also implement our Dio client:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class MyDio with DioMixin implements Dio{&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Copyright &amp;amp; License&lt;/h2&gt; &#xA;&lt;p&gt;This open source project authorized by &lt;a href=&#34;https://flutterchina.club&#34;&gt;https://flutterchina.club&lt;/a&gt; , and the license is MIT.&lt;/p&gt; &#xA;&lt;h2&gt;Features and bugs&lt;/h2&gt; &#xA;&lt;p&gt;Please file feature requests and bugs at the &lt;a href=&#34;https://github.com/flutterchina/dio/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;Buy a cup of coffee for me (Scan by wechat)Ôºö&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/flutterchina/flutter-in-action@1.0.3/docs/imgs/pay.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter-stripe/flutter_stripe</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/flutter-stripe/flutter_stripe</id>
    <link href="https://github.com/flutter-stripe/flutter_stripe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter SDK for Stripe.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/19904063/116995247-20519e80-acda-11eb-8e1b-7d0efbd193ad.png&#34; height=&#34;36&#34;&gt; &#xA;&lt;h1&gt;Flutter Stripe&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_stripe&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_stripe.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/flutter-stripe/flutter_stripe/all_plugins?logo=github&#34; alt=&#34;build&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Stripe Flutter SDK allows you to build delightful payment experiences in your native Android and iOS apps using Flutter. We provide powerful and customizable UI screens and elements that can be used out-of-the-box to collect your users&#39; payment details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/19904063/121511757-48bf6d80-c9e9-11eb-9674-0fec35e26ef5.png&#34; alt=&#34;stripe-flutter_cover&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Simplified Security&lt;/strong&gt;: We make it simple for you to collect sensitive data such as credit card numbers and remain &lt;a href=&#34;https://stripe.com/docs/security#pci-dss-guidelines&#34;&gt;PCI compliant&lt;/a&gt;. This means the sensitive data is sent directly to Stripe instead of passing through your server. For more information, see our &lt;a href=&#34;https://stripe.com/docs/security&#34;&gt;Integration Security Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Apple Pay&lt;/strong&gt;: We provide a &lt;a href=&#34;https://stripe.com/docs/apple-pay&#34;&gt;seamless integration with Apple Pay&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Google Pay&lt;/strong&gt;: The plugin can easily act as payment provider for the &lt;a href=&#34;https://raw.githubusercontent.com/flutter-stripe/flutter_stripe/main/#Pay-Plugin-support&#34;&gt;Pay plugin&lt;/a&gt; that enables you to seamlessly integrate Google Pay or Apple Pay. All you need to do is add your stripe publishable key to the payment profile.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Payment methods&lt;/strong&gt;: Accepting more &lt;a href=&#34;https://stripe.com/docs/payments/payment-methods/overview&#34;&gt;payment methods&lt;/a&gt; helps your business expand its global reach and improve checkout conversion.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;SCA-Ready&lt;/strong&gt;: The SDK automatically performs native &lt;a href=&#34;https://stripe.com/docs/payments/3d-secure&#34;&gt;3D Secure authentication&lt;/a&gt; if needed to comply with &lt;a href=&#34;https://stripe.com/docs/strong-customer-authentication&#34;&gt;Strong Customer Authentication&lt;/a&gt; regulation in Europe.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Native UI&lt;/strong&gt;: We provide native screens and elements to securely collect payment details on Android and iOS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pre-built payments UI&lt;/strong&gt;: Learn how to integrate Payment Sheet, the new pre-built payments UI for mobile apps. This pre-built UI lets you accept cards, Apple Pay, and Google Pay out of the box, and includes support for saving &amp;amp; reusing cards.&lt;/p&gt; &#xA;&lt;h4&gt;Recommended usage&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re selling digital products or services within your app, (e.g. subscriptions, in-game currencies, game levels, access to premium content, or unlocking a full version), you must use the app store&#39;s in-app purchase APIs. See &lt;a href=&#34;https://developer.apple.com/app-store/review/guidelines/#payments&#34;&gt;Apple&#39;s&lt;/a&gt; and &lt;a href=&#34;https://support.google.com/googleplay/android-developer/answer/9858738?hl=en&amp;amp;ref_topic=9857752&#34;&gt;Google&#39;s&lt;/a&gt; guidelines for more information. For all other scenarios you can use this SDK to process payments via Stripe.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dart pub add flutter_stripe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;p&gt;This plugin requires several changes to be able to work on Android devices. Please make sure you follow all these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use Android 5.0 (API level 21) and above&lt;/li&gt; &#xA; &lt;li&gt;Use Kotlin version 1.5.0 and above: &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/raw/79b201a2e9b827196d6a97bb41e1d0e526632a5a/example/android/build.gradle#L2&#34;&gt;example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using a descendant of &lt;code&gt;Theme.AppCompat&lt;/code&gt; for your activity: &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/raw/main/example/android/app/src/main/res/values/styles.xml#L15&#34;&gt;example&lt;/a&gt;, &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/raw/main/example/android/app/src/main/res/values-night/styles.xml#L16&#34;&gt;example night theme&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using an up-to-date Android gradle build tools version: &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/raw/main/example/android/build.gradle#L9&#34;&gt;example&lt;/a&gt; and an up-to-date gradle version accordingly: &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/raw/main/example/android/gradle/wrapper/gradle-wrapper.properties#L6&#34;&gt;example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;code&gt;FlutterFragmentActivity&lt;/code&gt; instead of &lt;code&gt;FlutterActivity&lt;/code&gt; in &lt;code&gt;MainActivity.kt&lt;/code&gt;: &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/raw/79b201a2e9b827196d6a97bb41e1d0e526632a5a/example/android/app/src/main/kotlin/com/flutter/stripe/example/MainActivity.kt#L6&#34;&gt;example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rebuild the app, as the above changes don&#39;t update with hot reload&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;These changes are needed because the Android Stripe SDK requires the use of the AppCompat theme for their UI components and the Support Fragment Manager for the Payment Sheets&lt;/p&gt; &#xA;&lt;p&gt;If you are having troubles to make this package to work on Android, join &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/discussions/538&#34;&gt;this discussion&lt;/a&gt; to get some support&lt;/p&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;p&gt;Compatible with apps targeting iOS 12 or above.&lt;/p&gt; &#xA;&lt;p&gt;To upgrade your iOS deployment target to 12.0, you can either do so in Xcode under your Build Settings, or by modifying IPHONEOS_DEPLOYMENT_TARGET in your project.pbxproj directly.&lt;/p&gt; &#xA;&lt;p&gt;You will also need to update in your Podfile:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;platform :ios, &#39;12.0&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Web (Experimental)&lt;/h4&gt; &#xA;&lt;p&gt;Now you can use Stripe with Flutter web! Notice right now it is highly experimental and only a subset of features is implemented.&lt;/p&gt; &#xA;&lt;p&gt;Check the steps needed &lt;a href=&#34;https://github.com/flutter-stripe/flutter_stripe/tree/main/packages/stripe_web&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The library provides three UI componets for accepting card payments: the &lt;code&gt;CardField&lt;/code&gt;, &lt;code&gt;CardForm&lt;/code&gt;, and the &lt;code&gt;Paymentsheet&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We recommend using the &lt;code&gt;PaymentSheet&lt;/code&gt; for the most easy and smooth Stripe integration. It provides out of the box support for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Localized labels and error messages to the users&lt;/li&gt; &#xA; &lt;li&gt;Build-in animations&lt;/li&gt; &#xA; &lt;li&gt;Build-in Google Pay and Apple Pay buttons&lt;/li&gt; &#xA; &lt;li&gt;Handling 3D-secure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Notice that &lt;code&gt;PaymentSheet&lt;/code&gt; is only available for Android and iOS.&lt;/p&gt; &#xA;&lt;p&gt;On the other side the &lt;code&gt;CardField&lt;/code&gt; allows you to create a more customizable payment flow inside your app.&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// main.dart&#xA;import &#39;package:flutter_stripe/flutter_stripe.dart&#39;;&#xA;&#xA;void main() async {&#xA;  WidgetsFlutterBinding.ensureInitialized();&#xA;&#xA;  // set the publishable key for Stripe - this is mandatory&#xA;  Stripe.publishableKey = stripePublishableKey;&#xA;  runApp(PaymentScreen());&#xA;}&#xA;&#xA;// payment_screen.dart&#xA;class PaymentScreen extends StatelessWidget {&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(),&#xA;      body: Column(&#xA;        children: [&#xA;          CardField(&#xA;            onCardChanged: (card) {&#xA;              print(card);&#xA;            },&#xA;          ),&#xA;          TextButton(&#xA;            onPressed: () async {&#xA;              // create payment method&#xA;              final paymentMethod =&#xA;                  await Stripe.instance.createPaymentMethod(PaymentMethodParams.card());&#xA;            },&#xA;            child: Text(&#39;pay&#39;),&#xA;          )&#xA;        ],&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Stripe initialization&lt;/h2&gt; &#xA;&lt;p&gt;To initialize Stripe in your Flutter app, use the &lt;code&gt;Stripe&lt;/code&gt; base class.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Stripe&lt;/code&gt; offers &lt;code&gt;publishableKey&lt;/code&gt;, &lt;code&gt;stripeAccountId&lt;/code&gt;, &lt;code&gt;threeDSecureParams&lt;/code&gt; and &lt;code&gt;merchantIdentifier&lt;/code&gt;. Only &lt;code&gt;publishableKey&lt;/code&gt; is required.&lt;/p&gt; &#xA;&lt;h2&gt;Dart API&lt;/h2&gt; &#xA;&lt;p&gt;The library offers several methods to handle stripe related actions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;PaymentMethod&amp;gt; createPaymentMethod(...);&#xA;Future&amp;lt;PaymentIntent&amp;gt; handleNextAction(...);&#xA;Future&amp;lt;PaymentIntent&amp;gt; confirmPayment(...);&#xA;Future&amp;lt;void&amp;gt; configure3dSecure(...);&#xA;Future&amp;lt;bool&amp;gt; isApplePaySupported();&#xA;Future&amp;lt;void&amp;gt; presentApplePay(...);&#xA;Future&amp;lt;void&amp;gt; confirmApplePayPayment(...);&#xA;Future&amp;lt;SetupIntent&amp;gt; confirmSetupIntent(...);&#xA;Future&amp;lt;PaymentIntent&amp;gt; retrievePaymentIntent(...);&#xA;Future&amp;lt;String&amp;gt; createTokenForCVCUpdate(...);&#xA;&#xA;Future&amp;lt;void&amp;gt; initPaymentSheet(...);&#xA;Future&amp;lt;void&amp;gt; presentPaymentSheet(...);&#xA;Future&amp;lt;void&amp;gt; confirmPaymentSheetPayment()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The example app offers examples on how to use these methods.&lt;/p&gt; &#xA;&lt;h2&gt;Pay Plugin support&lt;/h2&gt; &#xA;&lt;p&gt;IMPORTANT the Pay plugin for Flutter 3.0 is not integrated in the example app at the moment until issue &lt;a href=&#34;https://github.com/google-pay/flutter-plugin/issues/126&#34;&gt;github&lt;/a&gt; is resolved.&lt;/p&gt; &#xA;&lt;p&gt;flutter_stripe fully supports the &lt;a href=&#34;https://pub.dev/packages/pay&#34;&gt;Pay plugin&lt;/a&gt; from the Google Pay team. By including a few lines you can integrate Stripe as a payment processor for Google / Apple Pay:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;void&amp;gt; onGooglePayResult(paymentResult) async {&#xA;    final response = await fetchPaymentIntentClientSecret();&#xA;    final clientSecret = response[&#39;clientSecret&#39;];&#xA;    final token = paymentResult[&#39;paymentMethodData&#39;][&#39;tokenizationData&#39;][&#39;token&#39;];&#xA;    final tokenJson = Map.castFrom(json.decode(token));&#xA;&#xA;    final params = PaymentMethodParams.cardFromToken(&#xA;      token: tokenJson[&#39;id&#39;],&#xA;    );&#xA;    // Confirm Google pay payment method&#xA;    await Stripe.instance.confirmPayment(&#xA;      clientSecret,&#xA;      params,&#xA;    );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run the example app&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Navigate to the example folder &lt;code&gt;cd example&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install the dependencies &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;flutter pub get&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Set up env vars for the flutter app and a local backend. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://stripe.com/docs/keys&#34;&gt;Get your test Stripe API keys&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cp lib/.env.example.dart lib/.env.dart&lt;/code&gt; and set your Stripe publishable key.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cp server/.env.example server/.env&lt;/code&gt; and set the variable values in your newly created &lt;code&gt;.env&lt;/code&gt; file.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the server dependencies: &lt;code&gt;npm install&lt;/code&gt; or &lt;code&gt;yarn --cwd &#34;server&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start the example &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Terminal 1: &lt;code&gt;npm start&lt;/code&gt; or &lt;code&gt;yarn --cwd &#34;server&#34; start&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Terminal 2: &lt;code&gt;flutter run&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Additional steps for webhook forwarding&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stripe.com/docs/stripe-cli&#34;&gt;Install the &lt;code&gt;stripe-cli&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;stripe listen --forward-to localhost:4242/webhook&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You can help us make this project better, feel free to open an new issue or a pull request.&lt;/p&gt; &#xA;&lt;h5&gt;Setup&lt;/h5&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://github.com/invertase/melos&#34;&gt;melos&lt;/a&gt; to manage all the packages inside this repo.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install melos: &lt;code&gt;dart pub global activate melos&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Setup melos in your local folder: &lt;code&gt;melos bootstrap&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Useful commands&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Format &lt;code&gt;melos run format&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Analyze &lt;code&gt;melos run analyze&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Test &lt;code&gt;melos run unittest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pub get &lt;code&gt;melos run get&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Publishing&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;melos version&lt;/code&gt; and &lt;code&gt;melos publish&lt;/code&gt; to keep all the repositories in sync&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>fluttertools/fvm</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/fluttertools/fvm</id>
    <link href="https://github.com/fluttertools/fvm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter Version Management: A simple CLI to manage Flutter SDK versions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fvm&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/leoafarias/fvm?style=social&#34; alt=&#34;GitHub stars&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/fvm/changelog&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/fvm?label=version&amp;amp;style=flat-square&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/fvm/score&#34;&gt;&lt;img src=&#34;https://badges.bar/fvm/likes&#34; alt=&#34;Likes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/fvm/score&#34;&gt;&lt;img src=&#34;https://badges.bar/fvm/pub%20points&#34; alt=&#34;Pub points&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/leoafarias/fvm/master/coverage_badge.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt; &lt;a href=&#34;https://github.com/leoafarias/fvm/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/all-contributors/leoafarias/fvm?style=flat-square&#34; alt=&#34;Github All Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/mit-license.php&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/leoafarias/fvm?style=flat-square&amp;amp;longCache=true&#34; alt=&#34;MIT Licence&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Solido/awesome-flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/awesome-flutter-purple?longCache=true&amp;amp;style=flat-square&#34; alt=&#34;Awesome Flutter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flutter Version Management: A simple cli to manage Flutter SDK versions.&lt;/p&gt; &#xA;&lt;p&gt;FVM helps with the need for a consistent app builds by allowing to reference Flutter SDK version used on a per-project basis. It also allows you to have multiple Flutter versions installed to quickly validate and test upcoming Flutter releases with your apps, without waiting for Flutter installation every time.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configure and use Flutter SDK version per project&lt;/li&gt; &#xA; &lt;li&gt;Ability to install and cache multiple Flutter SDK Versions&lt;/li&gt; &#xA; &lt;li&gt;Fast switch between Flutter channels &amp;amp; versions&lt;/li&gt; &#xA; &lt;li&gt;Dynamic SDK paths for IDE debugging support.&lt;/li&gt; &#xA; &lt;li&gt;Version FVM config with a project for consistency across teams and CI environments.&lt;/li&gt; &#xA; &lt;li&gt;Set global Flutter version across projects&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fvm.app&#34;&gt;Read the FVM documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Checkout Flutter Sidekick. &lt;a href=&#34;https://github.com/leoafarias/sidekick&#34;&gt;Read more about it here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/leoafarias/sidekick&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/leoafarias/sidekick/main/assets/promo-gh/screenshot.png&#34; alt=&#34;FVM App Screenshot&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Working with this repo&lt;/h2&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pub run test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Publishing package&lt;/h3&gt; &#xA;&lt;p&gt;Before pushing package to pub.dev. Run command to create version constant.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pub run build_runner build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update test coverage&lt;/h3&gt; &#xA;&lt;p&gt;To update test coverage run the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pub run test_cov&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;Please view our &lt;a href=&#34;https://fvm.app/docs/guides/faq&#34;&gt;FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/leoafarias&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/435833?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Leo Farias&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=leoafarias&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#ideas-leoafarias&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=leoafarias&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#example-leoafarias&#34; title=&#34;Examples&#34;&gt;üí°&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttertools/fvm/pulls?q=is%3Apr+reviewed-by%3Aleoafarias&#34; title=&#34;Reviewed Pull Requests&#34;&gt;üëÄ&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#maintenance-leoafarias&#34; title=&#34;Maintenance&#34;&gt;üöß&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#infra-leoafarias&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;üöá&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ianko&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/723360?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ianko Leite&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#ideas-ianko&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.kikt.top&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/14145407?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Caijinglong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=CaiJingLong&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#ideas-CaiJingLong&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://juejin.im/user/5bdc1a32518825170b101080&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/16477333?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;zmtzawqlp&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/issues?q=author%3Azmtzawqlp&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kuhnroyal&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1260818?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Leibiger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=kuhnroyal&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#maintenance-kuhnroyal&#34; title=&#34;Maintenance&#34;&gt;üöß&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#question-kuhnroyal&#34; title=&#34;Answering Questions&#34;&gt;üí¨&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/panthe&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/250296?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luca Panteghini&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=panthe&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/davidmartos96&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/22084723?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Martos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=davidmartos96&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=davidmartos96&#34; title=&#34;Tests&#34;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=davidmartos96&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/svenjacobs&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/255313?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sven Jacobs&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=svenjacobs&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Cir0X&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/4539597?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wolfhard Prell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=Cir0X&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jascodes&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1231593?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jaspreet Singh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#ideas-jascodes&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=jascodes&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://deandreamatias.com/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/21011641?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matias de Andrea&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=deandreamatias&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/znjameswu&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/61373469?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;znjameswu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/issues?q=author%3Aznjameswu&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/orestesgaolin&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/16854239?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dominik Roszkowski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=orestesgaolin&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#talk-orestesgaolin&#34; title=&#34;Talks&#34;&gt;üì¢&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://me.sgr-ksmt.org/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/9350581?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Suguru Kishimoto&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/issues?q=author%3Asgr-ksmt&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mx1up&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/178714?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mx1up&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/issues?q=author%3Amx1up&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=mx1up&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nank1ro&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/60045235?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexandru Mariuti&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=nank1ro&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/andreadelfante&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7781176?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrea Del Fante&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#ideas-andreadelfante&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=andreadelfante&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Kavantix&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6243755?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pieter van Loon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=Kavantix&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#ideas-Kavantix&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/YangLang116&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15442222?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mr Yang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=YangLang116&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Saancreed&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/26201033?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Krzysztof Bogacki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/issues?q=author%3ASaancreed&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=Saancreed&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ened&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/269860?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sebastian Roth&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=ened&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#ideas-ened&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/taras&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/74687?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Taras Mankovski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#infra-taras&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;üöá&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#ideas-taras&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jmewes&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5235584?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jan Mewes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=jmewes&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://permanent.ee&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/740826?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Allan Laal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=allanlaal&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rhalff&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/274358?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rob Halff&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=rhalff&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://sharezone.net&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/24459435?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nils Reichardt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#infra-nilsreichardt&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;üöá&lt;/a&gt; &lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=nilsreichardt&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://rcjuancarlosuwu.medium.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/67658540?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Juan Carlos Ram√≥n Condezo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=rcjuancarlosuwu&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluttertools/fvm/main/#translation-rcjuancarlosuwu&#34; title=&#34;Translation&#34;&gt;üåç&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/zeshuaro&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/12210067?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;zeshuaro&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=zeshuaro&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ziehlke&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10786117?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ziehlke&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/fluttertools/fvm/commits?author=ziehlke&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter/packages</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/flutter/packages</id>
    <link href="https://github.com/flutter/packages" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of useful packages maintained by the Flutter team&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Packages&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/flutter/packages/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/flutter/packages.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flutter/packages/actions/workflows/release.yml&#34;&gt;&lt;img src=&#34;https://github.com/flutter/packages/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Release Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo is a companion repo to the main &lt;a href=&#34;https://github.com/flutter/flutter&#34;&gt;flutter repo&lt;/a&gt;. It contains the source code for Flutter&#39;s first-party packages (i.e., packages developed by the core Flutter team). Check the &lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages&#34;&gt;&lt;code&gt;packages&lt;/code&gt;&lt;/a&gt; directory to see all packages.&lt;/p&gt; &#xA;&lt;p&gt;These packages are also available on &lt;a href=&#34;https://pub.dartlang.org/flutter/packages&#34;&gt;pub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please file any issues, bugs, or feature requests in the &lt;a href=&#34;https://github.com/flutter/flutter/issues/new&#34;&gt;main flutter repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute a new package to the Flutter ecosystem, please see the documentation for &lt;a href=&#34;https://flutter.io/developing-packages/&#34;&gt;developing packages&lt;/a&gt;. You can store your package source code in any GitHub repository (the present repo is only intended for packages developed by the core Flutter team). Once your package is ready you can &lt;a href=&#34;https://flutter.io/developing-packages/#publish&#34;&gt;publish&lt;/a&gt; to the &lt;a href=&#34;https://pub.dartlang.org/&#34;&gt;pub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to contribute a change to any of the existing packages in this repo, please review our &lt;a href=&#34;https://github.com/flutter/packages/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;, and send a &lt;a href=&#34;https://github.com/flutter/packages/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;p&gt;These are the available packages in this repository.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Pub&lt;/th&gt; &#xA;   &lt;th&gt;Issues&lt;/th&gt; &#xA;   &lt;th&gt;Pull requests&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/animations/&#34;&gt;animations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/animations&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/animations.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20animations&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20animations?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20animations&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20animations?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/css_colors/&#34;&gt;css_colors&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/css_colors&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/css_colors.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20css_colors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20css_colors?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20css_colors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20css_colors?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/extension_google_sign_in_as_googleapis_auth/&#34;&gt;extension_google_sign_in_as_googleapis_auth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/extension_google_sign_in_as_googleapis_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/extension_google_sign_in_as_googleapis_auth.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20extension_google_sign_in_as_googleapis_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20extension_google_sign_in_as_googleapis_auth?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20extension_google_sign_in_as_googleapis_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20extension_google_sign_in_as_googleapis_auth?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/fuchsia_ctl/&#34;&gt;fuchsia_ctl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/fuchsia_ctl&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/fuchsia_ctl.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20fuchsia_ctl&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20fuchsia_ctl?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20fuchsia_ctl&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20fuchsia_ctl?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/flutter_image/&#34;&gt;flutter_image&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_image&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_image.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20flutter_image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20flutter_image?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20flutter_image&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20flutter_image?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/flutter_lints/&#34;&gt;flutter_lints&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_lints&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_lints.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20flutter_lints&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20flutter_lints?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20flutter_lints&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20flutter_lints?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/flutter_markdown/&#34;&gt;flutter_markdown&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_markdown&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_markdown.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20flutter_markdown&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20flutter_markdown?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20flutter_markdown&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20flutter_markdown?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/go_router/&#34;&gt;go_router&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/go_router&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/go_router.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20go_router&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20go_router?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20go_router&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20go_router?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/go_router_builder/&#34;&gt;go_router_builder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/go_router_builder&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/go_router_builder.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20go_router_builder&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20go_router_builder?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20go_router_builder&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20go_router_builder?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/multicast_dns/&#34;&gt;multicast_dns&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/multicast_dns&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/multicast_dns.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20multicast_dns&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20multicast_dns?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20multicast_dns&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20multicast_dns?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/palette_generator/&#34;&gt;palette_generator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/palette_generator&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/palette_generator.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20palette_generator&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20palette_generator?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20palette_generator&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20palette_generator?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/pigeon/&#34;&gt;pigeon&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/pigeon&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/pigeon.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/pigeon&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/pigeon?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20pigeon&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20pigeon?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/pointer_interceptor/&#34;&gt;pointer_interceptor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/pointer_interceptor&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/pointer_interceptor.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20pointer_interceptor&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20pointer_interceptor?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20pointer_interceptor&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20pointer_interceptor?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/packages/main/packages/xdg_directories/&#34;&gt;xdg_directories&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/xdg_directories&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/xdg_directories.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/flutter/labels/p%3A%20xdg_directories&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/flutter/flutter/p:%20xdg_directories?label=&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/flutter/packages/labels/p%3A%20xdg_directories&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/flutter/packages/p:%20xdg_directories?label=&#34; alt=&#34;GitHub pull requests by-label&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>OpenFlutter/flutter_screenutil</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/OpenFlutter/flutter_screenutil</id>
    <link href="https://github.com/OpenFlutter/flutter_screenutil" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter screen adaptation, font adaptation, get screen information&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flutter_screenutil&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_screenutil&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_screenutil.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_screenutil/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_screenutil/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_screenutil/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_screenutil/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A flutter plugin for adapting screen and font size.Let your UI display a reasonable layout on different screen sizes!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This plugin is still under development, and some APIs might not be available yet.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_screenutil/raw/master/README_CN.md&#34;&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_screenutil/raw/master/README_PT.md&#34;&gt;README em Portugu√™s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_screenutil&#34;&gt;github&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_screenutil/raw/master/CHANGELOG.md&#34;&gt;Update log&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Add dependency&lt;/h3&gt; &#xA;&lt;p&gt;Please check the latest version before installation. If there is any problem with the new version, please use the previous version&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  flutter:&#xA;    sdk: flutter&#xA;  # add flutter_screenutil&#xA;  flutter_screenutil: ^{latest version}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add the following imports to your Dart code&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter_screenutil/flutter_screenutil.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Property&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default Value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;deviceSize&lt;/td&gt; &#xA;   &lt;td&gt;Size&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;The size of the physical device&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;designSize&lt;/td&gt; &#xA;   &lt;td&gt;Size&lt;/td&gt; &#xA;   &lt;td&gt;Size(360,690)&lt;/td&gt; &#xA;   &lt;td&gt;The size of the device screen in the design draft, in dp&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;builder&lt;/td&gt; &#xA;   &lt;td&gt;Function&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;Return widget that uses the library in a property (ex: MaterialApp&#39;s theme)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;child&lt;/td&gt; &#xA;   &lt;td&gt;Widget&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;A part of builder that its dependencies/properties don&#39;t use the library&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rebuildFactor&lt;/td&gt; &#xA;   &lt;td&gt;Function&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;default&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Returns whether to rebuild or not when screen metrics changes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;orientation&lt;/td&gt; &#xA;   &lt;td&gt;Orientation&lt;/td&gt; &#xA;   &lt;td&gt;portrait&lt;/td&gt; &#xA;   &lt;td&gt;screen orientation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;splitScreenMode&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;support for split screen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;minTextAdapt&lt;/td&gt; &#xA;   &lt;td&gt;bool&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Whether to adapt the text according to the minimum of width and height&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;context&lt;/td&gt; &#xA;   &lt;td&gt;BuildContext&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;Get physical device data if not provided, by MediaQuery.of(context)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note : You must either provide builder, child or both.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Initialize and set the fit size and font size to scale according to the system&#39;s &#34;font size&#34; accessibility option&lt;/h3&gt; &#xA;&lt;p&gt;Please set the size of the design draft before use, the width and height of the design draft.&lt;/p&gt; &#xA;&lt;h4&gt;The first way (You must use it once in your app)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatelessWidget {&#xA;  const MyApp({Key? key}) : super(key: key);&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    //Set the fit size (Find your UI design, look at the dimensions of the device screen and fill it in,unit in dp)&#xA;    return ScreenUtilInit(&#xA;      designSize: const Size(360, 690),&#xA;      minTextAdapt: true,&#xA;      splitScreenMode: true,&#xA;      builder: (context , child) {&#xA;        return MaterialApp(&#xA;          debugShowCheckedModeBanner: false,&#xA;          title: &#39;First Method&#39;,&#xA;          // You can use the library anywhere in the app even in theme&#xA;          theme: ThemeData(&#xA;            primarySwatch: Colors.blue,&#xA;            textTheme: Typography.englishLike2018.apply(fontSizeFactor: 1.sp),&#xA;          ),&#xA;          home: child,&#xA;        );&#xA;      },&#xA;      child: const HomePage(title: &#39;First Method&#39;),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;The second way:You need a trick to support font adaptation in the textTheme of app theme&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Hybrid development uses the second way&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;not support this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;  ...&#xA;  //To support the following, you need to use the first initialization method&#xA;  theme: ThemeData(&#xA;    textTheme: TextTheme(&#xA;      button: TextStyle(fontSize: 45.sp)&#xA;    ),&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;but you can do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void main() async {&#xA;  // Add this line&#xA;  await ScreenUtil.ensureScreenSize();&#xA;  runApp(MyApp());&#xA;}&#xA;...&#xA;MaterialApp(&#xA;  ...&#xA;  builder: (ctx, child) {&#xA;    ScreenUtil.init(ctx);&#xA;    return Theme(&#xA;      data: ThemeData(&#xA;        primarySwatch: Colors.blue,&#xA;        textTheme: TextTheme(bodyText2: TextStyle(fontSize: 30.sp)),&#xA;      ),&#xA;      child: HomePage(title: &#39;FlutterScreenUtil Demo&#39;),&#xA;    );&#xA;  },&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class MyApp extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      debugShowCheckedModeBanner: false,&#xA;      title: &#39;Flutter_ScreenUtil&#39;,&#xA;      theme: ThemeData(&#xA;        primarySwatch: Colors.blue,&#xA;      ),&#xA;      home: HomePage(title: &#39;FlutterScreenUtil Demo&#39;),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;class HomePage extends StatefulWidget {&#xA;  const HomePage({Key key, this.title}) : super(key: key);&#xA;&#xA;  final String title;&#xA;&#xA;  @override&#xA;  _HomePageState createState() =&amp;gt; _HomePageState();&#xA;}&#xA;&#xA;class _HomePageState extends State&amp;lt;HomePage&amp;gt; {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    //Set the fit size (fill in the screen size of the device in the design) &#xA;    //If the design is based on the size of the 360*690(dp)&#xA;    ScreenUtil.init(context, designSize: const Size(360, 690));&#xA;    ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;h4&gt;Pass the dp size of the design draft&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;    ScreenUtil().setWidth(540)  (dart sdk&amp;gt;=2.6 : 540.w) //Adapted to screen width&#xA;    ScreenUtil().setHeight(200) (dart sdk&amp;gt;=2.6 : 200.h) //Adapted to screen height , under normal circumstances, the height still uses x.w&#xA;    ScreenUtil().radius(200)    (dart sdk&amp;gt;=2.6 : 200.r)    //Adapt according to the smaller of width or height&#xA;    ScreenUtil().setSp(24)      (dart sdk&amp;gt;=2.6 : 24.sp) //Adapter font&#xA;    12.sm   //return min(12,12.sp)&#xA;&#xA;    ScreenUtil().pixelRatio       //Device pixel density&#xA;    ScreenUtil().screenWidth   (dart sdk&amp;gt;=2.6 : 1.sw)    //Device width&#xA;    ScreenUtil().screenHeight  (dart sdk&amp;gt;=2.6 : 1.sh)    //Device height&#xA;    ScreenUtil().bottomBarHeight  //Bottom safe zone distance, suitable for buttons with full screen&#xA;    ScreenUtil().statusBarHeight  //Status bar height , Notch will be higher&#xA;    ScreenUtil().textScaleFactor  //System font scaling factor&#xA;&#xA;    ScreenUtil().scaleWidth //The ratio of actual width to UI design&#xA;    ScreenUtil().scaleHeight //The ratio of actual height to UI design&#xA;&#xA;    ScreenUtil().orientation  //Screen orientation&#xA;    0.2.sw  //0.2 times the screen width&#xA;    0.5.sh  //50% of screen height&#xA;    20.setVerticalSpacing  // SizedBox(height: 20 * scaleHeight)&#xA;    20.horizontalSpace  // SizedBox(height: 20 * scaleWidth)&#xA;    const RPadding.all(8)   // Padding.all(8.r) - take advantage of const key word&#xA;    REdgeInsts.all(8)       // EdgeInsets.all(8.r)&#xA;    EdgeInsets.only(left:8,right:8).r // EdgeInsets.only(left:8.r,right:8.r).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Adapt screen size&lt;/h4&gt; &#xA;&lt;p&gt;Pass the dp size of the design draft((The unit is the same as the unit at initialization))Ôºö&lt;/p&gt; &#xA;&lt;p&gt;Adapted to screen width: &lt;code&gt;ScreenUtil().setWidth(540)&lt;/code&gt;,&lt;/p&gt; &#xA;&lt;p&gt;Adapted to screen height: &lt;code&gt;ScreenUtil().setHeight(200)&lt;/code&gt;, In general, the height is best to adapt to the width&lt;/p&gt; &#xA;&lt;p&gt;If your dart sdk&amp;gt;=2.6, you can use extension functions:&lt;/p&gt; &#xA;&lt;p&gt;example:&lt;/p&gt; &#xA;&lt;p&gt;instead of :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Container(&#xA;  width: ScreenUtil().setWidth(50),&#xA;  height:ScreenUtil().setHeight(200),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;you can use it like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Container(&#xA;  width: 50.w,&#xA;  height:200.h&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;Note&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;The height can also use setWidth to ensure that it is not deformed(when you want a square)&lt;/p&gt; &#xA;&lt;p&gt;The setHeight method is mainly to adapt to the height, which is used when you want to control the height of a screen on the UI to be the same as the actual display.&lt;/p&gt; &#xA;&lt;p&gt;Generally speaking, 50.w!=50.h.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;//for example:&#xA;&#xA;//If you want to display a rectangle:&#xA;Container(&#xA;  width: 375.w,&#xA;  height: 375.h,&#xA;),&#xA;            &#xA;//If you want to display a square based on width:&#xA;Container(&#xA;  width: 300.w,&#xA;  height: 300.w,&#xA;),&#xA;&#xA;//If you want to display a square based on height:&#xA;Container(&#xA;  width: 300.h,&#xA;  height: 300.h,&#xA;),&#xA;&#xA;//If you want to display a square based on minimum(height, width):&#xA;Container(&#xA;  width: 300.r,&#xA;  height: 300.r,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Adapter font&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;//Incoming font size(The unit is the same as the unit at initialization)&#xA;ScreenUtil().setSp(28) &#xA;28.sp&#xA;&#xA;//for example:&#xA;Column(&#xA;  crossAxisAlignment: CrossAxisAlignment.start,&#xA;  children: &amp;lt;Widget&amp;gt;[&#xA;    Text(&#xA;      &#39;16sp, will not change with the system.&#39;,&#xA;      style: TextStyle(&#xA;        color: Colors.black,&#xA;        fontSize: 16.sp,&#xA;      ),&#xA;      textScaleFactor: 1.0,&#xA;    ),&#xA;    Text(&#xA;      &#39;16sp,if data is not set in MediaQuery,my font size will change with the system.&#39;,&#xA;      style: TextStyle(&#xA;        color: Colors.black,&#xA;        fontSize: 16.sp,&#xA;      ),&#xA;    ),&#xA;  ],&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Setting font does not change with system font size&lt;/h4&gt; &#xA;&lt;p&gt;APP global:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp(&#xA;  debugShowCheckedModeBanner: false,&#xA;  title: &#39;Flutter_ScreenUtil&#39;,&#xA;  theme: ThemeData(&#xA;    primarySwatch: Colors.blue,&#xA;  ),&#xA;  builder: (context, widget) {&#xA;    return MediaQuery(&#xA;      ///Setting font does not change with system font size&#xA;      data: MediaQuery.of(context).copyWith(textScaleFactor: 1.0),&#xA;      child: widget,&#xA;    );&#xA;  },&#xA;  home: HomePage(title: &#39;FlutterScreenUtil Demo&#39;),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specified Text:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Text(&#34;text&#34;, textScaleFactor: 1.0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specified Widget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MediaQuery(&#xA;  // If there is no context available you can wrap [MediaQuery] with [Builder]&#xA;  data: MediaQuery.of(context).copyWith(textScaleFactor: 1.0),&#xA;  child: AnyWidget(),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_screenutil/issues/115&#34;&gt;widget test&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenFlutter/flutter_screenutil/raw/master/example/lib&#34;&gt;example demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use second method run: &lt;code&gt;flutter run --dart-define=method=2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Effect&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OpenFlutter/flutter_screenutil/master/demo_en.png&#34; alt=&#34;effect&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OpenFlutter/flutter_screenutil/master/demo_tablet_en.png&#34; alt=&#34;tablet effect&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aws-amplify/amplify-flutter</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/aws-amplify/amplify-flutter</id>
    <link href="https://github.com/aws-amplify/amplify-flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A declarative library with an easy-to-use interface for building Flutter applications on AWS.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://s3.amazonaws.com/aws-mobile-hub-images/aws-amplify-logo.png&#34; alt=&#34;AWS Amplify&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/jWVbPfC&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/308323056592486420?logo=discord&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/aws-amplify/amplify-flutter/tree/main&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/aws-amplify/amplify-flutter/tree/main.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Amplify Flutter&lt;/h2&gt; &#xA;&lt;p&gt;AWS Amplify provides a declarative and easy-to-use interface across different categories of cloud operations. Our default implementation works with Amazon Web Services (AWS), but AWS Amplify is designed to be open and pluggable for any custom backend or service. See &lt;a href=&#34;https://docs.amplify.aws&#34;&gt;AWS Amplify&lt;/a&gt; for further details about the Amplify Framework.&lt;/p&gt; &#xA;&lt;p&gt;We are iterating and looking for feedback and collaboration, so please &lt;a href=&#34;https://github.com/aws-amplify/amplify-flutter/issues/5&#34;&gt;&lt;strong&gt;let us know your feedback&lt;/strong&gt;&lt;/a&gt; on our direction and roadmap.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.amplify.aws/start/getting-started/setup/q/integration/flutter&#34;&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aws-amplify/amplify-flutter/tree/main/example&#34;&gt;Example Application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aws-amplify/amplify-flutter/issues/5&#34;&gt;Roadmap/Provide Feedback&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;‚ö†Ô∏è &lt;strong&gt;For breaking changes from the developer preview versions please refer to this &lt;a href=&#34;https://github.com/aws-amplify/amplify-flutter/issues/274&#34;&gt;issue&lt;/a&gt; for migration details.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Amplify Categories&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.amplify.aws/lib/auth/getting-started/q/platform/flutter&#34;&gt;&lt;strong&gt;Authentication&lt;/strong&gt;&lt;/a&gt;: APIs and building blocks for developers who want to create user authentication experiences with Amazon Cognito.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://pub.dev/packages/amplify_auth_cognito&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/v/amplify_auth_cognito.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.amplify.aws/lib/analytics/getting-started/q/platform/flutter&#34;&gt;&lt;strong&gt;Analytics&lt;/strong&gt;&lt;/a&gt;: Easily collect analytics data for your app with Pinpoint. Analytics data includes user sessions and other custom events that you want to track in your app.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://pub.dev/packages/amplify_analytics_pinpoint&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/v/amplify_analytics_pinpoint.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.amplify.aws/lib/storage/getting-started/q/platform/flutter&#34;&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;/a&gt;: Provides a simple mechanism for managing user content for your app in public, protected or private storage buckets with Amazon S3.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://pub.dev/packages/amplify_storage_s3&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/v/amplify_storage_s3.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.amplify.aws/lib/datastore/getting-started/q/platform/flutter&#34;&gt;&lt;strong&gt;DataStore&lt;/strong&gt;&lt;/a&gt;: A programming model for leveraging shared and distributed data without writing additional code for offline and online scenarios, which makes working with distributed, cross-user data just as simple as working with local-only data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://pub.dev/packages/amplify_datastore&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/v/amplify_datastore.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.amplify.aws/lib/restapi/getting-started/q/platform/flutter&#34;&gt;&lt;strong&gt;API (Rest)&lt;/strong&gt;&lt;/a&gt;: Provides a simple solution when making HTTP requests. It provides an automatic, lightweight signing process which complies with AWS Signature Version 4.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://pub.dev/packages/amplify_api&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/v/amplify_api.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.amplify.aws/lib/graphqlapi/getting-started/q/platform/flutter&#34;&gt;&lt;strong&gt;API (GraphQL)&lt;/strong&gt;&lt;/a&gt;: Interact with your GraphQL server or AWS AppSync API with an easy-to-use &amp;amp; configured GraphQL client.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://pub.dev/packages/amplify_api&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/v/amplify_api.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;To Be Implemented&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Predictions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Storage Hub Events (Listening to the Amplify Storage events)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Amplify for Flutter currently supports &lt;strong&gt;iOS&lt;/strong&gt; and &lt;strong&gt;Android&lt;/strong&gt; platforms.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.amplify.aws/start/q/integration/flutter&#34;&gt;Getting Started with Amplify Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.amplify.aws/&#34;&gt;Amplify Framework&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.amplify.aws/lib/project-setup/prereq/q/platform/flutter#install-and-configure-the-amplify-cli&#34;&gt;Install the Amplify CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-amplify/amplify-flutter/main/CONTRIBUTING.md&#34;&gt;Contributing to Amplify Flutter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Flutter Development Guide&lt;/h2&gt; &#xA;&lt;p&gt;Amplify for Flutter is an open-source project and welcomes contributions from the Flutter community, see &lt;a href=&#34;https://raw.githubusercontent.com/aws-amplify/amplify-flutter/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Prerequisites&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/install&#34;&gt;Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.amplify.aws/lib/project-setup/prereq/q/platform/flutter#option-1-watch-the-video-guide&#34;&gt;Amplify CLI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Getting Started with Flutter app development and Amplify&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA; &lt;li&gt;Install Amplify in a Flutter project&lt;/li&gt; &#xA; &lt;li&gt;Add basic Amplify functionality to your project using one of the supported categories&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;git clone git@github.com:aws-amplify/amplify-flutter.git&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open your Flutter project. If you do not have an active Flutter project, you can create one after installing the &lt;a href=&#34;https://flutter.dev/docs/get-started/install&#34;&gt;Flutter development tooling&lt;/a&gt; and running &lt;code&gt;flutter create &amp;lt;project-name&amp;gt;&lt;/code&gt; in your terminal.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Using the Amplify CLI, run &lt;code&gt;amplify init&lt;/code&gt; from the root of your project:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.amplify.aws/lib/project-setup/prereq/q/platform/flutter#install-and-configure-the-amplify-cli&#34;&gt;Amplify CLI Installation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;==&amp;gt; amplify init&#xA;Note: It is recommended to run this command from the root of your app directory&#xA;? Enter a name for the project helloAmplify&#xA;? Enter a name for the environment dev&#xA;? Choose your default editor: Visual Studio Code&#xA;? Choose the type of app that you\&#39;re building flutter&#xA;Please tell us about your project&#xA;Only the following resource types are supported:&#xA; * Auth&#xA; * Analytics&#xA; * Storage&#xA; * API&#xA;? Where do you want to store your configuration file? ./lib/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Add Amplify categories (choose defaults for this example):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ amplify add auth&#xA;$ amplify add analytics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Push changes to the cloud to provision the backend resources:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ amplify push&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In your pubspec.yaml file, add the following to &lt;code&gt;dependencies&lt;/code&gt;:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: Do not include dependencies in your &lt;code&gt;pubspec&lt;/code&gt; file that you are not using in your app. This can cause a configuration error in the underlying SDK.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  flutter:&#xA;    sdk: flutter&#xA;  amplify_flutter:&#xA;    path: /{path to your local amplify-flutter}/amplify-flutter/packages/amplify_flutter&#xA;  amplify_analytics_pinpoint:&#xA;    path: /{path to your local amplify-flutter}/amplify-flutter/packages/amplify_analytics_pinpoint&#xA;  amplify_auth_cognito:&#xA;    path: /{path to your local amplify-flutter}/amplify-flutter/packages/amplify_auth_cognito&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;From the terminal run&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flutter pub get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;In your main.dart file, add:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter/material.dart&#39;;&#xA;import &#39;package:amplify_flutter/amplify_flutter.dart&#39;;&#xA;import &#39;package:amplify_analytics_pinpoint/amplify_analytics_pinpoint.dart&#39;;&#xA;import &#39;package:amplify_auth_cognito/amplify_auth_cognito.dart&#39;;&#xA;&#xA;import &#39;amplifyconfiguration.dart&#39;;&#xA;&#xA;void main() {&#xA;  runApp(MyApp());&#xA;}&#xA;&#xA;class MyApp extends StatefulWidget {&#xA;  @override&#xA;  _MyAppState createState() =&amp;gt; _MyAppState();&#xA;}&#xA;&#xA;class _MyAppState extends State&amp;lt;MyApp&amp;gt; {&#xA;  bool _amplifyConfigured = false;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    super.initState();&#xA;  }&#xA;&#xA;  void _configureAmplify() async {&#xA;    if (!mounted) return;&#xA;&#xA;    // Add Pinpoint and Cognito Plugins&#xA;    Amplify.addPlugin(AmplifyAuthCognito());&#xA;    Amplify.addPlugin(AmplifyAnalyticsPinpoint());&#xA;&#xA;    // Once Plugins are added, configure Amplify&#xA;    try {&#xA;      await Amplify.configure(amplifyconfig);&#xA;      setState(() {&#xA;        _amplifyConfigured = true;&#xA;      });&#xA;    } on AmplifyAlreadyConfiguredException {&#xA;      print(&#xA;          &#34;Amplify was already configured. Looks like app restarted on android.&#34;);&#xA;    }&#xA;&#xA;  }&#xA;&#xA;  // Send an event to Pinpoint&#xA;  void _recordEvent() async {&#xA;    AnalyticsEvent event = AnalyticsEvent(&#39;test&#39;);&#xA;    event.properties.addBoolProperty(&#39;boolKey&#39;, true);&#xA;    event.properties.addDoubleProperty(&#39;doubleKey&#39;, 10.0);&#xA;    event.properties.addIntProperty(&#39;intKey&#39;, 10);&#xA;    event.properties.addStringProperty(&#39;stringKey&#39;, &#39;stringValue&#39;);&#xA;    Amplify.Analytics.recordEvent(event: event);&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      home: Scaffold(&#xA;          appBar: AppBar(&#xA;            title: const Text(&#39;Amplify example app&#39;),&#xA;          ),&#xA;          body: ListView(padding: EdgeInsets.all(10.0), children: &amp;lt;Widget&amp;gt;[&#xA;            Center(&#xA;              child: Column (&#xA;                children: [&#xA;                  const Padding(padding: EdgeInsets.all(5.0)),&#xA;                  ElevatedButton(&#xA;                    onPressed: _amplifyConfigured ? null : _configureAmplify,&#xA;                    child: const Text(&#39;configure Amplify&#39;)&#xA;                  ),&#xA;                  ElevatedButton(&#xA;                    onPressed: _amplifyConfigured ? _recordEvent : null,&#xA;                    child: const Text(&#39;record event&#39;)&#xA;                  )&#xA;                ]&#xA;              ),&#xA;            )&#xA;          ])&#xA;      )&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For iOS builds complete the following steps (from the root of your project):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;rm ios/Podfile&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter build ios&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Modify the &lt;code&gt;ios/Podfile&lt;/code&gt; and replace the second line with: &lt;code&gt;platform :ios, &#39;11.0&#39;&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This ensures that your Flutter project is running the same ios version that the Amplify plugins are built on.&lt;/p&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;From the root of your project, execute &lt;code&gt;flutter run&lt;/code&gt; in the terminal.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure that an Android or iOS device is already running; this can be a virtual device started from Android Studio.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Click &lt;strong&gt;Configure Amplify&lt;/strong&gt;, then &lt;strong&gt;Record Event&lt;/strong&gt;. From the terminal (in the root of your project) run &lt;code&gt;amplify console analytics&lt;/code&gt;. This will open the Amazon Pinpoint console for your project in your default web browser. Within about a minute you should start seeing the events populating in the Events section of then Pinpoint console.&lt;/p&gt; &#xA;&lt;p&gt;For further documentation and Amplify Category API usage, see the &lt;a href=&#34;https://docs.amplify.aws/lib/q/platform/flutter&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Flutter and the related logo are trademarks of Google LLC. We are not endorsed by or affiliated with Google LLC.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TheAlphamerc/flutter_twitter_clone</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/TheAlphamerc/flutter_twitter_clone</id>
    <link href="https://github.com/TheAlphamerc/flutter_twitter_clone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fully functional Twitter clone built in flutter framework using Firebase realtime database and storage&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Fwitter - Twitter clone in flutter &lt;a href=&#34;https://github.com/login?return_to=%2FTheAlphamerc%flutter_twitter_clone&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Thealphamerc/flutter_twitter_clone?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/forks/TheAlphamerc/flutter_twitter_clone?style=social&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;A working Twitter clone built in Flutter using Firebase auth,realtime,firestore database and storage.&lt;/p&gt; &#xA;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.thealphamerc.flutter_twitter_clone&#34;&gt; &lt;img width=&#34;100%&#34; alt=&#34;Fwiiter Banner&#34; src=&#34;https://user-images.githubusercontent.com/37103237/152671482-885fd940-f4ea-4fb6-8baf-816c17b541d7.png&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/workflows/Dart%20CI/badge.svg?sanitize=true&#34; alt=&#34;Dart CI&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/TheAlphamerc/flutter_twitter_clone&#34; alt=&#34;GitHub pull requests&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr-closed/Thealphamerc/flutter_twitter_clone&#34; alt=&#34;GitHub closed pull requests&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/Thealphamerc/flutter_twitter_clone&#34; alt=&#34;GitHub last commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-raw/Thealphamerc/flutter_twitter_clone&#34; alt=&#34;GitHub issues&#34;&gt; &lt;a href=&#34;https://github.com/Thealphamerc/flutter_twitter_clone&#34;&gt;&lt;img src=&#34;https://badges.frapsoft.com/os/v2/open-source.svg?v=103&#34; alt=&#34;Open Source Love&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/Solido/awesome-flutter#top&#34;&gt; &lt;img alt=&#34;Awesome Flutter&#34; src=&#34;https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Download App&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.thealphamerc.flutter_twitter_clone&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;App features is mentioned at project section &lt;a href=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/projects/1&#34;&gt; Click here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Messaging chat section status can be seen at &lt;a href=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/projects/2&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;span&gt;üí•&lt;/span&gt; Fwitter app now uses both firebase &lt;code&gt;realtime&lt;/code&gt; and &lt;code&gt;firestore&lt;/code&gt; database.&lt;span&gt;üí•&lt;/span&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In branch &lt;strong&gt;firetore&lt;/strong&gt; Fwitter uses &lt;code&gt;Firestore&lt;/code&gt; database for app.&lt;/li&gt; &#xA; &lt;li&gt;In branch &lt;strong&gt;Master&lt;/strong&gt; and &lt;strong&gt;realtime_db&lt;/strong&gt; Fwitter uses &lt;code&gt;Firebase Realtime&lt;/code&gt; database for app.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Click to expand &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/intl&#34;&gt;intl&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/uuid&#34;&gt;uuid&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/http&#34;&gt;http&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/share&#34;&gt;share&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/provider&#34;&gt;provider&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/url_launcher&#34;&gt;url_launcher&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/google_fonts&#34;&gt;google_fonts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/image_picker&#34;&gt;image_picker&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/firebase_auth&#34;&gt;firebase_auth&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/google_sign_in&#34;&gt;google_sign_in&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/firebase_analytics&#34;&gt;firebase_analytics&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/firebase_database&#34;&gt;firebase_database&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/shared_preferences&#34;&gt;shared_preferences&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_advanced_networkimage&#34;&gt;flutter_advanced_networkimage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Welcome Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Login Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Signup Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Forgot Password Page&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Auth/screenshot_1.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Auth/screenshot_2.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Auth/screenshot_3.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Auth/screenshot_4.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Home Page Sidebaar&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Home Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Home Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Home Page&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Home/screenshot_5.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Home/screenshot_2.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Home/screenshot_7.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Home/screenshot_6.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Compose Tweet Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Reply To Tweet&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Reply to Tweet&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Compose Retweet with comment&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/CreateTweet/screenshot_1.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/CreateTweet/screenshot_2.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/CreateTweet/screenshot_4.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/CreateTweet/screenshot_3.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tweet Detail Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tweet Thread&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Nested Tweet Thread&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tweet options&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/TweetDetail/screenshot_3.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/TweetDetail/screenshot_4.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/TweetDetail/screenshot_1.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/TweetDetail/screenshot_2.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Notification Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Notification Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Notification Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Notification Setting Page&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Notification/screenshot_1.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Notification/screenshot_2.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Notification/screenshot_3.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Notification/screenshot_4.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Profile Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Profile Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Profile Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Profile Page&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Profile/screenshot_1.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Profile/screenshot_2.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Profile/screenshot_4.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Profile/screenshot_7.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Select User Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Chat Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Chat Users List&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Conversation Info Page&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Chat/screenshot_1.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Chat/screenshot_2.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Chat/screenshot_3.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Chat/screenshot_4.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Search Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Search Setting Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tweet Options - 1&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tweet Options - 2&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Search/screenshot_1.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Search/screenshot_2.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/TweetDetail/screenshot_5.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/TweetDetail/screenshot_6.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Setting Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Account Setting Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Privacy Setting Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Privacy Settings Page&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Settings/screenshot_1.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Settings/screenshot_2.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Settings/screenshot_4.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Settings/screenshot_3.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Content Prefrences Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Display Setting Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Data Settings Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Accessibility Settings&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Settings/screenshot_5.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Settings/screenshot_6.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Settings/screenshot_7.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Settings/screenshot_8.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Users who likes Tweet&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;About Setting Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Licenses Settings&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Settings&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/TweetDetail/screenshot_7.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Settings/screenshot_9.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Settings/screenshot_10.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/screenshots/Settings/screenshot_81.jpg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Project setup instructions are given at &lt;a href=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/wiki/Gettings-Started&#34;&gt;Wiki&lt;/a&gt; section.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Click to expand &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;|-- lib&#xA;|   |-- helper&#xA;|   |   |-- constant.dart&#xA;|   |   |-- customRoute.dart&#xA;|   |   |-- enum.dart&#xA;|   |   |-- routes.dart&#xA;|   |   |-- theme.dart&#xA;|   |   |-- utility.dart&#xA;|   |   &#39;-- validator.dart&#xA;|   |-- main.dart&#xA;|   |-- model&#xA;|   |   |-- chatModel.dart&#xA;|   |   |-- feedModel.dart&#xA;|   |   |-- notificationModel.dart&#xA;|   |   &#39;-- user.dart&#xA;|   |-- page&#xA;|   |   |-- Auth&#xA;|   |   |   |-- forgetPasswordPage.dart&#xA;|   |   |   |-- selectAuthMethod.dart&#xA;|   |   |   |-- signin.dart&#xA;|   |   |   |-- signup.dart&#xA;|   |   |   |-- verifyEmail.dart&#xA;|   |   |   &#39;-- widget&#xA;|   |   |       &#39;-- googleLoginButton.dart&#xA;|   |   |-- common&#xA;|   |   |   |-- sidebar.dart&#xA;|   |   |   |-- splash.dart&#xA;|   |   |   |-- usersListPage.dart&#xA;|   |   |   &#39;-- widget&#xA;|   |   |       &#39;-- userListWidget.dart&#xA;|   |   |-- feed&#xA;|   |   |   |-- composeTweet&#xA;|   |   |   |   |-- composeTweet.dart&#xA;|   |   |   |   |-- state&#xA;|   |   |   |   |   &#39;-- composeTweetState.dart&#xA;|   |   |   |   &#39;-- widget&#xA;|   |   |   |       |-- composeBottomIconWidget.dart&#xA;|   |   |   |       |-- composeTweetImage.dart&#xA;|   |   |   |       &#39;-- widgetView.dart&#xA;|   |   |   |-- feedPage.dart&#xA;|   |   |   |-- feedPostDetail.dart&#xA;|   |   |   &#39;-- imageViewPage.dart&#xA;|   |   |-- homePage.dart&#xA;|   |   |-- message&#xA;|   |   |   |-- chatListPage.dart&#xA;|   |   |   |-- chatScreenPage.dart&#xA;|   |   |   |-- conversationInformation&#xA;|   |   |   |   &#39;-- conversationInformation.dart&#xA;|   |   |   &#39;-- newMessagePage.dart&#xA;|   |   |-- notification&#xA;|   |   |   &#39;-- notificationPage.dart&#xA;|   |   |-- profile&#xA;|   |   |   |-- EditProfilePage.dart&#xA;|   |   |   |-- follow&#xA;|   |   |   |   |-- followerListPage.dart&#xA;|   |   |   |   &#39;-- followingListPage.dart&#xA;|   |   |   |-- profileImageView.dart&#xA;|   |   |   |-- profilePage.dart&#xA;|   |   |   &#39;-- widgets&#xA;|   |   |       &#39;-- tabPainter.dart&#xA;|   |   |-- search&#xA;|   |   |   &#39;-- SearchPage.dart&#xA;|   |   &#39;-- settings&#xA;|   |       |-- accountSettings&#xA;|   |       |   |-- about&#xA;|   |       |   |   &#39;-- aboutTwitter.dart&#xA;|   |       |   |-- accessibility&#xA;|   |       |   |   &#39;-- accessibility.dart&#xA;|   |       |   |-- accountSettingsPage.dart&#xA;|   |       |   |-- contentPrefrences&#xA;|   |       |   |   |-- contentPreference.dart&#xA;|   |       |   |   &#39;-- trends&#xA;|   |       |   |       &#39;-- trendsPage.dart&#xA;|   |       |   |-- dataUsage&#xA;|   |       |   |   &#39;-- dataUsagePage.dart&#xA;|   |       |   |-- displaySettings&#xA;|   |       |   |   &#39;-- displayAndSoundPage.dart&#xA;|   |       |   |-- notifications&#xA;|   |       |   |   &#39;-- notificationPage.dart&#xA;|   |       |   |-- privacyAndSafety&#xA;|   |       |   |   |-- directMessage&#xA;|   |       |   |   |   &#39;-- directMessage.dart&#xA;|   |       |   |   &#39;-- privacyAndSafetyPage.dart&#xA;|   |       |   &#39;-- proxy&#xA;|   |       |       &#39;-- proxyPage.dart&#xA;|   |       |-- settingsAndPrivacyPage.dart&#xA;|   |       &#39;-- widgets&#xA;|   |           |-- headerWidget.dart&#xA;|   |           |-- settingsAppbar.dart&#xA;|   |           &#39;-- settingsRowWidget.dart&#xA;|   |-- state&#xA;|   |   |-- appState.dart&#xA;|   |   |-- authState.dart&#xA;|   |   |-- chats&#xA;|   |   |   &#39;-- chatState.dart&#xA;|   |   |-- feedState.dart&#xA;|   |   |-- notificationState.dart&#xA;|   |   &#39;-- searchState.dart&#xA;|   &#39;-- widgets&#xA;|       |-- bottomMenuBar&#xA;|       |   |-- HalfPainter.dart&#xA;|       |   |-- bottomMenuBar.dart&#xA;|       |   &#39;-- tabItem.dart&#xA;|       |-- customAppBar.dart&#xA;|       |-- customWidgets.dart&#xA;|       |-- newWidget&#xA;|       |   |-- customClipper.dart&#xA;|       |   |-- customLoader.dart&#xA;|       |   |-- customProgressbar.dart&#xA;|       |   |-- customUrlText.dart&#xA;|       |   |-- emptyList.dart&#xA;|       |   |-- rippleButton.dart&#xA;|       |   &#39;-- title_text.dart&#xA;|       &#39;-- tweet&#xA;|           |-- tweet.dart&#xA;|           &#39;-- widgets&#xA;|               |-- parentTweet.dart&#xA;|               |-- retweetWidget.dart&#xA;|               |-- tweetBottomSheet.dart&#xA;|               |-- tweetIconsRow.dart&#xA;|               |-- tweetImage.dart&#xA;|               &#39;-- unavailableTweet.dart&#xA;|-- pubspec.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute a change to any of the existing feature or add new in this repo, please review our &lt;a href=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;, and send a &lt;a href=&#34;https://github.com/TheAlphamerc/flutter_twitter_clone/pulls&#34;&gt;pull request&lt;/a&gt;. I welcome and encourage all pull requests. It usually will take me within 24-48 hours to respond to any issue or request.&lt;/p&gt; &#xA;&lt;h2&gt;Created &amp;amp; Maintained By&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TheAlphamerc&#34;&gt;Sonu Sharma&lt;/a&gt; (&lt;a href=&#34;https://www.twitter.com/TheAlphamerc&#34;&gt;Twitter&lt;/a&gt;) (&lt;a href=&#34;https://www.youtube.com/user/sonusharma045sonu/&#34;&gt;Youtube&lt;/a&gt;) (&lt;a href=&#34;https://www.instagram.com/_sonu_sharma__&#34;&gt;Insta&lt;/a&gt;) (&lt;a href=&#34;https://dev.to/thealphamerc&#34;&gt;Dev.to&lt;/a&gt;) &lt;img src=&#34;https://img.shields.io/twitter/follow/thealphamerc?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you found this project helpful or you learned something from the source code and want to thank me, consider buying me a cup of &lt;span&gt;‚òï&lt;/span&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://paypal.me/TheAlphamerc/&#34;&gt;PayPal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can also nominate me for Github Star developer program &lt;a href=&#34;https://stars.github.com/nominate&#34;&gt;https://stars.github.com/nominate&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TheAlphamerc/TheAlphamerc&#34;&gt;TheAlphamerc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lielb100&#34;&gt;Liel Beigel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RiccardoM&#34;&gt;Riccardo Montagnin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/imsuriyan&#34;&gt;Suriyan&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Visitors Count&lt;/h2&gt; &#xA;&lt;img align=&#34;left&#34; src=&#34;https://profile-counter.glitch.me/flutter_twitter_clone/count.svg?sanitize=true&#34; alt=&#34;Loading&#34;&gt;</summary>
  </entry>
  <entry>
    <title>juliansteenbakker/mobile_scanner</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/juliansteenbakker/mobile_scanner</id>
    <link href="https://github.com/juliansteenbakker/mobile_scanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A universal scanner for Flutter based on MLKit. Uses CameraX on Android and AVFoundation on iOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mobile_scanner&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/mobile_scanner&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/mobile_scanner.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/lint&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-lint-4BC0F5.svg?sanitize=true&#34; alt=&#34;style: lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/juliansteenbakker/mobile_scanner/actions/workflows/flutter.yml&#34;&gt;&lt;img src=&#34;https://github.com/juliansteenbakker/mobile_scanner/actions/workflows/flutter.yml/badge.svg?sanitize=true&#34; alt=&#34;mobile_scanner&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/juliansteenbakker&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/juliansteenbakker?label=sponsor%20me&#34; alt=&#34;GitHub Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A universal barcode and QR code scanner for Flutter based on MLKit. Uses CameraX on Android, AVFoundation on iOS and Apple Vision &amp;amp; AVFoundation on macOS.&lt;/p&gt; &#xA;&lt;h2&gt;Platform Support&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MacOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Web&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úîÔ∏è&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úîÔ∏è&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úîÔ∏è&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úîÔ∏è&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;SDK 21 and newer. Reason: CameraX requires at least SDK 21. Also, make sure you upgrade kotlin to the latest version in your project.&lt;/p&gt; &#xA;&lt;p&gt;This packages uses the &lt;strong&gt;bundled version&lt;/strong&gt; of MLKit Barcode-scanning for Android. This version is more accurate and immediately available to devices. However, this version will increas the size of the app with approximately 3 to 10 MB. The alternative for this is to use the &lt;strong&gt;unbundled version&lt;/strong&gt; of MLKit Barcode-scanning for Android. This version is older than the bundled version however this only increases the size by around 600KB.&lt;/p&gt; &#xA;&lt;p&gt;To use this version you must alter the mobile_scanner gradle file to replace &lt;code&gt;com.google.mlkit:barcode-scanning:17.0.2&lt;/code&gt; with &lt;code&gt;com.google.android.gms:play-services-mlkit-barcode-scanning:18.0.0&lt;/code&gt;. Keep in mind that if you alter the gradle files directly in your project it can be overriden when you update your pubspec.yaml. I am still searching for a way to properly replace the module in gradle but have yet to find one.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/ml-kit/vision/barcode-scanning/android&#34;&gt;You can read more about the difference between the two versions here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;p&gt;iOS 11 and newer. Reason: MLKit for iOS requires at least iOS 10 and a &lt;a href=&#34;https://developers.google.com/ml-kit/migration/ios&#34;&gt;64bit device&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Add the following keys to your Info.plist file, located in &#xA;  &lt;project root&gt;&#xA;   /ios/Runner/Info.plist:&#xA;  &lt;/project&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;NSCameraUsageDescription - describe why your app needs access to the camera. This is called Privacy - Camera Usage Description in the visual editor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you want to use the local gallery feature from &lt;a href=&#34;https://pub.dev/packages/image_picker&#34;&gt;image_picker&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;NSPhotoLibraryUsageDescription - describe why your app needs permission for the photo library. This is called Privacy - Photo Library Usage Description in the visual editor.&lt;/p&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;macOS 10.13 or newer. Reason: Apple Vision library.&lt;/p&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;p&gt;Add this to &lt;code&gt;web/index.html&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/jsqr@1.4.0/dist/jsQR.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Web only supports QR codes for now. Do you have experience with Flutter Web development? &lt;a href=&#34;https://github.com/juliansteenbakker/mobile_scanner/issues/54&#34;&gt;Help me with migrating from jsQR to qr-scanner for full barcode support!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features Supported&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Features&lt;/th&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;   &lt;th&gt;macOS&lt;/th&gt; &#xA;   &lt;th&gt;Web&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;analyzeImage (Gallery)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Import &lt;code&gt;package:mobile_scanner/mobile_scanner.dart&lt;/code&gt;, and use the widget with or without the controller.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t provide a controller, you can&#39;t control functions like the torch(flash) or switching camera.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t set allowDuplicates to false, you can get multiple scans in a very short time, causing things like pop() to fire lots of times.&lt;/p&gt; &#xA;&lt;p&gt;Example without controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:mobile_scanner/mobile_scanner.dart&#39;;&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(title: const Text(&#39;Mobile Scanner&#39;)),&#xA;      body: MobileScanner(&#xA;          allowDuplicates: false,&#xA;          onDetect: (barcode, args) {&#xA;            if (barcode.rawValue == null) {&#xA;              debugPrint(&#39;Failed to scan Barcode&#39;);&#xA;            } else {&#xA;              final String code = barcode.rawValue!;&#xA;              debugPrint(&#39;Barcode found! $code&#39;);&#xA;            }&#xA;          }),&#xA;    );&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example with controller and initial values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:mobile_scanner/mobile_scanner.dart&#39;;&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(title: const Text(&#39;Mobile Scanner&#39;)),&#xA;      body: MobileScanner(&#xA;          allowDuplicates: false,&#xA;          controller: MobileScannerController(&#xA;            facing: CameraFacing.front, torchEnabled: true),&#xA;          onDetect: (barcode, args) {&#xA;            if (barcode.rawValue == null) {&#xA;              debugPrint(&#39;Failed to scan Barcode&#39;);&#xA;            } else {&#xA;              final String code = barcode.rawValue!;&#xA;              debugPrint(&#39;Barcode found! $code&#39;);&#xA;            }&#xA;          }),&#xA;    );&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example with controller and torch &amp;amp; camera controls:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:mobile_scanner/mobile_scanner.dart&#39;;&#xA;&#xA;  MobileScannerController cameraController = MobileScannerController();&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;        appBar: AppBar(&#xA;          title: const Text(&#39;Mobile Scanner&#39;),&#xA;          actions: [&#xA;            IconButton(&#xA;              color: Colors.white,&#xA;              icon: ValueListenableBuilder(&#xA;                valueListenable: cameraController.torchState,&#xA;                builder: (context, state, child) {&#xA;                  switch (state as TorchState) {&#xA;                    case TorchState.off:&#xA;                      return const Icon(Icons.flash_off, color: Colors.grey);&#xA;                    case TorchState.on:&#xA;                      return const Icon(Icons.flash_on, color: Colors.yellow);&#xA;                  }&#xA;                },&#xA;              ),&#xA;              iconSize: 32.0,&#xA;              onPressed: () =&amp;gt; cameraController.toggleTorch(),&#xA;            ),&#xA;            IconButton(&#xA;              color: Colors.white,&#xA;              icon: ValueListenableBuilder(&#xA;                valueListenable: cameraController.cameraFacingState,&#xA;                builder: (context, state, child) {&#xA;                  switch (state as CameraFacing) {&#xA;                    case CameraFacing.front:&#xA;                      return const Icon(Icons.camera_front);&#xA;                    case CameraFacing.back:&#xA;                      return const Icon(Icons.camera_rear);&#xA;                  }&#xA;                },&#xA;              ),&#xA;              iconSize: 32.0,&#xA;              onPressed: () =&amp;gt; cameraController.switchCamera(),&#xA;            ),&#xA;          ],&#xA;        ),&#xA;        body: MobileScanner(&#xA;            allowDuplicates: false,&#xA;            controller: cameraController,&#xA;            onDetect: (barcode, args) {&#xA;              if (barcode.rawValue == null) {&#xA;                debugPrint(&#39;Failed to scan Barcode&#39;);&#xA;              } else {&#xA;                final String code = barcode.rawValue!;&#xA;                debugPrint(&#39;Barcode found! $code&#39;);&#xA;              }&#xA;            }));&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>rrousselGit/riverpod</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/rrousselGit/riverpod</id>
    <link href="https://github.com/rrousselGit/riverpod" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple way to access state while robust and testable.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/rrousselGit/river_pod/actions&#34;&gt;&lt;img src=&#34;https://github.com/rrousselGit/river_pod/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/rrousselgit/river_pod&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/rrousselgit/river_pod/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rrousselgit/river_pod&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/rrousselgit/river_pod.svg?style=flat&amp;amp;logo=github&amp;amp;colorB=deeppink&amp;amp;label=stars&#34; alt=&#34;Star on Github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-purple.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/Bbumvej&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/765557403865186374.svg?logo=discord&amp;amp;color=blue&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.netlify.com&#34;&gt; &lt;img src=&#34;https://www.netlify.com/img/global/badges/netlify-color-accent.svg?sanitize=true&#34; alt=&#34;Deploys by Netlify&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/rrousselGit/river_pod/raw/master/resources/icon/Facebook%20Cover%20A.png?raw=true&#34; width=&#34;100%&#34; alt=&#34;Riverpod&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;A state-management library that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;catches programming errors at compile time rather than at runtime&lt;/li&gt; &#xA; &lt;li&gt;removes nesting for listening/combining objects&lt;/li&gt; &#xA; &lt;li&gt;ensures that the code is testable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;riverpod&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/riverpod&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/riverpod.svg?label=riverpod&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;flutter_riverpod&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_riverpod&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/riverpod.svg?label=flutter_riverpod&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hooks_riverpod&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/hooks_riverpod&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/riverpod.svg?label=hooks_riverpod&amp;amp;color=blue&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Welcome to &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;This project can be considered as a rewrite of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; to make improvements that would be otherwise impossible.&lt;/p&gt; &#xA;&lt;p&gt;For learning how to use &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;, see its documentation: &lt;a href=&#34;https://riverpod.dev&#34;&gt;https://riverpod.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Long story short:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Declare your providers as global variables:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final counterProvider = StateNotifierProvider((ref) {&#xA;  return Counter();&#xA;});&#xA;&#xA;class Counter extends StateNotifier&amp;lt;int&amp;gt; {&#xA;  Counter(): super(0);&#xA;&#xA;  void increment() =&amp;gt; state++;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use them inside your widgets in a compile time safe way. No runtime exceptions!&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Example extends ConsumerWidget {&#xA;  @override&#xA;  Widget build(BuildContext context, WidgetRef ref) {&#xA;    final count = ref.watch(counterProvider);&#xA;    return Text(count.toString());&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#FAQ&#34;&gt;FAQ&lt;/a&gt; if you have questions about what this means for &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Migration&lt;/h2&gt; &#xA;&lt;p&gt;With the release of version 1.0.0, the syntax for interacting with providers changed.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://riverpod.dev/docs/migration/0.14.0_to_1.0.0/&#34;&gt;the migration guide&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;h2&gt;Index&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#migration&#34;&gt;Migration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#index&#34;&gt;Index&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#faq&#34;&gt;FAQ&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#why-another-project-when-provider-already-exists&#34;&gt;Why another project when provider already exists?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#is-it-safe-to-use-in-production&#34;&gt;Is it safe to use in production?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#will-this-get-merged-with-provider-at-some-point&#34;&gt;Will this get merged with provider at some point?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#will-provider-be-deprecatedstop-being-supported&#34;&gt;Will provider be deprecated/stop being supported?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/riverpod/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;If &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; is a simplification of &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s, then &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; is a reimplementation of &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s from scratch.&lt;/p&gt; &#xA;&lt;p&gt;It is very similar to &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; in principle, but also has major differences as an attempt to fix the common problems that &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; face.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; has multiple goals. First, it inherits the goals of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Being able to safely create, observe and dispose states without having to worry about losing the state on widget rebuild.&lt;/li&gt; &#xA; &lt;li&gt;Making our objects visible in Flutter&#39;s devtool by default.&lt;/li&gt; &#xA; &lt;li&gt;Testable and composable&lt;/li&gt; &#xA; &lt;li&gt;Improve the readability of &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s when we have multiple of them (which would naturally lead to a deeply nested widget tree).&lt;/li&gt; &#xA; &lt;li&gt;Make apps more scalable with a unidirectional data flow.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;From there, &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; goes a few steps beyond:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reading objects is now &lt;strong&gt;compile-safe&lt;/strong&gt;. No more runtime exception.&lt;/li&gt; &#xA; &lt;li&gt;It makes the &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; pattern more flexible, which allows supporting commonly requested features like: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Being able to have multiple providers of the same type.&lt;/li&gt; &#xA;   &lt;li&gt;Disposing the state of a provider when it is no longer used.&lt;/li&gt; &#xA;   &lt;li&gt;Have computed states&lt;/li&gt; &#xA;   &lt;li&gt;Making a provider private.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Simplifies complex object graphs. It is easier to depend on asynchronous state.&lt;/li&gt; &#xA; &lt;li&gt;Makes the pattern independent from Flutter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These are achieved by no longer using &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s. Instead, &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; implements its own mechanism that works in a similar fashion.&lt;/p&gt; &#xA;&lt;p&gt;For learning how to use &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;, see its documentation: &lt;a href=&#34;https://riverpod.dev&#34;&gt;https://riverpod.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcomed!&lt;/p&gt; &#xA;&lt;p&gt;Here is a curated list of how you can help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Report bugs and scenarios that are difficult to implement&lt;/li&gt; &#xA; &lt;li&gt;Report parts of the documentation that are unclear&lt;/li&gt; &#xA; &lt;li&gt;Fix typos/grammar mistakes&lt;/li&gt; &#xA; &lt;li&gt;Update the documentation / add examples&lt;/li&gt; &#xA; &lt;li&gt;Implement new features by making a pull-request&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Why another project when provider already exists?&lt;/h3&gt; &#xA;&lt;p&gt;While &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; is largely used and well accepted by the community, it is not perfect either.&lt;/p&gt; &#xA;&lt;p&gt;People regularly file issues or ask questions about some problems they face, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Why do I have a &lt;code&gt;ProviderNotFoundException&lt;/code&gt;?&lt;/li&gt; &#xA; &lt;li&gt;How can I automatically dispose my state when not used anymore?&lt;/li&gt; &#xA; &lt;li&gt;How to make a provider that depends on other (potentially complex) providers?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These are legitimate problems, and I believe that something can be improved to fix those.&lt;/p&gt; &#xA;&lt;p&gt;The issue is, these problems are deeply rooted in how &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; works, and fixing those problems is likely impossible without drastic changes to the mechanism of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In a way, if &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; is a candle then &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; is a lightbulb. They have very similar usages, but we cannot create a lightbulb by improving our candle.&lt;/p&gt; &#xA;&lt;h3&gt;Is it safe to use in production?&lt;/h3&gt; &#xA;&lt;p&gt;Yes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; is stable and actively maintained.&lt;/p&gt; &#xA;&lt;h3&gt;Will this get merged with provider at some point?&lt;/h3&gt; &#xA;&lt;p&gt;No. At least not until it is proven that the community likes &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt; and that it doesn&#39;t cause more problems than it solves.&lt;/p&gt; &#xA;&lt;p&gt;While &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; and this project have a lot in common, they do have some major differences. Differences big enough that it would be a large breaking change for users of &lt;a href=&#34;https://github.com/rrousselGit/provider&#34;&gt;provider&lt;/a&gt; to migrate &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Considering that, separating both projects initially sounds like a better compromise.&lt;/p&gt; &#xA;&lt;h3&gt;Will provider be deprecated/stop being supported?&lt;/h3&gt; &#xA;&lt;p&gt;Not in the short term, no.&lt;/p&gt; &#xA;&lt;p&gt;However, a migration tool is planned to help assist migration from provider to &lt;a href=&#34;https://github.com/rrousselGit/river_pod&#34;&gt;Riverpod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/freezed/master/sponsorkit/sponsors.svg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rrousselGit/freezed/master/sponsorkit/sponsors.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flame-engine/flame</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/flame-engine/flame</id>
    <link href="https://github.com/flame-engine/flame" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter based game engine&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt; &lt;img alt=&#34;flame&#34; width=&#34;200px&#34; src=&#34;https://user-images.githubusercontent.com/6718144/101553774-3bc7b000-39ad-11eb-8a6a-de2daa31bd64.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A Flutter-based game engine. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Pub&#34; href=&#34;https://pub.dev/packages/flame&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flame.svg?style=popout&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/flame-engine/flame/workflows/cicd/badge.svg?branch=main&amp;amp;event=push&#34; alt=&#34;Test&#34;&gt; &lt;a title=&#34;Discord&#34; href=&#34;https://discord.gg/pxrBmy4&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/509714518008528896.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Melos&#34; href=&#34;https://github.com/invertase/melos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20with-melos-f700ff.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-ZH.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-PL.md&#34;&gt;Polski&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-RU.md&#34;&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-ES.md&#34;&gt;Espa√±ol&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-JA.md&#34;&gt;Êó•Êú¨Ë™û&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The full documentation for Flame can be found on &lt;a href=&#34;https://docs.flame-engine.org/&#34;&gt;docs.flame-engine.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To change the version of the documentation, use the version selector noted with &lt;code&gt;version:&lt;/code&gt; in the top of the page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The documentation that resides in the main branch is newer than the released documentation on the docs website.&lt;/p&gt; &#xA;&lt;p&gt;Other useful links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flame-engine.org/&#34;&gt;The official Flame site&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://examples.flame-engine.org/&#34;&gt;Examples&lt;/a&gt; of most features which can be tried out from your browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tutorials.flame-engine.org/&#34;&gt;Tutorials&lt;/a&gt; - A simple tutorial to get started.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/flame/latest/&#34;&gt;API Reference&lt;/a&gt; - The generated dartdoc API reference.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;There is a Flame community on &lt;a href=&#34;https://discord.gg/5unKpdQD78&#34;&gt;Blue Fire&#39;s Discord server&lt;/a&gt; where you can ask any of your Flame related questions.&lt;/p&gt; &#xA;&lt;p&gt;If you are more comfortable with StackOverflow, you can also create a question there. Add the &lt;a href=&#34;https://stackoverflow.com/questions/tagged/flame&#34;&gt;Flame tag&lt;/a&gt;, so that anyone following the tag can help out.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The goal of the Flame Engine is to provide a complete set of out-of-the-way solutions for common problems that games developed with Flutter might share.&lt;/p&gt; &#xA;&lt;p&gt;Some of the key features provided are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A game loop.&lt;/li&gt; &#xA; &lt;li&gt;A component/object system (FCS).&lt;/li&gt; &#xA; &lt;li&gt;Effects and particles.&lt;/li&gt; &#xA; &lt;li&gt;Collision detection.&lt;/li&gt; &#xA; &lt;li&gt;Gesture and input handling.&lt;/li&gt; &#xA; &lt;li&gt;Images, animations, sprites, and sprite sheets.&lt;/li&gt; &#xA; &lt;li&gt;General utilities to make development easier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On top of those features, you can augment Flame with bridge packages. Through these libraries, you will be able to access bindings to other packages, including custom Flame components and helpers, in order to make integrations seamless.&lt;/p&gt; &#xA;&lt;p&gt;Flame officially provides bridge libraries to the following packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_audio&#34;&gt;flame_audio&lt;/a&gt; for &lt;a href=&#34;https://github.com/bluefireteam/audioplayers&#34;&gt;AudioPlayers&lt;/a&gt;: Play multiple audio files simultaneously.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_bloc&#34;&gt;flame_bloc&lt;/a&gt; for &lt;a href=&#34;https://github.com/felangel/bloc&#34;&gt;Bloc&lt;/a&gt;: A predictable state management library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_fire_atlas&#34;&gt;flame_fire_atlas&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/fire-atlas&#34;&gt;FireAtlas&lt;/a&gt;: Create texture atlases for games.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_forge2d&#34;&gt;flame_forge2d&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/forge2d&#34;&gt;Forge2D&lt;/a&gt;: A Box2D physics engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_lint&#34;&gt;flame_lint&lt;/a&gt; - Our set of linting (&lt;code&gt;analysis_options.yaml&lt;/code&gt;) rules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_oxygen&#34;&gt;flame_oxygen&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/oxygen&#34;&gt;Oxygen&lt;/a&gt;: A lightweight Entity Component System (ECS) framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_rive&#34;&gt;flame_rive&lt;/a&gt; for &lt;a href=&#34;https://rive.app/&#34;&gt;Rive&lt;/a&gt;: Create interactive animations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_svg&#34;&gt;flame_svg&lt;/a&gt; for &lt;a href=&#34;https://github.com/dnfield/flutter_svg&#34;&gt;flutter_svg&lt;/a&gt;: Draw SVG files in Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_tiled&#34;&gt;flame_tiled&lt;/a&gt; for &lt;a href=&#34;https://www.mapeditor.org/&#34;&gt;Tiled&lt;/a&gt;: 2D tile map level editor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;The Flame Engine&#39;s top sponsors:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://verygood.ventures/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/media/unicorn_two_toned.png&#34; alt=&#34;Very Good Ventures&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cypherstack.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/media/logo_cypherstack.png&#34; alt=&#34;Cypher Stack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to sponsor Flame? Check our Patreon on the section below, or contact us on Discord.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to show us your support is by giving the project a star.&lt;/p&gt; &#xA;&lt;p&gt;You can also support us by becoming a patron on Patreon:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/bluefireoss&#34;&gt;&lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button.png&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or by making a single donation by buying us a coffee:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/bluefire&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/835641/60540201-fcd7fa00-9ce4-11e9-87ec-1e98568e9f58.png&#34; alt=&#34;Buy Me A Coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also show on your repository that your game is made with Flame by using one of the following badges:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?sanitize=true&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?style=flat-square&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?style=for-the-badge&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg)](https://flame-engine.org)&#xA;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg?style=flat-square)](https://flame-engine.org)&#xA;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg?style=for-the-badge)](https://flame-engine.org)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Have you found a bug or have a suggestion of how to enhance Flame? Open an issue and we will take a look at it as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;Do you want to contribute with a PR? PRs are always welcome, just make sure to create it from the correct branch (main) and follow the &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/.github/pull_request_template.md&#34;&gt;checklist&lt;/a&gt; which will appear when you open the PR.&lt;/p&gt; &#xA;&lt;p&gt;For bigger changes, or if in doubt, make sure to talk about your contribution to the team. Either via an issue, GitHub discussion, or reach out to the team either using the &lt;a href=&#34;https://discord.gg/pxrBmy4&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;A simple tutorial to get started can be found on &lt;a href=&#34;https://tutorials.flame-engine.org&#34;&gt;tutorials.flame-engine.org&lt;/a&gt; and examples of most features in Flame can be found on &lt;a href=&#34;https://examples.flame-engine.org&#34;&gt;examples.flame-engine.org&lt;/a&gt;. To access the code for each example, press the &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt; button in the top right corner.&lt;/p&gt; &#xA;&lt;h3&gt;Highlighted community tutorials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;@Devowl&#39;s Flutter &amp;amp; Flame series:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-flame-step-1-create-your-game-b3b6ee387d77&#34;&gt;Step 1: Create your game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-flame-step-2-game-basics-48b4493424f3&#34;&gt;Step 2: Game basics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-3-sprites-and-inputs-7ca9cc7c8b91&#34;&gt;Step 3: Sprites and inputs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-4-collisions-viewport-ff2da048e3a6&#34;&gt;Step 4: Collisions &amp;amp; Viewport&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-5-level-generation-camera-62a060a286e3&#34;&gt;Step 5: Level generation &amp;amp; camera&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Other tutorials:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;@Vguzzi&#39;s article &lt;a href=&#34;https://www.raywenderlich.com/27407121-building-games-in-flutter-with-flame-getting-started&#34;&gt;Building Games in Flutter with Flame&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;@DevKage&#39;s YouTube series with the &lt;a href=&#34;https://www.youtube.com/playlist?list=PLiZZKL9HLmWOmQgYxWHuOHOWsUUlhCCOY&#34;&gt;Dino run tutorial&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We offer a curated list of Games, Libraries and Articles over at &lt;a href=&#34;https://github.com/flame-engine/awesome-flame&#34;&gt;awesome-flame&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that some of the articles might be slightly outdated, but can still be useful.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/orgs/bluefireteam/people&#34;&gt;Blue Fire team&lt;/a&gt;, who are continuously working on maintaining and improving Flame and its ecosystem.&lt;/li&gt; &#xA; &lt;li&gt;All the friendly contributors and people who are helping in the community.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>google/charts</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/google/charts</id>
    <link href="https://github.com/google/charts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Charts is a general charting library, currently enabled for the &lt;a href=&#34;https://flutter.io&#34;&gt;Flutter mobile UI framework&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://google.github.io/charts/flutter/gallery.html&#34;&gt;online gallery&lt;/a&gt; for supported chart types and examples of how to custom components of the chart.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This is not an official Google product.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/google/charts&#34;&gt;&lt;img src=&#34;https://travis-ci.org/google/charts.svg?branch=master&#34; alt=&#34;Travis CI Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;charts_common&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/charts_common&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/charts_common.svg?sanitize=true&#34; alt=&#34;charts_common pub package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A common library for charting packages.&lt;/p&gt; &#xA;&lt;h2&gt;charts_flutter&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/charts_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/charts_flutter.svg?sanitize=true&#34; alt=&#34;charts_flutter pub package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A charting package for &lt;a href=&#34;https://flutter.io&#34;&gt;Flutter&lt;/a&gt;, supporting both Android and iOS.&lt;/p&gt; &#xA;&lt;p&gt;All charts packages are licensed under the Apache 2 license, see the &lt;a href=&#34;https://raw.githubusercontent.com/google/charts/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/google/charts/master/AUTHORS&#34;&gt;AUTHORS&lt;/a&gt; files for details.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;This project is developed internally at Google and published for external consumption, external contributions unfortunately cannot be taken at this time.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Sub6Resources/flutter_html</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/Sub6Resources/flutter_html</id>
    <link href="https://github.com/Sub6Resources/flutter_html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter widget for rendering static html as Flutter widgets (Will render over 80 different html tags!)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flutter_html&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_html&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_html.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Sub6Resources/flutter_html&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Sub6Resources/flutter_html/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/Sub6Resources/flutter_html&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/Sub6Resources/flutter_html.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Sub6Resources/flutter_html/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?style=flat&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Flutter widget for rendering HTML and CSS as Flutter widgets.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Screenshot 1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Screenshot 2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Screenshot 3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;A Screenshot of flutter_html&#34; src=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/.github/flutter_html_screenshot.png&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;Another Screenshot of flutter_html&#34; src=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/.github/flutter_html_screenshot2.png&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;Yet another Screenshot of flutter_html&#34; src=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/.github/flutter_html_screenshot3.png&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Table of Contents:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#installing&#34;&gt;Installing&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#currently-supported-html-tags&#34;&gt;Currently Supported HTML Tags&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#currently-supported-css-attributes&#34;&gt;Currently Supported CSS Attributes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#currently-supported-inline-css-attributes&#34;&gt;Currently Supported Inline CSS Attributes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#why-this-package&#34;&gt;Why flutter_html?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#api-reference&#34;&gt;API Reference&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#constructors&#34;&gt;Constructors&lt;/a&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#selectable-text&#34;&gt;Selectable Text&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#parameters&#34;&gt;Parameters Table&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#methods&#34;&gt;Methods&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#getters&#34;&gt;Getters&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#data&#34;&gt;Data&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#document&#34;&gt;Document&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#onlinktap&#34;&gt;onLinkTap&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#customrender&#34;&gt;customRender&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#onimageerror&#34;&gt;onImageError&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#onimagetap&#34;&gt;onImageTap&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#tagslist&#34;&gt;tagsList&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#style&#34;&gt;style&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#rendering-reference&#34;&gt;Rendering Reference&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#image&#34;&gt;Image&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#external-packages&#34;&gt;External Packages&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#flutter_html_all&#34;&gt;&lt;code&gt;flutter_html_all&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#flutter_html_audio&#34;&gt;&lt;code&gt;flutter_html_audio&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#flutter_html_iframe&#34;&gt;&lt;code&gt;flutter_html_iframe&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#flutter_html_math&#34;&gt;&lt;code&gt;flutter_html_math&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#flutter_html_svg&#34;&gt;&lt;code&gt;flutter_html_svg&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#flutter_html_table&#34;&gt;&lt;code&gt;flutter_html_table&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#flutter_html_video&#34;&gt;&lt;code&gt;flutter_html_video&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#notes&#34;&gt;Notes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#migration-guides&#34;&gt;Migration Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#contribution-guide&#34;&gt;Contribution Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing:&lt;/h2&gt; &#xA;&lt;p&gt;Add the following to your &lt;code&gt;pubspec.yaml&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dependencies:&#xA;  flutter_html: ^3.0.0-alpha.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Currently Supported HTML Tags:&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;a&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;abbr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;acronym&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;address&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;article&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;aside&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;audio&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;b&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bdi&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bdo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;big&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;blockquote&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;body&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;br&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;caption&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cite&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;code&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;data&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dd&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;del&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;details&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dfn&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;div&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;em&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;figcaption&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;figure&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;footer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;font&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;h1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;h2&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;h3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;h4&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;h5&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;h6&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;header&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;hr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;i&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;iframe&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;img&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ins&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;kbd&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;li&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;main&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nav&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;noscript&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ol&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;p&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pre&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;q&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;rp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;rt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ruby&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;s&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;samp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;section&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;small&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;span&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;strike&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;strong&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sub&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sup&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;summary&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;svg&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;table&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tbody&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;td&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;template&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tfoot&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;th&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;thead&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;time&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;u&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ul&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;var&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;video&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;math&lt;/code&gt;:&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mrow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;msup&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;msub&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mover&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;munder&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;msubsup&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;moverunder&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;mfrac&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mlongdiv&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;msqrt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mroot&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mi&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mn&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Currently Supported CSS Attributes:&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;display&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;font-family&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;font-feature-settings&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;font-size&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;font-style&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;font-weight&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;height&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;letter-spacing&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;line-height&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;list-style-type&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;list-style-position&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;padding&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text-align&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text-decoration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text-decoration-color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text-decoration-style&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text-decoration-thickness&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;text-shadow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;vertical-align&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;white-space&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;width&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;word-spacing&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Currently Supported Inline CSS Attributes:&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;border&lt;/code&gt; (including specific directions)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;display&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;font-family&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;font-feature-settings&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;font-size&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;font-style&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;font-weight&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;line-height&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;list-style-type&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;list-style-position&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;padding&lt;/code&gt; (including specific directions)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;margin&lt;/code&gt; (including specific directions)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text-align&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text-decoration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text-decoration-color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text-decoration-style&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text-shadow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Don&#39;t see a tag or attribute you need? File a feature request or contribute to the project!&lt;/p&gt; &#xA;&lt;h2&gt;Why this package?&lt;/h2&gt; &#xA;&lt;p&gt;This package is designed with simplicity in mind. Originally created to allow basic rendering of HTML content into the Flutter widget tree, this project has expanded to include support for basic styling as well! If you need something more robust and customizable, the package also provides a number of optional custom APIs for extremely granular control over widget rendering!&lt;/p&gt; &#xA;&lt;h2&gt;API Reference:&lt;/h2&gt; &#xA;&lt;p&gt;For the full API reference, see &lt;a href=&#34;https://pub.dev/documentation/flutter_html/latest/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a full example, see &lt;a href=&#34;https://github.com/Sub6Resources/flutter_html/tree/master/example&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Below, you will find brief descriptions of the parameters the&lt;code&gt;Html&lt;/code&gt; widget accepts and some code snippets to help you use this package.&lt;/p&gt; &#xA;&lt;h3&gt;Constructors:&lt;/h3&gt; &#xA;&lt;p&gt;The package currently has two different constructors - &lt;code&gt;Html()&lt;/code&gt; and &lt;code&gt;Html.fromDom()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;Html()&lt;/code&gt; constructor is for those who would like to directly pass HTML from the source to the package to be rendered.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to modify or sanitize the HTML before rendering it, then &lt;code&gt;Html.fromDom()&lt;/code&gt; is for you - you can convert the HTML string to a &lt;code&gt;Document&lt;/code&gt; and use its methods to modify the HTML as you wish. Then, you can directly pass the modified &lt;code&gt;Document&lt;/code&gt; to the package. This eliminates the need to parse the modified &lt;code&gt;Document&lt;/code&gt; back to a string, pass to &lt;code&gt;Html()&lt;/code&gt;, and convert back to a &lt;code&gt;Document&lt;/code&gt;, thus cutting down on load times.&lt;/p&gt; &#xA;&lt;h4&gt;Selectable Text&lt;/h4&gt; &#xA;&lt;p&gt;The package also has two constructors for selectable text support - &lt;code&gt;SelectableHtml()&lt;/code&gt; and &lt;code&gt;SelectableHtml.fromDom()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The difference between the two is the same as noted above.&lt;/p&gt; &#xA;&lt;p&gt;Please note: Due to Flutter &lt;a href=&#34;https://github.com/flutter/flutter/issues/38474&#34;&gt;#38474&lt;/a&gt;, selectable text support is significantly watered down compared to the standard non-selectable version of the widget. The changes are as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The list of tags that can be rendered is significantly reduced. Key omissions include no support for images/video/audio, table, and ul/ol.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;No support for &lt;code&gt;customRender&lt;/code&gt;, &lt;code&gt;customImageRender&lt;/code&gt;, &lt;code&gt;onImageError&lt;/code&gt;, &lt;code&gt;onImageTap&lt;/code&gt;, &lt;code&gt;onMathError&lt;/code&gt;, and &lt;code&gt;navigationDelegateForIframe&lt;/code&gt;. (Support for &lt;code&gt;customRender&lt;/code&gt; may be added in the future).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Styling support is significantly reduced. Only text-related styling works (e.g. bold or italic), while container related styling (e.g. borders or padding/margin) do not work.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Once the above issue is resolved, the aforementioned compromises will go away. Currently the &lt;code&gt;SelectableText.rich()&lt;/code&gt; constructor does not support &lt;code&gt;WidgetSpan&lt;/code&gt;s, resulting in the feature losses above.&lt;/p&gt; &#xA;&lt;h3&gt;Parameters:&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameters&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;data&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The HTML data passed to the &lt;code&gt;Html&lt;/code&gt; widget. This is required and cannot be null when using &lt;code&gt;Html()&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;document&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The DOM document passed to the &lt;code&gt;Html&lt;/code&gt; widget. This is required and cannot be null when using &lt;code&gt;Html.fromDom()&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;onLinkTap&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A function that defines what the widget should do when a link is tapped. The function exposes the &lt;code&gt;src&lt;/code&gt; of the link as a &lt;code&gt;String&lt;/code&gt; to use in your implementation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;customRenders&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A powerful API that allows you to customize everything when rendering a specific HTML tag.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;onImageError&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A function that defines what the widget should do when an image fails to load. The function exposes the exception &lt;code&gt;Object&lt;/code&gt; and &lt;code&gt;StackTrace&lt;/code&gt; to use in your implementation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;shrinkWrap&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A &lt;code&gt;bool&lt;/code&gt; used while rendering different widgets to specify whether they should be shrink-wrapped or not, like &lt;code&gt;ContainerSpan&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;onImageTap&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A function that defines what the widget should do when an image is tapped. The function exposes the &lt;code&gt;src&lt;/code&gt; of the image as a &lt;code&gt;String&lt;/code&gt; to use in your implementation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tagsList&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A list of elements the &lt;code&gt;Html&lt;/code&gt; widget should render. The list should contain the tags of the HTML elements you wish to include.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;style&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A powerful API that allows you to customize the style that should be used when rendering a specific HTMl tag.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;selectionControls&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A custom text selection controls that allow you to override default toolbar and build toolbar with custom text selection options. See an &lt;a href=&#34;https://github.com/justinmc/flutter-text-selection-menu-examples/raw/master/lib/custom_menu_page.dart&#34;&gt;example&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Methods:&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Methods&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;disposeAll()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Disposes all &lt;code&gt;ChewieController&lt;/code&gt;s, &lt;code&gt;ChewieAudioController&lt;/code&gt;s, and &lt;code&gt;VideoPlayerController&lt;/code&gt;s being used by every &lt;code&gt;Html&lt;/code&gt; widget. (Note: &lt;code&gt;Html&lt;/code&gt; widgets automatically dispose their controllers, this method is only provided in case you need other behavior)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Getters:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Html.tags&lt;/code&gt;. This provides a list of all the tags the package renders. The main use case is to assist in excluding elements using &lt;code&gt;tagsList&lt;/code&gt;. See an &lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#example-usage---tagslist---excluding-tags&#34;&gt;example&lt;/a&gt; below.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;SelectableHtml.tags&lt;/code&gt;. This provides a list of all the tags that can be rendered in selectable mode.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Html.chewieAudioControllers&lt;/code&gt;. This provides a list of all &lt;code&gt;ChewieAudioController&lt;/code&gt;s being used by &lt;code&gt;Html&lt;/code&gt; widgets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Html.chewieControllers&lt;/code&gt;. This provides a list of all &lt;code&gt;ChewieController&lt;/code&gt;s being used by &lt;code&gt;Html&lt;/code&gt; widgets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Html.videoPlayerControllers&lt;/code&gt;. This provides a list of all &lt;code&gt;VideoPlayerController&lt;/code&gt;s being used for video widgets by &lt;code&gt;Html&lt;/code&gt; widgets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Html.audioPlayerControllers&lt;/code&gt;. This provides a list of all &lt;code&gt;VideoPlayerController&lt;/code&gt;s being used for audio widgets by &lt;code&gt;Html&lt;/code&gt; widgets.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Data:&lt;/h3&gt; &#xA;&lt;p&gt;The HTML data passed to the &lt;code&gt;Html&lt;/code&gt; widget as a &lt;code&gt;String&lt;/code&gt;. This is required and cannot be null when using &lt;code&gt;Html&lt;/code&gt;. Any HTML tags in the &lt;code&gt;String&lt;/code&gt; that are not supported by the package will not be rendered.&lt;/p&gt; &#xA;&lt;h4&gt;Example Usage - Data:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  data: &#34;&#34;&#34;&amp;lt;div&amp;gt;&#xA;        &amp;lt;h1&amp;gt;Demo Page&amp;lt;/h1&amp;gt;&#xA;        &amp;lt;p&amp;gt;This is a fantastic product that you should buy!&amp;lt;/p&amp;gt;&#xA;        &amp;lt;h3&amp;gt;Features&amp;lt;/h3&amp;gt;&#xA;        &amp;lt;ul&amp;gt;&#xA;          &amp;lt;li&amp;gt;It actually works&amp;lt;/li&amp;gt;&#xA;          &amp;lt;li&amp;gt;It exists&amp;lt;/li&amp;gt;&#xA;          &amp;lt;li&amp;gt;It doesn&#39;t cost much!&amp;lt;/li&amp;gt;&#xA;        &amp;lt;/ul&amp;gt;&#xA;        &amp;lt;!--You can pretty much put any html in here!--&amp;gt;&#xA;      &amp;lt;/div&amp;gt;&#34;&#34;&#34;,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Document:&lt;/h3&gt; &#xA;&lt;p&gt;The DOM document passed to the &lt;code&gt;Html&lt;/code&gt; widget as a &lt;code&gt;Document&lt;/code&gt;. This is required and cannot be null when using &lt;code&gt;Html.fromDom()&lt;/code&gt;. Any HTML tags in the document that are not supported by the package will not be rendered. Using the &lt;code&gt;Html.fromDom()&lt;/code&gt; constructor can be useful when you would like to sanitize the HTML string yourself before passing it to the package.&lt;/p&gt; &#xA;&lt;h4&gt;Example Usage - Document:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:html/parser.dart&#39; as htmlparser;&#xA;import &#39;package:html/dom.dart&#39; as dom;&#xA;...&#xA;String htmlData = &#34;&#34;&#34;&amp;lt;div&amp;gt;&#xA;  &amp;lt;h1&amp;gt;Demo Page&amp;lt;/h1&amp;gt;&#xA;  &amp;lt;p&amp;gt;This is a fantastic product that you should buy!&amp;lt;/p&amp;gt;&#xA;  &amp;lt;h3&amp;gt;Features&amp;lt;/h3&amp;gt;&#xA;  &amp;lt;ul&amp;gt;&#xA;    &amp;lt;li&amp;gt;It actually works&amp;lt;/li&amp;gt;&#xA;    &amp;lt;li&amp;gt;It exists&amp;lt;/li&amp;gt;&#xA;    &amp;lt;li&amp;gt;It doesn&#39;t cost much!&amp;lt;/li&amp;gt;&#xA;  &amp;lt;/ul&amp;gt;&#xA;  &amp;lt;!--You can pretty much put any html in here!--&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#34;&#34;&#34;;&#xA;dom.Document document = htmlparser.parse(htmlData);&#xA;/// sanitize or query document here&#xA;Widget html = Html(&#xA;  document: document,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;onLinkTap:&lt;/h3&gt; &#xA;&lt;p&gt;A function that defines what the widget should do when a link is tapped.&lt;/p&gt; &#xA;&lt;h4&gt;Example Usage - onLinkTap:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  data: &#34;&#34;&#34;&amp;lt;p&amp;gt;&#xA;   Linking to &amp;lt;a href=&#39;https://github.com&#39;&amp;gt;websites&amp;lt;/a&amp;gt; has never been easier.&#xA;  &amp;lt;/p&amp;gt;&#34;&#34;&#34;,&#xA;  onLinkTap: (String? url, RenderContext context, Map&amp;lt;String, String&amp;gt; attributes, dom.Element? element) {&#xA;    //open URL in webview, or launch URL in browser, or any other logic here&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Inner links (such as &lt;code&gt;&amp;lt;a href=&#34;#top&#34;&amp;gt;Back to the top&amp;lt;/a&amp;gt;&lt;/code&gt; will work out of the box by scrolling the viewport, as long as your &lt;code&gt;Html&lt;/code&gt; widget is wrapped in a scroll container such as a &lt;code&gt;SingleChildScrollView&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;customRenders:&lt;/h3&gt; &#xA;&lt;p&gt;A powerful API that allows you to customize everything when rendering a specific HTML tag. This means you can change the default behaviour or add support for HTML elements that aren&#39;t supported natively. You can also make up your own custom tags in your HTML!&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;customRender&lt;/code&gt; accepts a &lt;code&gt;Map&amp;lt;CustomRenderMatcher, CustomRender&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;CustomRenderMatcher&lt;/code&gt; is a function that requires a &lt;code&gt;bool&lt;/code&gt; to be returned. It exposes the &lt;code&gt;RenderContext&lt;/code&gt; which provides &lt;code&gt;BuildContext&lt;/code&gt; and access to the HTML tree.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;CustomRender&lt;/code&gt; class has two constructors: &lt;code&gt;CustomRender.widget()&lt;/code&gt; and &lt;code&gt;CustomRender.inlineSpan()&lt;/code&gt;. Both require a &lt;code&gt;&amp;lt;Widget/InlineSpan&amp;gt; Function(RenderContext, Function())&lt;/code&gt;. The &lt;code&gt;Function()&lt;/code&gt; argument is a function that will provide you with the element&#39;s children when needed.&lt;/p&gt; &#xA;&lt;p&gt;To use this API, create a matching function and an instance of &lt;code&gt;CustomRender&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Example Usages - customRenders:&lt;/h4&gt; &#xA;&lt;p&gt;Note: If you add any custom tags, you must add these tags to the &lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#tagslist&#34;&gt;&lt;code&gt;tagsList&lt;/code&gt;&lt;/a&gt; parameter, otherwise they will not be rendered. See below for an example.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Simple example - rendering custom HTML tags&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  data: &#34;&#34;&#34;&#xA;  &amp;lt;h3&amp;gt;Display bird element and flutter element &amp;lt;bird&amp;gt;&amp;lt;/bird&amp;gt;&amp;lt;/h3&amp;gt;&#xA;  &amp;lt;flutter&amp;gt;&amp;lt;/flutter&amp;gt;&#xA;  &amp;lt;flutter horizontal&amp;gt;&amp;lt;/flutter&amp;gt;&#xA;  &#34;&#34;&#34;,&#xA;  customRenders: {&#xA;      birdMatcher(): CustomRender.inlineSpan(inlineSpan: (context, buildChildren) =&amp;gt; TextSpan(text: &#34;üê¶&#34;)),&#xA;      flutterMatcher(): CustomRender.widget(widget: (context, buildChildren) =&amp;gt; FlutterLogo(&#xA;        style: (context.tree.element!.attributes[&#39;horizontal&#39;] != null)&#xA;            ? FlutterLogoStyle.horizontal&#xA;            : FlutterLogoStyle.markOnly,&#xA;        textColor: context.style.color!,&#xA;        size: context.style.fontSize!.size! * 5,&#xA;      )),&#xA;    },&#xA;  tagsList: Html.tags..addAll([&#34;bird&#34;, &#34;flutter&#34;]),&#xA;);&#xA;&#xA;CustomRenderMatcher birdMatcher() =&amp;gt; (context) =&amp;gt; context.tree.element?.localName == &#39;bird&#39;;&#xA;&#xA;CustomRenderMatcher flutterMatcher() =&amp;gt; (context) =&amp;gt; context.tree.element?.localName == &#39;flutter&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Complex example - wrapping the default widget with your own, in this case placing a horizontal scroll around a (potentially too wide) table.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Note: Requires the &lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#flutter_html_table&#34;&gt;&lt;code&gt;flutter_html_table&lt;/code&gt;&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;View code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  data: &#34;&#34;&#34;&#xA;  &amp;lt;table style=&#34;width:100%&#34;&amp;gt;&#xA;    &amp;lt;caption&amp;gt;Monthly savings&amp;lt;/caption&amp;gt;&#xA;    &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;January&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;February&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;March&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;April&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;May&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;June&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;July&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;August&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;September&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;October&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;November&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;December&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt;&#xA;    &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;\$100&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$50&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$80&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$60&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$90&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$140&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$110&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$80&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$90&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$60&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$40&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$70&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&#xA;    &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;\90&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$60&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$80&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$80&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$100&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$160&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$150&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$110&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$100&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$60&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$30&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;\$80&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&#xA;  &amp;lt;/table&amp;gt;&#xA;  &#34;&#34;&#34;,&#xA;  customRenders: {&#xA;    tableMatcher(): CustomRender.widget(widget: (context, child) {&#xA;      return SingleChildScrollView(&#xA;        scrollDirection: Axis.horizontal,&#xA;        // this calls the table CustomRender to render a table as normal (it uses a widget so we know widget is not null)&#xA;        child: tableRender.call().widget!.call(context, buildChildren),&#xA;      );&#xA;    }),&#xA;  },&#xA;);&#xA;&#xA;CustomRenderMatcher tableMatcher() =&amp;gt; (context) =&amp;gt; context.tree.element?.localName == &#34;table&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Complex example - rendering an &lt;code&gt;iframe&lt;/code&gt; differently based on whether it is an embedded youtube video or some other embedded content.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;View code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;   data: &#34;&#34;&#34;&#xA;   &amp;lt;h3&amp;gt;Google iframe:&amp;lt;/h3&amp;gt;&#xA;   &amp;lt;iframe src=&#34;https://google.com&#34;&amp;gt;&amp;lt;/iframe&amp;gt;&#xA;   &amp;lt;h3&amp;gt;YouTube iframe:&amp;lt;/h3&amp;gt;&#xA;   &amp;lt;iframe src=&#34;https://www.youtube.com/embed/tgbNymZ7vqY&#34;&amp;gt;&amp;lt;/iframe&amp;gt;&#xA;   &#34;&#34;&#34;,&#xA;   customRenders: {&#xA;      iframeYT(): CustomRender.widget(widget: (context, buildChildren) {&#xA;        double? width = double.tryParse(context.tree.attributes[&#39;width&#39;] ?? &#34;&#34;);&#xA;        double? height = double.tryParse(context.tree.attributes[&#39;height&#39;] ?? &#34;&#34;);&#xA;        return Container(&#xA;          width: width ?? (height ?? 150) * 2,&#xA;          height: height ?? (width ?? 300) / 2,&#xA;          child: WebView(&#xA;            initialUrl: context.tree.attributes[&#39;src&#39;]!,&#xA;            javascriptMode: JavascriptMode.unrestricted,&#xA;            navigationDelegate: (NavigationRequest request) async {&#xA;              //no need to load any url besides the embedded youtube url when displaying embedded youtube, so prevent url loading&#xA;              if (!request.url.contains(&#34;youtube.com/embed&#34;)) {&#xA;                return NavigationDecision.prevent;&#xA;              } else {&#xA;                return NavigationDecision.navigate;&#xA;              }&#xA;            },&#xA;          ),&#xA;        );&#xA;      }),&#xA;      iframeOther(): CustomRender.widget(widget: (context, buildChildren) {&#xA;        double? width = double.tryParse(context.tree.attributes[&#39;width&#39;] ?? &#34;&#34;);&#xA;        double? height = double.tryParse(context.tree.attributes[&#39;height&#39;] ?? &#34;&#34;);&#xA;        return Container(&#xA;          width: width ?? (height ?? 150) * 2,&#xA;          height: height ?? (width ?? 300) / 2,&#xA;          child: WebView(&#xA;            initialUrl: context.tree.attributes[&#39;src&#39;],&#xA;            javascriptMode: JavascriptMode.unrestricted,&#xA;            //on other iframe content scrolling might be necessary, so use VerticalDragGestureRecognizer&#xA;            gestureRecognizers: [&#xA;              Factory(() =&amp;gt; VerticalDragGestureRecognizer())&#xA;            ].toSet(),&#xA;          ),&#xA;        );&#xA;      }),&#xA;      iframeNull(): CustomRender.widget(widget: (context, buildChildren) =&amp;gt; Container(height: 0, width: 0)),&#xA;   }&#xA; );&#xA;&#xA;CustomRenderMatcher iframeYT() =&amp;gt; (context) =&amp;gt; context.tree.element?.attributes[&#39;src&#39;]?.contains(&#34;youtube.com/embed&#34;) ?? false;&#xA;&#xA;CustomRenderMatcher iframeOther() =&amp;gt; (context) =&amp;gt; !(context.tree.element?.attributes[&#39;src&#39;]?.contains(&#34;youtube.com/embed&#34;)&#xA;  ?? context.tree.element?.attributes[&#39;src&#39;] == null);&#xA;&#xA;CustomRenderMatcher iframeNull() =&amp;gt; (context) =&amp;gt; context.tree.element?.attributes[&#39;src&#39;] == null;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;More example usages and in-depth details available &lt;a href=&#34;https://github.com/Sub6Resources/flutter_html/wiki/All-About-customRender&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;onImageError:&lt;/h3&gt; &#xA;&lt;p&gt;A function that defines what the widget should do when an image fails to load. The function exposes the exception &lt;code&gt;Object&lt;/code&gt; and &lt;code&gt;StackTrace&lt;/code&gt; to use in your implementation.&lt;/p&gt; &#xA;&lt;h4&gt;Example Usage - onImageError:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  data: &#34;&#34;&#34;&amp;lt;img alt=&#39;Alt Text of an intentionally broken image&#39; src=&#39;https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_92x30d&#39;/&amp;gt;&#34;&#34;&#34;,&#xA;  onImageError: (Exception exception, StackTrace stackTrace) {&#xA;    FirebaseCrashlytics.instance.recordError(exception, stackTrace);&#xA;  },&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;onImageTap:&lt;/h3&gt; &#xA;&lt;p&gt;A function that defines what the widget should do when an image is tapped.&lt;/p&gt; &#xA;&lt;h4&gt;Example Usage - onImageTap:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  data: &#34;&#34;&#34;&amp;lt;img alt=&#39;Google&#39; src=&#39;https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_92x30dp.png&#39; /&amp;gt;&#34;&#34;&#34;,&#xA;  onImageTap: (String? url, RenderContext context, Map&amp;lt;String, String&amp;gt; attributes, dom.Element? element) {&#xA;    //open image in webview, or launch image in browser, or any other logic here&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;tagsList:&lt;/h3&gt; &#xA;&lt;p&gt;A list of elements the &lt;code&gt;Html&lt;/code&gt; widget should render. The list should contain the tags of the HTML elements you wish to whitelist.&lt;/p&gt; &#xA;&lt;h4&gt;Example Usage - tagsList - Excluding Tags:&lt;/h4&gt; &#xA;&lt;p&gt;You may have instances where you can choose between two different types of HTML tags to display the same content. In the example below, the &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; elements are going to display the same content.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;tagsList&lt;/code&gt; parameter allows you to change which element is rendered. Iframes can be advantageous because they allow parallel loading - Flutter just has to wait for the webview to be initialized before rendering the page, possibly cutting down on load time. Video can be advantageous because it provides a 100% native experience with Flutter widgets, but it may take more time to render the page. You may know that Flutter webview is a little janky in its current state on Android, so using &lt;code&gt;tagsList&lt;/code&gt; and a simple condition, you can get the best of both worlds - choose the video widget to render on Android and the iframe webview to render on iOS.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  data: &#34;&#34;&#34;&#xA;  &amp;lt;video controls&amp;gt;&#xA;    &amp;lt;source src=&#34;https://www.w3schools.com/html/mov_bbb.mp4&#34; /&amp;gt;&#xA;  &amp;lt;/video&amp;gt;&#xA;  &amp;lt;iframe src=&#34;https://www.w3schools.com/html/mov_bbb.mp4&#34;&amp;gt;&amp;lt;/iframe&amp;gt;&#34;&#34;&#34;,&#xA;  tagsList: Html.tags..remove(Platform.isAndroid ? &#34;iframe&#34; : &#34;video&#34;)&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Html.tags&lt;/code&gt; provides easy access to a list of all the tags the package can render, and you can remove specific tags from this list to blacklist them.&lt;/p&gt; &#xA;&lt;h4&gt;Example Usage - tagsList - Allowing Tags:&lt;/h4&gt; &#xA;&lt;p&gt;You may also have instances where you would only like the package to render a handful of html tags. You can do that like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  data: &#34;&#34;&#34;&#xA;    &amp;lt;p&amp;gt;Render this item&amp;lt;/p&amp;gt;&#xA;    &amp;lt;span&amp;gt;Do not render this item or any other item&amp;lt;/span&amp;gt;&#xA;    &amp;lt;img src=&#39;https://flutter.dev/images/flutter-mono-81x100.png&#39;/&amp;gt;&#xA;  &#34;&#34;&#34;,&#xA;  tagsList: [&#39;p&#39;]&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here, the package will only ever render &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; and ignore all other tags.&lt;/p&gt; &#xA;&lt;h3&gt;style:&lt;/h3&gt; &#xA;&lt;p&gt;A powerful API that allows you to customize the style that should be used when rendering a specific HTMl tag.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;style&lt;/code&gt; accepts a &lt;code&gt;Map&amp;lt;String, Style&amp;gt;&lt;/code&gt;. The &lt;code&gt;Style&lt;/code&gt; type is a class that allows you to set all the CSS styling the package currently supports. See &lt;a href=&#34;https://pub.dev/documentation/flutter_html/latest/style/Style-class.html&#34;&gt;here&lt;/a&gt; for the full list.&lt;/p&gt; &#xA;&lt;p&gt;To use this API, set the key as the tag of the HTML element you wish to provide a custom implementation for, and set the value to be a &lt;code&gt;Style&lt;/code&gt; with your customizations.&lt;/p&gt; &#xA;&lt;h4&gt;Example Usage - style:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  data: &#34;&#34;&#34;&#xA;    &amp;lt;h1&amp;gt;Table support:&amp;lt;/h1&amp;gt;&#xA;    &amp;lt;table&amp;gt;&#xA;    &amp;lt;colgroup&amp;gt;&#xA;    &amp;lt;col width=&#34;50%&#34; /&amp;gt;&#xA;    &amp;lt;col span=&#34;2&#34; width=&#34;25%&#34; /&amp;gt;&#xA;    &amp;lt;/colgroup&amp;gt;&#xA;    &amp;lt;thead&amp;gt;&#xA;    &amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;One&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Two&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Three&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;&#xA;    &amp;lt;/thead&amp;gt;&#xA;    &amp;lt;tbody&amp;gt;&#xA;    &amp;lt;tr&amp;gt;&#xA;    &amp;lt;td rowspan=&#39;2&#39;&amp;gt;Rowspan&amp;lt;br&amp;gt;Rowspan&amp;lt;br&amp;gt;Rowspan&amp;lt;br&amp;gt;Rowspan&amp;lt;br&amp;gt;Rowspan&amp;lt;br&amp;gt;Rowspan&amp;lt;br&amp;gt;Rowspan&amp;lt;br&amp;gt;Rowspan&amp;lt;br&amp;gt;Rowspan&amp;lt;br&amp;gt;Rowspan&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Data&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Data&amp;lt;/td&amp;gt;&#xA;    &amp;lt;/tr&amp;gt;&#xA;    &amp;lt;tr&amp;gt;&#xA;    &amp;lt;td colspan=&#34;2&#34;&amp;gt;&amp;lt;img alt=&#39;Google&#39; src=&#39;https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_92x30dp.png&#39; /&amp;gt;&amp;lt;/td&amp;gt;&#xA;    &amp;lt;/tr&amp;gt;&#xA;    &amp;lt;/tbody&amp;gt;&#xA;    &amp;lt;tfoot&amp;gt;&#xA;    &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;fData&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;fData&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;fData&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&#xA;    &amp;lt;/tfoot&amp;gt;&#xA;    &amp;lt;/table&amp;gt;&#34;&#34;&#34;,&#xA;  style: {&#xA;    // tables will have the below background color&#xA;    &#34;table&#34;: Style(&#xA;      backgroundColor: Color.fromARGB(0x50, 0xee, 0xee, 0xee),&#xA;    ),&#xA;    // some other granular customizations are also possible&#xA;    &#34;tr&#34;: Style(&#xA;      border: Border(bottom: BorderSide(color: Colors.grey)),&#xA;    ),&#xA;    &#34;th&#34;: Style(&#xA;      padding: EdgeInsets.all(6),&#xA;      backgroundColor: Colors.grey,&#xA;    ),&#xA;    &#34;td&#34;: Style(&#xA;      padding: EdgeInsets.all(6),&#xA;      alignment: Alignment.topLeft,&#xA;    ),&#xA;    // text that renders h1 elements will be red&#xA;    &#34;h1&#34;: Style(color: Colors.red),&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples and in-depth details available &lt;a href=&#34;https://github.com/Sub6Resources/flutter_html/wiki/Style&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Rendering Reference&lt;/h2&gt; &#xA;&lt;p&gt;This section will describe how certain HTML elements are rendered by this package, so you can evaluate how your HTML will be rendered and structure it accordingly.&lt;/p&gt; &#xA;&lt;h3&gt;Image&lt;/h3&gt; &#xA;&lt;p&gt;This package currently has support for base64 images, asset images, and network images.&lt;/p&gt; &#xA;&lt;p&gt;The package uses the &lt;code&gt;src&lt;/code&gt; of the image to determine which of the above types to render. The order is as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If the &lt;code&gt;src&lt;/code&gt; is null, render the alt text of the image, if any.&lt;/li&gt; &#xA; &lt;li&gt;If the &lt;code&gt;src&lt;/code&gt; starts with &#34;data:image&#34; and contains &#34;base64,&#34; (this indicates the image data is indeed base64), render an &lt;code&gt;Image.memory&lt;/code&gt; from the base64 data.&lt;/li&gt; &#xA; &lt;li&gt;If the &lt;code&gt;src&lt;/code&gt; starts with &#34;asset:&#34;, render an &lt;code&gt;Image.asset&lt;/code&gt; from the path in the &lt;code&gt;src&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Otherwise, just render an &lt;code&gt;Image.network&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If the rendering of any of the above fails, the package will fall back to rendering the alt text of the image, if any.&lt;/p&gt; &#xA;&lt;p&gt;Currently the package only considers the width, height, src, and alt text while rendering an image.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to support SVGs in an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, you should use the &lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#flutter_html_svg&#34;&gt;&lt;code&gt;flutter_html_svg&lt;/code&gt;&lt;/a&gt; package which provides support for base64, asset, and network SVGs.&lt;/p&gt; &#xA;&lt;h2&gt;External Packages&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;flutter_html_all&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This package is simply a convenience package that exports all the other external packages below. You should use this if you plan to activate all the renders that require external dependencies.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;flutter_html_audio&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This package renders audio elements using the &lt;a href=&#34;https://pub.dev/packages/chewie_audio&#34;&gt;&lt;code&gt;chewie_audio&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&#34;https://pub.dev/packages/video_player&#34;&gt;&lt;code&gt;video_player&lt;/code&gt;&lt;/a&gt; plugin.&lt;/p&gt; &#xA;&lt;p&gt;The package considers the attributes &lt;code&gt;controls&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;, &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;autoplay&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;muted&lt;/code&gt; when rendering the audio widget.&lt;/p&gt; &#xA;&lt;h4&gt;Registering the &lt;code&gt;CustomRender&lt;/code&gt;:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  customRenders: {&#xA;    audioMatcher(): audioRender(),&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;flutter_html_iframe&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This package renders iframes using the &lt;a href=&#34;https://pub.dev/packages/webview_flutter&#34;&gt;&lt;code&gt;webview_flutter&lt;/code&gt;&lt;/a&gt; plugin.&lt;/p&gt; &#xA;&lt;p&gt;When rendering iframes, the package considers the width, height, and sandbox attributes.&lt;/p&gt; &#xA;&lt;p&gt;Sandbox controls the JavaScript mode of the webview - a value of &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;allow-scripts&lt;/code&gt; will set &lt;code&gt;javascriptMode: JavascriptMode.unrestricted&lt;/code&gt;, otherwise it will set &lt;code&gt;javascriptMode: JavascriptMode.disabled&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Registering the &lt;code&gt;CustomRender&lt;/code&gt;:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  customRenders: {&#xA;    iframeMatcher(): iframeRender(),&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can set the &lt;code&gt;navigationDelegate&lt;/code&gt; of the webview with the &lt;code&gt;navigationDelegate&lt;/code&gt; property on &lt;code&gt;iframeRender&lt;/code&gt;. This allows you to block or allow the loading of certain URLs.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;NavigationDelegate&lt;/code&gt; example:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  customRenders: {&#xA;    iframeMatcher(): iframeRender(navigationDelegate: (NavigationRequest request) {&#xA;      if (request.url.contains(&#34;google.com/images&#34;)) {&#xA;        return NavigationDecision.prevent;&#xA;      } else {&#xA;        return NavigationDecision.navigate;&#xA;      }&#xA;    }),&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;flutter_html_math&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This package renders MathML elements using the &lt;a href=&#34;https://pub.dev/packages/flutter_math_fork&#34;&gt;&lt;code&gt;flutter_math_fork&lt;/code&gt;&lt;/a&gt; plugin.&lt;/p&gt; &#xA;&lt;p&gt;When rendering MathML, the package takes the MathML data within the &lt;code&gt;&amp;lt;math&amp;gt;&lt;/code&gt; tag and tries to parse it to Tex. Then, it will pass the parsed string to &lt;code&gt;flutter_math_fork&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Because this package is parsing MathML to Tex, it may not support some functionalities. The current list of supported tags can be found &lt;a href=&#34;https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/#currently-supported-html-tags&#34;&gt;above&lt;/a&gt;, but some of these only have partial support at the moment.&lt;/p&gt; &#xA;&lt;h4&gt;Registering the &lt;code&gt;CustomRender&lt;/code&gt;:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  customRenders: {&#xA;    mathMatcher(): mathRender(),&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the parsing errors, you can use the &lt;code&gt;onMathError&lt;/code&gt; property of &lt;code&gt;mathRender&lt;/code&gt; to catch the error and potentially fix it on your end.&lt;/p&gt; &#xA;&lt;p&gt;The function exposes the parsed Tex &lt;code&gt;String&lt;/code&gt;, as well as the error and error with type from &lt;code&gt;flutter_math_fork&lt;/code&gt; as a &lt;code&gt;String&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can analyze the error and the parsed string, and finally return a new instance of &lt;code&gt;Math.tex()&lt;/code&gt; with the corrected Tex string.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;onMathError&lt;/code&gt; example:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  customRenders: {&#xA;    mathMatcher(): mathRender(onMathError: (tex, exception, exceptionWithType) {&#xA;      print(exception);&#xA;      //optionally try and correct the Tex string here&#xA;      return Text(exception);&#xA;    }),&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;d like to see more MathML features, feel free to create a PR or file a feature request!&lt;/p&gt; &#xA;&lt;h4&gt;Tex&lt;/h4&gt; &#xA;&lt;p&gt;If you have a Tex string you&#39;d like to render inside your HTML you can do that using the same &lt;a href=&#34;https://pub.dev/packages/flutter_math_fork&#34;&gt;&lt;code&gt;flutter_math_fork&lt;/code&gt;&lt;/a&gt; plugin.&lt;/p&gt; &#xA;&lt;p&gt;Use a custom tag inside your HTML (an example could be &lt;code&gt;&amp;lt;tex&amp;gt;&lt;/code&gt;), and place your &lt;strong&gt;raw&lt;/strong&gt; Tex string inside.&lt;/p&gt; &#xA;&lt;p&gt;Then, use the &lt;code&gt;customRender&lt;/code&gt; parameter to add the widget to render Tex. It could look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget htmlWidget = Html(&#xA;  data: r&#34;&#34;&#34;&amp;lt;tex&amp;gt;i\hbar\frac{\partial}{\partial t}\Psi(\vec x,t) = -\frac{\hbar}{2m}\nabla^2\Psi(\vec x,t)+ V(\vec x)\Psi(\vec x,t)&amp;lt;/tex&amp;gt;&#34;&#34;&#34;,&#xA;  customRenders: {&#xA;    texMatcher(): CustomRender.widget(widget: (context, buildChildren) =&amp;gt; Math.tex(&#xA;      context.tree.element?.innerHtml ?? &#39;&#39;,&#xA;      mathStyle: MathStyle.display,&#xA;      textStyle: context.style.generateTextStyle(),&#xA;      onErrorFallback: (FlutterMathException e) {&#xA;        //optionally try and correct the Tex string here&#xA;        return Text(e.message);&#xA;      },&#xA;    )),&#xA;  },&#xA;  tagsList: Html.tags..add(&#39;tex&#39;),&#xA;);&#xA;&#xA;CustomRenderMatcher texMatcher() =&amp;gt; (context) =&amp;gt; context.tree.element?.localName == &#39;tex&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;flutter_html_svg&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This package renders svg elements using the &lt;a href=&#34;https://pub.dev/packages/flutter_svg&#34;&gt;&lt;code&gt;flutter_svg&lt;/code&gt;&lt;/a&gt; plugin.&lt;/p&gt; &#xA;&lt;p&gt;When rendering SVGs, the package takes the SVG data within the &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; tag and passes it to &lt;code&gt;flutter_svg&lt;/code&gt;. The &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes are considered while rendering, if given.&lt;/p&gt; &#xA;&lt;p&gt;The package also exposes a few ways to render SVGs within an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag, specifically base64 SVGs, asset SVGs, and network SVGs.&lt;/p&gt; &#xA;&lt;h4&gt;Registering the &lt;code&gt;CustomRender&lt;/code&gt;:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  customRenders: {&#xA;    svgTagMatcher(): svgTagRender(),&#xA;    svgDataUriMatcher(): svgDataImageRender(),&#xA;    svgAssetUriMatcher(): svgAssetImageRender(),&#xA;    svgNetworkSourceMatcher(): svgNetworkImageRender(),&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;flutter_html_table&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This package renders table elements using the &lt;a href=&#34;https://pub.dev/packages/flutter_layout_grid&#34;&gt;&lt;code&gt;flutter_layout_grid&lt;/code&gt;&lt;/a&gt; plugin.&lt;/p&gt; &#xA;&lt;p&gt;When rendering table elements, the package tries to calculate the best fit for each element and size its cell accordingly. &lt;code&gt;Rowspan&lt;/code&gt;s and &lt;code&gt;colspan&lt;/code&gt;s are considered in this process, so cells that span across multiple rows and columns are rendered as expected. Heights are determined intrinsically to maintain an optimal aspect ratio for the cell.&lt;/p&gt; &#xA;&lt;h4&gt;Registering the &lt;code&gt;CustomRender&lt;/code&gt;:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  customRenders: {&#xA;    tableMatcher(): tableRender(),&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;flutter_html_video&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This package renders video elements using the &lt;a href=&#34;https://pub.dev/packages/chewie&#34;&gt;&lt;code&gt;chewie&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&#34;https://pub.dev/packages/video_player&#34;&gt;&lt;code&gt;video_player&lt;/code&gt;&lt;/a&gt; plugin.&lt;/p&gt; &#xA;&lt;p&gt;The package considers the attributes &lt;code&gt;controls&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;, &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;autoplay&lt;/code&gt;, &lt;code&gt;poster&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;muted&lt;/code&gt; when rendering the video widget.&lt;/p&gt; &#xA;&lt;h4&gt;Registering the &lt;code&gt;CustomRender&lt;/code&gt;:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget html = Html(&#xA;  customRenders: {&#xA;    videoMatcher(): videoRender(),&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If you&#39;d like to use this widget inside of a &lt;code&gt;Row()&lt;/code&gt;, make sure to set &lt;code&gt;shrinkWrap: true&lt;/code&gt; and place your widget inside expanded:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget row = Row(&#xA;   children: [&#xA;        Expanded(&#xA;            child: Html(&#xA;              shrinkWrap: true,&#xA;              //other params&#xA;            )&#xA;        ),&#xA;&#x9;    //whatever other widgets&#xA;   ]&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Migration Guides&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For Version 1.0 - &lt;a href=&#34;https://github.com/Sub6Resources/flutter_html/wiki/1.0.0-Migration-Guide&#34;&gt;Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution Guide&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Coming soon!&lt;/p&gt; &#xA; &lt;p&gt;Meanwhile, PRs are always welcome&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>felangel/bloc</title>
    <updated>2022-05-29T01:38:41Z</updated>
    <id>tag:github.com,2022-05-29:/felangel/bloc</id>
    <link href="https://github.com/felangel/bloc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A predictable state management library that helps implement the BLoC design pattern&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/felangel/bloc/master/docs/assets/bloc_logo_full.png&#34; height=&#34;100&#34; alt=&#34;Bloc&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/felangel/bloc/actions&#34;&gt;&lt;img src=&#34;https://github.com/felangel/bloc/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/felangel/bloc&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/felangel/Bloc/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/felangel/bloc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/felangel/bloc.svg?style=flat&amp;amp;logo=github&amp;amp;colorB=deeppink&amp;amp;label=stars&#34; alt=&#34;Star on Github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tenhobi/effective_dart&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-effective_dart-40c4ff.svg?sanitize=true&#34; alt=&#34;style: effective dart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flutter.dev/docs/development/data-and-backend/state-mgmt/options#bloc--rx&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/flutter-website-deepskyblue.svg?sanitize=true&#34; alt=&#34;Flutter Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Solido/awesome-flutter#standard&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/awesome-flutter-blue.svg?longCache=true&#34; alt=&#34;Awesome Flutter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://fluttersamples.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/flutter-samples-teal.svg?longCache=true&#34; alt=&#34;Flutter Samples&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-purple.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/bloc&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/649708778631200778.svg?logo=discord&amp;amp;color=blue&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/felangel/bloc&#34;&gt;&lt;img src=&#34;https://tinyurl.com/bloc-library&#34; alt=&#34;Bloc Library&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;A predictable state management library that helps implement the &lt;a href=&#34;https://www.didierboelens.com/2018/08/reactive-programming---streams---bloc&#34;&gt;BLoC design pattern&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Pub&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/bloc&#34;&gt;bloc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/bloc&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/bloc.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/bloc_test&#34;&gt;bloc_test&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/bloc_test&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/bloc_test.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/bloc_concurrency&#34;&gt;bloc_concurrency&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/bloc_concurrency&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/bloc_concurrency.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/flutter_bloc&#34;&gt;flutter_bloc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_bloc&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_bloc.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/angular_bloc&#34;&gt;angular_bloc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/angular_bloc&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/angular_bloc.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/hydrated_bloc&#34;&gt;hydrated_bloc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/hydrated_bloc&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/hydrated_bloc.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/replay_bloc&#34;&gt;replay_bloc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/replay_bloc&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/replay_bloc.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/felangel/sealed_flutter_bloc&#34;&gt;sealed_flutter_bloc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/sealed_flutter_bloc&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/sealed_flutter_bloc.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Our top sponsors are shown below! [&lt;a href=&#34;https://github.com/sponsors/felangel&#34;&gt;Become a Sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; style=&#34;background-color: white&#34;&gt; &lt;a href=&#34;https://verygood.ventures&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/VGVentures/very_good_brand/main/styles/README/vgv_logo_black.png&#34; width=&#34;225&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; style=&#34;background-color: white&#34;&gt; &lt;a href=&#34;https://getstream.io/chat/flutter/tutorial/?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Jan2022_FlutterChat&amp;amp;utm_term=bloc&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;250px&#34; src=&#34;https://stream-blog.s3.amazonaws.com/blog/wp-content/uploads/fc148f0fc75d02841d017bb36e14e388/Stream-logo-with-background-.png&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;span&gt;&lt;a href=&#34;https://getstream.io/chat/flutter/tutorial/?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Jan2022_FlutterChat&amp;amp;utm_term=bloc&#34; target=&#34;_blank&#34;&gt;Try the Flutter Chat Tutorial &amp;nbsp;üí¨&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; style=&#34;background-color: white&#34;&gt; &lt;a href=&#34;https://www.miquido.com/flutter-development-company/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=bloc-silver-tier&amp;amp;utm_term=flutter-development-company&amp;amp;utm_content=miquido-logo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/felangel/bloc/master/docs/assets/miquido_logo.png&#34; width=&#34;225&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; style=&#34;background-color: white&#34;&gt; &lt;a href=&#34;https://bit.ly/parabeac_flutterbloc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/felangel/bloc/master/docs/assets/parabeac_logo.png&#34; width=&#34;225&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/felangel/bloc/master/docs/assets/bloc_architecture.png&#34; width=&#34;500&#34; alt=&#34;Bloc Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The goal of this library is to make it easy to separate &lt;em&gt;presentation&lt;/em&gt; from &lt;em&gt;business logic&lt;/em&gt;, facilitating testability and reusability.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bloclibrary.dev&#34;&gt;Official Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/bloc/README.md&#34;&gt;Bloc Package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/bloc_test/README.md&#34;&gt;Bloc Test Package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/bloc_concurrency/README.md&#34;&gt;Bloc Concurrency Package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/flutter_bloc/README.md&#34;&gt;Flutter Bloc Package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/angular_bloc/README.md&#34;&gt;Angular Bloc Package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/hydrated_bloc/README.md&#34;&gt;Hydrated Bloc Package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/replay_bloc/README.md&#34;&gt;Replay Bloc Package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/sealed_flutter_bloc/raw/master/README.md&#34;&gt;Sealed Flutter Bloc Package&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Migration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bloclibrary.dev/#/migration&#34;&gt;Migration Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;div style=&#34;text-align: center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td style=&#34;text-align: center&#34;&gt; &lt;a href=&#34;https://bloclibrary.dev/#/fluttercountertutorial&#34;&gt; &lt;img src=&#34;https://bloclibrary.dev/assets/gifs/flutter_counter.gif&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;    &lt;td style=&#34;text-align: center&#34;&gt; &lt;a href=&#34;https://bloclibrary.dev/#/flutterinfinitelisttutorial&#34;&gt; &lt;img src=&#34;https://bloclibrary.dev/assets/gifs/flutter_infinite_list.gif&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;    &lt;td style=&#34;text-align: center&#34;&gt; &lt;a href=&#34;https://bloclibrary.dev/#/flutterfirebaselogintutorial&#34;&gt; &lt;img src=&#34;https://bloclibrary.dev/assets/gifs/flutter_firebase_login.gif&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td style=&#34;text-align: center&#34;&gt; &lt;a href=&#34;https://bloclibrary.dev/#/flutterangulargithubsearch&#34;&gt; &lt;img src=&#34;https://bloclibrary.dev/assets/gifs/flutter_github_search.gif&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;    &lt;td style=&#34;text-align: center&#34;&gt; &lt;a href=&#34;https://bloclibrary.dev/#/flutterweathertutorial&#34;&gt; &lt;img src=&#34;https://bloclibrary.dev/assets/gifs/flutter_weather.gif&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;    &lt;td style=&#34;text-align: center&#34;&gt; &lt;a href=&#34;https://bloclibrary.dev/#/fluttertodostutorial&#34;&gt; &lt;img src=&#34;https://bloclibrary.dev/assets/gifs/flutter_todos.gif&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Dart&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/packages/bloc/example&#34;&gt;Counter&lt;/a&gt; - an example of how to create a &lt;code&gt;CounterBloc&lt;/code&gt; (pure dart).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Flutter&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bloclibrary.dev/#/fluttercountertutorial&#34;&gt;Counter&lt;/a&gt; - an example of how to create a &lt;code&gt;CounterBloc&lt;/code&gt; to implement the classic Flutter Counter app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/examples/flutter_form_validation&#34;&gt;Form Validation&lt;/a&gt; - an example of how to use the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages to implement form validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/examples/flutter_bloc_with_stream&#34;&gt;Bloc with Stream&lt;/a&gt; - an example of how to hook up a &lt;code&gt;bloc&lt;/code&gt; to a &lt;code&gt;Stream&lt;/code&gt; and update the UI in response to data from the &lt;code&gt;Stream&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/examples/flutter_complex_list&#34;&gt;Complex List&lt;/a&gt; - an example of how to manage a list of items and asynchronously delete items one at a time using &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bloclibrary.dev/#/flutterinfinitelisttutorial&#34;&gt;Infinite List&lt;/a&gt; - an example of how to use the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages to implement an infinite scrolling list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bloclibrary.dev/#/flutterlogintutorial&#34;&gt;Login Flow&lt;/a&gt; - an example of how to use the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages to implement a Login Flow.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bloclibrary.dev/#/flutterfirebaselogintutorial&#34;&gt;Firebase Login&lt;/a&gt; - an example of how to use the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages to implement login via Firebase.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bloclibrary.dev/#/flutterangulargithubsearch&#34;&gt;Github Search&lt;/a&gt; - an example of how to create a Github Search Application using the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bloclibrary.dev/#/flutterweathertutorial&#34;&gt;Weather&lt;/a&gt; - an example of how to create a Weather Application using the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages. The app uses a &lt;code&gt;RefreshIndicator&lt;/code&gt; to implement &#34;pull-to-refresh&#34; as well as dynamic theming.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bloclibrary.dev/#/fluttertodostutorial&#34;&gt;Todos&lt;/a&gt; - an example of how to create a Todos Application using the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bloclibrary.dev/#/fluttertimertutorial&#34;&gt;Timer&lt;/a&gt; - an example of how to create a Timer using the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/examples/flutter_shopping_cart&#34;&gt;Shopping Cart&lt;/a&gt; - an example of how to create a Shopping Cart Application using the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages based on &lt;a href=&#34;https://github.com/flutter/samples/tree/master/provider_shopper&#34;&gt;flutter samples&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/examples/flutter_dynamic_form&#34;&gt;Dynamic Form&lt;/a&gt; - an example of how to use the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages to implement a dynamic form which pulls data from a repository.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/examples/flutter_wizard&#34;&gt;Wizard&lt;/a&gt; - an example of how to build a multi-step wizard using the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc/tree/master/examples/flutter_graphql_jobs&#34;&gt;GraphQL&lt;/a&gt; - an example of how to use the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages with &lt;code&gt;graphql&lt;/code&gt; to retrieve data from &lt;a href=&#34;https://api.graphql.jobs&#34;&gt;api.graphql.jobs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/fluttersaurus&#34;&gt;Fluttersaurus&lt;/a&gt; - an example of how to use the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages to create a thesaurus app -- made for Bytconf Flutter 2020.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flutter/photobooth&#34;&gt;I/O Photo Booth&lt;/a&gt; - an example of how to use the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;flutter_bloc&lt;/code&gt; packages to create a virtual photo booth web app -- made for Google I/O 2021.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/Bloc/tree/master/examples/angular_counter&#34;&gt;Counter&lt;/a&gt; - an example of how to use a &lt;code&gt;CounterBloc&lt;/code&gt; in an AngularDart app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/Bloc/tree/master/examples/github_search/angular_github_search&#34;&gt;Github Search&lt;/a&gt; - an example of how to create a Github Search Application using the &lt;code&gt;bloc&lt;/code&gt; and &lt;code&gt;angular_bloc&lt;/code&gt; packages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Flutter + Web&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/Bloc/tree/master/examples/github_search&#34;&gt;Github Search&lt;/a&gt; - an example of how to create a Github Search Application and share code between Flutter and AngularDart.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Articles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-bloc-package-295b53e95c5c&#34;&gt;bloc package&lt;/a&gt; - An intro to the bloc package with high level architecture and examples.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-login-tutorial-with-flutter-bloc-ea606ef701ad&#34;&gt;login tutorial with flutter_bloc&lt;/a&gt; - How to create a full login flow using the bloc and flutter_bloc packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@felangelov/unit-testing-with-bloc-b94de9655d86&#34;&gt;unit testing with bloc&lt;/a&gt; - How to unit test the blocs created in the flutter login tutorial.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-infinite-list-tutorial-with-flutter-bloc-2fc7a272ec67&#34;&gt;infinite list tutorial with flutter_bloc&lt;/a&gt; - How to create an infinite list using the bloc and flutter_bloc packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/code-sharing-with-bloc-b867302c18ef&#34;&gt;code sharing with bloc&lt;/a&gt; - How to share code between a mobile application written with Flutter and a web application written with AngularDart.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/weather-app-with-flutter-bloc-e24a7253340d&#34;&gt;weather app tutorial with flutter_bloc&lt;/a&gt; - How to build a weather app which supports dynamic theming, pull-to-refresh, and interacting with a REST API using the bloc and flutter_bloc packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-todos-tutorial-with-flutter-bloc-d9dd833f9df3&#34;&gt;todos app tutorial with flutter_bloc&lt;/a&gt; - How to build a todos app using the bloc and flutter_bloc packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/firebase-login-with-flutter-bloc-47455e6047b0&#34;&gt;firebase login tutorial with flutter_bloc&lt;/a&gt; - How to create a fully functional login/sign up flow using the bloc and flutter_bloc packages with Firebase Authentication and Google Sign In.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-timer-with-flutter-bloc-a464e8332ceb&#34;&gt;flutter timer tutorial with flutter_bloc&lt;/a&gt; - How to create a timer app using the bloc and flutter_bloc packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/firestore-todos-with-flutter-bloc-7b2d5fadcc80&#34;&gt;firestore todos tutorial with flutter_bloc&lt;/a&gt; - How to create a todos app using the bloc and flutter_bloc packages that integrates with cloud firestore.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Books&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fluttercompletereference.com/&#34;&gt;Flutter Complete Reference&lt;/a&gt; - A book about the Dart programming language (version 2.10, with null safety support) and the Flutter framework (version 1.20). It covers the bloc package (version 6.0.3) in all flavors: bloc, flutter_bloc hydrated_bloc, replay_bloc, bloc_test and cubit.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/plugin/12129-bloc-code-generator&#34;&gt;IntelliJ&lt;/a&gt; - extends IntelliJ/Android Studio with support for the Bloc library and provides tools for effectively creating Blocs for both Flutter and AngularDart apps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=FelixAngelov.bloc#overview&#34;&gt;VSCode&lt;/a&gt; - extends VSCode with support for the Bloc library and provides tools for effectively creating Blocs for both Flutter and AngularDart apps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Learn more at the following links, which have been contributed by the community.&lt;/p&gt; &#xA;&lt;h3&gt;Packages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc.js&#34;&gt;Bloc.js&lt;/a&gt; - A port of the &lt;code&gt;bloc&lt;/code&gt; state management library from Dart to JavaScript, by &lt;a href=&#34;https://github.com/felangel&#34;&gt;Felix Angelov&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/bloc_code_generator&#34;&gt;Bloc Code Generator&lt;/a&gt; - A code generator that makes working with bloc easier, by &lt;a href=&#34;https://github.com/adsonpleal&#34;&gt;Adson Leal&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/fb_auth&#34;&gt;Firebase Auth&lt;/a&gt; - A Web, Mobile Firebase Auth Plugin, by &lt;a href=&#34;https://github.com/AppleEducate&#34;&gt;Rody Davis&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/form_bloc&#34;&gt;Form Bloc&lt;/a&gt; - An easy way to create forms with BLoC pattern without writing a lot of boilerplate code, by &lt;a href=&#34;https://github.com/GiancarloCode&#34;&gt;Giancarlo&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Video Tutorials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/knMvKPKBzGE&#34;&gt;Bloc Library: Basics and Beyond üöÄ&lt;/a&gt; - Talk given at &lt;a href=&#34;https://fluttereurope.dev&#34;&gt;Flutter Europe&lt;/a&gt; about the basics of the bloc library, by &lt;a href=&#34;https://github.com/felangel&#34;&gt;Felix Angelov&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=hTExlt1nJZI&#34;&gt;Flutter Bloc Library Tutorial&lt;/a&gt; - Introduction to the Bloc Library, by &lt;a href=&#34;https://resocoder.com&#34;&gt;Reso Coder&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=BJY8nuYUM7M&#34;&gt;Flutter Youtube Search&lt;/a&gt; - How to build a Youtube Search app which interacts with an API using the bloc and flutter_bloc packages, by &lt;a href=&#34;https://resocoder.com&#34;&gt;Reso Coder&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_vOpPuVfmiU&#34;&gt;Flutter Bloc - AUTOMATIC LOOKUP - v0.20 (and Up), Updated Tutorial&lt;/a&gt; - Updated Tutorial on the Flutter Bloc Package, by &lt;a href=&#34;https://resocoder.com&#34;&gt;Reso Coder&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=YYbhkg-W8Mg&#34;&gt;Dynamic Theming with flutter_bloc&lt;/a&gt; - Tutorial on how to use the flutter_bloc package to implement dynamic theming, by &lt;a href=&#34;https://resocoder.com&#34;&gt;Reso Coder&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=vSOpZd_FFEY&#34;&gt;Persist Bloc State in Flutter&lt;/a&gt; - Tutorial on how to use the hydrated_bloc package to automatically persist app state, by &lt;a href=&#34;https://resocoder.com&#34;&gt;Reso Coder&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=S2KmxzgsTwk&amp;amp;t=731s&#34;&gt;State Management Foundation&lt;/a&gt; - Introduction to state management using the flutter_bloc package, by &lt;a href=&#34;https://techieblossom.com&#34;&gt;Techie Blossom&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=S2KmxzgsTwk&#34;&gt;Flutter Football Player Search&lt;/a&gt; - How to build a Football Player Search app which interacts with an API using the bloc and flutter_bloc packages, by &lt;a href=&#34;https://techieblossom.com&#34;&gt;Techie Blossom&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=eAiCPl3yk9A&amp;amp;t=1s&#34;&gt;Learning the Flutter Bloc Package&lt;/a&gt; - Learning the flutter_bloc package live, by &lt;a href=&#34;https://www.youtube.com/channel/UCSLIg5O0JiYO1i2nD4RclaQ&#34;&gt;Robert Brunhage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=S6jFBiiP0Mc&#34;&gt;Bloc Test Tutorial&lt;/a&gt; - Tutorial on how to unit test blocs using the bloc_test package, by &lt;a href=&#34;https://resocoder.com&#34;&gt;Reso Coder&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLptHs0ZDJKt_T-oNj_6Q98v-tBnVf-S_o&#34;&gt;Bloc - from Zero to Hero&lt;/a&gt; - Playlist which includes everything needed to get started with bloc, by &lt;a href=&#34;https://www.youtube.com/channel/UC5PYcSe3to4mtm3SPCUmjvw&#34;&gt;Flutterly&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/Mn254cnduOY&#34;&gt;Bloc (Full Course, 11+ Hours) - Flutter State Management Course&lt;/a&gt; - 11+ hour video tutorial on Bloc and Flutter Bloc. In this video you will learn how to create fully fledged production-ready apps with Bloc and Firebase as your backend, by &lt;a href=&#34;https://www.youtube.com/channel/UC8NpGP0AOQ0kX9ZRcohiPeQ&#34;&gt;Vandad Nahavandipoor&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Written Resources&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devonfw-forge/devonfw4flutter&#34;&gt;DevonFw Flutter Guide&lt;/a&gt; - A guide on building structured &amp;amp; scalable applications with Flutter and BLoC, by &lt;a href=&#34;https://github.com/Fasust&#34;&gt;Sebastian Faust&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://epb.bibl.th-koeln.de/frontdoor/index/index/docId/1498&#34;&gt;Using Google¬¥s Flutter Framework for the Development of a Large-Scale Reference Application&lt;/a&gt; - Scientific paper describing how to build &lt;a href=&#34;https://github.com/devonfw-forge/devonfw4flutter-mts-app&#34;&gt;a large-scale Flutter application&lt;/a&gt; with BLoC, by &lt;a href=&#34;https://github.com/Fasust&#34;&gt;Sebastian Faust&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Extensions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=KiritchoukC.flutter-clean-architecture&#34;&gt;Feature Scaffolding for VSCode&lt;/a&gt; - A VSCode extension inspired by &lt;a href=&#34;https://resocoder.com&#34;&gt;Reso Coder&#39;s&lt;/a&gt; clean architecture tutorials, which helps quickly scaffold features, by &lt;a href=&#34;https://github.com/KiritchoukC&#34;&gt;Kiritchouk Cl√©ment&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel&#34;&gt;Felix Angelov&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>