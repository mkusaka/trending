<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-28T01:35:33Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Roaa94/flutter_airbnb_ui</title>
    <updated>2023-05-28T01:35:33Z</updated>
    <id>tag:github.com,2023-05-28:/Roaa94/flutter_airbnb_ui</id>
    <link href="https://github.com/Roaa94/flutter_airbnb_ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter implementation of the Airbnb book flip UI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Implementation of AirBnb UI Interaction&lt;/h1&gt; &#xA;&lt;p&gt;Flutter implementation of the Airbnb book flip UI&lt;/p&gt; &#xA;&lt;h3&gt;Preview&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Roaa94/flutter_airbnb_ui/assets/50345358/c5a7103d-ed64-4053-814b-3220b92db170&#34;&gt;https://github.com/Roaa94/flutter_airbnb_ui/assets/50345358/c5a7103d-ed64-4053-814b-3220b92db170&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Implementation Details:&lt;/h3&gt; &#xA;&lt;p&gt;The 3D-like book flip animation is implemented with Transform widgets for 3D rotation, and a Stack that conditionally shows the side of the book cover that should be visible on top as the rotation reaches halfway.&lt;/p&gt; &#xA;&lt;img width=&#34;300&#34; src=&#34;https://github.com/Roaa94/flutter_airbnb_ui/assets/50345358/4847cfc5-657e-4649-8829-2d5b473c9950&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// book_flip.dart&#xA;Transform(&#xA;  transform: Matrix4.identity()&#xA;    ..setEntry(3, 2, 0.001)&#xA;    ..rotateY(-pi * _flipAnimation.value),&#xA;  alignment: Alignment.centerRight,&#xA;  child: Stack(&#xA;    children: [&#xA;      // Show the book cover front when the rotation is halfway&#xA;      _flipAnimation.value &amp;gt;= 0.5 &#xA;          ? Positioned.fill(&#xA;              child: Transform(&#xA;                transform: Matrix4.identity()&#xA;                  ..setEntry(3, 2, 0.001)&#xA;                  ..rotateY(-pi),&#xA;                alignment: Alignment.center,&#xA;                child: BookCoverFront(listingData),&#xA;              ),&#xA;            ) &#xA;      : Positioned.fill(&#xA;          child: BookCoverBack(listingData),&#xA;        ),&#xA;    ],&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The trick to make the Hero animation work is using that same widget in 3 places, the first in the initial page, the second is the next page, with the animation controller initially set to it’s end value of 1, and finally, the animated widget is returned from the &lt;code&gt;flightShuttleBuilder&lt;/code&gt; param of the Hero widget, and uses its animation value to run the book flip animation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// List page&#xA;Hero(&#xA;  tag: &#39;listing_hero_${listingData.id}&#39;,&#xA;  flightShuttleBuilder: (_, Animation&amp;lt;double&amp;gt; animation, __, ___, ____) {&#xA;    return ScaleTransition(&#xA;      scale: Tween&amp;lt;double&amp;gt;(begin: 0.45, end: 1).animate(animation),&#xA;      child: BookFlip( // 3️⃣&#xA;        listingData,&#xA;        animationController: animation, // This will make the Hero animation run the flip animation&#xA;      ),&#xA;    );&#xA;  },&#xA;  child: Transform.scale(&#xA;    scale: 0.45, // Make sure initial value matches the value when the animation starts ↖️&#xA;    child: BookFlip(listingData), // 1️⃣&#xA;  ),&#xA;)&#xA;  &#xA;// Details page&#xA;Hero( &#xA;  tag: &#39;listing_hero_${listing.id}&#39;,&#xA;  child: BookFlip( // 2️⃣&#xA;    listingData,&#xA;    initialFlipProgress: 1, // Hero destination widget should match the animation end state&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>