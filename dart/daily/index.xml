<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-06T01:32:11Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>invertase/flutterfire_cli</title>
    <updated>2022-10-06T01:32:11Z</updated>
    <id>tag:github.com,2022-10-06:/invertase/flutterfire_cli</id>
    <link href="https://github.com/invertase/flutterfire_cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A CLI to help with using FlutterFire in your Flutter applications.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FlutterFire CLI&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/invertase/melos#readme-badge&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20with-melos-f700ff.svg?style=flat-square&#34; alt=&#34;Melos&#34;&gt;&lt;/a&gt; &#xA; &lt;!--&lt;a href=&#34;https://docs.page&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/powered%20by-docs.page-34C4AC.svg?style=flat-square&#34; alt=&#34;docs.page&#34; /&gt;&lt;/a&gt;--&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://firebase.flutter.dev/docs/cli&#34;&gt;Documentation&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://github.com/invertase/flutterfire_cli/raw/main/LICENSE&#34;&gt;License&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;A CLI to help with using &lt;a href=&#34;https://firebase.flutter.dev&#34;&gt;FlutterFire&lt;/a&gt; in your Flutter applications.&lt;/p&gt; &#xA;&lt;h2&gt;Local development setup&lt;/h2&gt; &#xA;&lt;p&gt;To set up and use this CLI repo locally for the purposes of contributing, clone it and run the following commands from the root of the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Activate CLI from path:&#xA;dart pub global activate --source=&#34;path&#34; . --executable=&#34;flutterfire&#34; --overwrite&#xA;&#xA;# Confirm you now using a local development version:&#xA;flutterfire --help&#xA;# You should now see a banner printed at the top of the help output similar to:&#xA;# ------------------------------------------------------------------&#xA;# | You are running a local development version of FlutterFire CLI. |&#xA;# ------------------------------------------------------------------&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dart pub global activate flutterfire_cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://invertase.io/?utm_source=readme&amp;amp;utm_medium=footer&amp;amp;utm_campaign=flutterfire_cli&#34;&gt; &lt;img width=&#34;75px&#34; src=&#34;https://static.invertase.io/assets/invertase/invertase-rounded-avatar.png&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; Built and maintained by &lt;a href=&#34;https://invertase.io/?utm_source=readme&amp;amp;utm_medium=footer&amp;amp;utm_campaign=flutterfire_cli&#34;&gt;Invertase&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>objectbox/objectbox-dart</title>
    <updated>2022-10-06T01:32:11Z</updated>
    <id>tag:github.com,2022-10-06:/objectbox/objectbox-dart</id>
    <link href="https://github.com/objectbox/objectbox-dart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter database for super-fast Dart object persistence&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/.github/logo.png&#34; alt=&#34;ObjectBox&#34; width=&#34;400px&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://docs.objectbox.io/getting-started&#34;&gt;Getting Started&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://docs.objectbox.io&#34;&gt;Documentation&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://github.com/objectbox/objectbox-dart/tree/main/objectbox/example&#34;&gt;Example Apps&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://github.com/objectbox/objectbox-dart/issues&#34;&gt;Issues&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/objectbox/objectbox-dart/actions/workflows/dart.yml&#34;&gt; &lt;img src=&#34;https://github.com/objectbox/objectbox-dart/actions/workflows/dart.yml/badge.svg?sanitize=true&#34; alt=&#34;Build and test&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/objectbox&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/v/objectbox.svg?label=pub.dev&amp;amp;logo=dart&amp;amp;style=flat-square&#34; alt=&#34;pub.dev package&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/objectbox/objectbox-dart/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/objectbox/objectbox-dart?logo=apache&amp;amp;style=flat-square&#34; alt=&#34;Apache 2.0 license&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/ObjectBox_io&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/objectbox_io?color=%20%2300aced&amp;amp;logo=twitter&amp;amp;style=flat-square&#34; alt=&#34;Follow @ObjectBox_io&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Flutter database for fast Dart object persistence üíô&lt;/h1&gt; &#xA;&lt;p&gt;Database for Flutter / Dart - fast and simple. Persist local Dart objects with ease &amp;amp; speed, focus on the value your application provides.&lt;/p&gt; &#xA;&lt;h3&gt;Demo code&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var person = Person(firstName: &#39;Joe&#39;, lastName: &#39;Green&#39;);&#xA;final id = box.put(person);  // Create&#xA;person = box.get(id)!;       // Read&#xA;person.lastName = &#34;Black&#34;;&#xA;box.put(person);             // Update&#xA;box.remove(person.id);       // Delete&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;--&amp;gt; For more details check out the &lt;a href=&#34;https://docs.objectbox.io/&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/#why-use-objectbox&#34;&gt;Why use ObjectBox&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/#how-does-objectbox-compare-to-other-solutions&#34;&gt;How does ObjectBox compare to other solutions?&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/#flutter-database-performance-benchmarks&#34;&gt;Flutter Database Performance Benchmarks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/#do-you--objectbox&#34;&gt;Do you üíô ObjectBox?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/#packages&#34;&gt;Packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/#other-languagesbindings&#34;&gt;Other languages/bindings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why use ObjectBox&lt;/h2&gt; &#xA;&lt;p&gt;ObjectBox Flutter database is a great option for storing Dart objects locally in your cross-platform apps. It uses minimal CPU, memory and battery / power, which makes it a sustainable choice for mobile and IoT devices. Made for efficient data access, it is 10x faster than any alternative across all CRUD operations. See the &lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/#flutter-database-performance-benchmarks&#34;&gt;performance benchmarks&lt;/a&gt; below. No need to learn SQL, as our NoSQL database uses a pure Dart API that is easy to work with and can be integrated in minutes. Plus: We built a data synchronization solution that allows you to choose which objects to sync when and keep data easily and efficiently in sync across devices.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;p&gt;üèÅ &lt;strong&gt;High performance&lt;/strong&gt; - superfast response rates enabling real-time applications.&lt;br&gt; ü™Ç &lt;strong&gt;ACID compliant&lt;/strong&gt; - Atomic, Consistent, Isolated, Durable.&lt;br&gt; üíª &lt;strong&gt;Multiplatform&lt;/strong&gt; - Android, iOS, macOS, Linux, Windows, any POSIX-system.&lt;br&gt; üå± &lt;strong&gt;Scalable&lt;/strong&gt; - grows with your app, handling millions of objects with ease.&lt;br&gt; üíö &lt;strong&gt;Sustainable&lt;/strong&gt; - frugal on CPU, Memory and battery / power use, reducing CO2 emmissions.&lt;/p&gt; &#xA;&lt;p&gt;üîó &lt;strong&gt;&lt;a href=&#34;https://docs.objectbox.io/relations&#34;&gt;Relations&lt;/a&gt;&lt;/strong&gt; - object links / relationships are built-in.&lt;br&gt; üíê &lt;strong&gt;&lt;a href=&#34;https://docs.objectbox.io/queries&#34;&gt;Queries&lt;/a&gt;&lt;/strong&gt; - filter data as needed, even across relations.&lt;br&gt; ü¶Æ &lt;strong&gt;Statically typed&lt;/strong&gt; - compile time checks &amp;amp; optimizations.&lt;br&gt; üìÉ &lt;strong&gt;Schema migration&lt;/strong&gt; - change your model with confidence.&lt;/p&gt; &#xA;&lt;p&gt;Oh, and there is one more thing...&lt;/p&gt; &#xA;&lt;p&gt;üòÆ &lt;a href=&#34;https://objectbox.io/sync/&#34;&gt;&lt;strong&gt;Data Sync&lt;/strong&gt;&lt;/a&gt; - keeps data in sync offline or online, between devices and servers.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Add these to your &lt;code&gt;pubsec.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dependencies:&#xA;  objectbox: ^1.6.2&#xA;  objectbox_flutter_libs: any&#xA;&#xA;dev_dependencies:&#xA;  build_runner: ^2.0.0&#xA;  objectbox_generator: any&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;First steps&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Define an entity class&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;@Entity()&#xA;class Person {&#xA;  int id;&#xA; &#xA;  String firstName;&#xA;  String lastName;&#xA; &#xA;  Person({this.id = 0, required this.firstName, required this.lastName});&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;dart run build_runner build&lt;/code&gt; to generate the binding code -&amp;gt; &lt;code&gt;objectbox.g.dart&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the ObjectBox store of your app&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;objectbox.g.dart&#39;;&#xA;final store = openStore();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Get a &lt;code&gt;Box&lt;/code&gt; class&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final box = store.box&amp;lt;Person&amp;gt;();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Have fun using the Box functions, e.g. &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;query&lt;/code&gt;, as shown in the &lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/#demo-code&#34;&gt;Demo code above&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Further steps&lt;/h3&gt; &#xA;&lt;p&gt;For more details about using ObjectBox in your Flutter/Dart app, head over to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;our &lt;a href=&#34;https://docs.objectbox.io/getting-started&#34;&gt;Getting Started Guide&lt;/a&gt;, or,&lt;/li&gt; &#xA; &lt;li&gt;if you prefer video, in this tutorial you&#39;ll &lt;a href=&#34;https://www.youtube.com/watch?v=BBlr8F8m9lo&#34;&gt;learn how to persist data locally in your Flutter App&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;another video tutorial for ObjectBox: &lt;a href=&#34;https://youtu.be/r9Lc2r22KBk&#34;&gt;how to create a restaurant Flutter App&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How does ObjectBox compare to other solutions?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ObjectBox is fast. Have a look at our benchmarks below, or test it for yourself&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s a full NoSQL SQLite alternative with intuitive Dart APIs you&#39;ll love üíô&lt;/li&gt; &#xA; &lt;li&gt;It comes with an out-of-the-box &lt;a href=&#34;https://objectbox.io/sync/&#34;&gt;Data Sync&lt;/a&gt;, making it an effective self-hosted Firebase alternative&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Flutter Database Performance Benchmarks&lt;/h3&gt; &#xA;&lt;p&gt;We tested across the four main database operations, CRUD (create, read, update, delete). Each test was run multiple times and executed manually outside of the measured time. Data preparation and evaluation were done outside of the measured time.&lt;/p&gt; &#xA;&lt;p&gt;Here are the benchmarks for ObjectBox vs sqflite vs Hive üëá&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/.github/benchmarks.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can run these yourself using our &lt;a href=&#34;https://github.com/objectbox/objectbox-dart-performance&#34;&gt;objectbox-dart-performance&lt;/a&gt; Flutter benchmark app.&lt;/p&gt; &#xA;&lt;h2&gt;Do you üíô ObjectBox?&lt;/h2&gt; &#xA;&lt;p&gt;We strive to bring joy to Flutter developers and appreciate all kind of feedback, both positive and negative.&lt;/p&gt; &#xA;&lt;p&gt;What do you love? What&#39;s amiss? Where do you struggle in everyday app development? --&amp;gt; Please fill in this 2-minute &lt;a href=&#34;https://forms.gle/LvVjN6jfFHuivxZX6&#34;&gt;Anonymous Feedback Form&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;We&#39;re looking forward to receiving your comments and requests:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add &lt;a href=&#34;https://github.com/objectbox/objectbox-dart/issues&#34;&gt;GitHub issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Upvote issues you find important by hitting the üëç/+1 reaction button&lt;/li&gt; &#xA; &lt;li&gt;Fill in the &lt;a href=&#34;https://forms.gle/s2L1YH32nwjgs4s4A&#34;&gt;feedback form&lt;/a&gt; to help us improve our products&lt;/li&gt; &#xA; &lt;li&gt;Drop us a line on Twitter via &lt;a href=&#34;https://twitter.com/ObjectBox_io/&#34;&gt;@ObjectBox_io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚≠ê us on GitHub, if you like what you see or give us a üëç on &lt;a href=&#34;https://pub.dev/packages/objectbox&#34;&gt;pub.dev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thank you! üôè&lt;/p&gt; &#xA;&lt;p&gt;Keep in touch: For general news on ObjectBox, &lt;a href=&#34;https://objectbox.io/blog&#34;&gt;check our blog&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Do you want to check out the ObjectBox code itself? E.g. see in action, run tests, or even contribute code? Great! Clone/check out this repository and run this to generate code and get you started quickly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./tool/init.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also, make sure to have a look at the &lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; - we are looking forward to your contribution.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;p&gt;This repository holds all ObjectBox Dart/Flutter packages as separate directories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/objectbox&#34;&gt;objectbox&lt;/a&gt; - main library code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/generator&#34;&gt;objectbox_generator&lt;/a&gt; - code generator&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/flutter_libs&#34;&gt;objectbox_flutter_libs&lt;/a&gt; - core binary library dependency for Flutter (Android/iOS) - no dart/flutter code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/sync_flutter_libs&#34;&gt;objectbox_sync_flutter_libs&lt;/a&gt; - core binary library dependency with &lt;a href=&#34;https://objectbox.io/sync/&#34;&gt;&lt;strong&gt;ObjectBox Sync&lt;/strong&gt;&lt;/a&gt; enabled&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/objectbox/objectbox-dart/main/benchmark&#34;&gt;benchmark&lt;/a&gt; - used internally to microbenchmark and compare various implementations during development of objectbox-dart&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There&#39;s also a separate repository benchmarking objectbox (and other databases) in Flutter: &lt;a href=&#34;https://github.com/objectbox/objectbox-dart-performance&#34;&gt;objectbox-dart-performance&lt;/a&gt;. And another one testing and comparing the performance of our FlatBuffers fork vs the upstream version: &lt;a href=&#34;https://github.com/objectbox/flatbuffers-benchmark&#34;&gt;flatbuffers-benchmark&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Other languages/bindings&lt;/h2&gt; &#xA;&lt;p&gt;ObjectBox supports multiple platforms and languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/objectbox/objectbox-java&#34;&gt;Java Database&lt;/a&gt; (+ Kotlin): runs on Android, desktop, and servers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/objectbox/objectbox-swift&#34;&gt;Swift Database&lt;/a&gt;: build fast mobile apps for iOS and macOS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/objectbox/objectbox-go&#34;&gt;Go Database&lt;/a&gt;: great for data-driven tools and embedded server applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/objectbox/objectbox-c&#34;&gt;C / C++ Database&lt;/a&gt;: native speed with zero copy access to FlatBuffer objects.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Copyright 2019-2022 ObjectBox Ltd. All rights reserved.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>transistorsoft/flutter_background_geolocation</title>
    <updated>2022-10-06T01:32:11Z</updated>
    <id>tag:github.com,2022-10-06:/transistorsoft/flutter_background_geolocation</id>
    <link href="https://github.com/transistorsoft/flutter_background_geolocation" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sophisticated, battery-conscious background-geolocation &amp; geofencing with motion-detection&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flutter_background_geolocation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.transistorsoft.com&#34;&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/s/nm4s5ltlug63vv8/logo-150-print.png?dl=1&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The &lt;em&gt;most&lt;/em&gt; sophisticated background &lt;strong&gt;location-tracking &amp;amp; geofencing&lt;/strong&gt; module with battery-conscious motion-detection intelligence for &lt;strong&gt;iOS&lt;/strong&gt; and &lt;strong&gt;Android&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The plugin&#39;s &lt;a href=&#34;https://github.com/transistorsoft/flutter_background_geolocation/wiki/Philosophy-of-Operation&#34;&gt;Philosophy of Operation&lt;/a&gt; is to use &lt;strong&gt;motion-detection&lt;/strong&gt; APIs (using accelerometer, gyroscope and magnetometer) to detect when the device is &lt;em&gt;moving&lt;/em&gt; and &lt;em&gt;stationary&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;When the device is detected to be &lt;strong&gt;moving&lt;/strong&gt;, the plugin will &lt;em&gt;automatically&lt;/em&gt; start recording a location according to the configured &lt;code&gt;distanceFilter&lt;/code&gt; (meters).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When the device is detected be &lt;strong&gt;stationary&lt;/strong&gt;, the plugin will automatically turn off location-services to conserve energy.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also available for &lt;a href=&#34;https://github.com/transistorsoft/cordova-background-geolocation-lt&#34;&gt;Cordova&lt;/a&gt;, &lt;a href=&#34;https://github.com/transistorsoft/react-native-background-geolocation&#34;&gt;React Native&lt;/a&gt;, &lt;a href=&#34;https://github.com/transistorsoft/nativescript-background-geolocation-lt&#34;&gt;NativeScript&lt;/a&gt; and &lt;a href=&#34;https://github.com/transistorsoft/background-geolocation-lt&#34;&gt;pure native&lt;/a&gt; apps.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The &lt;strong&gt;&lt;a href=&#34;https://www.transistorsoft.com/shop/products/flutter-background-geolocation&#34;&gt;Android module&lt;/a&gt;&lt;/strong&gt; requires &lt;a href=&#34;https://www.transistorsoft.com/shop/products/flutter-background-geolocation&#34;&gt;purchasing a license&lt;/a&gt;. However, it &lt;em&gt;will&lt;/em&gt; work for &lt;strong&gt;DEBUG&lt;/strong&gt; builds. It will &lt;strong&gt;not&lt;/strong&gt; work with &lt;strong&gt;RELEASE&lt;/strong&gt; builds &lt;a href=&#34;https://www.transistorsoft.com/shop/products/flutter-background-geolocation&#34;&gt;without purchasing a license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;(2018) This plugin is supported &lt;strong&gt;full-time&lt;/strong&gt; and field-tested &lt;strong&gt;daily&lt;/strong&gt; since 2013.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.transistorsoft.flutterbackgroundgeolocationexample&#34;&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/s/80rf906x0fheb26/google-play-icon.png?dl=1&#34; alt=&#34;Google Play&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/s/wa43w1n3xhkjn0i/home-framed-350.png?dl=1&#34; alt=&#34;Home&#34;&gt; &lt;img src=&#34;https://dl.dropboxusercontent.com/s/8oad228siog49kt/settings-framed-350.png?dl=1&#34; alt=&#34;Settings&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;üìö &lt;a href=&#34;https://pub.dartlang.org/documentation/flutter_background_geolocation/latest/flt_background_geolocation/flt_background_geolocation-library.html&#34;&gt;API Documentation&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transistorsoft/flutter_background_geolocation/master/#-installing-the-plugin&#34;&gt;Installing the Plugin&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transistorsoft/flutter_background_geolocation/master/#-setup-guides&#34;&gt;Setup Guides&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transistorsoft/flutter_background_geolocation/master/#-using-the-plugin&#34;&gt;Using the plugin&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transistorsoft/flutter_background_geolocation/master/#l-example&#34;&gt;Example&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://github.com/transistorsoft/flutter_background_geolocation/wiki/Debugging&#34;&gt;Debugging&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transistorsoft/flutter_background_geolocation/master/#-demo-application&#34;&gt;Demo Application&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transistorsoft/flutter_background_geolocation/master/#-simple-testing-server&#34;&gt;Testing Server&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üî∑ Installing the Plugin&lt;/h2&gt; &#xA;&lt;p&gt;üìÇ &lt;strong&gt;&lt;code&gt;pubspec.yaml&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; See &lt;a href=&#34;https://pub.dartlang.org/packages/flutter_background_geolocation/#-versions-tab-&#34;&gt;Versions&lt;/a&gt; for latest available version.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  flutter_background_geolocation: &#39;^4.7.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Or latest from Git:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  flutter_background_geolocation:&#xA;    git:&#xA;      url: https://github.com/transistorsoft/flutter_background_geolocation.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üî∑ Setup Guides&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/transistorsoft/flutter_background_geolocation/raw/master/help/INSTALL-IOS.md&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/transistorsoft/flutter_background_geolocation/raw/master/help/INSTALL-ANDROID.md&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üî∑ Using the plugin&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter_background_geolocation/flutter_background_geolocation.dart&#39; as bg;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;‚ö†Ô∏è Note &lt;code&gt;as bg&lt;/code&gt; in the &lt;code&gt;import&lt;/code&gt;. This is important to namespace the plugin&#39;s classes, which often use common class-names such as &lt;code&gt;Location&lt;/code&gt;, &lt;code&gt;Config&lt;/code&gt;, &lt;code&gt;State&lt;/code&gt;. You will access every &lt;code&gt;flutter_background_geolocation&lt;/code&gt; class with the prefix &lt;code&gt;bg&lt;/code&gt; (ie: &#34;&lt;strong&gt;b&lt;/strong&gt;ackground &lt;strong&gt;g&lt;/strong&gt;eolocation&#34;).&lt;/p&gt; &#xA;&lt;h2&gt;üî∑ Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gist.github.com/christocracy/a0464846de8a9c27c7e9de5616082878&#34;&gt;Full Example&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are three main steps to using &lt;code&gt;BackgroundGeolocation&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Wire up event-listeners.&lt;/li&gt; &#xA; &lt;li&gt;Configure the plugin with &lt;code&gt;#ready&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;#start&lt;/code&gt; the plugin.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&#xA;import &#39;package:flutter_background_geolocation/flutter_background_geolocation.dart&#39; as bg;&#xA;&#xA;class _MyHomePageState extends State&amp;lt;MyHomePage&amp;gt; {&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    super.initState();&#xA;&#xA;    ////&#xA;    // 1.  Listen to events (See docs for all 12 available events).&#xA;    //&#xA;&#xA;    // Fired whenever a location is recorded&#xA;    bg.BackgroundGeolocation.onLocation((bg.Location location) {&#xA;      print(&#39;[location] - $location&#39;);&#xA;    });&#xA;&#xA;    // Fired whenever the plugin changes motion-state (stationary-&amp;gt;moving and vice-versa)&#xA;    bg.BackgroundGeolocation.onMotionChange((bg.Location location) {&#xA;      print(&#39;[motionchange] - $location&#39;);&#xA;    });&#xA;&#xA;    // Fired whenever the state of location-services changes.  Always fired at boot&#xA;    bg.BackgroundGeolocation.onProviderChange((bg.ProviderChangeEvent event) {&#xA;      print(&#39;[providerchange] - $event&#39;);&#xA;    });&#xA;&#xA;    ////&#xA;    // 2.  Configure the plugin&#xA;    //&#xA;    bg.BackgroundGeolocation.ready(bg.Config(&#xA;        desiredAccuracy: bg.Config.DESIRED_ACCURACY_HIGH,&#xA;        distanceFilter: 10.0,&#xA;        stopOnTerminate: false,&#xA;        startOnBoot: true,&#xA;        debug: true,&#xA;        logLevel: bg.Config.LOG_LEVEL_VERBOSE&#xA;    )).then((bg.State state) {&#xA;      if (!state.enabled) {&#xA;        ////&#xA;        // 3.  Start the plugin.&#xA;        //&#xA;        bg.BackgroundGeolocation.start();&#xA;      }&#xA;    });&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;‚ö†Ô∏è Do not execute &lt;em&gt;any&lt;/em&gt; API method which will require accessing location-services until the callback to **&lt;code&gt;#ready*&lt;/code&gt; executes (eg: &lt;code&gt;#getCurrentPosition&lt;/code&gt;, &lt;code&gt;#watchPosition&lt;/code&gt;, &lt;code&gt;#start&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;üî∑ Demo Application&lt;/h2&gt; &#xA;&lt;p&gt;A fully-featured Demo App is available in the repo in the &lt;a href=&#34;https://raw.githubusercontent.com/transistorsoft/flutter_background_geolocation/master/example&#34;&gt;&lt;code&gt;/example&lt;/code&gt;&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.transistorsoft.flutterbackgroundgeolocationexample&#34;&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/s/80rf906x0fheb26/google-play-icon.png?dl=1&#34; alt=&#34;Google Play&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/s/wa43w1n3xhkjn0i/home-framed-350.png?dl=1&#34; alt=&#34;Home&#34;&gt; &lt;img src=&#34;https://dl.dropboxusercontent.com/s/8oad228siog49kt/settings-framed-350.png?dl=1&#34; alt=&#34;Settings&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üî∑ &lt;a href=&#34;https://github.com/transistorsoft/background-geolocation-console&#34;&gt;Simple Testing Server&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;A simple Node-based &lt;a href=&#34;https://github.com/transistorsoft/background-geolocation-console&#34;&gt;web-application&lt;/a&gt; with SQLite database is available for field-testing and performance analysis. If you&#39;re familiar with Node, you can have this server up-and-running in about &lt;strong&gt;one minute&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/s/px5rzz7wybkv8fs/background-geolocation-console-map.png?dl=1&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/s/tiy5b2oivt0np2y/background-geolocation-console-grid.png?dl=1&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The MIT License (MIT)&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2018 Chris Scott, Transistor Software&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
</feed>