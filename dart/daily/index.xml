<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-21T01:26:37Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Workiva/w_transport</title>
    <updated>2023-08-21T01:26:37Z</updated>
    <id>tag:github.com,2023-08-21:/Workiva/w_transport</id>
    <link href="https://github.com/Workiva/w_transport" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A platform-agnostic transport library for sending and receiving data over HTTP and WebSocket.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;w_transport&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/w_transport&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/w_transport.svg?sanitize=true&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Transport library for sending HTTP requests and opening WebSockets.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;HTTP support includes plain-text, JSON, form-data, and multipart data, as well as custom encoding. Also supports automatic retrying and request &amp;amp; response interception.&lt;/p&gt; &#xA;&lt;p&gt;WebSocket support includes native WebSockets in the browser and the VM with the option to use SockJS in the browser.&lt;/p&gt; &#xA;&lt;p&gt;All transport classes are platform-independent and can be configured to work in the browser or on the Dart VM. Additionally, all transport classes can be mocked out and controlled through an API included with this library.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Docs &amp;amp; Help&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Workiva/w_transport/master/docs/&#34;&gt;Guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.dartdocs.org/documentation/w_transport/latest/index.html&#34;&gt;API docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Workiva/w_transport/master/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Older Versions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1.0.x - &lt;a href=&#34;https://github.com/Workiva/w_transport/raw/1.0.0/README.md&#34;&gt;docs&lt;/a&gt; / &lt;a href=&#34;https://github.com/Workiva/w_transport/tree/1.0.0&#34;&gt;code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;2.x - &lt;a href=&#34;https://github.com/Workiva/w_transport/raw/2.0.0/README.md&#34;&gt;docs&lt;/a&gt; / &lt;a href=&#34;https://github.com/Workiva/w_transport/tree/2.0.0&#34;&gt;code&lt;/a&gt; / &lt;a href=&#34;https://github.com/Workiva/w_transport/raw/master/docs/upgrade-guides/v3.0.0.md&#34;&gt;upgrade guide (v2 -&amp;gt; v3)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;p&gt;As of version 3.0.0, w_transport will be following a &lt;a href=&#34;https://raw.githubusercontent.com/Workiva/w_transport/master/#versioning-and-stability&#34;&gt;versioning and stability&lt;/a&gt; commitment that guarantees a compatibility lifespan of two major versions.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re installing w_transport for the first time, simply depend on the latest major version and you&#39;ll get all patches and minor versions as they are released:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  w_transport: ^3.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re upgrading from version 2.x, you can use the above version range without breaking any existing code. &lt;strong&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/Workiva/w_transport/master/docs/upgrade-guides/v3.0.0.md&#34;&gt;3.0.0 upgrade guide&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Importing&lt;/h3&gt; &#xA;&lt;p&gt;The main entry point contains all of the transport classes necessary for sending HTTP requests and establishing WebSocket connections. It is also platform-independent (depends on neither &lt;code&gt;dart:html&lt;/code&gt; nor &lt;code&gt;dart:io&lt;/code&gt;), which means you can use it to build components, libraries, or APIs that will be reusable in the browser &lt;strong&gt;and&lt;/strong&gt; on the Dart VM.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:w_transport/w_transport.dart&#39; as transport;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We strongly recommend importing with the prefix &lt;code&gt;transport&lt;/code&gt; because there are some classes whose names conflict with classes from the Dart SDK.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The end consumer will make the decision between browser and VM, most likely in a &lt;code&gt;main()&lt;/code&gt; block.&lt;/p&gt; &#xA;&lt;h3&gt;Dart SDK&lt;/h3&gt; &#xA;&lt;p&gt;As of version 3.0.0 of the &lt;code&gt;w_transport&lt;/code&gt; package, the minimum required Dart SDK version is 1.14.0 (released Jan 28, 2016).&lt;/p&gt; &#xA;&lt;h3&gt;Versioning and Stability&lt;/h3&gt; &#xA;&lt;p&gt;This library follows semver to the best of our interpretation of it. We want this library to be a stable dependency thatâ€™s easy to keep current. A good explanation of the versioning scheme that we intend to follow can be seen here from React.js:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://facebook.github.io/react/blog/2016/02/19/new-versioning-scheme.html&#34;&gt;https://facebook.github.io/react/blog/2016/02/19/new-versioning-scheme.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In short: our goal is for every major release to be backwards compatible with the previous major version, giving consumers a lifespan of two major versions to deal with deprecations.&lt;/p&gt; &#xA;&lt;h3&gt;Credits&lt;/h3&gt; &#xA;&lt;p&gt;This library was influenced in many ways by &lt;a href=&#34;https://github.com/dart-lang/http&#34;&gt;the &lt;code&gt;http&lt;/code&gt; package&lt;/a&gt;, especially with regard to multipart requests, and served as a useful source for references to pertinent IETF RFCs.&lt;/p&gt; &#xA;&lt;h3&gt;Development&lt;/h3&gt; &#xA;&lt;p&gt;This project leverages &lt;a href=&#34;https://github.com/Workiva/dart_dev&#34;&gt;the &lt;code&gt;dart_dev&lt;/code&gt; package&lt;/a&gt; for most of its tooling needs, including static analysis, code formatting, running tests, collecting coverage, and serving examples. Check out the dart_dev readme for more information.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;To run integration tests, you&#39;ll need two JS dependencies for a SockJS server. Run &lt;code&gt;npm install&lt;/code&gt; to download them.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>digitalinnovationone/dio-flutter</title>
    <updated>2023-08-21T01:26:37Z</updated>
    <id>tag:github.com,2023-08-21:/digitalinnovationone/dio-flutter</id>
    <link href="https://github.com/digitalinnovationone/dio-flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dio-flutter&lt;/h1&gt;</summary>
  </entry>
</feed>