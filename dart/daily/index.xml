<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-02T01:26:20Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>invertase/dart_firebase_admin</title>
    <updated>2023-11-02T01:26:20Z</updated>
    <id>tag:github.com,2023-11-02:/invertase/dart_firebase_admin</id>
    <link href="https://github.com/invertase/dart_firebase_admin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥 A Firebase Admin SDK for Dart. (WIP)&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Dart Firebase Admin&lt;/h2&gt; &#xA;&lt;p&gt;Welcome! This project is a port of &lt;a href=&#34;https://github.com/firebase/firebase-admin-node&#34;&gt;Node&#39;s Firebase Admin SDK&lt;/a&gt; to Dart.&lt;/p&gt; &#xA;&lt;p&gt;⚠️ This project is still in its early stages, and some features may be missing or bugged. Currently, only Firestore is available, with more to come (auth next).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/invertase/dart_firebase_admin/main/#dart-firebase-admin&#34;&gt;Dart Firebase Admin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/invertase/dart_firebase_admin/main/#available-features&#34;&gt;Available features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/invertase/dart_firebase_admin/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/invertase/dart_firebase_admin/main/#connecting-to-the-sdk&#34;&gt;Connecting to the SDK&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/invertase/dart_firebase_admin/main/#connecting-using-the-environment&#34;&gt;Connecting using the environment&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/invertase/dart_firebase_admin/main/#connecting-using-a-service-accountjson-file&#34;&gt;Connecting using a &lt;code&gt;service-account.json&lt;/code&gt; file&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/invertase/dart_firebase_admin/main/#using-firestore&#34;&gt;Using Firestore&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/invertase/dart_firebase_admin/main/#using-auth&#34;&gt;Using Auth&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Available features&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Firestore&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reference.id&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reference.parent&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reference.path&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reference.==&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reference.withConverter&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;collection.listDocuments&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;collection.add&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;collection.get&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;collection.create&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;collection.delete&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;collection.set&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;collection.update&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;collection.collection&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.where(&#39;field&#39;, operator, value)&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.where(&#39;field.path&#39;, operator, value)&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.where(FieldPath(&#39;...&#39;), operator, value)&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.whereFilter(Filter.and(a, b))&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.whereFilter(Filter.or(a, b))&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.startAt&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.startAtDocument&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.startAfter&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.startAfterDocument&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.endAt&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.endAtDocument&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.endAfter&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.endAfterDocument&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.onSnapshot&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.select&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.orderBy&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.limit&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.limitToLast&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;query.offset&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;querySnapshot.docs&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;querySnapshot.readTime&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;querySnapshot.docsChange&lt;/td&gt; &#xA;   &lt;td&gt;⚠️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;documentSnapshots.data&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;documentSnapshots.readTime/createTime/updateTime&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;documentSnapshots.id&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;documentSnapshots.exists&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;documentSnapshots.data&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;documentSnapshots.get(fieldPath)&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FieldValue.documentId&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FieldValue.increment&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FieldValue.arrayUnion&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FieldValue.arrayRemove&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FieldValue.delete&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FieldValue.serverTimestamp&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;collectionGroup&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;runTransaction&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GeoPoint&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Timestamp&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BundleBuilder&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Auth&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.tenantManager&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.projectConfigManager&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.generatePasswordResetLink&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.generateEmailVerificationLink&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.generateVerifyAndChangeEmailLink&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.generateSignInWithEmailLink&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.listProviderConfigs&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.createProviderConfig&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.updateProviderConfig&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.getProviderConfig&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.deleteProviderConfig&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.createCustomToken&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.setCustomUserClaims&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.verifyIdToken&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.revokeRefreshTokens&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.createSessionCookie&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.verifySessionCookie&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.importUsers&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.listUsers&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.deleteUser&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.deleteUsers&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.getUser&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.getUserByPhoneNumber&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.getUserByEmail&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.getUserByProviderUid&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.getUsers&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.createUser&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auth.updateUser&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Connecting to the SDK&lt;/h3&gt; &#xA;&lt;p&gt;Before using Firebase, we must first authenticate.&lt;/p&gt; &#xA;&lt;p&gt;There are currently two options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can connect using environment variables&lt;/li&gt; &#xA; &lt;li&gt;Alternatively, you can specify a &lt;code&gt;service-account.json&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Connecting using the environment&lt;/h4&gt; &#xA;&lt;p&gt;To connect using environment variables, you will need to have the &lt;a href=&#34;https://firebaseopensource.com/projects/firebase/firebase-tools/&#34;&gt;Firebase CLI&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;p&gt;Once done, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;firebase login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And log-in to the project of your choice.&lt;/p&gt; &#xA;&lt;p&gt;From there, you can have your Dart program authenticate using the environment with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:dart_firebase_admin/dart_firebase_admin.dart&#39;;&#xA;&#xA;void main() {&#xA;  final admin = FirebaseAdminApp.initializeApp(&#xA;    &#39;&amp;lt;your project name&amp;gt;&#39;,&#xA;    // This will obtain authentication information from the environment&#xA;    Credential.fromApplicationDefaultCredentials(),&#xA;  );&#xA;&#xA;  // TODO use the Admin SDK&#xA;  final firestore = Firestore(admin);&#xA;  firestore.doc(&#39;hello/world&#39;).get();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Connecting using a &lt;code&gt;service-account.json&lt;/code&gt; file&lt;/h4&gt; &#xA;&lt;p&gt;Alternatively, you can choose to use a &lt;code&gt;service-account.json&lt;/code&gt; file.&lt;br&gt; This file can be obtained in your firebase console by going to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://console.firebase.google.com/u/0/project/&amp;lt;your-project-name&amp;gt;/settings/serviceaccounts/adminsdk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure to replace &lt;code&gt;&amp;lt;your-project-name&amp;gt;&lt;/code&gt; with the name of your project. One there, follow the steps and download the file. Place it anywhere you want in your project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;⚠️ Note&lt;/strong&gt;: This file should be kept private. Do not commit it on public repositories.&lt;/p&gt; &#xA;&lt;p&gt;After all of that is done, you can now authenticate in your Dart program using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:dart_firebase_admin/dart_firebase_admin.dart&#39;;&#xA;&#xA;void main() {&#xA;  final admin = FirebaseAdminApp.initializeApp(&#xA;    &#39;&amp;lt;your project name&amp;gt;&#39;,&#xA;    // Log-in using the newly downloaded file.&#xA;    Credential.fromServiceAccount(&#xA;      File(&#39;&amp;lt;path to your service-account.json file&amp;gt;&#39;),&#xA;    ),&#xA;  );&#xA;&#xA;  // TODO use the Admin SDK&#xA;  final firestore = Firestore(admin);&#xA;  firestore.doc(&#39;hello/world&#39;).get();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Firestore&lt;/h3&gt; &#xA;&lt;p&gt;First, make sure to follow the steps on &lt;a href=&#34;https://raw.githubusercontent.com/invertase/dart_firebase_admin/main/#connecting-to-the-sdk&#34;&gt;how to authenticate&lt;/a&gt;. You should now have an instance of a &lt;code&gt;FirebaseAdminApp&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;p&gt;You can now use this object to create a &lt;code&gt;Firestore&lt;/code&gt; object as followed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Obtained in the previous steps&#xA;FirebaseAdminApp admin;&#xA;final firestore = Firestore(admin);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From this point onwards, using Firestore with the admin ADK is roughly equivalent to using &lt;a href=&#34;https://github.com/firebase/flutterfire&#34;&gt;FlutterFire&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Using this &lt;code&gt;Firestore&lt;/code&gt; object, you&#39;ll find your usual collection/query/document objects.&lt;/p&gt; &#xA;&lt;p&gt;For example you can perform a &lt;code&gt;where&lt;/code&gt; query:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// The following lists all users above 18 years old&#xA;final collection = firestore.collection(&#39;users&#39;);&#xA;final adults = collection.where(&#39;age&#39;, WhereFilter.greaterThan, 18);&#xA;&#xA;final adultsSnapshot = await adults.get();&#xA;&#xA;for (final adult in adultsSnapshot.docs) {&#xA;  print(adult.data()[&#39;age&#39;]);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Composite queries are also supported:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// List users with either John or Jack as first name.&#xA;firestore&#xA;  .collection(&#39;users&#39;)&#xA;  .whereFilter(&#xA;    Filter.or([&#xA;      Filter.where(&#39;firstName&#39;, WhereFilter.equal, &#39;John&#39;),&#xA;      Filter.where(&#39;firstName&#39;, WhereFilter.equal, &#39;Jack&#39;),&#xA;    ]),&#xA;  );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can fetch a specific document too:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Print the age of the user with ID &#34;123&#34;&#xA;final user = await firestore.doc(&#39;users/123&#39;).get();&#xA;print(user.data()?[&#39;age&#39;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Auth&lt;/h3&gt; &#xA;&lt;p&gt;First, make sure to follow the steps on &lt;a href=&#34;https://raw.githubusercontent.com/invertase/dart_firebase_admin/main/#connecting-to-the-sdk&#34;&gt;how to authenticate&lt;/a&gt;. You should now have an instance of a &lt;code&gt;FirebaseAdminApp&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;p&gt;You can now use this object to create a &lt;code&gt;FirebaseAuth&lt;/code&gt; object as followed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Obtained in the previous steps&#xA;FirebaseAdminApp admin;&#xA;final auth = FirebaseAuth(admin);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then use this &lt;code&gt;FirebaseAuth&lt;/code&gt; object to perform various auth operations. For example, you can generate a password reset link:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final link = await auth.generatePasswordResetLink(&#xA;  &#39;hello@example.com&#39;,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://invertase.io/?utm_source=readme&amp;amp;utm_medium=footer&amp;amp;utm_campaign=dart_custom_lint&#34;&gt; &lt;img width=&#34;75px&#34; src=&#34;https://static.invertase.io/assets/invertase/invertase-rounded-avatar.png&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; Built and maintained by &lt;a href=&#34;https://invertase.io/?utm_source=readme&amp;amp;utm_medium=footer&amp;amp;utm_campaign=dart_custom_lint&#34;&gt;Invertase&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nylo-core/nylo</title>
    <updated>2023-11-02T01:26:20Z</updated>
    <id>tag:github.com,2023-11-02:/nylo-core/nylo</id>
    <link href="https://github.com/nylo-core/nylo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nylo project for Flutter developers&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://nylo.dev/images/nylo_logo_header.png&#34; alt=&#34;Nylo Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/nylo-core/nylo/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/nylo-core/nylo?style=plastic&#34; alt=&#34;Latest Release Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nylo-core/nylo/raw/master/LICENSE&#34;&gt;&lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/github/license/nylo-core/nylo?style=plastic&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/nylo-core/nylo/5.x/#&#34;&gt;&lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/nylo-core/nylo?style=plastic&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Nylo&lt;/h2&gt; &#xA;&lt;p&gt;Nylo is a micro-framework for Flutter which is designed to help simplify developing apps. Every project provides a simple boilerplate and MVC pattern to help you build apps easier.&lt;/p&gt; &#xA;&lt;p&gt;This project is open source and MIT-licenced, we welcome any contributions. You can join as a backer/sponsor to fund future development for this project &lt;a href=&#34;https://nylo.dev&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Some core features available&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nylo.dev/docs/5.x/router&#34;&gt;Routing&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nylo.dev/docs/5.x/themes-and-styling&#34;&gt;Themes and styling&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nylo.dev/docs/5.x/localization&#34;&gt;Localization&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nylo.dev/docs/5.x/metro&#34;&gt;CLI for generating project files&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nylo.dev/docs/5.x/networking&#34;&gt;Elegant API Services for Networking&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nylo.dev/docs/5.x/app-icons&#34;&gt;Creating App Icons&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nylo.dev/docs/5.x/configuration&#34;&gt;Project Configuration&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nylo.dev/docs/5.x/directory-structure&#34;&gt;Streamlined Project Structure&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dart &amp;gt;= 3.1.3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/nylo-core/nylo.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;View our &lt;a href=&#34;https://nylo.dev/docs&#34;&gt;docs&lt;/a&gt; and visit &lt;a href=&#34;https://nylo.dev&#34;&gt;nylo.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/nylo-core/framework/raw/5.x/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more information what has changed recently.&lt;/p&gt; &#xA;&lt;h2&gt;Social&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/nylo_dev&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you discover any security related issues, please email &lt;a href=&#34;mailto:support@nylo.dev&#34;&gt;support@nylo.dev&lt;/a&gt; instead of using the issue tracker.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/agordn52&#34;&gt;Anthony Gordon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lpdevit&#34;&gt;lpdevit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Abdulrasheed1729&#34;&gt;Abdulrasheed1729&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Rashid-Khabeer&#34;&gt;Rashid-Khabeer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/youssefKadaouiAbbassi&#34;&gt;youssefKadaouiAbbassi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jeremyhalin&#34;&gt;jeremyhalin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT). Please view the &lt;a href=&#34;https://github.com/nylo-core/nylo/raw/master/licence&#34;&gt;License&lt;/a&gt; File for more information.&lt;/p&gt;</summary>
  </entry>
</feed>