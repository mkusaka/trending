<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-11T01:38:07Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alexmercerind/dart_vlc</title>
    <updated>2022-07-11T01:38:07Z</updated>
    <id>tag:github.com,2022-07-11:/alexmercerind/dart_vlc</id>
    <link href="https://github.com/alexmercerind/dart_vlc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎞 Flutter audio/video playback, broadcast &amp; recording library for Windows &amp; Linux with playlist control, equalizers &amp; more. Native C/C++ &amp; libvlc.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alexmercerind/dart_vlc&#34;&gt;dart_vlc&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Flutter audio/video playback, broadcast &amp;amp; recording library for Windows &amp;amp; Linux with playlist control, metadata extractor, equalizers &amp;amp; more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/dart_vlc&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/dart_vlc.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/alexmercerind/dart_vlc/actions/workflows/ci.yml/badge.svg?branch=master&#34; alt=&#34;CI/CD&#34;&gt; &lt;a href=&#34;https://twitter.com/alexmercerind&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/alexmercerind&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paypal.me/alexmercerind&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-blue.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://buymeacoffee.com/alexmercerind&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/buy%20me%20a%20coffee-donate-yellow&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/3h3K3JF&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/716939396464508958?label=discord&#34; alt=&#34;Join the chat at https://discord.gg/3h3K3JF&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://alexmercerind.github.io/img/dart_vlc/0.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://alexmercerind.github.io/img/dart_vlc/1.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;pub.dev&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  ...&#xA;  dart_vlc: ^0.1.9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;GitHub&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  dart_vlc:&#xA;    git:&#xA;      url: https://github.com/alexmercerind/dart_vlc.git&#xA;      ref: master&#xA;&#xA;dependency_overrides:&#xA;  dart_vlc_ffi:&#xA;    git:&#xA;      url: https://github.com/alexmercerind/dart_vlc.git&#xA;      ref: master&#xA;      path: ffi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Feel free to open a &lt;a href=&#34;https://github.com/alexmercerind/dart_vlc/issues&#34;&gt;new issue&lt;/a&gt; or &lt;a href=&#34;https://github.com/alexmercerind/dart_vlc/discussions&#34;&gt;discussion&lt;/a&gt;, if you found a bug or need assistance.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Consider supporting the project by buying me a coffee or starring the repository.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paypal.me/alexmercerind&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-blue.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://buymeacoffee.com/alexmercerind&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/buy%20me%20a%20coffee-donate-yellow&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks a lot for your support.&lt;/p&gt; &#xA;&lt;p&gt;macOS support has been removed due to lack of maintainers &amp;amp; not having macOS running hardware.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Checkout &lt;a href=&#34;https://raw.githubusercontent.com/alexmercerind/dart_vlc/master/#setup&#34;&gt;Setup&lt;/a&gt; section to configure plugin on your platform.&lt;/p&gt; &#xA;&lt;h4&gt;Initialize the library&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Future&amp;lt;void&amp;gt; main() async {&#xA;  await DartVLC.initialize();&#xA;  runApp(MyApp());&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Create a new player instance.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final player = Player(id: 69420);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For passing VLC CLI arguments, use &lt;code&gt;commandlineArguments&lt;/code&gt; argument.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final player = Player(&#xA;  id: 69420,&#xA;  commandlineArguments: [&#39;--no-video&#39;]&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Create a media for playback.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final media0 = Media.file(&#xA;  File(&#39;C:/music.mp3&#39;)&#xA;);&#xA;&#xA;final media1 = Media.asset(&#xA;  &#39;assets/audio/example.mp3&#39;&#xA;);&#xA;&#xA;final media2 = Media.network(&#xA;  &#39;https://www.example.com/music.aac&#39;&#xA;);&#xA;&#xA;// Clip the media.&#xA;final media2 = Media.network(&#xA;  &#39;https://www.example.com/music.aac&#39;,&#xA;  startTime: Duration(seconds: 20), // Start media from 20 seconds from the beginning.&#xA;  stopTime: Duration(seconds: 60), // End media at 60 seconds from the beginning.&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Create a list of medias using playlist.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final playlist = Playlist(&#xA;  medias: [&#xA;    Media.file(File(&#39;C:/music.mp3&#39;)),&#xA;    Media.file(File(&#39;C:/audio.mp3&#39;)),&#xA;    Media.asset(&#39;assets/audio/example.mp3&#39;),&#xA;    Media.network(&#39;https://www.example.com/music.aac&#39;),&#xA;  ],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Open a media or playlist into a player.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.open(&#xA;  Media.file(File(&#39;C:/music0.mp3&#39;)),&#xA;  autoStart: true, // default&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.open(&#xA;  Playlist(&#xA;    medias: [&#xA;      Media.file(File(&#39;C:/music0.mp3&#39;)),&#xA;      Media.file(File(&#39;C:/music1.mp3&#39;)),&#xA;      Media.file(File(&#39;C:/music2.mp3&#39;)),&#xA;    ],&#xA;  ),&#xA;  autoStart: false,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Control playback.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.play();&#xA;&#xA;player.seek(Duration(seconds: 30));&#xA;&#xA;player.pause();&#xA;&#xA;player.playOrPause();&#xA;&#xA;player.stop();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Controls the playlist.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.next();&#xA;&#xA;player.previous();&#xA;&#xA;player.jumpToIndex(10);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Manipulate an already playing playlist.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.add(&#xA;  Media.file(File(&#39;C:/music0.mp3&#39;)),&#xA;);&#xA;&#xA;player.remove(4);&#xA;&#xA;player.insert(&#xA;  2,&#xA;  Media.file(File(&#39;C:/music0.mp3&#39;)),&#xA;);&#xA;&#xA;player.move(0, 4);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Set playback volume &amp;amp; rate.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.setVolume(0.5);&#xA;&#xA;player.setRate(1.25);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Get &amp;amp; change playback device.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;List&amp;lt;Device&amp;gt; devices = Devices.all;&#xA;&#xA;player.setDevice(&#xA;  devices[0],&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Save the video screenshot&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.takeSnapshot(file, 1920, 1080);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Show the video inside widget tree.&lt;/h4&gt; &#xA;&lt;p&gt;Show &lt;code&gt;Video&lt;/code&gt; in the &lt;code&gt;Widget&lt;/code&gt; tree.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This will cause additional CPU-load due to conversion of video frames to RGBA/BGRA pixel-buffers &amp;amp; &lt;code&gt;Texture&lt;/code&gt; interop. For better performance, use &lt;a href=&#34;https://raw.githubusercontent.com/alexmercerind/dart_vlc/master/#nativevideo&#34;&gt;NativeVideo&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class _MyAppState extends State&amp;lt;MyApp&amp;gt; {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      body: Video(&#xA;        player: player,&#xA;        height: 1920.0,&#xA;        width: 1080.0,&#xA;        scale: 1.0, // default&#xA;        showControls: false, // default&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;Video&lt;/code&gt; widget&#39;s frame size will adapt to the currently playing video. To override this &amp;amp; define custom video frame size, pass &lt;code&gt;videoDimensions&lt;/code&gt; argument while instanciating &lt;code&gt;Player&lt;/code&gt; class as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Player player = Player(&#xA;  id: 69420,&#xA;  videoDimensions: const VideoDimensions(640, 360),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;NativeVideo&lt;/h4&gt; &#xA;&lt;p&gt;A more performant &lt;code&gt;Widget&lt;/code&gt; for showing video inside the &lt;code&gt;Widget&lt;/code&gt; tree.&lt;/p&gt; &#xA;&lt;p&gt;This &lt;code&gt;Widget&lt;/code&gt; is &lt;strong&gt;more performant&lt;/strong&gt; compared to &lt;code&gt;Video&lt;/code&gt; &amp;amp; uses &lt;a href=&#34;https://github.com/alexmercerind/flutter_native_view.git&#34;&gt;flutter_native_view&lt;/a&gt; to embed the video output directly without any texture interop or pixel-buffer copy calls.&lt;/p&gt; &#xA;&lt;p&gt;But, it is highly dependent on platform &amp;amp; other limitations apply. In general, this widget is more performant &amp;amp; should be used if possible.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit your &lt;code&gt;windows/runner/main.cpp&lt;/code&gt; as required &lt;a href=&#34;https://github.com/alexmercerind/flutter_native_view#setup&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Register the plugin with &lt;code&gt;useFlutterNativeView&lt;/code&gt; as &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void main() {&#xA;  DartVLC.initilize(useFlutterNativeView: true);&#xA;  runApp(MyApp());&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Pass &lt;code&gt;registerTexture&lt;/code&gt; as &lt;code&gt;false&lt;/code&gt; when creating &lt;code&gt;Player&lt;/code&gt; &amp;amp; use &lt;code&gt;NativeVideo&lt;/code&gt; widget.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class _MyAppState extends State&amp;lt;MyApp&amp;gt; {&#xA;  Player player = Player(id: 0, registerTexture: false);&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      body: Center(&#xA;        child: NativeVideo(&#xA;          player: player,&#xA;          height: 420.0,&#xA;          width: 320.0&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Change user agent&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.setUserAgent(userAgent);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Retrieve metadata of media.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Media media = Media.network(&#xA;  &#39;https://www.example.com/media.mp3&#39;,&#xA;  parse: true,&#xA;  timeout: Duration(seconds: 10),&#xA;);&#xA;&#xA;Map&amp;lt;String, String&amp;gt; metas = media.metas;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Listen to playback events.&lt;/h4&gt; &#xA;&lt;p&gt;(Same can be retrieved directly from &lt;code&gt;Player&lt;/code&gt; instance without having to rely on stream).&lt;/p&gt; &#xA;&lt;p&gt;Listen to currently loaded media &amp;amp; playlist index changes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.currentStream.listen((CurrentState state) {&#xA;  state.index;&#xA;  state.media;&#xA;  state.medias;&#xA;  state.isPlaylist;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Listen to playback position &amp;amp; media duration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.positionStream.listen((PositionState state) {&#xA;  state.position;&#xA;  state.duration;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Listen to playback states.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.playbackStream.listen((PlaybackState state) {&#xA;  state.isPlaying;&#xA;  state.isSeekable;&#xA;  state.isCompleted;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Listen to volume &amp;amp; rate of the &lt;code&gt;Player&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.generalStream.listen((GeneralState state) {&#xA;  state.volume;&#xA;  state.rate;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Listen to dimensions of currently playing &lt;code&gt;Video&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.videoDimensionsStream.listen((VideoDimensions video) {&#xA;  video.width;&#xA;  video.height;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Listen to buffering progress of the playing &lt;code&gt;Media&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;player.bufferingProgressStream.listen(&#xA;  (double event) {&#xA;    this.setState(() {&#xA;      this.bufferingProgress = event;&#xA;    });&#xA;  },&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Set an equalizer.&lt;/h4&gt; &#xA;&lt;p&gt;Create using preset.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Equalizer equalizer = Equalizer.createMode(EqualizerMode.party);&#xA;player.setEqualizer(equalizer);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create custom equalizer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Equalizer equalizer = Equalizer.createEmpty();&#xA;equalizer.setPreAmp(10.0);&#xA;equalizer.setBandAmp(31.25, -10.0);&#xA;equalizer.setBandAmp(100.0, -10.0);&#xA;player.setEqualizer(equalizer);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get equalizer state.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;equalizer.preAmp;&#xA;equalizer.bandAmps;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Broadcast a media.&lt;/h4&gt; &#xA;&lt;p&gt;Broadcasting to localhost.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final broadcast = Broadcast.create(&#xA;  id: 0,&#xA;  media: Media.file(File(&#39;C:/video.mp4&#39;)),&#xA;  configuration: BroadcastConfiguration(&#xA;    access: &#39;http&#39;,&#xA;    mux: &#39;mpeg1&#39;,&#xA;    dst: &#39;127.0.0.1:8080&#39;,&#xA;    vcodec: &#39;mp1v&#39;,&#xA;    vb: 1024,&#xA;    acodec: &#39;mpga&#39;,&#xA;    ab: 128,&#xA;  ),&#xA;);&#xA;broadcast.start();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dispose the &lt;code&gt;Broadcast&lt;/code&gt; instance to release resources.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;broadcast.dispose();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Record a media.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final record = Record.create(&#xA;  id: 205,&#xA;  media: Media.network(&#39;https://www.example.com/streaming-media.MP3&#39;),&#xA;  pathFile: &#39;/home/alexmercerind/recording.MP3&#39;,&#xA;);&#xA;record.start();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Everything is already set up.&lt;/p&gt; &#xA;&lt;!--&#xA;&#xA;### macOS&#xA;&#xA;To run on macOS, install CMake through [Homebrew](https://brew.sh):&#xA;&#xA;```bash&#xA;brew install cmake&#xA;```&#xA;&#xA;If you encounter the error `cmake: command not found` during archiving:&#xA;&#xA;1. Download [CMake](https://cmake.org/download/) and move it to the `Applications` Folder.&#xA;2. Run:&#xA;&#xA;```bash&#xA;sudo &#34;/Applications/CMake.app/Contents/bin/cmake-gui&#34; --install&#xA;```&#xA;&#xA;--&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;For using this plugin on Linux, you must have &lt;a href=&#34;https://www.videolan.org&#34;&gt;VLC&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://www.videolan.org/vlc/libvlc.html&#34;&gt;libVLC&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;On Ubuntu/Debian:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install vlc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install libvlc-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;On Fedora:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf install vlc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf install vlc-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--&#xA;&#xA;### iOS [WIP]&#xA;&#xA;Disable bitcode generation for the whole project for MobileVLC to work.&#xA;Add the following to the `post_install` function living in the `Podfile` of your iOS Flutter project. For reference look at the `Podfile` in the example project.&#xA;&#xA;```ruby&#xA;target.build_configurations.each do |config|&#xA;    config.build_settings[&#39;ENABLE_BITCODE&#39;] = &#39;NO&#39;&#xA;end&#xA;```&#xA;&#xA;For the example project to work you need to configure a real device in the xcode project, or comment out the build script `Build Device lib` in in `ios/dart_vlc.podspec`.&#xA;&#xA;--&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;BIG thanks to &lt;a href=&#34;https://github.com/jnschulze&#34;&gt;@jnschulze&lt;/a&gt; for his awesome contributions to this project &amp;amp; to the Flutter engine itself like adding texture support &amp;amp; adding macOS support here. I have learnt a lot about modern C++ &amp;amp; good-practices when writing code from you, thanks a lot for your guidances, reviews, work &amp;amp; donation. I&#39;m really really thankful to you.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;BIG thanks to &lt;a href=&#34;https://github.com/DomingoMG&#34;&gt;@DomingoMG&lt;/a&gt; for adding &lt;code&gt;Record&lt;/code&gt; and &lt;code&gt;Chromecast&lt;/code&gt; classes. Also, thanks a lot for donation to the project &amp;amp; giving me motivation to start building this. I would&#39;ve never attempted this if you didn&#39;t motivate me. And now that it started, &lt;code&gt;dart_vlc&lt;/code&gt; has grown a lot.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/tomassasovsky&#34;&gt;@tomassasovsky&lt;/a&gt; for adding visual controls to &lt;code&gt;Video&lt;/code&gt; widget.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Thanks to following members of libVLC community (irrespective of the order) for giving general ideas about libVLC APIs:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jeremyVignelles&#34;&gt;@jeremyVignelles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/chouquette&#34;&gt;@chouquette&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mfkl&#34;&gt;@mfkl&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/caprica&#34;&gt;@caprica&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Finally, thanks to the &lt;a href=&#34;https://www.videolan.org&#34;&gt;VideoLAN&lt;/a&gt; team for creating &lt;a href=&#34;https://github.com/videolan/vlc&#34;&gt;libVLC&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/videolan/libvlcpp&#34;&gt;libVLC++&lt;/a&gt;. Really great guys really great at their work.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;The code in the project is nicely arranged and follows the clean architecture.&lt;/p&gt; &#xA;&lt;p&gt;Contributions to the project are open, it will be appreciated if you discuss the bug-fix/feature-addition in the issues first.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (C) 2021, Hitesh Kumar Saini &lt;a href=&#34;mailto:saini123hitesh@gmail.com&#34;&gt;saini123hitesh@gmail.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This library &amp;amp; work under this repository is licensed under GNU Lesser General Public License v2.1.&lt;/p&gt; &#xA;&lt;h2&gt;Vision&lt;/h2&gt; &#xA;&lt;p&gt;There aren&#39;t any media (audio or video) playback libraries for Flutter or Dart on Windows/Linux yet. So, this project is all about that. As one might be already aware, VLC is one of the best media playback tools out there.&lt;/p&gt; &#xA;&lt;p&gt;So, now you can use it to play audio or video files from Flutter or Dart apps.&lt;/p&gt; &#xA;&lt;p&gt;As the project has grown, awesome people from community have added support for iOS &amp;amp; macOS aswell.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;You can see an example project &lt;a href=&#34;https://github.com/alexmercerind/dart_vlc/raw/master/example/lib/main.dart&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/alexmercerind/dart_vlc/raw/assets/dart_vlc_6.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;dart_vlc&lt;/code&gt; running on Ubuntu Linux.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Done&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Media&lt;/code&gt; playback from &lt;code&gt;File&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Media&lt;/code&gt; playback from network.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Media&lt;/code&gt; playback from assets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;play&lt;/code&gt;/&lt;code&gt;pause&lt;/code&gt;/&lt;code&gt;playOrPause&lt;/code&gt;/&lt;code&gt;stop&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Multiple &lt;code&gt;Player&lt;/code&gt; instances.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Playlist&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;next&lt;/code&gt;/&lt;code&gt;back&lt;/code&gt;/&lt;code&gt;jump&lt;/code&gt; for playlists.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;setVolume&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;setRate&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;seek&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Event streams.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;add&lt;/code&gt;/&lt;code&gt;insert&lt;/code&gt;/&lt;code&gt;remove&lt;/code&gt;/&lt;code&gt;move&lt;/code&gt; &lt;code&gt;Media&lt;/code&gt; inside &lt;code&gt;Playlist&lt;/code&gt; during playback with no interruption.&lt;/li&gt; &#xA; &lt;li&gt;Device enumeration &amp;amp; changing.&lt;/li&gt; &#xA; &lt;li&gt;Retrieving metadata/tags of a &lt;code&gt;Media&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Embedding &lt;code&gt;Video&lt;/code&gt; inside the Flutter window (using texture or natively).&lt;/li&gt; &#xA; &lt;li&gt;Supporting live streaming links.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Broadcast&lt;/code&gt; class for broadcasting &lt;code&gt;Media&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Record&lt;/code&gt; class for recording &lt;code&gt;Media&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Chromecast&lt;/code&gt; class.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Equalizer&lt;/code&gt; configuration &amp;amp; presets.&lt;/li&gt; &#xA; &lt;li&gt;Changing user agent.&lt;/li&gt; &#xA; &lt;li&gt;Changing &lt;code&gt;Video&lt;/code&gt;&#39;s frame size according to video.&lt;/li&gt; &#xA; &lt;li&gt;Saving screenshot of the video.&lt;/li&gt; &#xA; &lt;li&gt;Changing/retrieving audio track.&lt;/li&gt; &#xA; &lt;li&gt;Media clipping.&lt;/li&gt; &#xA; &lt;li&gt;Support for Windows, Linux or macOS.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Under progress or planned features (irrespective of order)...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bringing project on Android and iOS.&lt;/li&gt; &#xA; &lt;li&gt;Removing &lt;a href=&#34;https://github.com/videolan/libvlcpp&#34;&gt;libVLC++&lt;/a&gt; dependency.&lt;/li&gt; &#xA; &lt;li&gt;Subtitle control.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>developersancho/Rorty.Flutter</title>
    <updated>2022-07-11T01:38:07Z</updated>
    <id>tag:github.com,2022-07-11:/developersancho/Rorty.Flutter</id>
    <link href="https://github.com/developersancho/Rorty.Flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀 Sample Flutter Clean Architecture on Rorty App focused on the scalability, testability and maintainability written in Dart, following best practices using Flutter.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://dart.dev/tools/linter-rules&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-%E2%9D%A4-FF4081.svg?style=for-the-badge&#34; alt=&#34;CodeStyle&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flutter.dev/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Flutter-0078D6?style=for-the-badge&amp;amp;logo=flutter&amp;amp;logoColor=white&#34; alt=&#34;Flutter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dart.dev/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Dart-02569B?style=for-the-badge&amp;amp;logo=dart&amp;amp;logoColor=white&#34; alt=&#34;Dart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-orange.svg?style=for-the-badge&#34; alt=&#34;License Apache 2.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/flutter-logo.webp&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Rorty Flutter &lt;/h1&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Flutter Clean Architecture in Rorty is a sample project that presents modern, approach to &lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter&lt;/a&gt; application development using &lt;a href=&#34;https://dart.dev/&#34;&gt;Dart&lt;/a&gt; and latest tech-stack.&lt;/p&gt; &#xA;&lt;p&gt;The goal of the project is to demonstrate best practices, provide a set of guidelines, and present modern Flutter application architecture that is modular, scalable, maintainable and testable. This application may look simple, but it has all of these small details that will set the rock-solid foundation of the larger app suitable for bigger teams and long application lifecycle management.&lt;/p&gt; &#xA;&lt;p&gt;A flutter app built using Kotlin that consumes &lt;a href=&#34;https://rickandmortyapi.com&#34;&gt;Rick and Morty API&lt;/a&gt; to display characters,episodes,Location from the &lt;a href=&#34;https://www.imdb.com/title/tt2861424/&#34;&gt;TV Series&lt;/a&gt;. It has been built following Clean Architecture Principle, Repository Pattern, MVVM Architecture in the presentation layer.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;A well planned architecture is extremely important for an app to scale and all architectures have one common goal- to manage complexity of your app. This isn&#39;t something to be worried about in smaller apps however it may prove very useful when working on apps with longer development lifecycle and a bigger team.&lt;/p&gt; &#xA;&lt;p&gt;Clean architecture was proposed by &lt;a href=&#34;https://en.wikipedia.org/wiki/Robert_C._Martin&#34;&gt;Robert C. Martin&lt;/a&gt; in 2012 in the &lt;a href=&#34;http://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&#34;&gt;Clean Code Blog&lt;/a&gt; and it follow the SOLID principle.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/clean_arch.jpeg&#34; alt=&#34;Clean Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The circles represent different layers of your app. Note that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The center circle is the most abstract, and the outer circle is the most concrete. This is called the &lt;a href=&#34;https://en.wikipedia.org/wiki/Abstraction_principle_(computer_programming)&#34;&gt;Abstraction Principle&lt;/a&gt;. The Abstraction Principle specifies that inner circles should contain business logic, and outer circles should contain implementation details.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Another principle of Clean Architecture is the &lt;a href=&#34;https://en.wikipedia.org/wiki/Dependency_inversion_principle&#34;&gt;Dependency Inversion&lt;/a&gt;. This rule specifies that each circle can depend only on the nearest inward circle ie. low-level modules do not depend on high-level modules but the other way around.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/architecture.png&#34; alt=&#34;Clean Architecture Diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Why Clean Architecture?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Loose coupling between the code&lt;/code&gt; - The code can easily be modified without affecting any or a large part of the app&#39;s codebase thus easier to scale the application later on.&lt;/li&gt; &#xA; &lt;li&gt;Easier to &lt;code&gt;test&lt;/code&gt; code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Separation of Concern&lt;/code&gt; - Different modules have specific responsibilities making it easier for modification and maintenance.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;S.O.L.I.D Principles&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Single-responsibility_principle&#34;&gt;&lt;strong&gt;Single Responsibility&lt;/strong&gt;&lt;/a&gt;: Each software component should have only one reason to change – one responsibility.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle#:~:text=In%20object%2Doriented%20programming%2C%20the,without%20modifying%20its%20source%20code.&#34;&gt;&lt;strong&gt;Open-Closed&lt;/strong&gt;&lt;/a&gt;: You should be able to extend the behavior of a component, without breaking its usage, or modifying its extensions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Liskov_substitution_principle&#34;&gt;&lt;strong&gt;Liskov Substitution&lt;/strong&gt;&lt;/a&gt;: If you have a class of one type, and any subclasses of that class, you should be able to represent the base class usage with the subclass, without breaking the app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Interface_segregation_principle&#34;&gt;&lt;strong&gt;Interface Segregation&lt;/strong&gt;&lt;/a&gt;: It’s better to have many smaller interfaces than a large one, to prevent the class from implementing the methods that it doesn’t need.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Dependency_inversion_principle&#34;&gt;&lt;strong&gt;Dependency Inversion&lt;/strong&gt;&lt;/a&gt;: Components should depend on abstractions rather than concrete implementations. Also higher level modules shouldn’t depend on lower level modules.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Layers&lt;/h2&gt; &#xA;&lt;h3&gt;Project Structure&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/project.png&#34; alt=&#34;Project Structure&#34; width=&#34;500&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Data&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; layer is responsible for selecting the proper data source for the domain layer. It contains the implementations of the repositories declared in the domain layer.&lt;/p&gt; &#xA;&lt;p&gt;Components of data layer include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;model&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;-&lt;strong&gt;dto&lt;/strong&gt;: Defines dto of ui model, also perform data transformation between &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;response&lt;/code&gt; and &lt;code&gt;entity&lt;/code&gt; models.&lt;/p&gt; &lt;p&gt;-&lt;strong&gt;local&lt;/strong&gt;: Defines the schema of SQLite database.&lt;/p&gt; &lt;p&gt;-&lt;strong&gt;remote&lt;/strong&gt;: Defines POJO of network responses.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;local&lt;/strong&gt;: This is responsible for performing caching operations using &lt;a href=&#34;https://pub.dev/packages/floor&#34;&gt;Floor&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;remote&lt;/strong&gt;: This is responsible for performing network operations eg. defining API endpoints using &lt;a href=&#34;https://pub.dev/packages/retrofit&#34;&gt;Retrofit/Dio&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;repository&lt;/strong&gt;: Responsible for exposing data to the domain layer.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Domain&lt;/h3&gt; &#xA;&lt;p&gt;This is the core layer of the application. The &lt;code&gt;domain&lt;/code&gt; layer is independent of any other layers thus ] domain business logic can be independent from other layers.This means that changes in other layers will have no effect on domain layer eg. screen UI (presentation layer) or changing database (data layer) will not result in any code change withing domain layer.&lt;/p&gt; &#xA;&lt;p&gt;Components of domain layer include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;usecase&lt;/strong&gt;: They enclose a single action, like getting data from a database or posting to a service. They use the repositories to resolve the action they are supposed to do.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Presentation&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;presentation&lt;/code&gt; layer contains components involved in showing information to the user. The main part of this layer are the Views(widgets) and ViewModels.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Splash&lt;/td&gt; &#xA;   &lt;td&gt;Light&lt;/td&gt; &#xA;   &lt;td&gt;Dark&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/screenshots/android/splash.png&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/screenshots/android/characters.png&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/screenshots/android/characters-dark.png&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Splash&lt;/td&gt; &#xA;   &lt;td&gt;Light&lt;/td&gt; &#xA;   &lt;td&gt;Dark&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/screenshots/ios/splash.png&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/screenshots/ios/characters.png&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/screenshots/ios/characters-dark.png&#34; width=&#34;250&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h4&gt;MacOS-Desktop&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Light&lt;/td&gt; &#xA;   &lt;td&gt;Dark&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/screenshots/desktop/home.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/screenshots/desktop/home-dark.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h4&gt;WEB&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Light&lt;/td&gt; &#xA;   &lt;td&gt;Dark&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/screenshots/web/home.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/developersancho/Rorty.Flutter/v1/art/screenshots/web/home-dark.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Tech Stacks&lt;/h1&gt; &#xA;&lt;p&gt;This project uses many of the popular libraries, plugins and tools of the flutter ecosystem.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/stacked&#34;&gt;Stacked&lt;/a&gt; - An architecture and widgets for an MVVM inspired architecture in Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/provider&#34;&gt;Provider&lt;/a&gt; - A wrapper around InheritedWidget to make them easier to use and more reusable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/get_it&#34;&gt;Get It&lt;/a&gt; - Dependency Injection library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/retrofit&#34;&gt;Retrofit&lt;/a&gt; - A dio client generator using source_gen and inspired by Chopper and Retrofit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/dio&#34;&gt;Dio&lt;/a&gt; - A powerful Http client for Dart, which supports Interceptors, FormData, Request Cancellation, File Downloading, Timeout etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/go_router&#34;&gt;Go Router&lt;/a&gt; - A declarative router for Flutter based on Navigation 2 supporting deep linking, data-driven routes and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_native_splash&#34;&gt;Flutter Native Splash&lt;/a&gt; - Customize Flutter&#39;s default white native splash screen with background color and splash image. Supports dark mode, full screen, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/shared_preferences&#34;&gt;Shared Preferences&lt;/a&gt; - Flutter plugin for reading and writing simple key-value pairs. Wraps NSUserDefaults on iOS and SharedPreferences on Android.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/easy_localization&#34;&gt;Easy Localization&lt;/a&gt; - Easy and Fast internationalizing and localization your Flutter Apps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/url_launcher&#34;&gt;Url Launcher&lt;/a&gt; - Flutter plugin for launching a URL. Supports web, phone, SMS, and email schemes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/floor&#34;&gt;Floor&lt;/a&gt; - The typesafe, reactive, and lightweight SQLite abstraction for your Flutter applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/logger&#34;&gt;Logger&lt;/a&gt; - Small, easy to use and extensible logger which prints beautiful logs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code Analyze Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_lints&#34;&gt;Lints&lt;/a&gt; - This package contains a recommended set of lints for Flutter apps, packages, and plugins to encourage good coding practices.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Posts In Medium&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/innovance-company-blog/flutter-clean-architecture-with-rorty-app-7e7a55f80009&#34;&gt;Article&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤝 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are &lt;strong&gt;greatly appreciated&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open an issue first to discuss what you would like to change.&lt;/li&gt; &#xA; &lt;li&gt;Fork the Project&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -m &#39;Add some amazing feature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a pull request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Please make sure to update tests as appropriate.&lt;/p&gt; &#xA;&lt;h2&gt;✍️ Authors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://www.linkedin.com/in/mesut-g-33b41030&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/30066734?v=4&#34; width=&#34;70&#34; align=&#34;left&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;👤 &lt;strong&gt;developersancho&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/mesut-g-33b41030/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-linkedin-0077B5?style=for-the-badge&amp;amp;logo=linkedin&#34; alt=&#34;Linkedin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://developersancho.medium.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-medium-12100E?style=for-the-badge&amp;amp;logo=medium&#34; alt=&#34;Medium&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Feel free to ping me 😉&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-license&#34;&gt;Copyright © 2022 - developersancho&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>authpass/authpass</title>
    <updated>2022-07-11T01:38:07Z</updated>
    <id>tag:github.com,2022-07-11:/authpass/authpass</id>
    <link href="https://github.com/authpass/authpass" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AuthPass - Password Manager based on Flutter for all platforms. Keepass 2.x (kdbx 3.x) compatible.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://forum.authpass.app/c/contributors/contribute/13&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contribute-now-green?logo=discourse&amp;amp;style=for-the-badge&#34; alt=&#34;Contribute&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://forum.authpass.app/&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/topics?label=Forum%20Discussions&amp;amp;logo=discourse&amp;amp;server=https%3A%2F%2Fforum.authpass.app&amp;amp;style=for-the-badge&#34; alt=&#34;Contribute&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://authpass.crowdin.com/authpass&#34;&gt;&lt;img align=&#34;right&#34; src=&#34;https://badges.crowdin.net/e/df2e0329a54542fef35ab5412a893d23/localized.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://authpass.app&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/authpass/authpass/main/_docs/logo-header.png&#34; alt=&#34;AuthPass.app&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;AuthPass.app - Open Source Password Manager for mobile and desktop&lt;/h1&gt; &#xA;&lt;p&gt;AuthPass - Password Manager based on Flutter for all platforms. Keepass 2.x (kdbx 3.x) compatible.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mac Desktop: &lt;a href=&#34;https://apps.apple.com/app/authpass-password-manager/id1478552452?ls=1&amp;amp;mt=12&#34;&gt;Mac App Store&lt;/a&gt; or &lt;a href=&#34;https://github.com/authpass/authpass/releases&#34;&gt;check the releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Android: &lt;a href=&#34;https://play.google.com/store/apps/details?id=design.codeux.authpass&#34;&gt;Google Play Store&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;iOS: &lt;a href=&#34;https://apps.apple.com/app/authpass-password-manager/id1479297675?ls=1&amp;amp;at=11l8ru&#34;&gt;App Store&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Linux Desktop: &lt;a href=&#34;https://snapcraft.io/authpass&#34;&gt;Snapcraft Store&lt;/a&gt;, &lt;a href=&#34;https://flathub.org/apps/details/app.authpass.AuthPass&#34;&gt;Flathub flatpak&lt;/a&gt; &lt;a href=&#34;https://authpass.app/articles/linux-desktop-release-authpass-1.6.3/&#34;&gt;Check out our blog post for installation instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows Desktop: &lt;a href=&#34;https://www.microsoft.com/store/apps/9P5N6ZNPSFBN?cid=readme&#34;&gt;Microsoft Store&lt;/a&gt; or &lt;a href=&#34;https://authpass.app/docs/install/windows-installation/&#34;&gt;Windows Install Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Browser/Web: &lt;a href=&#34;https://web.authpass.app/&#34;&gt;https://web.authpass.app/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/authpass/authpass/main/_docs/authpass-platform-composition.png&#34; alt=&#34;Mac OS, iOS and Android Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to AuthPass&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://forum.authpass.app/c/contributors/contribute/13&#34;&gt;Need ideas how to contribute? Visit the forum for many different ways to contribute.&lt;/a&gt; &lt;a href=&#34;https://forum.authpass.app/c/contributors/contribute/13&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contribute-now-green?logo=discourse&#34; alt=&#34;Contribute&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you like AuthPass, and want to contribute. First, spread the word ;-) Writing reviews, vote or share AuthPass on twitter, reddit, etc.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Help us translate AuthPass (work in progress): &lt;a href=&#34;https://authpass.crowdin.com/authpass&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/e/df2e0329a54542fef35ab5412a893d23/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://authpass.app/docs/contact/&#34;&gt;Contact us for new languages&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Interested in writing documentation? Let us know in our &lt;a href=&#34;https://authpass.app/go/discord&#34;&gt;discord channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Want to code? See &lt;a href=&#34;https://github.com/authpass/authpass/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you need some slight introduction to the code, ask in the &lt;a href=&#34;https://authpass.app/go/discord&#34;&gt;discord channel&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Good at design? Or marketing? Just get in contact ;-)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap/TODOs&lt;/h2&gt; &#xA;&lt;p&gt;see also &lt;a href=&#34;https://github.com/authpass/authpass/issues&#34;&gt;https://github.com/authpass/authpass/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/authpass/authpass/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/authpass/authpass&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Read/Decrypt kdbx 3.x using password&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Download of kdbx files through url&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Parse decrypted XML/handle protected values&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Flutter scaffold for mobile (ios/android)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Platforms 🎉️👍️✅️ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; iOS: &lt;a href=&#34;https://apps.apple.com/app/authpass-password-manager/id1479297675?ls=1&amp;amp;at=11l8ru&#34;&gt;App Store&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Android: &lt;a href=&#34;https://play.google.com/store/apps/details?id=design.codeux.authpass&#34;&gt;Google Play Store&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Mac OS &lt;a href=&#34;https://apps.apple.com/app/authpass-password-manager/id1478552452?ls=1&amp;amp;mt=12&#34;&gt;Mac App Store&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://authpass.app/articles/authpass-released-for-windows-desktop-authpass-1.7.0/&#34;&gt;Windows&lt;/a&gt; &lt;a href=&#34;https://github.com/authpass/authpass/issues/27&#34;&gt;https://github.com/authpass/authpass/issues/27&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://authpass.app/articles/linux-desktop-release-authpass-1.6.3/&#34;&gt;Linux&lt;/a&gt; &lt;a href=&#34;https://github.com/authpass/authpass/issues/26&#34;&gt;https://github.com/authpass/authpass/issues/26&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Decrypt with keyfile &lt;a href=&#34;https://github.com/authpass/authpass/issues/3&#34;&gt;https://github.com/authpass/authpass/issues/3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; List of password entries&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 👆️ Search through entries&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 👆️ Entry details&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 👆️ mobile: copy usernames, passwords&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mobile: integrate with biometrics (fingerprint)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; mac: Auto-Type &lt;a href=&#34;https://github.com/authpass/authpass/issues/13&#34;&gt;https://github.com/authpass/authpass/issues/13&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 👆️ Auto-lock after x minutes of inactivity. &lt;a href=&#34;https://github.com/authpass/authpass/issues/14&#34;&gt;https://github.com/authpass/authpass/issues/14&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Editing existing entries&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Saving of changes into kdbx file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Creating of new kdbx files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Syncing of kdbx files via custom cloud service and QR codes. &lt;a href=&#34;https://github.com/authpass/authpass/issues/29&#34;&gt;https://github.com/authpass/authpass/issues/29&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Syncing with cloud services like dropbox or google drive?&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 👆️ CI pipeline/continous builds, releases&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; kdbx 4 support (missing argon2) compatibility &lt;a href=&#34;https://github.com/authpass/authpass/issues/4&#34;&gt;https://github.com/authpass/authpass/issues/4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Android: Auto Fill &lt;a href=&#34;https://github.com/authpass/authpass/issues/30&#34;&gt;https://github.com/authpass/authpass/issues/30&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; iOS: Auto Fill &lt;a href=&#34;https://github.com/authpass/authpass/issues/31&#34;&gt;https://github.com/authpass/authpass/issues/31&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Donations&lt;/h1&gt; &#xA;&lt;p&gt;If you like AuthPass check out the &lt;a href=&#34;https://authpass.app/docs/support-authpass-get-involved/&#34;&gt;website for ways to support us&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bitcoin: 3NcBacCmJbYWpwxj6rWzpM7sx48etMrPtc&lt;/li&gt; &#xA; &lt;li&gt;GitHub Sponsor: &lt;a href=&#34;https://github.com/sponsors/hpoul&#34;&gt;https://github.com/sponsors/hpoul&lt;/a&gt; (Or just hit the &lt;em&gt;Sponsor&lt;/em&gt; button up top).&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>