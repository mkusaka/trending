<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-20T01:33:34Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nslogx/flutter_easyloading</title>
    <updated>2022-09-20T01:33:34Z</updated>
    <id>tag:github.com,2022-09-20:/nslogx/flutter_easyloading</id>
    <link href="https://github.com/nslogx/flutter_easyloading" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚ú®A clean and lightweight loading/toast widget for Flutter, easy to use without context, support iOS„ÄÅAndroid and Web&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter EasyLoading&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_easyloading&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_easyloading?style=flat&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_easyloading/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_easyloading/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_easyloading/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_easyloading/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/flutter_easyloading/score&#34;&gt;&lt;img src=&#34;https://badges.bar/flutter_easyloading/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nslogx/flutter_easyloading&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/nslogx/flutter_easyloading?style=flat&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nslogx/flutter_easyloading&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/nslogx/flutter_easyloading?style=social&#34; alt=&#34;stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/nslogx/flutter_easyloading/develop/README-zh_CN.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nslogx/flutter_easyloading/master/images/gif01.gif&#34; width=&#34;200&#34; height=&#34;429/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/nslogx/flutter_easyloading/master/images/gif02.gif&#34; width=&#34;200&#34; height=&#34;429/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/nslogx/flutter_easyloading/master/images/gif03.gif&#34; width=&#34;200&#34; height=&#34;429/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/nslogx/flutter_easyloading/master/images/gif04.gif&#34; width=&#34;200&#34; height=&#34;429/&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Live Preview&lt;/h2&gt; &#xA;&lt;p&gt;üëâ &lt;a href=&#34;https://nslogx.github.io/flutter_easyloading/#/&#34;&gt;https://nslogx.github.io/flutter_easyloading&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Add this to your package&#39;s &lt;code&gt;pubspec.yaml&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  flutter_easyloading: ^latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Import&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter_easyloading/flutter_easyloading.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;First, initialize &lt;code&gt;EasyLoading&lt;/code&gt; in your &lt;code&gt;MaterialApp&lt;/code&gt;/&lt;code&gt;CupertinoApp&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class MyApp extends StatelessWidget {&#xA;  // This widget is the root of your application.&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      title: &#39;Flutter EasyLoading&#39;,&#xA;      theme: ThemeData(&#xA;        primarySwatch: Colors.blue,&#xA;      ),&#xA;      home: MyHomePage(title: &#39;Flutter EasyLoading&#39;),&#xA;      builder: EasyLoading.init(),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, enjoy yourself:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;EasyLoading.show(status: &#39;loading...&#39;);&#xA;&#xA;EasyLoading.showProgress(0.3, status: &#39;downloading...&#39;);&#xA;&#xA;EasyLoading.showSuccess(&#39;Great Success!&#39;);&#xA;&#xA;EasyLoading.showError(&#39;Failed with Error&#39;);&#xA;&#xA;EasyLoading.showInfo(&#39;Useful Information.&#39;);&#xA;&#xA;EasyLoading.showToast(&#39;Toast&#39;);&#xA;&#xA;EasyLoading.dismiss();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add loading status callback&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;EasyLoading.addStatusCallback((status) {&#xA;  print(&#39;EasyLoading Status $status&#39;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Remove loading status callback(s)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;EasyLoading.removeCallback(statusCallback);&#xA;&#xA;EasyLoading.removeAllCallbacks();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customize&lt;/h2&gt; &#xA;&lt;p&gt;‚ùóÔ∏è&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;textColor&lt;/code&gt;„ÄÅ&lt;code&gt;indicatorColor&lt;/code&gt;„ÄÅ&lt;code&gt;progressColor&lt;/code&gt;„ÄÅ&lt;code&gt;backgroundColor&lt;/code&gt; only used for &lt;code&gt;EasyLoadingStyle.custom&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;maskColor&lt;/code&gt; only used for &lt;code&gt;EasyLoadingMaskType.custom&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;/// loading style, default [EasyLoadingStyle.dark].&#xA;EasyLoadingStyle loadingStyle;&#xA;&#xA;/// loading indicator type, default [EasyLoadingIndicatorType.fadingCircle].&#xA;EasyLoadingIndicatorType indicatorType;&#xA;&#xA;/// loading mask type, default [EasyLoadingMaskType.none].&#xA;EasyLoadingMaskType maskType;&#xA;&#xA;/// toast position, default [EasyLoadingToastPosition.center].&#xA;EasyLoadingToastPosition toastPosition;&#xA;&#xA;/// loading animationStyle, default [EasyLoadingAnimationStyle.opacity].&#xA;EasyLoadingAnimationStyle animationStyle;&#xA;&#xA;/// loading custom animation, default null.&#xA;EasyLoadingAnimation customAnimation;&#xA;&#xA;/// textAlign of status, default [TextAlign.center].&#xA;TextAlign textAlign;&#xA;&#xA;/// textStyle of status, default null.&#xA;TextStyle textStyle;&#xA;&#xA;/// content padding of loading.&#xA;EdgeInsets contentPadding;&#xA;&#xA;/// padding of [status].&#xA;EdgeInsets textPadding;&#xA;&#xA;/// size of indicator, default 40.0.&#xA;double indicatorSize;&#xA;&#xA;/// radius of loading, default 5.0.&#xA;double radius;&#xA;&#xA;/// fontSize of loading, default 15.0.&#xA;double fontSize;&#xA;&#xA;/// width of progress indicator, default 2.0.&#xA;double progressWidth;&#xA;&#xA;/// width of indicator, default 4.0, only used for [EasyLoadingIndicatorType.ring, EasyLoadingIndicatorType.dualRing].&#xA;double lineWidth;&#xA;&#xA;/// display duration of [showSuccess] [showError] [showInfo], default 2000ms.&#xA;Duration displayDuration;&#xA;&#xA;/// animation duration of indicator, default 200ms.&#xA;Duration animationDuration;&#xA;&#xA;/// color of loading status, only used for [EasyLoadingStyle.custom].&#xA;Color textColor;&#xA;&#xA;/// color of loading indicator, only used for [EasyLoadingStyle.custom].&#xA;Color indicatorColor;&#xA;&#xA;/// progress color of loading, only used for [EasyLoadingStyle.custom].&#xA;Color progressColor;&#xA;&#xA;/// background color of loading, only used for [EasyLoadingStyle.custom].&#xA;Color backgroundColor;&#xA;&#xA;/// mask color of loading, only used for [EasyLoadingMaskType.custom].&#xA;Color maskColor;&#xA;&#xA;/// should allow user interactions while loading is displayed.&#xA;bool userInteractions;&#xA;&#xA;/// should dismiss on user tap.&#xA;bool dismissOnTap;&#xA;&#xA;/// indicator widget of loading&#xA;Widget indicatorWidget;&#xA;&#xA;/// success widget of loading&#xA;Widget successWidget;&#xA;&#xA;/// error widget of loading&#xA;Widget errorWidget;&#xA;&#xA;/// info widget of loading&#xA;Widget infoWidget;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Because of &lt;code&gt;EasyLoading&lt;/code&gt; is a singleton, so you can custom loading style any where like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;EasyLoading.instance&#xA;  ..displayDuration = const Duration(milliseconds: 2000)&#xA;  ..indicatorType = EasyLoadingIndicatorType.fadingCircle&#xA;  ..loadingStyle = EasyLoadingStyle.dark&#xA;  ..indicatorSize = 45.0&#xA;  ..radius = 10.0&#xA;  ..progressColor = Colors.yellow&#xA;  ..backgroundColor = Colors.green&#xA;  ..indicatorColor = Colors.yellow&#xA;  ..textColor = Colors.yellow&#xA;  ..maskColor = Colors.blue.withOpacity(0.5)&#xA;  ..userInteractions = true&#xA;  ..dismissOnTap = false&#xA;  ..customAnimation = CustomAnimation();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More indicatorType can see in üëâ &lt;a href=&#34;https://github.com/jogboms/flutter_spinkit#-showcase&#34;&gt;flutter_spinkit showcase&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Custom Animation&lt;/h2&gt; &#xA;&lt;p&gt;example: üëâ &lt;a href=&#34;https://github.com/nslogx/flutter_easyloading/raw/develop/example/lib/custom_animation.dart&#34;&gt;Custom Animation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;add progress indicator&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;add custom animation&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nslogx/flutter_easyloading/develop/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nslogx/flutter_easyloading/develop/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/jogboms/flutter_spinkit&#34;&gt;flutter_spinkit&lt;/a&gt; ‚ù§Ô∏è&lt;/p&gt; &#xA;&lt;p&gt;Supported by &lt;a href=&#34;https://www.jetbrains.com/community/opensource/#support&#34;&gt;JetBrains Open Source&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=FlutterEasyLoading&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nslogx/flutter_easyloading/master/images/jetbrains.png&#34; width=&#34;200&#34; height=&#34;112/&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>