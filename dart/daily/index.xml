<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-24T01:23:36Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zulip/zulip-flutter</title>
    <updated>2024-02-24T01:23:36Z</updated>
    <id>tag:github.com,2024-02-24:/zulip/zulip-flutter</id>
    <link href="https://github.com/zulip/zulip-flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Future Zulip client using Flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zulip Flutter (beta)&lt;/h1&gt; &#xA;&lt;p&gt;A Zulip client for Android and iOS, using Flutter.&lt;/p&gt; &#xA;&lt;p&gt;This app is currently &lt;a href=&#34;https://chat.zulip.org/#narrow/stream/2-general/topic/Flutter/near/1708728&#34;&gt;in beta&lt;/a&gt;. When it&#39;s ready, it &lt;a href=&#34;https://chat.zulip.org/#narrow/stream/2-general/topic/Flutter/near/1582367&#34;&gt;will become the new&lt;/a&gt; official mobile Zulip client. To see what work is planned before that launch, see the &lt;a href=&#34;https://github.com/zulip/zulip-flutter/milestones?direction=asc&amp;amp;sort=title&#34;&gt;milestones&lt;/a&gt; and the &lt;a href=&#34;https://github.com/orgs/zulip/projects/5/views/4&#34;&gt;project board&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using Zulip&lt;/h2&gt; &#xA;&lt;p&gt;To use Zulip on iOS or Android, install the &lt;a href=&#34;https://github.com/zulip/zulip-mobile#readme&#34;&gt;official mobile Zulip client&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started in developing this beta app&lt;/h2&gt; &#xA;&lt;h3&gt;Setting up&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://docs.flutter.dev/get-started/install&#34;&gt;Flutter installation guide&lt;/a&gt; for your platform of choice.&lt;/li&gt; &#xA; &lt;li&gt;Switch to the latest version of Flutter by running &lt;code&gt;flutter channel main&lt;/code&gt; and &lt;code&gt;flutter upgrade&lt;/code&gt; (see &lt;a href=&#34;https://raw.githubusercontent.com/zulip/zulip-flutter/main/#flutter-version&#34;&gt;Flutter version&lt;/a&gt; below).&lt;/li&gt; &#xA; &lt;li&gt;Ensure Flutter is correctly configured by running &lt;code&gt;flutter doctor&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Start the app with &lt;code&gt;flutter run&lt;/code&gt;, or from your IDE.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Flutter help&lt;/h3&gt; &#xA;&lt;p&gt;For help getting started with Flutter development, view the &lt;a href=&#34;https://docs.flutter.dev/&#34;&gt;online documentation&lt;/a&gt;, which offers tutorials, samples, guidance on mobile development, and a full API reference. Specific resources include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.flutter.dev/get-started/codelab&#34;&gt;Lab: Write your first Flutter app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.flutter.dev/cookbook&#34;&gt;Cookbook: Useful Flutter samples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Flutter version&lt;/h3&gt; &#xA;&lt;p&gt;While in the beta phase, we use the latest Flutter from Flutter&#39;s main branch. Use &lt;code&gt;flutter channel main&lt;/code&gt; and &lt;code&gt;flutter upgrade&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We don&#39;t pin a specific version, because Flutter itself doesn&#39;t offer a way to do so. So far that hasn&#39;t been a problem. When it becomes one, we&#39;ll figure it out; there are several tools for this in the Flutter community. See &lt;a href=&#34;https://github.com/zulip/zulip-flutter/issues/15&#34;&gt;issue #15&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;You can run all our forms of tests with the &lt;code&gt;tools/check&lt;/code&gt; script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ tools/check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;code&gt;tools/check --help&lt;/code&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;The two major test suites are the Dart analyzer, which performs type-checking and linting; and our unit tests, located in the &lt;code&gt;test/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;You can run these suites directly with the commands &lt;code&gt;flutter analyze&lt;/code&gt; and &lt;code&gt;flutter test&lt;/code&gt; respectively. Both commands accept a list of file or directory paths to operate on, and other options. Particularly recommended is a command like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ flutter test test/foo/bar_test.dart --name &#39;baz&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which will run only the tests in &lt;code&gt;test/foo/bar_test.dart&lt;/code&gt;, and within those only the tests with names matching &lt;code&gt;baz&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When editing in an IDE, the IDE should give you the exact same feedback as &lt;code&gt;flutter analyze&lt;/code&gt; would. When editing a test file, the IDE can also run individual tests for you. See &lt;a href=&#34;https://docs.flutter.dev/cookbook/testing/unit/introduction&#34;&gt;upstream docs on &lt;code&gt;flutter test&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;h3&gt;Writing tests&lt;/h3&gt; &#xA;&lt;p&gt;For unit tests, we use &lt;a href=&#34;https://pub.dev/packages/checks&#34;&gt;the &lt;code&gt;checks&lt;/code&gt; package&lt;/a&gt;. This is a new package from the Dart team, currently in preview, which is &lt;a href=&#34;https://github.com/dart-lang/test/raw/master/pkgs/checks/doc/migrating_from_matcher.md&#34;&gt;intended to replace&lt;/a&gt; the old &lt;code&gt;matcher&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;p&gt;This means that if you see example test code elsewhere that uses the &lt;code&gt;expect&lt;/code&gt; function, we&#39;d prefer to translate it into something in terms of &lt;code&gt;check&lt;/code&gt;. For help with that, see the &lt;a href=&#34;https://github.com/dart-lang/test/raw/master/pkgs/checks/doc/migrating_from_matcher.md&#34;&gt;&lt;code&gt;package:checks&lt;/code&gt; migration guide&lt;/a&gt; and the package&#39;s &lt;a href=&#34;https://pub.dev/documentation/checks/latest/checks/checks-library.html&#34;&gt;API docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Because &lt;code&gt;package:checks&lt;/code&gt; is still in preview, the Dart team is open to feedback on the API to a degree that they won&#39;t be after it reaches 1.0. So where we find rough edges, now is a good time to &lt;a href=&#34;https://github.com/dart-lang/test/issues&#34;&gt;report them as issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Editing API types&lt;/h3&gt; &#xA;&lt;p&gt;We support Zulip Server 4.0 and later. For API features added in newer versions, use &lt;code&gt;TODO(server-N)&lt;/code&gt; comments (like those you see in the existing code.)&lt;/p&gt; &#xA;&lt;p&gt;When editing the files in &lt;code&gt;lib/api/model/&lt;/code&gt;, use the following command to keep the generated files up to date:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ dart run build_runner watch --delete-conflicting-outputs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In our API types, constructors should generally avoid default values for their parameters, even &lt;code&gt;null&lt;/code&gt;. This means writing e.g. &lt;code&gt;required this.foo&lt;/code&gt; rather than just &lt;code&gt;this.foo&lt;/code&gt;, even when &lt;code&gt;foo&lt;/code&gt; is nullable. This is because it&#39;s common in the Zulip API for a null or missing value to be quite salient in meaning, and not a boring value appropriate for a default, so that it&#39;s best to ensure callers make an explicit choice. If passing explicit values in tests is cumbersome, a factory function in &lt;code&gt;test/example_data.dart&lt;/code&gt; is an appropriate way to share defaults.&lt;/p&gt; &#xA;&lt;h3&gt;Upgrading Flutter&lt;/h3&gt; &#xA;&lt;p&gt;We regularly increment our lower bounds on Flutter and Dart versions, to make sure there&#39;s not too much divergence in the versions people are using.&lt;/p&gt; &#xA;&lt;p&gt;When there&#39;s a new beta (which happens a couple of times per month), that&#39;s a good prompt to do this. We also do this when there&#39;s a new PR merged that we particularly want to take.&lt;/p&gt; &#xA;&lt;p&gt;To update the version bounds:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;flutter upgrade&lt;/code&gt; to upgrade your local Flutter and Dart.&lt;/li&gt; &#xA; &lt;li&gt;Update the lower bounds at &lt;code&gt;environment&lt;/code&gt; in &lt;code&gt;pubspec.yaml&lt;/code&gt; to the new versions, as seen in &lt;code&gt;flutter --version&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;flutter pub get&lt;/code&gt;, which will update &lt;code&gt;pubspec.lock&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Make a quick check that things work: &lt;code&gt;tools/check&lt;/code&gt;, and do a quick smoke-test of the app.&lt;/li&gt; &#xA; &lt;li&gt;Commit and push the changes in &lt;code&gt;pubspec.yaml&lt;/code&gt; and &lt;code&gt;pubspec.lock&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Upgrading dependencies&lt;/h3&gt; &#xA;&lt;p&gt;When adding or upgrading dependencies, try to keep our generated files updated atomically with them.&lt;/p&gt; &#xA;&lt;p&gt;In particular the CocoaPods lockfiles &lt;code&gt;ios/Podfile.lock&lt;/code&gt; and &lt;code&gt;macos/Podfile.lock&lt;/code&gt; frequently need an update when dependencies change. This can only be done in a macOS development environment.&lt;/p&gt; &#xA;&lt;p&gt;If you have access to a Mac, then for upgrading dependencies, use the script &lt;code&gt;tools/upgrade&lt;/code&gt;. Or after adding a new dependency, run the commands &lt;code&gt;(cd ios &amp;amp;&amp;amp; pod update) &amp;amp;&amp;amp; (cd macos &amp;amp;&amp;amp; pod update)&lt;/code&gt; to apply any needed updates to the CocoaPods lockfiles.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t have convenient access to a Mac, then just mention clearly in your PR that the upgrade needs syncing for CocoaPods, and someone else can do it before merging the PR.&lt;/p&gt; &#xA;&lt;p&gt;(Ideally we would validate these automatically in CI: &lt;a href=&#34;https://github.com/zulip/zulip-flutter/issues/329&#34;&gt;#329&lt;/a&gt;. Several other kinds of generated files are already validated in CI.)&lt;/p&gt; &#xA;&lt;h3&gt;Translations and i18n&lt;/h3&gt; &#xA;&lt;p&gt;When adding new strings in the UI, we set them up to be translated. For details on how to do this, see the &lt;a href=&#34;https://raw.githubusercontent.com/zulip/zulip-flutter/main/docs/translation.md&#34;&gt;translation doc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2022 Kandra Labs, Inc., and contributors.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; &#xA;&lt;p&gt;The software includes some works released by third parties under other free and open source licenses. Those works are redistributed under the license terms under which the works were received.&lt;/p&gt;</summary>
  </entry>
</feed>