<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-23T01:34:13Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bhattabhi013/Vritant</title>
    <updated>2023-05-23T01:34:13Z</updated>
    <id>tag:github.com,2023-05-23:/bhattabhi013/Vritant</id>
    <link href="https://github.com/bhattabhi013/Vritant" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;&#34; rel=&#34;noopener&#34;&gt; &lt;img src=&#34;https://i.imgur.com/AZ2iWek.png&#34; alt=&#34;Project logo&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Vritant&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;http://hackathon.url.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/hackathon-SIH-Orange.svg?sanitize=true&#34; alt=&#34;Hackathon&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/status-active-success.svg?sanitize=true&#34; alt=&#34;Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bhattabhi013/Vritant/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/kylelobo/The-Documentation-Compendium.svg?sanitize=true&#34; alt=&#34;GitHub Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bhattabhi013/Vritant/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/kylelobo/The-Documentation-Compendium.svg?sanitize=true&#34; alt=&#34;GitHub Pull Requests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Workflow of the Project&lt;/h3&gt; &#xA;&lt;p&gt;📌 We have firstly identify the need of children like their problems in studying &lt;br&gt; 📌 First of all when user will get to our app ,there will be Google authentication for login. &lt;br&gt; 📌 User can login by their mail as it is easy to do &lt;br&gt; 📌 Google authentication is very secured to use &lt;br&gt; 📌 We have many rhymes for vast variety of choice &lt;br&gt; 📌 One can read the text and also play with it using text-to-speech functionality, as for kids reading one is hard so they can listen to the text as well &lt;br&gt; 📌 We have feature of 3-D models present for rhymes which will make understanding more good by visualising it live &lt;br&gt; 📌 A section Playground is also present in that user can experience AR in real life which leads to more clearity of rhymes &lt;br&gt; 📌 User can create many senses of 3-D models and they can rotate it and play with it &lt;br&gt; 📌 We have made this application like if user want to move the model they can as it gets automatic aligned &lt;br&gt; 📌 User can alseo zoom in and zoom out the models &lt;br&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Aim of the Project&lt;/h3&gt; &#xA;&lt;p&gt;📌 Learning is easy and fun by Vritant &lt;br&gt; 📌 Many features are there for best understanding of rhymes &lt;br&gt; 📌 Vritant is purely made by new and unique ideas &lt;br&gt; 📌 We have made it in such a way that kids will not be bored while learning &lt;br&gt; 📌 Vritant is easily accesible to all &lt;br&gt; 📌 There is no need to pay money as the app is free &lt;br&gt; 📌 Vritant targets kids to learn in fun without any pressure &lt;br&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Few lines describing your project. &lt;br&gt; &lt;/p&gt; &#xA;&lt;h2&gt;📝 Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bhattabhi013/Vritant/master/#problem_statement&#34;&gt;Problem Statement&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bhattabhi013/Vritant/master/#idea&#34;&gt;Idea / Solution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bhattabhi013/Vritant/master/#limitations&#34;&gt;Dependencies / Limitations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bhattabhi013/Vritant/master/#future_scope&#34;&gt;Future Scope&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bhattabhi013/Vritant/master/#getting_started&#34;&gt;Setting up a local environment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bhattabhi013/Vritant/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bhattabhi013/Vritant/master/#tech_stack&#34;&gt;Technology Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bhattabhi013/Vritant/master/#how_contribute&#34;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bhattabhi013/Vritant/master/#authors&#34;&gt;Authors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bhattabhi013/Vritant/master/#acknowledgments&#34;&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bhattabhi013/Vritant/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🧐 Problem Statement &lt;a name=&#34;problem_statement&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Successful communication requires the efforts of all people involved Education industry is being digitized through smart devices technology being addictive and fascinating.&lt;/li&gt; &#xA; &lt;li&gt;Reading books is really boring but with the help of AR we can help turn it into a fun experience.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💡 Idea / Solution &lt;a name=&#34;idea&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;We are trying to create an application/web-based solution following its incorporated features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vritaant is a cross-platform application to help the naughty and carefree young ones learn and understand nursery rhymes in a fun and interactive way.&lt;/li&gt; &#xA; &lt;li&gt;Vritaant helps to incorporate Augmented Reality based digital learning experience to help children take their first step into formal education&lt;/li&gt; &#xA; &lt;li&gt;Visualisation of nursery rhymes by putting them in a real 3D environment with in-space navigation support.&lt;/li&gt; &#xA; &lt;li&gt;3D models for the rhyme characters are supporting and connecting blocks to create a setting and putting it in real world.&lt;/li&gt; &#xA; &lt;li&gt;Augmented Reality powered voice - based support aims at helping kids age 3-4 to learn the nursery rhymes at a faster pace.&lt;/li&gt; &#xA; &lt;li&gt;Support for playground features makes it easier to test out various 3D models that are accessible, perform various transformations, and render numerous instances.&lt;/li&gt; &#xA; &lt;li&gt;The application is made more secure by leveraging Google authentication through Firebase.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⛓️ Dependencies / Limitations &lt;a name=&#34;limitations&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;To be updated&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots and Demo &lt;a name=&#34;demo&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;img width=&#34;289&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/47862474/207318563-c90387fe-a73a-4cba-b22c-34a0813639e1.png&#34;&gt; - Video Demo: https://youtu.be/pZJ-Nz6inIE &#xA;&lt;h2&gt;🚀 Future Scope &lt;a name=&#34;future_scope&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We will provide the option to create a 3D model of any image that the user scans in addition to the Playground feature&#39;s current functionality.&lt;/li&gt; &#xA; &lt;li&gt;Speech-reading to aid communication within a group.&lt;/li&gt; &#xA; &lt;li&gt;Increasing a wide variety of tracks to choose from like learning alphabets or numbers to fun rhymes, colors and shapes to keep the child engaged.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🏁 Getting Started &lt;a name=&#34;getting_started&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the project or fork the project.&lt;/li&gt; &#xA; &lt;li&gt;Run &#39;pub get&#39;.&lt;/li&gt; &#xA; &lt;li&gt;Enjoy the code.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Flutter&lt;/li&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🎈 Usage &lt;a name=&#34;usage&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;To be updated&lt;/p&gt; &#xA;&lt;h2&gt;⛏️ Built With &lt;a name=&#34;tech_stack&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt;- Auth and Database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://unity.com/&#34;&gt;Unity&lt;/a&gt; - 3d models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter&lt;/a&gt; - Mobile App&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/ar_flutter_plugin&#34;&gt;Augmented reailty&lt;/a&gt; - AR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Start Contributing &lt;a name=&#34;how_contribute&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork this repository by clicking on the fork button on the top of this page. This will create a copy of this repository in your account.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now clone the forked repository to your machine. Go to your GitHub account, open the forked repository, click on the code button and then click the copy to clipboard icon.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a terminal and run the following git command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone &#34;url you just copied&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;where &#34;url you just copied&#34; (without the quotation marks) is the url to this repository (your fork of this project). See the previous steps to obtain the url. For example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/your_username/Vritant.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now create a branch using the &#39;git switch&#39; command in repository directory:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git switch -c your-new-branch-name&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make necessary changes and commit those changes. Add those changes to the branch you just created using the &#39;git add&#39; command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git add .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now commit those changes using the &#39;git commit&#39; command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git commit -m &#34;Add your title here&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Push your changes using the command git push:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git push -u origin your-branch-name&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;replacing your-branch-name with the name of the branch you created earlier.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Submit your changes for review If you go to your repository on GitHub, you&#39;ll see a Compare &amp;amp; pull request button. Click on that button. Now add appropriate title and comment on it and submit the pull request.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;✍️ Authors &lt;a name=&#34;authors&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bhattabhi013&#34;&gt;Abhishek Bhatt&lt;/a&gt; - Idea &amp;amp; Initial work&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/syedareehaquasar&#34;&gt;Syeda Reeha Quasar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sejalcodes&#34;&gt;Sejal Jain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kashika3101&#34;&gt;Kashika Jain&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎉 Acknowledgments &lt;a name=&#34;acknowledgments&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_tts&#34;&gt;Text-to-speech&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/ar_flutter_plugin&#34;&gt;Ar Flutter plugin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;/h1&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;🧑‍💻 CONTRIBUTION 👏&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contributions make the open source community such an amazing place to learn, inspire, and create.&lt;/li&gt; &#xA; &lt;li&gt;Any contributions you make are greatly appreciated.&lt;/li&gt; &#xA; &lt;li&gt;Check out our &lt;a href=&#34;https://raw.githubusercontent.com/bhattabhi013/Vritant/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; for more information.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Project Admin 💻&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/bhattabhi013&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/bhattabhi013&#34; width=&#34;20%&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt; Our Amazing Contributors 👨‍👨‍👦‍👦❤️&lt;/h1&gt; &#xA;&lt;p&gt;Thanks to all the contributors who worked for this project to stay alive! 😊😎&lt;/p&gt; &#xA;&lt;a align=&#34;center&#34; href=&#34;https://github.com/bhattabhi013/Vritant/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=bhattabhi013/Vritant&amp;amp;&amp;amp;max=817&#34;&gt; &lt;/a&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h3&gt;&lt;b&gt;Take a moment to star ⭐ the project if you like it&lt;/b&gt;&lt;/h3&gt; &#xA; &lt;h3&gt;Do checkout the other repos 💫&lt;/h3&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>Clueless-Community/Spectrum-UI</title>
    <updated>2023-05-23T01:34:13Z</updated>
    <id>tag:github.com,2023-05-23:/Clueless-Community/Spectrum-UI</id>
    <link href="https://github.com/Clueless-Community/Spectrum-UI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Spectrum UI is a user-friendly Flutter UI library that offers a variety of beautifully designed widgets and components that are easy to use and can be integrated into your Flutter projects seamlessly.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; Spectrum UI (Under Development) &lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; Amazing UI Components for you to choose from. 📜 &lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Spectrum UI is a user-friendly Flutter UI library that offers a variety of beautifully designed widgets and components that are easy to use and can be integrated into your Flutter projects seamlessly. With Spectrum UI, you can quickly create stunning mobile app interfaces without spending a lot of time and effort on design and development. The library includes a range of pre-built UI elements such as buttons, text fields, cards, and more, all with a consistent look and feel that will make your app look polished and professional. Whether you&#39;re a beginner or an experienced Flutter developer, Spectrum UI makes it easy to create beautiful apps with minimal effort. &lt;/p&gt; &#xA;&lt;h2&gt;Tech Stacks used 💻&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flutter.dev/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Flutter-%2302569B.svg?style=for-the-badge&amp;amp;logo=Flutter&amp;amp;logoColor=white&#34; alt=&#34;Flutter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dart.dev/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dart-%230175C2.svg?style=for-the-badge&amp;amp;logo=dart&amp;amp;logoColor=white&#34; alt=&#34;Dart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;UI Components include but are not limited to 📖&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;App Bar&lt;/li&gt; &#xA; &lt;li&gt;Bottom Navigation Bar&lt;/li&gt; &#xA; &lt;li&gt;Alerts&lt;/li&gt; &#xA; &lt;li&gt;Calendars UI&lt;/li&gt; &#xA; &lt;li&gt;Buttons&lt;/li&gt; &#xA; &lt;li&gt;Labels&lt;/li&gt; &#xA; &lt;li&gt;Text Fields&lt;/li&gt; &#xA; &lt;li&gt;Search Fields&lt;/li&gt; &#xA; &lt;li&gt;Slider&lt;/li&gt; &#xA; &lt;li&gt;Notification&lt;/li&gt; &#xA; &lt;li&gt;Pop up&lt;/li&gt; &#xA; &lt;li&gt;Progress bar&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;... and many &lt;a href=&#34;https://docs.flutter.dev/development/ui/widgets/material&#34;&gt;more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots of some of the UI components &lt;span&gt;📱&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Banner&lt;/td&gt; &#xA;   &lt;td&gt;Text Field&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Clueless-Community/Spectrum-UI/main/assets/Screenshots/banner.jpg&#34; width=&#34;400&#34; height=&#34;700&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;assets/Screenshots/text field.jpg&#34; width=&#34;400&#34; height=&#34;700&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clueless-Community/Spectrum-UI/main/ScreensShots.md&#34; width=&#34;400&#34;&gt;see more&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;👩🏽‍💻 Contribution&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contributions make the open source community such an amazing place to learn, inspire, and create.&lt;/li&gt; &#xA; &lt;li&gt;Any contributions you make are greatly appreciated.&lt;/li&gt; &#xA; &lt;li&gt;Check out our &lt;a href=&#34;https://github.com/Clueless-Community/flutter-ui-components/raw/master/CONTRIBUTION.md&#34;&gt;contribution guidelines&lt;/a&gt; for more information.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; Project maintainers &lt;/h2&gt; &#xA;&lt;table align=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Debajyoti14&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/91759192?v=4&#34; width=&#34;100;&#34; alt=&#34;Debajyoti Saha&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Debajyoti Saha&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/roshaen&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/58213083?v=4&#34; width=&#34;100;&#34; alt=&#34;Roshan Kumar&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Roshan Kumar&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Bhavikk01&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/91150440?v=4&#34; width=&#34;100;&#34; alt=&#34;Debajyoti Saha&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Bhavik Kothari&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;  &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/ashdude1401&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/98846260?v=4&#34; width=&#34;100;&#34; alt=&#34;Ashutosh Jha&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Ashutosh Jha&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Our Amazing Contributors of this Project 👨‍👨‍👦‍👦❤️&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all the contributors who worked for this project to stay alive! 😊😎&lt;/p&gt; &#xA;&lt;a align=&#34;center&#34; href=&#34;https://github.com/Clueless-Community/flutter-ui-components/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=Clueless-Community/flutter-ui-components&amp;amp;&amp;amp;max=817&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h3&gt;&lt;b&gt;Take a moment to star ⭐ the project if you like it&lt;/b&gt;&lt;/h3&gt; &#xA; &lt;h3&gt;Do checkout the other repos 💫&lt;/h3&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>flutter/io_flip</title>
    <updated>2023-05-23T01:34:13Z</updated>
    <id>tag:github.com,2023-05-23:/flutter/io_flip</id>
    <link href="https://github.com/flutter/io_flip" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Google I/O 2023 FLIP AI-designed card game built with Flutter &amp; Firebase&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;I/O FLIP&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flip.withgoogle.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flutter/io_flip/main/art/readme_header.png&#34; alt=&#34;I/O FLIP Header&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VGVentures/top_dash/actions/workflows/main.yaml&#34;&gt;&lt;img src=&#34;https://github.com/VGVentures/top_dash/actions/workflows/main.yaml/badge.svg?sanitize=true&#34; alt=&#34;io_flip&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/flutter/io_flip/main/coverage_badge.svg?sanitize=true&#34; alt=&#34;coverage&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/very_good_analysis&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-very_good_analysis-B22C89.svg?sanitize=true&#34; alt=&#34;style: very good analysis&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An AI-designed card game built with &lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt; and &lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt; for &lt;a href=&#34;https://io.google/2023/&#34;&gt;Google I/O 2023&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flip.withgoogle.com/&#34;&gt;Try it now&lt;/a&gt; and &lt;a href=&#34;https://flutter.dev/flip&#34;&gt;learn about how it&#39;s made&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Built by &lt;a href=&#34;https://verygood.ventures/&#34;&gt;Very Good Ventures&lt;/a&gt; in partnership with Google&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Created using &lt;a href=&#34;https://github.com/VeryGoodOpenSource/very_good_cli&#34;&gt;Very Good CLI&lt;/a&gt; 🤖&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting Started 🚀&lt;/h2&gt; &#xA;&lt;p&gt;This project contains 3 flavors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;development&lt;/li&gt; &#xA; &lt;li&gt;staging&lt;/li&gt; &#xA; &lt;li&gt;production&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run the desired flavor either use the launch configuration in VSCode/Android Studio or use the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Development&#xA;$ flutter run --flavor development --target lib/main_development.dart&#xA;&#xA;# Staging&#xA;$ flutter run --flavor staging --target lib/main_staging.dart&#xA;&#xA;# Production&#xA;$ flutter run --flavor production --target lib/main_production.dart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;*I/O FLIP works on Web for desktop and mobile.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Loading initial data into database&lt;/h2&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/flutter/io_flip/main/api/tools/data_loader&#34;&gt;the data loader docs&lt;/a&gt; for documentation on how the initial data is loaded.&lt;/p&gt; &#xA;&lt;h2&gt;Running the loading testing bot locally&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutter/io_flip/main/flop&#34;&gt;Flop&lt;/a&gt; is a loading testing bot written in Flutter that runs on web meant to help testing the scaling of the backend of the game.&lt;/p&gt; &#xA;&lt;p&gt;To execute it in the staging environment, open a terminal an execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./scripts/start_flop_webserver.sh &amp;lt;ENCRYPTION_KEY&amp;gt; &amp;lt;ENCRYPTION_IV&amp;gt; &amp;lt;RECAPTCHA_KEY&amp;gt; &amp;lt;APPCHECK_DEBUG_TOKEN&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will be able to open the url where Flop started and check the progress of the bot run.&lt;/p&gt; &#xA;&lt;p&gt;Which page represents one instance of Flop, to start several instance at the same time, the &lt;code&gt;scripts/spam_flop.sh&lt;/code&gt; can be used, this scripts needs to receive the port where Flop started, so assuming that flop is running on &lt;code&gt;http://localhost:54678&lt;/code&gt;, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./scripts/spam_flop.sh 54678&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The same can be accomplished by using the &lt;code&gt;army.html&lt;/code&gt; page that is bundled in the in it. When loaded you will be able to select how many Flop instances to load, and it is also possible to autoload instances of the bot by adding a # with the number of desired bots to spawn.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Running Tests 🧪&lt;/h2&gt; &#xA;&lt;p&gt;To run all unit and widget tests use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ flutter test --coverage --test-randomize-ordering-seed random&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To view the generated coverage report you can use &lt;a href=&#34;https://github.com/linux-test-project/lcov&#34;&gt;lcov&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Generate Coverage Report&#xA;$ genhtml coverage/lcov.info -o coverage/&#xA;&#xA;# Open Coverage Report&#xA;$ open coverage/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Working with Translations 🌐&lt;/h2&gt; &#xA;&lt;p&gt;This project relies on &lt;a href=&#34;https://api.flutter.dev/flutter/flutter_localizations/flutter_localizations-library.html&#34;&gt;flutter_localizations&lt;/a&gt; and follows the &lt;a href=&#34;https://flutter.dev/docs/development/accessibility-and-localization/internationalization&#34;&gt;official internationalization guide for Flutter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Adding Strings&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To add a new localizable string, open the &lt;code&gt;app_en.arb&lt;/code&gt; file at &lt;code&gt;lib/l10n/arb/app_en.arb&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-arb&#34;&gt;{&#xA;    &#34;@@locale&#34;: &#34;en&#34;,&#xA;    &#34;counterAppBarTitle&#34;: &#34;Counter&#34;,&#xA;    &#34;@counterAppBarTitle&#34;: {&#xA;        &#34;description&#34;: &#34;Text shown in the AppBar of the Counter Page&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Then add a new key/value and description&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-arb&#34;&gt;{&#xA;    &#34;@@locale&#34;: &#34;en&#34;,&#xA;    &#34;counterAppBarTitle&#34;: &#34;Counter&#34;,&#xA;    &#34;@counterAppBarTitle&#34;: {&#xA;        &#34;description&#34;: &#34;Text shown in the AppBar of the Counter Page&#34;&#xA;    },&#xA;    &#34;helloWorld&#34;: &#34;Hello World&#34;,&#xA;    &#34;@helloWorld&#34;: {&#xA;        &#34;description&#34;: &#34;Hello World Text&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Use the new string&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:io_flip/l10n/l10n.dart&#39;;&#xA;&#xA;@override&#xA;Widget build(BuildContext context) {&#xA;  final l10n = context.l10n;&#xA;  return Text(l10n.helloWorld);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Adding Supported Locales&lt;/h3&gt; &#xA;&lt;p&gt;Update the &lt;code&gt;CFBundleLocalizations&lt;/code&gt; array in the &lt;code&gt;Info.plist&lt;/code&gt; at &lt;code&gt;ios/Runner/Info.plist&lt;/code&gt; to include the new locale.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    ...&#xA;&#xA;    &amp;lt;key&amp;gt;CFBundleLocalizations&amp;lt;/key&amp;gt;&#xA;&#x9;&amp;lt;array&amp;gt;&#xA;&#x9;&#x9;&amp;lt;string&amp;gt;en&amp;lt;/string&amp;gt;&#xA;&#x9;&#x9;&amp;lt;string&amp;gt;es&amp;lt;/string&amp;gt;&#xA;&#x9;&amp;lt;/array&amp;gt;&#xA;&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Adding Translations&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;For each supported locale, add a new ARB file in &lt;code&gt;lib/l10n/arb&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;├── l10n&#xA;│   ├── arb&#xA;│   │   ├── app_en.arb&#xA;│   │   └── app_es.arb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add the translated strings to each &lt;code&gt;.arb&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;app_en.arb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-arb&#34;&gt;{&#xA;    &#34;@@locale&#34;: &#34;en&#34;,&#xA;    &#34;counterAppBarTitle&#34;: &#34;Counter&#34;,&#xA;    &#34;@counterAppBarTitle&#34;: {&#xA;        &#34;description&#34;: &#34;Text shown in the AppBar of the Counter Page&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;app_es.arb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-arb&#34;&gt;{&#xA;    &#34;@@locale&#34;: &#34;es&#34;,&#xA;    &#34;counterAppBarTitle&#34;: &#34;Contador&#34;,&#xA;    &#34;@counterAppBarTitle&#34;: {&#xA;        &#34;description&#34;: &#34;Texto mostrado en la AppBar de la página del contador&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>