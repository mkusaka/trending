<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-29T01:26:56Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>BasedHardware/Friend</title>
    <updated>2024-03-29T01:26:56Z</updated>
    <id>tag:github.com,2024-03-29:/BasedHardware/Friend</id>
    <link href="https://github.com/BasedHardware/Friend" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AI wearable with 24h+ battery&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Friend: Open-Source AI Wearable with 24h+ on single charge&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Assembled&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Disassembled&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/BasedHardware/friend/assets/43514161/f333cecb-cab8-481e-ae9b-37b9b742e2c1&#34; alt=&#34;CleanShot 2024-03-06 at 17 19 58&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/BasedHardware/friend/assets/43514161/af939aca-1257-4f67-8118-e1a91f2d4949&#34; alt=&#34;drawing&#34; width=&#34;1200&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/kEXXsnb5b3&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/kEXXsnb5b3?style=flat&#34; alt=&#34;Discord Follow&#34;&gt;&lt;/a&gt; â€‚ &lt;a href=&#34;https://opensource.org/license/agpl-v3&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPLv3-blue&#34; alt=&#34;License: GPLv3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Friend is an AI wearable device that records everything you say, gives you proactive feedback and advice. Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-Time AI Audio Processing&lt;/strong&gt;: Leverage powerful on-device AI capabilities for real-time audio analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Low-powered Bluetooth&lt;/strong&gt;: Capture audio for 24h+ on a small button battery&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open-Source Software&lt;/strong&gt;: Access and contribute to the pin&#39;s software stack, designed with openness and community collaboration in mind.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wearable Design&lt;/strong&gt;: Experience unparalleled convenience with ergonomic and lightweight design, perfect for everyday wear.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Structure&lt;/h2&gt; &#xA;&lt;p&gt;There are 2 different apps in these repositories located in different branches and folders. Our goal is to merge them into one big project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BasedHardware/friend/tree/AppStandalone&#34;&gt;Standalone Branch&lt;/a&gt; or Folder &#34;AppStandalone&#34;: Standalone version of the app that doesn&#39;t require any hardware to use it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BasedHardware/friend/tree/AppWithWearable&#34;&gt;AppWithWearable Branch&lt;/a&gt; or Folder &#34;AppWithWearable&#34;: Wearable-connected version of the app that requires the &#34;Friend necklace&#34; to use it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[Main Branch] Branch that contains firmware, hardware, designs and both apps&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hardware Buying Guide (&amp;lt;$20 total)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Board: Seeed Studio XIAO nRF52840 Sense | $15 on &lt;a href=&#34;https://www.seeedstudio.com/Seeed-XIAO-BLE-Sense-nRF52840-p-5253.html&#34;&gt;Seedstudio&lt;/a&gt; and $24 on &lt;a href=&#34;https://www.amazon.com/Seeed-Studio-XIAO-nRF52840-Microcontroller/dp/B09T94SZ8K/ref=sr_1_2?dib=eyJ2IjoiMSJ9.i8MUToWd9xYaOg5PHVw2pyxS9i6YZMcZTG4DVV3lwRRKxy64YMOtO-LDhe63d90cDl7xEr3CeA2zN4P5c2G7nGgJl99_6yCVplKsFqtxJyfSQuCMUyZON27nWRtnp-uW1wazpgUV0lN5ds7FKkYz5HTI8bZoLnK2OnFuUet_S4Wsr20oABAovtdI2xrjVYyLaiqLzxrpZyveKDRk_TDpht0rztApuX-YrBb00GDQyFs.sZLkUFW18C8b3EnZpgVKEomXioMKdSLq0F17PikAwc0&amp;amp;dib_tag=se&amp;amp;keywords=nrf52840&amp;amp;qid=1711331537&amp;amp;sr=8-2&amp;amp;th=1&#34;&gt;Amazon&lt;/a&gt; | &amp;lt;$15/unit&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rechargeable Coin Battery| &lt;a href=&#34;https://www.amazon.com/EEMB-LIR2450-Rechargeable-Lithium-ion-Batteries/dp/B096LRQWJS/ref=sr_1_2_sspa?c=ts&amp;amp;dib=eyJ2IjoiMSJ9.iB9wqIOnOFHp9bY1qXkvWnYNLa8HARTAYvJVpVbQw-qguwquzLFLUkNGPkwizKa3c7DF0VJuhO9BTT_NvIx7fCvPalViw9V0BMf0AJP70zR5RR3IxfqXO0P7cEVGBldfucYyftWN05Wd58HGdIFSFyDy1ov1-10FzULlR4uIAAkFzUiSMCHzRcC_JSDym8cVGWr6lnYd6X_sn3yLDRaWdzPvoonRihopnSSN_4YS8FB7htsM_hVHhxfkq7VSPEN9Gha0j2_g2N1yFz3c_bHUywG7FTp1GVSX3BWb9LAhWbY.DTlkyIjSmkY3V14SNbhsNkghKuK2l-hoeHuKQYqgqbI&amp;amp;dib_tag=se&amp;amp;keywords=Coin+%26+Button+Cell+Batteries&amp;amp;qid=1711331648&amp;amp;refinements=p_n_feature_twenty_browse-bin%3A10063714011&amp;amp;s=hpc&amp;amp;sr=1-2-spons&amp;amp;ts_id=389581011&amp;amp;sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&amp;amp;psc=1&#34;&gt;$13 for 5 units on Amazon&lt;/a&gt; and also &lt;a href=&#34;https://www.amazon.de/dp/B096LRQWJS?ref=ppx_pop_mob_ap_share&#34;&gt;link for europe &lt;/a&gt;but you only need one | $2.5/unit&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Slider switch | $7 for 30+ units &lt;a href=&#34;https://www.amazon.com/Tnuocke-Vertical-Position-Latching-SS12F15-G5/dp/B099N3HFPG/ref=sr_1_2?dib=eyJ2IjoiMSJ9.vWYaZHNA7Z38_YnK7oxLKHvVPX-koqNn5CYGqZXKURCQso_zrAwckot4_h8c77Kgy2-m8FcrQymrZff0rlZIGdECJFA5Rwc5EQObrZ5wDb9zjnwVjonhSZfHlyM-KkJKO4_E6mKcC_I0vZg2vS1PBPkNSAXj9H9pTVK3D2iVtuoMNsxvAEwrYUPx3gYOiIjMOzJYoj8aHPmy2W1R4bWcPWp8IvhbO1GO29TT0jVE97U.ZavNMHkM9KYGMLSB_3DREpSJjhQ16_cjqOpo7aPAfHY&amp;amp;dib_tag=se&amp;amp;keywords=slider%2Bswitch&amp;amp;qid=1711332053&amp;amp;sr=8-2&amp;amp;th=1&#34;&gt;on Amazon&lt;/a&gt; but you only need one | &amp;lt;$1/unit&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;3D-print design of the case is located &lt;a href=&#34;https://github.com/BasedHardware/friend/tree/main/3d-printing%20designs&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Follow these steps to get started with your Friend. Note, we tested everything on a mac + iphone. Currently trying to make it work for Android&lt;/p&gt; &#xA;&lt;h3&gt;Install the app&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo &lt;code&gt;git clone https://github.com/BasedHardware/friend.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Choose which version of the app you want to install (see Structure).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Don&#39;t have the device? run &lt;code&gt;cd AppStandalone&lt;/code&gt; in terminal&lt;/li&gt; &#xA; &lt;li&gt;Have the device/NRF Board? run &lt;code&gt;cd AppWithWearable&lt;/code&gt; in terminal&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://docs.flutter.dev/get-started/install/macos/mobile-ios?tab=download&#34;&gt;Flutter&lt;/a&gt; and &lt;a href=&#34;https://guides.cocoapods.org/using/getting-started.html&#34;&gt;CocoaPods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install your environment variables&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For AppWithWearable, open file api_calls.dart located in &lt;code&gt;AppWithWearable/lib/backend/api_requests &lt;/code&gt; Find &#34;Whisper&#34; and instead of &#34;key&#34;, provide your own api-key for openai whisper for transcriptions to work&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/BasedHardware/Friend/assets/43514161/d0fb89d2-07fd-44e3-8563-68f938bb2319&#34; alt=&#34;CleanShot 2024-03-25 at 21 58 42&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For AppStandalone, update variables in in .env.template file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;iOS: &lt;a href=&#34;https://apps.apple.com/us/app/xcode/id497799835?mt=12&#34;&gt;Install XCode&lt;/a&gt; then navigate to the iOS folder. You might need to launch Xcode to select a team and specify a bundle identifier. Android: Download/install &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;android Studio &lt;/a&gt; then navigate to the Android folder Don&#39;t run in web/simulator: Bluetooth will not work&lt;/li&gt; &#xA; &lt;li&gt;then run &lt;code&gt;flutter clean &lt;/code&gt; then &lt;code&gt;flutter pub get&lt;/code&gt; then &lt;code&gt;pod install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;When everything is installed, run &lt;code&gt;flutter run &lt;/code&gt;, this should run your app on a selected device&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;No-Code Alternative:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Don&#39;t have the device? &lt;a href=&#34;https://app.flutterflow.io/project/friend-0x9u40&#34;&gt;Clone this Flutterflow Project &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Have the wearable device? &lt;a href=&#34;https://app.flutterflow.io/project/friend-share-19bk3d&#34;&gt;Copy this Flutterflow Project&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install Firmware&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.arduino.cc/en/software&#34;&gt;Download Arduino&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;cd src/BluetoothDeviceDriver &lt;/code&gt; in your home repository and Open Arduino .ino file, go to &#34;Settings&#34; and paste these 2 links in additional Boards Manager URLs&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://adafruit.github.io/arduino-board-index/package_adafruit_index.json&#xA;https://files.seeedstudio.com/arduino/package_seeeduino_boards_index.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/BasedHardware/friend/assets/43514161/f08cf422-8d30-4ffa-b61c-0e8ee4a0e685&#34; alt=&#34;IMAGE 2024-03-24 19:44:35&#34;&gt; 3. Go to Boards Manager and download these 2 Boards&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/BasedHardware/friend/assets/43514161/9c85a0c4-ee73-42ba-a75b-3f8fafa81cbe&#34; alt=&#34;IMAGE 2024-03-24 19:46:49&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Connect NRF52840 board via USB cable to your computer&lt;/li&gt; &#xA; &lt;li&gt;Go to Tools &amp;gt; Board &amp;gt; &lt;img src=&#34;https://github.com/BasedHardware/friend/assets/43514161/065e794f-6e20-4f91-a6bf-1b43a5a3614e&#34; alt=&#34;IMAGE 2024-03-24 19:50:42&#34;&gt; and select &#34;Seeed nRF52 mbed-enabled Boards (you need board that has Sense)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Also select Port (should be something that contains USB...) &lt;img src=&#34;https://github.com/BasedHardware/friend/assets/43514161/0719de62-b58f-4ceb-85e2-d288916375c9&#34; alt=&#34;IMAGE 2024-03-24 19:55:07&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Go to Sketch =&amp;gt; Include Library =&amp;gt; Add .zip library and upload a library which you should download &lt;a href=&#34;https://github.com/Seeed-Studio/Seeed_Arduino_Mic&#34;&gt;from here&lt;/a&gt;, make sure you download the &lt;code&gt;Seeed_Arduino_Mic&lt;/code&gt; repository itself as a .zip file and not use the .zip from its releases section.&lt;/li&gt; &#xA; &lt;li&gt;Install Arduino BLE library standard library can be found in Arduino&#39;s menu&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Upload&#34; and then open Serial Monitor to see logs&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;How to test audio receiving on your computer&lt;/strong&gt;: from home directory, go to &#34;src&#34; folder, then in terminal run &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; - this will install all the python modules required to run &lt;code&gt;python local_laptop_client.py&lt;/code&gt; then in terminal run &lt;code&gt;python local_laptop_client.py&lt;/code&gt; - this script will list audio devices and IDs. Copy your device&#39;s ID and paste in same file on this line &lt;code&gt; DEVICE_ID = &#34;564A72F4-4552-8CE8-719D-8D5CB2E5D43D&#34;&lt;/code&gt; (instead of 564A72F4-4552-8CE8-719D-8D5CB2E5D43D) then run the file again with &lt;code&gt;python local_laptop_client.py&lt;/code&gt; (or python3)&lt;/p&gt; &#xA;&lt;h3&gt;Assemble the device&lt;/h3&gt; &#xA;&lt;p&gt;Step 0. Make sure you have bought everything from the buying guide above&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/BasedHardware/Friend/assets/43514161/fdc7f8bd-6205-49a8-aa31-ea4ef6655ba4&#34; width=&#34;300&#34;&gt; &#xA;&lt;p&gt;Step 1: You need to design the case using 3D printer. Find .stl file &lt;a href=&#34;https://github.com/BasedHardware/Friend/raw/main/3d-printing%20designs/Cover%20%2B%20Case.stl&#34;&gt;here&lt;/a&gt;. If you don&#39;t know how to do it, send this file to someone who has a 3d printer&lt;/p&gt; &#xA;&lt;p&gt;Step 2: Solder everything together like on the picture below. using a soldering kit. Don&#39;t have it? buy &lt;a href=&#34;https://a.co/d/0XdthUV&#34;&gt;this one for $9&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/BasedHardware/Friend/assets/43514161/c254668c-1662-412f-8b2c-05a97fb68419&#34; alt=&#34;CleanShot 2024-03-28 at 17 01 53&#34;&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/BasedHardware/Friend/assets/43514161/5fe4cb81-eb64-41c6-b24c-e2da104b465e&#34; width=&#34;300&#34;&gt; &#xA;&lt;p&gt;Step 3: Fit everything in the case. Biggest hole is for the usb port. In my example, I put the battery first, then the board and then the switch, however it&#39;s not an ideal design. If you will figure out a better solution, please contribute!&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/BasedHardware/Friend/assets/43514161/4abae04c-2477-4b9a-a74c-077a463f4c29&#34; width=&#34;300&#34;&gt; &#xA;&lt;p&gt;Step 4: Use hot glue to attach the lid to the case. You can also use a scotch tape first for testing purposes. Last, on the USB-port side, you&#39;ll find 2 small round holes. This is where the thread should go through.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/BasedHardware/Friend/assets/43514161/2ffcfbf4-6637-4bb6-89e5-bd75cf78eebd&#34; width=&#34;200&#34;&gt; &#xA;&lt;p&gt;Congratulations! you now have a fully working and assembled device!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/kEXXsnb5b3&#34;&gt;Join our Discord!&lt;/a&gt; We welcome contributions from the community! If you&#39;re interested in improving Friend, our current biggest goal is to combine both apps together (AppStandalone with AppWithWearable).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Standalone App brings great prompts and rich structure&lt;/li&gt; &#xA; &lt;li&gt;AppWithWearable brings simple bluetooth connecting functionality&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;For open-source support, please open an issue on GitHub and/or ask in our &lt;a href=&#34;https://discord.gg/kEXXsnb5b3&#34;&gt;Discord Community&lt;/a&gt;. For commercial support, license inquiries, or any other questions, please contact us directly at &lt;a href=&#34;mailto:team@whomane.com&#34;&gt;team@whomane.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Please note that the Friend is a prototype project and is provided &#34;as is&#34;, without warranty of any kind. Use of the device should comply with all local laws and regulations concerning privacy and data protection.&lt;/p&gt; &#xA;&lt;p&gt;Thank you for your interest in Friend, the open-source AI wearable. We&#39;re excited to see what you&#39;ll build with it!&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;Friend is available under dual licensing options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;GNU General Public License (GPL)&lt;/strong&gt;: For open-source projects and community development, Friend is available under the GPL. This strong copyleft license ensures that all modifications and derived works are also open-source, fostering a collaborative development environment.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Commercial License&lt;/strong&gt;: For individuals or entities wishing to use Friend in closed-source projects or who require more flexible licensing terms than those offered by the GPL, a commercial license is available. The commercial license permits private modification, use, and distribution, as well as commercial support and warranty.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Choosing Your License&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you wish to contribute to or use Friend in open-source projects, you are free to do so under the terms of the GPL, as detailed in the LICENSE file.&lt;/li&gt; &#xA; &lt;li&gt;If you require a commercial license for your project or enterprise, please contact us at &lt;a href=&#34;mailto:team@whomane.com&#34;&gt;team@whomane.com&lt;/a&gt; to discuss your needs and obtain licensing information.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>DeanLJY/FlutterCart</title>
    <updated>2024-03-29T01:26:56Z</updated>
    <id>tag:github.com,2024-03-29:/DeanLJY/FlutterCart</id>
    <link href="https://github.com/DeanLJY/FlutterCart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ›’Elevate your mobile app with seamless shopping cart functionality! ðŸ“² Keep your cart handy, anytime, anywhere! ðŸ’¼&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FlutterCart: Your Mobile Shopping Companion&lt;/h1&gt; &#xA;&lt;p&gt;FlutterCart is a versatile Flutter package that brings robust shopping cart capabilities to your mobile application. It leverages Hive for local storage, ensuring your shopping cart data is retained across different app sessions.&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Initialization&lt;/strong&gt;: Kickstart the shopping cart with the &lt;code&gt;init()&lt;/code&gt; method.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cart Operations&lt;/strong&gt;: Include items to the cart with &lt;code&gt;addToCart&lt;/code&gt;, and remove them using &lt;code&gt;removeFromCart&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Quantity Control&lt;/strong&gt;: Fine-tune the item quantity with &lt;code&gt;incrementCartItemQuantity&lt;/code&gt; and &lt;code&gt;decrementCartItemQuantity&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Total Price Calculation&lt;/strong&gt;: Fetch the total price of cart items using &lt;code&gt;calculateTotalPrice&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Item Count&lt;/strong&gt;: Retrieve the total number of items with &lt;code&gt;getCartItemCount&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cart Clearance&lt;/strong&gt;: Wipe out all items from the cart with &lt;code&gt;clearCart&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cart Item Display&lt;/strong&gt;: Visualize the cart items with &lt;code&gt;showCartItems&lt;/code&gt;, offering customizable widgets for individual cart items and an empty cart message.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Item Count Widget&lt;/strong&gt;: Display a widget featuring the current cart item count using &lt;code&gt;showCartItemCountWidget&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Total Amount Widget&lt;/strong&gt;: Showcase a widget revealing the total amount of items in the cart with &lt;code&gt;showTotalAmountWidget&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic Cart Item Widget&lt;/strong&gt;: Illustrate a widget that updates based on whether a product is in the cart or not, using &lt;code&gt;showAndUpdateCartItemWidget&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cart Data Retrieval&lt;/strong&gt;: Use &lt;code&gt;getCartData&lt;/code&gt; in the &lt;code&gt;FlutterCart&lt;/code&gt; class to fetch a list of cart items and the total price.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Get Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Incorporate the package in your Dart file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter_cart/flutter_cart.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Set the ball rolling by initializing the cart:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;await FlutterCart().init();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;You&#39;re all set to harness the shopping cart features in your application!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Add products to the cart&#xA;await FlutterCart().addToCart(FlutterCartItem());&#xA;&#xA;// Eliminate a product from the cart&#xA;await FlutterCart().removeFromCart(productId);&#xA;&#xA;// Increase the product quantity in the cart&#xA;await FlutterCart().incrementCartItemQuantity(productId);&#xA;&#xA;// Reduce the product quantity in the cart&#xA;await FlutterCart().decrementCartItemQuantity(productId);&#xA;&#xA;// Fetch the total price of cart items&#xA;double totalPrice = FlutterCart().calculateTotalPrice();&#xA;&#xA;// Get the total quantity of cart items&#xA;int itemCount = FlutterCart().getCartItemCount();&#xA;&#xA;// Empty the cart&#xA;FlutterCart().clearCart();&#xA;&#xA;// Fetch cart data and total price&#xA;Map&amp;lt;String, dynamic&amp;gt; cartData = FlutterCart().getCartData();&#xA;List&amp;lt;FlutterCartItem&amp;gt; cartItems = cartData[&#39;cartItems&#39;];&#xA;double totalPriceFromData = cartData[&#39;totalPrice&#39;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Widgets&lt;/h2&gt; &#xA;&lt;h3&gt;Cart Item Display&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FlutterCart().showCartItems(&#xA;  cartTileWidget: ({required FlutterCartItem data}) {&#xA;    // Your personalized cart item widget&#xA;  },&#xA;  showEmptyCartMsgWidget: YourEmptyCartMessageWidget(),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cart Item Count Widget&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FlutterCart().showCartItemCountWidget(&#xA;  cartItemCountWidgetBuilder: (int itemCount) {&#xA;    // Your personalized widget displaying the cart item count&#xA;  },&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Total Amount Widget&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FlutterCart().showTotalAmountWidget(&#xA;  cartTotalAmountWidgetBuilder: (double totalAmount) {&#xA;    // Your personalized widget displaying the total amount&#xA;  },&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dynamic Cart Item Widget&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FlutterCart().showAndUpdateCartItemWidget(&#xA;  inCartWidget: YourInCartWidget(),&#xA;  notInCartWidget: YourNotInCartWidget(),&#xA;  product: yourProduct,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&#34;Simplify your mobile shopping experience with FlutterCart!&#34;&lt;/p&gt;</summary>
  </entry>
</feed>