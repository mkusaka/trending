<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-04T01:35:24Z</updated>
  <subtitle>Daily Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>2d-inc/HistoryOfEverything</title>
    <updated>2022-09-04T01:35:24Z</updated>
    <id>tag:github.com,2022-09-04:/2d-inc/HistoryOfEverything</id>
    <link href="https://github.com/2d-inc/HistoryOfEverything" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter Launch Timeline Demo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The History of Everything&lt;/h1&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://cdn.2dimensions.com/1_Start.gif&#34; height=&#34;400&#34;&gt; &#xA;&lt;p&gt;The History of Everything is a vertical timeline that allows you to navigate, explore, and compare events from the Big Bang to the birth of the Internet. Events are beautifully illustrated and animated.&lt;/p&gt; &#xA;&lt;p&gt;The concept for this app was inspired by the Kurzgesagt video, &lt;a href=&#34;https://www.youtube.com/watch?v=5TbUxGZtwGI&#34;&gt;Time: The History &amp;amp; Future of Everything&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The app was built with &lt;a href=&#34;https://flutter.io/&#34;&gt;Flutter&lt;/a&gt; by &lt;a href=&#34;https://www.2dimensions.com&#34;&gt;2Dimensions&lt;/a&gt; and it&#39;s available on &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.twodimensions.timeline&#34;&gt;Android&lt;/a&gt; and &lt;a href=&#34;https://itunes.apple.com/us/app/the-history-of-everything/id1441257460&#34;&gt;iOS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you have Flutter installed on your local machine. For more instructions on how to install flutter, look &lt;a href=&#34;https://flutter.io/docs/get-started/install&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/2d-inc/HistoryOfEverything.git&#xA;cd HistoryOfEverything/app&#xA;git submodule init&#xA;git submodule update&#xA;flutter run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://cdn.2dimensions.com/2_Scroll.gif&#34; height=&#34;400&#34;&gt; &#xA;&lt;p&gt;The app consists of three main views:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Main Menu&lt;/strong&gt; - /app/lib/main_menu&lt;br&gt; This is the initial view for the app when it opens up. It shows a search bar on top, three menu sections for each major time era, and three buttons on the bottom for accessing favorites, sharing a link to the store, and the about page.&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Timeline&lt;/strong&gt; - /app/lib/timeline&lt;br&gt; This view is displayed when an item from the menu is selected: the user is presented with a vertical timeline. It can be scrolled up and down, zoomed in and out. &lt;br&gt; When an event is in view, a bubble will be shown on screen with a custom animated widget right next to it. By tapping on either, the user can access the ArticlePage.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ArticlePage&lt;/strong&gt; - /app/lib/article&lt;br&gt; The ArticlePage displays the event animation, together with a full description of the event.&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Animated Widgets&lt;/h2&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://cdn.2dimensions.com/3_Amelia.gif&#34; height=&#34;400&#34;&gt; &#xA;&lt;p&gt;This relies heavily on the animations built on &lt;a href=&#34;https://www.2dimensions.com&#34;&gt;2dimensions&lt;/a&gt; and they are seamlessly integrated with Flutter by using the &lt;a href=&#34;https://pub.dartlang.org/packages/flare_flutter&#34;&gt;Flare&lt;/a&gt; and &lt;a href=&#34;https://pub.dartlang.org/packages/nima&#34;&gt;Nima&lt;/a&gt; libraries.&lt;/p&gt; &#xA;&lt;p&gt;One of Flutter&#39;s biggest strengths is its flexibility, because it exposes the architecture of its components, which can be built entirely from scratch: it&#39;s possible to create custom widgets out of the SDK&#39;s most basic elements.&lt;/p&gt; &#xA;&lt;p&gt;An example can be found in /app/lib/article/timeline_entry_widget.dart &lt;br&gt; This file contains two classes:&lt;br&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;TimelineEntryWidget&lt;/code&gt; that extends &lt;code&gt;LeafRenderObjectWidget&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;VignetteRenderObject that extends &lt;code&gt;RenderBox&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;LeafRenderObjectWidget&lt;/h2&gt; &#xA;&lt;p&gt;This class (&lt;a href=&#34;https://docs.flutter.io/flutter/widgets/LeafRenderObjectWidget-class.html&#34;&gt;docs&lt;/a&gt;) is a &lt;code&gt;Widget&lt;/code&gt;: it can be inserted in any widget tree without any other default component:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Container(&#xA;  child: TimelineEntryWidget(&#xA;        isActive: true,&#xA;        timelineEntry: widget.article,&#xA;        interactOffset: _interactOffset&#xA;    )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This snippet is used in /app/lib/article/article_widget.dart&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;LeafRenderObjectWidget&lt;/code&gt; is responsible for having a constructor and encapsulating the values that the &lt;code&gt;RenderObject&lt;/code&gt; needs.&lt;/p&gt; &#xA;&lt;p&gt;The following two overrides are also fundamental:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;createRenderObject()&lt;/code&gt; &lt;br&gt; Instantiates the actual &lt;code&gt;RenderObject&lt;/code&gt; in the Widget Tree;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;updateRenderObject()&lt;/code&gt; &lt;br&gt; Any change to the parameters that are passed to the Widget can be reflected also on the UI, if needed. Updating a &lt;code&gt;RenderObject&lt;/code&gt; will cause the object to redraw.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;RenderObject&lt;/h2&gt; &#xA;&lt;p&gt;As specified in the &lt;a href=&#34;https://docs.flutter.io/flutter/rendering/RenderObject-class.html&#34;&gt;docs&lt;/a&gt;, this is an object in the render tree, and it defines what and how its creator Widget will paint on the screen.&lt;/p&gt; &#xA;&lt;p&gt;The key override here is &lt;code&gt;paint()&lt;/code&gt;:&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;the current &lt;code&gt;PaintingContext&lt;/code&gt; exposes the &lt;code&gt;canvas&lt;/code&gt;, and this class can draw, taking full advantage of the exposed API. &lt;br&gt; The &lt;a href=&#34;https://pub.dartlang.org/packages/flare_flutter&#34;&gt;Flare library&lt;/a&gt;, granted access to the &lt;code&gt;canvas&lt;/code&gt;, draws the animation.&lt;br&gt; To have the animation reproduce correctly, it&#39;s also necessary to call &lt;code&gt;advance(elapsed)&lt;/code&gt; on the current &lt;code&gt;FlutterActor&lt;/code&gt; each frame. Moreover, the current &lt;code&gt;ActorAnimation&lt;/code&gt; requires that the function &lt;code&gt;apply(time)&lt;/code&gt; is called on it to display it&#39;s correct interpolated values.&lt;br&gt; This is all made possible by relying on Flutter&#39;s &lt;code&gt;SchedulerBinding.scheduleFrameCallback()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is just a brief overview of how the Flare widgets can be customized for every experience.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;All the animations in the &lt;code&gt;/assets&lt;/code&gt; folder are distributed under the &lt;strong&gt;CC-BY&lt;/strong&gt; license.&lt;/p&gt; &#xA;&lt;p&gt;All the articles in &lt;code&gt;assets/articles&lt;/code&gt; are from &lt;a href=&#34;https://www.wikipedia.org/&#34;&gt;Wikipedia&lt;/a&gt;, and are thus distributed under the &lt;strong&gt;GNU Free Documentation License&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The rest of the repository&#39;s code and contents are distributed under the &lt;strong&gt;MIT&lt;/strong&gt; license as specified in &lt;a href=&#34;https://raw.githubusercontent.com/2d-inc/HistoryOfEverything/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>