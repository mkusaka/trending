<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-28T01:44:24Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sarbagyastha/youtube_player_flutter</title>
    <updated>2022-08-28T01:44:24Z</updated>
    <id>tag:github.com,2022-08-28:/sarbagyastha/youtube_player_flutter</id>
    <link href="https://github.com/sarbagyastha/youtube_player_flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter plugin for playing or streaming YouTube videos inline using the official iFrame Player API. Supports both Android and iOS platforms.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Youtube Player IFrame&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sarbagyastha/youtube_player_flutter/master/packages/youtube_player_flutter/misc/ypf_banner.png&#34; alt=&#34;YOUTUBE PLAYER IFRAME&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/youtube_player_iframe&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/youtube_player_iframe.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sarbagyastha/youtube_player_flutter/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/licence-BSD-orange.svg?sanitize=true&#34; alt=&#34;licence&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sarbagyastha/youtube_player_flutter/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-APK-informational.svg?sanitize=true&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sarbagyastha/youtube_player_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/sarbagyastha/youtube_player_flutter?color=deeppink&#34; alt=&#34;Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sarbagyastha/youtube_player_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/top/sarbagyastha/youtube_player_flutter?color=9cf&#34; alt=&#34;Top Language&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dart.dev/guides/language/effective-dart&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-effective_dart-40c4ff.svg?sanitize=true&#34; alt=&#34;effective dart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sarbagyastha.github.io/youtube_player_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Web-DEMO-informational.svg?sanitize=true&#34; alt=&#34;Web DEMO&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flutter plugin for playing or streaming YouTube videos inline using the official &lt;a href=&#34;https://developers.google.com/youtube/iframe_api_reference&#34;&gt;&lt;strong&gt;iFrame Player API&lt;/strong&gt;&lt;/a&gt;. The package exposes almost all the API provided by &lt;strong&gt;iFrame Player API&lt;/strong&gt;. So, it&#39;s 100% customizable.&lt;/p&gt; &#xA;&lt;p&gt;Note: This package only provides default youtube web player&#39;s skin. If you need Youtube Android player like player with gesture support, use &lt;a href=&#34;https://pub.dartlang.org/packages/youtube_player_flutter&#34;&gt;youtube_player_flutter&lt;/a&gt; instead. &lt;code&gt;youtube_player_flutter&lt;/code&gt; also uses this package as dependency. (Migration Pending)&lt;/p&gt; &#xA;&lt;p&gt;Supported Platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;iOS&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sarbagyastha/youtube_player_flutter/master/youtube_player_iframe.png&#34; alt=&#34;YOUTUBE PLAYER IFRAME&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sarbagyastha.github.io/youtube_player_flutter&#34;&gt;Click here for WEB DEMO&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Salient Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Inline Playback&lt;/li&gt; &#xA; &lt;li&gt;Supports captions&lt;/li&gt; &#xA; &lt;li&gt;No need for API Key&lt;/li&gt; &#xA; &lt;li&gt;Supports custom controls&lt;/li&gt; &#xA; &lt;li&gt;Retrieves video meta data&lt;/li&gt; &#xA; &lt;li&gt;Supports Live Stream videos&lt;/li&gt; &#xA; &lt;li&gt;Supports changing playback rate&lt;/li&gt; &#xA; &lt;li&gt;Support for both Android and iOS&lt;/li&gt; &#xA; &lt;li&gt;Adapts to quality as per the bandwidth&lt;/li&gt; &#xA; &lt;li&gt;Exposes builders for building custom controls&lt;/li&gt; &#xA; &lt;li&gt;Playlist Support (Both custom and Youtube&#39;s playlist)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For Web, Flutter&#39;s &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/HtmlElementView-class.html&#34;&gt;HtmlElementView&lt;/a&gt;. For Android &amp;amp; iOS, the package uses &lt;a href=&#34;https://pub.dartlang.org/packages/flutter_inappwebview&#34;&gt;flutter_inappwebview&lt;/a&gt; under-the-hood.&lt;/p&gt; &#xA;&lt;p&gt;If your app uses services workers, you may need add additional configuration on the app startup code, in order to ensure that the web view behaviour don&#39;t get unstable. To do so, please refer to the &lt;a href=&#34;https://inappwebview.dev/docs/service-worker-api/&#34;&gt;flutter_inappwebview documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Since &lt;em&gt;flutter_inappwebview&lt;/em&gt; relies on Flutter&#39;s mechanism for embedding Android and iOS views, this plugin might share some known issues tagged with the &lt;a href=&#34;https://github.com/flutter/flutter/labels/a%3A%20platform-views&#34;&gt;platform-views&lt;/a&gt; label.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt;: &lt;code&gt;minSdkVersion 17&lt;/code&gt; and add support for &lt;code&gt;androidx&lt;/code&gt; (see &lt;a href=&#34;https://flutter.dev/docs/development/androidx-migration&#34;&gt;AndroidX Migration&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;iOS&lt;/strong&gt;: &lt;code&gt;--ios-language swift&lt;/code&gt;, Xcode version &lt;code&gt;&amp;gt;= 11&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web&lt;/strong&gt;: None&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;p&gt;No Configuration Required.&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;p&gt;No Configuration Required.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_inappwebview#important-note-for-ios&#34;&gt;Follow the guide here for complete iOS setup&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;Set &lt;code&gt;minSdkVersion&lt;/code&gt; of your &lt;code&gt;android/app/build.gradle&lt;/code&gt; file to at least 17.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_inappwebview#important-note-for-android&#34;&gt;Follow the guide here for complete Android setup&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Although the minimum to be set is 17, the player won&#39;t play on device with API &amp;lt; 20 (19 if Hybrid Composition is enabled). For API &amp;lt; 20 devices, you might want to forward the video to be played using YouTube app instead, using packages like &lt;code&gt;url_launcher&lt;/code&gt; or &lt;code&gt;android_intent&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Using the player&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;YoutubePlayerController _controller = YoutubePlayerController(&#xA;    initialVideoId: &#39;K18cpp_-gP8&#39;,&#xA;    params: YoutubePlayerParams(&#xA;        playlist: [&#39;nPt8bK2gbaU&#39;, &#39;gQDByCdjUXw&#39;], // Defining custom playlist&#xA;        startAt: Duration(seconds: 30),&#xA;        showControls: true,&#xA;        showFullscreenButton: true,&#xA;    ),&#xA;);&#xA;&#xA;YoutubePlayerIFrame(&#xA;    controller: _controller,&#xA;    aspectRatio: 16 / 9,&#xA;),&#xA;&#xA;-------------- OR --------------&#xA;&#xA;YoutubePlayerControllerProvider( // Provides controller to all the widget below it.&#xA;  controller: _controller,&#xA;  child: YoutubePlayerIFrame(&#xA;    aspectRatio: 16 / 9,&#xA;  ),&#xA;);&#xA;&#xA;// Access the controller as: `YoutubePlayerControllerProvider.of(context)` or `controller.ytController`.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Want to customize the player?&lt;/h2&gt; &#xA;&lt;p&gt;The package provides &lt;code&gt;YoutubeValueBuilder&lt;/code&gt;, which can be used to create any custom controls.&lt;/p&gt; &#xA;&lt;p&gt;For example, let&#39;s create a custom play pause button.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;YoutubeValueBuilder(&#xA;   controller: _controller, // This can be omitted, if using `YoutubePlayerControllerProvider`&#xA;   builder: (context, value) {&#xA;      return IconButton(&#xA;         icon: Icon( &#xA;                  value.playerState == PlayerState.playing&#xA;                    ? Icons.pause&#xA;                    : Icons.play_arrow,&#xA;         ),&#xA;         onPressed: () {&#xA;          value.playerState == PlayerState.playing&#xA;            ? context.ytController.pause()&#xA;            : context.ytController.play();&#xA;         },&#xA;      );&#xA;   },&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Available Methods&lt;/h2&gt; &#xA;&lt;p&gt;Methods available for &lt;code&gt;YoutubePlayerController&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;play()&lt;/td&gt; &#xA;   &lt;td&gt;Plays the currently cued/loaded video.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pause()&lt;/td&gt; &#xA;   &lt;td&gt;Pauses the currently playing video.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stop()&lt;/td&gt; &#xA;   &lt;td&gt;Stops and cancels loading of the current video.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nextVideo()&lt;/td&gt; &#xA;   &lt;td&gt;Loads and plays the next video in the playlist.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;previousVideo()&lt;/td&gt; &#xA;   &lt;td&gt;Loads and plays the previous video in the playlist.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;playVideoAt(index)&lt;/td&gt; &#xA;   &lt;td&gt;Loads and plays the specified video in the playlist.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;load(videoId, {startAt, endAt})&lt;/td&gt; &#xA;   &lt;td&gt;Loads and plays the specified video.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cue(videoId, {startAt, endAt})&lt;/td&gt; &#xA;   &lt;td&gt;Loads the specified video&#39;s thumbnail and prepares the player to play the video.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;loadPlaylist(list, {listType, startAt, index})&lt;/td&gt; &#xA;   &lt;td&gt;Loads the specified list and plays it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cuePlaylist(list, {listType, startAt, index})&lt;/td&gt; &#xA;   &lt;td&gt;Queues the specified list of videos.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mute()&lt;/td&gt; &#xA;   &lt;td&gt;Mutes the player.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;unMute()&lt;/td&gt; &#xA;   &lt;td&gt;Unmutes the player.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;setVolume(volume)&lt;/td&gt; &#xA;   &lt;td&gt;Sets the volume of player.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;seekTo(position, {allowSeekAhead})&lt;/td&gt; &#xA;   &lt;td&gt;Seeks to a specified time in the video.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;setSize(size)&lt;/td&gt; &#xA;   &lt;td&gt;Sets the size in pixels of the player.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;setPlaybackRate(rate)&lt;/td&gt; &#xA;   &lt;td&gt;Sets the playback speed for the video.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;setLoop(loop)&lt;/td&gt; &#xA;   &lt;td&gt;Enables or disables looping.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;setShuffle(shuffle)&lt;/td&gt; &#xA;   &lt;td&gt;Enables or disables shuffling playlist.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reset()&lt;/td&gt; &#xA;   &lt;td&gt;Resets the controller.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;convertUrlToId(url, {trimWhiteSpaces})&lt;/td&gt; &#xA;   &lt;td&gt;Converts fully qualified YouTube Url to video id.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;getThumbnail(videoId, {quality, webp})&lt;/td&gt; &#xA;   &lt;td&gt;Grabs YouTube video&#39;s thumbnail for provided video id.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onEnterFullScreen()&lt;/td&gt; &#xA;   &lt;td&gt;Called when player enters fullscreen.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onExitFullScreen()&lt;/td&gt; &#xA;   &lt;td&gt;Called when player exits fullscreen.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;invokeJavascript(function)&lt;/td&gt; &#xA;   &lt;td&gt;Invoke custom javascript function.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hideTopMenu()&lt;/td&gt; &#xA;   &lt;td&gt;Hides the title and share icons at the top of player (&lt;em&gt;May violate YouTube&#39;s TOS. Use at your own risk.&lt;/em&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hidePauseOverlay()&lt;/td&gt; &#xA;   &lt;td&gt;Hides the related videos overlay while player is paused (&lt;em&gt;May violate YouTube&#39;s TOS. Use at your own risk.&lt;/em&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Youtube Player Parameters&lt;/h2&gt; &#xA;&lt;p&gt;All the available parameters.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;autoPlay&lt;/td&gt; &#xA;   &lt;td&gt;Specifies whether the initial video will automatically start to play when the player loads. &lt;strong&gt;Default = true&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mute&lt;/td&gt; &#xA;   &lt;td&gt;Mutes the player. &lt;strong&gt;Default = false&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;captionLanguage&lt;/td&gt; &#xA;   &lt;td&gt;Caption language. &lt;strong&gt;Default = &#39;en&#39;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;enableCaption&lt;/td&gt; &#xA;   &lt;td&gt;Enables caption by default. &lt;strong&gt;Default = true&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;color&lt;/td&gt; &#xA;   &lt;td&gt;Specifies the color that will be used in the player&#39;s video progress bar to highlight the amount of the video that the viewer has already seen. &lt;strong&gt;Default = red&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;showControls&lt;/td&gt; &#xA;   &lt;td&gt;Indicates whether the video player controls are displayed. &lt;strong&gt;Default = true&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;enableKeyboard&lt;/td&gt; &#xA;   &lt;td&gt;Enables or disables the player to respond to keyboard controls. &lt;strong&gt;Default = false&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;enableJavaScript&lt;/td&gt; &#xA;   &lt;td&gt;Enables or disables the player to be controlled via IFrame or JavaScript Player API calls. &lt;strong&gt;Default = true&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;endAt&lt;/td&gt; &#xA;   &lt;td&gt;Ends the playback in specified time.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;showFullscreenButton&lt;/td&gt; &#xA;   &lt;td&gt;Shows or hides the fullscreen button from displaying in the player. &lt;strong&gt;Default = false&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;interfaceLanguage&lt;/td&gt; &#xA;   &lt;td&gt;Sets the player&#39;s interface language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;showVideoAnnotations&lt;/td&gt; &#xA;   &lt;td&gt;Enables or disables video annotations to be shown by default. &lt;strong&gt;Default = true&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;loop&lt;/td&gt; &#xA;   &lt;td&gt;Enables or disables the player to play the initial video again and again. &lt;strong&gt;Default = true&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;playlist&lt;/td&gt; &#xA;   &lt;td&gt;Specifies a list of video IDs to be played after initialVideoId.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;playsInline&lt;/td&gt; &#xA;   &lt;td&gt;Controls whether videos play inline or fullscreen in an HTML5 player on iOS. &lt;strong&gt;Default = true&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;strictRelatedVideos&lt;/td&gt; &#xA;   &lt;td&gt;Enabling ensure that related videos will come from the same channel as the video that was just played. &lt;strong&gt;Default = false&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;startAt&lt;/td&gt; &#xA;   &lt;td&gt;Starts the video at specified time.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;desktopMode&lt;/td&gt; &#xA;   &lt;td&gt;The controls will be alike Youtube Desktop&#39;s controls.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;useHybridComposition&lt;/td&gt; &#xA;   &lt;td&gt;Enable &lt;a href=&#34;https://github.com/flutter/flutter/wiki/Hybrid-Composition&#34;&gt;Hybrid Composition&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Limitation&lt;/h2&gt; &#xA;&lt;p&gt;For Android: Since the plugin is based on platform views. This plugin requires Android API level 19 or greater.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2021 Sarbagya Dhaubanjar. All rights reserved.&#xA;&#xA;Redistribution and use in source and binary forms, with or without modification,&#xA;are permitted provided that the following conditions are met:&#xA;&#xA;    * Redistributions of source code must retain the above copyright&#xA;      notice, this list of conditions and the following disclaimer.&#xA;    * Redistributions in binary form must reproduce the above&#xA;      copyright notice, this list of conditions and the following&#xA;      disclaimer in the documentation and/or other materials provided&#xA;      with the distribution.&#xA;&#xA;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &#34;AS IS&#34; AND&#xA;ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED&#xA;WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&#xA;DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR&#xA;ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#xA;(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;&#xA;LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON&#xA;ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT&#xA;(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#xA;SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>firebase/flutterfire</title>
    <updated>2022-08-28T01:44:24Z</updated>
    <id>tag:github.com,2022-08-28:/firebase/flutterfire</id>
    <link href="https://github.com/firebase/flutterfire" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥 A collection of Firebase plugins for Flutter apps.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://firebase.google.com/docs/flutter&#34;&gt; &lt;img width=&#34;250px&#34; src=&#34;https://raw.githubusercontent.com/firebase/flutterfire/master/.github/images/flutterfire_300x.png&#34; alt=&#34;Flutter + Firebase logo&#34;&gt;&lt;br&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;FlutterFire&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://twitter.com/flutterfiredev&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/flutterfiredev.svg?colorA=1da1f2&amp;amp;colorB=&amp;amp;label=Follow%20on%20Twitter&amp;amp;style=flat-square&#34; alt=&#34;Follow on Twitter&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/invertase/melos&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/maintained%20with-melos-f700ff.svg?style=flat-square&#34; alt=&#34;Maintained with Melos&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/flutterfire/master/CHANGELOG.md&#34;&gt;[Changelog]&lt;/a&gt; • &lt;a href=&#34;https://pub.dev/publishers/firebase.google.com/packages&#34;&gt;[Packages]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;FlutterFire is a set of &lt;a href=&#34;https://flutter.io/platform-plugins/&#34;&gt;Flutter plugins&lt;/a&gt; that enable Flutter apps to use &lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt; services. You can follow an example that shows how to use these plugins in the &lt;a href=&#34;https://firebase.google.com/codelabs/firebase-get-to-know-flutter&#34;&gt;Firebase for Flutter&lt;/a&gt; codelab.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt; is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. Flutter is used by developers and organizations around the world, and is free and open source.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/flutter/setup&#34;&gt;Add Firebase to your Flutter app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/flutter/setup#available-plugins&#34;&gt;Available plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/flutterfire/master/packages/flutterfire_ui/README.md&#34;&gt;FlutterFire UI&lt;/a&gt; (beta)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/flutterfire/master/packages/cloud_firestore_odm/README.md&#34;&gt;Firestore ODM&lt;/a&gt; (alpha)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please file FlutterFire specific issues, bugs, or feature requests in our &lt;a href=&#34;https://github.com/firebase/flutterfire/issues/new/choose&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Plugin issues that are not specific to FlutterFire can be filed in the &lt;a href=&#34;https://github.com/flutter/flutter/issues/new&#34;&gt;Flutter issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute a change to any of the existing plugins in this repo, please review our &lt;a href=&#34;https://github.com/firebase/flutterfire/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; and open a &lt;a href=&#34;https://github.com/firebase/flutterfire/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flame-engine/flame</title>
    <updated>2022-08-28T01:44:24Z</updated>
    <id>tag:github.com,2022-08-28:/flame-engine/flame</id>
    <link href="https://github.com/flame-engine/flame" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter based game engine&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt; &lt;img alt=&#34;flame&#34; width=&#34;200px&#34; src=&#34;https://user-images.githubusercontent.com/6718144/101553774-3bc7b000-39ad-11eb-8a6a-de2daa31bd64.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A Flutter-based game engine. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Pub&#34; href=&#34;https://pub.dev/packages/flame&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flame.svg?style=popout&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/flame-engine/flame/workflows/cicd/badge.svg?branch=main&amp;amp;event=push&#34; alt=&#34;Test&#34;&gt; &lt;a title=&#34;Discord&#34; href=&#34;https://discord.gg/pxrBmy4&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/509714518008528896.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Melos&#34; href=&#34;https://github.com/invertase/melos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20with-melos-f700ff.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-ZH.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-PL.md&#34;&gt;Polski&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-RU.md&#34;&gt;Русский&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-ES.md&#34;&gt;Español&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-JA.md&#34;&gt;日本語&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The full documentation for Flame can be found on &lt;a href=&#34;https://docs.flame-engine.org/&#34;&gt;docs.flame-engine.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To change the version of the documentation, use the version selector noted with &lt;code&gt;version:&lt;/code&gt; in the top of the page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The documentation that resides in the main branch is newer than the released documentation on the docs website.&lt;/p&gt; &#xA;&lt;p&gt;Other useful links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flame-engine.org/&#34;&gt;The official Flame site&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://examples.flame-engine.org/&#34;&gt;Examples&lt;/a&gt; of most features which can be tried out from your browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tutorials.flame-engine.org/&#34;&gt;Tutorials&lt;/a&gt; - A simple tutorial to get started.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/flame/latest/&#34;&gt;API Reference&lt;/a&gt; - The generated dartdoc API reference.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;There is a Flame community on &lt;a href=&#34;https://discord.gg/5unKpdQD78&#34;&gt;Blue Fire&#39;s Discord server&lt;/a&gt; where you can ask any of your Flame related questions.&lt;/p&gt; &#xA;&lt;p&gt;If you are more comfortable with StackOverflow, you can also create a question there. Add the &lt;a href=&#34;https://stackoverflow.com/questions/tagged/flame&#34;&gt;Flame tag&lt;/a&gt;, so that anyone following the tag can help out.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The goal of the Flame Engine is to provide a complete set of out-of-the-way solutions for common problems that games developed with Flutter might share.&lt;/p&gt; &#xA;&lt;p&gt;Some of the key features provided are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A game loop.&lt;/li&gt; &#xA; &lt;li&gt;A component/object system (FCS).&lt;/li&gt; &#xA; &lt;li&gt;Effects and particles.&lt;/li&gt; &#xA; &lt;li&gt;Collision detection.&lt;/li&gt; &#xA; &lt;li&gt;Gesture and input handling.&lt;/li&gt; &#xA; &lt;li&gt;Images, animations, sprites, and sprite sheets.&lt;/li&gt; &#xA; &lt;li&gt;General utilities to make development easier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On top of those features, you can augment Flame with bridge packages. Through these libraries, you will be able to access bindings to other packages, including custom Flame components and helpers, in order to make integrations seamless.&lt;/p&gt; &#xA;&lt;p&gt;Flame officially provides bridge libraries to the following packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_audio&#34;&gt;flame_audio&lt;/a&gt; for &lt;a href=&#34;https://github.com/bluefireteam/audioplayers&#34;&gt;AudioPlayers&lt;/a&gt;: Play multiple audio files simultaneously.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_bloc&#34;&gt;flame_bloc&lt;/a&gt; for &lt;a href=&#34;https://github.com/felangel/bloc&#34;&gt;Bloc&lt;/a&gt;: A predictable state management library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_fire_atlas&#34;&gt;flame_fire_atlas&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/fire-atlas&#34;&gt;FireAtlas&lt;/a&gt;: Create texture atlases for games.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_forge2d&#34;&gt;flame_forge2d&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/forge2d&#34;&gt;Forge2D&lt;/a&gt;: A Box2D physics engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_lint&#34;&gt;flame_lint&lt;/a&gt; - Our set of linting (&lt;code&gt;analysis_options.yaml&lt;/code&gt;) rules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_oxygen&#34;&gt;flame_oxygen&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/oxygen&#34;&gt;Oxygen&lt;/a&gt;: A lightweight Entity Component System (ECS) framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_rive&#34;&gt;flame_rive&lt;/a&gt; for &lt;a href=&#34;https://rive.app/&#34;&gt;Rive&lt;/a&gt;: Create interactive animations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_svg&#34;&gt;flame_svg&lt;/a&gt; for &lt;a href=&#34;https://github.com/dnfield/flutter_svg&#34;&gt;flutter_svg&lt;/a&gt;: Draw SVG files in Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_tiled&#34;&gt;flame_tiled&lt;/a&gt; for &lt;a href=&#34;https://www.mapeditor.org/&#34;&gt;Tiled&lt;/a&gt;: 2D tile map level editor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;The Flame Engine&#39;s top sponsors:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://verygood.ventures/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/media/unicorn_two_toned.png&#34; alt=&#34;Very Good Ventures&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cypherstack.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/media/logo_cypherstack.png&#34; alt=&#34;Cypher Stack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to sponsor Flame? Check our Patreon on the section below, or contact us on Discord.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to show us your support is by giving the project a star.&lt;/p&gt; &#xA;&lt;p&gt;You can also support us by becoming a patron on Patreon:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/bluefireoss&#34;&gt;&lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button.png&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or by making a single donation by buying us a coffee:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/bluefire&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/835641/60540201-fcd7fa00-9ce4-11e9-87ec-1e98568e9f58.png&#34; alt=&#34;Buy Me A Coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also show on your repository that your game is made with Flame by using one of the following badges:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?sanitize=true&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?style=flat-square&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?style=for-the-badge&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg)](https://flame-engine.org)&#xA;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg?style=flat-square)](https://flame-engine.org)&#xA;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg?style=for-the-badge)](https://flame-engine.org)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Have you found a bug or have a suggestion of how to enhance Flame? Open an issue and we will take a look at it as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;Do you want to contribute with a PR? PRs are always welcome, just make sure to create it from the correct branch (main) and follow the &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/.github/pull_request_template.md&#34;&gt;checklist&lt;/a&gt; which will appear when you open the PR.&lt;/p&gt; &#xA;&lt;p&gt;For bigger changes, or if in doubt, make sure to talk about your contribution to the team. Either via an issue, GitHub discussion, or reach out to the team either using the &lt;a href=&#34;https://discord.gg/pxrBmy4&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;A simple tutorial to get started can be found on &lt;a href=&#34;https://tutorials.flame-engine.org&#34;&gt;tutorials.flame-engine.org&lt;/a&gt; and examples of most features in Flame can be found on &lt;a href=&#34;https://examples.flame-engine.org&#34;&gt;examples.flame-engine.org&lt;/a&gt;. To access the code for each example, press the &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt; button in the top right corner.&lt;/p&gt; &#xA;&lt;h3&gt;Highlighted community tutorials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;@Devowl&#39;s Flutter &amp;amp; Flame series:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-flame-step-1-create-your-game-b3b6ee387d77&#34;&gt;Step 1: Create your game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-flame-step-2-game-basics-48b4493424f3&#34;&gt;Step 2: Game basics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-3-sprites-and-inputs-7ca9cc7c8b91&#34;&gt;Step 3: Sprites and inputs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-4-collisions-viewport-ff2da048e3a6&#34;&gt;Step 4: Collisions &amp;amp; Viewport&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-5-level-generation-camera-62a060a286e3&#34;&gt;Step 5: Level generation &amp;amp; camera&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Other tutorials:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;@Vguzzi&#39;s article &lt;a href=&#34;https://www.raywenderlich.com/27407121-building-games-in-flutter-with-flame-getting-started&#34;&gt;Building Games in Flutter with Flame&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;@DevKage&#39;s YouTube series with the &lt;a href=&#34;https://www.youtube.com/playlist?list=PLiZZKL9HLmWOmQgYxWHuOHOWsUUlhCCOY&#34;&gt;Dino run tutorial&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We offer a curated list of Games, Libraries and Articles over at &lt;a href=&#34;https://github.com/flame-engine/awesome-flame&#34;&gt;awesome-flame&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that some of the articles might be slightly outdated, but can still be useful.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/orgs/bluefireteam/people&#34;&gt;Blue Fire team&lt;/a&gt;, who are continuously working on maintaining and improving Flame and its ecosystem.&lt;/li&gt; &#xA; &lt;li&gt;All the friendly contributors and people who are helping in the community.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>