<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-03T01:47:28Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>aleksanderwozniak/table_calendar</title>
    <updated>2023-12-03T01:47:28Z</updated>
    <id>tag:github.com,2023-12-03:/aleksanderwozniak/table_calendar</id>
    <link href="https://github.com/aleksanderwozniak/table_calendar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Highly customizable, feature-packed calendar widget for Flutter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TableCalendar&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/table_calendar&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/table_calendar.svg?style=flat-square&#34; alt=&#34;Pub Package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Solido/awesome-flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Awesome-Flutter-52bdeb.svg?longCache=true&amp;amp;style=flat-square&#34; alt=&#34;Awesome Flutter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Highly customizable, feature-packed calendar widget for Flutter.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aleksanderwozniak/table_calendar/assets/table_calendar_styles.gif&#34; alt=&#34;Image&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aleksanderwozniak/table_calendar/assets/table_calendar_builders.gif&#34; alt=&#34;Image&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;TableCalendar&lt;/strong&gt; with custom styles&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;TableCalendar&lt;/strong&gt; with custom builders&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extensive, yet easy to use API&lt;/li&gt; &#xA; &lt;li&gt;Preconfigured UI with customizable styling&lt;/li&gt; &#xA; &lt;li&gt;Custom selective builders for unlimited UI design&lt;/li&gt; &#xA; &lt;li&gt;Locale support&lt;/li&gt; &#xA; &lt;li&gt;Range selection support&lt;/li&gt; &#xA; &lt;li&gt;Multiple selection support&lt;/li&gt; &#xA; &lt;li&gt;Dynamic events and holidays&lt;/li&gt; &#xA; &lt;li&gt;Vertical autosizing - fit the content, or fill the viewport&lt;/li&gt; &#xA; &lt;li&gt;Multiple calendar formats (month, two weeks, week)&lt;/li&gt; &#xA; &lt;li&gt;Horizontal swipe boundaries (first day, last day)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Make sure to check out &lt;a href=&#34;https://github.com/aleksanderwozniak/table_calendar/tree/master/example/lib/pages&#34;&gt;examples&lt;/a&gt; and &lt;a href=&#34;https://pub.dev/documentation/table_calendar/latest/&#34;&gt;API docs&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Add the following line to &lt;code&gt;pubspec.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  table_calendar: ^3.0.9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Basic setup&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;The complete example is available &lt;a href=&#34;https://github.com/aleksanderwozniak/table_calendar/raw/master/example/lib/pages/basics_example.dart&#34;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;TableCalendar&lt;/strong&gt; requires you to provide &lt;code&gt;firstDay&lt;/code&gt;, &lt;code&gt;lastDay&lt;/code&gt; and &lt;code&gt;focusedDay&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;firstDay&lt;/code&gt; is the first available day for the calendar. Users will not be able to access days before it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lastDay&lt;/code&gt; is the last available day for the calendar. Users will not be able to access days after it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;focusedDay&lt;/code&gt; is the currently targeted day. Use this property to determine which month should be currently visible.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TableCalendar(&#xA;  firstDay: DateTime.utc(2010, 10, 16),&#xA;  lastDay: DateTime.utc(2030, 3, 14),&#xA;  focusedDay: DateTime.now(),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Adding interactivity&lt;/h4&gt; &#xA;&lt;p&gt;You will surely notice that previously set up calendar widget isn&#39;t quite interactive - you can only swipe it horizontally, to change the currently visible month. While it may be sufficient in certain situations, you can easily bring it to life by specifying a couple of callbacks.&lt;/p&gt; &#xA;&lt;p&gt;Adding the following code to the calendar widget will allow it to respond to user&#39;s taps, marking the tapped day as selected:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;selectedDayPredicate: (day) {&#xA;  return isSameDay(_selectedDay, day);&#xA;},&#xA;onDaySelected: (selectedDay, focusedDay) {&#xA;  setState(() {&#xA;    _selectedDay = selectedDay;&#xA;    _focusedDay = focusedDay; // update `_focusedDay` here as well&#xA;  });&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to dynamically update visible calendar format, add those lines to the widget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;calendarFormat: _calendarFormat,&#xA;onFormatChanged: (format) {&#xA;  setState(() {&#xA;    _calendarFormat = format;&#xA;  });&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Those two changes will make the calendar interactive and responsive to user&#39;s input.&lt;/p&gt; &#xA;&lt;h4&gt;Updating focusedDay&lt;/h4&gt; &#xA;&lt;p&gt;Setting &lt;code&gt;focusedDay&lt;/code&gt; to a static value means that whenever &lt;strong&gt;TableCalendar&lt;/strong&gt; widget rebuilds, it will use that specific &lt;code&gt;focusedDay&lt;/code&gt;. You can quickly test it by using hot reload: set &lt;code&gt;focusedDay&lt;/code&gt; to &lt;code&gt;DateTime.now()&lt;/code&gt;, swipe to next month and trigger a hot reload - the calendar will &#34;reset&#34; to its initial state. To prevent this from happening, you should store and update &lt;code&gt;focusedDay&lt;/code&gt; whenever any callback exposes it.&lt;/p&gt; &#xA;&lt;p&gt;Add this one callback to complete the basic setup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;onPageChanged: (focusedDay) {&#xA;  _focusedDay = focusedDay;&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is worth noting that you don&#39;t need to call &lt;code&gt;setState()&lt;/code&gt; inside &lt;code&gt;onPageChanged()&lt;/code&gt; callback. You should just update the stored value, so that if the widget gets rebuilt later on, it will use the proper &lt;code&gt;focusedDay&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;The complete example is available &lt;a href=&#34;https://github.com/aleksanderwozniak/table_calendar/raw/master/example/lib/pages/basics_example.dart&#34;&gt;here&lt;/a&gt;. You can find other examples &lt;a href=&#34;https://github.com/aleksanderwozniak/table_calendar/tree/master/example/lib/pages&#34;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Events&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;The complete example is available &lt;a href=&#34;https://github.com/aleksanderwozniak/table_calendar/raw/master/example/lib/pages/events_example.dart&#34;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can supply custom events to &lt;strong&gt;TableCalendar&lt;/strong&gt; widget. To do so, use &lt;code&gt;eventLoader&lt;/code&gt; property - you will be given a &lt;code&gt;DateTime&lt;/code&gt; object, to which you need to assign a list of events.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;eventLoader: (day) {&#xA;  return _getEventsForDay(day);&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;_getEventsForDay()&lt;/code&gt; can be of any implementation. For example, a &lt;code&gt;Map&amp;lt;DateTime, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; can be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;List&amp;lt;Event&amp;gt; _getEventsForDay(DateTime day) {&#xA;  return events[day] ?? [];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;One thing worth remembering is that &lt;code&gt;DateTime&lt;/code&gt; objects consist of both date and time parts. In many cases this time part is redundant for calendar related aspects.&lt;/p&gt; &#xA;&lt;p&gt;If you decide to use a &lt;code&gt;Map&lt;/code&gt;, I suggest making it a &lt;code&gt;LinkedHashMap&lt;/code&gt; - this will allow you to override equality comparison for two &lt;code&gt;DateTime&lt;/code&gt; objects, comparing them just by their date parts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final events = LinkedHashMap(&#xA;  equals: isSameDay,&#xA;  hashCode: getHashCode,&#xA;)..addAll(eventSource);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Cyclic events&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;eventLoader&lt;/code&gt; allows you to easily add events that repeat in a pattern. For example, this will add an event to every Monday:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;eventLoader: (day) {&#xA;  if (day.weekday == DateTime.monday) {&#xA;    return [Event(&#39;Cyclic event&#39;)];&#xA;  }&#xA;&#xA;  return [];&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Events selected on tap&lt;/h4&gt; &#xA;&lt;p&gt;Often times having a sublist of events that are selected by tapping on a day is desired. You can achieve that by using the same method you provided to &lt;code&gt;eventLoader&lt;/code&gt; inside of &lt;code&gt;onDaySelected&lt;/code&gt; callback:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void _onDaySelected(DateTime selectedDay, DateTime focusedDay) {&#xA;  if (!isSameDay(_selectedDay, selectedDay)) {&#xA;    setState(() {&#xA;      _focusedDay = focusedDay;&#xA;      _selectedDay = selectedDay;&#xA;      _selectedEvents = _getEventsForDay(selectedDay);&#xA;    });&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;The complete example is available &lt;a href=&#34;https://github.com/aleksanderwozniak/table_calendar/raw/master/example/lib/pages/events_example.dart&#34;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Custom UI with CalendarBuilders&lt;/h3&gt; &#xA;&lt;p&gt;To customize the UI with your own widgets, use &lt;a href=&#34;https://pub.dev/documentation/table_calendar/latest/table_calendar/CalendarBuilders-class.html&#34;&gt;CalendarBuilders&lt;/a&gt;. Each builder can be used to selectively override the UI, allowing you to implement highly specific designs with minimal hassle.&lt;/p&gt; &#xA;&lt;p&gt;You can return &lt;code&gt;null&lt;/code&gt; from any builder to use the default style. For example, the following snippet will override only the Sunday&#39;s day of the week label (Sun), leaving other dow labels unchanged:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;calendarBuilders: CalendarBuilders(&#xA;  dowBuilder: (context, day) {&#xA;    if (day.weekday == DateTime.sunday) {&#xA;      final text = DateFormat.E().format(day);&#xA;&#xA;      return Center(&#xA;        child: Text(&#xA;          text,&#xA;          style: TextStyle(color: Colors.red),&#xA;        ),&#xA;      );&#xA;    }&#xA;  },&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Locale&lt;/h3&gt; &#xA;&lt;p&gt;To display the calendar in desired language, use &lt;code&gt;locale&lt;/code&gt; property. If you don&#39;t specify it, a default locale will be used.&lt;/p&gt; &#xA;&lt;h4&gt;Initialization&lt;/h4&gt; &#xA;&lt;p&gt;Before you can use a locale, you might need to initialize date formatting.&lt;/p&gt; &#xA;&lt;p&gt;A simple way of doing it is as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;First of all, add &lt;a href=&#34;https://pub.dev/packages/intl&#34;&gt;intl&lt;/a&gt; package to your pubspec.yaml file&lt;/li&gt; &#xA; &lt;li&gt;Then make modifications to your &lt;code&gt;main()&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:intl/date_symbol_data_local.dart&#39;;&#xA;&#xA;void main() {&#xA;  initializeDateFormatting().then((_) =&amp;gt; runApp(MyApp()));&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After those two steps your app should be ready to use &lt;strong&gt;TableCalendar&lt;/strong&gt; with different languages.&lt;/p&gt; &#xA;&lt;h4&gt;Specifying a language&lt;/h4&gt; &#xA;&lt;p&gt;To specify a language, simply pass it as a String code to &lt;code&gt;locale&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;p&gt;For example, this will make &lt;strong&gt;TableCalendar&lt;/strong&gt; use Polish language:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;TableCalendar(&#xA;  locale: &#39;pl_PL&#39;,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aleksanderwozniak/table_calendar/assets/en_US.png&#34; alt=&#34;Image&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aleksanderwozniak/table_calendar/assets/pl_PL.png&#34; alt=&#34;Image&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aleksanderwozniak/table_calendar/assets/fr_FR.png&#34; alt=&#34;Image&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aleksanderwozniak/table_calendar/assets/zh_CN.png&#34; alt=&#34;Image&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;en_US&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;pl_PL&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;fr_FR&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;zh_CN&#39;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note, that if you want to change the language of &lt;code&gt;FormatButton&lt;/code&gt;&#39;s text, you have to do this yourself. Use &lt;code&gt;availableCalendarFormats&lt;/code&gt; property and pass the translated Strings there. Use i18n method of your choice.&lt;/p&gt; &#xA;&lt;p&gt;You can also hide the button altogether by setting &lt;code&gt;formatButtonVisible&lt;/code&gt; to false.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CarGuo/gsy_github_app_flutter</title>
    <updated>2023-12-03T01:47:28Z</updated>
    <id>tag:github.com,2023-12-03:/CarGuo/gsy_github_app_flutter</id>
    <link href="https://github.com/CarGuo/gsy_github_app_flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter 超完整的开源项目，功能丰富，适合学习和日常使用。GSYGithubApp系列的优势：我们目前已经拥有Flutter、Weex、ReactNative、kotlin 四个版本。 功能齐全，项目框架内技术涉及面广，完成度高，持续维护，配套文章，适合全面学习，对比参考。跨平台的开源Github客户端App，更好的体验，更丰富的功能，旨在更好的日常管理和维护个人Github，提供更好更方便的驾车体验Σ(￣。￣ﾉ)ﾉ。同款Weex版本 ： https://github.com/CarGuo/GSYGithubAppWeex 、同款React Native版本 ： https://github.com/CarGuo/GSYGithubApp 、原生 kotlin 版本 https:…&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/gsy_github_app_flutter/master/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/CarGuo/gsy_github_app_flutter/actions&#34;&gt;&lt;img src=&#34;https://github.com/CarGuo/gsy_github_app_flutter/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Github Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYGithubAppFlutter/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/CarGuo/GSYGithubAppFlutter.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYGithubAppFlutter/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/CarGuo/GSYGithubAppFlutter.svg?sanitize=true&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYGithubAppFlutter/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/CarGuo/GSYGithubAppFlutter.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYGithubAppFlutter/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/CarGuo/GSYGithubAppFlutter.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYGithubAppFlutter/raw/master/README_EN.md&#34;&gt;English Readme&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;一款跨平台的开源Github客户端App，提供更丰富的功能，更好体验，旨在更好的日常管理和维护个人Github，提供更好更方便的驾车体验～～Σ(￣。￣ﾉ)ﾉ。项目涉及各种常用控件、网络、数据库、设计模式、主题切换、多语言、Redux等。在开发学习过程中，提供丰富的同款对比：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;简单 Flutter 独立学习项目 ( &lt;a href=&#34;https://github.com/CarGuo/gsy_flutter_demo&#34;&gt;https://github.com/CarGuo/gsy_flutter_demo&lt;/a&gt; )&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;同款Weex版 （ &lt;a href=&#34;https://github.com/CarGuo/GSYGithubAppWeex&#34;&gt;https://github.com/CarGuo/GSYGithubAppWeex&lt;/a&gt; ）&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;同款ReactNative版 （ &lt;a href=&#34;https://github.com/CarGuo/GSYGithubApp&#34;&gt;https://github.com/CarGuo/GSYGithubApp&lt;/a&gt; ）&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;同款Android Kotlin版本（ &lt;a href=&#34;https://github.com/CarGuo/GSYGithubAppKotlin&#34;&gt;https://github.com/CarGuo/GSYGithubAppKotlin&lt;/a&gt; ）&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;相关文章&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h2&gt;&lt;a href=&#34;https://juejin.cn/column/6960546078202527774&#34;&gt;Flutter系列文章专栏&lt;/a&gt;&lt;/h2&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h2&gt;&lt;a href=&#34;https://github.com/CarGuo/gsy_flutter_demo&#34;&gt;Flutter 独立简单学习演示项目&lt;/a&gt;&lt;/h2&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h2&gt;&lt;a href=&#34;https://github.com/CarGuo/gsy_flutter_book&#34;&gt;Flutter 完整开发实战详解 Gitbook 预览下载&lt;/a&gt;&lt;/h2&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h2&gt;&lt;a href=&#34;https://github.com/CarGuo/gsy_github_app_flutter/issues/13&#34;&gt;所有运行问题请点击这里&lt;/a&gt;&lt;/h2&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;GSY新书：&lt;a href=&#34;https://item.jd.com/12883054.html&#34;&gt;《Flutter开发实战详解》&lt;/a&gt;上架啦：&lt;a href=&#34;https://item.jd.com/12883054.html&#34;&gt;京东&lt;/a&gt; / &lt;a href=&#34;http://product.dangdang.com/28558519.html&#34;&gt;当当&lt;/a&gt; / 电子版&lt;a href=&#34;https://e.jd.com/30624414.html&#34;&gt;京东读书&lt;/a&gt;和&lt;a href=&#34;https://www.amazon.cn/dp/B08BHQ4TKK/ref=sr_1_5?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&amp;amp;keywords=flutter&amp;amp;qid=1593498531&amp;amp;s=digital-text&amp;amp;sr=1-5&#34;&gt;Kindle&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://item.jd.com/12883054.html&#34;&gt;&lt;img src=&#34;http://img.cdn.guoshuyu.cn/WechatIMG65.jpeg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;公众号&lt;/th&gt; &#xA;   &lt;th&gt;掘金&lt;/th&gt; &#xA;   &lt;th&gt;知乎&lt;/th&gt; &#xA;   &lt;th&gt;CSDN&lt;/th&gt; &#xA;   &lt;th&gt;简书&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GSYTech&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://juejin.im/user/582aca2ba22b9d006b59ae68/posts&#34;&gt;点我&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.zhihu.com/people/carguo&#34;&gt;点我&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.csdn.net/ZuoYueLiang&#34;&gt;点我&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.jianshu.com/u/6e613846e1ea&#34;&gt;点我&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://gitee.com/CarGuo/GSYGithubAppFlutter&#34;&gt;如果克隆太慢或者图片看不到，可尝试从码云地址下载&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-!&#34;&gt;基于Flutter开发，适配 Android 与 iOS。&#xA;&#xA;项目的目的是为方便个人日常维护和查阅Github，更好的沉浸于码友之间的互基，Github就是你的家。&#xA;&#xA;项目同时适合Flutter的练手学习，覆盖了各种框架的使用，与原生的交互等。&#xA;&#xA;随着项目的使用情况和反馈，将时不时根据更新并完善用户体验与功能优化吗，欢迎提出问题。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://img.cdn.guoshuyu.cn/wechat_qq.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;须知&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;因为是偏学习项目，所以项目里会有各式各样的模式、库、UI等，请不要介意&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;1、 TrendPage ： 目前采用纯 bloc 的 rxdart(stream) + streamBuilder 模式效果&lt;/p&gt; &#xA; &lt;p&gt;2、 Scoped Model：目前在 RepositoryDetailPage 出使用&lt;/p&gt; &#xA; &lt;p&gt;3、 Redux：目前在 MyPage ，UserInfo、Theme、Localization 等上面使用。&lt;/p&gt; &#xA; &lt;p&gt;4、 LoginPage：另类的 BLoC 模式。&lt;/p&gt; &#xA; &lt;p&gt;5、 ReposDao.getRepositoryDetailDao 使用 graphQL&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;列表显示有多个，其中：&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;1、&lt;strong&gt;gsy_pull_load_widget.dart.dart&lt;/strong&gt; &lt;code&gt;common_list_page.dart 等使用，搭配 gsy_list_state.dart 使用&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;2、&lt;strong&gt;gsy_pull_new_load_widget.dart.dart&lt;/strong&gt; &lt;code&gt;dynamic_page.dart 等使用，搭配 gsy_bloc_list_state.dart 使用&lt;/code&gt; &lt;code&gt;有 iOS 和 Android 两种风格下拉风格支持&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;3、&lt;strong&gt;gsy_nested_pull_load_widget.dart&lt;/strong&gt; &lt;code&gt;trend_page.dart 等使用，配置sliver 效果&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;编译运行流程&lt;/h2&gt; &#xA;&lt;p&gt;1、配置好Flutter开发环境(目前Flutter SDK 版本 &lt;strong&gt;3.16&lt;/strong&gt;)，可参阅 &lt;a href=&#34;https://flutterchina.club&#34;&gt;【搭建环境】&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;2、clone代码，执行&lt;code&gt;Packages get&lt;/code&gt;安装第三方包。(因为某些不可抗力原因，国内可能需要设置代理: &lt;a href=&#34;https://flutterchina.club/setup-windows/&#34;&gt;代理环境变量&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;3、重点：你需要自己在lib/common/config/目录下 创建一个&lt;code&gt;ignoreConfig.dart&lt;/code&gt;文件，然后输入你申请的Github client_id 和 client_secret。&lt;/h3&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt; class NetConfig {&#xA;   static const CLIENT_ID = &#34;xxxx&#34;;&#xA; &#xA;   static const CLIENT_SECRET = &#34;xxxxxxxxxxx&#34;;&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&amp;nbsp; &lt;a href=&#34;https://github.com/settings/applications/new&#34;&gt; 注册 Github APP 传送门&lt;/a&gt;，当然，前提是你现有一个github账号(～￣▽￣)～ 。&lt;/p&gt; &#xA;&lt;h3&gt;4、如果使用安全登录（授权登录），那么在上述注册 Github App 的 Authorization callback URL 一栏必须填入 &lt;code&gt;gsygithubapp://authed&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;http://img.cdn.guoshuyu.cn/register0.png&#34; width=&#34;426px&#34;&gt; &#xA; &lt;img src=&#34;http://img.cdn.guoshuyu.cn/register1.jpg&#34; width=&#34;426px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;5、运行之前请注意下&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;1、本地 Flutter SDK 版本 3.16 ； 2、是否执行过 &lt;code&gt;flutter pub get&lt;/code&gt;；3、 网络等问题参考: &lt;a href=&#34;https://github.com/CarGuo/gsy_github_app_flutter/issues/643&#34;&gt;如果出现登陆失败或者请求失败 &lt;/a&gt;&lt;/h3&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;下载&lt;/h3&gt; &#xA;&lt;h4&gt;Apk下载链接： &lt;a href=&#34;https://www.pgyer.com/guqa&#34;&gt;Apk下载链接&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;类型&lt;/th&gt; &#xA;   &lt;th&gt;二维码&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Apk二维码&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/gsy_github_app_flutter/master/download.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;iOS暂无下载&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;项目结构图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/gsy_github_app_flutter/master/framework2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/gsy_github_app_flutter/master/folder.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;常见问题&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;如果包同步失败，一般都是因为没设置包代理，可以参考：&lt;a href=&#34;https://github.com/CarGuo/GSYGithubAppFlutter/issues/13&#34;&gt;环境变量问题&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://gitee.com/CarGuo/GSYGithubAppFlutter&#34;&gt;如果克隆太慢，可尝试码云地址下载&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;示例图片&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/gsy_github_app_flutter/master/ios.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/gsy_github_app_flutter/master/theme.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;http://img.cdn.guoshuyu.cn/showapp1.jpg&#34; width=&#34;426px&#34;&gt; &#xA;&lt;img src=&#34;http://img.cdn.guoshuyu.cn/showapp2.jpg&#34; width=&#34;426px&#34;&gt; &#xA;&lt;img src=&#34;http://img.cdn.guoshuyu.cn/showapp3.jpg&#34; width=&#34;426px&#34;&gt; &#xA;&lt;h3&gt;第三方框架&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;当前 Flutter SDK 版本 3.16&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;库&lt;/th&gt; &#xA;   &lt;th&gt;功能&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;dio&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;网络框架&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;shared_preferences&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;本地数据缓存&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;fluttertoast&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;toast&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;flutter_redux&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;redux&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;device_info&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;设备信息&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;connectivity&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;网络链接&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;flutter_markdown&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;markdown解析&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;json_annotation&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;json模板&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;json_serializable&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;json模板&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;url_launcher&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;启动外部浏览器&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;iconfont&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;字库图标&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;share&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;系统分享&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;flutter_spinkit&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;加载框样式&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;get_version&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;版本信息&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;flutter_webview_plugin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;全屏的webview&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;sqflite&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;数据库&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;flutter_statusbar&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;状态栏&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;flutter_svg&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;svg&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;photo_view&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;图片预览&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;flutter_slidable&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;侧滑&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;flutter_cache_manager&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;缓存管理&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;path_provider&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;本地路径&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;permission_handler&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;权限&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;scope_model&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;状态管理和共享&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;lottie&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;svg动画&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;flare&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;路径动画&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Star History Chart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#CarGuo/gsy_github_app_flutter&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=CarGuo/gsy_github_app_flutter&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://img.cdn.guoshuyu.cn/thanks.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;LICENSE&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;CarGuo/GSYGithubAppFlutter is licensed under the&#xA;Apache License 2.0&#xA;&#xA;A permissive license whose main conditions require preservation of copyright and license notices. &#xA;Contributors provide an express grant of patent rights. &#xA;Licensed works, modifications, and larger works may be distributed under different terms and without source code.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;​&lt;/p&gt;</summary>
  </entry>
</feed>