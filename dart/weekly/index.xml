<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-31T01:45:36Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cph-cachet/flutter-plugins</title>
    <updated>2024-03-31T01:45:36Z</updated>
    <id>tag:github.com,2024-03-31:/cph-cachet/flutter-plugins</id>
    <link href="https://github.com/cph-cachet/flutter-plugins" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of Flutter plugins developed by CACHET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CACHET Flutter plugins&lt;/h1&gt; &#xA;&lt;p&gt;This repo contains the source code for Flutter first-party plugins developed by developers at the &lt;a href=&#34;http://www.cachet.dk/&#34;&gt;Copenhagen Center for Health Technology (CACHET)&lt;/a&gt; at The Technical University of Denmark. Check the &lt;code&gt;packages&lt;/code&gt; directory for all plugins.&lt;/p&gt; &#xA;&lt;p&gt;Flutter plugins enable access to platform-specific APIs using a platform channel. For more information about plugins, and how to use them, see &lt;a href=&#34;https://flutter.io/platform-plugins/&#34;&gt;https://flutter.io/platform-plugins/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;These are the available plugins in this repository.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;http://pub.dev/&#34;&gt;http://pub.dev/&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/screen_state&#34;&gt;screen_state&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Track screen state changes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/screen_state&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/screen_state.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/light&#34;&gt;light&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Track light sensor readings&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/light&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/light.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/pedometer&#34;&gt;pedometer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Track step count&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/pedometer&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/pedometer.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/noise_meter&#34;&gt;noise_meter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Read noise level in Decibel&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/noise_meter&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/noise_meter.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/app_usage&#34;&gt;app_usage&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Track usage of all applications on phone.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/app_usage&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/app_usage.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/weather&#34;&gt;weather&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Get current weather, as well as forecasting using the OpenWeatherMap API.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/weather&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/weather.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/air_quality&#34;&gt;air_quality&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Get the air quality index using the WAQI API.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/air_quality&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/air_quality.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/notifications&#34;&gt;notifications&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Track device notifications.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/notifications&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/notifications.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/movisens_flutter&#34;&gt;movisens_flutter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Movisens sensor communication.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/movisens_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/movisens_flutter.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/esense_flutter&#34;&gt;esense_flutter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;eSense ear sensor plugin.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/esense_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/esense_flutter.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/health&#34;&gt;health&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Apple HealthKit and Google Fit interface plugin.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/health&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/health.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/activity_recognition_flutter&#34;&gt;activity_recognition&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Activity Recognition&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/activity_recognition_flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/activity_recognition_flutter.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/audio_streamer&#34;&gt;audio_streamer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stream audio as PCM from mic&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/audio_streamer&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/audio_streamer.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/mobility_features&#34;&gt;mobility_features&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Compute daily mobility features from location data&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/mobility_features&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/mobility_features.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/carp_background_location&#34;&gt;carp_background_location&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Track location, even when app is in the background&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/carp_background_location&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/carp_background_location.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cph-cachet/flutter-plugins/master/packages/flutter_foreground_service&#34;&gt;flutter_foreground_service&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Foreground service for Android&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_foreground_service&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_foreground_service.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please check existing issues and file any new issues, bugs, or feature requests in the &lt;a href=&#34;https://github.com/cph-cachet/flutter-plugins/issues&#34;&gt;flutter-plugin issue list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;As part of the open-source Flutter ecosystem, we would welcome any help in maintaining and enhancing these plugins. We (i.e., CACHET) have limited resources for maintaining these plugins and we rely on &lt;strong&gt;your&lt;/strong&gt; help in this. We welcome any contribution -- from small error corrections in the documentation, to bug fixes, to large features enhacements, or even new features in a plugin. If you wish to contribute to any of the plugins in this repo, please review our &lt;a href=&#34;https://github.com/cph-cachet/flutter-plugins/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;, and send a &lt;a href=&#34;https://github.com/cph-cachet/flutter-plugins/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In general, if you wish to contribute a new plugin to the Flutter ecosystem, please see the documentation for &lt;a href=&#34;https://flutter.io/developing-packages/&#34;&gt;developing packages&lt;/a&gt; and &lt;a href=&#34;https://flutter.io/platform-channels/&#34;&gt;platform channels&lt;/a&gt;. You can store your plugin source code in any GitHub repository (the present repo is only intended for plugins developed by the core CARP team). Once your plugin is ready you can &lt;a href=&#34;https://flutter.io/developing-packages/#publish&#34;&gt;publish&lt;/a&gt; to the &lt;a href=&#34;https://pub.dartlang.org/&#34;&gt;pub repository&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>paidworkco/worken-sdk-flutter</title>
    <updated>2024-03-31T01:45:36Z</updated>
    <id>tag:github.com,2024-03-31:/paidworkco/worken-sdk-flutter</id>
    <link href="https://github.com/paidworkco/worken-sdk-flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter Plugin for Worken&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://zrcdn.net/images/logos/paidwork/paidwork-logo-header-mobile-bitlabs.png&#34; alt=&#34;Paidwork&#34;&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; Send &amp;amp; Receive secure Blockchain transactions with Worken &lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 🚀 Over 15M+ Users using Worken! &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/paidworkco/worken-sdk-php&#34;&gt; &lt;img alt=&#34;GitHub Repository Stars Count&#34; src=&#34;https://img.shields.io/github/stars/paidworkco/worken-sdk-php?style=social&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://x.com/paidworkco&#34;&gt; &lt;img alt=&#34;Follow Us on X&#34; src=&#34;https://img.shields.io/twitter/follow/paidworkco?style=social&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://commitizen.github.io/cz-cli/&#34;&gt; &lt;img alt=&#34;Commitizen friendly&#34; src=&#34;https://img.shields.io/badge/commitizen-friendly-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/paidworkco/worken-sdk-php&#34;&gt; &lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/github/license/paidworkco/worken-sdk-php&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/paidworkco/worken-sdk-php/pulls&#34;&gt; &lt;img alt=&#34;PRs Welcome&#34; src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;SDK library providing access to make easy and secure Blockchain transactions with Worken. &lt;a href=&#34;https://www.paidwork.com/worken?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme&#34; target=&#34;_blank&#34;&gt;Read more&lt;/a&gt; about Worken Token.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;To ensure flexibility and ease of integration, the Worken SDK allows for configuration through environmental variables. These variables can be set directly in your project&#39;s .env file. Below is a list of available configuration variables along with their descriptions:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;WORKEN_POLYGONSCAN_APIKEY:&lt;/code&gt; This is your API key, which you can generate at: &lt;a href=&#34;https://polygonscan.com/myapikey&#34;&gt;https://polygonscan.com/myapikey&lt;/a&gt;. The API key is required for accessing PolygonScan&#39;s data programmatically and is essential for querying transaction history, block information data and other blockchain-related information on the Polygon network.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h4&gt;Install&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt; $ flutter pub add worken-sdk &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Initialization&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:worken_sdk/worken_sdk.dart&#39;;&#xA;import &#39;package:web3dart/web3dart.dart&#39;;&#xA;import &#39;package:get_it/get_it.dart&#39;;&#xA;&#xA;/// Setup even if don&#39;t want to use your paths&#xA;await WorkenSdk.setup( &#xA;      provider: Web3Client(&#39;https://rpc-mumbai.maticvigil.com/&#39;, Client()),&#xA;      locator: GetIt.instance, // your locator&#xA;    );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Parameter&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Type&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;Web3Client&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;if want to use yours client&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;lcoator&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;GetIt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;if want to use yours locator&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Wallet&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.walletService(); /// Service to extract functions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;also, if setup with locator&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; locator.get&amp;lt;WalletService&amp;gt;(); /// Get service from locator&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Get wallet balance&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.walletService().getBalance(address: walletAddress);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Parameter&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Type&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;address&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt; Your wallet address&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This structure details the balance of a wallet in terms of the WORK token specified in contract, providing the balance in WEI, Ether, and Hexadecimal units.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;WEI (String)&lt;/code&gt;: The balance of the wallet expressed in WEI, which is the smallest denomination of Ether. Given its size, the balance is represented as a string to maintain precision. Example: &lt;code&gt;11820000000000000000000&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Ether (String)&lt;/code&gt;: The balance of the wallet converted into Ether, offering a more readable and commonly used representation of the balance. This conversion is necessary for understanding the balance in terms of Ether, which is more familiar to users. Example: &lt;code&gt;11820.000000000000000000&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Hex (String)&lt;/code&gt;: The balance of the wallet expressed as a hexadecimal value. This format is often used in lower-level blockchain operations and interactions. Example: &lt;code&gt;0x0280c373aef4bd300000&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Get wallet information&lt;/h4&gt; &#xA;&lt;p&gt;TODO:&lt;/p&gt; &#xA;&lt;h4&gt;Get wallet transaction history&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.walletService().getHistory(address: walletAddress);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Parameter&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Type&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;address&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt; Your wallet address&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Output given in array, below specific variables.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;blockNumber&lt;/code&gt;: Block number in which this transaction was included. Block numbers are sequential and indicate the position of a block in the blockchain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;timeStamp&lt;/code&gt;: Timestamp for when the block was mined, expressed in Unix epoch time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hash&lt;/code&gt;: This is the unique identifier for the transaction, also known as the transaction hash(txHash).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;from&lt;/code&gt;: Address of the sender of the transaction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;to&lt;/code&gt;: Recipient&#39;s address.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;value&lt;/code&gt;: This indicates the amount of cryptocurrency (likely Ether if this is Ethereum) that was transferred in this transaction. A value of &#34;0&#34; suggests that no Ether was transferred as part of this transaction, which is common for contract deployments like Worken(WORK) or other non-value transactions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;contractAddress&lt;/code&gt;: Address of the contract that was created by this transaction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input&lt;/code&gt;: This field contains the data sent along with the transaction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: This specifies the type of transaction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: This is the maximum amount of gas the sender is willing to use for this transaction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gasUsed&lt;/code&gt;: This indicates the actual amount of gas that was used to execute the transaction. It&#39;s often less than the maximum gas specified.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;traceId&lt;/code&gt;: This is likely an identifier used to trace the transaction through the system or in a debugging process.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;isError&lt;/code&gt;: This field indicates whether the transaction encountered an error. A value of &#34;0&#34; means there was no error.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;errCode&lt;/code&gt;: Since &lt;code&gt;isError = 0&lt;/code&gt;, this field is empty. If there was an error, it might contain an error code or message indicating what went wrong.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Create new wallet&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.walletService().getHistory(words: 12);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;words&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Required&lt;/strong&gt;. Count number of words in seedphrase. &lt;strong&gt;Only: 12, 15, 18, 21, 24&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This structure outlines the output of the &lt;code&gt;createWallet()&lt;/code&gt; function, which generates a new Ethereum wallet. It provides essential details including the seed phrase, private key, public key (both uncompressed and compressed formats), and the Ethereum address.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;seedphrase (array)&lt;/code&gt;: An array of X words that constitute the seed phrase. This phrase is crucial for wallet recovery and should be stored securely.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;privateKey (string)&lt;/code&gt;: The private key of the wallet, expressed as a 64-character hexadecimal string. It is essential for signing transactions and should be kept confidential.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;publicKey (string)&lt;/code&gt;: The uncompressed public key associated with the wallet, expressed as a 130-character hexadecimal string. It is derived from the private key.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;address (string)&lt;/code&gt;: The Ethereum address generated from the public key, expressed as a 42-character hexadecimal string. This address is used for sending and receiving funds.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contract&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.contractService(); /// Service to extract functions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;also, if setup with locator&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; locator.get&amp;lt;ContractService&amp;gt;(); /// Get service from locator&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Show contract status&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.contractService().getContractStatus();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;status(boolean)&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt; - contract active, &lt;code&gt;false&lt;/code&gt; - contract unactive &amp;amp; freezed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Show contract functions&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.contractService().getContractSource();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This function give all ABI functions of Worken contract in &lt;code&gt;string&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Transactions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.transactionsService(); /// Service to extract functions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;also, if setup with locator&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; locator.get&amp;lt;TransactionsService&amp;gt;(); /// Get service from locator&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Send transaction&lt;/h4&gt; &#xA;&lt;h4&gt;Show transaction status&lt;/h4&gt; &#xA;&lt;h4&gt;Show recent transactions (10)&lt;/h4&gt; &#xA;&lt;h3&gt;Network&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.networkService(); /// Service to extract functions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;also, if setup with locator&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; locator.get&amp;lt;NetworkService&amp;gt;(); /// Get service from locator&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Show block information&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.networkService().getBlocInformation(bloc: 20);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;bloc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Required&lt;/strong&gt;. Number of block&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This function retrieves detailed information about a specific block on the blockchain.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;blockNumber&lt;/code&gt;: The unique number of the block in which this transaction was included.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;timeStamp&lt;/code&gt;: The timestamp when the block was mined, represented as Unix epoch time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hash&lt;/code&gt;: The unique transaction identifier, a 66-character hexadecimal string.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: A number used once by the sending account to prevent transaction replay attacks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;blockHash&lt;/code&gt;: The hash of the block containing this transaction, a 66-character hexadecimal string indicating the block&#39;s unique identifier.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;from&lt;/code&gt;: The address of the sender.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;contractAddress&lt;/code&gt;: The address of the contract.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;to&lt;/code&gt;: The recipient&#39;s address. In the case of contract creation like Worken(WORK), this field may be empty.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;value&lt;/code&gt;: The amount of Ether (or the token&#39;s smallest unit if an ERC-20 transaction) transferred, in Wei.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tokenName&lt;/code&gt;: The name of the token being transferred, if applicable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tokenSymbol&lt;/code&gt;: The symbol of the token being transferred, if applicable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tokenDecimal&lt;/code&gt;: The decimal places of the token, indicating how the token&#39;s value can be divided.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;transactionIndex&lt;/code&gt;: The index position of the transaction within the block.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: The maximum amount of gas the sender is willing to use for the transaction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: The price (in Wei) per unit of gas the sender is willing to pay.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gasUsed&lt;/code&gt;: The actual amount of gas used for processing the transaction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cumulativeGasUsed&lt;/code&gt;: The total amount of gas used in the block up until this transaction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input&lt;/code&gt;: The data sent along with the transaction. For some transactions, this may be &#39;deprecated&#39; or contain the input data to a contract call.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;confirmations&lt;/code&gt;: The number of confirmations the transaction has received, indicating how many blocks have been mined since this transaction&#39;s block.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Show estimated gas&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.networkService().getBlocInformation(from: &#34;0x&#34;, to: &#34;0x&#34;, amount: &#34;1&#34;);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Required&lt;/strong&gt;. Sender address in format &lt;code&gt;0x...&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;to&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Required&lt;/strong&gt;. Recipient address in format &lt;code&gt;0x...&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;amount&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Required&lt;/strong&gt;. Amount in WEI, example: 1 WEI = 0.000000000000000001 of token&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This structure provides the estimated gas required for a transaction on the Ethereum network, represented in various units: WEI, Ether, and Hex.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;WEI (string)&lt;/code&gt;: The estimated gas required for the transaction, expressed in WEI, the smallest unit of Ether. Example: &#34;21000&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Ether (string)&lt;/code&gt;: The estimated gas converted into Ether, allowing for an understanding of the cost in more familiar terms. Due to the high granularity of WEI, this number is typically very small and expressed in scientific notation for readability. Example: &#34;0.000000000000021000&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Hex (string)&lt;/code&gt;: The estimated gas required for the transaction, expressed as a hexadecimal value. This format is often used in low-level or system-level interactions with the Ethereum blockchain. Example: &#34;0x5208&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Show network status&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.networkService().getNetworkStatus();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This function returns an array containing the following keys and values about Polygon network:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;latestBlock (int)&lt;/code&gt;: The number of the most recent block in the network. Example: &lt;code&gt;45919144&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;hashrate (string)&lt;/code&gt;: The current network hashrate expressed as a string. Example: &lt;code&gt;&#34;0&#34;&lt;/code&gt; (Note: A value of &#34;0&#34; may indicate a lack of available data or a problem with reading the hashrate).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;walletBalance &lt;/code&gt;: An object containing information about the current gas price in different units:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;WEI (string)&lt;/code&gt;: The gas price expressed in WEI units. Example: &lt;code&gt;1500000015&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Ether (string)&lt;/code&gt;: The gas price converted to Ether. Example: &lt;code&gt;0.000000001500000015&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Hex (string)&lt;/code&gt;: The gas price expressed as a hexadecimal value. Example: &lt;code&gt;0x59682f0f&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;sync &lt;/code&gt;: The synchronization status with the blockchain network. true indicates that the node is synchronized, whereas false indicates a lack of synchronization.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Show monitor network congestion&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;WorkenSdk.networkService().getMonitorCongestion();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;safeGasPrice&lt;/code&gt;: The recommended gas price for transactions expected to be confirmed within a reasonable time frame without overpaying. Measured in Gwei.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proposeGasPrice&lt;/code&gt;: The gas price suggested for transactions that are slightly more urgent and aim for a faster confirmation time than those marked as Safe. Measured in Gwei.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fastGasPrice &lt;/code&gt;: The highest gas price recommended for transactions that need to be confirmed as quickly as possible. Measured in Gwei.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>