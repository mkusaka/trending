<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-19T01:50:14Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mjansen4857/pathplanner</title>
    <updated>2023-02-19T01:50:14Z</updated>
    <id>tag:github.com,2023-02-19:/mjansen4857/pathplanner</id>
    <link href="https://github.com/mjansen4857/pathplanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple yet powerful motion profile generator for FRC robots&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/mjansen4857/pathplanner/actions/workflows/pathplanner-ci.yaml&#34;&gt;&lt;img src=&#34;https://github.com/mjansen4857/pathplanner/actions/workflows/pathplanner-ci.yaml/badge.svg?sanitize=true&#34; alt=&#34;PathPlanner&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mjansen4857/pathplanner/actions/workflows/pplib-ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/mjansen4857/pathplanner/actions/workflows/pplib-ci.yml/badge.svg?sanitize=true&#34; alt=&#34;PathPlannerLib&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;PathPlanner&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/p/frc-pathplanner/9nqbkb5dw909?cid=storebadge&amp;amp;ocid=badge&amp;amp;rtc=1&amp;amp;activetab=pivot:overviewtab&#34;&gt;&lt;img src=&#34;https://mjansen4857.com/badges/windows.svg?sanitize=true&#34; height=&#34;50&#34;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://apps.apple.com/us/app/frc-pathplanner/id1593046876&#34;&gt;&lt;img src=&#34;https://mjansen4857.com/badges/mac.svg?sanitize=true&#34; height=&#34;51&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Download from one of the above app stores to receive auto-updates. Manual installs can be found &lt;a href=&#34;https://github.com/mjansen4857/pathplanner/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9343077/211618068-8b4b0edb-d5b2-4247-94ee-119742d4507a.png&#34; alt=&#34;PathPlanner&#34;&gt; PathPlanner is a motion profile generator for FRC robots created by team 3015. The main features of PathPlanner include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Each path is made with Bézier curves, allowing fine tuning of the exact path shape.&lt;/li&gt; &#xA; &lt;li&gt;Holonomic mode supports decoupling the robot&#39;s rotation from its direction of travel.&lt;/li&gt; &#xA; &lt;li&gt;Real-time path preview&lt;/li&gt; &#xA; &lt;li&gt;Allows placing &#34;event markers&#34; along the path which can be used to trigger other code while path following.&lt;/li&gt; &#xA; &lt;li&gt;Split a path into a &#34;path group&#34; to follow each part of a path seperately.&lt;/li&gt; &#xA; &lt;li&gt;Auto path saving and file management&lt;/li&gt; &#xA; &lt;li&gt;Robot-side vendor library for path generation and custom path following commands/controllers&lt;/li&gt; &#xA; &lt;li&gt;Full autonomous command generation with PathPlannerLib AutoBuilder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage and Documentation&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/mjansen4857/pathplanner/wiki&#34;&gt;Check the Wiki&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Make sure you &lt;a href=&#34;https://github.com/mjansen4857/pathplanner/wiki/PathPlannerLib:-Installing&#34;&gt;install PathPlannerLib&lt;/a&gt; to generate your paths. Paths can be pre-generated as CSV or WPILib JSON files, but the vendor library is much easier to use and supports all of the features of the GUI.&lt;/p&gt; &#xA;&lt;h2&gt;How to build manually:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/install&#34;&gt;Install Flutter&lt;/a&gt; (this project currently uses v3.3.9)&lt;/li&gt; &#xA; &lt;li&gt;Open the project in a terminal and run the following command: &lt;code&gt;flutter build &amp;lt;PLATFORM&amp;gt;&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Valid platforms are: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;windows&lt;/li&gt; &#xA;     &lt;li&gt;macos&lt;/li&gt; &#xA;     &lt;li&gt;linux&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The built app will be located here: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows: &lt;code&gt;&amp;lt;PROJECT DIR&amp;gt;/build/windows/runner/Release&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;maxOS: &lt;code&gt;&amp;lt;PROJECT DIR&amp;gt;/build/macos/Build/Products/Release&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Linux: &lt;code&gt;&amp;lt;PROJECT DIR&amp;gt;/build/linux/x64/release/bundle&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;OR &lt;code&gt;flutter run&lt;/code&gt; to run in debug mode&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>flutterchina/flukit</title>
    <updated>2023-02-19T01:50:14Z</updated>
    <id>tag:github.com,2023-02-19:/flutterchina/flukit</id>
    <link href="https://github.com/flutterchina/flukit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter UI Kit（一个 Flutter UI组件库），包含 ScaleView, Swiper, PullRefresh, WaterMark, GradientCircularProgressIndicator...&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flutterchina/flukit/main/README-EN.md&#34;&gt;English&lt;/a&gt;|中文简体&lt;/p&gt; &#xA;&lt;h1&gt;Flukit &lt;a href=&#34;https://pub.dartlang.org/packages/flukit&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flukit.svg?style=flat-square&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;flukit&lt;/em&gt; （Flutter UI Kit）是一个Flutter Widget库。&lt;/p&gt; &#xA;&lt;h2&gt;组件列表&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Widget&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AfterLayout&lt;/td&gt; &#xA;   &lt;td&gt;在布局结束后，可以拿到对应的RenderObject对象。非常实用的一个组件，需要慢慢体会。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AccurateSizedBox&lt;/td&gt; &#xA;   &lt;td&gt;一个精确的SizedBox。SizedBox 会将父组件的约束传递给其子组件，所以有些时候子组件大小并不等于我们通过SizedBox指定的宽高，而 AccurateSizedBox 能很好解决这个问题。具体见示例。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AnimatedRotationBox&lt;/td&gt; &#xA;   &lt;td&gt;Rotates child forever&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DoneWidget&lt;/td&gt; &#xA;   &lt;td&gt;完成提示组件（执行一个打勾动画）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GradientButton&lt;br&gt;ElevatedGradientButton&lt;/td&gt; &#xA;   &lt;td&gt;背景色渐变按钮&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GradientCircularProgressIndicator&lt;/td&gt; &#xA;   &lt;td&gt;一个支持颜色渐变的圆形进度指示器&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HitTestBlocker&lt;/td&gt; &#xA;   &lt;td&gt;通过该组件可以拦截 hit test 流程。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KeepAliveWrapper&lt;/td&gt; &#xA;   &lt;td&gt;包括可滚动组件的子组件后，该子组件将会被缓存，意味着即使滑出屏幕也不会被销毁。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LeftRightBox&lt;/td&gt; &#xA;   &lt;td&gt;支持左-右布局的组件，不会有文本溢出，右组件最多占总显示宽度的一半。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LayoutLogPrint&lt;/td&gt; &#xA;   &lt;td&gt;一个帮助组件：在调试模式下可以将父组件传递的约束信息打印出来。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LogListenerScope&lt;/td&gt; &#xA;   &lt;td&gt;监听是否有日志（print）到来。是一个调试工具，可以拦截应用内print的输出然后显示在 UI 上，具体见示例demo.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VerticalLogPanel&lt;/td&gt; &#xA;   &lt;td&gt;显示&lt;code&gt;print&lt;/code&gt;输出的log。它会将显示区域分为上下两部分，子组件显示在上面，日志面板显示在下面。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LogPanel&lt;/td&gt; &#xA;   &lt;td&gt;显示&lt;code&gt;print&lt;/code&gt;输出的log.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PullRefreshScope&lt;/td&gt; &#xA;   &lt;td&gt;下拉刷新（和flutter自带的有两点不同：PullRefreshScope 是手指抬起后才刷新，另外刷新完成后返回时会执行动画）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SliverPullRefreshIndicator&lt;/td&gt; &#xA;   &lt;td&gt;下拉舒新指示器，配合PullRefreshScope 使用。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QuickScrollbar&lt;/td&gt; &#xA;   &lt;td&gt;可拖动的滚动条&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Swiper&lt;/td&gt; &#xA;   &lt;td&gt;一个轮播组件&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ScaleView&lt;/td&gt; &#xA;   &lt;td&gt;可以对子组件进行缩放（支持双指伸缩、双击）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SliverFlexibleHeader&lt;/td&gt; &#xA;   &lt;td&gt;一个随着用户下拉，高度可以伸缩的 sliver header，通常为 CustomScrollView 的第一子sliver。常见的场景是微信朋友圈个人主页顶部图下拉时的弹性效果。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SliverPersistentHeaderToBox&lt;/td&gt; &#xA;   &lt;td&gt;和 [SliverPersistentHeader]功能类似，但不同是[SliverPersistentHeaderToBox] 能够直接包含一个盒模型子组件（Box widget），并且高度会使用子组件高度。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SliverHeaderDelegate&lt;/td&gt; &#xA;   &lt;td&gt;[SliverPersistentHeader] 的帮助类，用于快速创建delegate 。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SlideTransitionX&lt;/td&gt; &#xA;   &lt;td&gt;实现同向滑动效果，通常和[AnimatedSwitcher]一起使用，具体效果见示例demo.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TranslateWithExpandedPaintingArea&lt;/td&gt; &#xA;   &lt;td&gt;可以将子组件沿着某个方向平移x像素，平移后，反方向不会出现空白。原理是该组件允许子组件的绘制空间大小在平移方向超过当前显示空间x像素。具体效果见示例demo.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TurnBox&lt;/td&gt; &#xA;   &lt;td&gt;可按任意角度旋转子组件，旋转过程执行动画。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WaterMark&lt;/td&gt; &#xA;   &lt;td&gt;水印组件&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tools&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExtraInfoBoxConstraints&lt;/td&gt; &#xA;   &lt;td&gt;可以传递额外信息的 BoxConstraints。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SafeValueNotifier&lt;/td&gt; &#xA;   &lt;td&gt;在build/layout/paint 阶段发出通知时也能确保ValueListenableBuilder正常更新。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RenderObjectAnimationMixin&lt;/td&gt; &#xA;   &lt;td&gt;如果要在RenderObject中执行动画，则该mixin会非常有用，它封装了动画调度功能。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Demo部分截图（只有极少数有图片，待补充）&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/flutterchina/flukit/main/docs/images/quick_scroll_bar.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/flutterchina/flukit/main/docs/images/animated_rotation_box.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/flutterchina/flukit/main/docs/images/gradient_circular_progress_indicator.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/flutterchina/flukit/main/docs/images/swiper.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/flutterchina/flukit/main/docs/images/photoview.gif&#34; width=&#34;320&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/flutterchina/flukit/main/docs/images/raised_button.png&#34; width=&#34;320&#34;&gt; &#xA;&lt;h2&gt;贡献代码须知&lt;/h2&gt; &#xA;&lt;h3&gt;工程目录&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;flukit&#xA;&#x9;--lib           //示例目录&#xA;&#x9;--package_src&#xA;&#x9;  --lib&#xA;&#x9;   --example&#xA;&#x9;   --src  //widget库目录&#xA;&#x9;--docs //文档目录，文档必须是markdown格式&#xA;      --images //文档用到的图片都放在这里，如截图&#xA;      --chs //中文文档目录&#xA;      --en //英文文档目录&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;运行Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flutterchina/flukit/tree/main/package_src/lib/example&#34;&gt;示例目录&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;flutter run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;strong&gt;提交代码须知&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;如果你添加了一个组件，请遵循如下规则：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;尽可能多的添加注释，文档注释为三斜线&#34;///&#34;&lt;/li&gt; &#xA; &lt;li&gt;添加一个新的Widget后，请在Demo目录添加使用示例，示例应该纯净无干扰，如果一个widget需要多个示例，可以创建一个二级页面，可以参照水印组件 WaterMark 的示例。&lt;/li&gt; &#xA; &lt;li&gt;如果可以，请尽可能在doc 目录下为widget添加使用文档，文档必须是markdown格式，文档名应与widget文件名同名&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>niuhuan/jenny</title>
    <updated>2023-02-19T01:50:14Z</updated>
    <id>tag:github.com,2023-02-19:/niuhuan/jenny</id>
    <link href="https://github.com/niuhuan/jenny" rel="alternate"></link>
    <summary type="html">&lt;p&gt;禁漫天堂jasmine的美化版，使用前请注册好账号，登不上别挂梯子试试换分流&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jenny Comic&lt;/h1&gt; &#xA;&lt;p&gt;A comic browser，support Android / iOS / MacOS / Windows / Linux.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;This APP has restricted content&lt;/li&gt; &#xA; &lt;li&gt;Please know local laws before using these codes&lt;/li&gt; &#xA; &lt;li&gt;The owner of the repo will not release these codes and its assets to the community outside github&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Comics &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Comic categories&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Comic reader&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Comic search&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Comic favours&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Histories&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cache comic&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Games&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Community &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; List comments&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Send comments&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; User &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Login / Register&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Devices adaptation &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Android&#39;s high frequency screen&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Technical architecture&lt;/h2&gt; &#xA;&lt;p&gt;Flutter: high-performance UI&lt;/p&gt; &#xA;&lt;p&gt;Rust: High performance service&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niuhuan/jenny/main/images/technologies.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Please follow the rules&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;These codes can only be learned and used, and are prohibited for commercial use&lt;/li&gt; &#xA; &lt;li&gt;Do not send Assets to anyone&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>