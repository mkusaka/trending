<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-20T01:41:21Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>isar/isar</title>
    <updated>2022-11-20T01:41:21Z</updated>
    <id>tag:github.com,2022-11-20:/isar/isar</id>
    <link href="https://github.com/isar/isar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Extremely fast, easy to use, and fully async NoSQL database for Flutter&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://isar.dev&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/isar/isar/main/.github/assets/isar.svg?sanitize=true&#34; height=&#34;128&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Isar Database&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/isar&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/v/isar?label=pub.dev&amp;amp;labelColor=333940&amp;amp;logo=dart&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/isar/isar/actions/workflows/test.yml&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/isar/isar/Dart%20CI/main?label=tests&amp;amp;labelColor=333940&amp;amp;logo=github&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/isar/isar&#34;&gt; &lt;img src=&#34;https://img.shields.io/codecov/c/github/isar/isar?logo=codecov&amp;amp;logoColor=fff&amp;amp;labelColor=333940&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://t.me/isardb&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=join&amp;amp;message=isardb&amp;amp;labelColor=333940&amp;amp;logo=telegram&amp;amp;logoColor=white&amp;amp;color=229ED9&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/simonleier&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/simonleier?style=flat&amp;amp;label=Follow&amp;amp;color=1DA1F2&amp;amp;labelColor=333940&amp;amp;logo=twitter&amp;amp;logoColor=fff&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://isar.dev&#34;&gt;Quickstart&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://isar.dev/schema&#34;&gt;Documentation&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://github.com/isar/isar/tree/main/examples/&#34;&gt;Sample Apps&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://github.com/isar/isar/discussions&#34;&gt;Support &amp;amp; Ideas&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://pub.dev/packages/isar&#34;&gt;Pub.dev&lt;/a&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;Isar [ee-zahr]:&lt;/h4&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;River in Bavaria, Germany.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/isar/isar/main/#benchmarks&#34;&gt;Crazy fast&lt;/a&gt; NoSQL database that is a joy to use.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üíô &lt;strong&gt;Made for Flutter&lt;/strong&gt;. Easy to use, no config, no boilerplate&lt;/li&gt; &#xA; &lt;li&gt;üöÄ &lt;strong&gt;Highly scalable&lt;/strong&gt; The sky is the limit (pun intended)&lt;/li&gt; &#xA; &lt;li&gt;üç≠ &lt;strong&gt;Feature rich&lt;/strong&gt;. Composite &amp;amp; multi-entry indexes, query modifiers, JSON support etc.&lt;/li&gt; &#xA; &lt;li&gt;‚è± &lt;strong&gt;Asynchronous&lt;/strong&gt;. Parallel query operations &amp;amp; multi-isolate support by default&lt;/li&gt; &#xA; &lt;li&gt;ü¶Ñ &lt;strong&gt;Open source&lt;/strong&gt;. Everything is open source and free forever!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Isar database can do much more (and we are just getting started)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üïµÔ∏è &lt;strong&gt;Full-text search&lt;/strong&gt;. Make searching fast and fun&lt;/li&gt; &#xA; &lt;li&gt;üì± &lt;strong&gt;Multiplatform&lt;/strong&gt;. iOS, Android, Desktop and FULL WEB SUPPORT!&lt;/li&gt; &#xA; &lt;li&gt;üß™ &lt;strong&gt;ACID semantics&lt;/strong&gt;. Rely on database consistency&lt;/li&gt; &#xA; &lt;li&gt;üíÉ &lt;strong&gt;Static typing&lt;/strong&gt;. Compile-time checked and autocompleted queries&lt;/li&gt; &#xA; &lt;li&gt;‚ú® &lt;strong&gt;Beautiful documentation&lt;/strong&gt;. Readable, easy to understand and ever-improving&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Join the &lt;a href=&#34;https://t.me/isardb&#34;&gt;Telegram group&lt;/a&gt; for discussion and sneak peaks of new versions of the db.&lt;/p&gt; &#xA;&lt;p&gt;If you want to say thank you, star us on GitHub and like us on pub.dev üôåüíô&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Holy smokes you&#39;re here! Let&#39;s get started on using the coolest Flutter database out there...&lt;/p&gt; &#xA;&lt;h3&gt;1. Add to pubspec.yaml&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;isar_version: &amp;amp;isar_version 3.0.4 # define the version to be used&#xA;&#xA;dependencies:&#xA;  isar: *isar_version&#xA;  isar_flutter_libs: *isar_version # contains Isar Core&#xA;&#xA;dev_dependencies:&#xA;  isar_generator: *isar_version&#xA;  build_runner: any&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Annotate a Collection&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;part &#39;email.g.dart&#39;;&#xA;&#xA;@collection&#xA;class Email {&#xA;  Id id = Isar.autoIncrement; // you can also use id = null to auto increment&#xA;&#xA;  @Index(type: IndexType.value)&#xA;  String? title;&#xA;&#xA;  List&amp;lt;Recipient&amp;gt;? recipients;&#xA;&#xA;  @enumerated&#xA;  Status status = Status.pending;&#xA;}&#xA;&#xA;@embedded&#xA;class Recipient {&#xA;  String? name;&#xA;&#xA;  String? address;&#xA;}&#xA;&#xA;enum Status {&#xA;  draft,&#xA;  pending,&#xA;  sent,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Open a database instance&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final isar = await Isar.open([EmailSchema]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Query the database&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final emails = await isar.emails.filter()&#xA;  .titleContains(&#39;awesome&#39;, caseSensitive: false)&#xA;  .sortByStatusDesc()&#xA;  .limit(10)&#xA;  .findAll();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Isar Database Inspector&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/isar/isar/releases/latest&#34;&gt;Isar Inspector&lt;/a&gt; allows you to inspect the Isar instances &amp;amp; collections of your app in real-time. You can execute queries, edit properties, switch between instances and sort the data.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/isar/isar/main/.github/assets/inspector.gif&#34;&gt; &#xA;&lt;h2&gt;CRUD operations&lt;/h2&gt; &#xA;&lt;p&gt;All basic crud operations are available via the &lt;code&gt;IsarCollection&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final newEmail = Email()..title = &#39;Amazing new database&#39;;&#xA;&#xA;await isar.writeTxn(() {&#xA;  await isar.emails.put(newEmail); // insert &amp;amp; update&#xA;});&#xA;&#xA;final existingEmail = await isar.emails.get(newEmail.id!); // get&#xA;&#xA;await isar.writeTxn(() {&#xA;  await isar.emails.delete(existingEmail.id!); // delete&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Database Queries&lt;/h2&gt; &#xA;&lt;p&gt;Isar database has a powerful query language that allows you to make use of your indexes, filter distinct objects, use complex &lt;code&gt;and()&lt;/code&gt;, &lt;code&gt;or()&lt;/code&gt; and &lt;code&gt;.xor()&lt;/code&gt; groups, query links and sort the results.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final importantEmails = isar.emails&#xA;  .where()&#xA;  .titleStartsWith(&#39;Important&#39;) // use index&#xA;  .limit(10)&#xA;  .findAll()&#xA;&#xA;final specificEmails = isar.emails&#xA;  .filter()&#xA;  .recipient((q) =&amp;gt; q.nameEqualTo(&#39;David&#39;)) // query embedded objects&#xA;  .or()&#xA;  .titleMatches(&#39;*university*&#39;, caseSensitive: false) // title containing &#39;university&#39; (case insensitive)&#xA;  .findAll()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Database Watchers&lt;/h2&gt; &#xA;&lt;p&gt;With Isar database, you can watch collections, objects, or queries. A watcher is notified after a transaction commits successfully and the target actually changes. Watchers can be lazy and not reload the data or they can be non-lazy and fetch new results in the background.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Stream&amp;lt;void&amp;gt; collectionStream = isar.emails.watchLazy();&#xA;&#xA;Stream&amp;lt;List&amp;lt;Post&amp;gt;&amp;gt; queryStream = importantEmails.watch();&#xA;&#xA;queryStream.listen((newResult) {&#xA;  // do UI updates&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;Benchmarks only give a rough idea of the performance of a database but as you can see, Isar NoSQL database is quite fast üòá&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/isar/isar/main/.github/assets/benchmarks/insert.png&#34; width=&#34;100%&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/isar/isar/main/.github/assets/benchmarks/query.png&#34; width=&#34;100%&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/isar/isar/main/.github/assets/benchmarks/delete.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/isar/isar/main/.github/assets/benchmarks/size.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you are interested in more benchmarks or want to check how Isar performs on your device you can run the &lt;a href=&#34;https://github.com/isar/isar_benchmark&#34;&gt;benchmarks&lt;/a&gt; yourself.&lt;/p&gt; &#xA;&lt;h2&gt;Unit tests&lt;/h2&gt; &#xA;&lt;p&gt;If you want to use Isar database in unit tests or Dart code, call &lt;code&gt;await Isar.initializeIsarCore(download: true)&lt;/code&gt; before using Isar in your tests.&lt;/p&gt; &#xA;&lt;p&gt;Isar NoSQL database will automatically download the correct binary for your platform. You can also pass a &lt;code&gt;libraries&lt;/code&gt; map to adjust the download location for each platform.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to use &lt;code&gt;flutter test -j 1&lt;/code&gt; to avoid tests running in parallel. This would break the automatic download.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; &#xA;&lt;p&gt;Big thanks go to these wonderful people:&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/AlexisL61&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/30233189?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/buraktabn&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/49204989?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Burak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/CarloDotLog&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/13763473?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Carlo Loguercio&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Frostedfox&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/84601232?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frostedfox&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/hafeezrana&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/87476445?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hafeez Rana&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/h1376h&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3498335?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hamed H.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Jtplouffe&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/32107801?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JT&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ritksm&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/111809?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jack Rivers&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nohli&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/43643339?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joachim Nohl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/vothvovo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20894472?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Johnson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/VoidxHoshi&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/55886143?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;LaLucid&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/lodisy&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/8101584?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Moseco&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10720298?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Moseco&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/inkomomutane&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/57417802?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nelson Mutane&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Viper-Bit&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/24822764?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peyman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/leisim&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/13610195?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Simon Leier&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ika020202&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/42883378?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ura&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/blendthink&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/32213113?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;blendthink&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mnkeis&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/41247357?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mnkeis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This database project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind are welcome!&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2022 Simon Leier&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>jiangtian616/JHenTai</title>
    <updated>2022-11-20T01:41:21Z</updated>
    <id>tag:github.com,2022-11-20:/jiangtian616/JHenTai</id>
    <link href="https://github.com/jiangtian616/JHenTai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cross-platform app made for e-hentai &amp; exhentai by Flutter&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Platform-Android%20%7C%20iOS%20%7C%20Windows%20%7C%20MacOS%20%7C%20Linux-brightgreen&#34; alt=&#34;platform&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/jiangtian616/JHenTai&#34; alt=&#34;last-commit&#34;&gt; &lt;a href=&#34;https://github.com/jiangtian616/JHenTai/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/jiangtian616/JHenTai/total&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jiangtian616/JHenTai/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/jiangtian616/JHenTai/latest/total&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jiangtian616/JHenTai/issues/new&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-issue-brightgreen&#34; alt=&#34;issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;mailto:jiangtian616@qq.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-mail-brightgreen&#34; alt=&#34;mail&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;JHenTai&lt;/h1&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://github.com/jiangtian616/JHenTai/raw/master/README_cn.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;An E-Hentai app for Android &amp;amp; iOS &amp;amp; Windows &amp;amp; MacOS &amp;amp; Linux.&lt;/p&gt; &#xA;&lt;p&gt;Still in development stage, welcome to submit issues or feature requests.&lt;/p&gt; &#xA;&lt;h2&gt;Download &amp;amp; Install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jiangtian616/JHenTai/releases&#34;&gt;Download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install for Android: download .apk according to your device architecture and install.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;arm64-v8aÔºöSuitable for Android phones with 8th generation ARM processor(common choice)&lt;/li&gt; &#xA; &lt;li&gt;armeabiv-v7aÔºöSuitable for Android phones with 7th generation ARM processor&lt;/li&gt; &#xA; &lt;li&gt;x86_64Ôºörare&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install for iOS: download .ipa, then use &lt;a href=&#34;https://altstore.io&#34;&gt;AltStore&lt;/a&gt; or SideLoadly to sign.&lt;/p&gt; &#xA;&lt;p&gt;Install for Windows: download Windows_xxx.zip, then unpack it. If you use a proxy server, set proxy address at network setting page. If you&#39;re using Windows 11 and can&#39;t launch app, try to run jhentai.exe in compatibility mode. If it&#39;s blocked by Windows Defender, Please trust it.&lt;/p&gt; &#xA;&lt;p&gt;Install for MacOS: download .dmg. If you use a proxy server, set proxy address at network setting page.&lt;/p&gt; &#xA;&lt;p&gt;Install for Linux(No maintenance): download Linux_xxx.zip, then unpack it. If you use a proxy server, set proxy address at network setting page.&lt;/p&gt; &#xA;&lt;h2&gt;Help With Translation&lt;/h2&gt; &#xA;&lt;p&gt;Please submit a PR if you want to help with translation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jiangtian616/JHenTai#Translation&#34;&gt;steps&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Develop Motivation&lt;/h2&gt; &#xA;&lt;p&gt;My first project With Flutter. I aim at getting familiar with Flutter during development. Devices I use include Android phone, Ipad and Windows computer. E-hentai apps I used before have several bugs, and I don&#39;t understand source code because I have no development experience with Android or ios, so I choose JHenTai to become my first Flutter Project.&lt;/p&gt; &#xA;&lt;p&gt;2022.08.20 After five months of development, JHenTai has gradually become more and more strong, and I have completely refactored some codes for gallery page, reading page, download, etc. which are written at the beginning stage. I tried my best to extract the commonality between different page and style to reduce coupling, in order to benefit the development of new features. I would be very grateful if any kind of you could give me some advice on coding style, design patterns and anything related to Flutter development or participate in the development of JHenTai.&lt;/p&gt; &#xA;&lt;p&gt;2022.10.29 I have been more familiar with basic Flutter development, and I&#39;ll focus on another area from now on. So updates for JHenTai will be less than previous, but I&#39;ll still handle bugs or issues in time„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;References &amp;amp; Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Layout and style references:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/honjow/FEhViewer&#34;&gt;FEhviewer&lt;/a&gt; : Mainly&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tatsuz0u/EhPanda&#34;&gt;EHPanda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/NekoInverter/EhViewer&#34;&gt;EHViewer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Tag translation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EhTagTranslation/Database&#34;&gt;EhTagTranslation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;App translationÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/andyching168&#34;&gt;andyching168&lt;/a&gt; ÁπÅÈ´î‰∏≠Êñá(Âè∞ÁÅ£)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucas-04&#34;&gt;lucas-04&lt;/a&gt; Portugu√™s brasileiro&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;mush thanks to these projects and peopleüôá‚Äç&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h3&gt;Mobile Layout&lt;/h3&gt; &#xA;&lt;img width=&#34;250&#34; style=&#34;margin-right:10px&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/mobile_v2_en.jpg&#34;&gt; &#xA;&lt;h3&gt;Tablet Layout&lt;/h3&gt; &#xA;&lt;img width=&#34;770&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/tabletV2_en.png&#34;&gt; &#xA;&lt;h3&gt;Desktop Layout&lt;/h3&gt; &#xA;&lt;img width=&#34;770&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/desktop.png&#34;&gt; &#xA;&lt;h3&gt;Gallery &amp;amp; Search&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img width=&#34;250&#34; style=&#34;margin-right:10px&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/mobile_v2_en.jpg&#34;&gt; &lt;img width=&#34;250&#34; style=&#34;margin-right:10px&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/search_mobile_v2_en.jpg&#34;&gt; &lt;img width=&#34;250&#34; style=&#34;margin-right:10px&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/search_mobile_v2_zh_2.jpg&#34;&gt; &lt;img width=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/search_filter_en.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gallery Detail&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img width=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/detail_en.jpg&#34; style=&#34;margin-right:10px&#34;&gt; &lt;img width=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/torrent_en.jpg&#34; style=&#34;margin-right:10px&#34;&gt; &lt;img width=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/archive_en.jpg&#34; style=&#34;margin-right:10px&#34;&gt; &lt;img width=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/stat_en.jpg&#34; style=&#34;margin-right:10px&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Setting &amp;amp; Download&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img width=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/setting_en.jpg&#34; style=&#34;margin-right:10px&#34;&gt; &lt;img width=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/download_en.jpg&#34; style=&#34;margin-right:10px&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Read&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img width=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/read.jpg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/read_double_column.png&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/jiangtian616/JHenTai/master/screenshot/read_continuous_scroll.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Main Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Mobile, tablet, desktop layout(3 kinds)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Vertical, horizontal, double column read page layout(4 kinds)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; GalleryPage, Popular, Favorite, Watched, History, support multiple gallery list style&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; search, search suggestion, tap tag to search, file search, jump to a certain page&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; online reading and download, support restore download task, support synchronize updates after the uploader has uploaded a new version&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; archive download and automatic unpacking and reading&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; support loading local images and read&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; support assign priority to download task manually&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; support assign group to gallery and archive&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; favorite, rating, torrent, archive, statistics, share&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; password login, Cookie login, web login&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; support EX site(domain fronting optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; vote for Tag, watch and hidden tags&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; comment, vote for comment&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fingerprint unlock&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support shortcut keys like &#39;Tab&#39; and &#39;Arrow keys&#39; in desktop layout&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/unicode-org/cldr/raw/master/common/validity/language.xml&#34;&gt;languageCode&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/unicode-org/cldr/raw/master/common/validity/region.xml&#34;&gt;countryCode&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;/lib/src/l18n/en_US.dart &lt;/code&gt; and rename to &lt;code&gt;{your_languageCode}_{your_countryCode}.dart&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rename classname in new file(optional)&lt;/li&gt; &#xA; &lt;li&gt;Modify k-v pairs in method &lt;code&gt;keys&lt;/code&gt; ,translate values to your language&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now you can submit your PR, I&#39;ll do the remaining things. Or you can go on with:&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;/lib/src/l18n/locale_text.dart &lt;/code&gt; , add a new k-v pair in method &lt;code&gt;keys&lt;/code&gt; =&amp;gt; &lt;code&gt;{your_languageCode}_{your_countryCode} : {your_className}.keys()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;/lib/src/consts/locale_consts.dart&lt;/code&gt;, add a new k-v pair in property &lt;code&gt;localeCode2Description&lt;/code&gt;: &lt;code&gt;{your_languageCode}_{your_countryCode} : {languageDescription}&lt;/code&gt; to describe your language.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Bug&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Operations related to the clipboard may not work properly on Samsung devices due to a bug in Flutter itself.&lt;/li&gt; &#xA; &lt;li&gt;Change download path to SD card is not supported now.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;About compiling&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You need to manage your Android signing by yourself, check &lt;a href=&#34;https://docs.flutter.dev/deployment/android#signing-the-app&#34;&gt;https://docs.flutter.dev/deployment/android#signing-the-app&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Main Dart Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.flutter-io.cn/packages/get&#34;&gt;get&lt;/a&gt;: dependency management, state management, l18n, NoSQL&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.flutter-io.cn/packages?q=dio&#34;&gt;dio&lt;/a&gt;: network&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.flutter-io.cn/packages/extended_image&#34;&gt;extendedImage&lt;/a&gt;: image&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.flutter-io.cn/packages/drift&#34;&gt;drift&lt;/a&gt;: database&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>flutter/samples</title>
    <updated>2022-11-20T01:41:21Z</updated>
    <id>tag:github.com,2022-11-20:/flutter/samples</id>
    <link href="https://github.com/flutter/samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of Flutter examples and demos&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter samples&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flutter/samples/actions?workflow=Main%20Branch%20CI&#34;&gt;&lt;img src=&#34;https://github.com/flutter/samples/workflows/Main%20Branch%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A collection of open source samples that illustrate best practices for &lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Visual samples index&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to browse through the samples in this repo (as well as a few others!) is the &lt;a href=&#34;https://flutter.github.io/samples&#34;&gt;visual samples index&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tip: minimize download size&lt;/h2&gt; &#xA;&lt;p&gt;As this repository is quite big, you can use svn to download a single example. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;svn co https://github.com/flutter/samples/trunk/provider_shopper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use a &lt;a href=&#34;https://github.blog/2020-12-21-get-up-to-speed-with-partial-clone-and-shallow-clone/&#34;&gt;partial clone&lt;/a&gt; to skip blob objects that aren&#39;t currently checked out, while including the full commit history:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --filter=blob:none https://github.com/flutter/samples.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Interested in contributing?&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/flutter/samples/main/CONTRIBUTING.md&#34;&gt;contributor&#39;s guide&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Questions or issues?&lt;/h2&gt; &#xA;&lt;p&gt;If you have a general question about one of these samples or how to adapt its techniques for one of your own apps, try one of these resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/flutter-dev&#34;&gt;The FlutterDev Google Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitter.im/flutter/flutter&#34;&gt;The Flutter Gitter channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/flutter&#34;&gt;StackOverflow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you run into a bug in one of the samples, please file an issue in the &lt;a href=&#34;https://github.com/flutter/samples/issues&#34;&gt;&lt;code&gt;flutter/samples&lt;/code&gt; issue tracker&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>