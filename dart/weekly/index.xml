<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-29T01:53:04Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>niuhuan/wax</title>
    <updated>2023-01-29T01:53:04Z</updated>
    <id>tag:github.com,2023-01-29:/niuhuan/wax</id>
    <link href="https://github.com/niuhuan/wax" rel="alternate"></link>
    <summary type="html">&lt;p&gt;“绅士漫画”的客户端&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;wax&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/niuhuan/wax/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/niuhuan/wax&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/niuhuan/wax/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/niuhuan/wax&#34; alt=&#34;releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/niuhuan/wax/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/niuhuan/wax/total&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;美观易用且无广告的漫画客户端, 能运行在Windows/MacOS/Linux/Android/IOS中。&lt;/li&gt; &#xA; &lt;li&gt;此APP内容存在限制级别内容(例如 露骨/血腥/暴力/吸毒)，18岁以下的用户需在监护人陪同下使用，并请您在遵守当地法律法规。&lt;/li&gt; &#xA; &lt;li&gt;您的star和issue是对开发者的莫大鼓励, 可以源仓库下载最新的源码/安装包, 表示支持/提出建议。&lt;/li&gt; &#xA; &lt;li&gt;源仓库地址 &lt;a href=&#34;https://github.com/niuhuan/wax&#34;&gt;https://github.com/niuhuan/wax&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;技术架构&lt;/h2&gt; &#xA;&lt;h3&gt;多平台适配&lt;/h3&gt; &#xA;&lt;p&gt;这个应用程序使用golang和dart(flutter)作为主要语言, 可以兼容Windows, linux, MacOS, Android, IOS&lt;/p&gt; &#xA;&lt;p&gt;使用了不同的框架桥接到桌面和移动平台上&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;go-flutter =&amp;gt; Windows / MacOS / Linux&lt;/li&gt; &#xA; &lt;li&gt;gomobile =&amp;gt; Android / IOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;构建环境&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;golang&lt;/a&gt; (1.16)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/&#34;&gt;flutter&lt;/a&gt; (2.10.3)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;请您遵守使用规则&lt;/h2&gt; &#xA;&lt;p&gt;软件副本分发规则&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本软件仅供学习交流使用, 本软件或本软件的拓展, 个人或企业不可用于商业用途, 不可上架任何商店&lt;/li&gt; &#xA; &lt;li&gt;不要在任何其他 &lt;strong&gt;二次元软件&lt;/strong&gt; 的 &lt;strong&gt;聊天社区&lt;/strong&gt; 或 &lt;strong&gt;开发社区&lt;/strong&gt; 内, 发布有关本软件的链接或信息&lt;/li&gt; &#xA; &lt;li&gt;不要发送本软件安装包到 &lt;strong&gt;任何社区内&lt;/strong&gt; , 不要将APK/IPA/ZIP/DMG发送包括任何聊天软件内的群聊功能。 分享本软件时, 在社区中使用Github中提供的Releases页面的链接, 或使用私聊窗口发送。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;拓展包括但是不限于以下内容&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用本软件进行继续开发形成的软件。&lt;/li&gt; &#xA; &lt;li&gt;引入本软件部分内容为依赖/参考本软件/使用本软件内代码的同时, 包含本软件内一致内容或功能的软件。&lt;/li&gt; &#xA; &lt;li&gt;直接对本软件进行打包发布&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;责任声明&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;作者仅分享编程技术, 不分发软件, 不对分发软件承担任何后果。 因传播或下载造成的法律问题或纠纷, 需行为人自行承担, 请您遵守当地法以及副本接受方(社区或人)所在地区的法律。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jamesblasco/modal_bottom_sheet</title>
    <updated>2023-01-29T01:53:04Z</updated>
    <id>tag:github.com,2023-01-29:/jamesblasco/modal_bottom_sheet</id>
    <link href="https://github.com/jamesblasco/modal_bottom_sheet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter | Create advanced modal bottom sheets. Material, Cupertino or your own style&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://jamesblasco.github.io/modal_bottom_sheet/#/&#34;&gt;&lt;img src=&#34;https://github.com/jamesblasco/modal_bottom_sheet/raw/screenshots/preview.png?raw=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;A modal bottom sheet for your Flutter app&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Solido/awesome-flutter&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&amp;amp;style=flat-square&#34; alt=&#34;Awesome Flutter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/modal_bottom_sheet&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/modal_bottom_sheet.svg?logo=flutter&amp;amp;color=blue&amp;amp;style=flat-square&#34; alt=&#34;Pub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check the package &lt;a href=&#34;https://github.com/jamesblasco/modal_bottom_sheet/tree/main/modal_bottom_sheet&#34;&gt;README&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;h3&gt;Sheet (Experimental)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jamesblasco/modal_bottom_sheet/tree/main/sheet&#34;&gt;Sheet&lt;/a&gt; is a new package that reimplements the modal bottom sheet behavior from scratch. It is expected to be easier to use, more performant, more stable, more customaziable and with more features. It is used in several released apps already. If you want to be part of it, I encourge you to give it a try and provide any feedback you might have :)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bizz84/starter_architecture_flutter_firebase</title>
    <updated>2023-01-29T01:53:04Z</updated>
    <id>tag:github.com,2023-01-29:/bizz84/starter_architecture_flutter_firebase</id>
    <link href="https://github.com/bizz84/starter_architecture_flutter_firebase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Time Tracking app with Flutter &amp; Firebase&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Time Tracking app with Flutter &amp;amp; Firebase&lt;/h1&gt; &#xA;&lt;p&gt;A time tracking application built with Flutter &amp;amp; Firebase:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bizz84/starter_architecture_flutter_firebase/master/.github/images/time-tracker-screenshots.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is intended as a &lt;strong&gt;reference app&lt;/strong&gt; based on my &lt;a href=&#34;https://codewithandrea.com/articles/flutter-app-architecture-riverpod-introduction/&#34;&gt;Riverpod Architecture&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this project used to be called &#34;Started Architecture for Flutter &amp;amp; Firebase&#34; (based on this &lt;a href=&#34;https://codewithandrea.com/videos/starter-architecture-flutter-firebase/&#34;&gt;old article&lt;/a&gt;). As of January 2023, it follows my updated &lt;a href=&#34;https://codewithandrea.com/articles/flutter-app-architecture-riverpod-introduction/&#34;&gt;Riverpod Architecture&lt;/a&gt;, using the latest packages.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Flutter web preview&lt;/h2&gt; &#xA;&lt;p&gt;A Flutter web preview of the app is available here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://starter-architecture-flutter.web.app&#34;&gt;Time Tracker | Flutter web demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple onboarding page&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Full authentication flow&lt;/strong&gt; (using email &amp;amp; password)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Jobs&lt;/strong&gt;: users can view, create, edit, and delete their own private jobs (each job has a name and hourly rate)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Entries&lt;/strong&gt;: for each job, user can view, create, edit, and delete the corresponding entries (an entry is a task with a start and end time, with an optional comment)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;A report page&lt;/strong&gt; that shows a daily breakdown of all jobs, hours worked and pay, along with the totals.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All the data is persisted with Firestore and is kept in sync across multiple devices.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add missing tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Stateful Nested Navigation with GoRouter (once &lt;a href=&#34;https://github.com/flutter/packages/pull/2650&#34;&gt;this PR&lt;/a&gt; is merged)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Use controllers / notifiers consistently across the app (some code still needs to be updated)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add localization&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Use the new Firebase UI packages where useful&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Responsive UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a tentative roadmap. There is no ETA for any of the points above. This is a low priority project and I don&#39;t have much time to maintain it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Relevant Articles&lt;/h2&gt; &#xA;&lt;p&gt;The app is based on my Flutter Riverpod architecture, which is explained in detail here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codewithandrea.com/articles/flutter-app-architecture-riverpod-introduction/&#34;&gt;Flutter App Architecture with Riverpod: An Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codewithandrea.com/articles/flutter-project-structure/&#34;&gt;Flutter Project Structure: Feature-first or Layer-first?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codewithandrea.com/articles/flutter-repository-pattern/&#34;&gt;Flutter App Architecture: The Repository Pattern&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More more info on Riverpod, read this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codewithandrea.com/articles/flutter-state-management-riverpod/&#34;&gt;Flutter Riverpod 2.0: The Ultimate Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Packages in use&lt;/h2&gt; &#xA;&lt;p&gt;These are the main packages used in the app:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/flutter_riverpod&#34;&gt;Flutter Riverpod&lt;/a&gt; for data caching, dependency injection, and more&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/go_router&#34;&gt;GoRouter&lt;/a&gt; for navigation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/firebase_auth&#34;&gt;Firebase Auth&lt;/a&gt; for authentication&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/cloud_firestore&#34;&gt;Cloud Firestore&lt;/a&gt; as a realtime database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/rxdart&#34;&gt;RxDart&lt;/a&gt; for combining multiple Firestore collections as needed&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/intl&#34;&gt;Intl&lt;/a&gt; for currency, date, time formatting&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/mocktail&#34;&gt;Mocktail&lt;/a&gt; for testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/packages/equatable&#34;&gt;Equatable&lt;/a&gt; to reduce boilerplate code in model classes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/bizz84/starter_architecture_flutter_firebase/master/pubspec.yaml&#34;&gt;pubspec.yaml&lt;/a&gt; file for the complete list.&lt;/p&gt; &#xA;&lt;h2&gt;Running the project with Firebase&lt;/h2&gt; &#xA;&lt;p&gt;To use this project with Firebase, follow these steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a new project with the Firebase console&lt;/li&gt; &#xA; &lt;li&gt;Enable Firebase Authentication, along with the Email/Password Authentication Sign-in provider in the Firebase Console (Authentication &amp;gt; Sign-in method &amp;gt; Email/Password &amp;gt; Edit &amp;gt; Enable &amp;gt; Save)&lt;/li&gt; &#xA; &lt;li&gt;Enable Cloud Firestore&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, follow one of the two approaches below. 👇&lt;/p&gt; &#xA;&lt;h3&gt;1. Using the CLI&lt;/h3&gt; &#xA;&lt;p&gt;Make sure you have the Firebase CLI and &lt;a href=&#34;https://pub.dev/packages/flutterfire_cli&#34;&gt;FlutterFire CLI&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;p&gt;Then run this on the terminal from the root of this project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;firebase login&lt;/code&gt; so you have access to the Firebase project you have created&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;flutterfire configure&lt;/code&gt; and follow all the steps&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more info, follow this guide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codewithandrea.com/articles/flutter-firebase-flutterfire-cli/&#34;&gt;How to add Firebase to a Flutter app with FlutterFire CLI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. Manual way (not recommended)&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t want to use FlutterFire CLI, follow these steps instead:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Register separate iOS, Android, and web apps in the Firebase project settings.&lt;/li&gt; &#xA; &lt;li&gt;On Android, use &lt;code&gt;com.example.starter_architecture_flutter_firebase&lt;/code&gt; as the package name.&lt;/li&gt; &#xA; &lt;li&gt;then, &lt;a href=&#34;https://firebase.google.com/docs/flutter/setup#configure_an_android_app&#34;&gt;download and copy&lt;/a&gt; &lt;code&gt;google-services.json&lt;/code&gt; into &lt;code&gt;android/app&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;On iOS, use &lt;code&gt;com.example.starterArchitectureFlutterFirebase&lt;/code&gt; as the bundle ID.&lt;/li&gt; &#xA; &lt;li&gt;then, &lt;a href=&#34;https://firebase.google.com/docs/flutter/setup#configure_an_ios_app&#34;&gt;download and copy&lt;/a&gt; &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; into &lt;code&gt;iOS/Runner&lt;/code&gt;, and add it to the Runner target in Xcode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;That&#39;s it. Have fun!&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bizz84/starter_architecture_flutter_firebase/master/LICENSE.md&#34;&gt;License: MIT&lt;/a&gt;&lt;/h2&gt;</summary>
  </entry>
</feed>