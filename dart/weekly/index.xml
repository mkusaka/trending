<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-04T01:55:48Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bravekingzhang/flutter_chat_box</title>
    <updated>2023-06-04T01:55:48Z</updated>
    <id>tag:github.com,2023-06-04:/bravekingzhang/flutter_chat_box</id>
    <link href="https://github.com/bravekingzhang/flutter_chat_box" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter开发的和ChatGPT聊天的App，全平台支持&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flutter_chatgpt&lt;/h1&gt; &#xA;&lt;p&gt;本项目基于一个 flutter 脚手架 &lt;a href=&#34;https://github.com/bravekingzhang/flutter_template_mason&#34;&gt;https://github.com/bravekingzhang/flutter_template_mason&lt;/a&gt; ，开发的一款可以和 ChatGPT 聊天的 App！&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;全平台支持&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS ✅&lt;/li&gt; &#xA; &lt;li&gt;Linux✅&lt;/li&gt; &#xA; &lt;li&gt;Windows✅&lt;/li&gt; &#xA; &lt;li&gt;Android✅&lt;/li&gt; &#xA; &lt;li&gt;iOS✅&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;使用方法&lt;/h1&gt; &#xA;&lt;p&gt;release dir 可以直接下载 release 版本，也可以:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone the repository&lt;/li&gt; &#xA; &lt;li&gt;flutter pub get&lt;/li&gt; &#xA; &lt;li&gt;flutter build macos/linux/windows/android/ios&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;特性展示&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持代码着色&lt;/li&gt; &#xA; &lt;li&gt;代码可复制&lt;/li&gt; &#xA; &lt;li&gt;使用 stream 流式 API 请求，响应比较快&lt;/li&gt; &#xA; &lt;li&gt;清爽的 UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://github.com/bravekingzhang/flutter_chat_box/raw/main/artificial/20230324_203035.gif&#34; style=&#34;width: 80%;&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/bravekingzhang/flutter_chat_box/raw/main/artificial/20230418_143000.gif&#34; style=&#34;width: 80%;&#34;&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/4476322/228132297-e7ed7bb8-d4e5-4fae-9288-d3f08a3413cc.png&#34; style=&#34;width: 70%;&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/bravekingzhang/flutter_chat_box/raw/main/artificial/WechatIMG249.jpeg&#34; style=&#34;width: 70%;&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/bravekingzhang/flutter_chat_box/raw/main/artificial/WechatIMG250.jpeg&#34; style=&#34;width: 70%;&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/bravekingzhang/flutter_chat_box/raw/main/artificial/WechatIMG251.jpeg&#34; style=&#34;width: 70%;&#34;&gt; &#xA;&lt;h1&gt;Mobile support&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/bravekingzhang/flutter_chat_box/raw/main/artificial/20230419_102938.gif&#34; style=&#34;width: 50%;&#34;&gt; &#xA;&lt;h1&gt;支持特性&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多语言支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 单元测试&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 组件测试&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 优秀的全局数据管理方式 flutter_bloc&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; flutter_bloc_test&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 主题切换&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 统一的路由管理&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 全局状态管理&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多轮次对话&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; prompt 支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 支持 ChatGlm 等其他模型&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 一键到出会话支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 支持高级搜索&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 等你 issue 来支持&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;开源共建&lt;/h1&gt; &#xA;&lt;p&gt;让我们一起改进，把这个 App 做得更加好用一些。&lt;/p&gt; &#xA;&lt;h1&gt;加入群聊&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/bravekingzhang/flutter_chat_box/raw/main/artificial/qunliao.pic.jpg&#34; style=&#34;width: 50%;&#34;&gt; &#xA;&lt;h1&gt;给我打 call&lt;/h1&gt; &#xA;&lt;p&gt;如果你觉得对你有用，就请我一杯咖啡。&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/bravekingzhang/utools-code2flow-official/raw/main/shoukuanma.png&#34; alt=&#34;收款码&#34; style=&#34;width: 40%;&#34;&gt; &#xA;&lt;h1&gt;License: MIT&lt;/h1&gt; &#xA;&lt;p&gt;本项目采用 MIT 许可证授权。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lollipopkit/flutter_server_box</title>
    <updated>2023-06-04T01:55:48Z</updated>
    <id>tag:github.com,2023-06-04:/lollipopkit/flutter_server_box</id>
    <link href="https://github.com/lollipopkit/flutter_server_box" rel="alternate"></link>
    <summary type="html">&lt;p&gt;server status &amp; toolbox app using Flutter&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/README_zh.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- Title--&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/imgs/flutter_server_box.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;!-- Badges--&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://apps.apple.com/app/id1586449703&#34;&gt; &lt;img style=&#34;height: 37px&#34; src=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/imgs/appstore.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://count.ly/f/badge&#34; rel=&#34;nofollow&#34;&gt; &lt;img style=&#34;height: 37px&#34; src=&#34;https://count.ly/badges/dark.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/lollipopkit/flutter_server_box/releases/latest&#34;&gt; &lt;img style=&#34;height: 37px&#34; src=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/imgs/dl-android.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A Flutter project which provide charts to display &lt;a href=&#34;https://raw.githubusercontent.com/lollipopkit/issues/43&#34;&gt;Linux&lt;/a&gt; server status and tools to manage server. &lt;br&gt; Especially thanks to &lt;a href=&#34;https://github.com/TerminalStudio/dartssh2&#34;&gt;dartssh2&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/TerminalStudio/xterm.dart&#34;&gt;xterm.dart&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;h2&gt;🔖 Feature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Functions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;SSH&lt;/code&gt; Terminal, &lt;code&gt;SFTP&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;Docker &amp;amp; Pkg&lt;/code&gt; Manager&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;Status&lt;/code&gt; charts&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;Code editor&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;Ping&lt;/code&gt; and etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Localization ( English, 简体中文, Deutsch, 繁體中文. &lt;a href=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/#l10n-guide&#34;&gt;How to contribute?&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Desktop support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📩 Push&lt;/h2&gt; &#xA;&lt;p&gt;In order to push server status to your portable device without opening ServerBox app, you need to install &lt;a href=&#34;https://github.com/lollipopkit/server_box_monitor&#34;&gt;ServerBoxMonitor&lt;/a&gt; on your servers, and config &lt;code&gt;iOS / Webhook / ServerChan&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🆘 Help&lt;/h2&gt; &#xA;&lt;p&gt;If you have any question or feature request, please open a &lt;a href=&#34;https://github.com/lollipopkit/flutter_server_box/discussions/new/choose&#34;&gt;discussion&lt;/a&gt;.&lt;br&gt; If ServerBox app has any bug, please open an &lt;a href=&#34;https://github.com/lollipopkit/flutter_server_box/issues/new&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📱 ScreenShots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/imgs/server.jpeg&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/imgs/detail.jpg&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/imgs/ssh.jpg&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/imgs/editor.jpg&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/imgs/ping.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/imgs/sftp.jpeg&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/imgs/docker.jpeg&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img width=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/lollipopkit/flutter_server_box/main/imgs/convert.png&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🖥 Platform&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Full Support&lt;/td&gt; &#xA;   &lt;td&gt;Android / iOS / macOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Support, but not tested&lt;/td&gt; &#xA;   &lt;td&gt;Windows / Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;l10n guide&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork this repo and clone forked repo to your local machine.&lt;/li&gt; &#xA; &lt;li&gt;Create &lt;code&gt;arb&lt;/code&gt; file in &lt;code&gt;lib/l10n/&lt;/code&gt; directory &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;File name should be &lt;code&gt;intl_XX.arb&lt;/code&gt;, where &lt;code&gt;XX&lt;/code&gt; is the language code. Such as &lt;code&gt;intl_en.arb&lt;/code&gt; for English and &lt;code&gt;intl_zh.arb&lt;/code&gt; for Chinese.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add content to the file. You can refer to &lt;code&gt;intl_en.arb&lt;/code&gt; and &lt;code&gt;intl_zh.arb&lt;/code&gt; for the format.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;flutter gen-l10n&lt;/code&gt; to generate files.&lt;/li&gt; &#xA; &lt;li&gt;Pull commit to your forked repo.&lt;/li&gt; &#xA; &lt;li&gt;Request a pull request on my repo.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;📝 License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;GPL v3. lollipopkit 2023&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Roaa94/flutter_airbnb_ui</title>
    <updated>2023-06-04T01:55:48Z</updated>
    <id>tag:github.com,2023-06-04:/Roaa94/flutter_airbnb_ui</id>
    <link href="https://github.com/Roaa94/flutter_airbnb_ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter implementation of the Airbnb book flip UI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Implementation of AirBnb UI Interaction&lt;/h1&gt; &#xA;&lt;p&gt;Flutter implementation of the Airbnb book flip UI&lt;/p&gt; &#xA;&lt;h3&gt;Preview&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Roaa94/flutter_airbnb_ui/assets/50345358/c5a7103d-ed64-4053-814b-3220b92db170&#34;&gt;https://github.com/Roaa94/flutter_airbnb_ui/assets/50345358/c5a7103d-ed64-4053-814b-3220b92db170&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Implementation Details:&lt;/h3&gt; &#xA;&lt;p&gt;The 3D-like book flip animation is implemented with Transform widgets for 3D rotation, and a Stack that conditionally shows the side of the book cover that should be visible on top as the rotation reaches halfway.&lt;/p&gt; &#xA;&lt;img width=&#34;300&#34; src=&#34;https://github.com/Roaa94/flutter_airbnb_ui/assets/50345358/4847cfc5-657e-4649-8829-2d5b473c9950&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// book_flip.dart&#xA;Transform(&#xA;  transform: Matrix4.identity()&#xA;    ..setEntry(3, 2, 0.001)&#xA;    ..rotateY(-pi * _flipAnimation.value),&#xA;  alignment: Alignment.centerRight,&#xA;  child: Stack(&#xA;    children: [&#xA;      // Show the book cover front when the rotation is halfway&#xA;      _flipAnimation.value &amp;gt;= 0.5 &#xA;          ? Positioned.fill(&#xA;              child: Transform(&#xA;                transform: Matrix4.identity()&#xA;                  ..setEntry(3, 2, 0.001)&#xA;                  ..rotateY(-pi),&#xA;                alignment: Alignment.center,&#xA;                child: BookCoverFront(listingData),&#xA;              ),&#xA;            ) &#xA;      : Positioned.fill(&#xA;          child: BookCoverBack(listingData),&#xA;        ),&#xA;    ],&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The trick to make the Hero animation work is using that same widget in 3 places, the first in the initial page, the second is the next page, with the animation controller initially set to it’s end value of 1, and finally, the animated widget is returned from the &lt;code&gt;flightShuttleBuilder&lt;/code&gt; param of the Hero widget, and uses its animation value to run the book flip animation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// List page&#xA;Hero(&#xA;  tag: &#39;listing_hero_${listingData.id}&#39;,&#xA;  flightShuttleBuilder: (_, Animation&amp;lt;double&amp;gt; animation, __, ___, ____) {&#xA;    return ScaleTransition(&#xA;      scale: Tween&amp;lt;double&amp;gt;(begin: 0.45, end: 1).animate(animation),&#xA;      child: BookFlip( // 3️⃣&#xA;        listingData,&#xA;        animationController: animation, // This will make the Hero animation run the flip animation&#xA;      ),&#xA;    );&#xA;  },&#xA;  child: Transform.scale(&#xA;    scale: 0.45, // Make sure initial value matches the value when the animation starts ↖️&#xA;    child: BookFlip(listingData), // 1️⃣&#xA;  ),&#xA;)&#xA;  &#xA;// Details page&#xA;Hero( &#xA;  tag: &#39;listing_hero_${listing.id}&#39;,&#xA;  child: BookFlip( // 2️⃣&#xA;    listingData,&#xA;    initialFlipProgress: 1, // Hero destination widget should match the animation end state&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>