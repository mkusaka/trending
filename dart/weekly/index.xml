<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-09T01:41:41Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Notsfsssf/pixez-flutter</title>
    <updated>2022-10-09T01:41:41Z</updated>
    <id>tag:github.com,2022-10-09:/Notsfsssf/pixez-flutter</id>
    <link href="https://github.com/Notsfsssf/pixez-flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个支持免代理直连及查看动图的第三方Pixiv flutter客户端&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Notsfsssf/pixez-flutter/master/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png&#34; alt=&#34;logo&#34; width=&#34;144&#34; height=&#34;144&#34; align=&#34;right&#34;&gt; &#xA;&lt;h1&gt;PixEz Flutter &lt;img src=&#34;https://camo.githubusercontent.com/f2b4fa6779c8a4825e0e7347076746a2047ed100/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c2d2d332e302d6f72616e67652e737667&#34; alt=&#34;&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Notsfsssf/pixez-flutter/master/.github/README_en.md&#34;&gt;English README Here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;使用 Flutter 编写的 pixiv 第三方客户端。&lt;/p&gt; &#xA;&lt;p&gt;同样支持中国大陆地区直连。&lt;/p&gt; &#xA;&lt;p&gt;🎵 Mili - In Hell We Live, Lament 🎵&lt;/p&gt; &#xA;&lt;h1&gt;下载&lt;/h1&gt; &#xA;&lt;p&gt;推荐渠道顺序为从左到右。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;系统&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;应用市场&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;GitHub&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;云盘&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.perol.play.pixez&#34;&gt;Google Play&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Notsfsssf/pixez-flutter/releases&#34;&gt;Release&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://wwa.lanzoui.com/b0ded45id&#34;&gt;蓝奏云&lt;/a&gt;&lt;br&gt;&lt;strong&gt;临时，不推荐&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iOS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://apps.apple.com/us/app/pixez/id1494435126&#34;&gt;App Store(美区)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;/&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;预览&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Notsfsssf/pixez-flutter/master/.github/preview/2.jpg&#34; alt=&#34;Preview&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Notsfsssf/pixez-flutter/master/.github/preview/1.jpg&#34; alt=&#34;Preview&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;关于项目 / About Repository&lt;/h1&gt; &#xA;&lt;p&gt;如你所见，Flutter 是一个能够帮助开发者快速开发界面的框架。&lt;/p&gt; &#xA;&lt;p&gt;拥有的 Hot Reload 热重载，可以极大缩减 debug 成本，所见即所得，快速交流；&lt;/p&gt; &#xA;&lt;p&gt;利用 PlatformChannel，可以为不同平台编写不同的平台特性的独有功能；&lt;/p&gt; &#xA;&lt;p&gt;应用使用了 &lt;code&gt;mobx&lt;/code&gt;，&lt;code&gt;flutter_bloc&lt;/code&gt; (逐步弃用)，&lt;code&gt;provider&lt;/code&gt; 进行状态管理，&lt;code&gt;custompainter&lt;/code&gt; 来播放 ugoira。&lt;/p&gt; &#xA;&lt;h2&gt;贡献 / Contribute&lt;/h2&gt; &#xA;&lt;p&gt;本项目目前的贡献者列表如下：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Notsfsssf&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/16934707?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Perol_Notsfsssf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Skimige/pixez-flutter/commits?author=Notsfsssf&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://xyx.moe&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/9017470?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Skimige&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Skimige/pixez-flutter/commits?author=Skimige&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/TragicLifeHu&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/16817202?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tragic Life&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Notsfsssf/pixez-flutter/master/#translation-TragicLifeHu&#34; title=&#34;Translation&#34;&gt;🌍 (zh_TW)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://ivtune.net&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/54385201?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;karin722&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Notsfsssf/pixez-flutter/master/#translation-karin722&#34; title=&#34;Translation&#34;&gt;🌍 (ja)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://archman.fun&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/68731023?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Romani-Archman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Skimige/pixez-flutter/commits?author=Romani-Archman&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/itzXian&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/34748039?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Xian&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Notsfsssf/pixez-flutter/master/#translation-itzXian&#34; title=&#34;Translation&#34;&gt;🌍 (en_US)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;如果你是有能人士，愿意为本项目贡献代码，请不要犹豫提交 Pull Request 吧！&lt;/p&gt; &#xA;&lt;p&gt;本应用也使用了 &lt;code&gt;intl&lt;/code&gt; 进行国际化，欢迎贡献&lt;a href=&#34;https://raw.githubusercontent.com/Notsfsssf/pixez-flutter/master/lib/l10n/intl_en_US.arb&#34;&gt;翻译&lt;/a&gt;！&lt;/p&gt; &#xA;&lt;p&gt;觉得有些地方设计的不妥？同样欢迎分享设计。&lt;/p&gt; &#xA;&lt;h2&gt;常见问题及交流反馈&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Notsfsssf/pixez-flutter/master/.github/FAQ.md&#34;&gt;使用指南 &amp;amp; 常见问题在这里&lt;/a&gt;，反馈问题 / 加群询问之前请先看！（特别是旧原生版用户）&lt;/p&gt; &#xA;&lt;p&gt;邮件反馈：&lt;a href=&#34;mailto:PxezFeedback@outlook.com&#34;&gt;PxezFeedback@outlook.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;也可以在 Telegram 群交流反馈：&lt;a href=&#34;https://t.me/PixEzViewer&#34;&gt;@PixEzViewer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;也可以进企鹅群交流经验或者反馈：815791942（闲聊为主）&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>robertodevs/flutter_ecommerce_template</title>
    <updated>2022-10-09T01:41:41Z</updated>
    <id>tag:github.com,2022-10-09:/robertodevs/flutter_ecommerce_template</id>
    <link href="https://github.com/robertodevs/flutter_ecommerce_template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is an eCommerce minimalist template with a clean and beautiful design for Flutter.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.buymeacoffee.com/SaNhE76x9&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-blue.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 30px !important;width: 150px !important;&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Shope - Free Flutter eCommerce Template &lt;img src=&#34;https://img.shields.io/twitter/url?style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Froberto_devs&#34; alt=&#34;Twitter URL&#34;&gt; &lt;a href=&#34;https://github.com/robertodevs/flutter_ecommerce_template&#34;&gt;&lt;img src=&#34;https://badges.frapsoft.com/os/v2/open-source.svg?v=103&#34; alt=&#34;Open Source Love&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The “Shope” e-Commerce UI Kit has the goal to help you to save time with the frontend development. You can use this template to build your apps for Android and iOS in Flutter. The UI Kit includes all resources you need to reuse the components, it includes 38 screens, assets, icons, and fonts.&lt;/p&gt; &#xA;&lt;p&gt;Flutter is Google’s portable UI toolkit for building beautiful, natively-compiled applications for mobile, web, and desktop from a single codebase.&lt;/p&gt; &#xA;&lt;ol&gt;&#xA; &lt;li&gt;Minimalist Design&lt;/li&gt;&#xA; &lt;li&gt;Clean and Structured code&lt;/li&gt;&#xA; &lt;li&gt;Reusable Components&lt;/li&gt;&#xA;&lt;/ol&gt; &#xA;&lt;img src=&#34;assets/promotional/Mockup Intro.png&#34; alt=&#34;mockup-intro&#34;&gt; &#xA;&lt;img src=&#34;assets/promotional/Mockup Screens.png&#34; alt=&#34;mockup-screens&#34;&gt; &#xA;&lt;h2&gt;Watch the video&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/aI4AelN8k24&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/robertodevs/flutter_ecommerce_template/master/assets/promotional/youtube.png&#34; title=&#34;Shope Flutter e-Commerce&#34; alt=&#34;youtube-video&#34; style=&#34;height: 30px !important;width: 150px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download the Android APK&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.int2.ecommerce_int2&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/robertodevs/flutter_ecommerce_template/master/assets/promotional/google-play-badge.png&#34; title=&#34;Shope Flutter e-Commerce&#34; alt=&#34;youtube-video&#34; style=&#34;height: 30px !important;width: 150px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support me&lt;/h2&gt; &#xA;&lt;p&gt;If this is template is useful for you and you want to support me &lt;a href=&#34;https://www.buymeacoffee.com/SaNhE76x9&#34;&gt;buy me a coffe!&lt;/a&gt;. This will give me motivation to keep doing more content like this.&lt;/p&gt; &#xA;&lt;p&gt;Do you want to add more features? &lt;a href=&#34;https://lnk.bio/9dQ4&#34;&gt;Reach me out&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TheAlgorithms/Dart</title>
    <updated>2022-10-09T01:41:41Z</updated>
    <id>tag:github.com,2022-10-09:/TheAlgorithms/Dart</id>
    <link href="https://github.com/TheAlgorithms/Dart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All Algorithms implemented in Dart&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Algorithms - Dart&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.com/TheAlgorithms/Dart&#34;&gt;&lt;img src=&#34;https://travis-ci.com/TheAlgorithms/Dart.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.me/TheAlgorithms/100&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://gitter.im/TheAlgorithms&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/gitterHQ/gitter.png&#34; alt=&#34;Gitter chat&#34;&gt;&lt;/a&gt; &amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;All algorithms implemented in Dart (for education)&lt;/h3&gt; &#xA;&lt;p&gt;These implementations are for learning purposes. They may be less efficient than the implementations in the Dart standard library.&lt;/p&gt; &#xA;&lt;h2&gt;List of Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://github.com/TheAlgorithms/Dart/raw/master/DIRECTORY.md&#34;&gt;directory&lt;/a&gt; for full list of all algorithms. A few of the algorithms (the most common ones) are explained here.&lt;/p&gt; &#xA;&lt;h2&gt;Search Algorithms&lt;/h2&gt; &#xA;&lt;h3&gt;Linear&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://www.tutorialspoint.com/data_structures_algorithms/images/linear_search.gif&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Linear_search&#34;&gt;Wikipedia&lt;/a&gt;: linear search or sequential search is a method for finding a target value within a list. It sequentially checks each element of the list for the target value until a match is found or until all the elements have been searched. Linear search runs in at the worst linear time and makes at most n comparisons, where n is the length of the list.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(n)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(1)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(n)&lt;/li&gt; &#xA; &lt;li&gt;Worst case space complexity O(1) iterative&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Binary&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/f/f7/Binary_search_into_array.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Binary_search_algorithm&#34;&gt;Wikipedia&lt;/a&gt;: Binary search, also known as half-interval search or logarithmic search, is a search algorithm that finds the position of a target value within a sorted array. It compares the target value to the middle element of the array; if they are unequal, the half in which the target cannot lie is eliminated and the search continues on the remaining half until it is successful.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(log n)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(1)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(log n)&lt;/li&gt; &#xA; &lt;li&gt;Worst case space complexity O(1)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Sort Algorithms&lt;/h2&gt; &#xA;&lt;h3&gt;Bubble&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Bubblesort-edited-color.svg/220px-Bubblesort-edited-color.svg.png&#34; alt=&#34;alt text&#34; title=&#34;Bubble Sort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Bubble_sort&#34;&gt;Wikipedia&lt;/a&gt;: Bubble sort, sometimes referred to as sinking sort, is a simple sorting algorithm that repeatedly steps through the list to be sorted, compares each pair of adjacent items and swaps them if they are in the wrong order. The pass through the list is repeated until no swaps are needed, which indicates that the list is sorted.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(n^2)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(n)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(n^2)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;View the algorithm in &lt;a href=&#34;https://www.toptal.com/developers/sorting-algorithms/bubble-sort&#34;&gt;action&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;Insertion&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/7/7e/Insertionsort-edited.png&#34; alt=&#34;alt text&#34; title=&#34;Insertion Sort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Insertion_sort&#34;&gt;Wikipedia&lt;/a&gt;: Insertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time. It is much less efficient on large lists than more advanced algorithms such as quicksort, heapsort, or merge sort.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(n^2)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(n)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(n^2)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;View the algorithm in &lt;a href=&#34;https://www.toptal.com/developers/sorting-algorithms/insertion-sort&#34;&gt;action&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;Quick&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/6/6a/Sorting_quicksort_anim.gif&#34; alt=&#34;alt text&#34; title=&#34;Quick Sort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Quicksort&#34;&gt;Wikipedia&lt;/a&gt;: Quicksort (sometimes called partition-exchange sort) is an efficient sorting algorithm, serving as a systematic method for placing the elements of an array in order.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(n^2)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(n log n) or O(n) with three-way partition&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(n^2)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;View the algorithm in &lt;a href=&#34;https://www.toptal.com/developers/sorting-algorithms/quick-sort&#34;&gt;action&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;Selection&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/Selection_sort_animation.gif/250px-Selection_sort_animation.gif&#34; alt=&#34;alt text&#34; title=&#34;Selection Sort Sort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Selection_sort&#34;&gt;Wikipedia&lt;/a&gt;: The algorithm divides the input list into two parts: the sublist of items already sorted, which is built up from left to right at the front (left) of the list, and the sublist of items remaining to be sorted that occupy the rest of the list. Initially, the sorted sublist is empty and the unsorted sublist is the entire input list. The algorithm proceeds by finding the smallest (or largest, depending on sorting order) element in the unsorted sublist, exchanging (swapping) it with the leftmost unsorted element (putting it in sorted order), and moving the sublist boundaries one element to the right.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(n^2)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(n^2)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(n^2)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;View the algorithm in &lt;a href=&#34;https://www.toptal.com/developers/sorting-algorithms/selection-sort&#34;&gt;action&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;Merge&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/c/cc/Merge-sort-example-300px.gif&#34; alt=&#34;alt text&#34; title=&#34;Merge Sort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Merge_sort&#34;&gt;Wikipedia&lt;/a&gt;: Merge sort (also commonly spelled mergesort) is a divide and conquer algorithm that was invented by John von Neumann in 1945. The algorithm dirst divides the list into the smallest unit (1 element), then compares each element with the adjacent list to sort and merge the two adjacent lists. Finally all the elements are sorted and merged. It is an efficient, general-purpose, comparison-based sorting algorithm.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(n log n)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(n log n)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance O(n log n)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;View the algorithm in &lt;a href=&#34;https://www.toptal.com/developers/sorting-algorithms/merge-sort&#34;&gt;action&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;Shell&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/d/d8/Sorting_shellsort_anim.gif&#34; alt=&#34;alt text&#34; title=&#34;Shell Sort&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Shellsort&#34;&gt;Wikipedia&lt;/a&gt;: Shellsort is a generalization of insertion sort that allows the exchange of items that are far apart. The idea is to arrange the list of elements so that, starting anywhere, considering every nth element gives a sorted list. Such a list is said to be h-sorted. Equivalently, it can be thought of as h interleaved lists, each individually sorted.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Worst case performance O(nlog2 2n)&lt;/li&gt; &#xA; &lt;li&gt;Best case performance O(n log n)&lt;/li&gt; &#xA; &lt;li&gt;Average case performance depends on gap sequence&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;View the algorithm in &lt;a href=&#34;https://www.toptal.com/developers/sorting-algorithms/shell-sort&#34;&gt;action&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h3&gt;Time-Complexity Graphs&lt;/h3&gt; &#xA;&lt;p&gt;Comparing the complexity of sorting algorithms (Bubble Sort, Insertion Sort, Selection Sort)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/prateekiiest/Python/raw/master/sorts/sortinggraphs.png&#34;&gt;Complexity Graphs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Community Channel&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re on &lt;a href=&#34;https://gitter.im/TheAlgorithms&#34;&gt;Gitter&lt;/a&gt;! Please join us.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://github.com/TheAlgorithms/Dart/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TheAlgorithms/Dart/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>