<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-07T01:46:23Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xpavle00/Habo</title>
    <updated>2024-01-07T01:46:23Z</updated>
    <id>tag:github.com,2024-01-07:/xpavle00/Habo</id>
    <link href="https://github.com/xpavle00/Habo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Habo is an open-source habit tracker. Created in a flutter.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://habo.space&#34;&gt;&lt;img src=&#34;https://habo.space/img/social/1.png&#34; alt=&#34;Screens&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://api.codemagic.io/apps/6154a5e032cdf915d1ce822b/6154a5e032cdf915d1ce822a/status_badge.svg?sanitize=true&#34; alt=&#34;Codemagic build status&#34;&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/habo/&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widget/habo/habo/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/xpavle00/Habo&#34; alt=&#34;GitHub release (with filter)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/xpavle00/Habo&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Habo - Open-Source Habit Tracking App&lt;/h1&gt; &#xA;&lt;p&gt;Introducing Habo, the open-source habit tracker app that helps you create and maintain healthy habits for a better life. With its user-friendly interface, Habo makes it easy to track your daily routines and monitor your progress.&lt;/p&gt; &#xA;&lt;p&gt;With Habo, you can customize your own habit list, set reminders, and add notes to help you stay motivated. Whether you&#39;re looking to improve your exercise routine, eat healthier, or simply adopt better habits, Habo is here to help you succeed.&lt;/p&gt; &#xA;&lt;p&gt;It is built using the &lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter&lt;/a&gt; framework, a popular and powerful cross-platform development tool.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customize your habit list&lt;/li&gt; &#xA; &lt;li&gt;Set daily reminders&lt;/li&gt; &#xA; &lt;li&gt;Track your progress with insightful statistics&lt;/li&gt; &#xA; &lt;li&gt;Add notes to help keep you motivated&lt;/li&gt; &#xA; &lt;li&gt;And more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Currently available on the Play Store and App Store.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.pavlenko.Habo&#34;&gt;&lt;img src=&#34;https://habo.space/img/resources/en_get.svg?sanitize=true&#34; alt=&#34;Google play store&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://apps.apple.com/us/app/habo-habit-tracker/id1670223360?itsct=apps_box_badge&amp;amp;itscg=30200&#34; style=&#34;display: inline-block; overflow: hidden; border-radius: 13px; width: 134px; height: 40px;&#34;&gt;&lt;img src=&#34;https://tools.applemediaservices.com/api/badges/download-on-the-app-store/black/en-us?size=250x83&amp;amp;releaseDate=1682121600&#34; alt=&#34;Download on the App Store&#34; style=&#34;border-radius: 13px; width: 134px; height: 40px;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions from the community to help make Habo even better! Whether you&#39;re a developer, designer, or just an enthusiastic user, there are many ways you can help.&lt;/p&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://raw.githubusercontent.com/xpavle00/Habo/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; to learn how you can get involved and make an impact.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Habo is released under the &lt;a href=&#34;https://raw.githubusercontent.com/xpavle00/Habo/master/LICENSE&#34;&gt;GPL-3.0 license&lt;/a&gt;. Feel free to use, modify, and distribute it as you wish.&lt;/p&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;p&gt;We believe that the best tools should be available to everyone, no matter what language they speak. To make Habo more accessible to users worldwide, we&#39;re excited to offer community-driven localization through Weblate.&lt;/p&gt; &#xA;&lt;a href=&#34;https://hosted.weblate.org/engage/habo/&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widget/habo/open-graph.png&#34; alt=&#34;Translation status&#34; width=&#34;350&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter&lt;/a&gt; and &lt;a href=&#34;https://dart.dev/&#34;&gt;Dart&lt;/a&gt; teams for creating such amazing tools.&lt;/p&gt; &#xA;&lt;p&gt;We hope you enjoy using Habo and find it helpful in building better habits for a better life!&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you like this project you can &lt;a href=&#34;https://www.buymeacoffee.com/peterpavlenko&#34;&gt;buy me a coffee&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/peterpavlenko&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 60px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mapleafgo/clash-for-flutter</title>
    <updated>2024-01-07T01:46:23Z</updated>
    <id>tag:github.com,2024-01-07:/mapleafgo/clash-for-flutter</id>
    <link href="https://github.com/mapleafgo/clash-for-flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Clash的桌面客户端，支持 windows、linux、macos&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Clash for Flutter&lt;/h1&gt; &#xA;&lt;p&gt;这是一个 &lt;strong&gt;Clash&lt;/strong&gt; 的多平台客户端，支持 windows、linux、macos、android、&lt;del&gt;ios&lt;/del&gt;。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://mapleafgo.github.io/clash-for-flutter&#34;&gt;使用说明&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;界面&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mapleafgo/clash-for-flutter/main/docs/images/home_page.png&#34; alt=&#34;主页&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mapleafgo/clash-for-flutter/main/docs/images/proxy_page.png&#34; alt=&#34;代理页&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mapleafgo/clash-for-flutter/main/docs/images/log_page.png&#34; alt=&#34;代理页&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mapleafgo/clash-for-flutter/main/docs/images/connect_page.png&#34; alt=&#34;连接页&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mapleafgo/clash-for-flutter/main/docs/images/profile_page.png&#34; alt=&#34;订阅页&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mapleafgo/clash-for-flutter/main/docs/images/settings_page.png&#34; alt=&#34;设置页&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开发、打包说明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;基础环境&lt;/p&gt; &lt;p&gt;&lt;code&gt;Flutter v3.16+&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;对目标平台时，需要参照 Flutter 官方文档进行对应平台的环境搭建。如 Android 开发时，需要 Android-SDK&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;Linux&lt;/code&gt;环境下 &lt;a href=&#34;https://github.com/antler119/system_tray&#34;&gt;system_tray&lt;/a&gt; 需要 &lt;code&gt;libayatana-appindicator3-dev&lt;/code&gt; or &lt;code&gt;libappindicator3-dev&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;下载内核&lt;/p&gt; &lt;p&gt;从 &lt;a href=&#34;https://github.com/mapleafgo/cff-core/releases/latest&#34;&gt;https://github.com/mapleafgo/cff-core/releases/latest&lt;/a&gt; 下载对应平台需要的内核， 然后将解压出来的内核文件移动到对应的路径，各平台路径如下:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# windows&#xA;windows/core/libclash.dll&#xA;# linux&#xA;linux/core/libclash.so&#xA;# android&#xA;android/app/libs/libclash.aar&#xA;# macos&#xA;macos/Frameworks/libclash.dylib&#xA;# ios&#xA;ios/Frameworks/libclash.xcframework&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;注意：解压出来的文件，仅保留所需的后缀名文件即可，且将其改名为路径的文件名&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;内核是在 Clash v1.18.0 (非premium) 的基础上进行二次开发的，仅加入了 tun 模式（参照 Meta 进行）&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;编译项目&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 1. 获取项目依赖&#xA;$ flutter pub get&#xA;# 2. 生成 .g.dart 文件&#xA;$ dart run build_runner build --delete-conflicting-outputs&#xA;&#xA;# 3. 运行项目 (linux)&#xA;$ flutter run -d linux&#xA;# 3. 运行项目 (windows)&#xA;$ flutter run -d windows&#xA;# 3. 运行项目 (android)&#xA;$ flutter run -d android&#xA;# 3. 运行项目 (macos)&#xA;$ flutter run -d macos&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;打包项目&lt;/p&gt; &lt;p&gt;该项目用 &lt;a href=&#34;https://distributor.leanflutter.org/&#34;&gt;flutter_distributor&lt;/a&gt; 打包，打包步骤看 &lt;code&gt;flutter_distributor&lt;/code&gt; 的官方文档吧&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;主要技术&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Dreamacro/clash&#34;&gt;Clash&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antler119/system_tray&#34;&gt;system_tray&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leanflutter/window_manager&#34;&gt;window_manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kingtous/proxy_manager&#34;&gt;proxy_manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Flutterando/modular&#34;&gt;flutter_modular&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cfug/dio&#34;&gt;dio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://distributor.leanflutter.org/&#34;&gt;flutter_distributor&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;写在后面&lt;/h2&gt; &#xA;&lt;p&gt;自 1.0.0 版本开始，本软件全面从之前的 Go-Flutter 迁移到了官方 Flutter 版本。迁移中部分参考了 &lt;a href=&#34;https://github.com/Kingtous/Fclash&#34;&gt;Fclash&lt;/a&gt; 非常感谢！&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>babakcode/flutter_gemini</title>
    <updated>2024-01-07T01:46:23Z</updated>
    <id>tag:github.com,2024-01-07:/babakcode/flutter_gemini</id>
    <link href="https://github.com/babakcode/flutter_gemini" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter Google Gemini SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Gemini&lt;/h1&gt; &#xA;&lt;p&gt;Google Gemini is a set of cutting-edge large language models (LLMs) designed to be the driving force behind Google&#39;s future AI initiatives.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/babakcode/flutter_gemini/assets/31356659/104a436c-cc1e-4523-aeeb-edfb50f87346&#34; alt=&#34;gemini_github_cover&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This package provides a powerful bridge between your Flutter application and Google&#39;s revolutionary Gemini AI. It empowers you to seamlessly integrate Gemini&#39;s capabilities into your app, unlocking possibilities for building innovative, intelligent, and engaging experiences that redefine user interaction.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set up your API key &lt;a href=&#34;https://raw.githubusercontent.com/babakcode/flutter_gemini/master/#getting-started&#34;&gt;scroll&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Initialize Gemini &lt;a href=&#34;https://raw.githubusercontent.com/babakcode/flutter_gemini/master/#initialize-gemini&#34;&gt;scroll&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Content-based APIs &lt;a href=&#34;https://raw.githubusercontent.com/babakcode/flutter_gemini/master/#content-based-apis&#34;&gt;scroll&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Stream Generate Content &lt;a href=&#34;https://raw.githubusercontent.com/babakcode/flutter_gemini/master/#stream-generate-content&#34;&gt;scroll&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Text-only input &lt;a href=&#34;https://raw.githubusercontent.com/babakcode/flutter_gemini/master/#text-only-input&#34;&gt;scroll&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Text-and-image input &lt;a href=&#34;https://raw.githubusercontent.com/babakcode/flutter_gemini/master/#text-and-image-input&#34;&gt;scroll&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Multi-turn conversations (chat) &lt;a href=&#34;https://raw.githubusercontent.com/babakcode/flutter_gemini/master/#multi-turn-conversations-chat&#34;&gt;scroll&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Count tokens &lt;a href=&#34;https://raw.githubusercontent.com/babakcode/flutter_gemini/master/#count-tokens&#34;&gt;scroll&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Model info &lt;a href=&#34;https://raw.githubusercontent.com/babakcode/flutter_gemini/master/#model-info&#34;&gt;scroll&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;List models &lt;a href=&#34;https://raw.githubusercontent.com/babakcode/flutter_gemini/master/#list-models&#34;&gt;scroll&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;EmbedContents and batchEmbedContents &lt;a href=&#34;https://raw.githubusercontent.com/babakcode/flutter_gemini/master/#embedcontents-and-batchembedcontents&#34;&gt;scroll&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Flutter Gemini widgets &lt;a href=&#34;https://raw.githubusercontent.com/babakcode/flutter_gemini/master/#flutter-gemini-widgets&#34;&gt;scroll&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To use the Gemini API, you&#39;ll need an API key. If you don&#39;t already have one, create a key in Google AI Studio. &lt;a href=&#34;https://ai.google.dev/&#34;&gt;Get an API key&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;online demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://babakcode.github.io/flutter_gemini&#34;&gt;https://babakcode.github.io/flutter_gemini&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Initialize Gemini&lt;/h2&gt; &#xA;&lt;p&gt;For initialization, you must call the init constructor for Flutter Gemini in the main function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void main() {&#xA;&#xA;  /// Add this line&#xA;  Gemini.init(apiKey: &#39;--- Your Gemini Api Key ---&#39;);&#xA;&#xA;  runApp(const MyApp());&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can create an instance&lt;/p&gt; &#xA;&lt;h2&gt;Content-based APIs&lt;/h2&gt; &#xA;&lt;h4&gt;Stream Generate Content&lt;/h4&gt; &#xA;&lt;p&gt;The model usually gives a response once it finishes generating the entire output. To speed up interactions, you can opt not to wait for the complete result and instead use streaming to manage partial results.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final gemini = Gemini.instance;&#xA;&#xA;gemini.streamGenerateContent(&#39;Utilizing Google Ads in Flutter&#39;)&#xA;  .listen((value) {&#xA;    print(value.output);&#xA;  }).onError((e) {&#xA;    log(&#39;streamGenerateContent exception&#39;, error: e);&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/babakcode/flutter_gemini/assets/31356659/0a6f6eaa-684c-4708-b395-16176c7b0180&#34; alt=&#34;Flutter gemini stream generates content&#34;&gt; &lt;img src=&#34;https://github.com/babakcode/flutter_gemini/assets/31356659/cabe2392-d584-4bbb-b5a9-a86db6b2d7f1&#34; alt=&#34;Flutter Gemini stream&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Text-only input&lt;/h4&gt; &#xA;&lt;p&gt;This feature lets you perform natural language processing (NLP) tasks such as text completion and summarization.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final gemini = Gemini.instance;&#xA;&#xA;gemini.text(&#34;Write a story about a magic backpack.&#34;)&#xA;  .then((value) =&amp;gt; print( value?.output )) /// or value?.content?.parts?.last.text&#xA;  .catchError((e) =&amp;gt; print(e));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/v2/resize:fit:828/format:webp/1*41dnttHItU2v4hobJ_DGSA.gif&#34; alt=&#34;Flutter gemini Text only example gif&#34; title=&#34;Flutter_Gemini example&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Text-and-image input&lt;/h4&gt; &#xA;&lt;p&gt;If the input contains both text and image, You can send a text prompt with an image to the gemini-pro-vision model to perform a vision-related task. For example, captioning an image or identifying what&#39;s in an image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;  final gemini = Gemini.instance;&#xA;&#xA;  final file = File(&#39;assets/img.png&#39;);&#xA;  gemini.textAndImage(&#xA;        text: &#34;What is this picture?&#34;, /// text&#xA;        images: [file.readAsBytesSync()] /// list of images&#xA;      )&#xA;      .then((value) =&amp;gt; log(value?.content?.parts?.last.text ?? &#39;&#39;))&#xA;      .catchError((e) =&amp;gt; log(&#39;textAndImageInput&#39;, error: e));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Note that, there are changes on properties&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;- image: file.readAsBytesSync(), /// image&#xA;+ images: [file.readAsBytesSync()] /// list of images&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/v2/resize:fit:828/format:webp/1*3JEeJaBRSpif6hOl2pt3RA.gif&#34; alt=&#34;Flutter gemini Text and Image example gif&#34; title=&#34;Flutter_Gemini example&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Multi-turn conversations (chat)&lt;/h4&gt; &#xA;&lt;p&gt;Using Gemini, you can build freeform conversations across multiple turns.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;  final gemini = Gemini.instance;&#xA;&#xA;  gemini.chat([&#xA;    Content(parts: [&#xA;      Parts(text: &#39;Write the first line of a story about a magic backpack.&#39;)],&#xA;        role: &#39;user&#39;),&#xA;    Content(parts: [ &#xA;      Parts(text: &#39;In the bustling city of Meadow brook, lived a young girl named Sophie. She was a bright and curious soul with an imaginative mind.&#39;)],&#xA;        role: &#39;model&#39;),&#xA;    Content(parts: [ &#xA;      Parts(text: &#39;Can you set it in a quiet village in 1600s France?&#39;)], &#xA;        role: &#39;user&#39;),&#xA;    ])&#xA;        .then((value) =&amp;gt; log(value?.output ?? &#39;without output&#39;))&#xA;        .catchError((e) =&amp;gt; log(&#39;chat&#39;, error: e));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/v2/resize:fit:828/format:webp/1*MoVz4Z5KpxVUocEHLmzDew.gif&#34; alt=&#34;Flutter gemini Text and Image example gif&#34; title=&#34;Flutter_Gemini example&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Count tokens&lt;/h4&gt; &#xA;&lt;p&gt;When using long prompts, it might be useful to count tokens before sending any content to the model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final gemini = Gemini.instance;&#xA;&#xA;gemini.countTokens(&#34;Write a story about a magic backpack.&#34;)&#xA;    .then((value) =&amp;gt; print(value)) /// output like: `6` or `null`&#xA;    .catchError((e) =&amp;gt; log(&#39;countTokens&#39;, error: e));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Model info&lt;/h4&gt; &#xA;&lt;p&gt;If you &lt;code&gt;GET&lt;/code&gt; a model&#39;s URL, the API uses the &lt;code&gt;get&lt;/code&gt; method to return information about that model such as version, display name, input token limit, etc.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final gemini = Gemini.instance;&#xA;&#xA;gemini.info(model: &#39;gemini-pro&#39;)&#xA;    .then((info) =&amp;gt; print(info))&#xA;    .catchError((e) =&amp;gt; log(&#39;info&#39;, error: e));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;List models&lt;/h4&gt; &#xA;&lt;p&gt;If you &lt;code&gt;GET&lt;/code&gt; the &lt;code&gt;models&lt;/code&gt; directory, it uses the &lt;code&gt;list&lt;/code&gt; method to list all of the models available through the API, including both the Gemini and PaLM family models.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final gemini = Gemini.instance;&#xA;&#xA;gemini.listModels()&#xA;    .then((models) =&amp;gt; print(models)) /// list&#xA;    .catchError((e) =&amp;gt; log(&#39;listModels&#39;, error: e));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;embedContents and batchEmbedContents&lt;/h4&gt; &#xA;&lt;p&gt;Embedding is a method that transforms information, like text, into a list of floating-point numbers in an array. Gemini enables the representation of text, such as words or sentences, in a vectorized form. This facilitates the comparison of embeddings, allowing for the identification of similarities between texts through mathematical techniques like cosine similarity. For instance, texts with similar subject matter or sentiment should exhibit similar embeddings.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;/// `embedContents`&#xA;gemini.embedContent(&#39;text&#39;).then((value) {&#xA;  print(value); /// output like: [ 1.3231, 1.33421, -0.123123 ]&#xA;});&#xA;&#xA;/// `batchEmbedContents`&#xA;gemini.batchEmbedContents([&#39;text 1&#39;, &#39;text 2&#39;]).then((value) {&#xA;  print(value); /// output like: [ [ 1.3231, 1.33421, -0.123123 ] ]&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Flutter Gemini Widgets&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;GeminiResponseTypeView&lt;/code&gt; widget allows you to present your search results using a &lt;strong&gt;&lt;code&gt;typing&lt;/code&gt;&lt;/strong&gt; animation, all &lt;strong&gt;&lt;code&gt;without&lt;/code&gt;&lt;/strong&gt; the need for utilizing the &lt;strong&gt;&lt;code&gt;setState()&lt;/code&gt;&lt;/strong&gt; function!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final Widget result = GeminiResponseTypeView(&#xA;  builder: (context, child, response, loading) {&#xA;&#xA;    if (loading) {&#xA;      /// show loading animation or use CircularProgressIndicator();&#xA;      return Lottie.asset(&#39;assets/lottie/ai.json&#39;);&#xA;    }&#xA;&#xA;    /// The runtimeType of response is String?&#xA;    if (response != null) {&#xA;      return Markdown(&#xA;        data: response,&#xA;        selectable: true,&#xA;      );&#xA;    } else {&#xA;      &#xA;      /// idle state&#xA;      return const Center(child: Text(&#39;Search something!&#39;));&#xA;    }&#xA;  },&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>