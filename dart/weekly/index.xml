<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-25T01:39:35Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>juicycleff/flutter-unity-view-widget</title>
    <updated>2022-12-25T01:39:35Z</updated>
    <id>tag:github.com,2022-12-25:/juicycleff/flutter-unity-view-widget</id>
    <link href="https://github.com/juicycleff/flutter-unity-view-widget" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Embeddable unity game engine view for Flutter. Advance demo here https://github.com/juicycleff/flutter-unity-arkit-demo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flutter_unity_widget&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-4-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_unity_widget/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_unity_widget.svg?style=flat-square&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/juicycleff/flutter-unity-view-widget.svg?style=flat-square&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/watchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/juicycleff/flutter-unity-view-widget.svg?style=social&#34; alt=&#34;Watch on GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/juicycleff/flutter-unity-view-widget.svg?style=social&#34; alt=&#34;Star on GitHub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/flutter-unity/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/flutter-unity/community.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/KmMqD7Sv3K&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-blue?style=for-the-badge&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flutter unity 3D widget for embedding unity in flutter. Now you can make awesome gamified features of your app in Unity and get it rendered in a Flutter app both in fullscreen and embeddable mode. Works great on &lt;code&gt;Android, iPad OS, iOS, Web, with Windows&lt;/code&gt; nearing completion. There are now two unity app examples in the unity folder, one with the default scene and another based on Unity AR foundation samples. &lt;br&gt; Note: Supports only Unity 2019.4.3 or later. UnityFramework does not support emulator. Note: Please use OpenGLES3 as Graphics API only for now (Android only). &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notice&lt;/h2&gt; &#xA;&lt;p&gt;Need me to respond, tag me &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/www.github.com/juicycleff&#34;&gt;Rex Isaac Raphael&lt;/a&gt;. Always use the matching FUW unitypackage for the unity version your are using.&lt;/p&gt; &#xA;&lt;p&gt;This plugin expects you to atleast know how to use Unity Engine. If you have issues with how unity widget is presented, you can please modify your unity project build settings as you seem fit.&lt;/p&gt; &#xA;&lt;p&gt;Moving forward, versioning of the package will change to match unity releases after proper test. Mind you this does not mean the package is not compatible with other versions, it just mean it&#39;s been tested to work with a unity version.&lt;/p&gt; &#xA;&lt;p&gt;Windows coming soon.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;First depend on the library by adding this to your packages &lt;code&gt;pubspec.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flutter 3.0.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  flutter_unity_widget: ^2022.2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pre Flutter 3.0.0 (This version will gradually be deprecated)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  flutter_unity_widget: ^2022.1.0+7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now inside your Dart code you can import it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter_unity_widget/flutter_unity_widget.dart&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;30 fps gifs, showcasing communication between Flutter and Unity:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/juicycleff/flutter-unity-view-widget/raw/master/files/preview_android.gif?raw=true&#34; alt=&#34;gif&#34;&gt; &lt;img src=&#34;https://github.com/juicycleff/flutter-unity-view-widget/raw/master/files/preview_ios.gif?raw=true&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;For this, there is also a video tutorial, which you can find a &lt;a href=&#34;https://www.youtube.com/watch?v=exNPmv_7--Q&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In the tutorial below, there are steps specific to each platform, denoted by a &lt;span&gt;ℹ&lt;/span&gt; icon followed by the platform name (Android or iOS). You can click on its icon to expand it.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;An existing Flutter project (if there is none, you can &lt;a href=&#34;https://flutter.dev/docs/get-started/test-drive#create-app&#34;&gt;create a new one&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;An existing Unity project (if there is none, you can &lt;a href=&#34;https://learn.unity.com/tutorial/create-your-first-unity-project&#34;&gt;create a new one&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/unitypackages/fuw-2022.1.1.unitypackage&#34;&gt;&lt;code&gt;FlutterUnityPackage.unitypackage&lt;/code&gt;&lt;/a&gt; file (you can access the Unity packages in the &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/tree/master/unitypackages&#34;&gt;&lt;em&gt;unitypackages&lt;/em&gt;&lt;/a&gt; folder too) Remeber to always check the match unitypackage for your project.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;NDK&lt;/h4&gt; &#xA;&lt;p&gt;If your project requires Android NDK, you have to setup following:&lt;/p&gt; &#xA;&lt;p&gt;Your android project needs to know the path of the NDK Unity uses. You can find the path to the NDK under &lt;code&gt;Preferences -&amp;gt; External Tools&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/ndkPath.png&#34; alt=&#34;NDK Path&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copy the path by right click and paste the path here in your &lt;code&gt;android/local.properties&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-properties&#34;&gt;    ndk.dir=/Applications/Unity/Hub/Editor/2020.3.19f1/PlaybackEngines/AndroidPlayer/NDK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! You don&#39;t need to tell your Android App in your &lt;code&gt;app/build.gradle&lt;/code&gt; the NDK version or other NDK settings. It&#39;s all connected to Unity now.&lt;/p&gt; &#xA;&lt;h3&gt;Steps&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a folder named &lt;em&gt;unity&lt;/em&gt; and move the Unity project into there.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The expected path is &lt;em&gt;unity/&lt;strong&gt;project-name&lt;/strong&gt;/...&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Copy the &lt;em&gt;FlutterUnityPackage.unitypackage&lt;/em&gt; file into the Unity project folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The expected path is &lt;em&gt;unity/&lt;strong&gt;project-name&lt;/strong&gt;/FlutterUnityPackage.unitypackage&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Using Unity, open the Unity project, go to &lt;strong&gt;File &amp;gt; Build Settings &amp;gt; Player Settings&lt;/strong&gt; and change the following under the &lt;strong&gt;Configuration&lt;/strong&gt; section:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;strong&gt;Scripting Backend&lt;/strong&gt;, change to IL2CPP&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;strong&gt;Target Architectures&lt;/strong&gt;, select ARMv7 and ARM64&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;ℹ&lt;/span&gt; &lt;b&gt;iOS&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Select the appropriate SDK on &lt;strong&gt;Target SDK&lt;/strong&gt; depending on where you want to test or run your app (simulator or physical device).&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/Screenshot%202019-03-27%2007.31.55.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Be sure you have at least one scene added to your build.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;strong&gt;Assets &amp;gt; Import Package &amp;gt; Custom Package&lt;/strong&gt; and select the &lt;em&gt;FlutterUnityPackage.unitypackage&lt;/em&gt; file. Click on &lt;strong&gt;Import&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After importing, click on &lt;strong&gt;Flutter&lt;/strong&gt; and select the &lt;strong&gt;Export Android Debug&lt;/strong&gt; or &lt;strong&gt;Export Android Release&lt;/strong&gt; option (will export to &lt;em&gt;android/unityLibrary&lt;/em&gt;) or the &lt;strong&gt;Export iOS Debug&lt;/strong&gt; or &lt;strong&gt;Export iOS Release&lt;/strong&gt; option (will export to &lt;em&gt;ios/UnityLibrary&lt;/em&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Do not use &lt;strong&gt;Flutter &amp;gt; Export &lt;em&gt;Platform&lt;/em&gt; plugin&lt;/strong&gt; as it was specially added to work with &lt;a href=&#34;https://github.com/juicycleff/flutter_unity_cli&#34;&gt;&lt;code&gt;flutter_unity_cli&lt;/code&gt;&lt;/a&gt; for larger projects.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;img src=&#34;https://github.com/juicycleff/flutter-unity-view-widget/raw/master/files/Unity_Build_Options.png?raw=true&#34; width=&#34;400&#34;&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;ℹ&lt;/span&gt; &lt;b&gt;Android&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;The export script automatically sets things up for you, so you don&#39;t have to do anything for Android. But if you want to manually set it up, continue.&lt;/p&gt; &#xA; &lt;p&gt;6.1. Open the &lt;em&gt;android/settings.gradle&lt;/em&gt; file and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;+    include &#34;:unityLibrary&#34;&#xA;+    project(&#34;:unityLibrary&#34;).projectDir = file(&#34;./unityLibrary&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;6.2. Open the &lt;em&gt;android/app/build.gradle&lt;/em&gt; file and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;     dependencies {&#xA;+        implementation project(&#39;:unityLibrary&#39;)&#xA;     }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;6.3. If you need to build a release package, open the &lt;em&gt;android/app/build.gradle&lt;/em&gt; file and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;     buildTypes {&#xA;         release {&#xA;             signingConfig signingConfigs.debug&#xA;         }&#xA;+        debug {&#xA;+            signingConfig signingConfigs.debug&#xA;+        }&#xA;+        profile {&#xA;+            signingConfig signingConfigs.debug&#xA;+        }&#xA;+        innerTest {&#xA;+            matchingFallbacks = [&#39;debug&#39;, &#39;release&#39;]&#xA;+        }&#xA;+   }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;The code above use the &lt;code&gt;debug&lt;/code&gt; signConfig for all buildTypes, which can be changed as you well if you need specify signConfig.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;6.4. If you use &lt;code&gt;minifyEnabled true&lt;/code&gt; in your &lt;em&gt;android/app/build.gradle&lt;/em&gt; file, open the &lt;em&gt;android/unityLibrary/proguard-unity.txt&lt;/em&gt; and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;+    -keep class com.xraph.plugin.** {*;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;6.5. If you want Unity in it&#39;s own activity as an alternative, open the &lt;em&gt;android/app/src/main/AndroidManifest.xml&lt;/em&gt; and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;+    &amp;lt;activity&#xA;+        android:name=&#34;com.xraph.plugin.flutter_unity_widget.OverrideUnityActivity&#34;&#xA;+        android:theme=&#34;@style/UnityThemeSelector&#34;&#xA;+        android:screenOrientation=&#34;fullSensor&#34;&#xA;+        android:launchMode=&#34;singleTask&#34;&#xA;+        android:configChanges=&#34;mcc|mnc|locale|touchscreen|keyboard|keyboardHidden|navigation|orientation|screenLayout|uiMode|screenSize|smallestScreenSize|fontScale|layoutDirection|density&#34;&#xA;+        android:hardwareAccelerated=&#34;false&#34;&#xA;+        android:process=&#34;:Unity&#34;&amp;gt;&#xA;+    &amp;lt;meta-data android:name=&#34;com.xraph.plugin.flutter_unity_widget.OverrideUnityActivity&#34; android:value=&#34;true&#34; /&amp;gt;&#xA;+    &amp;lt;/activity&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;ℹ&lt;/span&gt; &lt;b&gt;iOS&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;6.1. Open the &lt;em&gt;ios/Runner.xcworkspace&lt;/em&gt; (workspace, not the project) file in Xcode, right-click on the Navigator (not on an item), go to &lt;strong&gt;Add Files to &#34;Runner&#34;&lt;/strong&gt; and add the &lt;em&gt;ios/UnityLibrary/Unity-Iphone.xcodeproj&lt;/em&gt; file.&lt;/p&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/workspace.png&#34; width=&#34;400&#34;&gt; &#xA; &lt;p&gt;6.2. (Optional) Select the &lt;em&gt;Unity-iPhone/Data&lt;/em&gt; folder and change the Target Membership for Data folder to UnityFramework.&lt;/p&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/change_target_membership_data_folder.png&#34; width=&#34;400&#34;&gt; &#xA; &lt;p&gt;6.3.1. If you&#39;re using Swift, open the &lt;em&gt;ios/Runner/AppDelegate.swift&lt;/em&gt; file and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;     import UIKit&#xA;     import Flutter&#xA;+    import flutter_unity_widget&#xA;&#xA;     @UIApplicationMain&#xA;     @objc class AppDelegate: FlutterAppDelegate {&#xA;         override func application(&#xA;             _ application: UIApplication,&#xA;             didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?&#xA;         ) -&amp;gt; Bool {&#xA;+            InitUnityIntegrationWithOptions(argc: CommandLine.argc, argv: CommandLine.unsafeArgv, launchOptions)&#xA;&#xA;             GeneratedPluginRegistrant.register(with: self)&#xA;             return super.application(application, didFinishLaunchingWithOptions: launchOptions)&#xA;         }&#xA;     }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;6.3.2. If you&#39;re using Objective-C, open the &lt;em&gt;ios/Runner/main.m&lt;/em&gt; file and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;+    #import &#34;flutter_unity_widget.swift.h&#34;&#xA;&#xA;     int main(int argc, char * argv[]) {&#xA;          @autoreleasepool {&#xA;+             InitUnityIntegration(argc, argv);&#xA;              return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));&#xA;          }&#xA;     }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;6.4. Open the &lt;em&gt;ios/Runner/Info.plist&lt;/em&gt; and change the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;     &amp;lt;dict&amp;gt;&#xA;+        &amp;lt;key&amp;gt;io.flutter.embedded_views_preview&amp;lt;/key&amp;gt;&#xA;+        &amp;lt;string&amp;gt;YES&amp;lt;/string&amp;gt;&#xA;     &amp;lt;/dict&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;6.5. Add the &lt;em&gt;UnityFramework.framework&lt;/em&gt; file as a library to the Runner project.&lt;/p&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/libraries.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Setup AR Foundation&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/juicycleff/flutter-unity-view-widget/raw/master/files/ar-demo.gif?raw=true&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Check out the Unity AR Foundation samples in the &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-arkit-demo&#34;&gt;demo repository&lt;/a&gt;. This repository is not guaranteed to be up-to-date with the latest &lt;code&gt;flutter-unity-view-widget&lt;/code&gt; master. Make sure to follow the steps listed below for setting up AR Foundation on iOS and Android in your project.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;ℹ&lt;/span&gt; &lt;b&gt;Android&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ol start=&#34;7&#34;&gt; &#xA;  &lt;li&gt; &lt;p&gt;Open the &lt;em&gt;lib/&lt;strong&gt;architecture&lt;/strong&gt;/&lt;/em&gt; folder and check if there are both &lt;em&gt;libUnityARCore.so&lt;/em&gt; and &lt;em&gt;libarpresto_api.so&lt;/em&gt; files. There seems to be a bug where a Unity export does not include all lib files. If they are missing, use Unity to build a standalone .apk of your AR project, unzip the resulting apk, and copy over the missing .lib files to the &lt;code&gt;unityLibrary&lt;/code&gt; module.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Repeat steps 6.1 and 6.2 for Android, replacing &lt;code&gt;unityLibrary&lt;/code&gt; with &lt;code&gt;arcore_client&lt;/code&gt;, &lt;code&gt;unityandroidpermissions&lt;/code&gt; and &lt;code&gt;UnityARCore&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;When using &lt;code&gt;UnityWidget&lt;/code&gt; in Flutter, set &lt;code&gt;fullscreen: false&lt;/code&gt; to disable fullscreen.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;span&gt;ℹ&lt;/span&gt; &lt;b&gt;iOS&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ol start=&#34;7&#34;&gt; &#xA;  &lt;li&gt;Open the &lt;em&gt;ios/Runner/Info.plist&lt;/em&gt; and change the following:&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;     &amp;lt;dict&amp;gt;&#xA;+        &amp;lt;key&amp;gt;Privacy - Camera Usage Description&amp;lt;/key&amp;gt;&#xA;+        &amp;lt;string&amp;gt;$(PRODUCT_NAME) uses Cameras&amp;lt;/string&amp;gt;&#xA;     &amp;lt;/dict&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Setup Vuforia&lt;/h4&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/PiotrxKolasinski&#34;&gt;@PiotrxKolasinski&lt;/a&gt; for writing down the exact steps:&lt;/p&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Open the &lt;em&gt;android/unityLibrary/build.gradle&lt;/em&gt; file and change the following:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-    implementation(name: &#39;VuforiaWrapper&#39;, ext: &#39;aar&#39;)&#xA;+    implementation project(&#39;:VuforiaWrapper&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;Using Android Studio, go to &lt;strong&gt;File &amp;gt; Open&lt;/strong&gt; and select the &lt;em&gt;android/&lt;/em&gt; folder. A new project will open.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Don&#39;t worry if the error message &#34;Project with path &#39;:VuforiaWrapper&#39; could not be found in project &#39;:unityLibrary&#39;&#34; appears. The next step will fix it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;In this new project window, go to &lt;strong&gt;File &amp;gt; New &amp;gt; New Module &amp;gt; Import .JAR/.AAR package&lt;/strong&gt; and select the &lt;em&gt;android/unityLibrary/libs/VuforiaWrapper.aar&lt;/em&gt; file. A new folder named &lt;em&gt;VuforiaWrapper&lt;/em&gt; will be created inside &lt;em&gt;android/&lt;/em&gt;. You can now close this new project window.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Communicating&lt;/h2&gt; &#xA;&lt;h3&gt;Flutter-Unity&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;On a &lt;code&gt;UnityWidget&lt;/code&gt; widget, get the &lt;code&gt;UnityWidgetController&lt;/code&gt; received by the &lt;code&gt;onUnityCreated&lt;/code&gt; callback.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the method &lt;code&gt;postMessage&lt;/code&gt; to send a string, using the GameObject name and the name of a behaviour method that should be called.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Unity-Flutter&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Select the GameObject that should execute the communication and go to &lt;strong&gt;Inspector &amp;gt; Add Component &amp;gt; Unity Message Manager&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img src=&#34;https://i.stack.imgur.com/1gSOy.png&#34; width=&#34;400&#34;&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new &lt;code&gt;MonoBehaviour&lt;/code&gt; subclass and add to the same GameObject as a script.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On this new behaviour, call &lt;code&gt;GetComponent&amp;lt;UnityMessageManager&amp;gt;()&lt;/code&gt; to get a &lt;code&gt;UnityMessageManager&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the method &lt;code&gt;SendMessageToFlutter&lt;/code&gt; to send a string. Receive this message using the &lt;code&gt;onUnityMessage&lt;/code&gt; callback of a &lt;code&gt;UnityWidget&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Location:&lt;/strong&gt; Unity&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Error:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;InvalidOperationException: The build target does not support build appending.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the &lt;em&gt;unity/&lt;strong&gt;project-name&lt;/strong&gt;/Assets/FlutterUnityIntegration/Editor/Build.cs&lt;/em&gt; file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;1.1. On line 48, change the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-    var options = BuildOptions.AcceptExternalModificationsToPlayer;&#xA;+    var options = BuildOptions.AllowDebugging;&#xA;+    EditorUserBuildSettings.exportAsGoogleAndroidProject = true;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;1.2. On line 115, change the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-    var options = BuildOptions.AcceptExternalModificationsToPlayer;&#xA;+    var options = BuildOptions.AllowDebugging;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Location:&lt;/strong&gt; Android Studio&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Error:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;minSdkVersion XX cannot be smaller than version 19 declared in library &#xA;    \ [:flutter_unity_widget] .../AndroidManifest.xml as the library might be using &#xA;    \ APIs not available in XX&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the &lt;em&gt;android/app/build.gradle&lt;/em&gt; file and change the following:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-    minSdkVersion XX&#xA;+    minSdkVersion 19&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Location&lt;/strong&gt;: Android Studio&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Error:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;e: .../FlutterUnityWidgetBuilder.kt: (15, 42): Expecting a parameter declaration&#xA;e: .../FlutterUnityWidgetBuilder.kt: (23, 25): Expecting an argument&#xA;e: .../FlutterUnityWidgetController.kt: (22, 44): Expecting a parameter declaration&#xA;e: .../FlutterUnityWidgetFactory.kt: (13, 58): Expecting a parameter declaration&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the &lt;em&gt;android/build.gradle&lt;/em&gt; file and change the following:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-    ext.kotlin_version = &#39;1.3.50&#39;&#xA;+    ext.kotlin_version = &#39;1.4.31&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Location:&lt;/strong&gt; Android Studio&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Error:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Unable to find a matching variant of project :unityLibrary:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the &lt;em&gt;android/app/build.gradle&lt;/em&gt; file and change the following:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;     lintOptions {&#xA;         disable &#39;InvalidPackage&#39;&#xA;+        checkReleaseBuilds false&#xA;     }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Simple Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter/material.dart&#39;;&#xA;import &#39;package:flutter/services.dart&#39;;&#xA;import &#39;package:flutter_unity_widget/flutter_unity_widget.dart&#39;;&#xA;&#xA;void main() {&#xA;  runApp(MaterialApp(&#xA;    home: UnityDemoScreen()&#xA;  ));&#xA;}&#xA;&#xA;class UnityDemoScreen extends StatefulWidget {&#xA;&#xA;  UnityDemoScreen({Key key}) : super(key: key);&#xA;&#xA;  @override&#xA;  _UnityDemoScreenState createState() =&amp;gt; _UnityDemoScreenState();&#xA;}&#xA;&#xA;class _UnityDemoScreenState extends State&amp;lt;UnityDemoScreen&amp;gt;{&#xA;  static final GlobalKey&amp;lt;ScaffoldState&amp;gt; _scaffoldKey =&#xA;      GlobalKey&amp;lt;ScaffoldState&amp;gt;();&#xA;  UnityWidgetController _unityWidgetController;&#xA;&#xA;  Widget build(BuildContext context) {&#xA;&#xA;    return Scaffold(&#xA;      key: _scaffoldKey,&#xA;      body: SafeArea(&#xA;        bottom: false,&#xA;        child: WillPopScope(&#xA;          onWillPop: () {&#xA;            // Pop the category page if Android back button is pressed.&#xA;          },&#xA;          child: Container(&#xA;            color: colorYellow,&#xA;            child: UnityWidget(&#xA;              onUnityCreated: onUnityCreated,&#xA;            ),&#xA;          ),&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;&#xA;  // Callback that connects the created controller to the unity controller&#xA;  void onUnityCreated(controller) {&#xA;    this._unityWidgetController = controller;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Communicating with and from Unity&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter/material.dart&#39;;&#xA;import &#39;package:flutter_unity_widget/flutter_unity_widget.dart&#39;;&#xA;&#xA;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatefulWidget {&#xA;  @override&#xA;  _MyAppState createState() =&amp;gt; _MyAppState();&#xA;}&#xA;&#xA;class _MyAppState extends State&amp;lt;MyApp&amp;gt; {&#xA;  static final GlobalKey&amp;lt;ScaffoldState&amp;gt; _scaffoldKey =&#xA;      GlobalKey&amp;lt;ScaffoldState&amp;gt;();&#xA;  UnityWidgetController _unityWidgetController;&#xA;  double _sliderValue = 0.0;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    super.initState();&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      home: Scaffold(&#xA;        key: _scaffoldKey,&#xA;        appBar: AppBar(&#xA;          title: const Text(&#39;Unity Flutter Demo&#39;),&#xA;        ),&#xA;        body: Card(&#xA;          margin: const EdgeInsets.all(8),&#xA;          clipBehavior: Clip.antiAlias,&#xA;          shape: RoundedRectangleBorder(&#xA;            borderRadius: BorderRadius.circular(20.0),&#xA;          ),&#xA;          child: Stack(&#xA;            children: &amp;lt;Widget&amp;gt;[&#xA;              UnityWidget(&#xA;                  onUnityCreated: onUnityCreated,&#xA;                  onUnityMessage: onUnityMessage,&#xA;                  onUnitySceneLoaded: onUnitySceneLoaded,&#xA;                  fullscreen: false,&#xA;              ),&#xA;              Positioned(&#xA;                bottom: 20,&#xA;                left: 20,&#xA;                right: 20,&#xA;                child: Card(&#xA;                  elevation: 10,&#xA;                  child: Column(&#xA;                    children: &amp;lt;Widget&amp;gt;[&#xA;                      Padding(&#xA;                        padding: const EdgeInsets.only(top: 20),&#xA;                        child: Text(&#34;Rotation speed:&#34;),&#xA;                      ),&#xA;                      Slider(&#xA;                        onChanged: (value) {&#xA;                          setState(() {&#xA;                            _sliderValue = value;&#xA;                          });&#xA;                          setRotationSpeed(value.toString());&#xA;                        },&#xA;                        value: _sliderValue,&#xA;                        min: 0,&#xA;                        max: 20,&#xA;                      ),&#xA;                    ],&#xA;                  ),&#xA;                ),&#xA;              ),&#xA;            ],&#xA;          ),&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;&#xA;  // Communcation from Flutter to Unity&#xA;  void setRotationSpeed(String speed) {&#xA;    _unityWidgetController.postMessage(&#xA;      &#39;Cube&#39;,&#xA;      &#39;SetRotationSpeed&#39;,&#xA;      speed,&#xA;    );&#xA;  }&#xA;&#xA;  // Communication from Unity to Flutter&#xA;  void onUnityMessage(message) {&#xA;    print(&#39;Received message from unity: ${message.toString()}&#39;);&#xA;  }&#xA;&#xA;  // Callback that connects the created controller to the unity controller&#xA;  void onUnityCreated(controller) {&#xA;    this._unityWidgetController = controller;&#xA;  }&#xA;&#xA;  // Communication from Unity when new scene is loaded to Flutter&#xA;  void onUnitySceneLoaded(SceneLoaded sceneInfo) {&#xA;    print(&#39;Received scene loaded from unity: ${sceneInfo.name}&#39;);&#xA;    print(&#39;Received scene loaded from unity buildIndex: ${sceneInfo.buildIndex}&#39;);&#xA;  }&#xA;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Props&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;fullscreen&lt;/code&gt; (Enable or disable fullscreen mode on Android)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pause()&lt;/code&gt; (Use this to pause unity player)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;resume()&lt;/code&gt; (Use this to resume unity player)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unload()&lt;/code&gt; (Use this to unload unity player) *Requires Unity 2019.4.3 or later&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;quit()&lt;/code&gt; (Use this to quit unity player)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;postMessage(String gameObject, methodName, message)&lt;/code&gt; (Allows you invoke commands in Unity from flutter)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onUnityMessage(data)&lt;/code&gt; (Unity to flutter binding and listener)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onUnityUnloaded()&lt;/code&gt; (Unity to flutter listener when unity is unloaded)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onUnitySceneLoaded(String name, int buildIndex, bool isLoaded, bool isValid,)&lt;/code&gt; (Unity to flutter binding and listener when new scene is loaded)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Flavors&lt;/h2&gt; &#xA;&lt;h3&gt;Recommendation&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to apply flavors for your app would be: &lt;a href=&#34;https://pub.dev/packages/flutter_flavorizr&#34;&gt;flutter_flavorizr&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you use flavors in your app you will notice that especially iOS crashes while running or building your app! Here are the necessary steps for flavored apps:&lt;/p&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;No changes needed. Flavors are applied without any additional setups.&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;p&gt;For your Unity iOS-Build you have to add your flavors to your Unity iOS Configuration.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check your actual &lt;code&gt;Runner&lt;/code&gt; (your app) configurations. If you have for example the flavors:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;dev&lt;/li&gt; &#xA; &lt;li&gt;prod&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Your &lt;code&gt;Runner&lt;/code&gt; configurations are looking like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/iOSRunnerConfig.png&#34; alt=&#34;iOS Runner Config&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;So you have the flavors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Debug-dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Profile-dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Release-dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Debug-prod&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Profile-prod&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Release-prod&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These flavors needs to be added to your &lt;code&gt;Unity-IPhone&lt;/code&gt; project.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Go into your &lt;code&gt;Unity-IPhone&lt;/code&gt; project -&amp;gt; PROJECT &lt;code&gt;Unity-IPhone&lt;/code&gt; -&amp;gt; Info:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/UnityIPhone.png&#34; alt=&#34;Unity-IPhone&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here you can see in the Configurations section only:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ReleaseForProfiling&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ReleaseForRunning&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;Debug&lt;/code&gt; configuration twice and rename them to &lt;code&gt;Debug-dev&lt;/code&gt; and the second to &lt;code&gt;Debug-prod&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can do that by selecting &lt;code&gt;+&lt;/code&gt; and duplicate the configuration like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/DuplicateConfig.png&#34; alt=&#34;Duplicate configuration&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Repeat this with &lt;code&gt;Release&lt;/code&gt; to &lt;code&gt;Release-dev&lt;/code&gt; and &lt;code&gt;Release-prod&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Repeat this with &lt;code&gt;Release&lt;/code&gt; to &lt;code&gt;Profile-dev&lt;/code&gt; and &lt;code&gt;Profile-prod&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Your &lt;code&gt;Unity-IPhone&lt;/code&gt; configurations should now look like this:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/files/UnityConfigurations.png&#34; alt=&#34;Unity Configurations&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;p&gt;Flutter on default doesn&#39;t support &lt;code&gt;--flavor&lt;/code&gt; for building web. But you can set your target &lt;code&gt;main.dart&lt;/code&gt; entrypoint (with &lt;code&gt;-t main.dart&lt;/code&gt;) while running and building. So if you setup your flavors properly there&#39;re also no changes needed for web to apply changes for your Flutter-Unity web App.&lt;/p&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remember to disabled fullscreen in unity player settings to disable unity fullscreen.&lt;/li&gt; &#xA; &lt;li&gt;Unity freezes and crashes on Android, please use OpenGL3 as Graphics API.&lt;/li&gt; &#xA; &lt;li&gt;Project fails to build due to some native dependencies in your unity project, please integrate the native libraries for those dependencies on Android or iOS&lt;/li&gt; &#xA; &lt;li&gt;App crashes on screen exit and re-entry do this &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Build Setting - iOS - Other Settings - Configuration - Enable Custom Background Behaviors or iOS&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android builds takes forever to complete Unity 2022.1.*, remove these lines from unityLibrary/build.gradle file &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;commandLineArgs.add(&#34;--enable-debugger&#34;) commandLineArgs.add(&#34;--profiler-report&#34;) commandLineArgs.add(&#34;--profiler-output-file=&#34; + workingDir + &#34;/build/il2cpp_&#34;+ abi + &#34;_&#34; + configuration + &#34;/il2cpp_conv.traceevents&#34;)&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web GL&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you develop and ship Flutter with Unity WebGL then you will first notice, that stacked Widgets over your UnityWidget are not tappable!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This is actually a Flutter related Issue (See: &lt;a href=&#34;https://github.com/flutter/flutter/issues/72273&#34;&gt;https://github.com/flutter/flutter/issues/72273&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;To solve this, Flutter-Team already got a solution for this. Use: &lt;a href=&#34;https://pub.dev/packages/pointer_interceptor&#34;&gt;PointerInterceptor&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/juicycleff/flutter-unity-view-widget/raw/master/files/PointerInterceptor.png?raw=true&#34; alt=&#34;PointerInterceptor&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: We already integrated this into our &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/example/lib/screens/&#34;&gt;Examples&lt;/a&gt; in the &lt;code&gt;/example&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h4&gt;Sponsors&lt;/h4&gt; &#xA;&lt;p&gt;Support this project with your organization. Your donations will be used to help children first and then those in need. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/ultimate-backend/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ultimate-backend/sponsor/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultimate-backend/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.xraph.com&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/11243590?v=4&#34; width=&#34;100px;&#34; alt=&#34;Rex Raphael&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rex Raphael&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=juicycleff&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=juicycleff&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#question-juicycleff&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt; &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/issues?q=author%3Ajuicycleff&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#review-juicycleff&#34; title=&#34;Reviewed Pull Requests&#34;&gt;👀&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#tutorial-juicycleff&#34; title=&#34;Tutorials&#34;&gt;✅&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://stockxit.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/1475368?v=4&#34; width=&#34;100px;&#34; alt=&#34;Thomas Stockx&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thomas Stockx&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=thomas-stockx&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=thomas-stockx&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#question-thomas-stockx&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#tutorial-thomas-stockx&#34; title=&#34;Tutorials&#34;&gt;✅&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://krispypen.github.io/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/156955?v=4&#34; width=&#34;100px;&#34; alt=&#34;Kris Pypen&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kris Pypen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=krispypen&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=krispypen&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#question-krispypen&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#tutorial-krispypen&#34; title=&#34;Tutorials&#34;&gt;✅&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/lorant-csonka-planorama&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/48209860?v=4&#34; width=&#34;100px;&#34; alt=&#34;Lorant Csonka&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lorant Csonka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/juicycleff/flutter-unity-view-widget/commits?author=lorant-csonka-planorama&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/juicycleff/flutter-unity-view-widget/master/#video-lorant-csonka-planorama&#34; title=&#34;Videos&#34;&gt;📹&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-enable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>harmonoid/harmonoid</title>
    <updated>2022-12-25T01:39:35Z</updated>
    <id>tag:github.com,2022-12-25:/harmonoid/harmonoid</id>
    <link href="https://github.com/harmonoid/harmonoid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎵 Plays &amp; manages your music library. Looks beautiful &amp; juicy. Playlists, visuals, synced lyrics, pitch shift, volume boost &amp; more.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img align=&#34;left&#34; src=&#34;https://user-images.githubusercontent.com/28951144/190144379-364185ea-3e3e-4f41-87fd-9581acfc7f7f.png&#34; width=&#34;64&#34; height=&#34;64&#34;&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;left&#34;&gt;Harmonoid&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;🎵 Plays &amp;amp; manages your music library. Looks beautiful &amp;amp; juicy.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://harmonoid.com&#34;&gt;Website&lt;/a&gt; • &lt;a href=&#34;https://harmonoid.com/downloads&#34;&gt;Download&lt;/a&gt; • &lt;a href=&#34;https://discord.gg/2Rc3edFWd8&#34;&gt;Discord&lt;/a&gt; • Available for Windows, Linux &amp;amp; Android!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/windows/0.webp?raw=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/windows/1.webp?raw=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/windows/2.webp?raw=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/windows/3.webp?raw=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/windows/4.webp?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Videos&lt;/h2&gt; &#xA;&lt;p&gt;Enjoy that 🧈 buttery experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/28951144/180613629-942ae758-2179-48a8-825f-fc3e918aba0d.mp4&#34;&gt;https://user-images.githubusercontent.com/28951144/180613629-942ae758-2179-48a8-825f-fc3e918aba0d.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/28951144/180613641-baf7a246-08ba-496f-9952-7792a0117177.mp4&#34;&gt;https://user-images.githubusercontent.com/28951144/180613641-baf7a246-08ba-496f-9952-7792a0117177.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Music library management based on metadata tags.&lt;/li&gt; &#xA; &lt;li&gt;Capable of indexing 30+ files/second &amp;amp; saves cache for future app start-ups.&lt;/li&gt; &#xA; &lt;li&gt;Very strictly follows Material Design guidelines for UI &amp;amp; animations.&lt;/li&gt; &#xA; &lt;li&gt;mpv based music playback for strong format support (on Linux &amp;amp; Windows) using &lt;code&gt;dart:ffi&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Taskbar &amp;amp; System Media Transport Controls for Windows.&lt;/li&gt; &#xA; &lt;li&gt;D-Bus MPRIS controls for Linux.&lt;/li&gt; &#xA; &lt;li&gt;Small installer (≈ 35 MB) &amp;amp; low RAM usage (≈ 150 MB).&lt;/li&gt; &#xA; &lt;li&gt;Time synced lyrics for all your music.&lt;/li&gt; &#xA; &lt;li&gt;Ability to create persistent or &#34;Now playing&#34; playlists.&lt;/li&gt; &#xA; &lt;li&gt;Context menu integrations &amp;amp; file associations (exclusive to setup version).&lt;/li&gt; &#xA; &lt;li&gt;Discord RPC integration with album art support &amp;amp; &#34;Find&#34;/&#34;Listen&#34; buttons.&lt;/li&gt; &#xA; &lt;li&gt;Portable (if you wish).&lt;/li&gt; &#xA; &lt;li&gt;Pitch shifting.&lt;/li&gt; &#xA; &lt;li&gt;Volume boost.&lt;/li&gt; &#xA; &lt;li&gt;Speed adjustment.&lt;/li&gt; &#xA; &lt;li&gt;Details editor.&lt;/li&gt; &#xA; &lt;li&gt;Cross-platform (currently aiming Windows, Linux &amp;amp; Android).&lt;/li&gt; &#xA; &lt;li&gt;Does not use electron.js.&lt;/li&gt; &#xA; &lt;li&gt;Music visuals.&lt;/li&gt; &#xA; &lt;li&gt;Metadata reader.&lt;/li&gt; &#xA; &lt;li&gt;Gapless playback.&lt;/li&gt; &#xA; &lt;li&gt;Multiple artist support.&lt;/li&gt; &#xA; &lt;li&gt;Online URLs player.&lt;/li&gt; &#xA; &lt;li&gt;.LRC file compatibility (mannual loading or automatic lookup in folder).&lt;/li&gt; &#xA; &lt;li&gt;Fallback cover support. e.g. &lt;code&gt;cover.jpg&lt;/code&gt;, &lt;code&gt;Folder.jpg&lt;/code&gt; etc.&lt;/li&gt; &#xA; &lt;li&gt;Built-in YouTube Music client.&lt;/li&gt; &#xA; &lt;li&gt;User specific libmpv flags &amp;amp; options.&lt;/li&gt; &#xA; &lt;li&gt;Window position &amp;amp; maximize state remembering.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s really hard to find software with good design &amp;amp; animations on desktop. It&#39;s almost like desktop app developers don&#39;t have faith in adding animations to their UI. Other music players, which look kind-of good don&#39;t work properly, refuse to support an audio format, read tags incorrectly, don&#39;t have my favorite feature or simply use &lt;a href=&#34;https://electronjs.org&#34;&gt;electron.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Harmonoid very strictly implements &lt;a href=&#34;https://user-images.githubusercontent.com/28951144/187515841-265b2f6e-4ee3-4db5-b06d-0f7f5d684da9.webm&#34;&gt;Material Design&lt;/a&gt; to be a consistent, cohesive &amp;amp; modern music player for all platforms.&lt;/p&gt; &#xA;&lt;p&gt;There are no inconsistent paddings, spacings or weird alignments to make me feel uncomfortable. It&#39;s built with care &amp;amp; proper time is given to everything. Learn more about the project on &lt;a href=&#34;https://harmonoid.com/&#34;&gt;official website&lt;/a&gt; [until I can afford this domain].&lt;/p&gt; &#xA;&lt;h2&gt;Supporters&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Sponsors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tskinn&#34;&gt;Taylor&lt;/a&gt; • 10$ per month.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Patreons&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/user/creators?u=28979760&#34;&gt;Oleks&lt;/a&gt; • 5$ per month.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/RisuDesign&#34;&gt;Benjamin Kranz&lt;/a&gt; • Checkout their &lt;a href=&#34;https://www.youtube.com/c/RapidzDE&#34;&gt;YouTube&lt;/a&gt;! • 5$ per month.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/user/creators?u=27366405&#34;&gt;Mohammed Abutaki&lt;/a&gt; • 5$ per month.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you enjoy using this music player, please consider buying me a coffee.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://paypal.me/alexmercerind&#34;&gt;PayPal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://patreon.com/harmonoid&#34;&gt;Patreon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sponsors/alexmercerind&#34;&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Planned Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Folders view.&lt;/li&gt; &#xA; &lt;li&gt;Material You / Material Design 3 implementation.&lt;/li&gt; &#xA; &lt;li&gt;Genre tab.&lt;/li&gt; &#xA; &lt;li&gt;Third-party themes support.&lt;/li&gt; &#xA; &lt;li&gt;Equalizer.&lt;/li&gt; &#xA; &lt;li&gt;Music sensitive visualizers.&lt;/li&gt; &#xA; &lt;li&gt;macOS version (adaptation &amp;amp; dependencies-configuration).&lt;/li&gt; &#xA; &lt;li&gt;Mini-window mode.&lt;/li&gt; &#xA; &lt;li&gt;Minimization to system tray.&lt;/li&gt; &#xA; &lt;li&gt;Last.fm scrobbling.&lt;/li&gt; &#xA; &lt;li&gt;Plugin API.&lt;/li&gt; &#xA; &lt;li&gt;Windows 11 IExplorerCommand integration.&lt;/li&gt; &#xA; &lt;li&gt;Video playback &amp;amp; library management (???)&lt;/li&gt; &#xA; &lt;li&gt;Publishing to FlatHub, Microsoft Store &amp;amp; other places.&lt;/li&gt; &#xA; &lt;li&gt;Desktop app controller for Android.&lt;/li&gt; &#xA; &lt;li&gt;Cross-platform syncing &amp;amp; mutual playlist with friends (once we are mature).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mobile&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/android/0.webp?raw=true&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/android/1.webp?raw=true&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/android/2.webp?raw=true&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/android/3.webp?raw=true&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/android/4.webp?raw=true&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/android/5.webp?raw=true&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/android/6.webp?raw=true&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/harmonoid/harmonoid/raw/assets/android/7.webp?raw=true&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Translate&lt;/h2&gt; &#xA;&lt;p&gt;You can help me by adding or updating translations for Harmonoid at &lt;a href=&#34;https://github.com/harmonoid/translations&#34;&gt;harmonoid/translations&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Harmonoid &amp;amp; the source code in this repository is under &lt;a href=&#34;https://github.com/harmonoid/harmonoid/raw/master/EULA.txt?raw=true&#34;&gt;End-User License Agreement for Harmonoid&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vishalxl/nostr_console</title>
    <updated>2022-12-25T01:39:35Z</updated>
    <id>tag:github.com,2022-12-25:/vishalxl/nostr_console</id>
    <link href="https://github.com/vishalxl/nostr_console" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nostr console is an open-source twitter-like social network, direct chat app and group chat all bundled into one program. Built on the decentralized Nostr protocol.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nostr_console&lt;/h1&gt; &#xA;&lt;p&gt;Nostr console client using Dart&lt;/p&gt; &#xA;&lt;p&gt;This is an experimental or pre-alpha software made to show or know what a Nostr network client would look like. It works 90% of the time everytime; less when relays are not working perfectly.&lt;/p&gt; &#xA;&lt;h1&gt;todo&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; support bech32 keys&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; increase author id to 5 and event id shown to 6 from 3 and 4 respectively&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add new relays ( zbd)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; menu should honour --width, its extending way beyond&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; fix issue where need to go back into main menu to update the feed&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; prikey from file, create it too --genkey&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; initial creation of private/pub key&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; fix --help that&#39;s dated&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; show lightning invoice as qr code&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; in mention expansion, if p tag is not found in user store, then its left as #[n], whereas it should be replaced by the pubkey&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; notifications should show mentions too ( it does not yet)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; notifications , option 3, is shown only for one entry in whole thread&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; hashtag regexp should have underscore&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; add more default users. improve who is fetched.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; after going to a dm room, screen doesn&#39;t clear&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; when seeing a profile, if they have liked something, then likes after their name are shown white&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; kind 7 tags are messed up. for example for reaction: 066cdb716e250069c4078565c9d9046af483c43bbd8497aad9c60d41ec462034 and 137289198ff1c57a14711d87b059e5fc5f9b11b257672503595ac31bad450a22&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; A F for friend or follow should be shown after each name that&#39;s a follow of the logged in user. F1 if the name is follow of a follow, and F2 if next level.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; allow special character input, and 256 limit &lt;a href=&#34;https://www.reddit.com/r/dartlang/comments/xcdsyx/i_am_seeing_that_stdinreadlinesync_returns_only/&#34;&gt;info&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;other longer term todo&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; parallel connections to relays in different isolate&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; build appimage for linux use&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Running Nostr Console using Docker&lt;/h1&gt; &#xA;&lt;p&gt;First check out or unzip the code to a directory, &lt;code&gt;cd&lt;/code&gt; to that directory, and from there type the following commands: (make sure Docker desktop is running in the background)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build  -t nostr_console .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it nostr_console start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Use&lt;/h1&gt; &#xA;&lt;p&gt;Easiest way to run nostr_console: Go to releases and get an executable for your platform.&lt;/p&gt; &#xA;&lt;p&gt;Otherwise do following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://docs.flutter.dev/get-started/install&#34;&gt;Flutter&lt;/a&gt; SDK, or &lt;a href=&#34;https://dart.dev/get-dart&#34;&gt;Dart&lt;/a&gt; SDK&lt;/li&gt; &#xA; &lt;li&gt;git clone this repository&lt;/li&gt; &#xA; &lt;li&gt;From the project folder, run command &lt;code&gt;dart pub get&lt;/code&gt; which gets all the dependencies&lt;/li&gt; &#xA; &lt;li&gt;Run command &lt;code&gt;dart run bin/nostr_console.dart&lt;/code&gt;, which will run it with default settings.&lt;/li&gt; &#xA; &lt;li&gt;Further you can create an executable for your platform by &lt;code&gt;dart compile exe bin/nostr_console.dart&lt;/code&gt; which will create an executable for your platform. You can invoke that exe with required parameters. On Windows, you can create a shortcut to it with your desired command line arguments mentioned in it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;usage: dart run bin/nostr_console.dart [OPTIONS] &#xA;&#xA;  OPTIONS&#xA;&#xA;      -p, --pubkey  &amp;lt;public key&amp;gt;    The hex public key of user whose events and feed are shown. Default is a hard-coded&#xA;                                    public key derived from a well known private key. When given, posts/replies can&#39;t be sent. &#xA;      -k, --prikey  &amp;lt;private key&amp;gt;   The hex private key of user whose events and feed are shown. Also used to sign events &#xA;                                    sent. Default is same-as-above hard-coded well known private key. &#xA;      -r, --relay   &amp;lt;relay urls&amp;gt;    The comma separated relay urls that are used as main relays. If given, these are used&#xA;                                    rather than the default relays.&#xA;      -d, --days    &amp;lt;N as num&amp;gt;      The latest number of days for which events are shown. Default is 1.&#xA;      -q, --request &amp;lt;REQ string&amp;gt;    This request is sent verbatim to the default relay. It can be used to receive all events&#xA;                                    from a relay. If not provided, then events for default or given user are shown.&#xA;      -f, --file    &amp;lt;filename&amp;gt;      Read from given file, if it is present, and at the end of the program execution, write&#xA;                                    to it all the events (including the ones read, and any new received).&#xA;      -s, --disable-file            When turned on, even the default file is not read from.&#xA;      -t, --translate               Translate some of the recent posts using Google translate site ( and not api). Google &#xA;                                    is accessed for any translation request only if this flag is present, and not otherwise.&#xA;      -l, --location                The given value is added as a &#39;location&#39; tag with every kind 1 post made&#xA;      -h, --help                    Print help/usage message and exit. &#xA;      -v, --version                 Print version and exit.&#xA;&#xA;  UI Options                                &#xA;      -a, --align  &amp;lt;left&amp;gt;           When &#34;left&#34; is given as option to this argument, then the text is aligned to left. By default&#xA;                                    the posts or text is aligned to the center of the terminal. &#xA;      -w, --width  &amp;lt;width as num&amp;gt;   This specifies how wide you want the text to be, in number of columns. Default is 100. &#xA;                                    Can&#39;t be less than 60.&#xA;      -m, --maxdepth &amp;lt;depth as num&amp;gt; The maximum depth to which the threads can be displayed. Minimum is 2 and&#xA;                                    maximum allowed is 12. &#xA;      -c, --color  &amp;lt;color&amp;gt;          Color option can be green, cyan, white, black, red and blue.&#xA;&#xA;  Advanced&#xA;      -y, --difficulty &amp;lt;number&amp;gt;     The difficulty number in bits, only for kind 1 messages. The next larger number divisible by 4 is &#xA;                                    taken as difficulty. Can&#39;t be more than 24 bits, because otherwise it typically takes too much &#xA;                                    time. Minimum and default is 0, which means no difficulty.&#xA;      -e, --overwrite               Will over write the file with all the events that were read from file, and all newly received. Is&#xA;                                    useful when the file has to be cleared of old unused events. A backup should be made just in case&#xA;                                    of original file before invoking.&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Command line examples&lt;/h1&gt; &#xA;&lt;p&gt;To &#39;login&#39; as a user with private key K:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nostr_console.exe  --prikey=K&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get ALL the latest messages on relays for last 3 days (on bash shell which allows backtick execution), for user with private key K:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nostr_console.exe  --prikey=K --request=`echo &#34;[\&#34;REQ\&#34;,\&#34;l\&#34;,{\&#34;since\&#34;:$(date -d &#39;-3 day&#39; +%s)}]&#34;`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Configuring Proxy&lt;/h1&gt; &#xA;&lt;p&gt;When you are in an network which blocks outgoing HTTPS (e.g. company firewall), but there is a proxy you can set environment variable before running nostr_console. Examples below use authentication. Drop username:password if not required.&lt;/p&gt; &#xA;&lt;h2&gt;Linux&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ export HTTP_PROXY=http://username:password@proxy.example.com:1234&#xA;$ export HTTPS_PROXY=http://username:password@proxy.example.com:5678&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make permanent add to your shell profile, e.g. ~/.bashrc or to /etc/profile.d/&lt;/p&gt; &#xA;&lt;h2&gt;Windows&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;C:\setx HTTP_PROXY=http://username:password@proxy.example.com:1234&#xA;C:\setx HTTPS_PROXY=http://username:password@proxy.example.com:5678&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/setx&#34;&gt;setx&lt;/a&gt; to set an environment variable changes the value used in both the current command prompt session and all command prompt sessions that you create after running the command. It does not affect other command shells that are already running at the time you run the command.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/set_1&#34;&gt;set&lt;/a&gt; to set an environment variable changes the value used until the end of the current command prompt session, or until you set the variable to a different value.&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;img width=&#34;1280&#34; alt=&#34;2022-12-02 (5)&#34; src=&#34;https://user-images.githubusercontent.com/64505169/205257958-8b9cdb32-2139-48dc-8394-dc1952ef825d.png&#34;&gt; Showing Social network thread with re-shifting to left where threads are re-alignment to left for easier reading. &#xA;&lt;img width=&#34;1280&#34; alt=&#34;2022-12-02 (6)&#34; src=&#34;https://user-images.githubusercontent.com/64505169/205258177-3d236aaa-2745-4f99-8f04-f75a1442cee6.png&#34;&gt; &#xA;&lt;p&gt;Public channels overview with menu&lt;/p&gt; &#xA;&lt;img width=&#34;1280&#34; alt=&#34;2022-12-02 (7)&#34; src=&#34;https://user-images.githubusercontent.com/64505169/205258403-ca81a17f-374b-4858-aa08-86e1e2f29b17.png&#34;&gt; &#xA;&lt;p&gt;How public channels look like as of mid late 2022, with --translate flag automatically translating into English.&lt;/p&gt; &#xA;&lt;h1&gt;Contact&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/nostr_protocol&#34;&gt;Nostr Telegram Channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/+YswV5fvfvPwyNmI1&#34;&gt;Nostr Console Telegram channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Nostr Pulic Channel 52cab2e3e504ad6447d284b85b5cc601ca0613b151641e77facfec851c2ca816&lt;/p&gt;</summary>
  </entry>
</feed>