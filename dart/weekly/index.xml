<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-02T02:08:12Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>syncfusion/flutter-widgets</title>
    <updated>2022-06-02T02:08:12Z</updated>
    <id>tag:github.com,2022-06-02:/syncfusion/flutter-widgets</id>
    <link href="https://github.com/syncfusion/flutter-widgets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Syncfusion Flutter widgets libraries include high quality UI widgets and file-format packages to help you create rich, high-quality applications for iOS, Android, and web from a single code base.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/flutter-widgets-banner-1.png&#34;&gt; &#xA;&lt;h1&gt;Syncfusion Flutter Widgets&lt;/h1&gt; &#xA;&lt;p&gt;Syncfusion Flutter widgets libraries include high-quality UI widgets and file-format packages to help you create rich, high-quality applications for iOS, Android, and web from a single code base.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This is a commercial package. To use our packages, you need to have either the Syncfusion Commercial License or Syncfusion Community license. For more details, please check the &lt;a href=&#34;https://github.com/syncfusion/flutter-examples/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Our packages are now compatible with Flutter for Web. However, this will be in Beta until Flutter for Web becomes stable.&lt;/p&gt; &#xA;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/flutter-widgets-collage.png&#34;&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#repository-structure&#34;&gt;Repository structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#packages&#34;&gt;Packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#how-to-use&#34;&gt;How to use&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#referring-packages-source-in-your-application&#34;&gt;Referring packages source in your application&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#running-the-available-example&#34;&gt;Running the available example&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#get-the-demo-application&#34;&gt;Get the demo application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#useful-links&#34;&gt;Useful links&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#support-and-feedback&#34;&gt;Support and feedback&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/#about-syncfusion&#34;&gt;About Syncfusion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Repository structure&lt;/h2&gt; &#xA;&lt;p&gt;This repository holds the source code of all the Syncfusion Flutter widgets and libraries. Source code of the widget, a working example, read me, changelog, etc., files are available in the &lt;code&gt;packages&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Also, you can view the samples code from &lt;a href=&#34;https://github.com/syncfusion/flutter-examples&#34;&gt;this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package/Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Available widgets/libraries&lt;/th&gt; &#xA;   &lt;th&gt;Pub&lt;/th&gt; &#xA;   &lt;th&gt;Points&lt;/th&gt; &#xA;   &lt;th&gt;Popularity&lt;/th&gt; &#xA;   &lt;th&gt;Likes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_charts/&#34;&gt;syncfusion_flutter_charts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfCartesianChart&lt;/li&gt;&#xA;     &lt;li&gt;SfCircularChart&lt;/li&gt;&#xA;     &lt;li&gt;SfPyramidChart&lt;/li&gt;&#xA;     &lt;li&gt;SfFunnelChart&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_charts&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_charts.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_charts/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_charts/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_charts/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_charts/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_charts/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_charts/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_calendar/&#34;&gt;syncfusion_flutter_calendar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfCalendar&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_calendar&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_calendar.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_calendar/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_calendar/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_calendar/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_calendar/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_calendar/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_calendar/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_datagrid/&#34;&gt;syncfusion_flutter_datagrid&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfDataGrid&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datagrid&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_datagrid.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datagrid/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_datagrid/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datagrid/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_datagrid/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datagrid/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_datagrid/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_pdfviewer/&#34;&gt;syncfusion_flutter_pdfviewer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfPdfViewer&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdfviewer&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_pdfviewer.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdfviewer/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_pdfviewer/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdfviewer/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_pdfviewer/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdfviewer/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_pdfviewer/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_pdf/&#34;&gt;syncfusion_flutter_pdf&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;PDF library&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdf&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_pdf.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdf/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_pdf/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdf/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_pdf/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_pdf/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_pdf/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_xlsio/&#34;&gt;syncfusion_flutter_xlsio&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;XlsIO library&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_xlsio&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_xlsio.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_xlsio/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_xlsio/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_xlsio/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_xlsio/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_xlsio/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_xlsio/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_datepicker/&#34;&gt;syncfusion_flutter_datepicker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfDateRangePicker&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datepicker&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_datepicker.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datepicker/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_datepicker/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datepicker/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_datepicker/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_datepicker/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_datepicker/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_maps/&#34;&gt;syncfusion_flutter_maps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfMaps&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_maps&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_maps.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_maps/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_maps/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_maps/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_maps/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_maps/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_maps/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_gauges/&#34;&gt;syncfusion_flutter_gauges&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfRadialGauge&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_gauges&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_gauges.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_gauges/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_gauges/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_gauges/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_gauges/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_gauges/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_gauges/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_sliders/&#34;&gt;syncfusion_flutter_sliders&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfSlider&lt;/li&gt;&#xA;     &lt;li&gt;SfRangeSlider&lt;/li&gt;&#xA;     &lt;li&gt;SfRangeSelector&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_sliders&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_sliders.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_sliders/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_sliders/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_sliders/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_sliders/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_sliders/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_sliders/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_signaturepad/&#34;&gt;syncfusion_flutter_signaturepad&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfSignaturePad&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_signaturepad&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_signaturepad.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_signaturepad/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_signaturepad/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_signaturepad/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_signaturepad/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_signaturepad/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_signaturepad/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_barcodes/&#34;&gt;syncfusion_flutter_barcodes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;SfBarcodeGenerator&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_barcodes&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_barcodes.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_barcodes/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_barcodes/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_barcodes/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_barcodes/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_barcodes/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_barcodes/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_officechart/&#34;&gt;syncfusion_officechart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Office chart library&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officechart&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_officechart.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officechart/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_officechart/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officechart/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_officechart/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officechart/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_officechart/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_officecore/&#34;&gt;syncfusion_officecore&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This package is a dependecy package for &lt;code&gt;Office chart&lt;/code&gt; library.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officecore&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_officecore.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officecore/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_officecore/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officecore/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_officecore/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_officecore/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_officecore/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_flutter_core/&#34;&gt;syncfusion_flutter_core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This package is a dependecy package for all the Syncfusion Flutter widgets and libraries.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_core&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_flutter_core.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_core/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_core/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_core/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_core/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_flutter_core/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_flutter_core/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syncfusion/flutter-widgets/master/packages/syncfusion_localizations/&#34;&gt;syncfusion_localizations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This package contains localized text for 77 cultures for all the applicable Syncfusion Flutter Widgets.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_localizations&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/syncfusion_localizations.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_localizations/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_localizations/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_localizations/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_localizations/popularity&#34; alt=&#34;popularity&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dev/packages/syncfusion_localizations/score&#34;&gt;&lt;img src=&#34;https://badges.bar/syncfusion_localizations/likes&#34; alt=&#34;likes&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;h3&gt;Referring packages source in your application&lt;/h3&gt; &#xA;&lt;p&gt;All the packages available in the &lt;code&gt;packages&lt;/code&gt; folder can be referred in your application by following the below steps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Clone the &lt;a href=&#34;&#34;&gt;flutter-widgets&lt;/a&gt; repository into your machine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Refer the required package in your application&#39;s &lt;code&gt;pubspec.yaml&lt;/code&gt; file by mentioning its local path. For example, here we have referred the charts package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;syncfusion_flutter_charts:&#xA;    path: D:/flutter-widgets/packages/syncfusion_flutter_charts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the following command to get the required packages.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;$ flutter pub get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run your application either using &lt;code&gt;F5&lt;/code&gt; or &lt;code&gt;Run &amp;gt; Start Debugging&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Running the available example&lt;/h3&gt; &#xA;&lt;p&gt;All the packages available in the &lt;code&gt;packages&lt;/code&gt; folder has an example and it can be run by following the below steps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Clone the &lt;a href=&#34;&#34;&gt;flutter-widgets&lt;/a&gt; repository into your machine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open the example folder available in packages in an IDE. The below path is for reference.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;..\flutter-widgets\packages\syncfusion_flutter_charts\example&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the following command to get the required packages.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;$ flutter pub get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In the example, packages are referred from the local folder which is available in this repository. If you wish, you can also refer the packages from &lt;a href=&#34;https://pub.dev&#34;&gt;pub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run your application either using &lt;code&gt;F5&lt;/code&gt; or &lt;code&gt;Run &amp;gt; Start Debugging&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get the demo application&lt;/h2&gt; &#xA;&lt;p&gt;Explore the full capabilities of our Flutter widgets on your device by installing our sample browser applications from the below app stores, and view samples code in GitHub.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.syncfusion.flutter.examples&#34;&gt;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/FTControl/google-play.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://apps.apple.com/us/app/syncfusion-flutter-ui-widgets/id1475231341&#34;&gt;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/FTControl/apple-button.png&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/syncfusion/flutter-examples&#34;&gt;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/FTControl/GitHub.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flutter.syncfusion.com&#34;&gt;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/FTControl/web_sample_browser.png&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;p&gt;Take a look at the following to learn more about Syncfusion Flutter widgets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.syncfusion.com/flutter-widgets&#34;&gt;Syncfusion Flutter product page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.syncfusion.com/flutter/introduction/overview&#34;&gt;User guide documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.syncfusion.com/flutter/introduction/api-reference&#34;&gt;API reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.syncfusion.com/kb/flutter&#34;&gt;Knowledge base&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.syncfusion.com/tutorial-videos/flutter&#34;&gt;Video tutorials&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support and feedback&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For any other queries, reach our &lt;a href=&#34;https://www.syncfusion.com/support/directtrac/incidents/newincident&#34;&gt;Syncfusion support team&lt;/a&gt; or post the queries through the &lt;a href=&#34;https://www.syncfusion.com/forums&#34;&gt;Community forums&lt;/a&gt; and submit a feature request or a bug through our &lt;a href=&#34;https://www.syncfusion.com/feedback/flutter&#34;&gt;Feedback portal&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To renew the subscription, click &lt;a href=&#34;https://www.syncfusion.com/sales/products&#34;&gt;renew&lt;/a&gt; or contact our sales team at &lt;a href=&#34;mailto:salessupport@syncfusion.com&#34;&gt;salessupport@syncfusion.com&lt;/a&gt; | Toll Free: 1-888-9 DOTNET.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About Syncfusion&lt;/h2&gt; &#xA;&lt;p&gt;Founded in 2001 and headquartered in Research Triangle Park, N.C., Syncfusion has more than 20,000 customers and more than 1 million users, including large financial institutions, Fortune 500 companies, and global IT consultancies.&lt;/p&gt; &#xA;&lt;p&gt;Today we provide 1,000+ controls and frameworks for web (&lt;a href=&#34;https://www.syncfusion.com/aspnet-core-ui-controls&#34;&gt;ASP.NET Core&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/aspnet-mvc-ui-controls&#34;&gt;ASP.NET MVC&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/jquery/aspnet-web-forms-ui-controls&#34;&gt;ASP.NET WebForms&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/javascript-ui-controls&#34;&gt;JavaScript&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/angular-ui-components&#34;&gt;Angular&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/react-ui-components&#34;&gt;React&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/vue-ui-components&#34;&gt;Vue&lt;/a&gt;, and &lt;a href=&#34;https://www.syncfusion.com/blazor-components&#34;&gt;Blazor&lt;/a&gt;, mobile (&lt;a href=&#34;https://www.syncfusion.com/xamarin-ui-controls&#34;&gt;Xamarin&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/flutter-widgets&#34;&gt;Flutter&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/uwp-ui-controls&#34;&gt;UWP&lt;/a&gt;, and &lt;a href=&#34;https://www.syncfusion.com/javascript-ui-controls&#34;&gt;JavaScript&lt;/a&gt;), and desktop development (&lt;a href=&#34;https://www.syncfusion.com/winforms-ui-controls&#34;&gt;WinForms&lt;/a&gt;, &lt;a href=&#34;https://www.syncfusion.com/wpf-ui-controls&#34;&gt;WPF&lt;/a&gt;, and &lt;a href=&#34;https://www.syncfusion.com/uwp-ui-controls&#34;&gt;UWP&lt;/a&gt;). We provide ready-to deploy enterprise software for dashboards, reports, data integration, and big data processing. Many customers have saved millions in licensing fees by deploying our software.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rrousselGit/provider</title>
    <updated>2022-06-02T02:08:12Z</updated>
    <id>tag:github.com,2022-06-02:/rrousselGit/provider</id>
    <link href="https://github.com/rrousselGit/provider" rel="alternate"></link>
    <summary type="html">&lt;p&gt;InheritedWidgets, but simple&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/rrousselGit/provider/raw/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://github.com/rrousselGit/provider/raw/master/resources/translations/pt_br/README.md&#34;&gt;Português&lt;/a&gt; | &lt;a href=&#34;https://github.com/rrousselGit/provider/raw/master/resources/translations/zh-CN/README.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://github.com/rrousselGit/provider/raw/master/resources/translations/es_MX/README.md&#34;&gt;Español&lt;/a&gt; | &lt;a href=&#34;https://github.com/rrousselGit/provider/raw/master/resources/translations/ko-KR/README.md&#34;&gt;한국어&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/provider/master/resources/translations/bn_BD/README.md&#34;&gt;বাংলা&lt;/a&gt; | &lt;a href=&#34;https://github.com/rrousselGit/provider/raw/master/resources/translations/ja_JP/README.md&#34;&gt;日本語&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rrousselGit/provider/actions&#34;&gt;&lt;img src=&#34;https://github.com/rrousselGit/provider/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/rrousselGit/provider&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/rrousselGit/provider/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/Bbumvej&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/765557403865186374.svg?logo=discord&amp;amp;color=blue&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flutter.dev/docs/development/packages-and-plugins/favorites&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rrousselGit/provider/master/resources/flutter_favorite.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A wrapper around &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt; to make them easier to use and more reusable.&lt;/p&gt; &#xA;&lt;p&gt;By using &lt;code&gt;provider&lt;/code&gt; instead of manually writing &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;, you get:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;simplified allocation/disposal of resources&lt;/li&gt; &#xA; &lt;li&gt;lazy-loading&lt;/li&gt; &#xA; &lt;li&gt;a vastly reduced boilerplate over making a new class every time&lt;/li&gt; &#xA; &lt;li&gt;devtool friendly – using Provider, the state of your application will be visible in the Flutter devtool&lt;/li&gt; &#xA; &lt;li&gt;a common way to consume these &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html&#34;&gt;InheritedWidget&lt;/a&gt;s (See &lt;a href=&#34;https://pub.dev/documentation/provider/latest/provider/Provider/of.html&#34;&gt;Provider.of&lt;/a&gt;/&lt;a href=&#34;https://pub.dev/documentation/provider/latest/provider/Consumer-class.html&#34;&gt;Consumer&lt;/a&gt;/&lt;a href=&#34;https://pub.dev/documentation/provider/latest/provider/Selector-class.html&#34;&gt;Selector&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;increased scalability for classes with a listening mechanism that grows exponentially in complexity (such as &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/ChangeNotifier-class.html&#34;&gt;ChangeNotifier&lt;/a&gt;, which is O(N) for dispatching notifications).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To read more about a &lt;code&gt;provider&lt;/code&gt;, see its &lt;a href=&#34;https://pub.dev/documentation/provider/latest/provider/provider-library.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/development/data-and-backend/state-mgmt/simple&#34;&gt;The official Flutter state management documentation&lt;/a&gt;, which showcases how to use &lt;code&gt;provider&lt;/code&gt; + &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/ChangeNotifier-class.html&#34;&gt;ChangeNotifier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/brianegan/flutter_architecture_samples/tree/master/change_notifier_provider&#34;&gt;flutter architecture sample&lt;/a&gt;, which contains an implementation of that app using &lt;code&gt;provider&lt;/code&gt; + &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/ChangeNotifier-class.html&#34;&gt;ChangeNotifier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felangel/bloc&#34;&gt;flutter_bloc&lt;/a&gt; and &lt;a href=&#34;https://github.com/mobxjs/mobx.dart&#34;&gt;Mobx&lt;/a&gt;, which uses a &lt;code&gt;provider&lt;/code&gt; in their architecture&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Migration from 4.x.x to 5.0.0-nullsafety&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;initialData&lt;/code&gt; for both &lt;code&gt;FutureProvider&lt;/code&gt; and &lt;code&gt;StreamProvider&lt;/code&gt; is now required.&lt;/p&gt; &lt;p&gt;To migrate, what used to be:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FutureProvider&amp;lt;int&amp;gt;(&#xA;  create: (context) =&amp;gt; Future.value(42),&#xA;  child: MyApp(),&#xA;)&#xA;&#xA;Widget build(BuildContext context) {&#xA;  final value = context.watch&amp;lt;int&amp;gt;();&#xA;  return Text(&#39;$value&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;is now:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;FutureProvider&amp;lt;int?&amp;gt;(&#xA;  initialValue: null,&#xA;  create: (context) =&amp;gt; Future.value(42),&#xA;  child: MyApp(),&#xA;)&#xA;&#xA;Widget build(BuildContext context) {&#xA;  // be sure to specify the ? in watch&amp;lt;int?&amp;gt;&#xA;  final value = context.watch&amp;lt;int?&amp;gt;();&#xA;  return Text(&#39;$value&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ValueListenableProvider&lt;/code&gt; is removed&lt;/p&gt; &lt;p&gt;To migrate, you can instead use &lt;code&gt;Provider&lt;/code&gt; combined with &lt;code&gt;ValueListenableBuilder&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ValueListenableBuilder&amp;lt;int&amp;gt;(&#xA;  valueListenable: myValueListenable,&#xA;  builder: (context, value, _) {&#xA;    return Provider&amp;lt;int&amp;gt;.value(&#xA;      value: value,&#xA;      child: MyApp(),&#xA;    );&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Exposing a value&lt;/h3&gt; &#xA;&lt;h4&gt;Exposing a new object instance&lt;/h4&gt; &#xA;&lt;p&gt;Providers allow you to not only expose a value, but also create, listen, and dispose of it.&lt;/p&gt; &#xA;&lt;p&gt;To expose a newly created object, use the default constructor of a provider. Do &lt;em&gt;not&lt;/em&gt; use the &lt;code&gt;.value&lt;/code&gt; constructor if you want to &lt;strong&gt;create&lt;/strong&gt; an object, or you may otherwise have undesired side effects.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://stackoverflow.com/questions/52249578/how-to-deal-with-unwanted-widget-build&#34;&gt;this StackOverflow answer&lt;/a&gt; which explains why using the &lt;code&gt;.value&lt;/code&gt; constructor to create values is undesired.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;DO&lt;/strong&gt; create a new object inside &lt;code&gt;create&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Provider(&#xA;  create: (_) =&amp;gt; MyModel(),&#xA;  child: ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;DON&#39;T&lt;/strong&gt; use &lt;code&gt;Provider.value&lt;/code&gt; to create your object.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ChangeNotifierProvider.value(&#xA;  value: MyModel(),&#xA;  child: ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;DON&#39;T&lt;/strong&gt; create your object from variables that can change over time.&lt;/p&gt; &lt;p&gt;In such a situation, your object would never update when the value changes.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;int count;&#xA;&#xA;Provider(&#xA;  create: (_) =&amp;gt; MyModel(count),&#xA;  child: ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to pass variables that can change over time to your object, consider using &lt;code&gt;ProxyProvider&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;int count;&#xA;&#xA;ProxyProvider0(&#xA;  update: (_, __) =&amp;gt; MyModel(count),&#xA;  child: ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;When using the &lt;code&gt;create&lt;/code&gt;/&lt;code&gt;update&lt;/code&gt; callback of a provider, it is worth noting that this callback is called lazily by default.&lt;/p&gt; &#xA;&lt;p&gt;This means that until the value is requested at least once, the &lt;code&gt;create&lt;/code&gt;/&lt;code&gt;update&lt;/code&gt; callbacks won&#39;t be called.&lt;/p&gt; &#xA;&lt;p&gt;This behavior can be disabled if you want to pre-compute some logic, using the &lt;code&gt;lazy&lt;/code&gt; parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MyProvider(&#xA;  create: (_) =&amp;gt; Something(),&#xA;  lazy: false,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Reusing an existing object instance:&lt;/h4&gt; &#xA;&lt;p&gt;If you already have an object instance and want to expose it, it would be best to use the &lt;code&gt;.value&lt;/code&gt; constructor of a provider.&lt;/p&gt; &#xA;&lt;p&gt;Failing to do so may call your object &lt;code&gt;dispose&lt;/code&gt; method when it is still in use.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;DO&lt;/strong&gt; use &lt;code&gt;ChangeNotifierProvider.value&lt;/code&gt; to provide an existing &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/ChangeNotifier-class.html&#34;&gt;ChangeNotifier&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MyChangeNotifier variable;&#xA;&#xA;ChangeNotifierProvider.value(&#xA;  value: variable,&#xA;  child: ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;DON&#39;T&lt;/strong&gt; reuse an existing &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/ChangeNotifier-class.html&#34;&gt;ChangeNotifier&lt;/a&gt; using the default constructor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MyChangeNotifier variable;&#xA;&#xA;ChangeNotifierProvider(&#xA;  create: (_) =&amp;gt; variable,&#xA;  child: ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reading a value&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to read a value is by using the extension methods on [BuildContext]:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;context.watch&amp;lt;T&amp;gt;()&lt;/code&gt;, which makes the widget listen to changes on &lt;code&gt;T&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;context.read&amp;lt;T&amp;gt;()&lt;/code&gt;, which returns &lt;code&gt;T&lt;/code&gt; without listening to it&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;context.select&amp;lt;T, R&amp;gt;(R cb(T value))&lt;/code&gt;, which allows a widget to listen to only a small part of &lt;code&gt;T&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;One can also use the static method &lt;code&gt;Provider.of&amp;lt;T&amp;gt;(context)&lt;/code&gt;, which will behave similarly to &lt;code&gt;watch&lt;/code&gt;. When the &lt;code&gt;listen&lt;/code&gt; parameter is set to &lt;code&gt;false&lt;/code&gt; (as in &lt;code&gt;Provider.of&amp;lt;T&amp;gt;(context, listen: false)&lt;/code&gt;), then it will behave similarly to &lt;code&gt;read&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s worth noting that &lt;code&gt;context.read&amp;lt;T&amp;gt;()&lt;/code&gt; won&#39;t make a widget rebuild when the value changes and it cannot be called inside &lt;code&gt;StatelessWidget.build&lt;/code&gt;/&lt;code&gt;State.build&lt;/code&gt;. On the other hand, it can be freely called outside of these methods.&lt;/p&gt; &#xA;&lt;p&gt;These methods will look up in the widget tree starting from the widget associated with the &lt;code&gt;BuildContext&lt;/code&gt; passed and will return the nearest variable of type &lt;code&gt;T&lt;/code&gt; found (or throw if nothing is found).&lt;/p&gt; &#xA;&lt;p&gt;This operation is O(1). It doesn&#39;t involve walking in the widget tree.&lt;/p&gt; &#xA;&lt;p&gt;Combined with the first example of &lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/provider/master/#exposing-a-value&#34;&gt;exposing a value&lt;/a&gt;, this the widget will read the exposed &lt;code&gt;String&lt;/code&gt; and render &#34;Hello World.&#34;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Home extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Text(&#xA;      // Don&#39;t forget to pass the type of the object you want to obtain to `watch`!&#xA;      context.watch&amp;lt;String&amp;gt;(),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, instead of using these methods, we can use &lt;a href=&#34;https://pub.dev/documentation/provider/latest/provider/Consumer-class.html&#34;&gt;Consumer&lt;/a&gt; and &lt;a href=&#34;https://pub.dev/documentation/provider/latest/provider/Selector-class.html&#34;&gt;Selector&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These can be useful for performance optimizations or when it is difficult to obtain a &lt;code&gt;BuildContext&lt;/code&gt; descendant of the provider.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/rrousselGit/provider#my-widget-rebuilds-too-often-what-can-i-do&#34;&gt;FAQ&lt;/a&gt; or the documentation of &lt;a href=&#34;https://pub.dev/documentation/provider/latest/provider/Consumer-class.html&#34;&gt;Consumer&lt;/a&gt; and &lt;a href=&#34;https://pub.dev/documentation/provider/latest/provider/Selector-class.html&#34;&gt;Selector&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Optionally depending on a provider&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes, we may want to support cases where a provider does not exist. An example would be for reusable widgets that could be used in various locations, including outside of a provider.&lt;/p&gt; &#xA;&lt;p&gt;To do so, when calling &lt;code&gt;context.watch&lt;/code&gt;/&lt;code&gt;context.read&lt;/code&gt;, make the generic type nullable. Such that instead of:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;context.watch&amp;lt;Model&amp;gt;()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which will throw a &lt;code&gt;ProviderNotFoundException&lt;/code&gt; if no matching providers are found, do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;context.watch&amp;lt;Model?&amp;gt;()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which will try to obtain a matching provider. But if none are found, &lt;code&gt;null&lt;/code&gt; will be returned instead of throwing.&lt;/p&gt; &#xA;&lt;h3&gt;MultiProvider&lt;/h3&gt; &#xA;&lt;p&gt;When injecting many values in big applications, &lt;code&gt;Provider&lt;/code&gt; can rapidly become pretty nested:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Provider&amp;lt;Something&amp;gt;(&#xA;  create: (_) =&amp;gt; Something(),&#xA;  child: Provider&amp;lt;SomethingElse&amp;gt;(&#xA;    create: (_) =&amp;gt; SomethingElse(),&#xA;    child: Provider&amp;lt;AnotherThing&amp;gt;(&#xA;      create: (_) =&amp;gt; AnotherThing(),&#xA;      child: someWidget,&#xA;    ),&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MultiProvider(&#xA;  providers: [&#xA;    Provider&amp;lt;Something&amp;gt;(create: (_) =&amp;gt; Something()),&#xA;    Provider&amp;lt;SomethingElse&amp;gt;(create: (_) =&amp;gt; SomethingElse()),&#xA;    Provider&amp;lt;AnotherThing&amp;gt;(create: (_) =&amp;gt; AnotherThing()),&#xA;  ],&#xA;  child: someWidget,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The behavior of both examples is strictly the same. &lt;code&gt;MultiProvider&lt;/code&gt; only changes the appearance of the code.&lt;/p&gt; &#xA;&lt;h3&gt;ProxyProvider&lt;/h3&gt; &#xA;&lt;p&gt;Since the 3.0.0, there is a new kind of provider: &lt;code&gt;ProxyProvider&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ProxyProvider&lt;/code&gt; is a provider that combines multiple values from other providers into a new object and sends the result to &lt;code&gt;Provider&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;That new object will then be updated whenever one of the provider we depend on gets updated.&lt;/p&gt; &#xA;&lt;p&gt;The following example uses &lt;code&gt;ProxyProvider&lt;/code&gt; to build translations based on a counter coming from another provider.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(BuildContext context) {&#xA;  return MultiProvider(&#xA;    providers: [&#xA;      ChangeNotifierProvider(create: (_) =&amp;gt; Counter()),&#xA;      ProxyProvider&amp;lt;Counter, Translations&amp;gt;(&#xA;        update: (_, counter, __) =&amp;gt; Translations(counter.value),&#xA;      ),&#xA;    ],&#xA;    child: Foo(),&#xA;  );&#xA;}&#xA;&#xA;class Translations {&#xA;  const Translations(this._value);&#xA;&#xA;  final int _value;&#xA;&#xA;  String get title =&amp;gt; &#39;You clicked $_value times&#39;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It comes under multiple variations, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ProxyProvider&lt;/code&gt; vs &lt;code&gt;ProxyProvider2&lt;/code&gt; vs &lt;code&gt;ProxyProvider3&lt;/code&gt;, ...&lt;/p&gt; &lt;p&gt;That digit after the class name is the number of other providers that &lt;code&gt;ProxyProvider&lt;/code&gt; depends on.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ProxyProvider&lt;/code&gt; vs &lt;code&gt;ChangeNotifierProxyProvider&lt;/code&gt; vs &lt;code&gt;ListenableProxyProvider&lt;/code&gt;, ...&lt;/p&gt; &lt;p&gt;They all work similarly, but instead of sending the result into a &lt;code&gt;Provider&lt;/code&gt;, a &lt;code&gt;ChangeNotifierProxyProvider&lt;/code&gt; will send its value to a &lt;code&gt;ChangeNotifierProvider&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;FAQ&lt;/h3&gt; &#xA;&lt;h4&gt;Can I inspect the content of my objects?&lt;/h4&gt; &#xA;&lt;p&gt;Flutter comes with a &lt;a href=&#34;https://github.com/flutter/devtools&#34;&gt;devtool&lt;/a&gt; that shows what the widget tree is at a given moment.&lt;/p&gt; &#xA;&lt;p&gt;Since providers are widgets, they are also visible in that devtool:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rrousselGit/provider/master/resources/devtools_providers.jpg&#34; width=&#34;200&#34;&gt; &#xA;&lt;p&gt;From there, if you click on one provider, you will be able to see the value it exposes:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rrousselGit/provider/master/resources/expanded_devtools.jpg&#34; width=&#34;200&#34;&gt; &#xA;&lt;p&gt;(screenshot of the devtools using the &lt;code&gt;example&lt;/code&gt; folder)&lt;/p&gt; &#xA;&lt;h4&gt;The devtool only shows &#34;Instance of MyClass&#34;. What can I do?&lt;/h4&gt; &#xA;&lt;p&gt;By default, the devtool relies on &lt;code&gt;toString&lt;/code&gt;, which defaults to &#34;Instance of MyClass&#34;.&lt;/p&gt; &#xA;&lt;p&gt;To have something more useful, you have two solutions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;use the &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/Diagnosticable-class.html&#34;&gt;Diagnosticable&lt;/a&gt; API from Flutter.&lt;/p&gt; &lt;p&gt;For most cases, I will use &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/DiagnosticableTreeMixin-mixin.html&#34;&gt;DiagnosticableTreeMixin&lt;/a&gt; on your objects, followed by a custom implementation of &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/DiagnosticableTreeMixin/debugFillProperties.html&#34;&gt;debugFillProperties&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class MyClass with DiagnosticableTreeMixin {&#xA;  MyClass({this.a, this.b});&#xA;&#xA;  final int a;&#xA;  final String b;&#xA;&#xA;  @override&#xA;  void debugFillProperties(DiagnosticPropertiesBuilder properties) {&#xA;    super.debugFillProperties(properties);&#xA;    // list all the properties of your class here.&#xA;    // See the documentation of debugFillProperties for more information.&#xA;    properties.add(IntProperty(&#39;a&#39;, a));&#xA;    properties.add(StringProperty(&#39;b&#39;, b));&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Override &lt;code&gt;toString&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you cannot use &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/DiagnosticableTreeMixin-mixin.html&#34;&gt;DiagnosticableTreeMixin&lt;/a&gt; (like if your class is in a package that does not depend on Flutter), then you can override &lt;code&gt;toString&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;This is easier than using &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/DiagnosticableTreeMixin-mixin.html&#34;&gt;DiagnosticableTreeMixin&lt;/a&gt; but is less powerful: You will not be able to expand/collapse the details of your object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class MyClass with DiagnosticableTreeMixin {&#xA;  MyClass({this.a, this.b});&#xA;&#xA;  final int a;&#xA;  final String b;&#xA;&#xA;  @override&#xA;  String toString() {&#xA;    return &#39;$runtimeType(a: $a, b: $b)&#39;;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;I have an exception when obtaining Providers inside &lt;code&gt;initState&lt;/code&gt;. What can I do?&lt;/h4&gt; &#xA;&lt;p&gt;This exception happens because you&#39;re trying to listen to a provider from a life-cycle that will never ever be called again.&lt;/p&gt; &#xA;&lt;p&gt;It means that you either should use another life-cycle (&lt;code&gt;build&lt;/code&gt;), or explicitly specify that you do not care about updates.&lt;/p&gt; &#xA;&lt;p&gt;As such, instead of:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;initState() {&#xA;  super.initState();&#xA;  print(context.watch&amp;lt;Foo&amp;gt;().value);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;you can do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Value value;&#xA;&#xA;Widget build(BuildContext context) {&#xA;  final value = context.watch&amp;lt;Foo&amp;gt;.value;&#xA;  if (value != this.value) {&#xA;    this.value = value;&#xA;    print(value);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which will print &lt;code&gt;value&lt;/code&gt; whenever it changes (and only when it changes).&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;initState() {&#xA;  super.initState();&#xA;  print(context.read&amp;lt;Foo&amp;gt;().value);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which will print &lt;code&gt;value&lt;/code&gt; once &lt;em&gt;and ignore updates.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;How to handle hot-reload on my objects?&lt;/h4&gt; &#xA;&lt;p&gt;You can make your provided object implement &lt;code&gt;ReassembleHandler&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Example extends ChangeNotifier implements ReassembleHandler {&#xA;  @override&#xA;  void reassemble() {&#xA;    print(&#39;Did hot-reload&#39;);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then used typically with &lt;code&gt;provider&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ChangeNotifierProvider(create: (_) =&amp;gt; Example()),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;I use &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/ChangeNotifier-class.html&#34;&gt;ChangeNotifier&lt;/a&gt;, and I have an exception when I update it. What happens?&lt;/h4&gt; &#xA;&lt;p&gt;This likely happens because you are modifying the &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/ChangeNotifier-class.html&#34;&gt;ChangeNotifier&lt;/a&gt; from one of its descendants &lt;em&gt;while the widget tree is building&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A typical situation where this happens is when starting an http request, where the future is stored inside the notifier:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;initState() {&#xA;  super.initState();&#xA;  context.read&amp;lt;MyNotifier&amp;gt;().fetchSomething();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is not allowed because the state update is synchronous.&lt;/p&gt; &#xA;&lt;p&gt;This means that some widgets may build &lt;em&gt;before&lt;/em&gt; the mutation happens (getting an old value), while other widgets will build &lt;em&gt;after&lt;/em&gt; the mutation is complete (getting a new value). This could cause inconsistencies in your UI and is therefore not allowed.&lt;/p&gt; &#xA;&lt;p&gt;Instead, you should perform that mutation in a place that would affect the entire tree equally:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;directly inside the &lt;code&gt;create&lt;/code&gt; of your provider/constructor of your model:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class MyNotifier with ChangeNotifier {&#xA;  MyNotifier() {&#xA;    _fetchSomething();&#xA;  }&#xA;&#xA;  Future&amp;lt;void&amp;gt; _fetchSomething() async {}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is useful when there&#39;s no &#34;external parameter&#34;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;asynchronously at the end of the frame:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;initState() {&#xA;  super.initState();&#xA;  Future.microtask(() =&amp;gt;&#xA;    context.read&amp;lt;MyNotifier&amp;gt;().fetchSomething(someValue);&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is slightly less ideal, but allows passing parameters to the mutation.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Do I have to use &lt;a href=&#34;https://api.flutter.dev/flutter/foundation/ChangeNotifier-class.html&#34;&gt;ChangeNotifier&lt;/a&gt; for complex states?&lt;/h4&gt; &#xA;&lt;p&gt;No.&lt;/p&gt; &#xA;&lt;p&gt;You can use any object to represent your state. For example, an alternate architecture is to use &lt;code&gt;Provider.value()&lt;/code&gt; combined with a &lt;code&gt;StatefulWidget&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a counter example using such architecture:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Example extends StatefulWidget {&#xA;  const Example({Key key, this.child}) : super(key: key);&#xA;&#xA;  final Widget child;&#xA;&#xA;  @override&#xA;  ExampleState createState() =&amp;gt; ExampleState();&#xA;}&#xA;&#xA;class ExampleState extends State&amp;lt;Example&amp;gt; {&#xA;  int _count;&#xA;&#xA;  void increment() {&#xA;    setState(() {&#xA;      _count++;&#xA;    });&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Provider.value(&#xA;      value: _count,&#xA;      child: Provider.value(&#xA;        value: this,&#xA;        child: widget.child,&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where we can read the state by doing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;return Text(context.watch&amp;lt;int&amp;gt;().toString());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and modify the state with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;return FloatingActionButton(&#xA;  onPressed: () =&amp;gt; context.read&amp;lt;ExampleState&amp;gt;().increment(),&#xA;  child: Icon(Icons.plus_one),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can create your own provider.&lt;/p&gt; &#xA;&lt;h4&gt;Can I make my Provider?&lt;/h4&gt; &#xA;&lt;p&gt;Yes. &lt;code&gt;provider&lt;/code&gt; exposes all the small components that make a fully-fledged provider.&lt;/p&gt; &#xA;&lt;p&gt;This includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;SingleChildStatelessWidget&lt;/code&gt;, to make any widget works with &lt;code&gt;MultiProvider&lt;/code&gt;. This interface is exposed as part of &lt;code&gt;package:provider/single_child_widget&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pub.dev/documentation/provider/latest/provider/InheritedProvider-class.html&#34;&gt;InheritedProvider&lt;/a&gt;, the generic &lt;code&gt;InheritedWidget&lt;/code&gt; obtained when doing &lt;code&gt;context.watch&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here&#39;s an example of a custom provider to use &lt;code&gt;ValueNotifier&lt;/code&gt; as the state: &lt;a href=&#34;https://gist.github.com/rrousselGit/4910f3125e41600df3c2577e26967c91&#34;&gt;https://gist.github.com/rrousselGit/4910f3125e41600df3c2577e26967c91&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;My widget rebuilds too often. What can I do?&lt;/h4&gt; &#xA;&lt;p&gt;Instead of &lt;code&gt;context.watch&lt;/code&gt;, you can use &lt;code&gt;context.select&lt;/code&gt; to listen only to the specific set of properties on the obtained object.&lt;/p&gt; &#xA;&lt;p&gt;For example, while you can write:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(BuildContext context) {&#xA;  final person = context.watch&amp;lt;Person&amp;gt;();&#xA;  return Text(person.name);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It may cause the widget to rebuild if something other than &lt;code&gt;name&lt;/code&gt; changes.&lt;/p&gt; &#xA;&lt;p&gt;Instead, you can use &lt;code&gt;context.select&lt;/code&gt; to listen only to the &lt;code&gt;name&lt;/code&gt; property:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget build(BuildContext context) {&#xA;  final name = context.select((Person p) =&amp;gt; p.name);&#xA;  return Text(name);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This way, the widget won&#39;t unnecessarily rebuild if something other than &lt;code&gt;name&lt;/code&gt; changes.&lt;/p&gt; &#xA;&lt;p&gt;Similarly, you can use &lt;a href=&#34;https://pub.dev/documentation/provider/latest/provider/Consumer-class.html&#34;&gt;Consumer&lt;/a&gt;/&lt;a href=&#34;https://pub.dev/documentation/provider/latest/provider/Selector-class.html&#34;&gt;Selector&lt;/a&gt;. Their optional &lt;code&gt;child&lt;/code&gt; argument allows rebuilding only a particular part of the widget tree:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Foo(&#xA;  child: Consumer&amp;lt;A&amp;gt;(&#xA;    builder: (_, a, child) {&#xA;      return Bar(a: a, child: child);&#xA;    },&#xA;    child: Baz(),&#xA;  ),&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, only &lt;code&gt;Bar&lt;/code&gt; will rebuild when &lt;code&gt;A&lt;/code&gt; updates. &lt;code&gt;Foo&lt;/code&gt; and &lt;code&gt;Baz&lt;/code&gt; won&#39;t unnecessarily rebuild.&lt;/p&gt; &#xA;&lt;h4&gt;Can I obtain two different providers using the same type?&lt;/h4&gt; &#xA;&lt;p&gt;No. While you can have multiple providers sharing the same type, a widget will be able to obtain only one of them: the closest ancestor.&lt;/p&gt; &#xA;&lt;p&gt;Instead, it would help if you explicitly gave both providers a different type.&lt;/p&gt; &#xA;&lt;p&gt;Instead of:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Provider&amp;lt;String&amp;gt;(&#xA;  create: (_) =&amp;gt; &#39;England&#39;,&#xA;  child: Provider&amp;lt;String&amp;gt;(&#xA;    create: (_) =&amp;gt; &#39;London&#39;,&#xA;    child: ...,&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prefer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Provider&amp;lt;Country&amp;gt;(&#xA;  create: (_) =&amp;gt; Country(&#39;England&#39;),&#xA;  child: Provider&amp;lt;City&amp;gt;(&#xA;    create: (_) =&amp;gt; City(&#39;London&#39;),&#xA;    child: ...,&#xA;  ),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Can I consume an interface and provide an implementation?&lt;/h4&gt; &#xA;&lt;p&gt;Yes, a type hint must be given to the compiler to indicate the interface will be consumed, with the implementation provided in create.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;abstract class ProviderInterface with ChangeNotifier {&#xA;  ...&#xA;}&#xA;&#xA;class ProviderImplementation with ChangeNotifier implements ProviderInterface {&#xA;  ...&#xA;}&#xA;&#xA;class Foo extends StatelessWidget {&#xA;  @override&#xA;  build(context) {&#xA;    final provider = Provider.of&amp;lt;ProviderInterface&amp;gt;(context);&#xA;    return ...&#xA;  }&#xA;}&#xA;&#xA;ChangeNotifierProvider&amp;lt;ProviderInterface&amp;gt;(&#xA;  create: (_) =&amp;gt; ProviderImplementation(),&#xA;  child: Foo(),&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Existing providers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;provider&lt;/code&gt; exposes a few different kinds of &#34;provider&#34; for different types of objects.&lt;/p&gt; &#xA;&lt;p&gt;The complete list of all the objects available is &lt;a href=&#34;https://pub.dev/documentation/provider/latest/provider/provider-library.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;name&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/provider/latest/provider/Provider-class.html&#34;&gt;Provider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The most basic form of provider. It takes a value and exposes it, whatever the value is.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/provider/latest/provider/ListenableProvider-class.html&#34;&gt;ListenableProvider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A specific provider for Listenable object. ListenableProvider will listen to the object and ask widgets which depend on it to rebuild whenever the listener is called.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/provider/latest/provider/ChangeNotifierProvider-class.html&#34;&gt;ChangeNotifierProvider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A specification of ListenableProvider for ChangeNotifier. It will automatically call &lt;code&gt;ChangeNotifier.dispose&lt;/code&gt; when needed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/provider/latest/provider/ValueListenableProvider-class.html&#34;&gt;ValueListenableProvider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Listen to a ValueListenable and only expose &lt;code&gt;ValueListenable.value&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/provider/latest/provider/StreamProvider-class.html&#34;&gt;StreamProvider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Listen to a Stream and expose the latest value emitted.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pub.dartlang.org/documentation/provider/latest/provider/FutureProvider-class.html&#34;&gt;FutureProvider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Takes a &lt;code&gt;Future&lt;/code&gt; and updates dependents when the future completes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;My application throws a StackOverflowError because I have too many providers, what can I do?&lt;/h3&gt; &#xA;&lt;p&gt;If you have a very large number of providers (150+), it is possible that some devices will throw a &lt;code&gt;StackOverflowError&lt;/code&gt; because you end-up building too many widgets at once.&lt;/p&gt; &#xA;&lt;p&gt;In this situation, you have a few solutions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If your application has a splash-screen, try mounting your providers over time instead of all at once.&lt;/p&gt; &lt;p&gt;You could do:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MultiProvider(&#xA;  providers: [&#xA;    if (step1) ...[&#xA;      &amp;lt;lots of providers&amp;gt;,&#xA;    ],&#xA;    if (step2) ...[&#xA;      &amp;lt;some more providers&amp;gt;&#xA;    ]&#xA;  ],&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;where during your splash screen animation, you would do:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;bool step1 = false;&#xA;bool step2 = false;&#xA;@override&#xA;initState() {&#xA;  super.initState();&#xA;  Future(() {&#xA;    setState(() =&amp;gt; step1 = true);&#xA;    Future(() {&#xA;      setState(() =&amp;gt; step2 = true);&#xA;    });&#xA;  });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Consider opting out of using &lt;code&gt;MultiProvider&lt;/code&gt;. &lt;code&gt;MultiProvider&lt;/code&gt; works by adding a widget between every providers. Not using &lt;code&gt;MultiProvider&lt;/code&gt; can increase the limit before a &lt;code&gt;StackOverflowError&lt;/code&gt; is reached.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rrousselGit/freezed/master/sponsorkit/sponsors.svg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rrousselGit/freezed/master/sponsorkit/sponsors.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rive-app/rive-flutter</title>
    <updated>2022-06-02T02:08:12Z</updated>
    <id>tag:github.com,2022-06-02:/rive-app/rive-flutter</id>
    <link href="https://github.com/rive-app/rive-flutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/rive&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/rive&#34; alt=&#34;Pub Version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/rive-app/rive-flutter/actions/workflows/tests.yaml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/532365473602600965&#34; alt=&#34;Discord badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/rive_app.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter handle&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Rive&lt;/h1&gt; &#xA;&lt;p&gt;Runtime docs are available in &lt;a href=&#34;https://help.rive.app/runtimes/quick-start&#34;&gt;Rive&#39;s help center&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rive.app/&#34;&gt;Rive&lt;/a&gt; is a real-time interactive design and animation tool. Use our collaborative editor to create motion graphics that respond to different states and user inputs. Then load your animations into apps, games, and websites with our lightweight open-source runtimes.&lt;/p&gt; &#xA;&lt;h2&gt;Add to pubspec.yaml&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  rive: ^0.8.4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Play an animation from a Rive file over HTTP:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter/material.dart&#39;;&#xA;import &#39;package:rive/rive.dart&#39;;&#xA;&#xA;void main() {&#xA;  runApp(MaterialApp(home: SimpleAnimation()));&#xA;}&#xA;&#xA;class SimpleAnimation extends StatelessWidget {&#xA;  const SimpleAnimation({Key? key}) : super(key: key);&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return const Scaffold(&#xA;      body: Center(&#xA;        child: RiveAnimation.network(&#xA;          &#39;https://cdn.rive.app/animations/vehicles.riv&#39;,&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To play an animation from an asset bundle, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;RiveAnimation.asset(&#39;assets/truck.riv&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Control playing and pausing a looping animation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:flutter/material.dart&#39;;&#xA;import &#39;package:rive/rive.dart&#39;;&#xA;&#xA;void main() {&#xA;  runApp(MaterialApp(home: PlayPauseAnimation()));&#xA;}&#xA;&#xA;class PlayPauseAnimation extends StatefulWidget {&#xA;  const PlayPauseAnimation({Key? key}) : super(key: key);&#xA;&#xA;  @override&#xA;  _PlayPauseAnimationState createState() =&amp;gt; _PlayPauseAnimationState();&#xA;}&#xA;&#xA;class _PlayPauseAnimationState extends State&amp;lt;PlayPauseAnimation&amp;gt; {&#xA;  // Controller for playback&#xA;  late RiveAnimationController _controller;&#xA;&#xA;  // Toggles between play and pause animation states&#xA;  void _togglePlay() =&amp;gt;&#xA;      setState(() =&amp;gt; _controller.isActive = !_controller.isActive);&#xA;&#xA;  /// Tracks if the animation is playing by whether controller is running&#xA;  bool get isPlaying =&amp;gt; _controller.isActive;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    super.initState();&#xA;    _controller = SimpleAnimation(&#39;idle&#39;);&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      body: Center(&#xA;        child: RiveAnimation.network(&#xA;          &#39;https://cdn.rive.app/animations/vehicles.riv&#39;,&#xA;          controllers: [_controller],&#xA;          // Update the play state when the widget&#39;s initialized&#xA;          onInit: (_) =&amp;gt; setState(() {}),&#xA;        ),&#xA;      ),&#xA;      floatingActionButton: FloatingActionButton(&#xA;        onPressed: _togglePlay,&#xA;        tooltip: isPlaying ? &#39;Pause&#39; : &#39;Play&#39;,&#xA;        child: Icon(&#xA;          isPlaying ? Icons.pause : Icons.play_arrow,&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Play a one-shot animation repeatedly on demand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;/// Demonstrates playing a one-shot animation on demand&#xA;&#xA;import &#39;package:flutter/material.dart&#39;;&#xA;import &#39;package:rive/rive.dart&#39;;&#xA;&#xA;void main() {&#xA;  runApp(MaterialApp(home: PlayOneShotAnimation()));&#xA;}&#xA;&#xA;class PlayOneShotAnimation extends StatefulWidget {&#xA;  const PlayOneShotAnimation({Key? key}) : super(key: key);&#xA;&#xA;  @override&#xA;  _PlayOneShotAnimationState createState() =&amp;gt; _PlayOneShotAnimationState();&#xA;}&#xA;&#xA;class _PlayOneShotAnimationState extends State&amp;lt;PlayOneShotAnimation&amp;gt; {&#xA;  /// Controller for playback&#xA;  late RiveAnimationController _controller;&#xA;&#xA;  /// Is the animation currently playing?&#xA;  bool _isPlaying = false;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    super.initState();&#xA;    _controller = OneShotAnimation(&#xA;      &#39;bounce&#39;,&#xA;      autoplay: false,&#xA;      onStop: () =&amp;gt; setState(() =&amp;gt; _isPlaying = false),&#xA;      onStart: () =&amp;gt; setState(() =&amp;gt; _isPlaying = true),&#xA;    );&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(&#xA;        title: const Text(&#39;One-Shot Example&#39;),&#xA;      ),&#xA;      body: Center(&#xA;        child: RiveAnimation.network(&#xA;          &#39;https://cdn.rive.app/animations/vehicles.riv&#39;,&#xA;          animations: const [&#39;idle&#39;, &#39;curves&#39;],&#xA;          controllers: [_controller],&#xA;        ),&#xA;      ),&#xA;      floatingActionButton: FloatingActionButton(&#xA;        // disable the button while playing the animation&#xA;        onPressed: () =&amp;gt; _isPlaying ? null : _controller.isActive = true,&#xA;        tooltip: &#39;Play&#39;,&#xA;        child: const Icon(Icons.arrow_upward),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Antialiasing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to disable antialiasing (usually for performance reasons), you can set &lt;code&gt;antialiasing&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; on the &lt;code&gt;Rive&lt;/code&gt; and &lt;code&gt;RiveAnimation&lt;/code&gt; widgets.&lt;/p&gt; &#xA;&lt;h2&gt;API Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check out our more extensive API documentation on pub.dev: &lt;a href=&#34;https://pub.dev/documentation/rive/latest/&#34;&gt;https://pub.dev/documentation/rive/latest/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fluttercommunity/plus_plugins</title>
    <updated>2022-06-02T02:08:12Z</updated>
    <id>tag:github.com,2022-06-02:/fluttercommunity/plus_plugins</id>
    <link href="https://github.com/fluttercommunity/plus_plugins" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter Community Plus Plugins&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://plus.fluttercommunity.dev/&#34;&gt; Flutter Community Plus Plugins&lt;br&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Plus plugins&lt;/h1&gt; &#xA;&lt;center&gt;&#xA; &lt;a href=&#34;https://flutter.dev/docs/development/packages-and-plugins/favorites&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fluttercommunity/plus_plugins/main/website/static/img/flutter-favorite-badge.png&#34; width=&#34;100&#34; alt=&#34;build&#34;&gt;&lt;/a&gt;&#xA;&lt;/center&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/actions?query=workflow%3Aall_plugins&#34;&gt; &lt;img src=&#34;https://github.com/fluttercommunity/plus_plugins/workflows/all_plugins/badge.svg?sanitize=true&#34; alt=&#34;all_plugins GitHub Workflow Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/flutter_community/plus_plugins/&#34;&gt; &lt;img src=&#34;https://codecov.io/gh/fluttercommunity/plus_plugins/graph/badge.svg?sanitize=true&#34; alt=&#34;all_plugins Coverage&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/FlutterComm&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/FlutterComm.svg?colorA=1da1f2&amp;amp;colorB=&amp;amp;label=Follow%20on%20Twitter&#34; alt=&#34;Follow on Twitter&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;PlusPlugins is a set of Flutter plugins that is developed based on existing &lt;a href=&#34;https://github.com/flutter/plugins&#34;&gt;Flutter plugins&lt;/a&gt; with extra functionalities, platforms support, and better maintenance.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; As of January 2021, the Flutter team is no longer accepting non-critical PRs for the original set of plugins in &lt;code&gt;flutter/plugins&lt;/code&gt;, and instead they should be submitted in this project. &lt;a href=&#34;https://github.com/flutter/plugins/raw/master/CONTRIBUTING.md#important-note&#34;&gt;You can read more about this announcement here.&lt;/a&gt; as well as &lt;a href=&#34;https://medium.com/flutter/whats-new-in-flutter-2-0-fe8e95ecc65&#34;&gt;in the Flutter 2 announcement blog post.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/issues&#34;&gt;Feedback&lt;/a&gt; and &lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/pulls&#34;&gt;Pull Requests&lt;/a&gt; are most welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of contents:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercommunity/plus_plugins/main/#battery_plus&#34;&gt;Battery➕ (&lt;code&gt;battery_plus&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercommunity/plus_plugins/main/#connectivity_plus&#34;&gt;Connectivity➕ (&lt;code&gt;connectivity_plus&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercommunity/plus_plugins/main/#device_info_plus&#34;&gt;Device Info➕ (&lt;code&gt;device_info_plus&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercommunity/plus_plugins/main/#network_info_plus&#34;&gt;Network Info➕ (&lt;code&gt;network_info_plus&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercommunity/plus_plugins/main/#package_info_plus&#34;&gt;Package Info➕ (&lt;code&gt;package_info_plus&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercommunity/plus_plugins/main/#sensors_plus&#34;&gt;Sensor➕ (&lt;code&gt;sensors_plus&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercommunity/plus_plugins/main/#share_plus&#34;&gt;Share➕ (&lt;code&gt;share_plus&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercommunity/plus_plugins/main/#android_alarm_manager_plus&#34;&gt;Android Alarm Manager➕ (&lt;code&gt;android_alarm_manager_plus&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fluttercommunity/plus_plugins/main/#android_intent_plus&#34;&gt;Android Intent➕ (&lt;code&gt;android_intent_plus&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;battery_plus&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/battery_plus&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/battery_plus.svg?sanitize=true&#34; alt=&#34;battery_plus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/battery_plus/score&#34;&gt;&lt;img src=&#34;https://badges.bar/battery_plus/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Flutter plugin for accessing information about the battery state(full, charging, discharging) on Android and iOS.&lt;/p&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/tree/main/packages/battery_plus&#34;&gt;View Source&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Platform Support&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MacOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Web&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;connectivity_plus&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/connectivity_plus&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/connectivity_plus.svg?sanitize=true&#34; alt=&#34;connectivity_plus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/connectivity_plus/score&#34;&gt;&lt;img src=&#34;https://badges.bar/connectivity_plus/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Flutter plugin for discovering the state of the network (WiFi &amp;amp; mobile/cellular) connectivity on Android and iOS.&lt;/p&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/tree/main/packages/connectivity_plus&#34;&gt;View Source&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Platform Support&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MacOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Web&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;device_info_plus&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/device_info_plus&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/device_info_plus.svg?sanitize=true&#34; alt=&#34;device_info_plus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/device_info_plus/score&#34;&gt;&lt;img src=&#34;https://badges.bar/device_info_plus/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Flutter plugin providing detailed information about the device (make, model, etc.), and Android or iOS version the app is running on.&lt;/p&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/tree/main/packages/device_info_plus&#34;&gt;View Source&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Platform Support&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MacOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Web&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;network_info_plus&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/network_info_plus&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/network_info_plus.svg?sanitize=true&#34; alt=&#34;network_info_plus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/network_info_plus/score&#34;&gt;&lt;img src=&#34;https://badges.bar/network_info_plus/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Flutter plugin for discovering network info.&lt;/p&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/tree/main/packages/network_info_plus&#34;&gt;View Source&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Platform Support&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MacOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Web&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;➖&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;package_info_plus&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/package_info_plus&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/package_info_plus.svg?sanitize=true&#34; alt=&#34;package_info_plus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/package_info_plus/score&#34;&gt;&lt;img src=&#34;https://badges.bar/package_info_plus/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Flutter plugin for querying information about the application package, such as CFBundleVersion on iOS or versionCode on Android.&lt;/p&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/tree/main/packages/package_info_plus&#34;&gt;View Source&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Platform Support&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MacOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Web&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;sensors_plus&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/sensors_plus&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/sensors_plus.svg?sanitize=true&#34; alt=&#34;sensors_plus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/sensors_plus/score&#34;&gt;&lt;img src=&#34;https://badges.bar/sensors_plus/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Flutter plugin for accessing accelerometer and gyroscope sensors.&lt;/p&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/tree/main/packages/sensors_plus&#34;&gt;View Source&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Platform Support&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MacOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Web&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;share_plus&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/share_plus&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/share_plus.svg?sanitize=true&#34; alt=&#34;share_plus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/share_plus/score&#34;&gt;&lt;img src=&#34;https://badges.bar/share_plus/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Flutter plugin for sharing content via the platform share UI, using the ACTION_SEND intent on Android and UIActivityViewController on iOS.&lt;/p&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/tree/main/packages/share_plus&#34;&gt;View Source&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Platform Support&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;iOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MacOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Web&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;android_alarm_manager_plus&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/android_alarm_manager_plus&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/android_alarm_manager_plus.svg?sanitize=true&#34; alt=&#34;android_alarm_manager_plus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/android_alarm_manager_plus/score&#34;&gt;&lt;img src=&#34;https://badges.bar/android_alarm_manager_plus/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Flutter plugin for accessing the Android AlarmManager service, and running Dart code in the background when alarms fire.&lt;/p&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/tree/main/packages/android_alarm_manager_plus&#34;&gt;View Source&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Platform Support&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;android_intent_plus&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/android_intent_plus&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/android_intent_plus.svg?sanitize=true&#34; alt=&#34;android_intent_plus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/android_intent_plus/score&#34;&gt;&lt;img src=&#34;https://badges.bar/android_intent_plus/pub%20points&#34; alt=&#34;pub points&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Flutter plugin for launching Android Intents. Not supported on iOS.&lt;/p&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/tree/main/packages/android_intent_plus&#34;&gt;View Source&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Platform Support&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Android&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please file PlusPlugins specific issues, bugs, or feature requests in our &lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/issues/new&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Plugin issues that are not specific to PlusPlugins can be filed in the &lt;a href=&#34;https://github.com/flutter/flutter/issues/new&#34;&gt;Flutter issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute a change to any of the existing plugins in this repo, please review our &lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/raw/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; and open a &lt;a href=&#34;https://github.com/fluttercommunity/plus_plugins/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;This repository is maintained by FlutterCommunity authors. Issues here are answered by maintainers and other community members on GitHub on a best-effort basis.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RivaanRanawat/instagram-flutter-clone</title>
    <updated>2022-06-02T02:08:12Z</updated>
    <id>tag:github.com,2022-06-02:/RivaanRanawat/instagram-flutter-clone</id>
    <link href="https://github.com/RivaanRanawat/instagram-flutter-clone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Responsive Instagram Clone developed with Flutter &amp; Firebase&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Instagram Clone&lt;/h1&gt; &#xA;&lt;p&gt;A completely Responsive Instagram App- Works on Android, iOS &amp;amp; Web!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Responsive Instagram UI&lt;/li&gt; &#xA; &lt;li&gt;Email &amp;amp; Password Authentication&lt;/li&gt; &#xA; &lt;li&gt;Share Posts with Caption&lt;/li&gt; &#xA; &lt;li&gt;Display Posts with Caption&lt;/li&gt; &#xA; &lt;li&gt;Like &amp;amp; Comment on Posts&lt;/li&gt; &#xA; &lt;li&gt;Search Users&lt;/li&gt; &#xA; &lt;li&gt;Follow Users&lt;/li&gt; &#xA; &lt;li&gt;Display User Posts, Followers &amp;amp; Following&lt;/li&gt; &#xA; &lt;li&gt;EVERYTHING REAL TIME&lt;/li&gt; &#xA; &lt;li&gt;Sign Out&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;YouTube&lt;/h2&gt; &#xA;&lt;p&gt;I have created a tutorial based on this, do check it out on my channel &lt;a href=&#34;https://youtu.be/BBccK1zTgxw&#34;&gt;Rivaan Ranawat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;600&#34; src=&#34;https://github.com/RivaanRanawat/instagram-flutter-clone/raw/master/screenshot.png&#34; alt=&#34;Youtube Tutorial Image&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;After cloning this repository, migrate to &lt;code&gt;instagram-flutter-clone&lt;/code&gt; folder. Then, follow the following steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create Firebase Project&lt;/li&gt; &#xA; &lt;li&gt;Enable Authentication&lt;/li&gt; &#xA; &lt;li&gt;Make Firestore Rules&lt;/li&gt; &#xA; &lt;li&gt;Create Android, iOS &amp;amp; Web Apps&lt;/li&gt; &#xA; &lt;li&gt;Take Web FirebaseOptions and put it in main function in main.dart file replacing my keys (My keys wont work as I deleted my project) Then run the following commands to run your app:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  flutter pub get&#xA;  open -a simulator (to get iOS Simulator)&#xA;  flutter run&#xA;  flutter run -d chrome --web-renderer html (to see the best output)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tech Used&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt;: Firebase Auth, Firebase Storage, Firebase Firestore&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Client&lt;/strong&gt;: Flutter, Provider&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;If you have any feedback, please reach out to me at &lt;a href=&#34;mailto:namanrivaan@gmail.com&#34;&gt;namanrivaan@gmail.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fluttercommunity/chewie</title>
    <updated>2022-06-02T02:08:12Z</updated>
    <id>tag:github.com,2022-06-02:/fluttercommunity/chewie</id>
    <link href="https://github.com/fluttercommunity/chewie" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The video player for Flutter with a heart of gold&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chewie&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dev/packages/chewie&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/chewie.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/brianegan/chewie/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/chewie&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-android%20%7C%20ios%20%7C%20web%20-blue.svg?sanitize=true&#34; alt=&#34;Generic badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The video player for Flutter with a heart of gold.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://pub.dartlang.org/packages/video_player&#34;&gt;&lt;code&gt;video_player&lt;/code&gt;&lt;/a&gt; plugin provides low-level access to video playback. Chewie uses the &lt;code&gt;video_player&lt;/code&gt; under the hood and wraps it in a friendly Material or Cupertino UI!&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MaterialControls&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MaterialDesktopControls&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/brianegan/chewie/raw/master/assets/MaterialControls.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/brianegan/chewie/raw/master/assets/MaterialDesktopControls.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;CupertinoControls&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/brianegan/chewie/raw/master/assets/CupertinoControls.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;In your &lt;code&gt;pubspec.yaml&lt;/code&gt; file within your Flutter Project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  chewie: &amp;lt;latest_version&amp;gt;&#xA;  video_player: &amp;lt;latest_version&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use it&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:chewie/chewie.dart&#39;;&#xA;final videoPlayerController = VideoPlayerController.network(&#xA;    &#39;https://flutter.github.io/assets-for-api-docs/assets/videos/butterfly.mp4&#39;);&#xA;&#xA;await videoPlayerController.initialize();&#xA;&#xA;final chewieController = ChewieController(&#xA;  videoPlayerController: videoPlayerController,&#xA;  autoPlay: true,&#xA;  looping: true,&#xA;);&#xA;&#xA;final playerWidget = Chewie(&#xA;  controller: chewieController,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please make sure to dispose both controller widgets after use. For example by overriding the dispose method of the a &lt;code&gt;StatefulWidget&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;@override&#xA;void dispose() {&#xA;  videoPlayerController.dispose();&#xA;  chewieController.dispose();&#xA;  super.dispose();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/brianegan/chewie/raw/master/assets/Options.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chewie got some options which controls the video you provide. These options appear on default on a &lt;code&gt;showModalBottomSheet&lt;/code&gt; (like you already know from YT maybe). Chewie is passing on default &lt;code&gt;Playback speed&lt;/code&gt; and &lt;code&gt;Subtitles&lt;/code&gt; options as an &lt;code&gt;OptionItem&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To add additional options just add these lines to your &lt;code&gt;ChewieController&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;additionalOptions: (context) {&#xA;  return &amp;lt;OptionItem&amp;gt;[&#xA;    OptionItem(&#xA;      onTap: () =&amp;gt; debugPrint(&#39;My option works!&#39;),&#xA;      iconData: Icons.chat,&#xA;      title: &#39;My localized title&#39;,&#xA;    ),&#xA;    OptionItem(&#xA;      onTap: () =&amp;gt;&#xA;          debugPrint(&#39;Another option working!&#39;),&#xA;      iconData: Icons.chat,&#xA;      title: &#39;Another localized title&#39;,&#xA;    ),&#xA;  ];&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t like to show your options with the default &lt;code&gt;showModalBottomSheet&lt;/code&gt; just override the View with the &lt;code&gt;optionsBuilder&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;optionsBuilder: (context, defaultOptions) async {&#xA;  await showDialog&amp;lt;void&amp;gt;(&#xA;    context: context,&#xA;    builder: (ctx) {&#xA;      return AlertDialog(&#xA;        content: ListView.builder(&#xA;          itemCount: defaultOptions.length,&#xA;          itemBuilder: (_, i) =&amp;gt; ActionChip(&#xA;            label: Text(defaultOptions[i].title),&#xA;            onPressed: () =&amp;gt;&#xA;                defaultOptions[i].onTap!(),&#xA;          ),&#xA;        ),&#xA;      );&#xA;    },&#xA;  );&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your &lt;code&gt;additionalOptions&lt;/code&gt; are already included here (if you provided &lt;code&gt;additionalOptions&lt;/code&gt;)!&lt;/p&gt; &#xA;&lt;p&gt;Last but not least: What is an option without proper translation. To add your strings to them just add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;optionsTranslation: OptionsTranslation(&#xA;  playbackSpeedButtonText: &#39;Wiedergabegeschwindigkeit&#39;,&#xA;  subtitlesButtonText: &#39;Untertitel&#39;,&#xA;  cancelButtonText: &#39;Abbrechen&#39;,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Subtitles&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Since version 1.1.0 chewie supports subtitles. Here you can see how to use them&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can provide an &lt;code&gt;List&amp;lt;Subtitle&amp;gt;&lt;/code&gt; and customize your subtitles with the &lt;code&gt;subtitleBuilder&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;p&gt;Just add subtitles as following code is showing into your &lt;code&gt;ChewieController&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;ChewieController(&#xA;  videoPlayerController: _videoPlayerController,&#xA;  autoPlay: true,&#xA;  looping: true,&#xA;  subtitle: Subtitles([&#xA;    Subtitle(&#xA;      index: 0,&#xA;      start: Duration.zero,&#xA;      end: const Duration(seconds: 10),&#xA;      text: &#39;Hello from subtitles&#39;,&#xA;    ),&#xA;    Subtitle(&#xA;      index: 1,&#xA;      start: const Duration(seconds: 10),&#xA;      end: const Duration(seconds: 20),&#xA;      text: &#39;Whats up? :)&#39;,&#xA;    ),&#xA;  ]),&#xA;  subtitleBuilder: (context, subtitle) =&amp;gt; Container(&#xA;    padding: const EdgeInsets.all(10.0),&#xA;    child: Text(&#xA;      subtitle,&#xA;      style: const TextStyle(color: Colors.white),&#xA;    ),&#xA;  ),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;index&lt;/code&gt; attribute is just for purpases if you want to structure your subtitles in your database and provide your indexes here. &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt; are here the key attributes.&lt;/p&gt; &#xA;&lt;p&gt;The Duration defines on which part of your video your subtitles should start and end. For example: Your video is 10 minutes long and you want to add a subtitle between: &lt;code&gt;00:00&lt;/code&gt; and &lt;code&gt;00:10&lt;/code&gt;&#39;th second you&#39;ve to provide:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Subtitle(&#xA;  index: 0,&#xA;  start: Duration.zero,&#xA;  end: const Duration(seconds: 10),&#xA;  text: &#39;Hello from subtitles&#39;,&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Please run the app in the &lt;a href=&#34;https://github.com/brianegan/chewie/tree/master/example&#34;&gt;&lt;code&gt;example/&lt;/code&gt;&lt;/a&gt; folder to start playing!&lt;/p&gt; &#xA;&lt;h2&gt;Migrating from Chewie &amp;lt; 0.9.0&lt;/h2&gt; &#xA;&lt;p&gt;Instead of passing the &lt;code&gt;VideoPlayerController&lt;/code&gt; and your options to the &lt;code&gt;Chewie&lt;/code&gt; widget you now pass them to the &lt;code&gt;ChewieController&lt;/code&gt; and pass that latter to the &lt;code&gt;Chewie&lt;/code&gt; widget.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final playerWidget = Chewie(&#xA;  videoPlayerController,&#xA;  autoPlay: true,&#xA;  looping: true,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;becomes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final chewieController = ChewieController(&#xA;  videoPlayerController: videoPlayerController,&#xA;  autoPlay: true,&#xA;  looping: true,&#xA;);&#xA;&#xA;final playerWidget = Chewie(&#xA;  controller: chewieController,&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MaterialUI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MaterialDesktopUI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; CupertinoUI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Options with translations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Subtitles&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; CustomControls&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Auto-Rotate on FullScreen depending on Source Aspect-Ratio&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Live-Stream and UI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; AutoPlay&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Placeholder&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Looping&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Start video at&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom Progress-Bar colors&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom Overlay&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Allow Sleep (Wakelock)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Playbackspeed Control&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom Route-Pagebuilder&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom Device-Orientation and SystemOverlay before and after fullscreen&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom ErrorBuilder&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support different resolutions of video&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Re-design State-Manager with Provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Screen-Mirroring / Casting (Google Chromecast)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;iOS warning&lt;/h2&gt; &#xA;&lt;p&gt;The video_player plugin used by chewie will only work in iOS simulators if you are on flutter 1.26.0 or above. You may need to switch to the beta channel &lt;code&gt;flutter channel beta&lt;/code&gt; Please refer to this &lt;a href=&#34;https://github.com/flutter/flutter/issues/14647&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;000000000000000KKKKKKKKKKKKXXXXXXXXXXXXXKKKKKKKKKKKKKKKKKKKKKKKKKKK00&#xA;000000000000000KKKKKKKKKKKKKXXXXXXXXXXKKKKKKKKKKKKKKKKKKKKKKKKKKKKK00&#xA;000000000000000KKKKKKKKKKKKKXXXXXXK0xdoddoclodxOKKKKKKKKKKKKKKKKKKK00&#xA;00000000000000KKKKKKKKKKKKKKKK0xoc:;;,;,,,,&#39;&#39;&#39;;cldxO0KKKKKKKKKKKKK000&#xA;00000000000000KKKKKKKKKKKKKKx:&#39;&#39;,,,&#39;.,&#39;...;,&#39;&#39;&#39;&#39;,;:clk0KKKKKKKKKKK000&#xA;00000000000000KKKKKKKKKKKKd;&#39;&#39;,,,;;;&#39;.,..,c;;,;;;;;:;;d0KKKKKKKKKK000&#xA;00000000000000KKKKKKKKKKx,&#39;,;:ccl;,c;&#39;;,,ol::coolc:;;,,x0KKKKKKKKK000&#xA;00000000000000KKKKKKKKOl;:;:clllll;;o;;;cooclddclllllc::kKKKKKKKKK000&#xA;00000000000000KKKKKK0o;:ccclccccooo:ooc:ddoddloddolc;;;:c0KKKKKKK0000&#xA;00000000000000KKKKKOccodolccclllooddddddxdxddxkkkkxxo;&#39;&#39;;d0KKKKKK0000&#xA;00000000000000KKKKkcoddolllllclloodxxxxdddxdddxxxddool:&#39;.;O0KKKKK0000&#xA;00000000000000000xloollcccc:cclclodkkxxxdddxxxkkxdlllolc,,x0KKKKK0000&#xA;0000000000000000xccllccccc:;,&#39;&#39;,;:dxkxxddddxkkkxdollcc:cc;d0KKKKKK000&#xA;000000000000000kcc:::cllol:&#39;......odxxdoccldxxxdollllc:;;:d0KKKKK0000&#xA;00000000000000klc;;;clcc::;&#39;...&#39;;;;:cll..&#39;,cdddolccccccc;:x0KKKKK0000&#xA;0000000000000kdl;:cclllclllc::;,;.&#39;.&#39;&#39;o;,,&#39;.;ccoooollllc:;x0KKKKK0000&#xA;000000000000kol;:;::coolcc:::,.....,..cd,....&#39;:lolclolllc;x0KKKK00000&#xA;00000000000Odl;:&#39;cllol;&#39;&#39;&#39;,;;;;::&#39;&#39;.&#39;,:doc;,&#39;,::looc:lcol:x0K00000000&#xA;0000000000Oxl:c,:lolc,..&#39;,:clllollodoc;cllolccloolllcclollO0K00000000&#xA;0000000000xllc,:lool:&#39;.,...o.;llxdo:loc;;ccodlolodldllolld00K0K000000&#xA;000000000Ooc::coooc,,.&#39;,;:lx,,...&#39;:;o;l;&#39;&lt;span&gt;⭕&lt;/span&gt;oolccocdoldloO0000KK00000&#xA;00000000kol:clllc;;,.;::;:clllllolxc;.:c&#39;:ocldlccl;clldox000000000000&#xA;000000Odll:cccc;:;,&#39;;cllooodoollcloll;c:.:d:ooo;cl;oloddkO00000000000&#xA;0000OOddOdll;c,;;,,;;:cldodddoxdoodlcc:.,ox&lt;span&gt;⭕&lt;/span&gt;lllocdlodx00O0000000000&#xA;000Oxdl:::ll,:,:;,&#39;;c,:oloddolkxddxolc.&#39;coccocolcccoooc;oxO00KOOOO000&#xA;dc;,&#39;...&#39;;c,,:c:::&#39;c:&#39;;cldoo;:odolxoc:.,o:oldlxol;lddl,.,lkO0KdlcckKO&#xA;&#39;.......,:&#39;&#39;&#39;;cll:cc,,;:l:c,,;:oc;cdc,.;::dldoxd:ldol;,&#39;..,:lo,,,,kOk&#xA;.......&#39;;&#39;.&#39;,:clcll,,;:l:;&#39;..&#39;&#39;c:,;cl&#39;.&#39;;dxoooxlddl;&#39;,&#39;&#39;..,,;&#39;...,ool&#xA;.......,,.&#39;&#39;;;:cld;.;,do:..;:,&#39;:c&#39;,:c&#39;&#39;&#39;;xxdldocol&#39;..&#39;;,.......&#39;,;;,;&#xA;.......&#39;..&#39;&#39;,,coxc&#39;&#39;;:do&#39;.clc:lco&#39;,o;&#39;,;cOxdol:cc:.....&#39;..oxd;&#39;,&#39;.&#39;..&#xA;&#39;.......&#39;&#39;..,:cxl;&#39;;;cx:&#39;&#39;cll:clc&#39;cl&#39;,:l:ko:c..;c:..&#39;;...,KNNl;:;ll:&#39;&#xA;.......&#39;&#39;...;,ooc,,,:od&#39;.&#39;:cccdd,,l&#39;&#39;cl:co;;,..;;&#39;..&#39;,&#39;..;d0O,;;:XXXK&#xA;............&#39;cll;&#39;,,lo&#39;.&#39;.::codl,c..:c;doc.,:.&#39;,....&#39;...&#39;......&#39;l0XKk&#xA;&#39;............c;;,&#39;:lc.&#39;&#39;,.;ccol;:,.:c.:o,;&#39;.;&#39;......,...&#39;,,.&#39;...&#39;.,;;&#xA;.............&#39;,;;,cc..;,&#39;&#39;;:lc&#39;:;..c&#39;.c:;.,......,&#39;..&#39;...&#39;&#39;,:,,;;,...&#xA;..............&#39;,,;:&#39;.&#39;;,&#39;,:c;.;;..&#39;;..,;,.........&#39;&#39;..&#39;...&#39;kko.,,....&#xA;...............;,:&#39;..;&#39;&#39;&#39;;:,..;&#39;&#39;.&#39;&#39;..&#39;&#39;............&#39;...&#39;.lK0c&#39;;;c;&#39;.&#xA;...............,,&#39;...,.&#39;,;&#39;&#39;...&#39;&#39;....,......&#39;............&#39;dOx&#39;,;:dd,&#39;&#xA;..............&#39;,.....&#39;.,;..&#39;..&#39;,..........&#39;..............&#39;;:;&#39;,,ldo.&#39;&#xA;.............&#39;&#39;&#39;.&#39;.....,&#39;..&#39;,&#39;,&#39;..&#39;...&#39;&#39;..&#39;............&#39;.......,dx&#39;.&#39;&#xA;.......................,...&#39;;,&#39;..&#39;.....,.&#39;.............&#39;&#39;.&#39;......&#39;..&#39;&#xA;...........&#39;......&#39;...&#39;,..&#39;&#39;;,&#39;..&#39;.....................&#39;,&#39;;,..&#39;....&#39;.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>flame-engine/flame</title>
    <updated>2022-06-02T02:08:12Z</updated>
    <id>tag:github.com,2022-06-02:/flame-engine/flame</id>
    <link href="https://github.com/flame-engine/flame" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flutter based game engine&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt; &lt;img alt=&#34;flame&#34; width=&#34;200px&#34; src=&#34;https://user-images.githubusercontent.com/6718144/101553774-3bc7b000-39ad-11eb-8a6a-de2daa31bd64.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A Flutter-based game engine. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Pub&#34; href=&#34;https://pub.dev/packages/flame&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flame.svg?style=popout&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/flame-engine/flame/workflows/cicd/badge.svg?branch=main&amp;amp;event=push&#34; alt=&#34;Test&#34;&gt; &lt;a title=&#34;Discord&#34; href=&#34;https://discord.gg/pxrBmy4&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/509714518008528896.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Melos&#34; href=&#34;https://github.com/invertase/melos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20with-melos-f700ff.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-ZH.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-PL.md&#34;&gt;Polski&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-RU.md&#34;&gt;Русский&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-ES.md&#34;&gt;Español&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/i18n/README-JA.md&#34;&gt;日本語&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The full documentation for Flame can be found on &lt;a href=&#34;https://docs.flame-engine.org/&#34;&gt;docs.flame-engine.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To change the version of the documentation, use the version selector noted with &lt;code&gt;version:&lt;/code&gt; in the top of the page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The documentation that resides in the main branch is newer than the released documentation on the docs website.&lt;/p&gt; &#xA;&lt;p&gt;Other useful links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flame-engine.org/&#34;&gt;The official Flame site&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://examples.flame-engine.org/&#34;&gt;Examples&lt;/a&gt; of most features which can be tried out from your browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tutorials.flame-engine.org/&#34;&gt;Tutorials&lt;/a&gt; - A simple tutorial to get started.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pub.dev/documentation/flame/latest/&#34;&gt;API Reference&lt;/a&gt; - The generated dartdoc API reference.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;There is a Flame community on &lt;a href=&#34;https://discord.gg/5unKpdQD78&#34;&gt;Blue Fire&#39;s Discord server&lt;/a&gt; where you can ask any of your Flame related questions.&lt;/p&gt; &#xA;&lt;p&gt;If you are more comfortable with StackOverflow, you can also create a question there. Add the &lt;a href=&#34;https://stackoverflow.com/questions/tagged/flame&#34;&gt;Flame tag&lt;/a&gt;, so that anyone following the tag can help out.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The goal of the Flame Engine is to provide a complete set of out-of-the-way solutions for common problems that games developed with Flutter might share.&lt;/p&gt; &#xA;&lt;p&gt;Some of the key features provided are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A game loop.&lt;/li&gt; &#xA; &lt;li&gt;A component/object system (FCS).&lt;/li&gt; &#xA; &lt;li&gt;Effects and particles.&lt;/li&gt; &#xA; &lt;li&gt;Collision detection.&lt;/li&gt; &#xA; &lt;li&gt;Gesture and input handling.&lt;/li&gt; &#xA; &lt;li&gt;Images, animations, sprites, and sprite sheets.&lt;/li&gt; &#xA; &lt;li&gt;General utilities to make development easier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On top of those features, you can augment Flame with bridge packages. Through these libraries, you will be able to access bindings to other packages, including custom Flame components and helpers, in order to make integrations seamless.&lt;/p&gt; &#xA;&lt;p&gt;Flame officially provides bridge libraries to the following packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_audio&#34;&gt;flame_audio&lt;/a&gt; for &lt;a href=&#34;https://github.com/bluefireteam/audioplayers&#34;&gt;AudioPlayers&lt;/a&gt;: Play multiple audio files simultaneously.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_bloc&#34;&gt;flame_bloc&lt;/a&gt; for &lt;a href=&#34;https://github.com/felangel/bloc&#34;&gt;Bloc&lt;/a&gt;: A predictable state management library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_fire_atlas&#34;&gt;flame_fire_atlas&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/fire-atlas&#34;&gt;FireAtlas&lt;/a&gt;: Create texture atlases for games.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_forge2d&#34;&gt;flame_forge2d&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/forge2d&#34;&gt;Forge2D&lt;/a&gt;: A Box2D physics engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_lint&#34;&gt;flame_lint&lt;/a&gt; - Our set of linting (&lt;code&gt;analysis_options.yaml&lt;/code&gt;) rules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_oxygen&#34;&gt;flame_oxygen&lt;/a&gt; for &lt;a href=&#34;https://github.com/flame-engine/oxygen&#34;&gt;Oxygen&lt;/a&gt;: A lightweight Entity Component System (ECS) framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_rive&#34;&gt;flame_rive&lt;/a&gt; for &lt;a href=&#34;https://rive.app/&#34;&gt;Rive&lt;/a&gt;: Create interactive animations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_svg&#34;&gt;flame_svg&lt;/a&gt; for &lt;a href=&#34;https://github.com/dnfield/flutter_svg&#34;&gt;flutter_svg&lt;/a&gt;: Draw SVG files in Flutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flame-engine/flame/tree/main/packages/flame_tiled&#34;&gt;flame_tiled&lt;/a&gt; for &lt;a href=&#34;https://www.mapeditor.org/&#34;&gt;Tiled&lt;/a&gt;: 2D tile map level editor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;The Flame Engine&#39;s top sponsors:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://verygood.ventures/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/media/unicorn_two_toned.png&#34; alt=&#34;Very Good Ventures&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cypherstack.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/media/logo_cypherstack.png&#34; alt=&#34;Cypher Stack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to sponsor Flame? Check our Patreon on the section below, or contact us on Discord.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to show us your support is by giving the project a star.&lt;/p&gt; &#xA;&lt;p&gt;You can also support us by becoming a patron on Patreon:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/bluefireoss&#34;&gt;&lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button.png&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or by making a single donation by buying us a coffee:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/bluefire&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/835641/60540201-fcd7fa00-9ce4-11e9-87ec-1e98568e9f58.png&#34; alt=&#34;Buy Me A Coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also show on your repository that your game is made with Flame by using one of the following badges:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?sanitize=true&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?style=flat-square&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flame-engine.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-272727.svg?style=for-the-badge&#34; alt=&#34;Powered by Flame&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg)](https://flame-engine.org)&#xA;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg?style=flat-square)](https://flame-engine.org)&#xA;[![Powered by Flame](https://img.shields.io/badge/Powered%20by-%F0%9F%94%A5-orange.svg?style=for-the-badge)](https://flame-engine.org)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Have you found a bug or have a suggestion of how to enhance Flame? Open an issue and we will take a look at it as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;Do you want to contribute with a PR? PRs are always welcome, just make sure to create it from the correct branch (main) and follow the &lt;a href=&#34;https://raw.githubusercontent.com/flame-engine/flame/main/.github/pull_request_template.md&#34;&gt;checklist&lt;/a&gt; which will appear when you open the PR.&lt;/p&gt; &#xA;&lt;p&gt;For bigger changes, or if in doubt, make sure to talk about your contribution to the team. Either via an issue, GitHub discussion, or reach out to the team either using the &lt;a href=&#34;https://discord.gg/pxrBmy4&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;A simple tutorial to get started can be found on &lt;a href=&#34;https://tutorials.flame-engine.org&#34;&gt;tutorials.flame-engine.org&lt;/a&gt; and examples of most features in Flame can be found on &lt;a href=&#34;https://examples.flame-engine.org&#34;&gt;examples.flame-engine.org&lt;/a&gt;. To access the code for each example, press the &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt; button in the top right corner.&lt;/p&gt; &#xA;&lt;h3&gt;Highlighted community tutorials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;@Devowl&#39;s Flutter &amp;amp; Flame series:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-flame-step-1-create-your-game-b3b6ee387d77&#34;&gt;Step 1: Create your game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/flutter-community/flutter-flame-step-2-game-basics-48b4493424f3&#34;&gt;Step 2: Game basics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-3-sprites-and-inputs-7ca9cc7c8b91&#34;&gt;Step 3: Sprites and inputs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-4-collisions-viewport-ff2da048e3a6&#34;&gt;Step 4: Collisions &amp;amp; Viewport&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.devowl.de/flutter-flame-step-5-level-generation-camera-62a060a286e3&#34;&gt;Step 5: Level generation &amp;amp; camera&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Other tutorials:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;@Vguzzi&#39;s article &lt;a href=&#34;https://www.raywenderlich.com/27407121-building-games-in-flutter-with-flame-getting-started&#34;&gt;Building Games in Flutter with Flame&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;@DevKage&#39;s YouTube series with the &lt;a href=&#34;https://www.youtube.com/playlist?list=PLiZZKL9HLmWOmQgYxWHuOHOWsUUlhCCOY&#34;&gt;Dino run tutorial&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We offer a curated list of Games, Libraries and Articles over at &lt;a href=&#34;https://github.com/flame-engine/awesome-flame&#34;&gt;awesome-flame&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that some of the articles might be slightly outdated, but can still be useful.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/orgs/bluefireteam/people&#34;&gt;Blue Fire team&lt;/a&gt;, who are continuously working on maintaining and improving Flame and its ecosystem.&lt;/li&gt; &#xA; &lt;li&gt;All the friendly contributors and people who are helping in the community.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>