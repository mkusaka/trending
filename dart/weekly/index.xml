<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-06T01:42:29Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>isar/hive</title>
    <updated>2024-10-06T01:42:29Z</updated>
    <id>tag:github.com,2024-10-06:/isar/hive</id>
    <link href="https://github.com/isar/hive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight and blazing fast key-value database written in pure Dart.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hivedb/hive/master/.github/hive.svg?sanitize=true&#34; width=&#34;300px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Fast, Enjoyable &amp;amp; Secure NoSQL Database&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/hive&#34;&gt; &lt;img src=&#34;https://img.shields.io/pub/v/hive?label=pub.dev&amp;amp;labelColor=333940&amp;amp;logo=dart&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/isar/hive/actions/workflows/Dart%20CI.yaml&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/isar/hive/test.yml?branch=main&amp;amp;label=tests&amp;amp;labelColor=333940&amp;amp;logo=github&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/isar/hive&#34;&gt; &lt;img src=&#34;https://img.shields.io/codecov/c/github/isar/hive?logo=codecov&amp;amp;logoColor=fff&amp;amp;labelColor=333940&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://t.me/isardb&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=join&amp;amp;message=Isar%20%26%20Hive&amp;amp;labelColor=333940&amp;amp;logo=telegram&amp;amp;logoColor=white&amp;amp;color=229ED9&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/simcdev&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/simcdev?style=social&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Hive is a lightweight and buzzing-fast key-value database made for Flutter and Dart.&lt;/p&gt; &#xA;&lt;h2&gt;Features üåü&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üåç Bee everywhere: mobile, desktop, browser&lt;/li&gt; &#xA; &lt;li&gt;üöÄ Buzzing speed: Faster than a bee on caffeine!&lt;/li&gt; &#xA; &lt;li&gt;üí° Sweet, powerful, &amp;amp; intuitive API&lt;/li&gt; &#xA; &lt;li&gt;üîê Queen&#39;s Guard: Encryption built right in.&lt;/li&gt; &#xA; &lt;li&gt;üß† Thinking in swarms: Multi-isolate support.&lt;/li&gt; &#xA; &lt;li&gt;üçØ Everything a bee needs and more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: A single bee can visit 5,000 flowers in a day!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Buzz into Action üêù&lt;/h2&gt; &#xA;&lt;p&gt;Feeling the excitement? Great! Let&#39;s help you take your first flight with Hive.&lt;/p&gt; &#xA;&lt;h4&gt;üîó Add dependencies&lt;/h4&gt; &#xA;&lt;p&gt;To kickstart the journey add &lt;code&gt;hive&lt;/code&gt;, &lt;code&gt;isar_flutter_libs&lt;/code&gt; and &lt;code&gt;path_provider&lt;/code&gt; to your &lt;code&gt;pubspec.yaml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:&#xA;  hive: ^4.0.0&#xA;  isar_flutter_libs: ^4.0.0-dev.13&#xA;  path_provider: ^2.1.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pssst! ü§´ &lt;code&gt;path_provider&lt;/code&gt; will help you to find the optimal directory for each platform.&lt;/p&gt; &#xA;&lt;h4&gt;üè° Designate a Home&lt;/h4&gt; &#xA;&lt;p&gt;Hive needs a place to call home. Using &lt;code&gt;path_provider&lt;/code&gt; we can find a valid directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void main() async {&#xA;  WidgetsFlutterBinding.ensureInitialized();&#xA;  final dir = await getApplicationDocumentsDirectory();&#xA;  Hive.defaultDirectory = dir.path;&#xA;&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;üèÅ And... Action!&lt;/h4&gt; &#xA;&lt;p&gt;Woohoo! You&#39;re all set. Jump in and let your Hive adventure begin!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:hive/hive.dart&#39;;&#xA;&#xA;final box = Hive.box();&#xA;box.put(&#39;name&#39;, &#39;David&#39;);&#xA;&#xA;final name = box.get(&#39;name&#39;);&#xA;print(&#39;Name: $name&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: Honeybees can fly at a speed of up to 30 kilometers per hour!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;üìö Hive Handbook&lt;/h1&gt; &#xA;&lt;p&gt;In Hive, data is neatly organized into containers known as boxes. Think of boxes as tables you&#39;d find in SQL, but far more flexible ‚Äî they don&#39;t stick to a set structure and can contain a variety of data. Boxes can be encrypted to store sensitive data.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;p&gt;Want to jump to a specific section? Here&#39;s a handy table of contents:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/isar/hive/main/#-opening-boxes&#34;&gt;Opening Boxes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/isar/hive/main/#-bidding-adieu-closing-boxes&#34;&gt;Closing Boxes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/isar/hive/main/#-filling-the-honeycomb-inserting-data&#34;&gt;Inserting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/isar/hive/main/#-extracting-honey-i-mean-data&#34;&gt;Reading&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/isar/hive/main/#-deleting-data&#34;&gt;Deleting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/isar/hive/main/#-using-boxes-like-lists&#34;&gt;Using Boxes like Lists&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/isar/hive/main/#-type-safety&#34;&gt;Type safety&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/isar/hive/main/#-bee-yond-the-basics-non-primitive-objects&#34;&gt;Non-primitive Objects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/isar/hive/main/#-transactions&#34;&gt;Transactions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/isar/hive/main/#-the-isolate-dance&#34;&gt;Isolates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/isar/hive/main/#-buzzworthy-questions&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: Bees have five eyes ‚Äì three simple eyes on top of the head, and two compound eyes, with numerous hexagonal facets.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üì¶ Opening Boxes&lt;/h3&gt; &#xA;&lt;p&gt;Your journey with Hive begins with opening your first box. Trust me, it&#39;s unbee-lievably easy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final box = Hive.box(name: &#39;myBox&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you call &lt;code&gt;Hive.box(name: &#39;myBox&#39;)&lt;/code&gt; for the first time with a given name, Hive will create a new box for you. If you call it again with the same name, Hive will return the already existing box.&lt;/p&gt; &#xA;&lt;p&gt;You can also use &lt;code&gt;Hive.box()&lt;/code&gt; without providing a name. In this case, Hive will return the default box.&lt;/p&gt; &#xA;&lt;p&gt;There are optional parameters you can pass to &lt;code&gt;Hive.box()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Label your box with a distinct name&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;directory&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Select a home for your box. If omitted, Hive uses the &lt;code&gt;defaultDirectory&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;encryptionKey&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hand over this key, and Hive will encrypt your box. Keep it safe!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;maxSizeMiB&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The maximum size of the box in MiB. Go for a modest number.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: Beeswax, which is secreted from the abdomen of worker bees, is used to construct the honeycomb.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üåÇ Bidding Adieu: Closing Boxes&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s not advised to close boxes that might be accessed again. This prevents unnecessary overhead of reopening the box and ensures smooth data retrieval.&lt;/p&gt; &#xA;&lt;p&gt;To close a box just call &lt;code&gt;box.close()&lt;/code&gt;. Wipe the box from the face of the earth with &lt;code&gt;box.deleteFromDisk()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: When a bee finds a good source of nectar, it flies back to the hive and shows its friends where the nectar source is by doing a dance.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;‚úçÔ∏è Filling the Honeycomb: Inserting Data&lt;/h3&gt; &#xA;&lt;p&gt;Once we have a box, it&#39;s time to fill it with sweet data! At its core, a box is just a key-value store. String keys are mapped to arbitrary primitive values. You can think of a box as a persisted &lt;code&gt;Map&amp;lt;String, dynamic&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final box = Hive.box();&#xA;box.put(&#39;danceMoves&#39;, &#39;Waggle Dance&#39;);&#xA;box.put(&#39;wingSpeed&#39;, 200);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Updating values? If a particular key already exists, Hive simply updates its corresponding value. And complex types like lists and maps? They&#39;re in too!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;box.put(&#39;friends&#39;, [&#39;Buzzy&#39;, &#39;Stinger&#39;, &#39;Honey&#39;]);&#xA;box.put(&#39;memories&#39;, {&#39;firstFlight&#39;: &#39;Sunny Day&#39;, &#39;bestNectar&#39;: &#39;Rose&#39;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Instead of &lt;code&gt;.put()&lt;/code&gt; you prefer the syntax of maps? Hive gets you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;box[&#39;danceMoves&#39;] = &#39;Round Dance&#39;;&#xA;box[&#39;wingSpeed&#39;] = 220;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Got a bucket of honey facts? Drop them all at once with &lt;code&gt;box.putAll()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;box.putAll({&#39;favoriteFlower&#39;: &#39;Lavender&#39;, &#39;wingSpeed&#39;: 210});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: A single bee colony can produce anywhere from 30 to 100 pounds of honey in a year, depending on the availability of nectar sources.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üëÄ Extracting Honey... I mean, Data!&lt;/h3&gt; &#xA;&lt;p&gt;Need a snippet of info from your Hive? No need to don the beekeeper suit; just scoop it out using &lt;code&gt;box.get()&lt;/code&gt; or &lt;code&gt;box.getAll()&lt;/code&gt;. If a key doesn&#39;t exist, &lt;code&gt;box.get()&lt;/code&gt; simply return a &lt;code&gt;null&lt;/code&gt;. But fret not; you can tell it to have a backup plan:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final box = Hive.box(name: &#39;beeees&#39;);&#xA;final fav = box.get(&#39;favoriteFlower&#39;);&#xA;final moves = box.get(&#39;danceMoves&#39;, defaultValue: &#39;waggle&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Oh, and if you&#39;re feeling fancy, use the &lt;code&gt;[]&lt;/code&gt; operator for a more stylish approach:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final fav = box[&#39;favoriteFlower&#39;];&#xA;final moves = box[&#39;danceMoves&#39;] ?? &#39;waggle&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: Worker bees are the only bees most people ever see flying around outside the hive. They&#39;re female, and their roles are to forage for food, build and protect the hive, and more.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üßπ Deleting Data&lt;/h3&gt; &#xA;&lt;p&gt;Time for some spring cleaning in the hive! To remove a single entry from your box, use &lt;code&gt;box.delete()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final deleted = box.delete(&#39;lavenderHoney&#39;);&#xA;print(&#39;Honey eaten: $deleted&#39;); // Honey eaten: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Perhaps it&#39;s time for a complete reset, making space for a fresh batch of honey. If you&#39;re looking to remove all key-value pairs from a box, use &lt;code&gt;box.clear()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;box.clear();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: Bees have been around for more than 30 million years! Their long history predates the existence of humans and even dinosaurs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;‚ú® Using Boxes like Lists&lt;/h3&gt; &#xA;&lt;p&gt;In the bee world, honeycombs aren&#39;t just random compartments; they&#39;re methodically organized. Similarly, while we&#39;ve been viewing Hive boxes as maps so far, they can be used just like lists:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final box = Hive.box();&#xA;&#xA;box.add(&#39;Rose&#39;);&#xA;box.add(&#39;Tulip&#39;);&#xA;&#xA;print(box.getAt(0)); // Rose&#xA;print(box.getAt(1)); // Tulip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But remember, bees can&#39;t retrieve honey from a comb that&#39;s empty or doesn&#39;t exist. Likewise, index-based operations will throw an error if you try an index out of bounds:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final box = Hive.box();&#xA;box.add(&#39;Daisy&#39;);&#xA;print(box.getAt(1)); // Error! This will make the bees buzz in confusion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Even if we insert a key-value pair we can still access the values by index.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final box = Hive.box();&#xA;&#xA;box.add(&#39;Lily&#39;);&#xA;box.put(&#39;key&#39;, &#39;Orchid&#39;);&#xA;&#xA;print(box.getAt(0)); // Lily&#xA;print(box.getAt(1)); // Orchid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Of course, we can also use the &lt;code&gt;[]&lt;/code&gt; operator in combination with indexes :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final box = Hive.box();&#xA;&#xA;box.add(&#39;Marigold&#39;);&#xA;print(box[0]); // Marigold&#xA;&#xA;box[0] = &#39;Daffodil&#39;;&#xA;box[1] = &#39;Bluebell&#39;; // Error! This will get the bees in a whirl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: To produce one pound of honey, a hive&#39;s bees must visit 2 million flowers and fly over 55,000 miles.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üõ°Ô∏è Type safety&lt;/h3&gt; &#xA;&lt;p&gt;Safety is the bee&#39;s priority! To keep your data sweet and pure boxes have an optional generic type parameter. It allows you to store only values of a specific type in a box:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final box = Hive.box&amp;lt;String&amp;gt;(name: &#39;BeeTreasures&#39;);&#xA;box.put(&#39;DaisyDance&#39;, &#39;SweetNectarShake&#39;);&#xA;box.put(&#39;RoseRumba&#39;, &#39;GoldenPollenParty&#39;);&#xA;box.put(&#39;TulipTango&#39;, 777); // Error - You can&#39;t fool the bees!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure to use the same type whenever you get the box. Otherwise, you&#39;ll get an error:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Hive.box&amp;lt;int&amp;gt;(name: &#39;BeeTreasures&#39;); // Error - We already have a String box!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: Bees have two stomachs. One is for eating, and the other is for storing nectar collected from flowers or water so they can carry it back to their hive. Talk about a sweet backpack!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üß© Bee-yond the Basics: Non-primitive Objects&lt;/h3&gt; &#xA;&lt;p&gt;Hive goes beyond storing just basic data types! Along with primitives, lists, and maps, Hive can store any Dart object of your liking. The only buzz you need to know? Your object should come equipped with a &lt;code&gt;.fromJson()&lt;/code&gt; and &lt;code&gt;.toJson()&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Bee {&#xA;  Bee({required this.name, required this.role});&#xA;&#xA;  factory Bee.fromJson(Map&amp;lt;String, dynamic&amp;gt; json) =&amp;gt; Bee(&#xA;    name: json[&#39;name&#39;] as String,&#xA;    role: json[&#39;role&#39;] as String,&#xA;  );&#xA;&#xA;  final String name;&#xA;  final String role;&#xA;&#xA;  Map&amp;lt;String, dynamic&amp;gt; toJson() =&amp;gt; {&#xA;    &#39;name&#39;: name,&#xA;    &#39;role&#39;: role,&#xA;  };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Before our bee-friends can buzz around in Hive, you need to do the beekeeper&#39;s job and register the &lt;code&gt;Bee&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Hive.registerAdapter(&#39;Bee&#39;, Bee.fromJson);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, you&#39;re all set to let your bees fly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final box = Hive.box();&#xA;&#xA;final bumble = Bee(name: &#39;Bumble&#39;, role: &#39;Worker&#39;);&#xA;box.put(&#39;BumbleID&#39;, bumble);&#xA;&#xA;print(box.get(&#39;BumbleID&#39;)); // Bumble - Worker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: Bees are responsible for pollinating about one-third of the world&#39;s food crops.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;ü™¢ Transactions&lt;/h3&gt; &#xA;&lt;p&gt;Transactions are an efficient way to update multiple values at once. They are also useful if you want to make sure that a Box is not changed by other code while you are working with it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final box = Hive.box();&#xA;&#xA;box.write(() {&#xA;  box.store(&#39;nectar1&#39;, &#39;GoldenNectar&#39;);&#xA;  box.store(&#39;nectar2&#39;, &#39;WildflowerBrew&#39;);&#xA;  box.store(&#39;nectar3&#39;, &#39;CloverDew&#39;);&#xA;});&#xA;&#xA;box.read(() {&#xA;  box.get(&#39;nectar1&#39;); // GoldenNectar&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Changes made in a transaction are always atomic. Either all changes are applied or none of them. So if an error occurs during a transaction, the box will not be changed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;final box = Hive.box();&#xA;box.put(&#39;honeyLevel&#39;, 5);&#xA;&#xA;box.write(() {&#xA;  box.put(&#39;honeyLevel&#39;, 6);&#xA;  throw Exception(&#39;Oh no!!!&#39;);&#xA;});&#xA;&#xA;print(box.get(&#39;honeyLevel&#39;)); // 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: Bees can recognize human faces, and they can even be trained to associate a picture of a face with sweet treats!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üíÉ The Isolate Dance&lt;/h3&gt; &#xA;&lt;p&gt;Just like a beehive where multiple bees work simultaneously, you can buzz into Hive from various Isolates at the same time. This nifty trick is great when you wish to keep those database activities separate from your UI thread.&lt;/p&gt; &#xA;&lt;p&gt;Hive comes with a sweet &lt;code&gt;Hive.compute()&lt;/code&gt; method that runs a function in a different isolate. The best part? It also does the honey-making job of setting up and tidying resources for you.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// Opening the bee&#39;s box&#xA;final box = Hive.box();&#xA;&#xA;// Storing some sweet nectar&#xA;box.put(&#39;nectarType&#39;, &#39;wildflower&#39;);&#xA;&#xA;await Hive.compute(() {&#xA;  // Accessing the same box from another worker bee&#xA;  final box = Hive.box();&#xA;  print(box.get(&#39;nectarType&#39;)); // wildflower&#xA;&#xA;  // Updating the nectar&#39;s quality&#xA;  box.put(&#39;nectarType&#39;, &#39;lavender&#39;);&#xA;});&#xA;&#xA;// Tasting the updated honey flavor&#xA;print(honeycomb.get(&#39;nectarType&#39;)); // lavender&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Just remember, while the bees dance in harmony, ensure your Isolates do too! üêùüé∂&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Bee fact: Bees have two pairs of wings, and they beat 11,400 times per minute.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üçØ Buzzworthy Questions&lt;/h3&gt; &#xA;&lt;h4&gt;üêù To bee or not to bee: Hive or Isar?&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It&#39;s not always black and yellow! üñ§üíõ Both Hive and Isar have their sweet spots. Hive is a lightweight wrapper around Isar so if you are looking for a simple key-value store, Hive might be enough. Isar is the way to go if you need queries, relations, and more advanced features.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;üöÄ Will using Hive make my app as fast as a bee?&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;While we can&#39;t promise your app will gain wings, ü¶ã Hive sure will give it the speed it deserves. Hive is very resource efficient and optimized for mobile devices. Flutter like a butterfly, sting like a bee! üêù&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;üóÇ Where in the beehive does Hive hide my honey... I mean, data?&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Remember the &lt;code&gt;defaultDirectory&lt;/code&gt; we set at the beginning? üìç That&#39;s where Hive stores your data in a file named &lt;code&gt;yourBoxName.isar&lt;/code&gt; or &lt;code&gt;yourBoxName.sqlite&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;üì∏ I&#39;ve got some bee-autiful images! Can I store them directly in Hive?&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;While you might be tempted to put those pics right into Hive, üñºÔ∏è it&#39;s best to store your images and other binary data as files outside Hive. You can then store the file path in Hive. Think of it like leaving honey out in the open; it&#39;s better to keep it neatly stored in the appropriate place. üè∫&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;üò≤ Yikes! What if my app meets an untimely demise (gets killed)? What becomes of my Hive?&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;No need for a bee-mergency! üö® If your app buzzes off unexpectedly, Hive ensures that your data remains safe and sound. Transactions are atomic, so either all changes are applied or none of them. If an error occurs during a transaction, the box will not be changed.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;üîê How does Hive keep our data safe from sticky fingers?&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We&#39;ve got the queen&#39;s guard on duty! üõ°Ô∏è If you encrypt your box Hive uses 256-bit AES in CBC mode. Every database page is safeguarded separately, ensuring your sweet stuff remains secure and only accessible to those with the right key. Buzz-worthy protection, right? üóùÔ∏è&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;ü§ù When should I rally the troops and use transactions?&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Just like a hive making big decisions together, üåê you&#39;ll want to use transactions when you have several operations that should be executed together. If one fails, they all fail. It ensures your data stays consistent, safe, and buzzing in harmony! üé∂&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;ü§£ What if I&#39;m allergic to bees?&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;No worries! Hive is 100% sting-free, üö´ although we&#39;re pretty sure you&#39;ll get a buzz out of its performance.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;‚è≥ Hive operations are synchronous. Doesn&#39;t that make the bee waltz a bit slow?&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Hive is incredibly fast and efficient. üöÑ It&#39;s built on top of Isar, a high-performance database engine. If you want to keep database operations away from your UI isolate, you can use &lt;code&gt;compute()&lt;/code&gt; or &lt;code&gt;Isolate.run()&lt;/code&gt; to run them in a separate isolate.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;üì¶ How many boxes should a wise beekeeper have?&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;While the sky&#39;s the limit in the world of bees, üåå in Hive, every box becomes a separate file. So, even if you&#39;re buzzing with excitement, it&#39;s wise not to overdo it. üìö&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üìú License&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2023 Simon Choi&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>fluttercommunity/flutter_launcher_icons</title>
    <updated>2024-10-06T01:42:29Z</updated>
    <id>tag:github.com,2024-10-06:/fluttercommunity/flutter_launcher_icons</id>
    <link href="https://github.com/fluttercommunity/flutter_launcher_icons" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter Launcher Icons - A package which simplifies the task of updating your Flutter app&#39;s launcher icon. Fully flexible, allowing you to choose what platform you wish to update the launcher icon for and if you want, the option to keep your old launcher icon in case you want to revert back sometime in the future. Maintainer: @MarkOSullivan94&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Launcher Icons&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluttercommunity/community&#34;&gt;&lt;img src=&#34;https://fluttercommunity.dev/_github/header/flutter_launcher_icons&#34; alt=&#34;Flutter Community: flutter_launcher_icons&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pub.dartlang.org/packages/flutter_launcher_icons&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/flutter_launcher_icons.svg?sanitize=true&#34; alt=&#34;pub package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A command-line tool which simplifies the task of updating your Flutter app&#39;s launcher icon. Fully flexible, allowing you to choose what platform you wish to update the launcher icon for and if you want, the option to keep your old launcher icon in case you want to revert back sometime in the future.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìñ&lt;/span&gt; Guide&lt;/h2&gt; &#xA;&lt;h3&gt;1. Setup the config file&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command to create a new config automatically:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;dart run flutter_launcher_icons:generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a new file called &lt;code&gt;flutter_launcher_icons.yaml&lt;/code&gt; in your &lt;code&gt;flutter&lt;/code&gt; project&#39;s root directory.&lt;/p&gt; &#xA;&lt;p&gt;If you want to override the default location or name of the config file, use the &lt;code&gt;-f&lt;/code&gt; flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;dart run flutter_launcher_icons:generate -f &amp;lt;your config file name here&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To override an existing config file, use the &lt;code&gt;-o&lt;/code&gt; flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;dart run flutter_launcher_icons:generate -o&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR&lt;/p&gt; &#xA;&lt;p&gt;Add your Flutter Launcher Icons configuration to your &lt;code&gt;pubspec.yaml&lt;/code&gt;.&lt;br&gt; An example is shown below. More complex examples &lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/tree/master/example&#34;&gt;can be found in the example projects&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dev_dependencies:&#xA;  flutter_launcher_icons: &#34;^0.14.1&#34;&#xA;&#xA;flutter_launcher_icons:&#xA;  android: &#34;launcher_icon&#34;&#xA;  ios: true&#xA;  image_path: &#34;assets/icon/icon.png&#34;&#xA;  min_sdk_android: 21 # android min sdk min:16, default 21&#xA;  web:&#xA;    generate: true&#xA;    image_path: &#34;path/to/image.png&#34;&#xA;    background_color: &#34;#hexcode&#34;&#xA;    theme_color: &#34;#hexcode&#34;&#xA;  windows:&#xA;    generate: true&#xA;    image_path: &#34;path/to/image.png&#34;&#xA;    icon_size: 48 # min:48, max:256, default: 48&#xA;  macos:&#xA;    generate: true&#xA;    image_path: &#34;path/to/image.png&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Run the package&lt;/h3&gt; &#xA;&lt;p&gt;After setting up the configuration, all that is left to do is run the package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flutter pub get&#xA;dart run flutter_launcher_icons&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you name your configuration file something other than &lt;code&gt;flutter_launcher_icons.yaml&lt;/code&gt; or &lt;code&gt;pubspec.yaml&lt;/code&gt; you will need to specify the name of the file when running the package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flutter pub get&#xA;dart run flutter_launcher_icons -f &amp;lt;your config file name here&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: If you are not using the existing &lt;code&gt;pubspec.yaml&lt;/code&gt; ensure that your config file is located in the same directory as it.&lt;/p&gt; &#xA;&lt;p&gt;If you encounter any issues &lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/issues&#34;&gt;please report them here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In the above configuration, the package is setup to replace the existing launcher icons in both the Android and iOS project with the icon located in the image path specified above and given the name &#34;launcher_icon&#34; in the Android project and &#34;Example-Icon&#34; in the iOS project.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üîç&lt;/span&gt; Attributes&lt;/h2&gt; &#xA;&lt;p&gt;Shown below is the full list of attributes which you can specify within your Flutter Launcher Icons configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Global&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;image_path&lt;/code&gt;: The location of the icon image file which you want to use as the app launcher icon.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;android&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Override the default existing Flutter launcher icon for the platform specified&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Ignore making launcher icons for this platform&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;icon/path/here.png&lt;/code&gt;: This will generate a new launcher icons for the platform with the name you specify, without removing the old default existing Flutter launcher icon.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;image_path&lt;/code&gt;: The location of the icon image file which you want to use as the app launcher icon&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;image_path_android&lt;/code&gt;: The location of the icon image file specific for Android platform (optional - if not defined then the image_path is used)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;min_sdk_android&lt;/code&gt;: Specify android min sdk value &lt;strong&gt;The next two attributes are only used when generating Android launcher icon&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;adaptive_icon_background&lt;/code&gt;: The color (E.g. &lt;code&gt;&#34;#ffffff&#34;&lt;/code&gt;) or image asset (E.g. &lt;code&gt;&#34;assets/images/christmas-background.png&#34;&lt;/code&gt;) which will be used to fill out the background of the adaptive icon.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;adaptive_icon_foreground&lt;/code&gt;: The image asset which will be used for the icon foreground of the adaptive icon &lt;em&gt;Note: Adaptive Icons will only be generated when both adaptive_icon_background and adaptive_icon_foreground are specified. (the image_path is not automatically taken as foreground)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;adaptive_icon_foreground_inset&lt;/code&gt;: This is used to add padding to the icon when applying an adaptive icon. The default value is &lt;code&gt;16&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;adaptive_icon_monochrome&lt;/code&gt;: The image asset which will be used for the icon foreground of the Android 13+ themed icon. For more information see &lt;a href=&#34;https://developer.android.com/develop/ui/views/launch/icon_design_adaptive#user-theming&#34;&gt;Android Adaptive Icons&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;IOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ios&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: Override the default existing Flutter launcher icon for the platform specified&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Ignore making launcher icons for this platform&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;icon/path/here.png&lt;/code&gt;: This will generate a new launcher icons for the platform with the name you specify, without removing the old default existing Flutter launcher icon.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;image_path_ios&lt;/code&gt;: The location of the icon image file specific for iOS platform (optional - if not defined then the image_path is used)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;remove_alpha_ios&lt;/code&gt;: Removes alpha channel for IOS icons&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;image_path_ios_dark_transparent&lt;/code&gt;: The location of the dark mode icon image file specific for iOS 18+ platform. &lt;em&gt;Note: Apple recommends this icon to be transparent. For more information see &lt;a href=&#34;https://developer.apple.com/design/human-interface-guidelines/app-icons#iOS-iPadOS&#34;&gt;Apple Human Interface Guidelines for App Icons&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;image_path_ios_tinted_grayscale&lt;/code&gt;: The location of the tinted mode icon image file specific for iOS 18+ platform. &lt;em&gt;Note: This icon should be an grayscale image. Use &lt;code&gt;desaturate_tinted_to_grayscale_ios: true&lt;/code&gt; to automatically desaturate the image provided here.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;desaturate_tinted_to_grayscale_ios&lt;/code&gt;: Automatically desaturates tinted mode icon image to grayscale, &lt;em&gt;defaults to false&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;background_color_ios&lt;/code&gt;: The color (in the format &#34;#RRGGBB&#34;) to be used as the background when removing the alpha channel. It is used only when the &lt;code&gt;remove_alpha_ios&lt;/code&gt; property is set to true. (optional - if not defined then &lt;code&gt;#ffffff&lt;/code&gt; is used)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;web&lt;/code&gt;: Add web related configs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;generate&lt;/code&gt;: Specifies whether to generate icons for this platform or not&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;image_path&lt;/code&gt;: Path to web icon.png&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;background_color&lt;/code&gt;: Updates &lt;em&gt;background_color&lt;/em&gt; in &lt;code&gt;web/manifest.json&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;theme_color&lt;/code&gt;: Updates &lt;em&gt;theme_color&lt;/em&gt; in &lt;code&gt;web/manifest.json&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;windows&lt;/code&gt;: Add Windows related configs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;generate&lt;/code&gt;: Specifies whether to generate icons for Windows platform or not&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;image_path&lt;/code&gt;: Path to web icon.png&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;icon_size&lt;/code&gt;: Windows app icon size. Icon size should be within this constrains &lt;em&gt;48&amp;lt;=icon_size&amp;lt;=256, defaults to 48&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;macos&lt;/code&gt;: Add MacOS related configs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;generate&lt;/code&gt;: Specifies whether to generate icons for MacOS platform or not&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;image_path&lt;/code&gt;: Path to macos icon.png file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: iOS icons should &lt;a href=&#34;https://stackoverflow.com/questions/26014461/black-border-on-my-ios-icon&#34;&gt;fill the entire image&lt;/a&gt; and not contain transparent borders.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Flavor support&lt;/h2&gt; &#xA;&lt;p&gt;Create a Flutter Launcher Icons configuration file for your flavor. The config file is called &lt;code&gt;flutter_launcher_icons-&amp;lt;flavor&amp;gt;.yaml&lt;/code&gt; by replacing &lt;code&gt;&amp;lt;flavor&amp;gt;&lt;/code&gt; by the name of your desired flavor.&lt;/p&gt; &#xA;&lt;p&gt;The configuration file format is the same.&lt;/p&gt; &#xA;&lt;p&gt;An example project with flavor support enabled &lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/tree/master/example/flavors&#34;&gt;has been added to the examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ùì&lt;/span&gt; Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;Listed a couple common issues with solutions for them&lt;/p&gt; &#xA;&lt;h3&gt;Generated icon color is different from the original icon&lt;/h3&gt; &#xA;&lt;p&gt;Caused by an update to the image dependency which is used by Flutter Launcher Icons.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Use #AARRGGBB for colors instead of #AABBGGRR, to be compatible with Flutter image class.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/issues/98&#34;&gt;Related issue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Image foreground is too big / too small&lt;/h3&gt; &#xA;&lt;p&gt;For best results try and use a foreground image which has padding much like &lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/raw/master/example/default_example/assets/images/icon-foreground-432x432.png&#34;&gt;the one in the example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/issues/96&#34;&gt;Related issue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Dependency incompatible&lt;/h3&gt; &#xA;&lt;p&gt;You may receive a message similar to the following&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;Because flutter_launcher_icons &amp;gt;=0.9.0 depends on args 2.0.0 and flutter_native_splash 1.2.0 depends on args ^2.1.1, flutter_launcher_icons &amp;gt;=0.9.0 is incompatible with flutter_native_splash 1.2.0.&#xA;And because no versions of flutter_native_splash match &amp;gt;1.2.0 &amp;lt;2.0.0, flutter_launcher_icons &amp;gt;=0.9.0 is incompatible with flutter_native_splash ^1.2.0.&#xA;So, because enstack depends on both flutter_native_splash ^1.2.0 and flutter_launcher_icons ^0.9.0, version solving failed.&#xA;pub get failed (1; So, because enstack depends on both flutter_native_splash ^1.2.0 and flutter_launcher_icons ^0.9.0, version solving failed.)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a quick fix, you can temporarily override all references to a dependency: &lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/issues/262#issuecomment-879872076&#34;&gt;See here for an example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üëÄ&lt;/span&gt; Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RjNAxwcP3Tc&#34;&gt;&lt;img src=&#34;https://i.imgur.com/R28hqdz.png&#34; alt=&#34;Video Example&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: This is showing a very old version (v0.0.5)&lt;/p&gt; &#xA;&lt;h3&gt;Special thanks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks to Brendan Duncan for the underlying &lt;a href=&#34;https://pub.dev/packages/image&#34;&gt;image package&lt;/a&gt; to transform the icons.&lt;/li&gt; &#xA; &lt;li&gt;Big thank you to all the contributors to the project. Every PR / reported issue is greatly appreciated!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>