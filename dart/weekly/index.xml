<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dart Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-31T02:08:45Z</updated>
  <subtitle>Weekly Trending of Dart in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vandadnp/flutter-tips-and-tricks</title>
    <updated>2022-07-31T02:08:45Z</updated>
    <id>tag:github.com,2022-07-31:/vandadnp/flutter-tips-and-tricks</id>
    <link href="https://github.com/vandadnp/flutter-tips-and-tricks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Collection of Flutter and Dart Tips and Tricks&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/nested-generators-in-dart/nested-generators-in-dart.md&#34;&gt;Nested Generators in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/default-value-for-optionals-in-dart/default-value-for-optionals-in-dart.md&#34;&gt;Default Value for Optionals in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/compactmap-on-map-in-dart/compactmap-on-map-in-dart.md&#34;&gt;CompactMap on &lt;code&gt;Map&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/ios-context-menu-in-flutter/ios-context-menu-in-flutter.md&#34;&gt;iOS Context Menu in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/recursive-flatten-of-list-in-dart/recursive-flatten-of-list-in-dart.md&#34;&gt;Recursive Flatten of List in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/async-api-cleanup-in-flutter/async-api-cleanup-in-flutter.md&#34;&gt;Async API Cleanup in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/splice-in-dart/splice-in-dart.md&#34;&gt;Splice in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/label-text-in-flutter/label-text-in-flutter.md&#34;&gt;Label Text in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/where-clause-on-map-in-dart/where-clause-on-map-in-dart.md&#34;&gt;Where Clause on &lt;code&gt;Map&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/unawaited-and-ignore-in-dart/unawaited-and-ignore-in-dart.md&#34;&gt;Unawaited and Ignore in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/key-and-value-mapping-in-dart/key-and-value-mapping-in-dart.md&#34;&gt;Key and Value Mapping in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/--operator-on-iterablet-in-dart/--operator-on-iterablet-in-dart.md&#34;&gt;&lt;code&gt;-&lt;/code&gt; Operator on &lt;code&gt;Iterable&amp;lt;T&amp;gt;&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/merging-maps-in-dart/merging-maps-in-dart.md&#34;&gt;Merging &lt;code&gt;Map&lt;/code&gt;s in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/streamqueue-in-flutter/streamqueue-in-flutter.md&#34;&gt;&lt;code&gt;StreamQueue&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/enum-annotations-in-flutter/enum-annotations-in-flutter.md&#34;&gt;Enum Annotations in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/sorting-generics-in-dart/sorting-generics-in-dart.md&#34;&gt;Sorting Generics in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/animating-fab-in-flutter/animating-fab-in-flutter.md&#34;&gt;Animating FAB in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/image-gallery-in-flutter/image-gallery-in-flutter.md&#34;&gt;Image Gallery in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/map-with-index-in-dart/map-with-index-in-dart.md&#34;&gt;Map with Index in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/set-comprehension-in-dart/set-comprehension-in-dart.md&#34;&gt;&lt;code&gt;Set&lt;/code&gt; Comprehension in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/stretching-gridview-items-in-flutter/stretching-gridview-items-in-flutter.md&#34;&gt;Stretching &lt;code&gt;GridView&lt;/code&gt; Items in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/email-drag-and-drop-in-flutter/email-drag-and-drop-in-flutter.md&#34;&gt;Email Drag and Drop in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/cherry-picking-functions-in-dart/cherry-picking-functions-in-dart.md&#34;&gt;Cherry-Picking Functions in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/integer-range-extension-in-dart/integer-range-extension-in-dart.md&#34;&gt;Integer Range Extension in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/static-vs-factory-constructors-in-dart/static-vs-factory-constructors-in-dart.md&#34;&gt;Static vs Factory Constructors in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/result-type-in-dart/result-type-in-dart.md&#34;&gt;Result Type in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/streamcontroller-sink-in-flutter/streamcontroller-sink-in-flutter.md&#34;&gt;&lt;code&gt;StreamController&lt;/code&gt; Sink in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/enum-members-in-dart-2-17/enum-members-in-dart-2-17.md&#34;&gt;Enum Members in Dart 2.17&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/constructor-vs-factory-constructor-in-dart/constructor-vs-factory-constructor-in-dart.md&#34;&gt;Constructor vs Factory Constructor in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/unwrapping-streams-in-dart/unwrapping-streams-in-dart.md&#34;&gt;Unwrapping Streams in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/appending-to-iterablet-in-dart/appending-to-iterablet-in-dart.md&#34;&gt;Appending to &lt;code&gt;Iterable&amp;lt;T&amp;gt;&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/inline-synchronous-generators-in-dart/inline-synchronous-generators-in-dart.md&#34;&gt;Inline Synchronous Generators in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/functions-as-first-class-citizens-in-flutter/functions-as-first-class-citizens-in-flutter.md&#34;&gt;Functions as First Class Citizens in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/%2B-operator-on-map-in-dart/%2B-operator-on-map-in-dart.md&#34;&gt;&lt;code&gt;+&lt;/code&gt; Operator on &lt;code&gt;Map&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/stream-drain-in-flutter/stream-drain-in-flutter.md&#34;&gt;&lt;code&gt;Stream&lt;/code&gt; Drain in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/reusable-separators-in-flutter/reusable-separators-in-flutter.md&#34;&gt;Reusable Separators in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/asyncsnapshotbuilder-in-flutter/asyncsnapshotbuilder-in-flutter.md&#34;&gt;&lt;code&gt;AsyncSnapshotBuilder&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/default-parameter-values-in-dart/default-parameter-values-in-dart.md&#34;&gt;Default Parameter Values in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/clipboard-in-flutter/clipboard-in-flutter.md&#34;&gt;&lt;code&gt;Clipboard&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/generic-object-map-in-dart/generic-object-map-in-dart.md&#34;&gt;Generic Object Map in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/requiredata-in-asyncsnapshot-in-flutter/requiredata-in-asyncsnapshot-in-flutter.md&#34;&gt;RequireData in &lt;code&gt;AsyncSnapshot&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/symbol-in-dart/symbol-in-dart.md&#34;&gt;&lt;code&gt;Symbol&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/radiolisttile-in-flutter/radiolisttile-in-flutter.md&#34;&gt;&lt;code&gt;RadioListTile&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/infinite-listview-in-flutter/infinite-listview-in-flutter.md&#34;&gt;Infinite &lt;code&gt;ListView&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/filterchip-in-flutter/filterchip-in-flutter.md&#34;&gt;&lt;code&gt;FilterChip&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/function-pointers-in-flutter/function-pointers-in-flutter.md&#34;&gt;Function Pointers in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/multi-field-object-comparison-in-dart/multi-field-object-comparison-in-dart.md&#34;&gt;Multi-field Object Comparison in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/expectation-extensions-in-flutter/expectation-extensions-in-flutter.md&#34;&gt;Expectation Extensions in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/delay-extension-in-flutter/delay-extension-in-flutter.md&#34;&gt;Delay Extension in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/hide-keyword-in-dart/hide-keyword-in-dart.md&#34;&gt;Hide Keyword in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/firebase-batch-operations-in-flutter/firebase-batch-operations-in-flutter.md&#34;&gt;Firebase Batch Operations in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/show-keyword-in-dart/show-keyword-in-dart.md&#34;&gt;Show Keyword in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/cherry-pick-provider-changes-in-flutter/cherry-pick-provider-changes-in-flutter.md&#34;&gt;Cherry Pick Provider Changes in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/url-data-in-dart/url-data-in-dart.md&#34;&gt;URL Data in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/observe-network-connection-in-flutter/observe-network-connection-in-flutter.md&#34;&gt;Observe Network Connection in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/restartable-timer-in-dart/restartable-timer-in-dart.md&#34;&gt;Restartable Timer in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/lazystream-in-flutter-and-dart/lazystream-in-flutter-and-dart.md&#34;&gt;&lt;code&gt;LazyStream&lt;/code&gt; in Flutter and Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/cancelable-apis-in-flutter/cancelable-apis-in-flutter.md&#34;&gt;Cancelable APIs in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/asset-data-in-flutter/asset-data-in-flutter.md&#34;&gt;Asset Data in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/api-caching-in-flutter/api-caching-in-flutter.md&#34;&gt;API Caching in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/futuregroup-in-dart/futuregroup-in-dart.md&#34;&gt;&lt;code&gt;FutureGroup&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/flatten-iterablebool-in-dart/flatten-iterablebool-in-dart.md&#34;&gt;Flatten &lt;code&gt;Iterable&amp;lt;bool&amp;gt;&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/caching-temp-files-in-flutter/caching-temp-files-in-flutter.md&#34;&gt;Caching Temp Files in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-lists-in-dart/custom-lists-in-dart.md&#34;&gt;Custom Lists in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/optional-chaining-in-dart/optional-chaining-in-dart.md&#34;&gt;Optional Chaining in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/maplist-in-flutter/maplist-in-flutter.md&#34;&gt;MapList in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/futurebool-in-flutter/futurebool-in-flutter.md&#34;&gt;&lt;code&gt;Future&amp;lt;bool&amp;gt;&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/async-bloc-init-in-flutter/async-bloc-init-in-flutter.md&#34;&gt;Async Bloc Init in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/firebase-auth-errors-in-flutter/firebase-auth-errors-in-flutter.md&#34;&gt;Firebase Auth Errors in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/debug-strings-in-flutter/debug-strings-in-flutter.md&#34;&gt;Debug Strings in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/keyboard-appearance-in-flutter/keyboard-appearance-in-flutter.md&#34;&gt;Keyboard Appearance in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/get-string-data-in-dart/get-string-data-in-dart.md&#34;&gt;Get &lt;code&gt;String&lt;/code&gt; Data in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/streamstartwith-in-flutter/streamstartwith-in-flutter.md&#34;&gt;&lt;code&gt;Stream.startWith&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/optional-functions-in-dart/optional-functions-in-dart.md&#34;&gt;Optional Functions in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/annotatedregion-in-flutter/annotatedregion-in-flutter.md&#34;&gt;&lt;code&gt;AnnotatedRegion&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/unordered-map-equality-in-dart/unordered-map-equality-in-dart.md&#34;&gt;Unordered &lt;code&gt;Map&lt;/code&gt; Equality in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/iterable-to-listview-in-flutter/iterable-to-listview-in-flutter.md&#34;&gt;&lt;code&gt;Iterable&lt;/code&gt; to &lt;code&gt;ListView&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/password-mask-in-flutter/password-mask-in-flutter.md&#34;&gt;Password Mask in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/fast-object-tostring-in-dart/fast-object-tostring-in-dart.md&#34;&gt;Fast &lt;code&gt;Object.toString()&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/copying-bloc-state-in-flutter/copying-bloc-state-in-flutter.md&#34;&gt;Copying Bloc State in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/iterable-subscripts-in-dart/iterable-subscripts-in-dart.md&#34;&gt;&lt;code&gt;Iterable&lt;/code&gt; Subscripts in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/usestate-in-flutter-hooks/usestate-in-flutter-hooks.md&#34;&gt;&lt;code&gt;useState&lt;/code&gt; in Flutter Hooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/folding-iterables-in-dart/folding-iterables-in-dart.md&#34;&gt;Folding Iterables in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-iterables-in-dart/custom-iterables-in-dart.md&#34;&gt;Custom Iterables in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/class-clusters-in-dart/class-clusters-in-dart.md&#34;&gt;Class Clusters in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/iterable-plus-minus-in-dart/iterable-plus-minus-in-dart.md&#34;&gt;&lt;code&gt;Iterable&lt;/code&gt; +/- in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/periodic-streams-in-dart/periodic-streams-in-dart.md&#34;&gt;Periodic Streams in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/emptyonerror-in-dart/emptyonerror-in-dart.md&#34;&gt;&lt;code&gt;EmptyOnError&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/stream%3CT%3E-initial-value-in-flutter/stream%3CT%3E-initial-value-in-flutter.md&#34;&gt;&lt;code&gt;Stream&amp;lt;T&amp;gt;&lt;/code&gt; Initial Value in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/doublenormalize-in-dart/doublenormalize-in-dart.md&#34;&gt;&lt;code&gt;Double.normalize&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/hide-sensitive-information-in-flutter/hide-sensitive-information-in-flutter.md&#34;&gt;Hide Sensitive Information in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/iterable-compactmap-in-dart/iterable-compactmap-in-dart.md&#34;&gt;&lt;code&gt;Iterable.compactMap&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/useeffect-in-flutter-hooks/useeffect-in-flutter-hooks.md&#34;&gt;&lt;code&gt;useEffect&lt;/code&gt; in Flutter Hooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/merging-streams-in-dart/merging-streams-in-dart.md&#34;&gt;Merging Streams in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/isolate-stream-in-dart/isolate-stream-in-dart.md&#34;&gt;&lt;code&gt;Isolate&lt;/code&gt; Stream in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/network-image-retry-in-flutter/network-image-retry-in-flutter.md&#34;&gt;Network Image Retry in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/reusable-apis-in-flutter/reusable-apis-in-flutter.md&#34;&gt;Reusable APIs in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/listtile-shadow-in-flutter/listtile-shadow-in-flutter.md&#34;&gt;&lt;code&gt;ListTile&lt;/code&gt; Shadow in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/transparent-appbar-in-flutter/transparent-appbar-in-flutter.md&#34;&gt;Transparent AppBar in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/constructors-on-abstract-classes-in-dart/constructors-on-abstract-classes-in-dart.md&#34;&gt;Constructors on Abstract Classes in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/useresult-in-dart/useresult-in-dart.md&#34;&gt;&lt;code&gt;@useResult&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/mustcallsuper-in-dart/mustcallsuper-in-dart.md&#34;&gt;&lt;code&gt;@mustCallSuper&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/object-hash-in-dart/object-hash-in-dart.md&#34;&gt;&lt;code&gt;Object.hash&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/expanded-equally-in-flutter/expanded-equally-in-flutter.md&#34;&gt;Expanded Equally in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/random-iterable-value-in-dart/random-iterable-value-in-dart.md&#34;&gt;Random Iterable Value in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/hardcoded-strings-in-flutter/hardcoded-strings-in-flutter.md&#34;&gt;Hardcoded Strings in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/manually-scroll-in-list-view-in-flutter/manually-scroll-in-list-view-in-flutter.md&#34;&gt;Manually Scroll in List View in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/asyncsnapshot-to-widget-in-flutter/asyncsnapshot-to-widget-in-flutter.md&#34;&gt;&lt;code&gt;AsyncSnapshot&lt;/code&gt; to &lt;code&gt;Widget&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/breadcrumbs-in-flutter/breadcrumbs-in-flutter.md&#34;&gt;Breadcrumbs in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/unique-map-values-in-dart/unique-map-values-in-dart.md&#34;&gt;Unique &lt;code&gt;Map&lt;/code&gt; Values in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/smart-quotes-dashes-in-flutter/smart-quotes-dashes-in-flutter.md&#34;&gt;Smart Quotes/Dashes in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/haptic-feedback-in-flutter/haptic-feedback-in-flutter.md&#34;&gt;Haptic Feedback in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/localization-delegates-in-flutter/localization-delegates-in-flutter.md&#34;&gt;Localization Delegates in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/extending-functions-in-dart/extending-functions-in-dart.md&#34;&gt;Extending Functions in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/paginated-listview-in-flutter/paginated-listview-in-flutter.md&#34;&gt;Paginated &lt;code&gt;ListView&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/immutable-classes-in-dart/immutable-classes-in-dart.md&#34;&gt;Immutable Classes in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/card-widget-in-flutter/card-widget-in-flutter.md&#34;&gt;Card Widget in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/list-equality-ignoring-ordering-in-dart/list-equality-ignoring-ordering-in-dart.md&#34;&gt;List Equality Ignoring Ordering in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/shorten-github-urls-in-dart/shorten-github-urls-in-dart.md&#34;&gt;Shorten GitHub URLs in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/time-picker-in-flutter/time-picker-in-flutter.md&#34;&gt;Time Picker in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/throttled-print-in-flutter/throttled-print-in-flutter.md&#34;&gt;Throttled Print in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/map-equality-in-dart/map-equality-in-dart.md&#34;&gt;Map Equality in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/unique-maps-in-dart/unique-maps-in-dart.md&#34;&gt;Unique Maps in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/raw-auto-complete-in-flutter/raw-auto-complete-in-flutter.md&#34;&gt;Raw Auto Complete in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/title-on-object-in-dart/title-on-object-in-dart.md&#34;&gt;Title on &lt;code&gt;Object&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/compute-in-flutter/compute-in-flutter.md&#34;&gt;Compute in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/filter-on-map-in-dart/filter-on-map-in-dart.md&#34;&gt;Filter on &lt;code&gt;Map&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/type-alias-in-dart/type-alias-in-dart.md&#34;&gt;Type Alias in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/valuenotifier-in-flutter/valuenotifier-in-flutter.md&#34;&gt;&lt;code&gt;ValueNotifier&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/object-to-integer-in-dart/object-to-integer-in-dart.md&#34;&gt;Object to Integer in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/image-opacity-in-flutter/image-opacity-in-flutter.md&#34;&gt;Image Opacity in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/covariant-in-dart/covariant-in-dart.md&#34;&gt;Covariant in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-errors-in-streams-in-dart/custom-errors-in-streams-in-dart.md&#34;&gt;Custom Errors in Streams in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/shake-animation-in-flutter/shake-animation-in-flutter.md&#34;&gt;Shake Animation in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/throw-enums-in-dart/throw-enums-in-dart.md&#34;&gt;Throw Enums in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/future-error-test-in-flutter/future-error-test-in-flutter.md&#34;&gt;&lt;code&gt;Future&lt;/code&gt; Error Test in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/generic-url-retrieval-in-dart/generic-url-retrieval-in-dart.md&#34;&gt;Generic URL Retrieval in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-error-widget-in-flutter/custom-error-widget-in-flutter.md&#34;&gt;Custom Error Widget in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/handle-multiple-future-errors-in-dart/handle-multiple-future-errors-in-dart.md&#34;&gt;Handle Multiple &lt;code&gt;Future&lt;/code&gt; Errors in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/future-error-handling-in-dart/future-error-handling-in-dart.md&#34;&gt;&lt;code&gt;Future&lt;/code&gt; Error Handling in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/string-to-toast-in-flutter/string-to-toast-in-flutter.md&#34;&gt;String to Toast in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/waiting-in-dart/waiting-in-dart.md&#34;&gt;Waiting in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/loading-dialog-in-flutter/loading-dialog-in-flutter.md&#34;&gt;Loading Dialog in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/compact-map-on-mapkv-in-dart/compact-map-on-mapkv-in-dart.md&#34;&gt;Compact Map on &lt;code&gt;Map&amp;lt;K,V&amp;gt;&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/query-parameters-in-dart/query-parameters-in-dart.md&#34;&gt;Query Parameters in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/multiple-gradients-in-container-in-flutter/multiple-gradients-in-container-in-flutter.md&#34;&gt;Multiple Gradients in Container in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/filter-on-streamlistt-in-dart/filter-on-streamlistt-in-dart.md&#34;&gt;Filter on &lt;code&gt;Stream&amp;lt;List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/generic-route-arguments-in-flutter/generic-route-arguments-in-flutter.md&#34;&gt;Generic Route Arguments in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/generic-dialog-in-flutter/generic-dialog-in-flutter.md&#34;&gt;Generic Dialog in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/github-api-in-flutter/github-api-in-flutter.md&#34;&gt;GitHub API in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/changenotifier-in-flutter/changenotifier-in-flutter.md&#34;&gt;&lt;code&gt;ChangeNotifier&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/refresh-indicator-in-flutter/refresh-indicator-in-flutter.md&#34;&gt;Refresh Indicator in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/flatmap-in-dart/flatmap-in-dart.md&#34;&gt;FlatMap in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/orientationbuilder-in-flutter/orientationbuilder-in-flutter.md&#34;&gt;&lt;code&gt;OrientationBuilder&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/linear-gradient-in-flutter/linear-gradient-in-flutter.md&#34;&gt;Linear Gradient in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/bloc-text-editing-controller-in-flutter/bloc-text-editing-controller-in-flutter.md&#34;&gt;Bloc Text Editing Controller in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/blurred-tabbar-in-flutter/blurred-tabbar-in-flutter.md&#34;&gt;Blurred TabBar in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/play-youtube-in-flutter/play-youtube-in-flutter.md&#34;&gt;Play YouTube in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/listview-background-in-flutter/listview-background-in-flutter.md&#34;&gt;ListView Background in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/integer-to-binary-in-dart/integer-to-binary-in-dart.md&#34;&gt;Integer to Binary in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/split-string-by-length-in-dart/split-string-by-length-in-dart.md&#34;&gt;Split String by Length in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/image-tint-in-flutter/image-tint-in-flutter.md&#34;&gt;Image Tint in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/slidetransition-in-flutter/slidetransition-in-flutter.md&#34;&gt;SlideTransition in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/expansion-panels-and-lists-in-flutter/expansion-panels-and-lists-in-flutter.md&#34;&gt;Expansion Panels and Lists in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/complete-crud-app-in-flutter/complete-crud-app-in-flutter.md&#34;&gt;Complete CRUD App in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/sqlite-storage-in-flutter/sqlite-storage-in-flutter.md&#34;&gt;SQLite Storage in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/circular-progress-with-percentage-in-flutter/circular-progress-with-percentage-in-flutter.md&#34;&gt;Circular Progress with Percentage in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/opening-urls-in-flutter/opening-urls-in-flutter.md&#34;&gt;Opening URLs in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/commodore-64-screen-in-flutter/commodore-64-screen-in-flutter.md&#34;&gt;Commodore 64 Screen in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/animated-lists-in-flutter/animated-lists-in-flutter.md&#34;&gt;Animated Lists in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/checkboxlisttile-in-flutter/checkboxlisttile-in-flutter.md&#34;&gt;&lt;code&gt;CheckboxListTile&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/minus-operator-on-string-in-dart/minus-operator-on-string-in-dart.md&#34;&gt;&lt;code&gt;-&lt;/code&gt; Operator on &lt;code&gt;String&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/dart-progress-for-futuret/dart-progress-for-futuret.md&#34;&gt;Dart Progress for &lt;code&gt;Future&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/move-widget-shadows-with-animation/move-widget-shadows-with-animation.md&#34;&gt;Move Widget Shadows with Animation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/gallery-with-blurred-backgrounds-in-flutter/gallery-with-blurred-backgrounds-in-flutter.md&#34;&gt;Gallery with Blurred Backgrounds in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-path-clippers-in-flutter/custom-path-clippers-in-flutter.md&#34;&gt;Custom Path Clippers in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/frost-effect-on-images-in-flutter/frost-effect-on-images-in-flutter.md&#34;&gt;Frost Effect on Images in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-clippers-in-flutter/custom-clippers-in-flutter.md&#34;&gt;Custom Clippers in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/check-if-website-is-up-or-down-in-dart/check-if-website-is-up-or-down-in-dart.md&#34;&gt;Check if Website is Up or Down in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/section-titles-on-listview-in-flutter/section-titles-on-listview-in-flutter.md&#34;&gt;Section Titles on ListView in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/circular-progress-in-flutter/circular-progress-in-flutter.md&#34;&gt;Circular Progress in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/displaying-scroll-wheels-in-flutter/displaying-scroll-wheels-in-flutter.md&#34;&gt;Displaying Scroll Wheels in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/post-messages-to-slack-with-dart/post-messages-to-slack-with-dart.md&#34;&gt;Post Messages to Slack with Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/unwrap-list-t%3F-%3F-in-dart/unwrap-list-t%3F-%3F-in-dart.md&#34;&gt;Unwrap &lt;code&gt;List&amp;lt;T?&amp;gt;?&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/avoiding-ui-jitters-when-switching-widgets-in-flutter/avoiding-ui-jitters-when-switching-widgets-in-flutter.md&#34;&gt;Avoiding UI Jitters When Switching Widgets in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/detect-redirects-in-dart/detect-redirects-in-dart.md&#34;&gt;Detect Redirects in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/proportional-constraints-in-flutter/proportional-constraints-in-flutter.md&#34;&gt;Proportional Constraints in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/displaying-cupertino-action-sheets-in-flutter/displaying-cupertino-action-sheets-in-flutter.md&#34;&gt;Displaying Cupertino Action Sheets in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/rotating-list-t-in-dart/rotating-list-t-in-dart.md&#34;&gt;Rotating &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/displaying-snackbars-in-flutter/displaying-snackbars-in-flutter.md&#34;&gt;Displaying SnackBars in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-tab-bar-using-togglebuttons-in-flutter/custom-tab-bar-using-togglebuttons-in-flutter.md&#34;&gt;Custom Tab Bar Using ToggleButtons in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/hashable-mixins-in-dart/hashable-mixins-in-dart.md&#34;&gt;Hashable Mixins in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/flutter-tips-and-tricks-in-terminal/flutter-tips-and-tricks-in-terminal.md&#34;&gt;Flutter Tips and Tricks in Terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/searching-listlistt-in-dart/searching-listlistt-in-dart.md&#34;&gt;Searching &lt;code&gt;List&amp;lt;List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/cloning-objects-in-dart/cloning-objects-in-dart.md&#34;&gt;Cloning Objects in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/color-filters-in-flutter/color-filters-in-flutter.md&#34;&gt;Color Filters in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/flattening-lists-in-dart/flattening-lists-in-dart.md&#34;&gt;Flattening Lists in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/managing-duplicates-in-list-t-in-dart/managing-duplicates-in-list-t-in-dart.md&#34;&gt;Managing Duplicates in &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/flatmap-and-compactmap-in-dart/flatmap-and-compactmap-in-dart.md&#34;&gt;FlatMap and CompactMap in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/equality-of-list-t-in-dart/equality-of-list-t-in-dart.md&#34;&gt;Equality of &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/constants-in-dart/constants-in-dart.md&#34;&gt;Constants in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/displaying-scrollable-bottom-sheets-in-flutter/displaying-scrollable-bottom-sheets-in-flutter.md&#34;&gt;Displaying Scrollable Bottom Sheets in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/youtube-ad-remover-in-dart/youtube-ad-remover-in-dart.md&#34;&gt;YouTube Ad Remover in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/fade-between-widgets-in-flutter/fade-between-widgets-in-flutter.md&#34;&gt;Fade Between Widgets in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/sort-descriptors-in-dart/sort-descriptors-in-dart.md&#34;&gt;Sort Descriptors in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/user-sortable-columns-and-tables-in-flutter/user-sortable-columns-and-tables-in-flutter.md&#34;&gt;User Sortable Columns and Tables in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/content-length-of-list-of-uri-in-dart/content-length-of-list-of-uri-in-dart.md&#34;&gt;Content-Length of &lt;code&gt;List&amp;lt;Uri&amp;gt;&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/recursive-dot-notation-on-maps-in-dart/recursive-dot-notation-on-maps-in-dart.md&#34;&gt;Recursive Dot Notation on Maps in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/allow-user-selection-of-text-in-flutter/allow-user-selection-of-text-in-flutter.md&#34;&gt;Allow User Selection of Text in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/placing-constraints-on-widgets-in-flutter/placing-constraints-on-widgets-in-flutter.md&#34;&gt;Placing Constraints on Widgets in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/animating-position-changes-in-flutter/animating-position-changes-in-flutter.md&#34;&gt;Animating Position Changes in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/transitioning-between-widgets-in-flutter/transitioning-between-widgets-in-flutter.md&#34;&gt;Transitioning Between Widgets in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/doubly-linked-lists-in-dart/doubly-linked-lists-in-dart.md&#34;&gt;Doubly Linked Lists in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/reordering-items-inside-list-views-in-flutter/reordering-items-inside-list-views-in-flutter.md&#34;&gt;Reordering Items Inside List Views in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-stream-transformers-in-dart/custom-stream-transformers-in-dart.md&#34;&gt;Custom Stream Transformers in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/expanding-stream-elements-in-dart/expanding-stream-elements-in-dart.md&#34;&gt;Expanding Stream Elements in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/consume-streams-for-a-duration-in-dart/consume-streams-for-a-duration-in-dart.md&#34;&gt;Consume Streams for a Duration in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/shortening-urls-in-dart/shortening-urls-in-dart.md&#34;&gt;Shortening URLs in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/limitedbox-widget-as-listview-items-in-flutter/limitedbox-widget-as-listview-items-in-flutter.md&#34;&gt;LimitedBox Widget as ListView Items in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/generically-convert-anything-to-int-in-dart/generically-convert-anything-to-int-in-dart.md&#34;&gt;Generically Convert Anything to Int in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/validating-url-certificates-in-dart/validating-url-certificates-in-dart.md&#34;&gt;Validating URL Certificates in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/displaying-popup-menus-in-flutter/displaying-popup-menus-in-flutter.md&#34;&gt;Displaying Popup Menus in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/implementing-drag-and-drop-in-flutter/implementing-drag-and-drop-in-flutter.md&#34;&gt;Implementing Drag and Drop in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/dismissing-list-items-in-flutter/dismissing-list-items-in-flutter.md&#34;&gt;Dismissing List Items in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/animating-widgets-with-ease-in-flutter/animating-widgets-with-ease-in-flutter.md&#34;&gt;Animating Widgets with Ease in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/displaying-tool-tips-in-flutter/displaying-tool-tips-in-flutter.md&#34;&gt;Displaying Tool Tips in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/displaying-assorted-widgets-inside-tableview-in-flutter/displaying-assorted-widgets-inside-tableview-in-flutter.md&#34;&gt;Displaying Assorted Widgets Inside TableView in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/page-indicator-with-page-view-in-flutter/page-indicator-with-page-view-in-flutter.md&#34;&gt;Page Indicator with Page View in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/animating-and-moving-a-floating-action-button-in-flutter/animating-and-moving-a-floating-action-button-in-flutter.md&#34;&gt;Animating and Moving a Floating Action Button in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/fading-network-image-widget-in-flutter/fading-network-image-widget-in-flutter.md&#34;&gt;Fading Network Image Widget in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/transparent-alert-dialogs-in-flutter/transparent-alert-dialogs-in-flutter.md&#34;&gt;Transparent Alert Dialogs in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/network-image-size-in-dart/network-image-size-in-dart.md&#34;&gt;Network Image Size in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/animated-icons-in-flutter/animated-icons-in-flutter.md&#34;&gt;Animated Icons in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-scroll-views-in-flutter/custom-scroll-views-in-flutter.md&#34;&gt;Custom Scroll Views in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/parallax-app-bar-in-flutter/parallax-app-bar-in-flutter.md&#34;&gt;Parallax App Bar in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/json-http-requests-in-dart/json-http-requests-in-dart.md&#34;&gt;JSON HTTP Requests in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/url-timeouts-in-dart/url-timeouts-in-dart.md&#34;&gt;URL Timeouts in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/detecting-url-file-types-in-dart/detecting-url-file-types-in-dart.md&#34;&gt;Detecting URL File Types in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/paginated-lists-in-dart/paginated-lists-in-dart.md&#34;&gt;Paginated Lists in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/requesting-delete-on-apis-in-dart/requesting-delete-on-apis-in-dart.md&#34;&gt;Requesting DELETE on APIs in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/animated-containers-in-flutter/animated-containers-in-flutter.md&#34;&gt;Animated Containers in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/hiding-widgets-in-flutter/hiding-widgets-in-flutter.md&#34;&gt;Hiding Widgets in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/simple-opacity-animation-in-flutter/simple-opacity-animation-in-flutter.md&#34;&gt;Simple Opacity Animation in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/vignette-widget-in-flutter/vignette-widget-in-flutter.md&#34;&gt;Vignette Widget in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/drop-down-button-configuration-and-usage-in-flutter/drop-down-button-configuration-and-usage-in-flutter.md&#34;&gt;Drop Down Button Configuration and Usage in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/expandable-list-items-in-flutter/expandable-list-items-in-flutter.md&#34;&gt;Expandable List Items in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/infinite-scrolling-in-flutter/infinite-scrolling-in-flutter.md&#34;&gt;Infinite Scrolling in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/infinite-arrays-in-dart/infinite-arrays-in-dart.md&#34;&gt;Infinite Arrays in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-color-picker-component-in-flutter/custom-color-picker-component-in-flutter.md&#34;&gt;Custom Color Picker Component in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/displaying-and-reacting-to-switches-in-flutter/displaying-and-reacting-to-switches-in-flutter.md&#34;&gt;Displaying and Reacting to Switches in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/displaying-bottom-bars-in-flutter/displaying-bottom-bars-in-flutter.md&#34;&gt;Displaying Bottom Bars in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/displaying-buttons-on-appbar-in-flutter/displaying-buttons-on-appbar-in-flutter.md&#34;&gt;Displaying Buttons on AppBar in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/displaying-bottom-sheets-in-flutter/displaying-bottom-sheets-in-flutter.md&#34;&gt;Displaying Bottom Sheets in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/converting-enums-to-radio-buttons-in-flutter/converting-enums-to-radio-buttons-in-flutter.md&#34;&gt;Converting Enums to Radio Buttons in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/check-existence-of-websites-in-flutter/check-existence-of-websites-in-flutter.md&#34;&gt;Check Existence of Websites in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/images-inside-alertdialog-in-flutter/images-inside-alertdialog-in-flutter.md&#34;&gt;Images inside AlertDialog in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/returning-values-from-alertdialog-in-flutter/returning-values-from-alertdialog-in-flutter.md&#34;&gt;Returning Values from AlertDialog in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/simple-grid-view-in-flutter/simple-grid-view-in-flutter.md&#34;&gt;Simple Grid View in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/rendering-bullet-points-in-flutter/rendering-bullet-points-in-flutter.md&#34;&gt;Rendering Bullet Points in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/retrying-futures-in-flutter/retrying-futures-in-flutter.md&#34;&gt;Retrying Futures in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/containers-as-clipoval-in-flutter/containers-as-clipoval-in-flutter.md&#34;&gt;Containers as ClipOvals in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/rich-texts-in-flutter/rich-texts-in-flutter.md&#34;&gt;Rich Texts in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/wrapping-widgets-in-flutter/wrapping-widgets-in-flutter.md&#34;&gt;Wrapping Widgets in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/sweep-gradients-in-flutter/sweep-gradients-in-flutter.md&#34;&gt;Sweep Gradients in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/stream-and-stream-builder-in-flutter/stream-and-stream-builder-in-flutter.md&#34;&gt;&lt;code&gt;Stream&lt;/code&gt; and &lt;code&gt;StreamBuilder&lt;/code&gt; in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/blur-effect-in-flutter/blur-effect-in-flutter.md&#34;&gt;Blur Effect in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/convert-enums-to-strings-in-dart/convert-enums-to-strings-in-dart.md&#34;&gt;Convert Enums to Strings in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/replacing-text-in-textfield-in-flutter/replacing-text-in-textfield-in-flutter.md&#34;&gt;Replacing Text in TextField in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/aspect-ratio-in-flutter/aspect-ratio-in-flutter.md&#34;&gt;Aspect Ratio in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/zoom-and-pan-in-flutter/zoom-and-pan-in-flutter.md&#34;&gt;Zoom and Pan in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/resizing-images-in-flutter-to-fit-screen-height/resizing-images-in-flutter-to-fit-screen-height.md&#34;&gt;Resizing Images in Flutter to Fit Screen Height&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/validating-urls-in-flutter/validating-urls-in-flutter.md&#34;&gt;Validating URLs in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/framebuilder-for-network-images-in-flutter/framebuilder-for-network-images-in-flutter.md&#34;&gt;FrameBuilder for Network Images in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/adding-shadow-to-icons-in-flutter/adding-shadow-to-icons-in-flutter.md&#34;&gt;Adding Shadow to Icons in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/calculating-median-of-lists-in-dart/calculating-median-of-lists-in-dart.md&#34;&gt;Calculating Median of Lists in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/generic-functions-with-reduce-in-dart/generic-functions-with-reduce-in-dart.md&#34;&gt;Generic Functions with Reduce in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/passing-back-data-from-a-screen-to-the-previous-one-in-flutter/passing-back-data-from-a-screen-to-the-previous-one-in-flutter.md&#34;&gt;Passing Back Data From a Screen to the Previous One in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/flinging-an-animation-in-flutter/flinging-an-animation-in-flutter.md&#34;&gt;Flinging an Animation in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/fade-animations-in-flutter/fade-animations-in-flutter.md&#34;&gt;Fade Animations in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/throttling-user-input-in-flutter/throttling-user-input-in-flutter.md&#34;&gt;Throttling User Input in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/censoring-textfields-in-flutter/censoring-textfields-in-flutter.md&#34;&gt;Censoring TextFields in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/customizing-textbutton-in-flutter/customizing-textbutton-in-flutter.md&#34;&gt;Customizing TextButton in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/multiline-textfields-in-flutter/multiline-textfields-in-flutter.md&#34;&gt;Multiline TextFields in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/filtering-textfield-input-in-flutter/filtering-textfield-input-in-flutter.md&#34;&gt;Filtering TextField Input in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/focusing-manually-on-textfields-in-flutter/focusing-manually-on-textfields-in-flutter.md&#34;&gt;Focusing Manually on TextFields in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/data-streams-over-http-https-in-dart/data-streams-over-http-https-in-dart.md&#34;&gt;Data Streams Over HTTP/HTTPs in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/catching-nonexistent-accessors-or-methods-in-dart/catching-nonexistent-accessors-or-methods-in-dart.md&#34;&gt;Catching Nonexistent Accessors or Methods in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/using-expando-in-dart/using-expando-in-dart.md&#34;&gt;Using Expando in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/implementing-custom-maps-in-dart/implementing-custom-maps-in-dart.md&#34;&gt;Implementing Custom Maps in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/dynamically-calling-functions-in-dart/dynamically-calling-functions-in-dart.md&#34;&gt;Dynamically Calling Functions in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/factory-constructors-in-dart/factory-constructors-in-dart.md&#34;&gt;Factory Constructors in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/calculating-the-sum-of-list-items-in-dart/calculating-the-sum-of-list-items-in-dart.md&#34;&gt;Calculating the Sum of List Items in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/removing-duplicate-strings-in-lists-in-dart/removing-duplicate-strings-in-lists-in-dart.md&#34;&gt;Removing Duplicate Strings in Lists in Dart (Case-Insensitive)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/implementing-range-in-dart/implementing-range-in-dart.md&#34;&gt;Implementing Range in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/converting-lists-to-maps-in-dart/converting-lists-to-maps-in-dart.md&#34;&gt;Converting Lists to Maps in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/implementing-hashable-in-dart/implementing-hashable-in-dart.md&#34;&gt;Implementing Hashable in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/random-name-generator-in-dart/random-name-generator-in-dart.md&#34;&gt;Random Name Generator in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/capturing-stack-traces-in-dart-exceptions/capturing-stack-traces-in-dart-exceptions.md&#34;&gt;Capturing Stack Traces in Dart Exceptions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/removing-duplicates-from-lists-in-dart/removing-duplicates-from-lists-in-dart.md&#34;&gt;Removing Duplicates from Lists in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/optional-spread-operator-in-dart/optional-spread-operator-in-dart.md&#34;&gt;Optional Spread Operator in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/calling-optional-functions-in-dart/calling-optional-functions-in-dart.md&#34;&gt;Calling Optional Functions in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/odd-even-sort-in-dart/odd-even-sort-in-dart.md&#34;&gt;Odd-Even Sort in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/implementing-zip-and-tuples-in-dart/implementing-zip-and-tuples-in-dart.md&#34;&gt;Implementing Zip and Tuples in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/swapping-values-in-lists-with-xor-in-dart/swapping-values-in-lists-with-xor-in-dart.md&#34;&gt;Swapping Values in Lists with XOR in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/waiting-for-multiple-futures-in-dart/waiting-for-multiple-futures-in-dart.md&#34;&gt;Waiting for Multiple Futures in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/using-queues-as-stacks-in-dart/using-queues-as-stacks-in-dart.md&#34;&gt;Using Queues as Stacks in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-iterators-in-dart/custom-iterators-in-dart.md&#34;&gt;Custom Iterators in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/iterables-as-ranges-and-transform-in-dart/iterables-as-ranges-and-transform-in-dart.md&#34;&gt;Iterables as Ranges + Transform in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/errors-vs-exceptions-in-dart/errors-vs-exceptions-in-dart.md&#34;&gt;Errors vs Exceptions in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-annotations-in-dart/custom-annotations-in-dart.md&#34;&gt;Custom Annotations in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/classes-as-enums-in-dart/classes-as-enums-in-dart.md&#34;&gt;Classes as Enums in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/spread-operator-in-collection-literals-in-dart/spread-operator-in-collection-literals-in-dart.md&#34;&gt;Spread Operator in Collection Literals in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/streambuilder-and-streamcontroller-in-dart/streambuilder-and-streamcontroller-in-dart.md&#34;&gt;&lt;code&gt;StreamBuilder&lt;/code&gt; and &lt;code&gt;StreamController&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/almost-equal-in-dart/almost-equal-in-dart.md&#34;&gt;Almost Equal in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/enum-associated-values-in-dart/enum-associated-values-in-dart.md&#34;&gt;Enum Associated Values in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/implementing-comparable-in-dart/implementing-comparable-in-dart.md&#34;&gt;Implementing &lt;code&gt;Comparable&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/implementing-custom-integer-types-in-dart/implementing-custom-integer-types-in-dart.md&#34;&gt;Implementing Custom Integer Types in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-subscripts-in-dart/custom-subscripts-in-dart.md&#34;&gt;Custom Subscripts in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/dart-list-enumeration-with-index/dart-list-enumeration-with-index.md&#34;&gt;Dart List Enumeration with Index&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/applying-mixins-to-other-mixins-in-dart/applying-mixins-to-other-mixins-in-dart.md&#34;&gt;Applying Mixins to Other Mixins in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/parameter-types-in-dart/parameter-types-in-dart.md&#34;&gt;Parameter Types in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/custom-exceptions-in-dart/custom-exceptions-in-dart.md&#34;&gt;Custom Exceptions in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/rethrowing-exceptions-in-dart/rethrowing-exceptions-in-dart.md&#34;&gt;&lt;code&gt;rethrow&lt;/code&gt;ing Exceptions in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/mixins-and-json-parsing-in-dart/mixins-and-json-parsing-in-dart.md&#34;&gt;&lt;code&gt;mixin&lt;/code&gt;s and JSON Parsing in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/mixins-vs-abstract-classes-in-dart/mixins-vs-abstract-classes-in-dart.md&#34;&gt;&lt;code&gt;mixin&lt;/code&gt;s vs &lt;code&gt;abstract class&lt;/code&gt;es in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/drawing-shapes-with-flutter/drawing-shapes-with-flutter.md&#34;&gt;Drawing Shapes in Flutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/generic-typealiases-in-dart/generic-typealiases-in-dart.md&#34;&gt;Generic Type Aliases in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/callable-classes-in-dart/callable-classes-in-dart.md&#34;&gt;Callable Classes in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/synchronous-generators-in-dart/synchronous-generators-in-dart.md&#34;&gt;Synchronous Generators in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/implicit-interfaces-in-dart/implicit-interfaces-in-dart.md&#34;&gt;Implicit Interfaces in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/const-initializers/const-initializers.md&#34;&gt;Dart&#39;s &lt;code&gt;const&lt;/code&gt; Initializers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/downloading-and-parsing-json/downloading-and-parsing-json.md&#34;&gt;Downloading and Parsing JSON in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/dart-initializer-list/dart-initializer-list.md&#34;&gt;Dart Initializer List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/checking-for-type-equality-in-dart-lists/checking-for-type-equality-in-dart-lists.md&#34;&gt;Checking for Type Equality in Dart Lists&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/type-promotion-with-sound-null-safety/type-promotion-with-sound-null-safety.md&#34;&gt;Type Promotion with Sound Null Safety in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/min-max-extension-on-list/min-max-extension-on-list.md&#34;&gt;Extract Minimum and Maximum Values in &lt;code&gt;List&amp;lt;num&amp;gt;&lt;/code&gt; in Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vandadnp/flutter-tips-and-tricks/main/tipsandtricks/functions-as-first-class-citizens-in-dart/functions-as-first-class-citizens-in-dart.md&#34;&gt;Functions as First Class Citizens in Dart&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Click on any of the tips/tricks above to get to their source-code/infographic and demo videos (if applicable)&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2022 @ Vandad Nahavandipoor&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>abuanwar072/E-commerce-Complete-Flutter-UI</title>
    <updated>2022-07-31T02:08:45Z</updated>
    <id>tag:github.com,2022-07-31:/abuanwar072/E-commerce-Complete-Flutter-UI</id>
    <link href="https://github.com/abuanwar072/E-commerce-Complete-Flutter-UI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;E-Commerce Complate App - Flutter UI&lt;/h1&gt; &#xA;&lt;p&gt;In the first part of our complete e-commerce app, we show you how you can create a nice clean onboarding screen for your e-commerce app that can run both Andriod and iOS devices because it builds with flutter. Then on the second episode, we build a Sign in, Forgot Password screen with a custom error indicator. The third Episode contains Sign Up and OTP screen. The fourth episode is the most exciting episode because we build our home page on this episode than on the fifth episode we work on our product page, last not least on the 6th episode we build an order screen which has some cool stuff like swipe to remove. At the end 7th episode we build a profile screen.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://youtube.com/playlist?list=PLxUBb2A_UUy8OlaNZpS2mfL8xpHcnd_Af&#34;&gt;Watch it on YouTube&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Packages we are using:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;flutter_svg: &lt;a href=&#34;https://pub.dev/packages/flutter_svg&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Video Preview of Final UI&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/intro.gif&#34; alt=&#34;Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screens it contains:&lt;/h2&gt; &#xA;&lt;p&gt;=&amp;gt; Onboarding&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Login&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Forgot Password&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Sign Up&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Complete Profile&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; OTP Verification&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Home Page&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Product Details&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Order&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Profile (added)&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Bottom Navigation Bar (added)&lt;/p&gt; &#xA;&lt;p&gt;Now it contains all the screen, thanks for your love and support 🙏&lt;/p&gt; &#xA;&lt;h2&gt;Photos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/1.png&#34; alt=&#34;Preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/2.png&#34; alt=&#34;Preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/3.png&#34; alt=&#34;Preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/4.png&#34; alt=&#34;Preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/5.png&#34; alt=&#34;Preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/6.png&#34; alt=&#34;Preview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/abuanwar072/E-commerce-Complete-Flutter-UI/master/7.png&#34; alt=&#34;Preview&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Milad-Akarie/auto_route_library</title>
    <updated>2022-07-31T02:08:45Z</updated>
    <id>tag:github.com,2022-07-31:/Milad-Akarie/auto_route_library</id>
    <link href="https://github.com/Milad-Akarie/auto_route_library" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flutter route generator&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/art/auto_route_logo.svg?sanitize=true&#34; height=&#34;170&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://img.shields.io/badge/License-MIT-green&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-green&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Milad-Akarie/auto_route_library/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Milad-Akarie/auto_route_library?style=flat&amp;amp;logo=github&amp;amp;colorB=green&amp;amp;label=stars&#34; alt=&#34;stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pub.dev/packages/auto_route&#34;&gt;&lt;img src=&#34;https://img.shields.io/pub/v/auto_route.svg?label=pub&amp;amp;color=orange&#34; alt=&#34;pub version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/x3SBU4WRRd&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/821043906703523850.svg?color=7289da&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;style=flat-square&#34; alt=&#34;Discord Badge&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.buymeacoffee.com/miladakarie&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;30px&#34; width=&#34;108px&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#introduction&#34;&gt;Introduction&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#setup-and-usage&#34;&gt;Setup and Usage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#generated-routes&#34;&gt;Generated routes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#navigating-between-screens&#34;&gt;Navigation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#navigating-between-screens&#34;&gt;Navigating Between Screens&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#passing-arguments&#34;&gt;Passing Arguments&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#returning-results&#34;&gt;Returning Results&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#nested-navigation&#34;&gt;Nested navigation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#tab-navigation&#34;&gt;Tab Navigation&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#using-pageview&#34;&gt;Using PageView&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#using-tabbar&#34;&gt;Using TabBar&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#finding-the-right-router&#34;&gt;Finding The Right Router&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#navigating-without-context&#34;&gt;Navigating Without Context&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#declarative-navigation&#34;&gt;Declarative Navigation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#working-with-paths&#34;&gt;Working with Paths&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#route-guards&#34;&gt;Route guards&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#wrapping-routes&#34;&gt;Wrapping routes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#navigation-observers&#34;&gt;Navigation Observers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#customizations&#34;&gt;Customization&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#custom-route-transitions&#34;&gt;Custom Route Transitions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#custom-route-builder&#34;&gt;Custom Route Builder&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#others&#34;&gt;Others&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#autoleadingbutton-backbutton&#34;&gt;AutoLeadingButton-BackButton&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#activeguardobserver&#34;&gt;ActiveGuardObserver&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#remove-shadow-from-nested-routers&#34;&gt;Remove shadow from nested routers&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;h4&gt;What is AutoRoute?&lt;/h4&gt; &#xA;&lt;p&gt;It’s a Flutter navigation package, it allows for strongly-typed arguments passing, effortless deep-linking and it uses code generation to simplify routes setup, with that being said it requires a minimal amount of code to generate everything needed for navigation inside of your App.&lt;/p&gt; &#xA;&lt;h4&gt;Why AutoRoute?&lt;/h4&gt; &#xA;&lt;p&gt;If your App requires deep-linking or guarded routes or just a clean routing setup you&#39;ll need to use named/generated routes and you’ll end up writing a lot of boilerplate code for mediator argument classes, checking for required arguments, extracting arguments and a bunch of other stuff. AutoRoute does all that for you and much more.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dependencies:              &#xA; auto_route: [latest-version]              &#xA;             &#xA;dev_dependencies:              &#xA; auto_route_generator: [latest-version]              &#xA; build_runner:              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup And Usage&lt;/h2&gt; &#xA;&lt;p&gt;Create a placeholder class and annotate it with &lt;code&gt;@MaterialAutoRouter&lt;/code&gt; which takes a list of routes as a required argument.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Unless you want to generate a part of file (.gr.dart) The name of the router must be prefixed with &lt;strong&gt;$&lt;/strong&gt; so we have a generated class with the same name minus the &lt;strong&gt;$&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;              &#xA;// @CupertinoAutoRouter              &#xA;// @AdaptiveAutoRouter              &#xA;// @CustomAutoRouter              &#xA;@MaterialAutoRouter(              &#xA;  replaceInRouteName: &#39;Page,Route&#39;,              &#xA;  routes: &amp;lt;AutoRoute&amp;gt;[              &#xA;    AutoRoute(page: BookListPage, initial: true),              &#xA;    AutoRoute(page: BookDetailsPage),              &#xA;  ],              &#xA;)              &#xA;class $AppRouter {}              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using part builder ( New in version 3.0.0+)&lt;/h3&gt; &#xA;&lt;p&gt;To generate a part-of file instead of a stand alone &lt;code&gt;AppRouter&lt;/code&gt; class, simply add a &lt;code&gt;Part Directive&lt;/code&gt; to your &lt;code&gt;AppRouter&lt;/code&gt; and extend the generated private router.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;part &#39;app_router.gr.dart&#39;;      &#xA;        &#xA;@MaterialAutoRouter(              &#xA;  replaceInRouteName: &#39;Page,Route&#39;,              &#xA;  routes: &amp;lt;AutoRoute&amp;gt;[              &#xA;    AutoRoute(page: BookListPage, initial: true),              &#xA;    AutoRoute(page: BookDetailsPage),              &#xA;  ],              &#xA;)              &#xA;// extend the generated private router        &#xA;class AppRouter extends _$AppRouter{}              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Tip: You can Shorten auto-generated route names from e.g. &lt;strong&gt;BookListPageRoute&lt;/strong&gt; to &lt;strong&gt;BookListRoute&lt;/strong&gt; using the replaceInRouteName argument.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Now simply run the generator&lt;/h4&gt; &#xA;&lt;p&gt;Use the [watch] flag to watch the files&#39; system for edits and rebuild as necessary.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;flutter packages pub run build_runner watch              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if you want the generator to run one time and exits use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;flutter packages pub run build_runner build              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Finalize the setup&lt;/h4&gt; &#xA;&lt;p&gt;after you run the generator your router class will be generated, hook it up with MaterialApp.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// assuing this is the root widget of your App           &#xA;class App extends StatelessWidget {      &#xA;  // make sure you don&#39;t initiate your router          &#xA;  // inside of the build function.          &#xA;  final _appRouter = AppRouter();      &#xA;      &#xA;  @override      &#xA;  Widget build(BuildContext context){      &#xA;    return MaterialApp.router(      &#xA;      routerDelegate: _appRouter.delegate(),      &#xA;      routeInformationParser: _appRouter.defaultRouteParser(),      &#xA;    );      &#xA;  }      &#xA;}      &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Generated Routes&lt;/h2&gt; &#xA;&lt;p&gt;A &lt;code&gt;PageRouteInfo&lt;/code&gt; object will be generated for every declared AutoRoute, These objects hold path information plus strongly-typed page arguments which are extracted from the page&#39;s default constructor. Think of them as string path segments on steroid.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class BookListRoute extends PageRouteInfo {              &#xA;  const BookListRoute() : super(name, path: &#39;/books&#39;);              &#xA;              &#xA;  static const String name = &#39;BookListRoute&#39;;              &#xA;}              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if the declared route has children AutoRoute will add a children parameter to its constructor to be used in nested navigation. more on that here.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class UserRoute extends PageRouteInfo {              &#xA;   UserRoute({List&amp;lt;PagerouteInfo&amp;gt; children}) :              &#xA;    super(              &#xA;         name,               &#xA;         path: &#39;/user/:id&#39;,              &#xA;         initialChildren: children);              &#xA;  static const String name = &#39;UserRoute&#39;;              &#xA;}              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Navigating Between Screens&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;AutoRouter&lt;/code&gt; offers the same known push, pop and friends methods to manipulate the pages stack using both the generated &lt;code&gt;PageRouteInfo&lt;/code&gt; objects and paths.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// get the scoped router by calling              &#xA;AutoRouter.of(context)              &#xA;// or using the extension              &#xA;context.router              &#xA;              &#xA;// adds a new entry to the pages stack              &#xA;router.push(const BooksListRoute())            &#xA;// or by using using paths            &#xA;router.pushNamed(&#39;/books&#39;)             &#xA;          &#xA;// removes last entry in stack and pushs provided route           &#xA;// if last entry == provided route page will just be updated          &#xA;router.replace(const BooksListRoute())              &#xA;// or by using using paths            &#xA;router.replaceNamed(&#39;/books&#39;)            &#xA;          &#xA;// pops until provided route, if it already exists in stack              &#xA;// else adds it to the stack (good for web Apps).              &#xA;router.navigate(const BooksListRoute())            &#xA;// or by using using paths            &#xA;router.navigateNamed(&#39;/books&#39;)          &#xA;        &#xA;// on Web it calls window.history.back();      &#xA;// on Native it navigates you back       &#xA;// to the previous location      &#xA;router.navigateBack();      &#xA;      &#xA;// adds a list of routes to the pages stack at once          &#xA;router.pushAll([          &#xA;   BooksListRoute(),          &#xA;   BookDetailsRoute(id:1),          &#xA;]);          &#xA;          &#xA;// This&#39;s like providing a completely new stack as it rebuilds the stack          &#xA;// with the list of passed routes          &#xA;// entires might just update if already exist          &#xA;router.replaceAll([          &#xA;   LoginRoute()          &#xA;]);          &#xA;// pops the last page unless stack has 1 entry              &#xA;context.router.pop();             &#xA;// keeps poping routes until predicate is satisfied          &#xA;context.router.popUntil((route) =&amp;gt; route.name == &#39;HomeRoute&#39;);          &#xA;// a simplifed version of the above line          &#xA;context.router.popUntilRouteWithName(&#39;HomeRoute&#39;);          &#xA;// pops all routes down to the root          &#xA;context.router.popUntilRoot();          &#xA;               &#xA;// removes the top most page in stack even if it&#39;s the last          &#xA;// remove != pop, it doesn&#39;t respect WillPopScopes it just           &#xA;// removes the entry.          &#xA;context.router.removeLast();           &#xA;          &#xA;// removes any route in stack that satisfis the predicate          &#xA;// this works exactly like removing items from a regualar List          &#xA;// &amp;lt;PageRouteInfo&amp;gt;[...].removeWhere((r)=&amp;gt;)          &#xA;context.router.removeWhere((route) =&amp;gt; );          &#xA;              &#xA;// you can also use the common helper methods from context extension to navigate          &#xA;context.pushRoute(const BooksListRoute());          &#xA;context.replaceRoute(const BooksListRoute());          &#xA;context.navigateTo(const BooksListRoute());          &#xA;context.navigateNamedTo(&#39;/books&#39;);          &#xA;context.navigateBack();         &#xA;context.popRoute();          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Passing Arguments&lt;/h2&gt; &#xA;&lt;p&gt;That&#39;s the fun part! &lt;strong&gt;AutoRoute&lt;/strong&gt; automatically detects and handles your page arguments for you, the generated route object will deliver all the arguments your page needs including path/query params.&lt;/p&gt; &#xA;&lt;p&gt;e.g. The following page widget will take an argument of type &lt;code&gt;Book&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class BookDetailsPage extends StatelessWidget {              &#xA; const BookDetailsPage({required this.book});              &#xA;              &#xA;  final Book book;           &#xA;  ...              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Default values are respected. Required fields are also respected and handled properly.&lt;/p&gt; &#xA;&lt;p&gt;The generated &lt;code&gt;BookDetailsRoute&lt;/code&gt; will deliver the same arguments to it&#39;s corresponding page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-drt&#34;&gt;router.push(BookDetailsRoute(book: book));              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; all args are generated as named parameters regardless of their original type.&lt;/p&gt; &#xA;&lt;h2&gt;Returning Results&lt;/h2&gt; &#xA;&lt;p&gt;You can return results by either using the pop completer or by passing a callback function as an argument the same way you&#39;d pass an object.&lt;/p&gt; &#xA;&lt;p&gt;1 - Using the pop completer&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var result = await router.push(LoginRoute());              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then inside of your &lt;code&gt;LoginPage&lt;/code&gt; pop with results&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;router.pop(true);             &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;as you&#39;d notice we did not specify the result type, we&#39;re playing with dynamic values here, which can be risky and I personally don&#39;t recommend it.&lt;/p&gt; &#xA;&lt;p&gt;To avoid working with dynamic values we specify what type of results we expect our page to return, which is a &lt;code&gt;bool&lt;/code&gt; value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;AutoRoute&amp;lt;bool&amp;gt;(page: LoginPage),           &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;we push and specify the type of results we&#39;re expecting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var result = await router.push&amp;lt;bool&amp;gt;(LoginRoute());              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and of course we pop with the same type&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;router.pop&amp;lt;bool&amp;gt;(true);             &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2- Passing a callback function as an argument.&lt;br&gt; We only have to add a callback function as a parameter to our page constructor like follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class BookDetailsPage extends StatelessWidget {              &#xA; const BookDetailsRoute({this.book, required this.onRateBook});              &#xA;              &#xA;  final Book book;              &#xA;  final void Function(int) onRateBook;              &#xA;  ...              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The generated &lt;code&gt;BookDetailsRoute&lt;/code&gt; will deliver the same arguments to it&#39;s corresponding page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;context.router.push(              &#xA;      BookDetailsRoute(              &#xA;          book: book,              &#xA;          onRateBook: (rating) {              &#xA;           // handle result              &#xA;          }),              &#xA;    );              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if you&#39;re finishing with results make sure you call the callback function as you pop the page&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;onRateBook(RESULT);              &#xA;context.router.pop();              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Default values are respected. Required fields are also respected and handled properly.&lt;/p&gt; &#xA;&lt;h2&gt;Nested Navigation&lt;/h2&gt; &#xA;&lt;p&gt;Nested navigation means building an inner router inside of a page of another router, for example in the below diagram users page is built inside of dashboard page.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/dev/art/nested_router_demo.png&#34; height=&#34;370&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;defining nested routes is as easy as populating the children field of the parent route. In the following example &lt;code&gt;UsersPage&lt;/code&gt; , &lt;code&gt;PostsPage&lt;/code&gt; and &lt;code&gt;SettingsPage&lt;/code&gt; are nested children of &lt;code&gt;DashboardPage&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;@MaterialAutoRouter(              &#xA;  replaceInRouteName: &#39;Page,Route&#39;,              &#xA;  routes: &amp;lt;AutoRoute&amp;gt;[              &#xA;    AutoRoute(              &#xA;      path: &#39;/dashboard&#39;,              &#xA;      page: DashboardPage,              &#xA;      children: [              &#xA;        AutoRoute(path: &#39;users&#39;, page: UsersPage),              &#xA;        AutoRoute(path: &#39;posts&#39;, page: PostsPage),          &#xA;        AutoRoute(path: &#39;settings&#39;, page: SettingsPage),                &#xA;      ],              &#xA;    ),          &#xA;    AutoRoute(path: &#39;/login&#39;, page: LoginPage)          &#xA;  ],              &#xA;)              &#xA;class $AppRouter {}              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To render/build nested routes we need an &lt;code&gt;AutoRouter&lt;/code&gt; widget that works as an outlet or a nested router-view inside of our dashboard page.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class DashboardPage extends StatelessWidget {          &#xA;  @override          &#xA;  Widget build(BuildContext context) {          &#xA;    return Row(          &#xA;      children: [          &#xA;        Column(          &#xA;          children: [          &#xA;            NavLink(label: &#39;Users&#39;, destination: const UsersRoute()),          &#xA;            NavLink(label: &#39;Posts&#39;, destination: const PostsRoute()),          &#xA;            NavLink(label: &#39;Settings&#39;, destination: const SettingsRoute()),          &#xA;          ],          &#xA;        ),          &#xA;        Expanded(          &#xA;          // nested routes will be rendered here          &#xA;          child: AutoRouter(),          &#xA;        )          &#xA;      ],          &#xA;    );          &#xA;  }          &#xA;}          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now if we navigate to &lt;code&gt;/dashboard/users&lt;/code&gt; we will be taken to the &lt;code&gt;DashboardPage&lt;/code&gt; and the &lt;code&gt;UsersPage&lt;/code&gt; will be shown inside of it.&lt;/p&gt; &#xA;&lt;p&gt;What if want to show one of the child pages at &lt;code&gt;/dashboard&lt;/code&gt;? we can simply do that by giving the child routes an empty path &lt;code&gt;&#39;&#39;&lt;/code&gt; or set it as initial.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;   AutoRoute(              &#xA;      path: &#39;/dashboard&#39;,              &#xA;      page: DashboardPage,              &#xA;      children: [              &#xA;        AutoRoute(path: &#39;&#39;, page: UsersPage),          &#xA;        //The same thing can be done using the initial flag          &#xA;        //AutoRoute(page: UsersPage,initial: true),              &#xA;        AutoRoute(path: &#39;posts&#39;, page: PostsPage),              &#xA;      ],              &#xA;    ),              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or by using a &lt;code&gt;RedirectRoute&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;   AutoRoute(              &#xA;   path: &#39;/dashboard&#39;,              &#xA;   page: DashboardPage,              &#xA;      children: [              &#xA;         RedirectRoute(path: &#39;&#39;, redirectTo: &#39;users&#39;),              &#xA;         AutoRoute(path: &#39;users&#39;, page: UsersPage),              &#xA;         AutoRoute(path: &#39;posts&#39;, page: PostsPage),               &#xA;      ],              &#xA;   ),        &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which can be simplified to the following where &lt;code&gt;auto_route&lt;/code&gt; generates the redirect code for you.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;   AutoRoute(              &#xA;      path: &#39;/dashboard&#39;,              &#xA;      page: DashboardPage,              &#xA;      children: [              &#xA;        // RedirectRoute(path: &#39;&#39;, redirectTo: &#39;users&#39;),              &#xA;        AutoRoute(path: &#39;users&#39;, page: UsersPage, initial: true),              &#xA;        AutoRoute(path: &#39;posts&#39;, page: PostsPage),               &#xA;      ],              &#xA;    ),              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Things to keep in mind when implementing nested navigation&lt;/h3&gt; &#xA;&lt;p&gt;1- Each router manages it&#39;s own pages stack.&lt;br&gt; 2- Navigation actions like push, pop and friends are handled by the topmost router and bubble up if it couldn&#39;t be handled.&lt;/p&gt; &#xA;&lt;h2&gt;Tab Navigation&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re working with flutter mobile you&#39;re most likely to implement tabs navigation, that&#39;s why &lt;code&gt;auto_route&lt;/code&gt; makes tabs navigation as easy and straightforward as possible.&lt;/p&gt; &#xA;&lt;p&gt;in the previous example we used an &lt;code&gt;AutoRouter&lt;/code&gt; widget to render nested child routes, &lt;code&gt;AutoRouter&lt;/code&gt; is just a shortcut for &lt;code&gt;AutoStackRouter&lt;/code&gt;, &lt;code&gt;StackRouters&lt;/code&gt; manage a stack of pages inside of them where the active/visible page is always the one on top and you&#39;d need to pop it to see the page beneath it.&lt;/p&gt; &#xA;&lt;p&gt;Now we can try to implement our tabs using an &lt;code&gt;AutoRouter&lt;/code&gt; (StackRouter) by pushing or replacing a nested route every-time the tab changes and that might work but our tabs state will be lost, not to mention the transition between tabs issue, luckily auto_route comes equipped with an &lt;code&gt;AutoTabsRouter&lt;/code&gt; which is especially made to handle tab navigation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;AutoTabsRouter&lt;/code&gt; lets you switch between different routes while preserving offstage-routes state, tab routes are lazily loaded by default ( can be disabled ) and finally it allows to create whatever transition animation you want.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s change the previous example to use tab navigation.&lt;/p&gt; &#xA;&lt;p&gt;Notice that we&#39;re not going to change anything in our routes declaration map, we still have a dashboard page that has tree nested children, users, posts and settings.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class DashboardPage extends StatelessWidget {          &#xA;  @override          &#xA;  Widget build(BuildContext context) {          &#xA;    return AutoTabsRouter(          &#xA;    // list of your tab routes          &#xA;    // routes used here must be declaraed as children          &#xA;    // routes of /dashboard           &#xA;      routes: const [          &#xA;        UsersRoute(),          &#xA;        PostsRoute(),          &#xA;        SettingsRoute(),          &#xA;      ],          &#xA;      builder: (context, child, animation) {          &#xA;        // obtain the scoped TabsRouter controller using context          &#xA;        final tabsRouter = AutoTabsRouter.of(context);          &#xA;        // Here we&#39;re building our Scaffold inside of AutoTabsRouter          &#xA;        // to access the tabsRouter controller provided in this context          &#xA;        //           &#xA;        //alterntivly you could use a global key          &#xA;        return Scaffold(          &#xA;            body: FadeTransition(          &#xA;              opacity: animation,          &#xA;              // the passed child is techinaclly our animated selected-tab page          &#xA;              child: child,          &#xA;            ),          &#xA;            bottomNavigationBar: BottomNavigationBar(          &#xA;              currentIndex: tabsRouter.activeIndex,          &#xA;              onTap: (index) {          &#xA;                // here we switch between tabs          &#xA;                tabsRouter.setActiveIndex(index);          &#xA;              },          &#xA;              items: [          &#xA;                BottomNavigationBarItem(label: &#39;Users&#39;,...),          &#xA;                BottomNavigationBarItem(label: &#39;Posts&#39;,...),          &#xA;                BottomNavigationBarItem(label: &#39;Settings&#39;,...),          &#xA;              ],          &#xA;            ));          &#xA;      },          &#xA;    );          &#xA;  }          &#xA;}          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if you think the above setup is a bit messy you could use the shipped-in &lt;code&gt;AutoTabsScaffold&lt;/code&gt; that makes things much cleaner.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class DashboardPage extends StatelessWidget {          &#xA; @override            &#xA;Widget build(context) {            &#xA; @override          &#xA;  Widget build(context) {          &#xA;    return AutoTabsScaffold(          &#xA;       routes: const [          &#xA;        UsersRoute(),          &#xA;        PostsRoute(),          &#xA;        SettingsRoute(),          &#xA;      ],          &#xA;      bottomNavigationBuilder: (_,tabsRouter) {          &#xA;          return BottomNavigationBar(          &#xA;              currentIndex: tabsRouter.activeIndex,          &#xA;              onTap: tabsRouter.setActiveIndex          &#xA;              items: [          &#xA;                BottomNavigationBarItem(label: &#39;Users&#39;,...),          &#xA;                BottomNavigationBarItem(label: &#39;Posts&#39;,...),          &#xA;                BottomNavigationBarItem(label: &#39;Settings&#39;,...),          &#xA;              ],          &#xA;            )),                 &#xA;       }          &#xA;    );          &#xA;}          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using PageView&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;AutoTabsRouter.pageView&lt;/code&gt; constructor to implement tabs using PageView&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;AutoTabsRouter.pageView(      &#xA;     routes: [      &#xA;        BooksTab(),      &#xA;        ProfileTab(),      &#xA;        SettingsTab(),      &#xA;        ],     &#xA;     builder: (context, child, _) {      &#xA;        return Scaffold(      &#xA;              appBar: AppBar(      &#xA;              title: Text(context.topRoute.name),      &#xA;              leading: AutoLeadingButton()),      &#xA;              body: child,      &#xA;              bottomNavigationBar: BottomNavigationBar(          &#xA;                    currentIndex: tabsRouter.activeIndex,          &#xA;                    onTap: tabsRouter.setActiveIndex          &#xA;                    items: [          &#xA;                      BottomNavigationBarItem(label: &#39;Books&#39;,...),          &#xA;                      BottomNavigationBarItem(label: &#39;Profile&#39;,...),          &#xA;                      BottomNavigationBarItem(label: &#39;Settings&#39;,...),          &#xA;                    ],          &#xA;                  ),    &#xA;            ),      &#xA;      ); },    &#xA;  );    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using TabBar&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;AutoTabsRouter.tabBar&lt;/code&gt; constructor to implement tabs using TabBar&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;AutoTabsRouter.tabBar(      &#xA;     routes: [      &#xA;        BooksTab(),      &#xA;        ProfileTab(),      &#xA;        SettingsTab(),      &#xA;        ],     &#xA;     builder: (context, child, controller) {      &#xA;        return Scaffold(      &#xA;              appBar: AppBar(      &#xA;                 title: Text(context.topRoute.name),      &#xA;                 leading: AutoLeadingButton(),    &#xA;                 bottom: TabBar(      &#xA;                    controller: controller,      &#xA;                    tabs: const [      &#xA;                    Tab(text: &#39;1&#39;, icon: Icon(Icons.abc)),      &#xA;                    Tab(text: &#39;2&#39;, icon: Icon(Icons.abc)),      &#xA;                    Tab(text: &#39;3&#39;, icon: Icon(Icons.abc)),      &#xA;                   ],),    &#xA;               ),      &#xA;              body: child,      &#xA;              bottomNavigationBar: BottomNavigationBar(          &#xA;                    currentIndex: tabsRouter.activeIndex,          &#xA;                    onTap: tabsRouter.setActiveIndex          &#xA;                    items: [          &#xA;                      BottomNavigationBarItem(label: &#39;Books&#39;,...),          &#xA;                      BottomNavigationBarItem(label: &#39;Profile&#39;,...),          &#xA;                      BottomNavigationBarItem(label: &#39;Settings&#39;,...),          &#xA;                    ],          &#xA;                  ),    &#xA;            ),      &#xA;      ); },    &#xA;  );    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Finding The Right Router&lt;/h2&gt; &#xA;&lt;p&gt;Every nested &lt;code&gt;AutoRouter&lt;/code&gt; has its own routing controller to manage the stack inside of it and the easiest way to obtain a scoped controller is by using context.&lt;/p&gt; &#xA;&lt;p&gt;In the previous example &lt;code&gt;DashboardPage&lt;/code&gt; is a root level stack entry so calling &lt;code&gt;AutoRouter.of(context)&lt;/code&gt; anywhere inside of it will get us the root routing controller.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;AutoRouter&lt;/code&gt; widgets that are used to render nested routes, insert a new router scope into the widgets tree, so when a nested route calls for the scoped controller they will get the closest parent controller in the widgets tree not the root controller.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Dashboard extends StatelessWidget {              &#xA;             &#xA;  @override              &#xA;  Widget build(BuildContext context) {              &#xA;  // this will get us the root routing controller              &#xA;    AutoRouter.of(context);              &#xA;    return Scaffold(              &#xA;      appBar: AppBar(title: Text(&#39;Dashboard page&#39;)),               &#xA;      // this inserts a new router scope into the widgets tree              &#xA;      body: AutoRouter()               &#xA;    );              &#xA;  }              &#xA;}              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s a simple diagram to help visualize this&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Milad-Akarie/auto_route_library/master/art/scoped_routers_demo.png&#34; height=&#34;570&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;As you can tell from the above diagram it&#39;s possible to access parent routing controllers by calling &lt;code&gt;router.parent&amp;lt;T&amp;gt;()&lt;/code&gt;, we&#39;re using a generic function because we have too different routing controllers &lt;code&gt;StackRouter&lt;/code&gt; and &lt;code&gt;TabsRouter&lt;/code&gt;, one of them could be the parent controller of the current router and that&#39;s why we need to specify a type.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;router.parent&amp;lt;StackRouter&amp;gt;() // this returns  the parent router as a Stack Routing controller              &#xA;router.parent&amp;lt;TabsRouter&amp;gt;() // this returns athe parent router as a Tabs Routing controller              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;on the other hand obtaining the root controller does not require type casting because it&#39;s always a &lt;code&gt;StackRouter&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;router.root // this returns the root router as a Stack Routing controller              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can obtain access to inner-routers from outside their scope using a global key&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class DashboardPage extends StatefulWidget {          &#xA;  @override          &#xA;  _DashboardPageState createState() =&amp;gt; _DashboardPageState();          &#xA;}          &#xA;          &#xA;class _DashboardPageState extends State&amp;lt;DashboardPage&amp;gt; {          &#xA;  final _innerRouterKey = GlobalKey&amp;lt;AutoRouterState&amp;gt;();          &#xA;  @override          &#xA;  Widget build(BuildContext context) {          &#xA;    return Row(          &#xA;      children: [          &#xA;        Column(          &#xA;          children: [          &#xA;            NavLink(label: &#39;Users&#39;,          &#xA;            onTap:(){          &#xA;               final router = _innerRouterKey.currentState?.controller;          &#xA;               router?.push(const UsersRoute());          &#xA;             }          &#xA;            ),          &#xA;            ...          &#xA;          ],          &#xA;        ),          &#xA;        Expanded(          &#xA;          child: AutoRouter(key: _innerRouterKey),          &#xA;        )          &#xA;      ],          &#xA;    );          &#xA;  }          &#xA;}          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could also obtain access to inner-routers from outside their scope without a global key as long as they&#39;re initiated.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// assuming this&#39;s the root router              &#xA;context.innerRouterOf&amp;lt;StackRouter&amp;gt;(UserRoute.name)               &#xA;// or if we&#39;re usign an AutoTabsRouter inside of DashboardPage          &#xA;context.innerRouterOf&amp;lt;TabsRouter&amp;gt;(UserRoute.name)            &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Accessing the &lt;code&gt;DashboardPage&lt;/code&gt; inner router from the previous example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class Dashboard extends StatelessWidget {              &#xA;            &#xA;  @override              &#xA;  Widget build(BuildContext context) {              &#xA;    return Scaffold(              &#xA;      appBar: AppBar(              &#xA;        title: Text(&#39;Dashboard&#39;),              &#xA;        actions: [              &#xA;          IconButton(              &#xA;            icon: Icon(Icons.person),              &#xA;            onPressed: () {              &#xA;              // accessing the inner router from              &#xA;              // outside the scope              &#xA;              final router = context.innerRouterOf&amp;lt;StackRouter&amp;gt;(DashboardRoute.name)          &#xA;              router?.push(const UsersRoute());              &#xA;            },              &#xA;          ),              &#xA;        ],              &#xA;      ),              &#xA;      body: AutoRouter(), // we&#39;re trying to get access to this              &#xA;    );              &#xA;  }              &#xA;}              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Navigating Without Context&lt;/h2&gt; &#xA;&lt;p&gt;To navigate without context you can simply assign your generated router to a global variable&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// declarate your route as a global vairable          &#xA;final appRouter = AppRouter();            &#xA;          &#xA;class MyApp extends StatefulWidget {          &#xA;          &#xA;  @override          &#xA;  Widget build(BuildContext context) {          &#xA;    return MaterialApp.router(          &#xA;      routerDelegate: AutoRouterDelegate(appRouter),          &#xA;      routeInformationParser: appRouter.defaultRouteParser(),          &#xA;      );          &#xA;    }          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; using global variable is not recommended and is considered a bad practice and most of the times you should use dependency injection instead.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example using &lt;code&gt;get_it&lt;/code&gt; which is just a personal favorite, you can use any dependency injection package you like.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;void main(){          &#xA;// make sure you register it as a Singleton or a lazySingleton          &#xA;  getIt.registerSingleton&amp;lt;AppRouter&amp;gt;(AppRouter());          &#xA;  runApp(MyApp());          &#xA; }          &#xA;          &#xA;class MyApp extends StatefulWidget {          &#xA;  @override          &#xA;  Widget build(BuildContext context) {          &#xA;    final router = getIt&amp;lt;AppRouter&amp;gt;();          &#xA;    return MaterialApp.router(          &#xA;      routerDelegate: AutoRouterDelegate(router),          &#xA;      routeInformationParser: router.defaultRouteParser(),          &#xA;      );          &#xA;    }          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;now you can access to your router anywhere inside of your App without using context.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;getIt&amp;lt;AppRouter&amp;gt;().push(...);          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; navigating without context is not recommended in nested navigation unless you use &lt;code&gt;navigate&lt;/code&gt; instead of &lt;code&gt;push&lt;/code&gt; and you provide a full hierarchy. e.g &lt;code&gt;router.navigate(SecondRoute(children: [SubChild2Route()]))&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Declarative Navigation&lt;/h2&gt; &#xA;&lt;p&gt;To use declarative navigation with auto_route you simple use the &lt;code&gt;AutoRouter.declarative&lt;/code&gt; constructor and return a list of routes based on state.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;AutoRouter.declarative(      &#xA;  routes: (handler) =&amp;gt; [      &#xA;     BookListRoute(),      &#xA;     if(_selectedBook != null)      &#xA;     BookDetailsRoute(id: _selectedBook.id),      &#xA; ],);    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the handler contains a temp-list of pending initial routes which can be read only once.&lt;/p&gt; &#xA;&lt;h2&gt;Working with Paths&lt;/h2&gt; &#xA;&lt;p&gt;Working with paths in &lt;strong&gt;AutoRoute&lt;/strong&gt; is optional because &lt;code&gt;PageRouteInfo&lt;/code&gt; objects are matched by name unless pushed as a string using the &lt;code&gt;initialDeepLink&lt;/code&gt; property in root delegate or &lt;code&gt;pushNamed&lt;/code&gt;, &lt;code&gt;replaceNamed&lt;/code&gt; &lt;code&gt;navigateNamed&lt;/code&gt; methods.&lt;/p&gt; &#xA;&lt;p&gt;if you don’t specify a path it’s going to be generated from the page name e.g. &lt;code&gt;BookListPage&lt;/code&gt; will have ‘book-list-page’ as a path, if initial arg is set to true the path will be &lt;code&gt;/&lt;/code&gt; unless it&#39;s relative then it will be an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When developing a web Application or a native App that requires deep-linking you&#39;d probably need to define paths with clear memorable names, and that&#39;s done using the &lt;code&gt;path&lt;/code&gt; argument in &lt;code&gt;AutoRoute&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; AutoRoute(path: &#39;/books&#39;, page: BookListPage),              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Path Parameters (dynamic segments)&lt;/h3&gt; &#xA;&lt;p&gt;You can define a dynamic segment by prefixing it with a colon&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; AutoRoute(path: &#39;/books/:id&#39;, page: BookDetailsPage),              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The simplest way to extract path parameters from path and gain access to them is by annotating constructor params with &lt;code&gt;@PathParam(&#39;optional-alias&#39;)&lt;/code&gt; with the same alias/name of the segment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class BookDetailsPage extends StatelessWidget {              &#xA;  const BookDetailsPage({@PathParam(&#39;id&#39;) this.bookId});          &#xA;            &#xA;  final int bookId;              &#xA;  ...              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now writing &lt;code&gt;/books/1&lt;/code&gt; in the browser will navigate you to &lt;code&gt;BookDetailsPage&lt;/code&gt; and automatically extract the &lt;code&gt;bookId&lt;/code&gt; argument from path and inject it to your widget.&lt;/p&gt; &#xA;&lt;h4&gt;Inherited Path Parameters&lt;/h4&gt; &#xA;&lt;p&gt;if you annotate a constructor parameter with &lt;code&gt;@PathParm()&lt;/code&gt; and the route corresponding with the screen has no path-param with the same name but it&#39;s parent does, then that path-param is inherited and the generated route will not hold this as a parameter arg. e.g&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;AutoRoute(  &#xA;    path: &#39;/product/:id&#39;,  &#xA;    page: ProductScreen,  &#xA;    children: [  &#xA;  &#x9;  AutoRoute(path: &#39;review&#39;,page: ProductReviewScreen),  &#xA;   ],&#xA;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;now &lt;code&gt;ProductReviewScreen&lt;/code&gt; expects a path-param named &lt;code&gt;id&lt;/code&gt; but, from the above snippet we know that the route corresponding with it &lt;code&gt;review&lt;/code&gt; has no path parameters, in that case auto_route will check if any ancestor path can provide this path-param if yes it marks it as an inherited path-param otherwise it throws an error.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class ProductReviewScreen extends StatelessWidget {  &#xA;   // the path-param &#39;id&#39; will be inherited and it can not be passed&#xA;   // as a route arg by user&#xA;  const ProductReviewScreen({super.key, @pathParam required String id}); &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Query Parameters&lt;/h3&gt; &#xA;&lt;p&gt;Query parameters are accessed the same way, simply annotate the constructor parameter to hold the value of the query param with &lt;code&gt;@QueryParam(&#39;optional-alias&#39;)&lt;/code&gt; and let AutoRoute do the rest.&lt;/p&gt; &#xA;&lt;p&gt;you could also access path/query parameters using the scoped &lt;code&gt;RouteData&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; RouteData.of(context).pathParams;              &#xA; // or using the extension              &#xA; context.routeData.queryParams              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Tip&lt;/code&gt;: if your parameter name is the same as the path/query parameter, you could use the const &lt;code&gt;@pathParam&lt;/code&gt; or &lt;code&gt;@queryParam&lt;/code&gt; and not pass a slug/alias.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class BookDetailsPage extends StatelessWidget {              &#xA;  const BookDetailsPage({@pathParam this.id});          &#xA;            &#xA;  final int id;              &#xA;  ...              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Redirecting Paths&lt;/h3&gt; &#xA;&lt;p&gt;Paths can be redirected using &lt;code&gt;RedirectRoute&lt;/code&gt;. The following setup will navigate us to &lt;code&gt;/books&lt;/code&gt; when &lt;code&gt;/&lt;/code&gt; is matched.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&amp;lt;AutoRoute&amp;gt; [              &#xA;     RedirectRoute(path: &#39;/&#39;, redirectTo: &#39;/books&#39;),              &#xA;     AutoRoute(path: &#39;/books&#39;, page: BookListPage),              &#xA; ]              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When redirecting initial routes the above setup can be simplified by setting the &lt;code&gt;/books&lt;/code&gt; path as initial and auto_route will automatically generate the required redirect code for you.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&amp;lt;AutoRoute&amp;gt; [                &#xA;     AutoRoute(path: &#39;/books&#39;, page: BookListPage, initial: true),              &#xA; ]              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also redirect paths with params like follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;&amp;lt;AutoRoute&amp;gt; [              &#xA;     RedirectRoute(path: &#39;books/:id&#39;, redirectTo: &#39;/books/:id/details&#39;),              &#xA;     AutoRoute(path: &#39;/books/:id/details&#39;, page: BookDetailsPage),              &#xA; ]              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;RedirectRoutes&lt;/code&gt; are fully matched.&lt;/p&gt; &#xA;&lt;h3&gt;Wildcards&lt;/h3&gt; &#xA;&lt;p&gt;auto_route supports wildcard matching to handle invalid or undefined paths.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;AutoRoute(path: &#39;*&#39;, page: UnknownRoutePage)              &#xA;// it could be used with defined prefixes              &#xA;AutoRoute(path: &#39;/profile/*&#39;, page: ProfilePage)              &#xA;// or it could be used with RedirectRoute              &#xA;RedirectRoute(path: &#39;*&#39;, redirectTo: &#39;/&#39;)              &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; be sure to always add your wildcards at the end of your route list because routes are matched in order.&lt;/p&gt; &#xA;&lt;h2&gt;Route Guards&lt;/h2&gt; &#xA;&lt;p&gt;Think of route guards as middleware or interceptors, routes can not be added to the stack without going through their assigned guards, guards are useful for restricting access to certain routes.&lt;/p&gt; &#xA;&lt;p&gt;We create a route guard by extending &lt;code&gt;AutoRouteGuard&lt;/code&gt; from the auto_route package&lt;br&gt; and implementing our logic inside of the onNavigation method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class AuthGuard extends AutoRouteGuard {          &#xA; @override          &#xA; void onNavigation(NavigationResolver resolver, StackRouter router) {          &#xA; // the navigation is paused until resolver.next() is called with either           &#xA; // true to resume/continue navigation or false to abort navigation          &#xA;     if(authenitcated){          &#xA;       // if user is authenticated we continue          &#xA;        resolver.next(true);          &#xA;      }else{          &#xA;         // we redirect the user to our login page          &#xA;         router.push(LoginRoute(onResult: (success){          &#xA;                // if success == true the navigation will be resumed          &#xA;                // else it will be aborted          &#xA;               resolver.next(success);          &#xA;          }));          &#xA;         }              &#xA;     }          &#xA;}          &#xA;          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: &lt;code&gt;resolver.next()&lt;/code&gt; should only be called once.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;NavigationResolver&lt;/code&gt; object contains the guarded route which you can access by calling the property &lt;code&gt;resolver.route&lt;/code&gt; and a list of pending routes (if there are any) accessed by calling &lt;code&gt;resolver.pendingRoutes&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now we assign our guard to the routes we want to protect.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; AutoRoute(page: ProfileScreen, guards: [AuthGuard]);          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After we run code generation, our router will have a required named argument called authGuard or whatever your guard name is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;// we pass our AuthGuard to the generated router.          &#xA;final _appRouter = AppRouter(authGuard: AuthGuard());          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Wrapping Routes&lt;/h2&gt; &#xA;&lt;p&gt;In some cases we want to wrap our screen with a parent widget usually to provide some values through context, e.g wrapping your route with a custom &lt;code&gt;Theme&lt;/code&gt; or a &lt;code&gt;Provider&lt;/code&gt;, to do that simply implement &lt;code&gt;AutoRouteWrapper&lt;/code&gt;, and have wrappedRoute(context) method return (this) as the child of your wrapper widget.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class ProductsScreen extends StatelessWidget implements AutoRouteWrapper {          &#xA;  @override          &#xA;  Widget wrappedRoute(BuildContext context) {          &#xA;  return Provider(create: (ctx) =&amp;gt; ProductsBloc(), child: this);          &#xA;  }          &#xA;  ...          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Navigation Observers&lt;/h2&gt; &#xA;&lt;p&gt;Navigation observers are used to observe when routes are pushed ,replaced or popped ..etc.&lt;/p&gt; &#xA;&lt;p&gt;We implement an AutoRouter observer by extending an &lt;code&gt;AutoRouterObserver&lt;/code&gt; which is just a &lt;code&gt;NavigatorObserver&lt;/code&gt; with tab route support.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class MyObserver extends AutoRouterObserver {          &#xA;  @override          &#xA;  void didPush(Route route, Route? previousRoute) {          &#xA;    print(&#39;New route pushed: ${route.settings.name}&#39;);          &#xA;  }          &#xA; ...          &#xA; // only override to observer tab routes          &#xA; @override          &#xA;  void didInitTabRoute(TabPageRoute route, TabPageRoute? previousRoute) {          &#xA;    print(&#39;Tab route visited: ${route.name}&#39;);          &#xA;  }          &#xA;  @override          &#xA;  void didChangeTabRoute(TabPageRoute route, TabPageRoute previousRoute) {          &#xA;    print(&#39;Tab route re-visited: ${route.name}&#39;);          &#xA;  }          &#xA;  ...          &#xA;}          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then we pass our observer to the root delegate &lt;code&gt;AutoRouterDelegate&lt;/code&gt;.&lt;br&gt; &lt;strong&gt;Important&lt;/strong&gt; notice that &lt;code&gt;navigatorObservers&lt;/code&gt; property is a builder function that returns a list of observes and the reason for that is a navigator observer instance can only be used by a single router, so unless you&#39;re using a one single router or you don&#39;t want your nested routers to inherit observers make sure navigatorObservers builder always returns fresh observer instances.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;   return MaterialApp.router(          &#xA;      routerDelegate: AutoRouterDelegate(          &#xA;        _appRouter,          &#xA;        navigatorObservers: () =&amp;gt; [MyObserver()],          &#xA;      ),          &#xA;      routeInformationParser: _appRouter.defaultRouteParser(),          &#xA;    );          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;the following approach &lt;strong&gt;won&#39;t&lt;/strong&gt; work if you have nested routers unless they don&#39;t inherit the observers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;   final _observer = MyObserver();          &#xA;   return MaterialApp.router(          &#xA;      routerDelegate: AutoRouterDelegate(          &#xA;        _appRouter,          &#xA;        // this should always return new instances          &#xA;        navigatorObservers: () =&amp;gt; [_observer],          &#xA;      ),          &#xA;      routeInformationParser: _appRouter.defaultRouteParser(),          &#xA;    );          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Every nested router can have it&#39;s own observers and inherit it&#39;s parent&#39;s.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt; AutoRouter(          &#xA;    inheritNavigatorObservers: true, // true by default          &#xA;    navgiatorObservers:()=&amp;gt; [list of observers]);          &#xA;              &#xA; AutoTabsRouter(          &#xA;    inheritNavigatorObservers: true, // true by default          &#xA;    navgiatorObservers:()=&amp;gt; [list of observers]);          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can also make a certain screen route aware by subscribing to an &lt;code&gt;AutoRouteObserver&lt;/code&gt; ( Route not Router).&lt;/p&gt; &#xA;&lt;p&gt;First we provide our &lt;code&gt;AutoRouteObserver&lt;/code&gt; instance&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;   return MaterialApp.router(          &#xA;      routerDelegate: AutoRouterDelegate(          &#xA;        _appRouter,          &#xA;       // Provide an AutoRouteObserver instance          &#xA;        navigatorObservers: () =&amp;gt; [AutoRouteObserver()],          &#xA;      ),          &#xA;      routeInformationParser: _appRouter.defaultRouteParser(),          &#xA;    );          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next we use an &lt;code&gt;AutoRouteAware&lt;/code&gt; mixin which is a &lt;code&gt;RouteAware&lt;/code&gt; mixin with tab support to provided the needed listeners then subscribe to our &lt;code&gt;AutoRouteObserver&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class BooksListPage extends State&amp;lt;BookListPage&amp;gt; with AutoRouteAware {          &#xA;   AutoRouteObserver? _observer;          &#xA;             &#xA;  @override          &#xA;  void didChangeDependencies() {          &#xA;    super.didChangeDependencies();          &#xA;    // RouterScope exposes the list of provided observers          &#xA;    // including inherited observers          &#xA;   _observer = RouterScope.of(context).firstObserverOfType&amp;lt;AutoRouteObserver&amp;gt;();          &#xA;    if (_observer != null) {          &#xA;      // we subscribe to the observer by passing our          &#xA;      // AutoRouteAware state and the scoped routeData          &#xA;      _observer.subscribe(this, context.routeData);          &#xA;    }          &#xA;  }          &#xA;            &#xA; @override          &#xA;  void dispose() {          &#xA;    super.dispose();          &#xA;    // don&#39;t forget to unsubscribe from the          &#xA;    // observer on dispose          &#xA;    _observer.unsubscribe(this);          &#xA;  }          &#xA;          &#xA; // only override if this is a tab page          &#xA;   @override          &#xA;   void didInitTabRoute(TabPageRoute? previousRoute) {}          &#xA;          &#xA; // only override if this is a tab page          &#xA;   @override          &#xA;   void didChangeTabRoute(TabPageRoute previousRoute) {}          &#xA;          &#xA;   @override          &#xA;   void didPopNext() {}          &#xA;          &#xA;   @override          &#xA;   void didPushNext() {}          &#xA;          &#xA;   @override          &#xA;   void didPush() {}          &#xA;          &#xA;   @override          &#xA;   void didPop() {}          &#xA;}          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;AutoRouteAwareStateMixin&lt;/h4&gt; &#xA;&lt;p&gt;The above code can be simplified using &lt;code&gt;AutoRouteAwareStateMixin&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;class BooksListPage extends State&amp;lt;BookListPage&amp;gt; with AutoRouteAwareStateMixin&amp;lt;BookListPage&amp;gt; {          &#xA;// only override if this is a tab page          &#xA; @override          &#xA; void didInitTabRoute(TabPageRoute? previousRoute) {}          &#xA;// only override if this is a tab page          &#xA; @override          &#xA; void didChangeTabRoute(TabPageRoute previousRoute) {}          &#xA;     &#xA;// only override if this is a stack page         &#xA; @override          &#xA; void didPopNext() {}          &#xA;// only override if this is a stack page         &#xA; @override          &#xA; void didPushNext() {}          &#xA;}          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customizations&lt;/h2&gt; &#xA;&lt;h5&gt;MaterialAutoRouter | CupertinoAutoRouter | AdaptiveAutoRouter&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Definition&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;preferRelativeImports [bool]&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;if true relative imports will be used when possible&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;replaceInRouteName [String]&lt;/td&gt; &#xA;   &lt;td&gt;&#39;&#39;&lt;/td&gt; &#xA;   &lt;td&gt;used to replace conventional words in generated route name (whatToReplacePattern,replacement)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;CustomAutoRouter&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Definition&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;customRouteBuilder&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;used to provide a custom route, it takes in BuildContext and a CustomPage and returns a PageRoute&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;transitionsBuilder&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;extension for the transitionsBuilder property in PageRouteBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;opaque&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;extension for the opaque property in PageRouteBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;barrierDismissible&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;extension for the barrierDismissible property in PageRouteBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;durationInMilliseconds&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;extension for the transitionDuration(millieSeconds) property in PageRouteBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reverseDurationInMilliseconds&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;extension for the reverseDurationInMilliseconds(millieSeconds) property in PageRouteBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;MaterialRoute | CupertinoRoute | AdaptiveRoute | CustomRoute&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Definition&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;initial&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;sets path to &#39;/&#39; or &#39;&#39; unless path is provided then it generates auto redirect to it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;path&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;an auto generated path will be used if not provided&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;name&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;this will be the name of the generated route, if not provided a generated name will be used&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;usePathAsKey&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;if true path is used as page key instead of name&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fullscreenDialog&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;extension for the fullscreenDialog property in PageRoute&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;maintainState&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;extension for the maintainState property in PageRoute&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;meta&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;{}&lt;/td&gt; &#xA;   &lt;td&gt;primitive meta data to be passed to the consumed route&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;CupertinoRoute Specific =&amp;gt; CupertinoPageRoute&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Definition&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;title&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;extension for the title property in CupertinoPageRoute&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;CustomRoute Specific =&amp;gt; PageRouteBuilder&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Definition&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;transitionsBuilder&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;extension for the transitionsBuilder property in PageRouteBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;customRouteBuilder&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;used to provide a custom route, it takes in BuildContext and a CustomPage and returns a PageRoute&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;opaque&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;extension for the opaque property in PageRouteBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;barrierDismissible&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;extension for the barrierDismissible property in PageRouteBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;durationInMilliseconds&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;extension for the transitionDuration(millieSeconds) property in PageRouteBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reverseDurationInMilliseconds&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;null&lt;/td&gt; &#xA;   &lt;td&gt;extension for the reverseDurationInMilliseconds(millieSeconds) property in PageRouteBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Custom Route Transitions&lt;/h2&gt; &#xA;&lt;p&gt;To use custom route transitions use a &lt;code&gt;CustomRoute&lt;/code&gt; and pass in your preferences.&lt;br&gt; The &lt;code&gt;TransitionsBuilder&lt;/code&gt; function needs to be passed as a static/const reference that has the same signature as the &lt;code&gt;TransitionsBuilder&lt;/code&gt; function of the &lt;code&gt;PageRouteBuilder&lt;/code&gt; class.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;CustomRoute(          &#xA;page: LoginScreen,          &#xA;//TransitionsBuilders class contains a preset of common transitions builders.           &#xA;transitionsBuilder: TransitionsBuilders.slideBottom,          &#xA;durationInMilliseconds: 400)          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Tip&lt;/em&gt; Use &lt;strong&gt;@CustomAutoRouter()&lt;/strong&gt; to define global custom route transitions.&lt;/p&gt; &#xA;&lt;p&gt;You can of course use your own transitionsBuilder function as long as it has the same function signature.&lt;br&gt; The function has to take in exactly a &lt;code&gt;BuildContext&lt;/code&gt;, &lt;code&gt;Animation&amp;lt;Double&amp;gt;&lt;/code&gt;, &lt;code&gt;Animation&amp;lt;Double&amp;gt;&lt;/code&gt; and a child &lt;code&gt;Widget&lt;/code&gt; and it needs to return a &lt;code&gt;Widget&lt;/code&gt;, typically you would wrap your child with one of flutter&#39;s transition widgets as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Widget zoomInTransition(BuildContext context, Animation&amp;lt;double&amp;gt; animation, Animation&amp;lt;double&amp;gt; secondaryAnimation, Widget child) {          &#xA; // you get an animation object and a widget          &#xA; // make your own transition          &#xA;    return ScaleTransition(scale: animation, child: child);          &#xA;  }          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now pass the reference of your function to &lt;code&gt;CustomRoute&lt;/code&gt; .&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;CustomRoute(page: ZoomInScreen, transitionsBuilder: zoomInTransition)          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Custom Route Builder&lt;/h2&gt; &#xA;&lt;p&gt;You can use your own custom route by passing a &lt;code&gt;CustomRouteBuilder&lt;/code&gt; function to &lt;code&gt;CustomRoute&lt;/code&gt;, there isn&#39;t a simple way to strongly-type a static function in code generation, so make sure your custom builder signature matches the following.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;typedef CustomRouteBuilder = Route&amp;lt;T&amp;gt; Function&amp;lt;T&amp;gt;(            &#xA;  BuildContext context, Widget child, CustomPage page);          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now we implement our builder function the same way we did with the TransitionsBuilder function,&lt;br&gt; the most important part here is passing the page argument to our custom route.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;Route&amp;lt;T&amp;gt; myCustomRouteBuilder&amp;lt;T&amp;gt;(BuildContext context, Widget child, CustomPage&amp;lt;T&amp;gt; page){            &#xA;  return PageRouteBuilder(            &#xA;  fullscreenDialog: page.fullscreenDialog,            &#xA;  // this is important            &#xA;  settings: page,            &#xA;  pageBuilder: (,__,___) =&amp;gt; child);            &#xA;}          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We finish by passing a reference of our custom function to our CustomRoute.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;CustomRoute(page: CustomPage, customRouteBuilder: myCustomRouteBuilder)          &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Others&lt;/h2&gt; &#xA;&lt;h3&gt;AutoLeadingButton-BackButton&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;AutoLeadingButton&lt;/code&gt; is AutoRoute&#39;s replacement to the default BackButton to handle nested or parent stack popping.&lt;br&gt; to use it simply assign it to the &lt;code&gt;leading&lt;/code&gt; property inside of &lt;code&gt;AppBar&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;appBar: AppBar(      &#xA;  title: Text(context.topRoute.name),      &#xA;  leading: AutoLeadingButton(),      &#xA;)    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ActiveGuardObserver&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;ActiveGuardObserver&lt;/code&gt; can notify you when a guard is being checked and what guard it is, it can be used to implement loading indicator for example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;var isLoading = false;  &#xA; void initiState(){  &#xA;   final guardObserver = context.router.activeGuardObserver;  &#xA;    guardObserver.addListener(){  &#xA;      setState((){  &#xA;        isLoading = guardObserver.guardInProgress;  &#xA;       });  &#xA;     }   &#xA;  }  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Remove shadow from nested routers&lt;/h3&gt; &#xA;&lt;p&gt;This fixes the issue referenced here&lt;br&gt; &lt;a href=&#34;https://stackoverflow.com/questions/53457772/why-there-is-a-shadow-between-nested-navigator&#34;&gt;https://stackoverflow.com/questions/53457772/why-there-is-a-shadow-between-nested-navigator&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://stackoverflow.com/questions/68986632/rid-of-elevation-of-nested-flutter-navigator-2-0&#34;&gt;https://stackoverflow.com/questions/68986632/rid-of-elevation-of-nested-flutter-navigator-2-0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;MaterialApp.router(      &#xA;  theme: ThemeData.dark().copyWith(      &#xA;  pageTransitionsTheme: PageTransitionsTheme(      &#xA;     builders: {      &#xA;         // replace default CupertinoPageTransitionsBuilder with this    &#xA;        TargetPlatform.iOS: NoShadowCupertinoPageTransitionsBuilder(),      &#xA;        TargetPlatform.android: FadeUpwardsPageTransitionsBuilder(),      &#xA;    } )    &#xA;  ),    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;CupertinoRoute&lt;/code&gt; already uses this fix, so no need to override &lt;code&gt;PageTransitionsTheme&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;coming soon&lt;/p&gt; &#xA;&lt;h3&gt;Support auto_route&lt;/h3&gt; &#xA;&lt;p&gt;You can support auto_route by liking it on Pub and staring it on Github, sharing ideas on how we can enhance a certain functionality or by reporting any problems you encounter and of course buying a couple coffees will help speed up the development process.&lt;/p&gt;</summary>
  </entry>
</feed>