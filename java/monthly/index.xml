<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-01T01:49:55Z</updated>
  <subtitle>Monthly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CarGuo/GSYVideoPlayer</title>
    <updated>2025-01-01T01:49:55Z</updated>
    <id>tag:github.com,2025-01-01:/CarGuo/GSYVideoPlayer</id>
    <link href="https://github.com/CarGuo/GSYVideoPlayer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;视频播放器（IJKplayer、ExoPlayer、MediaPlayer），HTTPS，16k page size，支持弹幕，外挂字幕，支持滤镜、水印、gif截图，片头广告、中间广告，多个同时播放，支持基本的拖动，声音、亮度调节，支持边播边缓存，支持视频自带rotation的旋转（90,270之类），重力旋转与手动旋转的同步支持，支持列表播放 ，列表全屏动画，视频加载速度，列表小窗口支持拖动，动画效果，调整比例，多分辨率切换，支持切换播放器，进度条小窗口预览，列表切换详情页面无缝播放，rtsp、concat、mpeg。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/home_logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;支持 &lt;a href=&#34;https://github.com/Bilibili/ijkplayer&#34;&gt;IJKPlayer&lt;/a&gt;、 &lt;a href=&#34;https://github.com/androidx/media&#34;&gt;Media3(EXOPlayer2)&lt;/a&gt;、MediaPlayer、AliPlayer，实现了多功能的视频播放器。 (请仔细阅读下方各项说明，大多数问题可在下方找到解答)。&lt;/h2&gt; &#xA;&lt;h2&gt;鸿蒙版本&lt;a href=&#34;https://gitee.com/openharmony-tpc/openharmony_tpc_samples/tree/master/GSYVideoPlayer&#34;&gt;openharmony-tpc/GSYVideoPlayer&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;如果克隆太慢或者图片看不到，可尝试从以下地址同步&lt;/h2&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;GitCode&lt;/strong&gt; &lt;a href=&#34;https://gitcode.com/ZuoYueLiang/GSYVideoPlayer&#34;&gt;https://gitcode.com/ZuoYueLiang/GSYVideoPlayer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;码云&lt;/strong&gt;：&lt;a href=&#34;https://gitee.com/CarGuo/GSYVideoPlayer&#34;&gt;https://gitee.com/CarGuo/GSYVideoPlayer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;类型&lt;/th&gt; &#xA;   &lt;th&gt;功能&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;缓存&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;边播边缓存，使用了&lt;a href=&#34;https://github.com/danikula/AndroidVideoCache&#34;&gt;AndroidVideoCache&lt;/a&gt;；Media3(ExoPlayer)使用SimpleCache。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;协议&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;h263\4\5、Https、concat、rtsp、hls、rtmp、crypto、mpeg等等。&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/DECODERS.md&#34;&gt;（ijk模式格式支持）&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;滤镜&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;简单滤镜（马赛克、黑白、色彩过滤、高斯、模糊、模糊等等20多种）、动画、（水印、画面多重播放等）。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;帧图&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;视频第一帧、视频帧截图功能，视频生成gif功能。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;播放&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;列表播放、列表连续播放、重力旋转与手动旋转、视频本身rotation旋转属性、快播和慢播、网络视频加载速度。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;画面&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;调整显示比例:默认、16:9、4:3、填充；播放时旋转画面角度（0,90,180,270）；镜像旋转。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;内核&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;IJKPlayer、Media3(EXOPlayer)、MediaPlayer、AliPlayer切换、自定义内核&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;布局&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;全屏与非全屏两套布局切换、没有任何操作控件的纯播放支持、弹幕功能、继承自定义任何布局。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;播放&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;单例播放、多个同时播放、视频列表滑动自动播放、列表切换详情页面无缝播放。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;窗口&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;小窗口、多窗体下（包括桌面）的小窗口播放。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;广告&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;片头广告、跳过广告支持、中间插入广告功能。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;字幕&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/tree/master/app/src/main/java/com/example/gsyvideoplayer/exosubtitle&#34;&gt;media3(exo2)模式下支持自定增加外挂字幕&lt;/a&gt;。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;dash&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;media3(exo2) 模式支持dash&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;stream&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;支持元数据播放&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;适配 16k&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ex_so 适配 16K Page Size&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;openssl&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;目前 arm64 使用 openssl 1.1.1w&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FFmpeg&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;目前 arm64 使用 FFmpeg 4.1.6&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FFmpeg&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;目前 ex_so 的 arm64 支持 G711a(pcm_alaw)&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;更多&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;暂停前后台切换不黑屏；调整不同清晰度的支持；无缝切换支持；锁定/解锁全屏点击功能；进度条小窗口预览（测试）。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;自定义&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;可自定义渲染层、自定义管理层、自定义播放层（控制层）、自定义缓存层。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jitpack.io/#CarGuo/GSYVideoPlayer&#34;&gt;&lt;img src=&#34;https://jitpack.io/v/CarGuo/GSYVideoPlayer.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.travis-ci.com/CarGuo/GSYVideoPlayer&#34;&gt;&lt;img src=&#34;https://app.travis-ci.com/CarGuo/GSYVideoPlayer.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/actions&#34;&gt;&lt;img src=&#34;https://github.com/CarGuo/GSYVideoPlayer/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Github Actions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/CarGuo/GSYVideoPlayer.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/CarGuo/GSYVideoPlayer.svg?sanitize=true&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/CarGuo/GSYVideoPlayer.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/CarGuo/GSYVideoPlayer.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitcode.com/ZuoYueLiang/GSYVideoPlayer/overview&#34;&gt;&lt;img src=&#34;https://gitcode.com/ZuoYueLiang/GSYVideoPlayer/star/badge.svg?sanitize=true&#34; alt=&#34;Star&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/androidx/media?label=media&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;公众号&lt;/th&gt; &#xA;   &lt;th&gt;掘金&lt;/th&gt; &#xA;   &lt;th&gt;知乎&lt;/th&gt; &#xA;   &lt;th&gt;CSDN&lt;/th&gt; &#xA;   &lt;th&gt;简书&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GSYTech&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://juejin.im/user/582aca2ba22b9d006b59ae68/posts&#34;&gt;点我&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.zhihu.com/people/carguo&#34;&gt;点我&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.csdn.net/ZuoYueLiang&#34;&gt;点我&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.jianshu.com/u/6e613846e1ea&#34;&gt;点我&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://img.cdn.guoshuyu.cn/WeChat-Code&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/releases&#34;&gt;--------------Demo APK 下载地址---------------&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;一、使用依赖&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/UPDATE_VERSION.md&#34;&gt;--- 版本更新说明 --- &lt;/a&gt;。&lt;/h4&gt; &#xA;&lt;h3&gt;1、Jitpack 引入方法&lt;/h3&gt; &#xA;&lt;p&gt;⚠️&lt;strong&gt;因为依赖方式 2 的原因，目前 jitpack 依赖路径名称有调整&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;First、在project下的build.gradle添加&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;allprojects {&#xA;    repositories {&#xA;&#x9;&#x9;...&#xA;        maven { url &#39;https://jitpack.io&#39; }&#xA;        maven { url &#34;https://maven.aliyun.com/repository/public&#34; }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;你可以选择下面三种的其中一种，在module下的build.gradle添加。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;A、直接引入&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt; //完整版引入&#xA;&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer:v10.0.0&#39;&#xA;&#xA;&#xA; //是否需要AliPlayer模式&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-aliplay:v10.0.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;B、添加java和你想要的so支持：&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-java:v10.0.0&#39;&#xA;&#xA; //是否需要ExoPlayer模式&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-exo2:v10.0.0&#39;&#xA;&#xA; //是否需要AliPlayer模式&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-aliplay:v10.0.0&#39;&#xA;&#xA; //根据你的需求ijk模式的so&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-arm64:v10.0.0&#39;&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-armv7a:v10.0.0&#39;&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-armv5:v10.0.0&#39;&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-x86:v10.0.0&#39;&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-x64:v10.0.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;C、支持其他格式协议的（mpeg，rtsp, concat、crypto协议，支持 16k Page Size）&lt;/h4&gt; &#xA;&lt;p&gt;A、B普通版本支持263/264/265等，对于mpeg编码会有声音无画面情况。 C 引入的so支持mpeg编码和其他补充协议，但是so包相对变大。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-java:v10.0.0&#39;&#xA;&#xA; //是否需要ExoPlayer模式&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-exo2:v10.0.0&#39;&#xA;&#xA; //是否需要AliPlayer模式&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-aliplay:v10.0.0&#39;&#xA;&#xA; //更多ijk的编码支持&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyvideoplayer-ex_so:v10.0.0&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2、新增 Github Package 依赖方式&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;由于 Jitpack 经常存在历史包随机丢失问题，所以新增 Github Package 依赖方式，使用方式如下&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;不过 github package 访问需要 token 去 access 比较麻烦，但是胜在稳定&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;allprojects {&#xA;    repositories {&#xA;&#x9;&#x9;...&#xA;        maven {&#xA;            url &#39;https://maven.pkg.github.com/CarGuo/GSYVideoPlayer&#39;&#xA;&#xA;            // You can also use your own GitHub account and token&#xA;            // For convenience, I have provided a token for an infrequently used account here&#xA;            credentials {&#xA;                // your github name&#xA;                username = &#39;carsmallguo&#39;&#xA;                // your github generate new token&#xA;                password = &#39;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&#39;&#xA;            }&#xA;        }&#xA;        maven {&#xA;            url &#34;https://maven.aliyun.com/repository/public&#34;&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;生成自己 token 的方式可见：&lt;a href=&#34;https://docs.github.com/zh/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens&#34;&gt;https://docs.github.com/zh/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;理论上就是右上角头像 - Settings - Developer Settings - Personal access tokens - tokens (classic) - Generate new token（classic）- read:packages 记得过期时间选择永久&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;你可以选择下面三种的其中一种，在module下的build.gradle添加。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;A、直接引入&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt; //完整版引入&#xA; implementation &#39;com.shuyu:gsyvideoplayer:10.0.0&#39;&#xA;&#xA;&#xA; //是否需要AliPlayer模式&#xA; implementation &#39;com.shuyu:gsyvideoplayer-aliplay:10.0.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;B、添加java和你想要的so支持：&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt; implementation &#39;com.shuyu:gsyvideoplayer-java:10.0.0&#39;&#xA;&#xA; //是否需要ExoPlayer模式&#xA; implementation &#39;com.shuyu:gsyvideoplayer-exo2:10.0.0&#39;&#xA;&#xA; //是否需要AliPlayer模式&#xA; implementation &#39;com.shuyu:gsyvideoplayer-aliplay:10.0.0&#39;&#xA;&#xA; //根据你的需求ijk模式的so&#xA; implementation &#39;com.shuyu:gsyvideoplayer-armv5:10.0.0&#39;&#xA; implementation &#39;com.shuyu:gsyvideoplayer-armv7a:10.0.0&#39;&#xA; implementation &#39;com.shuyu:gsyvideoplayer-arm64:10.0.0&#39;&#xA; implementation &#39;com.shuyu:gsyvideoplayer-x86:10.0.0&#39;&#xA; implementation &#39;com.shuyu:gsyvideoplayer-x64:10.0.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;C、支持其他格式协议的（mpeg，rtsp, concat、crypto协议，支持 16k Page Size）&lt;/h4&gt; &#xA;&lt;p&gt;A、B普通版本支持263/264/265等，对于mpeg编码会有声音无画面情况。 C 引入的so支持mpeg编码和其他补充协议，但是so包相对变大。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; implementation &#39;com.shuyu:gsyvideoplayer-java:10.0.0&#39;&#xA;&#xA; //是否需要ExoPlayer模式&#xA; implementation &#39;com.shuyu:gsyvideoplayer-exo2:10.0.0&#39;&#xA;&#xA;&#xA; //是否需要AliPlayer模式&#xA; implementation &#39;com.shuyu:gsyvideoplayer-aliplay:10.0.0&#39;&#xA;&#xA; //更多ijk的编码支持&#xA; implementation &#39;com.shuyu:gsyvideoplayer-ex_so:10.0.0&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;代码中的全局切换支持（更多请参看下方文档和demo）&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;//EXOPlayer内核，支持格式更多&#xA;PlayerFactory.setPlayManager(Exo2PlayerManager.class);&#xA;//系统内核模式&#xA;PlayerFactory.setPlayManager(SystemPlayerManager.class);&#xA;//ijk内核，默认模式&#xA;PlayerFactory.setPlayManager(IjkPlayerManager.class);&#xA;//aliplay 内核，默认模式&#xA;PlayerFactory.setPlayManager(AliPlayerManager.class);&#xA;&#xA;&#xA;//exo缓存模式，支持m3u8，只支持exo&#xA;CacheFactory.setCacheManager(ExoPlayerCacheManager.class);&#xA;//代理缓存模式，支持所有模式，不支持m3u8等，默认&#xA;CacheFactory.setCacheManager(ProxyCacheManager.class);&#xA;&#xA;&#xA;&#xA;//切换渲染模式&#xA;GSYVideoType.setShowType(GSYVideoType.SCREEN_MATCH_FULL);&#xA;//默认显示比例&#xA;GSYVideoType.SCREEN_TYPE_DEFAULT = 0;&#xA;//16:9&#xA;GSYVideoType.SCREEN_TYPE_16_9 = 1;&#xA;//4:3&#xA;GSYVideoType.SCREEN_TYPE_4_3 = 2;&#xA;//全屏裁减显示，为了显示正常 CoverImageView 建议使用FrameLayout作为父布局&#xA;GSYVideoType.SCREEN_TYPE_FULL = 4;&#xA;//全屏拉伸显示，使用这个属性时，surface_container建议使用FrameLayout&#xA;GSYVideoType.SCREEN_MATCH_FULL = -4;&#xA;/***&#xA; * SCREEN_TYPE_CUSTOM 下自定义显示比例&#xA; * @param screenScaleRatio  高宽比，如 16：9&#xA; */&#xA;public static void setScreenScaleRatio(float screenScaleRatio)&#xA;&#xA;&#xA;//切换绘制模式&#xA;GSYVideoType.setRenderType(GSYVideoType.SUFRACE);&#xA;GSYVideoType.setRenderType(GSYVideoType.GLSURFACE);&#xA;GSYVideoType.setRenderType(GSYVideoType.TEXTURE);&#xA;&#xA;&#xA;//ijk关闭log&#xA;IjkPlayerManager.setLogLevel(IjkMediaPlayer.IJK_LOG_SILENT);&#xA;&#xA;&#xA;//exoplayer自定义MediaSource&#xA;ExoSourceManager.setExoMediaSourceInterceptListener(new ExoMediaSourceInterceptListener() {&#xA;    @Override&#xA;    public MediaSource getMediaSource(String dataSource, boolean preview, boolean cacheEnable, boolean isLooping, File cacheDir) {&#xA;        //可自定义MediaSource&#xA;        return null;&#xA;    }&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/DEPENDENCIES.md&#34;&gt;--- 更多依赖方式请点击 - &lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;二、其他推荐&lt;/h2&gt; &#xA;&lt;h3&gt;* 我所在的技术社区：&lt;a href=&#34;https://juejin.cn/user/817692379985752/posts&#34;&gt;掘金&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;* QQ群，有兴趣的欢迎（平时吹水吐槽多，因为人数饱和，就是日常瞎扯，没人解决问题的）：&lt;del&gt;174815284&lt;/del&gt; ，新群：992451658 。&lt;/h3&gt; &#xA;&lt;h3&gt;* &lt;a href=&#34;https://github.com/CarGuo/gsy_github_app_flutter&#34;&gt;Flutter Github客户端&lt;/a&gt; 、&lt;a href=&#34;https://github.com/CarGuo/GSYGithubAPP&#34;&gt;React Native Github客户端&lt;/a&gt; 、 &lt;a href=&#34;https://github.com/CarGuo/GSYGithubAPPWeex&#34;&gt;Weex Github客户端&lt;/a&gt; 、 &lt;a href=&#34;https://github.com/CarGuo/GSYGithubAPPKotlin&#34;&gt;原生 Kotlin Github客户端&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;* &lt;a href=&#34;https://github.com/microshow/RxFFmpeg&#34;&gt;RxFFmpeg Android 的音视频编辑工具&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;* &lt;a href=&#34;https://github.com/qingkouwei/oarplayer&#34;&gt;oarplayer Rtmp播放器,基于MediaCodec与srs-librtmp,不依赖ffmpeg&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;* 鸿蒙版本&lt;a href=&#34;https://gitee.com/openharmony-tpc/openharmony_tpc_samples/tree/master/GSYVideoPlayer&#34;&gt;openharmony-tpc/GSYVideoPlayer&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;三、文档Wiki&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;文档&lt;/th&gt; &#xA;   &lt;th&gt;传送门&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;使用说明&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/USE.md&#34;&gt;--- 简单使用，快速上手文档&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;建议阅读&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://juejin.cn/post/7057132141875822622&#34;&gt;--- 移动开发者必知的音视频基础知识1&lt;/a&gt;、&lt;a href=&#34;https://mp.weixin.qq.com/s/HjSdmAsHuvixCH_EWdvk3Q&#34;&gt;--- 移动开发者必知的音视频基础知识2&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;项目解析说明&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/GSYVIDEO_PLAYER_PROJECT_INFO.md&#34;&gt;--- 项目解析说明、包含项目架构和解析&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;接口文档入口&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/wiki&#34;&gt;--- 使用说明、接口文档 - 入口&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;问题集锦入口&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/QUESTION.md&#34;&gt;--- 问题集锦 - 入口（大部分你遇到的问题都在这里解决） &lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;编码格式&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/DECODERS.md&#34;&gt;--- IJK so文件配置格式说明&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;编译自定义SO&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/BUILD_SO.md&#34;&gt;--- IJKPlayer编译自定义SO - 入口&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;版本更新说明&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/UPDATE_VERSION.md&#34;&gt;--- 版本更新说明 - 入口&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;compileSdk 太高&lt;/td&gt; &#xA;   &lt;td&gt;--- &lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/issues/3514&#34;&gt;#3514&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/StructureChart2.jpg&#34; alt=&#34;框架图&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;四、运行效果&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;1、打开一个播放(旋转、镜像、填充)&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/11.gif&#34; width=&#34;240px&#34; height=&#34;426px&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;2、列表/详情模式(动画、旋转、小窗体)&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/22.gif&#34; width=&#34;240px&#34; height=&#34;426px&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/33.gif&#34; width=&#34;240px&#34; height=&#34;426px&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/44.gif&#34; width=&#34;240px&#34; height=&#34;426px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;3、弹幕&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/55.gif&#34; width=&#34;240px&#34; height=&#34;426px&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;4、滤镜和GL动画&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/09.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;6、背景铺满模糊播放&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/99.png&#34; width=&#34;426px&#34; height=&#34;240px&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;7、进度条小窗口预览&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/07.gif&#34; height=&#34;240px&#34;&gt; &#xA;&lt;h2&gt;五、近期版本&lt;/h2&gt; &#xA;&lt;h3&gt;v10.0.0 (2024-11-01)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;update media3 1.4.1&lt;/li&gt; &#xA; &lt;li&gt;update FFMpeg 4.1.6&lt;/li&gt; &#xA; &lt;li&gt;update openssl-1.1.1w&lt;/li&gt; &#xA; &lt;li&gt;support 16k page size&lt;/li&gt; &#xA; &lt;li&gt;fix #3999 &amp;amp; #3649&lt;/li&gt; &#xA; &lt;li&gt;fix #4014&lt;/li&gt; &#xA; &lt;li&gt;fix #4019&lt;/li&gt; &#xA; &lt;li&gt;fix #4023&lt;/li&gt; &#xA; &lt;li&gt;fix #4021&lt;/li&gt; &#xA; &lt;li&gt;update AGP&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;v9.0.0-release-jitpack (2024-07-29)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ex_so support 16k page size&lt;/li&gt; &#xA; &lt;li&gt;update media3 1.4.0&lt;/li&gt; &#xA; &lt;li&gt;fix #4014&lt;/li&gt; &#xA; &lt;li&gt;fix #3999 &amp;amp; #3649 system mediaPlayer setSpeed cause play&lt;/li&gt; &#xA; &lt;li&gt;fix #3972 ListGSYVideoPlayer 轮播场景焦点未移除导致播放器状态错误&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;更多版本请查阅：&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/UPDATE_VERSION.md&#34;&gt;版本更新说明&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;六、关于Issues&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;提问题前可先查阅上方文档和说明，请在Demo中复现问题。&#xA;&#xA;问题说明：&#xA;&#xA;1、说明那个Demo中哪个页面。&#xA;2、问题显现和重现步骤。&#xA;3、补充问题的视频流url，截图。&#xA;4、补充问题的机型，android版本。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;七、混淆&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-keep class com.shuyu.gsyvideoplayer.video.** { *; }&#xA;-dontwarn com.shuyu.gsyvideoplayer.video.**&#xA;-keep class com.shuyu.gsyvideoplayer.video.base.** { *; }&#xA;-dontwarn com.shuyu.gsyvideoplayer.video.base.**&#xA;-keep class com.shuyu.gsyvideoplayer.utils.** { *; }&#xA;-dontwarn com.shuyu.gsyvideoplayer.utils.**&#xA;-keep class com.shuyu.gsyvideoplayer.player.** {*;}&#xA;-dontwarn com.shuyu.gsyvideoplayer.player.**&#xA;-keep class tv.danmaku.ijk.** { *; }&#xA;-dontwarn tv.danmaku.ijk.**&#xA;-keep class androidx.media3.** {*;}&#xA;-keep interface androidx.media3.**&#xA;&#xA;-keep class com.shuyu.alipay.** {*;}&#xA;-keep interface com.shuyu.alipay.**&#xA;&#xA;-keep public class * extends android.view.View{&#xA;    *** get*();&#xA;    void set*(***);&#xA;    public &amp;lt;init&amp;gt;(android.content.Context);&#xA;    public &amp;lt;init&amp;gt;(android.content.Context, java.lang.Boolean);&#xA;    public &amp;lt;init&amp;gt;(android.content.Context, android.util.AttributeSet);&#xA;    public &amp;lt;init&amp;gt;(android.content.Context, android.util.AttributeSet, int);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果是阿里云播放器，可以参考它的文档（ &lt;a href=&#34;https://help.aliyun.com/document_detail/124711.html?spm=a2c4g.124711.0.0.7fa0125dkwUPoU&#34;&gt;https://help.aliyun.com/document_detail/124711.html?spm=a2c4g.124711.0.0.7fa0125dkwUPoU&lt;/a&gt; ），需要新增一些 keep 规则：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-keep class com.alivc.**{*;}&#xA;-keep class com.aliyun.**{*;}&#xA;-keep class com.cicada.**{*;}&#xA;-dontwarn com.alivc.**&#xA;-dontwarn com.aliyun.**&#xA;-dontwarn com.cicada.**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;温馨提示&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://gitee.com/CarGuo/GSYVideoPlayer&#34;&gt;如果克隆太慢，可尝试从码云地址下载&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;关于自定义和出现问题的请先看问题集锦、demo、issue。&#xA;&#xA;多了解一些音视频的基础常识，对容器，音视频编码，ffmpeg先做一些了解，以及mediacodec等的不同。&#xA;尽量少出现为什么别的能播的问题哟。&#xA;&#xA;播放器的可自定义还是挺高的，定制请参考demo，多看源码。现在的功能有些多，demo也在不断的更新。&#xA;&#xA;一些新功能和项目结构也在不断的调整。&#xA;&#xA;欢迎提出问题，谢谢。&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;依赖大小参考&lt;/h2&gt; &#xA;&lt;p&gt;建议使用ndk过滤，详细参考 &lt;a href=&#34;http://www.jianshu.com/p/86e4b336c17d&#34;&gt;参考第四条 ： 4、NDK的so支持&lt;/a&gt; &lt;img src=&#34;https://ooo.0o0.ooo/2017/06/15/5941f343a39f5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History Chart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#CarGuo/GSYVideoPlayer&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=CarGuo/GSYVideoPlayer&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;温馨提示&lt;/h2&gt; &#xA;&lt;p&gt;开源项目主要提供交流学习，并不提供技术支持，也不接商务合作，纯公益兴趣开源&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;请参看IJKPlayer和AndroidVideoCache相关协议。&#xA;项目最开始是从jiecao过来的，改着改着直接重构了。&#xA;偶尔有一变量和方法名可能还有点jiaozi的影子，但是基本是一个新项目。&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>hkhcoder/vprofile-project</title>
    <updated>2025-01-01T01:49:55Z</updated>
    <id>tag:github.com,2025-01-01:/hkhcoder/vprofile-project</id>
    <link href="https://github.com/hkhcoder/vprofile-project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Prerequisites&lt;/h1&gt; &#xA;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JDK 11&lt;/li&gt; &#xA; &lt;li&gt;Maven 3&lt;/li&gt; &#xA; &lt;li&gt;MySQL 8&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Technologies&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spring MVC&lt;/li&gt; &#xA; &lt;li&gt;Spring Security&lt;/li&gt; &#xA; &lt;li&gt;Spring Data JPA&lt;/li&gt; &#xA; &lt;li&gt;Maven&lt;/li&gt; &#xA; &lt;li&gt;JSP&lt;/li&gt; &#xA; &lt;li&gt;Tomcat&lt;/li&gt; &#xA; &lt;li&gt;MySQL&lt;/li&gt; &#xA; &lt;li&gt;Memcached&lt;/li&gt; &#xA; &lt;li&gt;Rabbitmq&lt;/li&gt; &#xA; &lt;li&gt;ElasticSearch&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Database&lt;/h1&gt; &#xA;&lt;p&gt;Here,we used Mysql DB sql dump file:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;/src/main/resources/db_backup.sql&lt;/li&gt; &#xA; &lt;li&gt;db_backup.sql file is a mysql dump file.we have to import this dump to mysql db server&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;mysql -u &amp;lt;user_name&amp;gt; -p accounts &amp;lt; db_backup.sql&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>bitcoin-wallet/bitcoin-wallet</title>
    <updated>2025-01-01T01:49:55Z</updated>
    <id>tag:github.com,2025-01-01:/bitcoin-wallet/bitcoin-wallet</id>
    <link href="https://github.com/bitcoin-wallet/bitcoin-wallet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bitcoin Wallet app for your Android device. Standalone Bitcoin node, no centralized backend required.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BITCOIN WALLET&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to &lt;em&gt;Bitcoin Wallet&lt;/em&gt;, a standalone Bitcoin payment app for your Android device!&lt;/p&gt; &#xA;&lt;p&gt;This project contains several sub-projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;wallet&lt;/strong&gt;: The Android app itself. This is probably what you&#39;re searching for.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;market&lt;/strong&gt;: App description and promo material for the Google Play app store.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PREREQUISITES FOR BUILDING&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll need git, a Java 11 SDK and Gradle between 4.4 and 6.9.x for this. We&#39;ll assume Ubuntu 24.04 LTS (Noble Numbat) for the package installs, which comes with OpenJDK 11 and Gradle 4.4.1 out of the box.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# first time only&#xA;sudo apt install git gradle openjdk-11-jdk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a directory for the Android SDK (e.g. &lt;code&gt;android-sdk&lt;/code&gt;) and point the &lt;code&gt;ANDROID_HOME&lt;/code&gt; variable to it.&lt;/p&gt; &#xA;&lt;p&gt;Download the &lt;a href=&#34;https://developer.android.com/studio/index.html#command-tools&#34;&gt;Android SDK Tools&lt;/a&gt; and unpack it to &lt;code&gt;$ANDROID_HOME/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Finally, the last preparative step is acquiring the source code. Again in your workspace, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# first time only&#xA;git clone -b main https://github.com/bitcoin-wallet/bitcoin-wallet.git bitcoin-wallet&#xA;cd bitcoin-wallet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;BUILDING&lt;/h3&gt; &#xA;&lt;p&gt;You can build all sub-projects in all flavors at once using Gradle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# each time&#xA;gradle clean build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For details about building the wallet see the &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin-wallet/bitcoin-wallet/main/wallet/README.md&#34;&gt;specific README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;REPRODUCIBLE BUILD&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively, you can build using buildah:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# each time&#xA;buildah build --cap-add sys_admin --device /dev/fuse --file build.Containerfile --output build/ .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Access to FUSE and the SYS_ADMIN capability are needed for mounting disorderfs in order to sort the directory entries of the project folder.&lt;/p&gt; &#xA;&lt;p&gt;The unsigned APKs are written to the specified output directory.&lt;/p&gt;</summary>
  </entry>
</feed>