<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-01T01:51:16Z</updated>
  <subtitle>Monthly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>doocs/leetcode</title>
    <updated>2022-09-01T01:51:16Z</updated>
    <id>tag:github.com,2022-09-01:/doocs/leetcode</id>
    <link href="https://github.com/doocs/leetcode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;😏 LeetCode solutions in any programming language | 多种编程语言实现 LeetCode、《剑指 Offer（第 2 版）》、《程序员面试金典（第 6 版）》题解&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/doocs/leetcode&#34;&gt;&lt;img src=&#34;https://cdn-doocs.oss-cn-shenzhen.aliyuncs.com/gh/doocs/leetcode@main/images/leetcode-doocs.png&#34; alt=&#34;LeetCode-GitHub-Doocs&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/doocs/leetcode&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/langs-Java%20%7C%20Python%20%7C%20C%2B%2B%20%7C%20Go%20%7C%20TypeScript%20%7C%20...-red?style=flat-square&amp;amp;color=42b883&#34; alt=&#34;languages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doocs.github.io/#/?id=how-to-join&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/organization-join%20us-42b883?style=flat-square&#34; alt=&#34;open-source-organization&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/doocs/leetcode/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/doocs/leetcode?color=42b883&amp;amp;style=flat-square&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://opencollective.com/doocs-leetcode/backers/badge.svg&#34; alt=&#34;backers on Open Collective&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/backers/doocs-leetcode?color=42b883&amp;amp;style=flat-square&amp;amp;logo=open%20collective&amp;amp;logoColor=ffffff&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/doocs/leetcode/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/doocs/leetcode?color=42b883&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/doocs/leetcode/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/doocs/leetcode?color=42b883&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/doocs-leetcode/sponsors/badge.svg&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/sponsors/doocs-leetcode?color=42b883&amp;amp;style=flat-square&amp;amp;logo=open%20collective&amp;amp;logoColor=ffffff&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;本项目包含 LeetCode、《剑指 Offer（第 2 版）》、《剑指 Offer（专项突击版）》、《程序员面试金典（第 6 版）》等题目的相关题解。所有题解均由多种编程语言实现，包括但不限于：Java、Python、C++、Go、TypeScript、Rust，日常更新。欢迎 Star 🌟 关注&lt;a href=&#34;https://github.com/doocs/leetcode&#34;&gt;本项目&lt;/a&gt;，获取项目最新动态。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/README_EN.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;站点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vercel: &lt;a href=&#34;https://doocs-leetcode.vercel.app&#34;&gt;https://doocs-leetcode.vercel.app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub Pages: &lt;a href=&#34;https://doocs.github.io/leetcode&#34;&gt;https://doocs.github.io/leetcode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;算法全解&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/README.md&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/CONTEST_README.md&#34;&gt;往期竞赛合集&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/lcof/README.md&#34;&gt;剑指 Offer（第 2 版）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/lcof2/README.md&#34;&gt;剑指 Offer（专项突击版）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/lcci/README.md&#34;&gt;程序员面试金典（第 6 版）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;算法提升专题&lt;/h2&gt; &#xA;&lt;h3&gt;1. 基础算法&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0000-0099/0034.Find%20First%20and%20Last%20Position%20of%20Element%20in%20Sorted%20Array/README.md&#34;&gt;在排序数组中查找元素的第一个和最后一个位置&lt;/a&gt; - &lt;code&gt;二分查找&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1800-1899/1870.Minimum%20Speed%20to%20Arrive%20on%20Time/README.md&#34;&gt;准时到达的列车最小时速&lt;/a&gt; - &lt;code&gt;二分查找&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1800-1899/1894.Find%20the%20Student%20that%20Will%20Replace%20the%20Chalk/README.md&#34;&gt;找到需要补充粉笔的学生编号&lt;/a&gt; - &lt;code&gt;二分查找&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1800-1899/1898.Maximum%20Number%20of%20Removable%20Characters/README.md&#34;&gt;可移除字符的最大数目&lt;/a&gt; - &lt;code&gt;二分查找&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0900-0999/0912.Sort%20an%20Array/README.md&#34;&gt;排序数组&lt;/a&gt; - &lt;code&gt;快速排序&lt;/code&gt;、&lt;code&gt;归并排序&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0415.Add%20Strings/README.md&#34;&gt;字符串相加&lt;/a&gt; - &lt;code&gt;高精度加法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0000-0099/0043.Multiply%20Strings/README.md&#34;&gt;字符串相乘&lt;/a&gt; - &lt;code&gt;高精度乘法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0303.Range%20Sum%20Query%20-%20Immutable/README.md&#34;&gt;区域和检索 - 数组不可变&lt;/a&gt; - &lt;code&gt;前缀和&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0304.Range%20Sum%20Query%202D%20-%20Immutable/README.md&#34;&gt;二维区域和检索 - 矩阵不可变&lt;/a&gt; - &lt;code&gt;二维前缀和&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0370.Range%20Addition/README.md&#34;&gt;区间加法&lt;/a&gt; - &lt;code&gt;前缀和&lt;/code&gt;、&lt;code&gt;差分&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2100-2199/2132.Stamping%20the%20Grid/README.md&#34;&gt;用邮票贴满网格图&lt;/a&gt; - &lt;code&gt;二维前缀和&lt;/code&gt;、&lt;code&gt;二维差分&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0000-0099/0003.Longest%20Substring%20Without%20Repeating%20Characters/README.md&#34;&gt;无重复字符的最长子串&lt;/a&gt; - &lt;code&gt;双指针&lt;/code&gt;、&lt;code&gt;哈希表&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0713.Subarray%20Product%20Less%20Than%20K/README.md&#34;&gt;乘积小于 K 的子数组&lt;/a&gt; - &lt;code&gt;双指针&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0100-0199/0191.Number%20of%201%20Bits/README.md&#34;&gt;位 1 的个数&lt;/a&gt; - &lt;code&gt;位运算&lt;/code&gt;、&lt;code&gt;lowbit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0000-0099/0056.Merge%20Intervals/README.md&#34;&gt;合并区间&lt;/a&gt; - &lt;code&gt;区间合并&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- 排序算法、待补充 --&gt; &#xA;&lt;h3&gt;2. 数据结构&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0707.Design%20Linked%20List/README.md&#34;&gt;设计链表&lt;/a&gt; - &lt;code&gt;单链表&lt;/code&gt;、&lt;code&gt;指针引用&lt;/code&gt;、&lt;code&gt;数组实现&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0496.Next%20Greater%20Element%20I/README.md&#34;&gt;下一个更大元素 I&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0739.Daily%20Temperatures/README.md&#34;&gt;每日温度&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0900-0999/0907.Sum%20of%20Subarray%20Minimums/README.md&#34;&gt;子数组的最小值之和&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0900-0999/0962.Maximum%20Width%20Ramp/README.md&#34;&gt;最大宽度坡&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0768.Max%20Chunks%20To%20Make%20Sorted%20II/README.md&#34;&gt;最多能完成排序的块 II&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2100-2199/2104.Sum%20of%20Subarray%20Ranges/README.md&#34;&gt;子数组范围和&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1800-1899/1856.Maximum%20Subarray%20Min-Product/README.md&#34;&gt;子数组最小乘积的最大值&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0200-0299/0239.Sliding%20Window%20Maximum/README.md&#34;&gt;滑动窗口最大值&lt;/a&gt; - &lt;code&gt;单调队列&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1400-1499/1499.Max%20Value%20of%20Equation/README.md&#34;&gt;满足不等式的最大值&lt;/a&gt; - &lt;code&gt;单调队列&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0800-0899/0862.Shortest%20Subarray%20with%20Sum%20at%20Least%20K/README.md&#34;&gt;和至少为 K 的最短子数组&lt;/a&gt; - &lt;code&gt;单调队列&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1400-1499/1425.Constrained%20Subsequence%20Sum/README.md&#34;&gt;带限制的子序列和&lt;/a&gt; - &lt;code&gt;动态规划&lt;/code&gt;、&lt;code&gt;单调队列优化&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0200-0299/0291.Word%20Pattern%20II/README.md&#34;&gt;单词规律 II&lt;/a&gt; - &lt;code&gt;哈希表&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0200-0299/0214.Shortest%20Palindrome/README.md&#34;&gt;最短回文串&lt;/a&gt; - &lt;code&gt;字符串哈希&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0336.Palindrome%20Pairs/README.md&#34;&gt;回文对&lt;/a&gt; - &lt;code&gt;字符串哈希&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1000-1099/1044.Longest%20Duplicate%20Substring/README.md&#34;&gt;最长重复子串&lt;/a&gt; - &lt;code&gt;字符串哈希&lt;/code&gt;、&lt;code&gt;二分查找&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1300-1399/1316.Distinct%20Echo%20Substrings/README.md&#34;&gt;不同的循环子字符串&lt;/a&gt; - &lt;code&gt;字符串哈希&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3. 搜索&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0733.Flood%20Fill/README.md&#34;&gt;图像渲染&lt;/a&gt;- &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;Flood Fill 算法&lt;/code&gt;、&lt;code&gt;连通性模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0200-0299/0200.Number%20of%20Islands/README.md&#34;&gt;岛屿数量&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;Flood Fill 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0500-0599/0542.01%20Matrix/README.md&#34;&gt;01 矩阵&lt;/a&gt; - &lt;code&gt;多源 BFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1700-1799/1765.Map%20of%20Highest%20Peak/README.md&#34;&gt;地图中的最高点&lt;/a&gt; - &lt;code&gt;多源 BFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1100-1199/1197.Minimum%20Knight%20Moves/README.md&#34;&gt;进击的骑士&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;最短路模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1000-1099/1091.Shortest%20Path%20in%20Binary%20Matrix/README.md&#34;&gt;二进制矩阵中的最短路径&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;最短路模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1900-1999/1926.Nearest%20Exit%20from%20Entrance%20in%20Maze/README.md&#34;&gt;迷宫中离入口最近的出口&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;最短路模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1200-1299/1293.Shortest%20Path%20in%20a%20Grid%20with%20Obstacles%20Elimination/README.md&#34;&gt;网格中的最短路径&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;最短路模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0752.Open%20the%20Lock/README.md&#34;&gt;打开转盘锁&lt;/a&gt; - &lt;code&gt;最小步数模型&lt;/code&gt;、&lt;code&gt;双向 BFS&lt;/code&gt;、&lt;code&gt;A* 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0100-0199/0127.Word%20Ladder/README.md&#34;&gt;单词接龙&lt;/a&gt; - &lt;code&gt;最小步数模型&lt;/code&gt;、&lt;code&gt;双向 BFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2000-2099/2059.Minimum%20Operations%20to%20Convert%20Number/README.md&#34;&gt;转化数字的最小运算数&lt;/a&gt; - &lt;code&gt;最小步数模型&lt;/code&gt;、&lt;code&gt;双向 BFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0773.Sliding%20Puzzle/README.md&#34;&gt;滑动谜题&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;最小步数模型&lt;/code&gt;、&lt;code&gt;A* 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0800-0899/0847.Shortest%20Path%20Visiting%20All%20Nodes/README.md&#34;&gt;访问所有节点的最短路径&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;最小步数模型&lt;/code&gt;、&lt;code&gt;A* 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0600-0699/0675.Cut%20Off%20Trees%20for%20Golf%20Event/README.md&#34;&gt;为高尔夫比赛砍树&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;A* 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1300-1399/1368.Minimum%20Cost%20to%20Make%20at%20Least%20One%20Valid%20Path%20in%20a%20Grid/README.md&#34;&gt;使网格图至少有一条有效路径的最小代价&lt;/a&gt; - &lt;code&gt;双端队列 BFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2200-2299/2290.Minimum%20Obstacle%20Removal%20to%20Reach%20Corner/README.md&#34;&gt;到达角落需要移除障碍物的最小数目&lt;/a&gt; - &lt;code&gt;双端队列 BFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0490.The%20Maze/README.md&#34;&gt;迷宫&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;连通性模型&lt;/code&gt;、&lt;code&gt;Flood Fill 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0000-0099/0079.Word%20Search/README.md&#34;&gt;单词搜索&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;搜索顺序&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1200-1299/1219.Path%20with%20Maximum%20Gold/README.md&#34;&gt;黄金矿工&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;搜索顺序&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0473.Matchsticks%20to%20Square/README.md&#34;&gt;火柴拼正方形&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;、&lt;code&gt;剪枝&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0600-0699/0698.Partition%20to%20K%20Equal%20Sum%20Subsets/README.md&#34;&gt;划分为 k 个相等的子集&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;、&lt;code&gt;剪枝&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1700-1799/1723.Find%20Minimum%20Time%20to%20Finish%20All%20Jobs/README.md&#34;&gt;完成所有工作的最短时间&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;、&lt;code&gt;剪枝&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2300-2399/2305.Fair%20Distribution%20of%20Cookies/README.md&#34;&gt;公平分发饼干&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;、&lt;code&gt;剪枝&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0329.Longest%20Increasing%20Path%20in%20a%20Matrix/README.md&#34;&gt;矩阵中的最长递增路径&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;记忆化搜索&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2300-2399/2328.Number%20of%20Increasing%20Paths%20in%20a%20Grid/README.md&#34;&gt;网格图中递增路径的数目&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;记忆化搜索&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0200-0299/0294.Flip%20Game%20II/README.md&#34;&gt;翻转游戏 II&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;状态压缩&lt;/code&gt;、&lt;code&gt;记忆化搜索&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1500-1599/1575.Count%20All%20Possible%20Routes/README.md&#34;&gt;统计所有可行路径&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;记忆化搜索&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1400-1499/1444.Number%20of%20Ways%20of%20Cutting%20a%20Pizza/README.md&#34;&gt;切披萨的方案数&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;记忆化搜索&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- DFS 待补充 --&gt; &#xA;&lt;h3&gt;4. 动态规划（DP）&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0100-0199/0118.Pascal&#39;s%20Triangle/README.md&#34;&gt;杨辉三角&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;数字三角形模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0000-0099/0064.Minimum%20Path%20Sum/README.md&#34;&gt;最小路径和&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;数字三角形模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0741.Cherry%20Pickup/README.md&#34;&gt;摘樱桃&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;数字三角形模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1400-1499/1463.Cherry%20Pickup%20II/README.md&#34;&gt;摘樱桃 II&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;数字三角形模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0300.Longest%20Increasing%20Subsequence/README.md&#34;&gt;最长递增子序列&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长上升子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0435.Non-overlapping%20Intervals/README.md&#34;&gt;无重叠区间&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长上升子序列模型&lt;/code&gt;、&lt;code&gt;贪心优化&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0900-0999/0960.Delete%20Columns%20to%20Make%20Sorted%20III/README.md&#34;&gt;删列造序 III&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长上升子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0354.Russian%20Doll%20Envelopes/README.md&#34;&gt;俄罗斯套娃信封问题&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长上升子序列模型&lt;/code&gt;、&lt;code&gt;贪心优化&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1600-1699/1691.Maximum%20Height%20by%20Stacking%20Cuboids/README.md&#34;&gt;堆叠长方体的最大高度&lt;/a&gt; - &lt;code&gt;排序&lt;/code&gt;、&lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长上升子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1600-1699/1626.Best%20Team%20With%20No%20Conflicts/README.md&#34;&gt;无矛盾的最佳球队&lt;/a&gt; - &lt;code&gt;排序&lt;/code&gt;、&lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长上升子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1100-1199/1143.Longest%20Common%20Subsequence/README.md&#34;&gt;最长公共子序列&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长公共子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0712.Minimum%20ASCII%20Delete%20Sum%20for%20Two%20Strings/README.md&#34;&gt;两个字符串的最小 ASCII 删除和&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长公共子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0500-0599/0583.Delete%20Operation%20for%20Two%20Strings/README.md&#34;&gt;两个字符串的删除操作&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长公共子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0494.Target%20Sum/README.md&#34;&gt;目标和&lt;/a&gt; - &lt;code&gt;0-1 背包问题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0416.Partition%20Equal%20Subset%20Sum/README.md&#34;&gt;分割等和子集&lt;/a&gt; - &lt;code&gt;0-1 背包问题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1000-1099/1049.Last%20Stone%20Weight%20II/README.md&#34;&gt;最后一块石头的重量 II&lt;/a&gt; - &lt;code&gt;0-1 背包问题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0322.Coin%20Change/README.md&#34;&gt;零钱兑换&lt;/a&gt; - &lt;code&gt;完全背包问题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0377.Combination%20Sum%20IV/README.md&#34;&gt;组合总和 Ⅳ&lt;/a&gt; - &lt;code&gt;完全背包问题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2200-2299/2218.Maximum%20Value%20of%20K%20Coins%20From%20Piles/README.md&#34;&gt;从栈中取出 K 个硬币的最大面值和&lt;/a&gt; - &lt;code&gt;分组背包问题&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- 背包问题、状态机模型、状压DP、区间DP、树形DP、数位DP 待补充 --&gt; &#xA;&lt;h3&gt;5. 高级数据结构&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1500-1599/1559.Detect%20Cycles%20in%202D%20Grid/README.md&#34;&gt;二维网格图中探测环&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;、&lt;code&gt;检测环&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0399.Evaluate%20Division/README.md&#34;&gt;除法求值&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;、&lt;code&gt;权值维护&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0900-0999/0959.Regions%20Cut%20By%20Slashes/README.md&#34;&gt;由斜杠划分区域&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;、&lt;code&gt;连通分量个数&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0778.Swim%20in%20Rising%20Water/README.md&#34;&gt;水位上升的泳池中游泳&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1200-1299/1202.Smallest%20String%20With%20Swaps/README.md&#34;&gt;交换字符串中的元素&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0800-0899/0803.Bricks%20Falling%20When%20Hit/README.md&#34;&gt;打砖块&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;、&lt;code&gt;逆向思维&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0900-0999/0928.Minimize%20Malware%20Spread%20II/README.md&#34;&gt;尽量减少恶意软件的传播 II&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;、&lt;code&gt;逆向思维&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1600-1699/1697.Checking%20Existence%20of%20Edge%20Length%20Limited%20Paths/README.md&#34;&gt;检查边长度限制的路径是否存在&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;、&lt;code&gt;离线思维&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1500-1599/1579.Remove%20Max%20Number%20of%20Edges%20to%20Keep%20Graph%20Fully%20Traversable/README.md&#34;&gt;保证图可完全遍历&lt;/a&gt; - &lt;code&gt;双并查集&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0307.Range%20Sum%20Query%20-%20Mutable/README.md&#34;&gt;区域和检索 - 数组可修改&lt;/a&gt; - &lt;code&gt;树状数组&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1600-1699/1649.Create%20Sorted%20Array%20through%20Instructions/README.md&#34;&gt;通过指令创建有序数组&lt;/a&gt; - &lt;code&gt;树状数组&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2100-2199/2179.Count%20Good%20Triplets%20in%20an%20Array/README.md&#34;&gt;统计数组中好三元组数目&lt;/a&gt; - &lt;code&gt;树状数组&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1500-1599/1505.Minimum%20Possible%20Integer%20After%20at%20Most%20K%20Adjacent%20Swaps%20On%20Digits/README.md&#34;&gt;最多 K 次交换相邻数位后得到的最小整数&lt;/a&gt; - &lt;code&gt;树状数组&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0308.Range%20Sum%20Query%202D%20-%20Mutable/README.md&#34;&gt;二维区域和检索 - 可变&lt;/a&gt; - &lt;code&gt;二维树状数组&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0315.Count%20of%20Smaller%20Numbers%20After%20Self/README.md&#34;&gt;计算右侧小于当前元素的个数&lt;/a&gt; - &lt;code&gt;离散化树状数组&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0327.Count%20of%20Range%20Sum/README.md&#34;&gt;区间和的个数&lt;/a&gt; - &lt;code&gt;离散化树状数组&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0493.Reverse%20Pairs/README.md&#34;&gt;翻转对&lt;/a&gt; - &lt;code&gt;离散化树状数组&lt;/code&gt;、&lt;code&gt;分治归并&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0600-0699/0673.Number%20of%20Longest%20Increasing%20Subsequence/README.md&#34;&gt;最长递增子序列的个数&lt;/a&gt; - &lt;code&gt;离散化树状数组&lt;/code&gt;、&lt;code&gt;区间最值问题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1600-1699/1622.Fancy%20Sequence/README.md&#34;&gt;奇妙序列&lt;/a&gt; - &lt;code&gt;动态开点线段树&lt;/code&gt;、&lt;code&gt;懒标记&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0715.Range%20Module/README.md&#34;&gt;Range 模块&lt;/a&gt; - &lt;code&gt;动态开点线段树&lt;/code&gt;、&lt;code&gt;懒标记&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0732.My%20Calendar%20III/README.md&#34;&gt;我的日程安排表 III&lt;/a&gt; - &lt;code&gt;动态开点线段树&lt;/code&gt;、&lt;code&gt;懒标记&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2100-2199/2158.Amount%20of%20New%20Area%20Painted%20Each%20Day/README.md&#34;&gt;每天绘制的新区域数量&lt;/a&gt; - &lt;code&gt;动态开点线段树&lt;/code&gt;、&lt;code&gt;懒标记&lt;/code&gt;、&lt;code&gt;区间染色模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2200-2299/2213.Longest%20Substring%20of%20One%20Repeating%20Character/README.md&#34;&gt;由单个字符重复的最长子字符串&lt;/a&gt; - &lt;code&gt;线段树&lt;/code&gt;、&lt;code&gt;动态最大子段和模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0800-0899/0850.Rectangle%20Area%20II/README.md&#34;&gt;矩形面积 II&lt;/a&gt; - &lt;code&gt;线段树&lt;/code&gt;、&lt;code&gt;离散化&lt;/code&gt;、&lt;code&gt;扫描线&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6. 图论&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0743.Network%20Delay%20Time/README.md&#34;&gt;网络延迟时间&lt;/a&gt; - &lt;code&gt;最短路&lt;/code&gt;、&lt;code&gt;Dijkstra 算法&lt;/code&gt;、&lt;code&gt;Bellman Ford 算法&lt;/code&gt;、&lt;code&gt;SPFA 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2200-2299/2203.Minimum%20Weighted%20Subgraph%20With%20the%20Required%20Paths/README.md&#34;&gt;得到要求路径的最小带权子图&lt;/a&gt; - &lt;code&gt;最短路&lt;/code&gt;、&lt;code&gt;Dijkstra 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1500-1599/1584.Min%20Cost%20to%20Connect%20All%20Points/README.md&#34;&gt;连接所有点的最小费用&lt;/a&gt; - &lt;code&gt;最小生成树&lt;/code&gt;、&lt;code&gt;Prim 算法&lt;/code&gt;、&lt;code&gt;Kruskal 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1100-1199/1135.Connecting%20Cities%20With%20Minimum%20Cost/README.md&#34;&gt;最低成本联通所有城市&lt;/a&gt; - &lt;code&gt;最小生成树&lt;/code&gt;、&lt;code&gt;Kruskal 算法&lt;/code&gt;、&lt;code&gt;并查集&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1100-1199/1168.Optimize%20Water%20Distribution%20in%20a%20Village/README.md&#34;&gt;水资源分配优化&lt;/a&gt; - &lt;code&gt;最小生成树&lt;/code&gt;、&lt;code&gt;Kruskal 算法&lt;/code&gt;、&lt;code&gt;并查集&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1400-1499/1489.Find%20Critical%20and%20Pseudo-Critical%20Edges%20in%20Minimum%20Spanning%20Tree/README.md&#34;&gt;找到最小生成树里的关键边和伪关键边&lt;/a&gt; - &lt;code&gt;最小生成树&lt;/code&gt;、&lt;code&gt;Kruskal 算法&lt;/code&gt;、&lt;code&gt;并查集&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0785.Is%20Graph%20Bipartite/README.md&#34;&gt;判断二分图&lt;/a&gt; - &lt;code&gt;染色法判定二分图&lt;/code&gt;、&lt;code&gt;并查集&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- 待补充&#xA;### 7. 数学知识&#xA; --&gt; &#xA;&lt;h2&gt;加入我们&lt;/h2&gt; &#xA;&lt;p&gt;刷编程题的最大好处就是可以锻炼解决问题的思维能力。相信我，「如何去思考」​ 本身也是一项需要不断学习和练习的技能。非常感谢前微软工程师、现蚂蚁金服技术专家 &lt;a href=&#34;https://github.com/kfstorm&#34;&gt;@kfstorm&lt;/a&gt; 贡献了本项目的所有 &lt;a href=&#34;https://github.com/doocs/leetcode/pull/245&#34;&gt;C# 题解&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;如果你对本项目感兴趣，并且希望加入我们刷题小分队，欢迎随时提交 &lt;a href=&#34;https://github.com/doocs/leetcode/pulls&#34;&gt;PR&lt;/a&gt;。请参考如下步骤：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;将本项目 fork 到你的个人 GitHub 帐户，然后 clone 到你的本地机器；&lt;/li&gt; &#xA; &lt;li&gt;进入 leetcode 目录，切换到一个新的分支；&lt;/li&gt; &#xA; &lt;li&gt;对项目做出一些变更，然后使用 git add、commit、push 等命令将你的本地变更提交到你的远程 GitHub 仓库；&lt;/li&gt; &#xA; &lt;li&gt;将你的变更以 PR 的形式提交过来，项目的维护人员会在第一时间对你的变更进行 review！&lt;/li&gt; &#xA; &lt;li&gt;你也可以参考帮助文档 &lt;a href=&#34;https://help.github.com/cn&#34;&gt;https://help.github.com/cn&lt;/a&gt; 了解更多细节。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/doocs/leetcode&#34;&gt;&lt;img src=&#34;https://cdn-doocs.oss-cn-shenzhen.aliyuncs.com/gh/doocs/leetcode@main/images/how-to-contribute.svg?sanitize=true&#34; alt=&#34;how-to-contribute&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gitpod.io&#34;&gt;Gitpod.io&lt;/a&gt; 是一个免费的在线开发环境，你也可以使用它参与本项目。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/doocs/leetcode&#34; target=&#34;_blank&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stars 趋势&lt;/h2&gt; &#xA;&lt;!-- 使用 https://starchart.cc/ 自动刷新 stars 数据，若有问题，可以使用 GitHub Action: starcharts.yml --&gt; &#xA;&lt;!-- &lt;a href=&#34;https://github.com/doocs/leetcode/stargazers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://starchart.cc/doocs/leetcode.svg&#34; alt=&#34;Stargazers over time&#34; /&gt;&lt;/a&gt; --&gt; &#xA;&lt;!-- [![Star History Chart](https://api.star-history.com/svg?repos=doocs/leetcode&amp;type=Date)](https://star-history.com/#doocs/leetcode) --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/doocs/leetcode/stargazers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/images/starcharts.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;贡献者&lt;/h2&gt; &#xA;&lt;p&gt;感谢以下所有朋友对本项目的贡献！&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/doocs/leetcode/graphs/contributors&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=doocs/leetcode&amp;amp;max=500&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;赞助者&lt;/h2&gt; &#xA;&lt;p&gt;感谢以下个人、组织对本项目的支持和赞助！&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/doocs-leetcode/backers.svg?width=890&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/doocs-leetcode/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/doocs-leetcode/sponsors.svg?width=890&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/doocs-leetcode/sponsors.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;&lt;em&gt;You help the developer community practice for interviews, and there is nothing better we could ask for.&lt;/em&gt;&#34; -- &lt;a href=&#34;https://opencollective.com/alan-yessenbayev&#34;&gt;Alan Yessenbayev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;推荐者&lt;/h2&gt; &#xA;&lt;p&gt;知名互联网科技博主 &lt;a href=&#34;https://weibo.com/fly51fly&#34;&gt;@爱可可-爱生活&lt;/a&gt; 微博推荐。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://weibo.com/fly51fly&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn-doocs.oss-cn-shenzhen.aliyuncs.com/gh/doocs/leetcode@main/images/recommender-fly51fly.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;许可证&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;知识共享 版权归属-相同方式共享 4.0 国际 公共许可证&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bazelbuild/bazel</title>
    <updated>2022-09-01T01:51:16Z</updated>
    <id>tag:github.com,2022-09-01:/bazelbuild/bazel</id>
    <link href="https://github.com/bazelbuild/bazel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a fast, scalable, multi-language and extensible build system&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://bazel.build&#34;&gt;Bazel&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;{Fast, Correct} - Choose two&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Build and test software of any size, quickly and reliably.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Speed up your builds and tests&lt;/strong&gt;: Bazel rebuilds only what is necessary. With advanced local and distributed caching, optimized dependency analysis and parallel execution, you get fast and incremental builds.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;One tool, multiple languages&lt;/strong&gt;: Build and test Java, C++, Android, iOS, Go, and a wide variety of other language platforms. Bazel runs on Windows, macOS, and Linux.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Bazel helps you scale your organization, codebase, and continuous integration solution. It handles codebases of any size, in multiple repositories or a huge monorepo.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Extensible to your needs&lt;/strong&gt;: Easily add support for new languages and platforms with Bazel&#39;s familiar extension language. Share and re-use language rules written by the growing Bazel community.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://bazel.build/install&#34;&gt;Install Bazel&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://bazel.build/contribute/getting-started&#34;&gt;Get started with Bazel&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow our tutorials:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://bazel.build/tutorials/cpp&#34;&gt;Build C++&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://bazel.build/tutorials/java&#34;&gt;Build Java&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://bazel.build/tutorials/android-app&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://bazel.build/tutorials/ios-app&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bazel.build/docs/user-manual&#34;&gt;Bazel command line&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bazel.build/reference/be/overview&#34;&gt;Rule reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bazel.build/reference/query&#34;&gt;Use the query command&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bazel.build/rules/concepts&#34;&gt;Extend Bazel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bazel.build/reference/test-encyclopedia&#34;&gt;Write tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bazel.build/community/roadmaps&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bazelbuild/bazel/wiki/Bazel-Users&#34;&gt;Who is using Bazel?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting a Vulnerability&lt;/h2&gt; &#xA;&lt;p&gt;To report a security issue, please email &lt;a href=&#34;mailto:security@bazel.build&#34;&gt;security@bazel.build&lt;/a&gt; with a description of the issue, the steps you took to create the issue, affected versions, and, if known, mitigations for the issue. Our vulnerability management team will respond within 3 working days of your email. If the issue is confirmed as a vulnerability, we will open a Security Advisory. This project follows a 90 day disclosure timeline.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Bazel&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/bazelbuild/bazel/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://buildkite.com/bazel/bazel-bazel&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/1fd282f8ad98c3fb10758a821e5313576356709dd7d11e9618.svg?status=master&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Anuken/Mindustry</title>
    <updated>2022-09-01T01:51:16Z</updated>
    <id>tag:github.com,2022-09-01:/Anuken/Mindustry</id>
    <link href="https://github.com/Anuken/Mindustry" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The automation tower defense RTS&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Anuken/Mindustry/master/core/assets-raw/sprites/ui/logo.png&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Anuken/Mindustry/actions&#34;&gt;&lt;img src=&#34;https://github.com/Anuken/Mindustry/workflows/Tests/badge.svg?event=push&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/mindustry&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/391020510269669376.svg?logo=discord&amp;amp;logoColor=white&amp;amp;logoWidth=20&amp;amp;labelColor=7289DA&amp;amp;label=Discord&amp;amp;color=17cf48&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The automation tower defense RTS, written in Java.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://trello.com/b/aE2tcUwF/mindustry-40-plans&#34;&gt;Trello Board&lt;/a&gt;&lt;/em&gt;&lt;br&gt; &lt;em&gt;&lt;a href=&#34;https://mindustrygame.github.io/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/em&gt;&lt;br&gt; &lt;em&gt;&lt;a href=&#34;https://mindustrygame.github.io/docs/&#34;&gt;Javadoc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Anuken/Mindustry/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Bleeding-edge builds are generated automatically for every commit. You can see them &lt;a href=&#34;https://github.com/Anuken/MindustryBuilds/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d rather compile on your own, follow these instructions. First, make sure you have &lt;a href=&#34;https://adoptium.net/archive.html?variant=openjdk17&amp;amp;jvmVariant=hotspot&#34;&gt;JDK 16-17&lt;/a&gt; installed. &lt;strong&gt;Other JDK versions will not work.&lt;/strong&gt; Open a terminal in the Mindustry directory and run the following commands:&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Running:&lt;/em&gt; &lt;code&gt;gradlew desktop:run&lt;/code&gt;&lt;br&gt; &lt;em&gt;Building:&lt;/em&gt; &lt;code&gt;gradlew desktop:dist&lt;/code&gt;&lt;br&gt; &lt;em&gt;Sprite Packing:&lt;/em&gt; &lt;code&gt;gradlew tools:pack&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux/Mac OS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Running:&lt;/em&gt; &lt;code&gt;./gradlew desktop:run&lt;/code&gt;&lt;br&gt; &lt;em&gt;Building:&lt;/em&gt; &lt;code&gt;./gradlew desktop:dist&lt;/code&gt;&lt;br&gt; &lt;em&gt;Sprite Packing:&lt;/em&gt; &lt;code&gt;./gradlew tools:pack&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Server&lt;/h3&gt; &#xA;&lt;p&gt;Server builds are bundled with each released build (in Releases). If you&#39;d rather compile on your own, replace &#39;desktop&#39; with &#39;server&#39;, e.g. &lt;code&gt;gradlew server:dist&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the Android SDK &lt;a href=&#34;https://developer.android.com/studio#command-tools&#34;&gt;here.&lt;/a&gt; Make sure you&#39;re downloading the &#34;Command line tools only&#34;, as Android Studio is not required.&lt;/li&gt; &#xA; &lt;li&gt;Set the &lt;code&gt;ANDROID_HOME&lt;/code&gt; environment variable to point to your unzipped Android SDK directory.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;gradlew android:assembleDebug&lt;/code&gt; (or &lt;code&gt;./gradlew&lt;/code&gt; if on linux/mac). This will create an unsigned APK in &lt;code&gt;android/build/outputs/apk&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To debug the application on a connected phone, run &lt;code&gt;gradlew android:installDebug android:run&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;h4&gt;Permission Denied&lt;/h4&gt; &#xA;&lt;p&gt;If the terminal returns &lt;code&gt;Permission denied&lt;/code&gt; or &lt;code&gt;Command not found&lt;/code&gt; on Mac/Linux, run &lt;code&gt;chmod +x ./gradlew&lt;/code&gt; before running &lt;code&gt;./gradlew&lt;/code&gt;. &lt;em&gt;This is a one-time procedure.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Gradle may take up to several minutes to download files. Be patient. &lt;br&gt; After building, the output .JAR file should be in &lt;code&gt;/desktop/build/libs/Mindustry.jar&lt;/code&gt; for desktop builds, and in &lt;code&gt;/server/build/libs/server-release.jar&lt;/code&gt; for server builds.&lt;/p&gt; &#xA;&lt;h2&gt;Feature Requests&lt;/h2&gt; &#xA;&lt;p&gt;Post feature requests and feedback &lt;a href=&#34;https://github.com/Anuken/Mindustry-Suggestions/issues/new/choose&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://anuke.itch.io/mindustry&#34;&gt;&lt;img src=&#34;https://static.itch.io/images/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=io.anuke.mindustry&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://f-droid.org/packages/io.anuke.mindustry&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://flathub.org/apps/details/com.github.Anuken.Mindustry&#34;&gt;&lt;img src=&#34;https://flathub.org/assets/badges/flathub-badge-en.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>