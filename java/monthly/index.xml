<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-01T01:54:26Z</updated>
  <subtitle>Monthly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TGX-Android/Telegram-X</title>
    <updated>2025-08-01T01:54:26Z</updated>
    <id>tag:github.com,2025-08-01:/TGX-Android/Telegram-X</id>
    <link href="https://github.com/TGX-Android/Telegram-X" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The main repository of Telegram X — official alternative Telegram client for Android.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.thunderdog.challegram&#34;&gt;Telegram X&lt;/a&gt; — a slick experimental Telegram client based on &lt;a href=&#34;https://core.telegram.org/tdlib&#34;&gt;TDLib&lt;/a&gt;.&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/images/feature.png&#34; alt=&#34;Telegram X&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the complete source code and the build instructions for the official alternative Android client for the Telegram messenger, based on the &lt;a href=&#34;https://core.telegram.org/api&#34;&gt;Telegram API&lt;/a&gt; and the &lt;a href=&#34;https://core.telegram.org/mtproto&#34;&gt;MTProto&lt;/a&gt; secure protocol via &lt;a href=&#34;https://github.com/TGX-Android/tdlib&#34;&gt;TDLib&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://play.google.com/store/apps/details?id=org.thunderdog.challegram&#34;&gt;&lt;strong&gt;Telegram X&lt;/strong&gt; on Google Play&lt;/a&gt; (&lt;a href=&#34;https://play.google.com/apps/testing/org.thunderdog.challegram&#34;&gt;subscribe to beta&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/tgx_log&#34;&gt;APKs and Build Info&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/tgx_bot&#34;&gt;Bot to verify APK hash&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Other sources&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://appgallery.huawei.com/app/C101754199&#34;&gt;&lt;strong&gt;Telegram X&lt;/strong&gt; on Huawei AppGallery&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/TGX-Android/Telegram-X/releases&#34;&gt;&lt;strong&gt;GitHub Releases&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Build instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;At least &lt;strong&gt;5,34GB&lt;/strong&gt; of free disk space: &lt;strong&gt;487,10MB&lt;/strong&gt; for source codes and around &lt;strong&gt;4,85GB&lt;/strong&gt; for files generated after building all variants&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;4GB&lt;/strong&gt; of RAM&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt; or &lt;strong&gt;Linux&lt;/strong&gt;-based operating system. &lt;strong&gt;Windows&lt;/strong&gt; platform is supported by using &lt;a href=&#34;https://www.msys2.org/&#34;&gt;MSYS&lt;/a&gt; (e.g., &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git Bash&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;macOS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;git with LFS, wget and sed: &lt;code&gt;$ brew install git git-lfs wget gsed &amp;amp;&amp;amp; git lfs install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Ubuntu&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;git with LFS: &lt;code&gt;# apt install git git-lfs&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;$ git lfs install&lt;/code&gt; for the current user, if you didn&#39;t have &lt;code&gt;git-lfs&lt;/code&gt; previously installed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Telegram X&lt;/strong&gt; does not provide official build instructions for Windows platform. It is recommended to rely on Linux distributions instead.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;$ git clone --recursive --depth=1 --shallow-submodules https://github.com/TGX-Android/Telegram-X tgx&lt;/code&gt; — clone &lt;strong&gt;Telegram X&lt;/strong&gt; with submodules&lt;/li&gt; &#xA; &lt;li&gt;In case you forgot the &lt;code&gt;--recursive&lt;/code&gt; flag, &lt;code&gt;cd&lt;/code&gt; into &lt;code&gt;tgx&lt;/code&gt; directory and: &lt;code&gt;$ git submodule init &amp;amp;&amp;amp; git submodule update --init --recursive --depth=1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create &lt;code&gt;keystore.properties&lt;/code&gt; file outside of source tree with the following properties:&lt;br&gt;&lt;code&gt;keystore.file&lt;/code&gt;: absolute path to the keystore file&lt;br&gt;&lt;code&gt;keystore.password&lt;/code&gt;: password for the keystore&lt;br&gt;&lt;code&gt;key.alias&lt;/code&gt;: key alias that will be used to sign the app&lt;br&gt;&lt;code&gt;key.password&lt;/code&gt;: key password.&lt;br&gt;&lt;strong&gt;Warning&lt;/strong&gt;: keep this file safe and make sure nobody, except you, has access to it. For production builds one could use a separate user with home folder encryption to avoid harm from physical theft&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$ cd tgx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;$ scripts/./setup.sh&lt;/code&gt; and follow up the instructions&lt;/li&gt; &#xA; &lt;li&gt;If you specified package name that&#39;s different from the one Telegram X uses, &lt;a href=&#34;https://firebase.google.com/docs/android/setup&#34;&gt;setup Firebase&lt;/a&gt; and replace &lt;code&gt;google-services.json&lt;/code&gt; with the one that&#39;s suitable for the &lt;code&gt;app.id&lt;/code&gt; you need&lt;/li&gt; &#xA; &lt;li&gt;Now you can open the project using &lt;strong&gt;&lt;a href=&#34;https://developer.android.com/studio/&#34;&gt;Android Studio&lt;/a&gt;&lt;/strong&gt; or build manually from the command line: &lt;code&gt;./gradlew assembleUniversalRelease&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Available flavors&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;arm64&lt;/code&gt;: &lt;strong&gt;arm64-v8a&lt;/strong&gt; build with &lt;code&gt;minSdkVersion&lt;/code&gt; set to &lt;code&gt;21&lt;/code&gt; (&lt;strong&gt;Lollipop&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arm32&lt;/code&gt;: &lt;strong&gt;armeabi-v7a&lt;/strong&gt; build&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;x64&lt;/code&gt;: &lt;strong&gt;x86_64&lt;/strong&gt; build with &lt;code&gt;minSdkVersion&lt;/code&gt; set to &lt;code&gt;21&lt;/code&gt; (&lt;strong&gt;Lollipop&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;x86&lt;/code&gt;: &lt;strong&gt;x86&lt;/strong&gt; build&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;universal&lt;/code&gt;: universal build that includes native bundles for all platforms.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick setup for development&lt;/h3&gt; &#xA;&lt;p&gt;If you are developing a &lt;a href=&#34;https://github.com/TGX-Android/Telegram-X/raw/main/docs/PULL_REQUEST_TEMPLATE.md&#34;&gt;contribution&lt;/a&gt; to the project, you may follow the simpler building steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;$ git clone --recursive https://github.com/TGX-Android/Telegram-X tgx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$ cd tgx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://core.telegram.org/api/obtaining_api_id&#34;&gt;Obtain Telegram API credentials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create &lt;code&gt;local.properties&lt;/code&gt; file in the root project folder using any text editor:&lt;br&gt;&lt;pre&gt;# Location where you have Android SDK installed&#xA;sdk.dir=YOUR_ANDROID_SDK_FOLDER&#xA;# Telegram API credentials obtained at previous step&#xA;telegram.api_id=YOUR_TELEGRAM_API_ID&#xA;telegram.api_hash=YOUR_TELEGRAM_API_HASH&lt;/pre&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;$ scripts/./setup.sh&lt;/code&gt; — this will download required Android SDK packages and build native dependencies that aren&#39;t part of project&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/app/jni/CMakeLists.txt&#34;&gt;CMakeLists.txt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open and build project via &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt; or by using one of &lt;code&gt;./gradlew assemble&lt;/code&gt; commands in terminal&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;After submitting a pull request and its initial review, special build including your contribution will be published in &lt;a href=&#34;https://t.me/tgx_prs&#34;&gt;@tgx_prs&lt;/a&gt; channel, where it can be tested by the community. In case any issues or bugs found, you may push more commits to an existing PR that address them and request to publish a newer build by using comments section of pull request or in &lt;a href=&#34;https://t.me/tgx_dev&#34;&gt;@tgx_dev&lt;/a&gt; chat.&lt;/p&gt; &#xA;&lt;h2&gt;Reproducing public builds&lt;/h2&gt; &#xA;&lt;p&gt;In order to verify that there is no additional source code injected inside official APKs, you must use &lt;strong&gt;Ubuntu 21.04&lt;/strong&gt; for builds published before &lt;a href=&#34;https://github.com/TGX-Android/Telegram-X/commit/e9a054a0f469a98a13f7e0d751539687fef8759b&#34;&gt;26th May 2023&lt;/a&gt; or &lt;strong&gt;Ubuntu 22.04.2 LTS&lt;/strong&gt; for any newer releases, and comply with the following requirements:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create user called &lt;code&gt;vk&lt;/code&gt; with the home directory located at &lt;code&gt;/home/vk&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone &lt;code&gt;tgx&lt;/code&gt; repository to &lt;code&gt;/home/vk/tgx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check out the specific commit you want to verify&lt;/li&gt; &#xA; &lt;li&gt;In rare cases of builds that include unmerged pull requests, you must follow actions performed by &lt;a href=&#34;https://github.com/TGX-Android/Publisher/raw/main/main.js&#34;&gt;Publisher&#39;s&lt;/a&gt; &lt;code&gt;fetchPr&lt;/code&gt; and &lt;code&gt;squashPr&lt;/code&gt; tasks&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into &lt;code&gt;tgx&lt;/code&gt; folder and install dependencies: &lt;code&gt;# apt install $(cat reproducible-builds/dependencies.txt)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow up the build instruction from the previous section&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;$ apkanalyzer apk compare --different-only &amp;lt;remote-apk&amp;gt; &amp;lt;reproduced-apk&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If only signature files and metadata differ, build reproduction is successful.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In future build reproduction might become easier. Here&#39;s a list of related PR-welcome TODOs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Project path must not affect the resulting &lt;code&gt;.so&lt;/code&gt; files, so user &amp;amp; project location requirement could be removed&lt;/li&gt; &#xA; &lt;li&gt;When building native binaries on &lt;strong&gt;macOS&lt;/strong&gt;, &lt;code&gt;.comment&lt;/code&gt; ELF section differs from the one built with &lt;strong&gt;Linux&lt;/strong&gt; version of NDK. It must be removed or made deterministic without any side-effects like breaking &lt;code&gt;native-debug-symbols.zip&lt;/code&gt; (or should be reported to NDK team?)&lt;/li&gt; &#xA; &lt;li&gt;Checksums of cold APK builds always differ, even though the same keystore applied and generated inner APK contents do not differ. Real cause must be investigated and fixed, if possible.&lt;br&gt;To generate cold build, invoke &lt;code&gt;$ scripts/./reset.sh&lt;/code&gt; and &lt;code&gt;$ scripts/./setup.sh --skip-sdk-setup&lt;/code&gt;.&lt;br&gt;&lt;strong&gt;Warning&lt;/strong&gt;: this will also reset changes inside some of the submodules (&lt;a href=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/app/jni/thirdparty/ffmpeg&#34;&gt;ffmpeg&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/app/jni/thirdparty/libvpx&#34;&gt;libvpx&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/app/jni/thirdparty/webp&#34;&gt;webp&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/app/jni/thirdparty/opus&#34;&gt;opus&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/app/jni/thirdparty/exoplayer&#34;&gt;ExoPlayer&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Move local pull requests squash-merging from &lt;a href=&#34;https://github.com/TGX-Android/Publisher&#34;&gt;Publisher&lt;/a&gt; to some script inside this repository to make reproduction of builds that include them easier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;i&gt;PS: &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; is not considered an option, as it just hides away these tasks, and requires that all published APKs must be built using it.&lt;/i&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Verifying side-loaded APKs&lt;/h2&gt; &#xA;&lt;p&gt;If you downloaded &lt;strong&gt;Telegram X&lt;/strong&gt; APK from somewhere and would like to simply verify whether it&#39;s an original APK without any injected malicious source code, you need to get checksum (&lt;code&gt;SHA-256&lt;/code&gt;, &lt;code&gt;SHA-1&lt;/code&gt; or &lt;code&gt;MD5&lt;/code&gt;) of the downloaded APK file and find whether it corresponds to any known &lt;strong&gt;Telegram X&lt;/strong&gt; version.&lt;/p&gt; &#xA;&lt;p&gt;In order to obtain &lt;strong&gt;SHA-256&lt;/strong&gt; of the APK:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;$ sha256sum &amp;lt;path-to-apk&amp;gt;&lt;/code&gt; on &lt;strong&gt;Ubuntu&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$ shasum -a 256 &amp;lt;path-to-apk&amp;gt;&lt;/code&gt; on &lt;strong&gt;macOS&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$ certutil -hashfile &amp;lt;path-to-apk&amp;gt; SHA256&lt;/code&gt; on &lt;strong&gt;Windows&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once obtained, there are three ways to find out the commit for the specific checksum:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sending checksum to &lt;a href=&#34;https://t.me/tgx_bot&#34;&gt;&lt;code&gt;@tgx_bot&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Searching for a checksum in &lt;a href=&#34;https://t.me/tgx_log&#34;&gt;&lt;code&gt;@tgx_log&lt;/code&gt;&lt;/a&gt;. You can do so without need in installing any Telegram client by using this URL format: &lt;a href=&#34;https://t.me/s/tgx_log?q=c541ebb0a3ae7bb6e6bd155530f375d567b8aef1761fdd942fb5d69af62e24ae&#34;&gt;&lt;code&gt;https://t.me/s/tgx_log?q={checksum}&lt;/code&gt;&lt;/a&gt; (click to see in action). Note: unpublished builds cannot be verified this way.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Telegram X&lt;/code&gt; is licensed under the terms of the GNU General Public License v3.0.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see &lt;a href=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;License of components and third-party dependencies it relies on might differ, check &lt;code&gt;LICENSE&lt;/code&gt; file in the corresponding folder.&lt;/p&gt; &#xA;&lt;h3&gt;Third-party dependencies&lt;/h3&gt; &#xA;&lt;p&gt;List of third-party components used in &lt;strong&gt;Telegram X&lt;/strong&gt; can be found &lt;a href=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/docs/THIRDPARTY.md&#34;&gt;here&lt;/a&gt;. Additionally you can check the specific commit of the third-party component used, for example, &lt;a href=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/app/jni/thirdparty&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/thirdparty&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Telegram X&lt;/strong&gt; welcomes contributions. Check out &lt;a href=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/docs/PULL_REQUEST_TEMPLATE.md&#34;&gt;pull request template&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/TGX-Android/Telegram-X/main/docs/GUIDE.md&#34;&gt;guide for contributors&lt;/a&gt; to learn more about Telegram X internals before creating the first pull request.&lt;/p&gt; &#xA;&lt;p&gt;If you are a regular user and experience a problem with Telegram X, the best place to look for solution is &lt;a href=&#34;https://t.me/tgandroidtests&#34;&gt;Telegram X chat&lt;/a&gt; — a community with over 4 thousand members. Please do not use this repository to ask questions: if you have general issue with Telegram, refer to &lt;a href=&#34;http://telegram.org/faq&#34;&gt;FAQ&lt;/a&gt; or contact &lt;a href=&#34;https://telegram.org/faq#telegram-support&#34;&gt;Telegram Support&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/commons-lang</title>
    <updated>2025-08-01T01:54:26Z</updated>
    <id>tag:github.com,2025-08-01:/apache/commons-lang</id>
    <link href="https://github.com/apache/commons-lang" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Commons Lang&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Commons Lang&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/commons-lang/actions/workflows/maven.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/commons-lang/actions/workflows/maven.yml/badge.svg?sanitize=true&#34; alt=&#34;Java CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/artifact/org.apache.commons/commons-lang3&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.apache.commons/commons-lang3?label=Maven%20Central&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://javadoc.io/doc/org.apache.commons/commons-lang3/3.18.0&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge/org.apache.commons/commons-lang3/3.18.0.svg?sanitize=true&#34; alt=&#34;Javadocs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/commons-lang/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/commons-lang/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://api.securityscorecards.dev/projects/github.com/apache/commons-lang&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/apache/commons-lang/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Apache Commons Lang, a package of Java utility classes for the classes that are in java.lang&#39;s hierarchy, or are considered to be so standard as to justify existence in java.lang.&lt;/p&gt; &#xA;&lt;p&gt;The code is tested using the latest revision of the JDK for supported LTS releases: 8, 11, 17 and 21 currently. See &lt;a href=&#34;https://github.com/apache/commons-lang/raw/master/.github/workflows/maven.yml&#34;&gt;https://github.com/apache/commons-lang/blob/master/.github/workflows/maven.yml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please ensure your build environment is up-to-date and kindly report any build issues.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;More information can be found on the &lt;a href=&#34;https://commons.apache.org/proper/commons-lang&#34;&gt;Apache Commons Lang homepage&lt;/a&gt;. The &lt;a href=&#34;https://commons.apache.org/proper/commons-lang/apidocs&#34;&gt;Javadoc&lt;/a&gt; can be browsed. Questions related to the usage of Apache Commons Lang should be posted to the &lt;a href=&#34;https://commons.apache.org/mail-lists.html&#34;&gt;user mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting the latest release&lt;/h2&gt; &#xA;&lt;p&gt;You can download source and binaries from our &lt;a href=&#34;https://commons.apache.org/proper/commons-lang/download_lang.cgi&#34;&gt;download page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can pull it from the central Maven repositories:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;commons-lang3&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;3.18.0&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Building requires a Java JDK and &lt;a href=&#34;https://maven.apache.org/&#34;&gt;Apache Maven&lt;/a&gt;. The required Java version is found in the &lt;code&gt;pom.xml&lt;/code&gt; as the &lt;code&gt;maven.compiler.source&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;p&gt;From a command shell, run &lt;code&gt;mvn&lt;/code&gt; without arguments to invoke the default Maven goal to run all tests and checks.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We accept Pull Requests via GitHub. The &lt;a href=&#34;https://commons.apache.org/mail-lists.html&#34;&gt;developer mailing list&lt;/a&gt; is the main channel of communication for contributors. There are some guidelines which will make applying PRs easier for us:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No tabs! Please use spaces for indentation.&lt;/li&gt; &#xA; &lt;li&gt;Respect the existing code style for each file.&lt;/li&gt; &#xA; &lt;li&gt;Create minimal diffs - disable on save actions like reformat source code or organize imports. If you feel the source code should be reformatted create a separate PR for this change.&lt;/li&gt; &#xA; &lt;li&gt;Provide JUnit tests for your changes and make sure your changes don&#39;t break any existing tests by running &lt;code&gt;mvn&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Before you pushing a PR, run &lt;code&gt;mvn&lt;/code&gt; (by itself), this runs the default goal, which contains all build checks.&lt;/li&gt; &#xA; &lt;li&gt;To see the code coverage report, regardless of coverage failures, run &lt;code&gt;mvn clean site -Dcommons.jacoco.haltOnFailure=false -Pjacoco&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you plan to contribute on a regular basis, please consider filing a &lt;a href=&#34;https://www.apache.org/licenses/#clas&#34;&gt;contributor license agreement&lt;/a&gt;. You can learn more about contributing via GitHub in our &lt;a href=&#34;https://raw.githubusercontent.com/apache/commons-lang/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This code is licensed under the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License v2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;code&gt;NOTICE.txt&lt;/code&gt; file for required notices and attributions.&lt;/p&gt; &#xA;&lt;h2&gt;Donating&lt;/h2&gt; &#xA;&lt;p&gt;You like Apache Commons Lang? Then &lt;a href=&#34;https://www.apache.org/foundation/contributing.html&#34;&gt;donate back to the ASF&lt;/a&gt; to support development.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://commons.apache.org/&#34;&gt;Apache Commons Homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://issues.apache.org/jira/browse/LANG&#34;&gt;Apache Issue Tracker (JIRA)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://the-asf.slack.com/archives/C60NVB8AD&#34;&gt;Apache Commons Slack Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ApacheCommons&#34;&gt;Apache Commons Twitter Account&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Apache Commons Components&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://commons.apache.org/components.html&#34;&gt;list of components&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/maven</title>
    <updated>2025-08-01T01:54:26Z</updated>
    <id>tag:github.com,2025-08-01:/apache/maven</id>
    <link href="https://github.com/apache/maven" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Maven core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Maven&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/apache/maven.svg?label=License&#34; alt=&#34;Apache License, Version 2.0, January 2004&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/artifact/org.apache.maven/apache-maven&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.apache.maven/apache-maven.svg?label=Maven%20Central&amp;amp;versionPrefix=3.&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/artifact/org.apache.maven/apache-maven&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.apache.maven/apache-maven.svg?label=Maven%20Central&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jvm-repo-rebuild/reproducible-central/raw/master/content/org/apache/maven/maven/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/jvm-repo-rebuild/reproducible-central/master/content/org/apache/maven/maven/badge.json&#34; alt=&#34;Reproducible Builds&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/master.svg?&#34; alt=&#34;Jenkins Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/master/lastCompletedBuild/testReport/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/t/https/ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/master.svg?&#34; alt=&#34;Jenkins tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Apache Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project&#39;s build, reporting and documentation from a central piece of information.&lt;/p&gt; &#xA;&lt;p&gt;If you think you have found a bug, please file an issue in the &lt;a href=&#34;https://github.com/apache/maven/issues&#34;&gt;Maven Issue Tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;More information can be found on &lt;a href=&#34;https://maven.apache.org/&#34;&gt;Apache Maven Homepage&lt;/a&gt;. Questions related to the usage of Maven should be posted on the &lt;a href=&#34;https://maven.apache.org/mailing-lists.html&#34;&gt;Maven User List&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Where can I get the latest release?&lt;/h2&gt; &#xA;&lt;p&gt;You can download the release source from our &lt;a href=&#34;https://maven.apache.org/download.cgi&#34;&gt;download page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in the development of Maven, please consult the documentation first and afterward you are welcome to join the developers mailing list to ask questions or discuss new ideas/features/bugs etc.&lt;/p&gt; &#xA;&lt;p&gt;Take a look into the &lt;a href=&#34;https://raw.githubusercontent.com/apache/maven/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This code is under the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License, Version 2.0, January 2004&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/apache/maven/master/NOTICE&#34;&gt;&lt;code&gt;NOTICE&lt;/code&gt;&lt;/a&gt; file for required notices and attributions.&lt;/p&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;Do you like Apache Maven? Then &lt;a href=&#34;https://www.apache.org/foundation/contributing.html&#34;&gt;donate back to the ASF&lt;/a&gt; to support the development.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Build&lt;/h2&gt; &#xA;&lt;p&gt;If you want to bootstrap Maven, you&#39;ll need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java 17+&lt;/li&gt; &#xA; &lt;li&gt;Maven 3.6.3 or later&lt;/li&gt; &#xA; &lt;li&gt;Run Maven, specifying a location into which the completed Maven distro should be installed: &lt;pre&gt;&lt;code&gt;mvn -DdistributionTargetDir=&#34;$HOME/app/maven/apache-maven-4.0.x-SNAPSHOT&#34; clean package&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>