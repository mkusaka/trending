<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-01T02:17:33Z</updated>
  <subtitle>Monthly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jenkinsci/jenkins</title>
    <updated>2023-05-01T02:17:33Z</updated>
    <id>tag:github.com,2023-05-01:/jenkinsci/jenkins</id>
    <link href="https://github.com/jenkinsci/jenkins" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Jenkins automation server&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://jenkins.io&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source width=&#34;400&#34; media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://www.jenkins.io/images/jenkins-logo-title-dark.svg&#34;&gt; &#xA;  &lt;img width=&#34;400&#34; src=&#34;https://www.jenkins.io/images/jenkins-logo-title.svg?sanitize=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;h1&gt;About&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jenkins.io/changelog&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fwww.jenkins.io%2Fchangelog%2Fbadge.json&#34; alt=&#34;Jenkins Regular Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jenkins.io/changelog-stable&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fwww.jenkins.io%2Fchangelog-stable%2Fbadge.json&#34; alt=&#34;Jenkins LTS Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/jenkins/jenkins.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/3538&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/3538/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In a nutshell, Jenkins is the leading open-source automation server. Built with Java, it provides over 1,800 &lt;a href=&#34;https://plugins.jenkins.io/&#34;&gt;plugins&lt;/a&gt; to support automating virtually anything, so that humans can spend their time doing things machines cannot.&lt;/p&gt; &#xA;&lt;h1&gt;What to Use Jenkins for and When to Use It&lt;/h1&gt; &#xA;&lt;p&gt;Use Jenkins to automate your development workflow, so you can focus on work that matters most. Jenkins is commonly used for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Building projects&lt;/li&gt; &#xA; &lt;li&gt;Running tests to detect bugs and other issues as soon as they are introduced&lt;/li&gt; &#xA; &lt;li&gt;Static code analysis&lt;/li&gt; &#xA; &lt;li&gt;Deployment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Execute repetitive tasks, save time, and optimize your development process with Jenkins.&lt;/p&gt; &#xA;&lt;h1&gt;Downloads&lt;/h1&gt; &#xA;&lt;p&gt;The Jenkins project provides official distributions as WAR files, Docker images, native packages and installers for platforms including several Linux distributions and Windows. See the &lt;a href=&#34;https://www.jenkins.io/download&#34;&gt;Downloads&lt;/a&gt; page for references.&lt;/p&gt; &#xA;&lt;p&gt;For all distributions Jenkins offers two release lines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/download/weekly/&#34;&gt;Weekly&lt;/a&gt; - Frequent releases which include all new features, improvements, and bug fixes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/download/lts/&#34;&gt;Long-Term Support (LTS)&lt;/a&gt; - Older release line which gets periodically updated via bug fix backports.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Latest releases: &lt;a href=&#34;https://www.jenkins.io/changelog&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fwww.jenkins.io%2Fchangelog%2Fbadge.json&#34; alt=&#34;Jenkins Regular Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jenkins.io/changelog-stable&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fwww.jenkins.io%2Fchangelog-stable%2Fbadge.json&#34; alt=&#34;Jenkins LTS Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Source&lt;/h1&gt; &#xA;&lt;p&gt;Our latest and greatest source of Jenkins can be found on &lt;a href=&#34;https://github.com/jenkinsci/jenkins&#34;&gt;GitHub&lt;/a&gt;. Fork us!&lt;/p&gt; &#xA;&lt;h1&gt;Contributing to Jenkins&lt;/h1&gt; &#xA;&lt;p&gt;Follow the &lt;a href=&#34;https://raw.githubusercontent.com/jenkinsci/jenkins/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; if you want to propose a change in the Jenkins core. For more information about participating in the community and contributing to the Jenkins project, see &lt;a href=&#34;https://www.jenkins.io/participate/&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Documentation for Jenkins core maintainers is in the &lt;a href=&#34;https://raw.githubusercontent.com/jenkinsci/jenkins/master/docs/MAINTAINERS.adoc&#34;&gt;maintainers guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;News and Website&lt;/h1&gt; &#xA;&lt;p&gt;All information about Jenkins can be found on our &lt;a href=&#34;https://www.jenkins.io/&#34;&gt;website&lt;/a&gt;. Follow us on &lt;a href=&#34;https://twitter.com/jenkinsci&#34;&gt;Twitter&lt;/a&gt; or &lt;a href=&#34;https://www.linkedin.com/company/jenkins-project/&#34;&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Governance&lt;/h1&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.jenkins.io/project/governance/&#34;&gt;Jenkins Governance Document&lt;/a&gt; for information about the project&#39;s open governance, our philosophy and values, and development practices. Jenkins Code of Conduct can be found &lt;a href=&#34;https://www.jenkins.io/project/conduct/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Adopters&lt;/h1&gt; &#xA;&lt;p&gt;Jenkins is used by millions of users and thousands of companies. See &lt;a href=&#34;https://www.jenkins.io/project/adopters/&#34;&gt;adopters&lt;/a&gt; for the list of Jenkins adopters and their success stories.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Jenkins is &lt;strong&gt;licensed&lt;/strong&gt; under the &lt;strong&gt;&lt;a href=&#34;https://github.com/jenkinsci/jenkins/raw/master/LICENSE.txt&#34;&gt;MIT License&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TeamNewPipe/NewPipe</title>
    <updated>2023-05-01T02:17:33Z</updated>
    <id>tag:github.com,2023-05-01:/TeamNewPipe/NewPipe</id>
    <link href="https://github.com/TeamNewPipe/NewPipe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A libre lightweight streaming front-end for Android.&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;Please do &lt;strong&gt;not&lt;/strong&gt; open pull requests for &lt;em&gt;new features&lt;/em&gt; now, as we are planning to rewrite large chunks of the code. Only bugfix PRs will be accepted. More details will be announced soon!&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://newpipe.net&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/assets/new_pipe_icon_5.png&#34; width=&#34;150&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;&lt;b&gt;NewPipe&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;A libre lightweight streaming front-end for Android.&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://f-droid.org/packages/org.schabi.newpipe/&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on-en.svg?sanitize=true&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80/&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/TeamNewPipe/NewPipe/releases&#34; alt=&#34;GitHub release&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/TeamNewPipe/NewPipe.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34; alt=&#34;License: GPLv3&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL%20v3-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TeamNewPipe/NewPipe/actions&#34; alt=&#34;Build Status&#34;&gt;&lt;img src=&#34;https://github.com/TeamNewPipe/NewPipe/workflows/CI/badge.svg?branch=dev&amp;amp;event=push&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/newpipe/&#34; alt=&#34;Translation Status&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/newpipe/-/svg-badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://web.libera.chat/#newpipe&#34; alt=&#34;IRC channel: #newpipe&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/IRC%20chat-%23newpipe-brightgreen.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.bountysource.com/teams/newpipe&#34; alt=&#34;Bountysource bounties&#34;&gt;&lt;img src=&#34;https://img.shields.io/bountysource/team/newpipe/activity.svg?colorB=cd201f&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#screenshots&#34;&gt;Screenshots&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#supported-services&#34;&gt;Supported Services&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#description&#34;&gt;Description&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#features&#34;&gt;Features&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#installation-and-updates&#34;&gt;Installation and updates&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#contribution&#34;&gt;Contribution&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#donate&#34;&gt;Donate&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#license&#34;&gt;License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://newpipe.net&#34;&gt;Website&lt;/a&gt; • &lt;a href=&#34;https://newpipe.net/blog/&#34;&gt;Blog&lt;/a&gt; • &lt;a href=&#34;https://newpipe.net/FAQ/&#34;&gt;FAQ&lt;/a&gt; • &lt;a href=&#34;https://newpipe.net/press/&#34;&gt;Press&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;Read this in other languages: &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/README.md&#34;&gt;English&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.es.md&#34;&gt;Español&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.hi.md&#34;&gt;हिन्दी&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.ko.md&#34;&gt;한국어&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.so.md&#34;&gt;Soomaali&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.pt_BR.md&#34;&gt;Português Brasil&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.pl.md&#34;&gt;Polski&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.ja.md&#34;&gt;日本語&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.ro.md&#34;&gt;Română&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.tr.md&#34;&gt;Türkçe&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.zh_TW.md&#34;&gt;正體中文&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;WARNING: THIS APP IS IN BETA, SO YOU MAY ENCOUNTER BUGS. IF YOU DO, OPEN AN ISSUE IN OUR GITHUB REPOSITORY BY FILLING OUT THE ISSUE TEMPLATE.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;PUTTING NEWPIPE, OR ANY FORK OF IT, INTO THE GOOGLE PLAY STORE VIOLATES THEIR TERMS AND CONDITIONS.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_01.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_01.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_02.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_02.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_03.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_03.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_04.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_04.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_05.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_05.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_06.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_06.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_07.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_07.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_08.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_08.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_09.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_09.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_10.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_10.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/tenInchScreenshots/shot_11.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/tenInchScreenshots/shot_11.png&#34; width=&#34;405&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/tenInchScreenshots/shot_12.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/tenInchScreenshots/shot_12.png&#34; width=&#34;405&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Supported Services&lt;/h3&gt; &#xA;&lt;p&gt;NewPipe currently supports these services:&lt;/p&gt; &#xA;&lt;!-- We link to the service websites separately to avoid people accidentally opening a website they didn&#39;t want to. --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;YouTube (&lt;a href=&#34;https://www.youtube.com/&#34;&gt;website&lt;/a&gt;) and YouTube Music (&lt;a href=&#34;https://music.youtube.com/&#34;&gt;website&lt;/a&gt;) (&lt;a href=&#34;https://en.wikipedia.org/wiki/YouTube&#34;&gt;wiki&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;PeerTube (&lt;a href=&#34;https://joinpeertube.org/&#34;&gt;website&lt;/a&gt;) and all its instances (open the website to know what that means!) (&lt;a href=&#34;https://en.wikipedia.org/wiki/PeerTube&#34;&gt;wiki&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Bandcamp (&lt;a href=&#34;https://bandcamp.com/&#34;&gt;website&lt;/a&gt;) (&lt;a href=&#34;https://en.wikipedia.org/wiki/Bandcamp&#34;&gt;wiki&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;SoundCloud (&lt;a href=&#34;https://soundcloud.com/&#34;&gt;website&lt;/a&gt;) (&lt;a href=&#34;https://en.wikipedia.org/wiki/SoundCloud&#34;&gt;wiki&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;media.ccc.de (&lt;a href=&#34;https://media.ccc.de/&#34;&gt;website&lt;/a&gt;) (&lt;a href=&#34;https://en.wikipedia.org/wiki/Chaos_Computer_Club&#34;&gt;wiki&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As you can see, NewPipe supports multiple video and audio services. Though it started off with YouTube, other people have added more services over the years, making NewPipe more and more versatile!&lt;/p&gt; &#xA;&lt;p&gt;Partially due to circumstance, and partially due to its popularity, YouTube is the best supported out of these services. If you use or are familiar with any of these other services, please help us improve support for them! We&#39;re looking for maintainers for SoundCloud and PeerTube.&lt;/p&gt; &#xA;&lt;p&gt;If you intend to add a new service, please get in touch with us first! Our &lt;a href=&#34;https://teamnewpipe.github.io/documentation/&#34;&gt;docs&lt;/a&gt; provide more information on how a new service can be added to the app and to the &lt;a href=&#34;https://github.com/TeamNewPipe/NewPipeExtractor&#34;&gt;NewPipe Extractor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;NewPipe works by fetching the required data from the official API (e.g. PeerTube) of the service you&#39;re using. If the official API is restricted (e.g. YouTube) for our purposes, or is proprietary, the app parses the website or uses an internal API instead. This means that you don&#39;t need an account on any service to use NewPipe.&lt;/p&gt; &#xA;&lt;p&gt;Also, since they are free and open source software, neither the app nor the Extractor use any proprietary libraries or frameworks, such as Google Play Services. This means you can use NewPipe on devices or custom ROMs that do not have Google apps installed.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Watch videos at resolutions up to 4K&lt;/li&gt; &#xA; &lt;li&gt;Listen to audio in the background, only loading the audio stream to save data&lt;/li&gt; &#xA; &lt;li&gt;Popup mode (floating player, aka Picture-in-Picture)&lt;/li&gt; &#xA; &lt;li&gt;Watch live streams&lt;/li&gt; &#xA; &lt;li&gt;Show/hide subtitles/closed captions&lt;/li&gt; &#xA; &lt;li&gt;Search videos and audios (on YouTube, you can specify the content language as well)&lt;/li&gt; &#xA; &lt;li&gt;Enqueue videos (and optionally save them as local playlists)&lt;/li&gt; &#xA; &lt;li&gt;Show/hide general information about videos (such as description and tags)&lt;/li&gt; &#xA; &lt;li&gt;Show/hide next/related videos&lt;/li&gt; &#xA; &lt;li&gt;Show/hide comments&lt;/li&gt; &#xA; &lt;li&gt;Search videos, audios, channels, playlists and albums&lt;/li&gt; &#xA; &lt;li&gt;Browse videos and audios within a channel&lt;/li&gt; &#xA; &lt;li&gt;Subscribe to channels (yes, without logging into any account!)&lt;/li&gt; &#xA; &lt;li&gt;Get notifications about new videos from channels you&#39;re subscribed to&lt;/li&gt; &#xA; &lt;li&gt;Create and edit channel groups (for easier browsing and management)&lt;/li&gt; &#xA; &lt;li&gt;Browse video feeds generated from your channel groups&lt;/li&gt; &#xA; &lt;li&gt;View and search your watch history&lt;/li&gt; &#xA; &lt;li&gt;Search and watch playlists (these are remote playlists, which means they&#39;re fetched from the service you&#39;re browsing)&lt;/li&gt; &#xA; &lt;li&gt;Create and edit local playlists (these are created and saved within the app, and have nothing to do with any service)&lt;/li&gt; &#xA; &lt;li&gt;Download videos/audios/subtitles (closed captions)&lt;/li&gt; &#xA; &lt;li&gt;Open in Kodi&lt;/li&gt; &#xA; &lt;li&gt;Watch/Block age-restricted material&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- Hidden span to keep old links compatible. You should remove this span if you&#39;re translating the README into another language.--&gt; &#xA;&lt;p&gt;&lt;span id=&#34;updates&#34;&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation and updates&lt;/h2&gt; &#xA;&lt;p&gt;You can install NewPipe using one of the following methods:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add our custom repo to F-Droid and install it from there. The instructions are here: &lt;a href=&#34;https://newpipe.net/FAQ/tutorials/install-add-fdroid-repo/&#34;&gt;https://newpipe.net/FAQ/tutorials/install-add-fdroid-repo/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download the APK from &lt;a href=&#34;https://github.com/TeamNewPipe/NewPipe/releases&#34;&gt;GitHub Releases&lt;/a&gt; and install it.&lt;/li&gt; &#xA; &lt;li&gt;Update via F-Droid. This is the slowest method of getting updates, as F-Droid must recognize changes, build the APK itself, sign it, and then push the update to users.&lt;/li&gt; &#xA; &lt;li&gt;Build a debug APK yourself. This is the fastest way to get new features on your device, but is much more complicated, so we recommend using one of the other methods.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re interested in a specific feature or bugfix provided in a Pull Request in this repo, you can also download its APK from within the PR. Read the PR description for instructions. The great thing about PR-specific APKs is that they&#39;re installed side-by-side the official app, so you don&#39;t have to worry about losing your data or messing anything up.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We recommend method 1 for most users. APKs installed using method 1 or 2 are compatible with each other (meaning that if you installed NewPipe using either method 1 or 2, you can also update NewPipe using the other), but not with those installed using method 3. This is due to the same signing key (ours) being used for 1 and 2, but a different signing key (F-Droid&#39;s) being used for 3. Building a debug APK using method 4 excludes a key entirely. Signing keys help ensure that a user isn&#39;t tricked into installing a malicious update to an app. When using method 5, each APK is signed with a different random key supplied by GitHub Actions, so you cannot even update it. You will have to backup and restore the app data each time you wish to use a new APK.&lt;/p&gt; &#xA;&lt;p&gt;In the meanwhile, if you want to switch sources for some reason (e.g. NewPipe&#39;s core functionality breaks and F-Droid doesn&#39;t have the latest update yet), we recommend following this procedure:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Back up your data via Settings &amp;gt; Content &amp;gt; Export Database so you keep your history, subscriptions, and playlists&lt;/li&gt; &#xA; &lt;li&gt;Uninstall NewPipe&lt;/li&gt; &#xA; &lt;li&gt;Download the APK from the new source and install it&lt;/li&gt; &#xA; &lt;li&gt;Import the data from step 1 via Settings &amp;gt; Content &amp;gt; Import Database&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;b&gt;Note: when you&#39;re importing a database into the official app, always make sure that it is the one you exported &lt;em&gt;from&lt;/em&gt; the official app. If you import a database exported from an APK other than the official app, it may break things. Such an action is unsupported, and you should only do so when you&#39;re absolutely certain you know what you&#39;re doing.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Whether you have ideas, translations, design changes, code cleaning, or even major code changes, help is always welcome. The app gets better and better with each contribution, no matter how big or small! If you&#39;d like to get involved, check our &lt;a href=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/.github/CONTRIBUTING.md&#34;&gt;contribution notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;a href=&#34;https://hosted.weblate.org/engage/newpipe/&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widgets/newpipe/-/287x66-grey.png&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;If you like NewPipe, you&#39;re welcome to send a donation. We prefer Liberapay, as it is both open-source and non-profit. For further info on donating to NewPipe, please visit our &lt;a href=&#34;https://newpipe.net/donate&#34;&gt;website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://liberapay.com/TeamNewPipe/&#34;&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/2/27/Liberapay_logo_v2_white-on-yellow.svg?sanitize=true&#34; alt=&#34;Liberapay&#34; width=&#34;80px&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://liberapay.com/TeamNewPipe/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/assets/liberapay_qr_code.png&#34; alt=&#34;Visit NewPipe at liberapay.com&#34; width=&#34;100px&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://liberapay.com/TeamNewPipe/donate&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/assets/liberapay_donate_button.svg?sanitize=true&#34; alt=&#34;Donate via Liberapay&#34; height=&#34;35px&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://bitcoin.org/img/icons/logotop.svg?sanitize=true&#34; alt=&#34;Bitcoin&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/assets/bitcoin_qr_code.png&#34; alt=&#34;Bitcoin QR code&#34; width=&#34;100px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;samp&gt;16A9J59ahMRqkLSZjhYj33n9j3fMztFxnh&lt;/samp&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.bountysource.com/teams/newpipe&#34;&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/2/22/Bountysource.png/320px-Bountysource.png&#34; alt=&#34;Bountysource&#34; width=&#34;190px&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.bountysource.com/teams/newpipe&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/assets/bountysource_qr_code.png&#34; alt=&#34;Visit NewPipe at bountysource.com&#34; width=&#34;100px&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.bountysource.com/teams/newpipe/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/bountysource/team/newpipe/activity.svg?colorB=cd201f&#34; height=&#34;30px&#34; alt=&#34;Check out how many bounties you can earn.&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Privacy Policy&lt;/h2&gt; &#xA;&lt;p&gt;The NewPipe project aims to provide a private, anonymous experience for using web-based media services. Therefore, the app does not collect any data without your consent. NewPipe&#39;s privacy policy explains in detail what data is sent and stored when you send a crash report, or leave a comment in our blog. You can find the document &lt;a href=&#34;https://newpipe.net/legal/privacy/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;&lt;img src=&#34;https://www.gnu.org/graphics/gplv3-127x51.png&#34; alt=&#34;GNU GPLv3 Image&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NewPipe is Free Software: You can use, study, share, and improve it at will. Specifically you can redistribute and/or modify it under the terms of the &lt;a href=&#34;https://www.gnu.org/licenses/gpl.html&#34;&gt;GNU General Public License&lt;/a&gt; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Grt1228/chatgpt-java</title>
    <updated>2023-05-01T02:17:33Z</updated>
    <id>tag:github.com,2023-05-01:/Grt1228/chatgpt-java</id>
    <link href="https://github.com/Grt1228/chatgpt-java" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ChatGPT Java SDK支持流式输出。支持OpenAI官方所有接口。ChatGPT的Java客户端。OpenAI GPT-3.5-Turb GPT-4 Api Client for Java&lt;/p&gt;&lt;hr&gt;&lt;p&gt;it’s an “unofficial&#34; or &#34;community-maintained” library. 这是一个非官方的社区维护的库。有bug欢迎朋友们指出，互相学习。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;原创发布转载注明出处！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;开源协议：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;💬 联系我，ChatGPT相关学习交流咨询全部免费。&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;一起探讨chatgpt-java，SDK问题咨询&lt;br&gt;项目产品开发交流&lt;/th&gt; &#xA;   &lt;th&gt;群失效关注公众号恢复：chatgpt-java&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/27008803/225246389-7b452214-f3fe-4a70-bd3e-832a0ed34288.jpg&#34; width=&#34;210&#34; height=&#34;300&#34; alt=&#34;二维码&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://g-photo.oss-cn-shanghai.aliyuncs.com/hd15.jpg&#34; width=&#34;210&#34; height=&#34;210&#34; alt=&#34;二维码&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!--&lt;img src=&#34;https://user-images.githubusercontent.com/27008803/225246581-15e90f78-5438-4637-8e7d-14c68ca13b59.jpg&#34; width=&#34;210&#34; height=&#34;300&#34; alt=&#34;二维码&#34; /&gt;--&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#-%E9%A1%B9%E7%9B%AE%E7%AE%80%E4%BB%8B&#34;&gt;📖 项目简介&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#-%E7%89%B9%E6%80%A7&#34;&gt;🚩 特性&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#-%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97&#34;&gt;📑 更新日志&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B&#34;&gt;🚀 快速开始&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#%E6%96%B9%E5%BC%8F%E4%B8%80&#34;&gt;方式一&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#1%E5%AF%BC%E5%85%A5pom%E4%BE%9D%E8%B5%96&#34;&gt;1、导入pom依赖&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#2%E6%B5%81%E5%BC%8F%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B&#34;&gt;2、流式客户端使用示例：&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#%E9%BB%98%E8%AE%A4okhttpclient&#34;&gt;默认OkHttpClient&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#%E8%87%AA%E5%AE%9A%E4%B9%89okhttpclient%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B&#34;&gt;自定义OkHttpClient客户端使用示例：&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#3%E9%BB%98%E8%AE%A4%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B%E6%94%AF%E6%8C%81%E5%85%A8%E9%83%A8api&#34;&gt;3、默认客户端使用示例（支持全部API）：&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#%E9%BB%98%E8%AE%A4okhttpclient-1&#34;&gt;默认OkHttpClient&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#%E8%87%AA%E5%AE%9A%E4%B9%89okhttpclient%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B-1&#34;&gt;自定义OkHttpClient客户端使用示例：&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#%E6%96%B9%E5%BC%8F%E4%BA%8C%E4%B8%8B%E8%BD%BD%E6%BA%90%E7%A0%81%E7%9B%B4%E6%8E%A5%E8%BF%90%E8%A1%8C&#34;&gt;方式二（下载源码直接运行）&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#-qa&#34;&gt;❔ QA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#-%E5%9B%BD%E5%86%85%E8%AE%BF%E9%97%AE%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88&#34;&gt;📌 国内访问解决方案&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#-%E5%BC%80%E5%8F%91%E6%A1%88%E4%BE%8B%E6%94%B6%E9%9B%86&#34;&gt;📋 开发案例收集&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#-star-history&#34;&gt;🌟 Star History&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#-%E9%B8%A3%E8%B0%A2&#34;&gt;🙏 鸣谢&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grt1228/chatgpt-java/main/#-%E6%89%93%E8%B5%8F&#34;&gt;☕ 打赏&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;📖 项目简介&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT的Java客户端&lt;/strong&gt; OpenAI官方Api的Java SDK，可以快速接入项目使用。支持OpenAI官方全部接口，&lt;strong&gt;同时支持Tokens计算。参考文档：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/Tokens_README.md&#34;&gt;Tokens_README.md&lt;/a&gt;&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;TikToken&lt;/th&gt; &#xA;   &lt;th&gt;Chat&lt;/th&gt; &#xA;   &lt;th&gt;Completions&lt;/th&gt; &#xA;   &lt;th&gt;Images&lt;/th&gt; &#xA;   &lt;th&gt;Speech To Text&lt;/th&gt; &#xA;   &lt;th&gt;余额查询&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Token计算&lt;/td&gt; &#xA;   &lt;td&gt;GPT-3.5、4.0对话模型&lt;/td&gt; &#xA;   &lt;td&gt;GPT-3.0对话&lt;/td&gt; &#xA;   &lt;td&gt;图片模型&lt;/td&gt; &#xA;   &lt;td&gt;语音转文字，语音翻译&lt;/td&gt; &#xA;   &lt;td&gt;余额查询&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Embeddings&lt;/th&gt; &#xA;   &lt;th&gt;Files&lt;/th&gt; &#xA;   &lt;th&gt;Moderations&lt;/th&gt; &#xA;   &lt;th&gt;Fine-tune&lt;/th&gt; &#xA;   &lt;th&gt;Models&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;嵌入&lt;/td&gt; &#xA;   &lt;td&gt;自定义训练模型&lt;/td&gt; &#xA;   &lt;td&gt;文本审核，敏感词鉴别&lt;/td&gt; &#xA;   &lt;td&gt;微调&lt;/td&gt; &#xA;   &lt;td&gt;模型检索相关&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;支持流式输出：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;流式输出实现方式&lt;/th&gt; &#xA;   &lt;th&gt;小程序&lt;/th&gt; &#xA;   &lt;th&gt;安卓&lt;/th&gt; &#xA;   &lt;th&gt;ios&lt;/th&gt; &#xA;   &lt;th&gt;H5&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SSE参考：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-steam-output/raw/main/src/main/java/com/unfbx/chatgptsteamoutput/listener/OpenAISSEEventSourceListener.java&#34;&gt;OpenAISSEEventSourceListener&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;不支持&lt;/td&gt; &#xA;   &lt;td&gt;支持&lt;/td&gt; &#xA;   &lt;td&gt;支持&lt;/td&gt; &#xA;   &lt;td&gt;支持&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WebSocket参考：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-steam-output/raw/main/src/main/java/com/unfbx/chatgptsteamoutput/listener/OpenAIWebSocketEventSourceListener.java&#34;&gt;OpenAIWebSocketEventSourceListener&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;支持&lt;/td&gt; &#xA;   &lt;td&gt;支持&lt;/td&gt; &#xA;   &lt;td&gt;支持&lt;/td&gt; &#xA;   &lt;td&gt;支持&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;基于本SDK开发的Demo项目，整合Spring Boot 实现CahtGPT对话模式，思路可以参考： &lt;strong&gt;&lt;a href=&#34;https://github.com/Grt1228/chatgpt-steam-output&#34;&gt;https://github.com/Grt1228/chatgpt-steam-output&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🚩 特性&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持当key异常（失效、过期、封禁）时，自定义动态处理key 参考实现&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/main/java/com/unfbx/chatgpt/interceptor/DynamicKeyOpenAiAuthInterceptor.java&#34;&gt;DynamicKeyOpenAiAuthInterceptor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;支持当key异常时的告警处理（钉钉、飞书、email、企业微信等等需要自定义开发）参考实现&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/main/java/com/unfbx/chatgpt/interceptor/DynamicKeyOpenAiAuthInterceptor.java&#34;&gt;DynamicKeyOpenAiAuthInterceptor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;支持多种Tokens计算方式&lt;/li&gt; &#xA; &lt;li&gt;支持自定义OkhttpClient&lt;/li&gt; &#xA; &lt;li&gt;支持自定义多Apikey&lt;/li&gt; &#xA; &lt;li&gt;支持自定义ApiKey的获取策略&lt;/li&gt; &#xA; &lt;li&gt;支持余额查询&lt;/li&gt; &#xA; &lt;li&gt;支持个人账户信息查询&lt;/li&gt; &#xA; &lt;li&gt;支持GPT3、GPT3.5、GPT4.0&lt;/li&gt; &#xA; &lt;li&gt;支持全部OpenAI的Api&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;📑 更新日志&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.13 支持当key异常（失效、过期、封禁）时，自定义动态处理key，参考实现&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/main/java/com/unfbx/chatgpt/interceptor/DynamicKeyOpenAiAuthInterceptor.java&#34;&gt;DynamicKeyOpenAiAuthInterceptor&lt;/a&gt; ，支持key异常时的告警处理（钉钉、飞书、email、企业微信等等需要自定义开发）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.12 tokens计算优化、删除模型接口修改、语音接口更新支持官方最新参数&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.11 增加新的余额查询接口参考：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiClientTest.java&#34;&gt;OpenAiClientTest&lt;/a&gt; 和&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiStreamClientTest.java&#34;&gt;OpenAiStreamClientTest&lt;/a&gt; ,修复tokens计算慢的问题，&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.10 支持tokens计算：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/TikTokensTest.java&#34;&gt;TikTokensTest&lt;/a&gt; ，更多详细的资料参考文档：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/Tokens_README.md&#34;&gt;Tokens_README.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.9 支持自定义key使用策略参考：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiClientTest.java&#34;&gt;OpenAiClientTest&lt;/a&gt; 和&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiStreamClientTest.java&#34;&gt;OpenAiStreamClientTest&lt;/a&gt; ，弃用ChatGPTClient，优化Moderation接口&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.8 修改OpenAiClient和OpenAiStreamClient的自定义相关实现，超时设置，代理设置，自定义拦截器设置改为通过自定义OkHttpClient实现，将OkHttpClient交由用户自定义控制更加合理，可以实现更多的参数自定义。支持多Api Keys配置。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.7 修复反序列化报错Bug：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/issues/79&#34;&gt;https://github.com/Grt1228/chatgpt-java/issues/79&lt;/a&gt; ，Image SDK枚举值bug：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/issues/76&#34;&gt;https://github.com/Grt1228/chatgpt-java/issues/76&lt;/a&gt; ，感谢两位朋友指出：&lt;a href=&#34;https://github.com/CCc3120&#34;&gt;@CCc3120&lt;/a&gt; 、&lt;a href=&#34;https://github.com/seven-cm&#34;&gt;@seven-cm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.6 支持余额查询参考：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiClientTest.java&#34;&gt;OpenAiClientTest&lt;/a&gt; 和&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiStreamClientTest.java&#34;&gt;OpenAiStreamClientTest&lt;/a&gt; creditGrants方法,支持最新GPT-4模型，参考：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/main/java/com/unfbx/chatgpt/entity/chat/ChatCompletion.java/&#34;&gt;ChatCompletion.Model&lt;/a&gt;构建消息体传入模型即可。感谢群友提供的余额接口地址以及&lt;a href=&#34;https://github.com/PlexPt&#34;&gt;@PlexPt&lt;/a&gt; 提供的模型参数&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.5 支持自定义Api Host，使用Builder构建。参考下面的快速开始部分代码。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.4 官方最新的ChatGPT Stream模式下的Api返回值改动。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.3 支持最新的GPT-3.5-Turbo模型和Whisper-1模型，支持语音功能转文字，语音翻译。OpenAiClient和OpenAiStreamClient支持Builder构造，支持代理。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.2 支持Stream流式输出，参考：OpenAiStreamClient&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.1 支持自定义超时时间，自定义OkHttpClient拦截器，参考：OpenAiClient构造函数&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1.0.0 支持所有的OpenAI官方接口&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;🚀 快速开始&lt;/h1&gt; &#xA;&lt;p&gt;本项目支持&lt;strong&gt;默认输出&lt;/strong&gt;和&lt;strong&gt;流式输出&lt;/strong&gt;。完整SDK测试案例参考：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;SDK测试案例&lt;/th&gt; &#xA;   &lt;th&gt;Tokens测试案例&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiClientTest.java&#34;&gt;OpenAiClientTest&lt;/a&gt; 和&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiStreamClientTest.java&#34;&gt;OpenAiStreamClientTest&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tokens计算参考：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/TikTokensTest.java&#34;&gt;TikTokensTest&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;方式一&lt;/h2&gt; &#xA;&lt;h3&gt;1、导入pom依赖&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;com.unfbx&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;chatgpt-java&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;1.0.13&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2、流式客户端使用示例：&lt;/h3&gt; &#xA;&lt;p&gt;更多SDK示例参考：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiStreamClientTest.java&#34;&gt;OpenAiStreamClientTest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;默认OkHttpClient&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;public class Test {&#xA;    public static void main(String[] args) {&#xA;        OpenAiStreamClient client = OpenAiStreamClient.builder()&#xA;                .apiKey(Arrays.asList(&#34;sk-********&#34;,&#34;sk-********&#34;))&#xA;                //自定义key的获取策略：默认KeyRandomStrategy&#xA;                //.keyStrategy(new KeyRandomStrategy())&#xA;                .keyStrategy(new FirstKeyStrategy())&#xA;                //自己做了代理就传代理地址，没有可不不传&#xA;//                .apiHost(&#34;https://自己代理的服务器地址/&#34;)&#xA;                .build();&#xA;        //聊天模型：gpt-3.5&#xA;        ConsoleEventSourceListener eventSourceListener = new ConsoleEventSourceListener();&#xA;        Message message = Message.builder().role(Message.Role.USER).content(&#34;你好啊我的伙伴！&#34;).build();&#xA;        ChatCompletion chatCompletion = ChatCompletion.builder().messages(Arrays.asList(message)).build();&#xA;        client.streamChatCompletion(chatCompletion, eventSourceListener);&#xA;        CountDownLatch countDownLatch = new CountDownLatch(1);&#xA;        try {&#xA;            countDownLatch.await();&#xA;        } catch (InterruptedException e) {&#xA;            e.printStackTrace();&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;自定义OkHttpClient客户端使用示例：&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;public class Test {&#xA;    public static void main(String[] args) {&#xA;        //国内访问需要做代理，国外服务器不需要&#xA;        Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(&#34;127.0.0.1&#34;, 7890));&#xA;        HttpLoggingInterceptor httpLoggingInterceptor = new HttpLoggingInterceptor(new OpenAILogger());&#xA;        //！！！！千万别再生产或者测试环境打开BODY级别日志！！！！&#xA;        //！！！生产或者测试环境建议设置为这三种级别：NONE,BASIC,HEADERS,！！！&#xA;        httpLoggingInterceptor.setLevel(HttpLoggingInterceptor.Level.HEADERS);&#xA;        OkHttpClient okHttpClient = new OkHttpClient&#xA;                .Builder()&#xA;                .proxy(proxy)//自定义代理&#xA;                .addInterceptor(httpLoggingInterceptor)//自定义日志&#xA;                .connectTimeout(30, TimeUnit.SECONDS)//自定义超时时间&#xA;                .writeTimeout(30, TimeUnit.SECONDS)//自定义超时时间&#xA;                .readTimeout(30, TimeUnit.SECONDS)//自定义超时时间&#xA;                .build();&#xA;        OpenAiStreamClient client = OpenAiStreamClient.builder()&#xA;                .apiKey(Arrays.asList(&#34;sk-********&#34;,&#34;sk-********&#34;))&#xA;                //自定义key的获取策略：默认KeyRandomStrategy&#xA;                //.keyStrategy(new KeyRandomStrategy())&#xA;                .keyStrategy(new FirstKeyStrategy())&#xA;                .okHttpClient(okHttpClient)&#xA;                //自己做了代理就传代理地址，没有可不不传&#xA;//                .apiHost(&#34;https://自己代理的服务器地址/&#34;)&#xA;                .build();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;输出日志（text是持续输出的）：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;23:03:59.158 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI建立sse连接...&#xA;23:03:59.160 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：{&#34;id&#34;: &#34;cmpl-6pIHnOOJiiUEVMesXwxzzcSQFoZHj&#34;, &#34;object&#34;: &#34;text_completion&#34;, &#34;created&#34;: 1677683039, &#34;choices&#34;: [{&#34;text&#34;: &#34;\n&#34;, &#34;index&#34;: 0, &#34;logprobs&#34;: null, &#34;finish_reason&#34;: null}], &#34;model&#34;: &#34;text-davinci-003&#34;}&#xA;23:03:59.172 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：{&#34;id&#34;: &#34;cmpl-6pIHnOOJiiUEVMesXwxzzcSQFoZHj&#34;, &#34;object&#34;: &#34;text_completion&#34;, &#34;created&#34;: 1677683039, &#34;choices&#34;: [{&#34;text&#34;: &#34;\n&#34;, &#34;index&#34;: 0, &#34;logprobs&#34;: null, &#34;finish_reason&#34;: null}], &#34;model&#34;: &#34;text-davinci-003&#34;}&#xA;23:03:59.251 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：{&#34;id&#34;: &#34;cmpl-6pIHnOOJiiUEVMesXwxzzcSQFoZHj&#34;, &#34;object&#34;: &#34;text_completion&#34;, &#34;created&#34;: 1677683039, &#34;choices&#34;: [{&#34;text&#34;: &#34;\u5fc3&#34;, &#34;index&#34;: 0, &#34;logprobs&#34;: null, &#34;finish_reason&#34;: null}], &#34;model&#34;: &#34;text-davinci-003&#34;}&#xA;23:03:59.313 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：{&#34;id&#34;: &#34;cmpl-6pIHnOOJiiUEVMesXwxzzcSQFoZHj&#34;, &#34;object&#34;: &#34;text_completion&#34;, &#34;created&#34;: 1677683039, &#34;choices&#34;: [{&#34;text&#34;: &#34;\u60c5&#34;, &#34;index&#34;: 0, &#34;logprobs&#34;: null, &#34;finish_reason&#34;: null}], &#34;model&#34;: &#34;text-davinci-003&#34;}&#xA;23:03:59.380 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：{&#34;id&#34;: &#34;cmpl-6pIHnOOJiiUEVMesXwxzzcSQFoZHj&#34;, &#34;object&#34;: &#34;text_completion&#34;, &#34;created&#34;: 1677683039, &#34;choices&#34;: [{&#34;text&#34;: &#34;\u8212&#34;, &#34;index&#34;: 0, &#34;logprobs&#34;: null, &#34;finish_reason&#34;: null}], &#34;model&#34;: &#34;text-davinci-003&#34;}&#xA;23:03:59.439 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：{&#34;id&#34;: &#34;cmpl-6pIHnOOJiiUEVMesXwxzzcSQFoZHj&#34;, &#34;object&#34;: &#34;text_completion&#34;, &#34;created&#34;: 1677683039, &#34;choices&#34;: [{&#34;text&#34;: &#34;\u7545&#34;, &#34;index&#34;: 0, &#34;logprobs&#34;: null, &#34;finish_reason&#34;: null}], &#34;model&#34;: &#34;text-davinci-003&#34;}&#xA;23:03:59.532 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：{&#34;id&#34;: &#34;cmpl-6pIHnOOJiiUEVMesXwxzzcSQFoZHj&#34;, &#34;object&#34;: &#34;text_completion&#34;, &#34;created&#34;: 1677683039, &#34;choices&#34;: [{&#34;text&#34;: &#34;\uff0c&#34;, &#34;index&#34;: 0, &#34;logprobs&#34;: null, &#34;finish_reason&#34;: null}], &#34;model&#34;: &#34;text-davinci-003&#34;}&#xA;23:03:59.579 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：{&#34;id&#34;: &#34;cmpl-6pIHnOOJiiUEVMesXwxzzcSQFoZHj&#34;, &#34;object&#34;: &#34;text_completion&#34;, &#34;created&#34;: 1677683039, &#34;choices&#34;: [{&#34;text&#34;: &#34;\u5fc3&#34;, &#34;index&#34;: 0, &#34;logprobs&#34;: null, &#34;finish_reason&#34;: null}], &#34;model&#34;: &#34;text-davinci-003&#34;}&#xA;23:03:59.641 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：{&#34;id&#34;: &#34;cmpl-6pIHnOOJiiUEVMesXwxzzcSQFoZHj&#34;, &#34;object&#34;: &#34;text_completion&#34;, &#34;created&#34;: 1677683039, &#34;choices&#34;: [{&#34;text&#34;: &#34;\u65f7&#34;, &#34;index&#34;: 0, &#34;logprobs&#34;: null, &#34;finish_reason&#34;: null}], &#34;model&#34;: &#34;text-davinci-003&#34;}&#xA;23:03:59.673 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：{&#34;id&#34;: &#34;cmpl-6pIHnOOJiiUEVMesXwxzzcSQFoZHj&#34;, &#34;object&#34;: &#34;text_completion&#34;, &#34;created&#34;: 1677683039, &#34;choices&#34;: [{&#34;text&#34;: &#34;\u795e&#34;, &#34;index&#34;: 0, &#34;logprobs&#34;: null, &#34;finish_reason&#34;: null}], &#34;model&#34;: &#34;text-davinci-003&#34;}&#xA;23:03:59.751 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：{&#34;id&#34;: &#34;cmpl-6pIHnOOJiiUEVMesXwxzzcSQFoZHj&#34;, &#34;object&#34;: &#34;text_completion&#34;, &#34;created&#34;: 1677683039, &#34;choices&#34;: [{&#34;text&#34;: &#34;\u6021&#34;, &#34;index&#34;: 0, &#34;logprobs&#34;: null, &#34;finish_reason&#34;: null}], &#34;model&#34;: &#34;text-davinci-003&#34;}&#xA;23:03:59.782 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：{&#34;id&#34;: &#34;cmpl-6pIHnOOJiiUEVMesXwxzzcSQFoZHj&#34;, &#34;object&#34;: &#34;text_completion&#34;, &#34;created&#34;: 1677683039, &#34;choices&#34;: [{&#34;text&#34;: &#34;\u3002&#34;, &#34;index&#34;: 0, &#34;logprobs&#34;: null, &#34;finish_reason&#34;: null}], &#34;model&#34;: &#34;text-davinci-003&#34;}&#xA;23:03:59.815 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据：[DONE]&#xA;23:03:59.815 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI返回数据结束了&#xA;23:03:59.815 [省略无效信息] INFO com.unfbx.chatgpt.sse.ConsoleEventSourceListener - OpenAI关闭sse连接...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3、默认客户端使用示例（支持全部API）：&lt;/h3&gt; &#xA;&lt;p&gt;更多SDK示例参考：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiClientTest.java&#34;&gt;OpenAiClientTest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;默认OkHttpClient&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;public class Test {&#xA;    public static void main(String[] args) {&#xA;        OpenAiClient openAiClient = OpenAiClient.builder()&#xA;                .apiKey(Arrays.asList(&#34;sk-********&#34;,&#34;sk-********&#34;))&#xA;                //自定义key的获取策略：默认KeyRandomStrategy&#xA;                //.keyStrategy(new KeyRandomStrategy())&#xA;                .keyStrategy(new FirstKeyStrategy())&#xA;                //自己做了代理就传代理地址，没有可不不传&#xA;//                .apiHost(&#34;https://自己代理的服务器地址/&#34;)&#xA;                .build();&#xA;                //聊天模型：gpt-3.5&#xA;        Message message = Message.builder().role(Message.Role.USER).content(&#34;你好啊我的伙伴！&#34;).build();&#xA;        ChatCompletion chatCompletion = ChatCompletion.builder().messages(Arrays.asList(message)).build();&#xA;        ChatCompletionResponse chatCompletionResponse = openAiClient.chatCompletion(chatCompletion);&#xA;        chatCompletionResponse.getChoices().forEach(e -&amp;gt; {&#xA;            System.out.println(e.getMessage());&#xA;        });&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;自定义OkHttpClient客户端使用示例：&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;public class Test {&#xA;    public static void main(String[] args) {&#xA;        //国内访问需要做代理，国外服务器不需要&#xA;        Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(&#34;127.0.0.1&#34;, 7890));&#xA;        HttpLoggingInterceptor httpLoggingInterceptor = new HttpLoggingInterceptor(new OpenAILogger());&#xA;        //！！！！千万别再生产或者测试环境打开BODY级别日志！！！！&#xA;        //！！！生产或者测试环境建议设置为这三种级别：NONE,BASIC,HEADERS,！！！&#xA;        httpLoggingInterceptor.setLevel(HttpLoggingInterceptor.Level.HEADERS);&#xA;        OkHttpClient okHttpClient = new OkHttpClient&#xA;                .Builder()&#xA;                .proxy(proxy)//自定义代理&#xA;                .addInterceptor(httpLoggingInterceptor)//自定义日志输出&#xA;                .addInterceptor(new OpenAiResponseInterceptor())//自定义返回值拦截&#xA;                .connectTimeout(10, TimeUnit.SECONDS)//自定义超时时间&#xA;                .writeTimeout(30, TimeUnit.SECONDS)//自定义超时时间&#xA;                .readTimeout(30, TimeUnit.SECONDS)//自定义超时时间&#xA;                .build();&#xA;        //构建客户端&#xA;        OpenAiClient openAiClient = OpenAiClient.builder()&#xA;                .apiKey(Arrays.asList(&#34;sk-********&#34;,&#34;sk-********&#34;))&#xA;                //自定义key的获取策略：默认KeyRandomStrategy&#xA;                //.keyStrategy(new KeyRandomStrategy())&#xA;                .keyStrategy(new FirstKeyStrategy())&#xA;                .okHttpClient(okHttpClient)&#xA;                //自己做了代理就传代理地址，没有可不不传&#xA;//                .apiHost(&#34;https://自己代理的服务器地址/&#34;)&#xA;                .build();&#xA;                //聊天模型：gpt-3.5&#xA;        Message message = Message.builder().role(Message.Role.USER).content(&#34;你好啊我的伙伴！&#34;).build();&#xA;        ChatCompletion chatCompletion = ChatCompletion.builder().messages(Arrays.asList(message)).build();&#xA;        ChatCompletionResponse chatCompletionResponse = openAiClient.chatCompletion(chatCompletion);&#xA;        chatCompletionResponse.getChoices().forEach(e -&amp;gt; {&#xA;            System.out.println(e.getMessage());&#xA;        });&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;方式二（下载源码直接运行）&lt;/h2&gt; &#xA;&lt;p&gt;下载源码打包&lt;/p&gt; &#xA;&lt;h1&gt;❔ QA&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Q&lt;/th&gt; &#xA;   &lt;th&gt;A&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;如何实现连续对话？&lt;/td&gt; &#xA;   &lt;td&gt;issues：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/issues/8&#34;&gt;https://github.com/Grt1228/chatgpt-java/issues/8&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;如何实现流式输出？&lt;/td&gt; &#xA;   &lt;td&gt;升级1.0.2版本，参考源码：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiStreamClientTest.java/&#34;&gt;OpenAiStreamClientTest&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;如何整合SpringBoot实现流式输出的Api接口？&lt;/td&gt; &#xA;   &lt;td&gt;参考另外一个项目：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-steam-output&#34;&gt;chatgpt-steam-output&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;最新版GPT-3.5-TURBO是否支持？&lt;/td&gt; &#xA;   &lt;td&gt;升级1.0.3 已经支持ChatCompletion, 参考测试案例：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiStreamClientTest.java/&#34;&gt;OpenAiStreamClientTest&lt;/a&gt; 和&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiClientTest.java/&#34;&gt;OpenAiStreamClientTest&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;最新版语言转文字和语言翻译是否支持？&lt;/td&gt; &#xA;   &lt;td&gt;升级1.0.3 已经支持whisper参考测试案例：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiStreamClientTest.java/&#34;&gt;OpenAiStreamClientTest&lt;/a&gt; 和&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/raw/main/src/test/java/com/unfbx/chatgpt/OpenAiClientTest.java/&#34;&gt;OpenAiStreamClientTest&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;📌 国内访问解决方案&lt;/h1&gt; &#xA;&lt;p&gt;国内访问可以看下这个解决方案：&lt;strong&gt;&lt;a href=&#34;https://github.com/noobnooc/noobnooc/discussions/9&#34;&gt;https://github.com/noobnooc/noobnooc/discussions/9&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;📋 开发案例收集&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;基于本SDK开发案例收集&lt;/strong&gt;：&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java/issues/87&#34;&gt;chatgpt-java SDK案例征集&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🌟 Star History&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#Grt1228/chatgpt-java&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Grt1228/chatgpt-java&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🙏 鸣谢&lt;/h1&gt; &#xA;&lt;p&gt;站在巨人的肩膀：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenAi：&lt;a href=&#34;https://openai.com/&#34;&gt;https://openai.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/knuddelsgmbh&#34;&gt;knuddelsgmbh&lt;/a&gt; 的&lt;a href=&#34;https://github.com/knuddelsgmbh/jtokkit&#34;&gt;jtokkit&lt;/a&gt; 的开源计算算法。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;☕ 打赏&lt;/h1&gt; &#xA;&lt;p&gt;如果项目对你有帮助，可以选择请我喝杯奶茶&lt;/p&gt; &#xA;&lt;p&gt;&lt;img width=&#34;180&#34; alt=&#34;微信截图_20230405222411&#34; src=&#34;https://user-images.githubusercontent.com/27008803/230111508-3179cf30-e128-4b2e-9645-157266c491ce.png&#34;&gt; &lt;img width=&#34;164&#34; alt=&#34;微信截图_20230405222357&#34; src=&#34;https://user-images.githubusercontent.com/27008803/230111525-322f5036-d06d-46bb-94d1-db8ce9ed2adf.png&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>